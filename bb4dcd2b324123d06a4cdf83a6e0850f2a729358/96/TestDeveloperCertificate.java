// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.security.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeveloperCertificate.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeveloperCertificate {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("7029372c-53f4-42f8-ab4c-7a59608bd8ae",
                                                                                  "62c0918c-eb50-45a7-a256-7183e2cb39fc",
                                                                                  new Date(1567417604494L),
                                                                                  "a6648a04-1d0b-4aac-898e-c31c939ca8e5",
                                                                                  "0a533a64-34ec-46b7-8b23-b86e48ba27bb",
                                                                                  "46b6214f-b79b-474f-b6ff-79606b17e442",
                                                                                  "a1241633-3fad-4abb-971f-c489bebf7c4d",
                                                                                  "955893fa-9779-4d5f-b044-57424fb467cb");
            DeveloperCertificate developercertificate2 = developercertificate1.clone();
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("32b2031f-e41f-468e-9562-cf13b4e2b1b9",
                                                                                  "87000857-07ec-447e-9dbd-bf1dddcd573c",
                                                                                  new Date(1567417602320L),
                                                                                  "e4803ed1-fe26-4b4f-b545-0ac94a215693",
                                                                                  "f13182f5-7fef-448c-b306-746d6a7523e7",
                                                                                  "6168e2a6-ed83-46f1-9f4a-6dd76b4992ca",
                                                                                  "61092864-ce64-4e56-adff-efd16cf2294a",
                                                                                  "793f568d-25a5-439e-9b37-33be58d6c929");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("32b2031f-e41f-468e-9562-cf13b4e2b1b9",
                                                                                  "87000857-07ec-447e-9dbd-bf1dddcd573c",
                                                                                  new Date(1567417602320L),
                                                                                  "e4803ed1-fe26-4b4f-b545-0ac94a215693",
                                                                                  "f13182f5-7fef-448c-b306-746d6a7523e7",
                                                                                  "6168e2a6-ed83-46f1-9f4a-6dd76b4992ca",
                                                                                  "61092864-ce64-4e56-adff-efd16cf2294a",
                                                                                  "793f568d-25a5-439e-9b37-33be58d6c929");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2.hashCode(), developercertificate1.hashCode());
            int hashCode = developercertificate1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, developercertificate1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeveloperCertificate developercertificate = new DeveloperCertificate("bef5840f-7032-4f02-b8d0-6cf2ba3e5edb",
                                                                             "db2bdc3c-fbad-47e2-b0d2-fe7a9915caf5",
                                                                             new Date(1567417602899L),
                                                                             "d6fb27b0-269f-4269-85e6-1e3626935d60",
                                                                             "e6cb98c0-ebab-4073-a09d-3645170f4086",
                                                                             "7b5a0133-922f-4895-b55c-fb74dc9c022d",
                                                                             "03fb0b2c-a229-41b4-b37e-02cdaadcb0b0",
                                                                             "9bf5d1e0-361b-41a8-9f4f-1d78d086f540");
        assertTrue(developercertificate.isValid());
        DeveloperCertificate developercertificateInvalid = new DeveloperCertificate("9a7b2a46-2246-4309-9d22-9afa8c3a5755",
                                                                                    "b98fa0af-b104-4964-b83d-ffc9468790d4",
                                                                                    new Date(1567417603957L),
                                                                                    "aa0b6088-fb7e-4a08-bcc3-44c5835705d7",
                                                                                    "97693491-823f-46e1-b7b5-9e5aed925979",
                                                                                    "9f3186be-21d9-421d-96b1-ac81ca5c1f1b",
                                                                                    null,
                                                                                    "f8239062-efad-4e39-b4af-9a374eb48b83");
        assertFalse(developercertificateInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("2913eacf-6591-4992-aac2-d6850bb9b142",
                                                                                  "3b3cc9d2-c72c-4bc4-935f-29bd270c8ad0",
                                                                                  new Date(1567417609525L),
                                                                                  "b4610345-fe9c-45c3-ac2a-1c68c70b4ef2",
                                                                                  "6b9ef6f4-8657-4b7c-abce-2e3f6e7a8761",
                                                                                  "d494bd24-4bc4-4326-bbb0-5122d9b9716e",
                                                                                  "6261df42-4a7f-4f79-b349-451e63650c8b",
                                                                                  "9ea711c4-7c8e-4347-a2b4-ad6e4dcf452d");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("2913eacf-6591-4992-aac2-d6850bb9b142",
                                                                                  "3b3cc9d2-c72c-4bc4-935f-29bd270c8ad0",
                                                                                  new Date(1567417609525L),
                                                                                  "b4610345-fe9c-45c3-ac2a-1c68c70b4ef2",
                                                                                  "6b9ef6f4-8657-4b7c-abce-2e3f6e7a8761",
                                                                                  "d494bd24-4bc4-4326-bbb0-5122d9b9716e",
                                                                                  "6261df42-4a7f-4f79-b349-451e63650c8b",
                                                                                  "9ea711c4-7c8e-4347-a2b4-ad6e4dcf452d");
            DeveloperCertificate developercertificate3 = new DeveloperCertificate("48e12b72-ea24-47c3-b274-54f52cc22098",
                                                                                  "2207ad0a-ae62-4c69-bffb-cb98b8fcf99f",
                                                                                  new Date(1567417608004L),
                                                                                  "47206ebb-ec22-4e3e-ae24-e1ed29e3bb7f",
                                                                                  "5015f3a7-8596-4ce4-9ab2-0175f8e246cd",
                                                                                  "a04456a9-f51c-44d6-9807-565efc20e0eb",
                                                                                  "7ab25032-5543-4a63-a819-b4ffeb8bc9c4",
                                                                                  "6e826bd7-ba40-45da-b0b6-35ebdaca25a0");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotNull(developercertificate3);
            assertNotSame(developercertificate2, developercertificate1);
            assertNotSame(developercertificate3, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate1, developercertificate2);
            assertEquals(developercertificate1, developercertificate1);
            assertFalse(developercertificate1.equals(null));
            assertNotEquals(developercertificate3, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
