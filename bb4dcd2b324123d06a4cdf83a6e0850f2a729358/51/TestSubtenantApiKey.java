// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantApiKey.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantApiKey {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("5aac302d4dc51de8d52d8348d01b06c5",
                                                                   new Date(1567417608967L), 22, null,
                                                                   "5aac302d4dc51de8d52d8348d01b06c5",
                                                                   "39ceb58c-10d6-49a6-909e-24b72ea8ecab", -91,
                                                                   "d62c7a8f-cb08-4098-9fee-bd29be364d0a",
                                                                   "5aac302d4dc51de8d52d8348d01b06c5",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1567417607823L));
            SubtenantApiKey subtenantapikey2 = subtenantapikey1.clone();
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("5aac302d4dc51de8d52d8348d01b06c5",
                                                                   new Date(1567417604427L), -23, null,
                                                                   "5aac302d4dc51de8d52d8348d01b06c5",
                                                                   "ce98dcaf-a78d-4998-a378-a8ddf2bbcaba", -78,
                                                                   "7d2f200b-dcb7-4149-b2b5-7de84739cfa1",
                                                                   "5aac302d4dc51de8d52d8348d01b06c5",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1567417605246L));
            SubtenantApiKey subtenantapikey2 = new SubtenantApiKey("5aac302d4dc51de8d52d8348d01b06c5",
                                                                   new Date(1567417604427L), -23, null,
                                                                   "5aac302d4dc51de8d52d8348d01b06c5",
                                                                   "ce98dcaf-a78d-4998-a378-a8ddf2bbcaba", -78,
                                                                   "7d2f200b-dcb7-4149-b2b5-7de84739cfa1",
                                                                   "5aac302d4dc51de8d52d8348d01b06c5",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1567417605246L));
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2.hashCode(), subtenantapikey1.hashCode());
            int hashCode = subtenantapikey1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantapikey1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantApiKey subtenantapikey = new SubtenantApiKey("5aac302d4dc51de8d52d8348d01b06c5",
                                                              new Date(1567417607365L), -62, null,
                                                              "5aac302d4dc51de8d52d8348d01b06c5",
                                                              "ee148d2f-b9c1-4e7a-9a88-864649300edc", -17,
                                                              "f3e1748e-6fe2-4920-9b76-596e18aea984",
                                                              "5aac302d4dc51de8d52d8348d01b06c5",
                                                              SubtenantApiKeyStatus.getDefault(),
                                                              new Date(1567417607429L));
        assertTrue(subtenantapikey.isValid());
        SubtenantApiKey subtenantapikeyInvalid = new SubtenantApiKey(null, new Date(1567417601292L), -88, null,
                                                                     "@77_7\u0015î?š\u00037\u0002Aâš»7\u000e_Z7LTî²Ÿ7-;\u000377!<\u0004+Fï­¸7?\u000f_9B\u001bîš‰æ‹¨\u0011\u0014\u0014á¬¾V\b7]>:7ãš§ì¡Ž\f\u0001\u0011`R)7æ»¹\u0019",
                                                                     "5274fe03-e929-4f3c-978d-c39db4d49de1", -102, null,
                                                                     "@77_7\u0015î?š\u00037\u0002Aâš»7\u000e_Z7LTî²Ÿ7-;\u000377!<\u0004+Fï­¸7?\u000f_9B\u001bîš‰æ‹¨\u0011\u0014\u0014á¬¾V\b7]>:7ãš§ì¡Ž\f\u0001\u0011`R)7æ»¹\u0019",
                                                                     SubtenantApiKeyStatus.getDefault(),
                                                                     new Date(1567417608846L));
        assertFalse(subtenantapikeyInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("5aac302d4dc51de8d52d8348d01b06c5",
                                                                   new Date(1567417609549L), -69, null,
                                                                   "5aac302d4dc51de8d52d8348d01b06c5",
                                                                   "a29a1d68-34fe-4ac3-b257-abd000406fea", -76,
                                                                   "a908fdd3-6813-4e12-97c7-a07fbf2f0aa9",
                                                                   "5aac302d4dc51de8d52d8348d01b06c5",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1567417602898L));
            SubtenantApiKey subtenantapikey2 = new SubtenantApiKey("5aac302d4dc51de8d52d8348d01b06c5",
                                                                   new Date(1567417609549L), -69, null,
                                                                   "5aac302d4dc51de8d52d8348d01b06c5",
                                                                   "a29a1d68-34fe-4ac3-b257-abd000406fea", -76,
                                                                   "a908fdd3-6813-4e12-97c7-a07fbf2f0aa9",
                                                                   "5aac302d4dc51de8d52d8348d01b06c5",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1567417602898L));
            SubtenantApiKey subtenantapikey3 = new SubtenantApiKey("5aac302d4dc51de8d52d8348d01b06c5",
                                                                   new Date(1567417601970L), 30, null,
                                                                   "5aac302d4dc51de8d52d8348d01b06c5",
                                                                   "3b8bf3bc-8103-42e5-a87e-6a836a15c287", 100,
                                                                   "13e57f8e-133d-4f10-9000-176a4e8b1d19",
                                                                   "5aac302d4dc51de8d52d8348d01b06c5",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1567417603827L));
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotNull(subtenantapikey3);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertNotSame(subtenantapikey3, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey1, subtenantapikey2);
            assertEquals(subtenantapikey1, subtenantapikey1);
            assertFalse(subtenantapikey1.equals(null));
            assertNotEquals(subtenantapikey3, subtenantapikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
