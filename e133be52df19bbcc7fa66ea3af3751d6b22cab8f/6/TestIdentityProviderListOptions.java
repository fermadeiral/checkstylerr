// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import com.arm.mbed.cloud.sdk.common.Order;
import org.junit.Test;

/**
 * Unit tests for Model IdentityProviderListOptions.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestIdentityProviderListOptions {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            IdentityProviderListOptions identityproviderlistoptions1 = new IdentityProviderListOptions(Integer.valueOf(32),
                                                                                                       Long.valueOf(126),
                                                                                                       Order.getDefault(),
                                                                                                       "ff96ce8b-a1f6-4a4f-b58b-3ce84e48d530",
                                                                                                       null, null);
            IdentityProviderListOptions identityproviderlistoptions2 = identityproviderlistoptions1.clone();
            assertNotNull(identityproviderlistoptions1);
            assertNotNull(identityproviderlistoptions2);
            assertNotSame(identityproviderlistoptions2, identityproviderlistoptions1);
            assertEquals(identityproviderlistoptions2, identityproviderlistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            IdentityProviderListOptions identityproviderlistoptions1 = new IdentityProviderListOptions(Integer.valueOf(-104),
                                                                                                       Long.valueOf(101),
                                                                                                       Order.getDefault(),
                                                                                                       "b9d02487-86b9-43eb-b4a8-409c434ce34d",
                                                                                                       null, null);
            IdentityProviderListOptions identityproviderlistoptions2 = new IdentityProviderListOptions(Integer.valueOf(-104),
                                                                                                       Long.valueOf(101),
                                                                                                       Order.getDefault(),
                                                                                                       "b9d02487-86b9-43eb-b4a8-409c434ce34d",
                                                                                                       null, null);
            assertNotNull(identityproviderlistoptions1);
            assertNotNull(identityproviderlistoptions2);
            assertNotSame(identityproviderlistoptions2, identityproviderlistoptions1);
            assertEquals(identityproviderlistoptions2, identityproviderlistoptions1);
            assertEquals(identityproviderlistoptions2.hashCode(), identityproviderlistoptions1.hashCode());
            int hashCode = identityproviderlistoptions1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, identityproviderlistoptions1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            IdentityProviderListOptions identityproviderlistoptions1 = new IdentityProviderListOptions(Integer.valueOf(41),
                                                                                                       Long.valueOf(-97),
                                                                                                       Order.getDefault(),
                                                                                                       "4239e087-141b-469a-b1be-f722b89b1359",
                                                                                                       null, null);
            IdentityProviderListOptions identityproviderlistoptions2 = new IdentityProviderListOptions(Integer.valueOf(41),
                                                                                                       Long.valueOf(-97),
                                                                                                       Order.getDefault(),
                                                                                                       "4239e087-141b-469a-b1be-f722b89b1359",
                                                                                                       null, null);
            IdentityProviderListOptions identityproviderlistoptions3 = new IdentityProviderListOptions(Integer.valueOf(-28),
                                                                                                       Long.valueOf(-31),
                                                                                                       Order.getDefault(),
                                                                                                       "65dc9b3e-1b38-48a6-aa89-420f37da8437",
                                                                                                       null, null);
            assertNotNull(identityproviderlistoptions1);
            assertNotNull(identityproviderlistoptions2);
            assertNotNull(identityproviderlistoptions3);
            assertNotSame(identityproviderlistoptions2, identityproviderlistoptions1);
            assertNotSame(identityproviderlistoptions3, identityproviderlistoptions1);
            assertEquals(identityproviderlistoptions2, identityproviderlistoptions1);
            assertEquals(identityproviderlistoptions2, identityproviderlistoptions1);
            assertEquals(identityproviderlistoptions1, identityproviderlistoptions2);
            assertEquals(identityproviderlistoptions1, identityproviderlistoptions1);
            assertFalse(identityproviderlistoptions1.equals(null));
            assertNotEquals(identityproviderlistoptions3, identityproviderlistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
