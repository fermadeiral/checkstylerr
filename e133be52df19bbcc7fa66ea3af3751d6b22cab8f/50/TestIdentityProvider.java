// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model IdentityProvider.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestIdentityProvider {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            IdentityProvider identityprovider1 = new IdentityProvider("4f267f967f7d1f5e3fa0d6abaccdb4bf",
                                                                      new Date(1574704662460L),
                                                                      "c68bc645-f9b9-4fe2-adcc-875f264cb31b",
                                                                      "4f267f967f7d1f5e3fa0d6abaccdb4bf",
                                                                      IdentityProviderType.getDefault(), true,
                                                                      "a0557d65-1b87-4515-bd90-dd0a4a514f75", null,
                                                                      IdentityProviderStatus.getDefault(),
                                                                      new Date(1574704665151L));
            IdentityProvider identityprovider2 = identityprovider1.clone();
            assertNotNull(identityprovider1);
            assertNotNull(identityprovider2);
            assertNotSame(identityprovider2, identityprovider1);
            assertEquals(identityprovider2, identityprovider1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            IdentityProvider identityprovider1 = new IdentityProvider("4f267f967f7d1f5e3fa0d6abaccdb4bf",
                                                                      new Date(1574704670047L),
                                                                      "dee1e9ea-5e94-4495-9993-560ab81646f4",
                                                                      "4f267f967f7d1f5e3fa0d6abaccdb4bf",
                                                                      IdentityProviderType.getDefault(), true,
                                                                      "05c97109-f3d9-4c5a-be23-b8003e1f11d6", null,
                                                                      IdentityProviderStatus.getDefault(),
                                                                      new Date(1574704670086L));
            IdentityProvider identityprovider2 = new IdentityProvider("4f267f967f7d1f5e3fa0d6abaccdb4bf",
                                                                      new Date(1574704670047L),
                                                                      "dee1e9ea-5e94-4495-9993-560ab81646f4",
                                                                      "4f267f967f7d1f5e3fa0d6abaccdb4bf",
                                                                      IdentityProviderType.getDefault(), true,
                                                                      "05c97109-f3d9-4c5a-be23-b8003e1f11d6", null,
                                                                      IdentityProviderStatus.getDefault(),
                                                                      new Date(1574704670086L));
            assertNotNull(identityprovider1);
            assertNotNull(identityprovider2);
            assertNotSame(identityprovider2, identityprovider1);
            assertEquals(identityprovider2, identityprovider1);
            assertEquals(identityprovider2.hashCode(), identityprovider1.hashCode());
            int hashCode = identityprovider1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, identityprovider1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        IdentityProvider identityprovider = new IdentityProvider("4f267f967f7d1f5e3fa0d6abaccdb4bf",
                                                                 new Date(1574704661609L),
                                                                 "dbf91603-caee-43dd-82a4-02c7a2f4a589",
                                                                 "4f267f967f7d1f5e3fa0d6abaccdb4bf",
                                                                 IdentityProviderType.getDefault(), true,
                                                                 "0f55bd53-ce95-44d8-b3be-c71ab2747f38", null,
                                                                 IdentityProviderStatus.getDefault(),
                                                                 new Date(1574704668016L));
        assertTrue(identityprovider.isValid());
        IdentityProvider identityproviderInvalid = new IdentityProvider("8â?ˆè¡ŒBC8GHç§™%8â­?\u0004R88í?º8å°¸8EUT\\\\+R\u00138è¥¯\u0007B\u001eå—´àµ´;N8î¶¤8ã¹Œ\u000eï’›=á–±88Tî¬·8å¡›8?888ïŽ§å°¼8çŽµ/W?K",
                                                                        new Date(1574704668800L),
                                                                        "0609be55-5ee8-49af-8e08-dc4cf564d79547a13095-4915-42c3-8723-2923a583b0d701e44bb8-e3f4-42e9-a3aa-e8c48c1c15c8c9855d53-20a7-4946-bfa2-1eed17262e9858b964a6-44f1-4377-a6a2-aabc8715790a1ce5c56c-1715-4ce7-b9c8-8ca7269e24b65f87a0e2-6c8b-42af-b70e-1f8a133ca22ac7ce489b-acb5-4d56-993f-e36ceb9381b8ebee7048-508b-493f-b8de-6d2d68c3670bbaceb0c0-a0e5-4fd7-a376-10166beca6a95ab28dbd-6b7a-484e-bfd0-827e344f62f70ce493c3-52f1-49fc-95fa-935b4f689a5063745d56-5713-4eda-8f83-135f0659de8b204d1884-1514-4542-a5bf-36c6f23bd311",
                                                                        "8â?ˆè¡ŒBC8GHç§™%8â­?\u0004R88í?º8å°¸8EUT\\\\+R\u00138è¥¯\u0007B\u001eå—´àµ´;N8î¶¤8ã¹Œ\u000eï’›=á–±88Tî¬·8å¡›8?888ïŽ§å°¼8çŽµ/W?K",
                                                                        null, true, null, null,
                                                                        IdentityProviderStatus.getDefault(),
                                                                        new Date(1574704668537L));
        assertFalse(identityproviderInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            IdentityProvider identityprovider1 = new IdentityProvider("4f267f967f7d1f5e3fa0d6abaccdb4bf",
                                                                      new Date(1574704662562L),
                                                                      "2eb18fe9-56fe-4591-b333-5867fc2c35fb",
                                                                      "4f267f967f7d1f5e3fa0d6abaccdb4bf",
                                                                      IdentityProviderType.getDefault(), false,
                                                                      "7a301106-a9ad-413e-bfeb-d7d3b078e5ef", null,
                                                                      IdentityProviderStatus.getDefault(),
                                                                      new Date(1574704664949L));
            IdentityProvider identityprovider2 = new IdentityProvider("4f267f967f7d1f5e3fa0d6abaccdb4bf",
                                                                      new Date(1574704662562L),
                                                                      "2eb18fe9-56fe-4591-b333-5867fc2c35fb",
                                                                      "4f267f967f7d1f5e3fa0d6abaccdb4bf",
                                                                      IdentityProviderType.getDefault(), false,
                                                                      "7a301106-a9ad-413e-bfeb-d7d3b078e5ef", null,
                                                                      IdentityProviderStatus.getDefault(),
                                                                      new Date(1574704664949L));
            IdentityProvider identityprovider3 = new IdentityProvider("4f267f967f7d1f5e3fa0d6abaccdb4bf",
                                                                      new Date(1574704664680L),
                                                                      "e04e7cad-0418-4c9a-ba85-a07bdc2bd03d",
                                                                      "4f267f967f7d1f5e3fa0d6abaccdb4bf",
                                                                      IdentityProviderType.getDefault(), false,
                                                                      "745de16a-270a-4dd6-856c-32af31254de2", null,
                                                                      IdentityProviderStatus.getDefault(),
                                                                      new Date(1574704661242L));
            assertNotNull(identityprovider1);
            assertNotNull(identityprovider2);
            assertNotNull(identityprovider3);
            assertNotSame(identityprovider2, identityprovider1);
            assertNotSame(identityprovider3, identityprovider1);
            assertEquals(identityprovider2, identityprovider1);
            assertEquals(identityprovider2, identityprovider1);
            assertEquals(identityprovider1, identityprovider2);
            assertEquals(identityprovider1, identityprovider1);
            assertFalse(identityprovider1.equals(null));
            assertNotEquals(identityprovider3, identityprovider1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
