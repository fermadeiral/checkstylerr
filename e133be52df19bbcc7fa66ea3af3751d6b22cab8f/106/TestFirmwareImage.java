// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.deviceupdate.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model FirmwareImage.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestFirmwareImage {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            FirmwareImage firmwareimage1 = new FirmwareImage(new Date(1574704665692L),
                                                             "0ff55cac-bcd8-4758-ae41-e65813cfed78", 110,
                                                             "9480fa4d-e9b1-44f0-b88a-e4a16a4c764a",
                                                             "d6bb1473-2289-4c22-a4f3-71968c4d9938",
                                                             "a6d3850f-008b-402f-b0ac-c2ef937163cd",
                                                             "aa244565-5868-405f-87be-79cd597fa016",
                                                             new Date(1574704669900L));
            FirmwareImage firmwareimage2 = firmwareimage1.clone();
            assertNotNull(firmwareimage1);
            assertNotNull(firmwareimage2);
            assertNotSame(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage2, firmwareimage1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            FirmwareImage firmwareimage1 = new FirmwareImage(new Date(1574704665573L),
                                                             "b90b13f3-008b-40d4-a787-150a6ff9ee68", 2,
                                                             "a12d53be-ae55-479f-95aa-271eb6c68730",
                                                             "4140d395-2414-477c-ab6e-50f689ea72e6",
                                                             "77a3d54b-dabb-4d31-9342-8b4ed4be9f96",
                                                             "a1725a6f-603c-4a0c-977e-5f8ee7b9b63b",
                                                             new Date(1574704667675L));
            FirmwareImage firmwareimage2 = new FirmwareImage(new Date(1574704665573L),
                                                             "b90b13f3-008b-40d4-a787-150a6ff9ee68", 2,
                                                             "a12d53be-ae55-479f-95aa-271eb6c68730",
                                                             "4140d395-2414-477c-ab6e-50f689ea72e6",
                                                             "77a3d54b-dabb-4d31-9342-8b4ed4be9f96",
                                                             "a1725a6f-603c-4a0c-977e-5f8ee7b9b63b",
                                                             new Date(1574704667675L));
            assertNotNull(firmwareimage1);
            assertNotNull(firmwareimage2);
            assertNotSame(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage2.hashCode(), firmwareimage1.hashCode());
            int hashCode = firmwareimage1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, firmwareimage1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        FirmwareImage firmwareimage = new FirmwareImage(new Date(1574704670324L),
                                                        "8dd44b1a-cf33-4998-a114-c17f8a7af118", -100,
                                                        "d3e4cbf6-2e2f-475a-b58b-ef6092e96957",
                                                        "166a594a-8161-4b92-bde9-ce1236c462dc",
                                                        "6937ec60-d04b-4d95-9135-a954d4add49e",
                                                        "9dcd2c34-232a-4d0c-ae33-0da2a3462dea",
                                                        new Date(1574704661471L));
        assertTrue(firmwareimage.isValid());
        FirmwareImage firmwareimageInvalid = new FirmwareImage(new Date(1574704668399L),
                                                               "26091064-306e-471d-b3ab-7e065d3caed0", -59,
                                                               "c0008dde-1a76-42da-aaf1-1ac138e7d386",
                                                               "f8d24054-f706-4a24-9f19-3bfa06efd6875cdd5c14-7e5e-4159-bec5-d93583192b7831eb9f38-18cf-4fe7-982c-0ff0c98c147e76432b78-ae20-4bef-bf64-951107824bd517a4aa7b-5f8f-4b9b-9e50-fc1b934c7bc568a7a25a-3b4c-46a3-acde-9ad28131a2def7a2d85a-de36-4733-9066-03e56bdf8d42723aaa0e-d83d-4b10-8d7f-de1f13f625562211b574-4445-4b52-b077-746572a7a9175f9d1554-b825-415a-9f35-376c13f2b481c79f62ab-9fcd-4da7-b9f6-25d95d33c51e2fe1179d-ab72-4fad-89c8-4a242278798c72a113c2-4460-4425-8ecb-018d9a30225680008d16-1b50-4571-be39-c82d76930835e491739e-cee0-4e21-89ab-84c040678288f6fca4f0-06a0-43ea-a16c-40037fbcb234999f6d92-aabf-45d6-a682-bdc1f2d3bca5a677b518-ff86-4d7c-a327-eeaed55db5b3fa140536-9cfa-4ffe-8f89-ea867d6e4f10e1163775-d512-4edb-83d6-66159e8e6f47510a8201-4d73-4edf-b40c-acbc43fdb27388dea529-a44b-47ca-add9-2089ba263610da7643c6-2294-4a65-9d9b-759b639583c1984a8cec-4952-4e8d-b988-2ede22e1ccd3b495e0f6-1739-44c8-840e-2ff103ab5af4ea841046-ad55-473b-b46b-34be99a64f24ffe7789b-1db6-401a-b9c7-9c1eb87fdf2e4e560ba9-2f6b-40f2-a1bf-45205e69b773f60fa391-2dc1-4a3d-8953-ed713a1ce97bafa45490-f998-49ab-981b-c3baba9b2e5d23717e3d-c704-4731-b226-9b8d19c7b1bc285d30a7-d52b-4cbb-b753-272ea00f01f4520f355f-849d-4cea-89e5-8f64f28290e92d6532ca-bc66-4463-b869-1af955a767c2b8043500-071e-4963-aace-690d5d0455194c6feb27-d3ef-4e22-9b82-209c8f4e3c2be8747ffa-bc3b-4ce7-9232-60446ecca3625e20903b-2814-4fb5-a8dd-04f58f6048c3db905e13-45ae-4f9a-a3c4-0f6340dd8218cc65283b-60d7-4ed8-8646-92459bb0fa7f2b2db74a-bace-45d8-bc8b-dcb81caaf415e0ebe06b-5494-475c-9168-c7699350e41e2651096b-b03d-48a6-a76c-d883b27568dce1730034-1bec-44c8-9d74-9b24860d4dd958e5c339-0955-4fb3-91ba-c05bc559ed3281de942a-b3fb-446b-a627-a50c65c8865eb72a354b-fe68-4fe9-a8dc-62d78410b60bc905f48d-9254-462d-9e99-9acfd03eb8f3312b70bf-65af-4942-be3b-759d03447923f97d8b43-5be5-44c4-9b62-231c405f3ffc739d84b4-e11d-4d93-9d91-bd19df14695c17af192e-f900-4341-bd92-67fa097b8e98e63900e8-d9de-4cc1-a4be-78a27fc24b48111b73f7-39ec-4da6-8c17-7355838115d6d321ca37-b8a0-4a49-a09c-639d97dc58c20ca5c3bf-6c1b-4694-bfb8-a444a3ec186b",
                                                               "5f010273-5c43-404d-8bd5-ed496a2f7bbc",
                                                               "0e2c55e7-e602-4c61-8a84-8ba044f0986c984dbe64-4020-4074-afd4-a36df867816e93da7e90-9ab9-4fd3-96e0-0d5aff2d98d4963564e9-0275-48a6-b65d-58fa5194e8d3",
                                                               new Date(1574704670306L));
        assertFalse(firmwareimageInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            FirmwareImage firmwareimage1 = new FirmwareImage(new Date(1574704668220L),
                                                             "4b674499-2d0e-4d10-94fe-f47d4eff9059", 78,
                                                             "bc199b54-d3d0-4b17-acf9-9a47c26ddf79",
                                                             "8ea84922-a58e-4ed7-bc05-0ff347220ac0",
                                                             "52c55684-8196-44a4-ab2e-79e7871d2ef6",
                                                             "c65d2410-c851-4a80-8b6e-a791bef631ff",
                                                             new Date(1574704669641L));
            FirmwareImage firmwareimage2 = new FirmwareImage(new Date(1574704668220L),
                                                             "4b674499-2d0e-4d10-94fe-f47d4eff9059", 78,
                                                             "bc199b54-d3d0-4b17-acf9-9a47c26ddf79",
                                                             "8ea84922-a58e-4ed7-bc05-0ff347220ac0",
                                                             "52c55684-8196-44a4-ab2e-79e7871d2ef6",
                                                             "c65d2410-c851-4a80-8b6e-a791bef631ff",
                                                             new Date(1574704669641L));
            FirmwareImage firmwareimage3 = new FirmwareImage(new Date(1574704665380L),
                                                             "a76519ec-d198-49af-81c0-c495256c1143", -116,
                                                             "97447b87-3d5d-48be-9c7a-713b333bd6ac",
                                                             "1a3543a8-12af-4a15-b795-239cc62192a9",
                                                             "07fa0d94-921a-4581-9bc1-1bacddcdacef",
                                                             "1b8178ff-986d-48da-9d82-497667042c1e",
                                                             new Date(1574704667756L));
            assertNotNull(firmwareimage1);
            assertNotNull(firmwareimage2);
            assertNotNull(firmwareimage3);
            assertNotSame(firmwareimage2, firmwareimage1);
            assertNotSame(firmwareimage3, firmwareimage1);
            assertEquals(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage1, firmwareimage2);
            assertEquals(firmwareimage1, firmwareimage1);
            assertFalse(firmwareimage1.equals(null));
            assertNotEquals(firmwareimage3, firmwareimage1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
