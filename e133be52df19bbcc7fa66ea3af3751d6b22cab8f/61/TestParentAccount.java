// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model ParentAccount.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestParentAccount {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("f3a41.cae8a@a7ce9.fr",
                                                             "0e24e5de-cd7d-447c-a894-565b41c335d5",
                                                             "4f267f967f7d1f5e3fa0d6abaccdb4bf");
            ParentAccount parentaccount2 = parentaccount1.clone();
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotSame(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("96082.cfbb3@dd21e.fr",
                                                             "2eee4b07-d5e5-42ce-b61f-b39fa56c6d20",
                                                             "4f267f967f7d1f5e3fa0d6abaccdb4bf");
            ParentAccount parentaccount2 = new ParentAccount("96082.cfbb3@dd21e.fr",
                                                             "2eee4b07-d5e5-42ce-b61f-b39fa56c6d20",
                                                             "4f267f967f7d1f5e3fa0d6abaccdb4bf");
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotSame(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount2.hashCode(), parentaccount1.hashCode());
            int hashCode = parentaccount1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, parentaccount1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ParentAccount parentaccount = new ParentAccount("75172.fd372@a2bb8.fr", "8e5c9626-bd6a-45dd-a679-1fe05de4295d",
                                                        "4f267f967f7d1f5e3fa0d6abaccdb4bf");
        assertTrue(parentaccount.isValid());
        ParentAccount parentaccountInvalid = new ParentAccount(">ä±€>ê¥Šè•Ÿ'>â¢«)ï‹®4é‰Œ>\u0016ìˆ•å—£ê€‘æ³º/æ?´ç”³<áŒ?ã•Š<.ç—¡èˆ™à¥†ãŽ?â´²î¤‡å?¢>>à©¦>ê’—3->æ£¯ê¼¢é•™ãŠ€è?¤\u0015ê¹¿æ™Ÿ>æ£±)í…‹é•€å¥ªì®‚îˆ?ë¯®>>à¶ŸèŠ´à¢’",
                                                               "67f81264-e24a-4a62-b8fb-859b2218107d0628e863-555b-4548-86b4-74ebf51444c17e74fe70-66f6-4c0d-973a-dc6fcbef5503",
                                                               "8â?ˆè¡ŒBC8GHç§™%8â­?\u0004R88í?º8å°¸8EUT\\\\+R\u00138è¥¯\u0007B\u001eå—´àµ´;N8î¶¤8ã¹Œ\u000eï’›=á–±88Tî¬·8å¡›8?888ïŽ§å°¼8çŽµ/W?K");
        assertFalse(parentaccountInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("5b593.a5634@72160.me",
                                                             "b8abad9a-d1cc-426f-80c1-4261e7f907e9",
                                                             "4f267f967f7d1f5e3fa0d6abaccdb4bf");
            ParentAccount parentaccount2 = new ParentAccount("5b593.a5634@72160.me",
                                                             "b8abad9a-d1cc-426f-80c1-4261e7f907e9",
                                                             "4f267f967f7d1f5e3fa0d6abaccdb4bf");
            ParentAccount parentaccount3 = new ParentAccount("b597e.b552d@67272.me",
                                                             "5658bf82-34ae-41f0-93fd-444a83bc3c8b",
                                                             "4f267f967f7d1f5e3fa0d6abaccdb4bf");
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotNull(parentaccount3);
            assertNotSame(parentaccount2, parentaccount1);
            assertNotSame(parentaccount3, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount1, parentaccount2);
            assertEquals(parentaccount1, parentaccount1);
            assertFalse(parentaccount1.equals(null));
            assertNotEquals(parentaccount3, parentaccount1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
