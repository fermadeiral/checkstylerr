// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.deviceupdate.model;

import static org.junit.Assert.*;

import com.arm.mbed.cloud.sdk.common.Order;
import com.arm.mbed.cloud.sdk.common.listing.ListOptionsEncoder;
import com.arm.mbed.cloud.sdk.common.listing.filtering.FilterOperator;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import org.junit.Test;

/**
 * Unit tests for Model FirmwareManifestListOptions.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestFirmwareManifestListOptions {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            FirmwareManifestListOptions firmwaremanifestlistoptions1 = new FirmwareManifestListOptions(Integer.valueOf(-74),
                                                                                                       Long.valueOf(-24),
                                                                                                       Order.getDefault(),
                                                                                                       "b8625a0a-a54f-44d3-a48d-942e761f8050",
                                                                                                       null, null);
            FirmwareManifestListOptions firmwaremanifestlistoptions2 = firmwaremanifestlistoptions1.clone();
            assertNotNull(firmwaremanifestlistoptions1);
            assertNotNull(firmwaremanifestlistoptions2);
            assertNotSame(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the filters method.
     */
    @SuppressWarnings({ "boxing", "resource" })
    @Test
    public void testFilters() {
        try {
            FirmwareManifestListOptions option = new FirmwareManifestListOptions().inCreatedAts(Arrays.asList(new Date(1574704674885L),
                                                                                                              new Date(1574704680252L),
                                                                                                              new Date(1574704680201L),
                                                                                                              new Date(1574704679575L),
                                                                                                              new Date(1574704681165L),
                                                                                                              new Date(1574704674783L)))
                                                                                  .notInCreatedAts(Arrays.asList(new Date(1574704674203L),
                                                                                                                 new Date(1574704678721L),
                                                                                                                 new Date(1574704679537L)))
                                                                                  .lessThanCreatedAt(new Date(1574704674606L))
                                                                                  .greaterThanCreatedAt(new Date(1574704679448L))
                                                                                  .equalToName("a0891b5c-145f-4480-a737-3868e5e68926")
                                                                                  .notEqualToName("a7793b42-571e-4a1b-8ae8-e171f2c90edf")
                                                                                  .inNames(Arrays.asList("3830ae3b-2bc3-4197-bd1a-3410d96982ae",
                                                                                                         "1f553fe6-c0b1-4808-99ff-e7e44eabcdab",
                                                                                                         "42105999-d51f-444f-a12a-7b10075f8b74",
                                                                                                         "ec73096c-8b16-4bfc-9c12-5de179df939a",
                                                                                                         "d4b32856-e5a9-4343-86f1-6ff0f0130630",
                                                                                                         "9541a13e-7713-488c-9db2-02f8e4134113",
                                                                                                         "3eb8431e-8292-489b-a19e-bb6602c2973b",
                                                                                                         "52d3c837-3f0b-43d1-b07e-01dee3a33a9c",
                                                                                                         "96265a48-0f59-4177-b730-588d8d970047"))
                                                                                  .notInNames(Arrays.asList("b63f09d1-bf10-423d-b5a0-4626f60e1f41",
                                                                                                            "8c72d6bc-b188-4f4f-b385-e79e1429bb4b",
                                                                                                            "dfaa7c42-93d5-4157-ae26-aca1b097a04a",
                                                                                                            "1ebbdc28-04d5-4a22-ab1b-37bc63a014a9",
                                                                                                            "d7145cba-7a7a-40c3-96cc-cf7f8aee4295",
                                                                                                            "b1e66641-7bca-46d4-9873-e31e6ef590ab",
                                                                                                            "846387c7-d53d-4f6a-ac13-22e39d89a054",
                                                                                                            "4e148347-90a7-4405-8e39-bdfb77a5d500",
                                                                                                            "093716b0-7c7b-4acc-b3a6-b3a62fd52098"))
                                                                                  .equalToId("12ddaa01-a1c0-4b15-9d40-1b16f008569b")
                                                                                  .notEqualToId("aa09bdf1-65b0-48d1-85f1-da033f1c865d")
                                                                                  .inIds(Arrays.asList("09ac49b5-6e32-44ad-b7d4-389a8ce533bf"))
                                                                                  .notInIds(Arrays.asList("0db69ff2-ee94-4ad8-b0b4-299e97dd95a4",
                                                                                                          "9687c487-b147-40b1-9bd3-1b035f0859d2",
                                                                                                          "4face62e-7529-4c89-bd0f-cf8c47dd20ee",
                                                                                                          "1a7c2c6d-bf14-4f7d-a47c-92d60a4d4592",
                                                                                                          "676d72ca-27bb-4ef4-8da4-9f267e1205dc"))
                                                                                  .equalToDatafileUrl("37c1440e-3313-4488-895e-3e3d756feb44")
                                                                                  .notEqualToDatafileUrl("75e50223-6c68-4b2c-97a3-92b07c1cc6be")
                                                                                  .inDatafileUrls(Arrays.asList("e0e4e6b1-64e6-4382-8498-58eb4b8f314a",
                                                                                                                "ed2e015f-b2d9-47f3-ae2b-82011d3bf964",
                                                                                                                "cf9c8fd8-2482-45d2-8633-ed4c928c5f8d",
                                                                                                                "00ebe008-b729-4078-b04f-755ebbd0082e",
                                                                                                                "f0ceb4a2-03ad-4be8-8097-80bd841e0b43",
                                                                                                                "7b387320-2e87-4b6e-9c94-d093dd23bca0",
                                                                                                                "801fd426-5e30-4e8a-81b1-cc7e30c9acd8"))
                                                                                  .notInDatafileUrls(Arrays.asList("567c2df6-1678-4224-81b2-6fdec16ebdcb",
                                                                                                                   "968e64dc-2980-4180-b90b-d739d069beb2",
                                                                                                                   "9a8e9d7d-b28a-4821-bd9c-f2ddd5dde550",
                                                                                                                   "17374ba0-28d0-44ae-88b3-7bbf15b89fb4"))
                                                                                  .equalToDatafileSize(Long.valueOf(45))
                                                                                  .notEqualToDatafileSize(Long.valueOf(2))
                                                                                  .inDatafileSizes(Arrays.asList(Long.valueOf(30),
                                                                                                                 Long.valueOf(18),
                                                                                                                 Long.valueOf(-58),
                                                                                                                 Long.valueOf(25),
                                                                                                                 Long.valueOf(107)))
                                                                                  .notInDatafileSizes(Arrays.asList(Long.valueOf(-28),
                                                                                                                    Long.valueOf(30),
                                                                                                                    Long.valueOf(94),
                                                                                                                    Long.valueOf(-44),
                                                                                                                    Long.valueOf(-5),
                                                                                                                    Long.valueOf(-124)))
                                                                                  .equalToDeviceClass("716e6607-bfb9-4c12-a664-6deed717dcdc")
                                                                                  .notEqualToDeviceClass("537eb720-2120-4313-a0c8-60f99c06bfec")
                                                                                  .inDeviceClass(Arrays.asList("ada00d0d-6b0c-4e14-a29e-b23c6e0a871f",
                                                                                                               "bc90070a-6a2d-45af-8dcf-28cbb78ceed0",
                                                                                                               "aa847ff3-8804-47e1-a929-1ccf21f1ef3e",
                                                                                                               "a37f6a3b-0f01-4f11-abf3-0261df5fea85",
                                                                                                               "4b0c6bb8-6f4b-477d-b788-a335663b682d",
                                                                                                               "450c1cf0-39d0-42aa-b834-2f77e62bd28a",
                                                                                                               "844b20fe-ac85-4348-b9ea-9e2ae242ab07"))
                                                                                  .notInDeviceClass(Arrays.asList("121ede7a-e0bd-497d-822d-be9932017f58",
                                                                                                                  "95eb82ed-7013-432d-901d-e40a49a94a05",
                                                                                                                  "e68b0561-4955-4760-8f29-acdf5fefdb75"))
                                                                                  .inTimestamps(Arrays.asList(new Date(1574704674224L),
                                                                                                              new Date(1574704681816L),
                                                                                                              new Date(1574704673950L),
                                                                                                              new Date(1574704679193L),
                                                                                                              new Date(1574704675874L),
                                                                                                              new Date(1574704678472L),
                                                                                                              new Date(1574704677908L)))
                                                                                  .notInTimestamps(Arrays.asList(new Date(1574704675953L),
                                                                                                                 new Date(1574704678749L),
                                                                                                                 new Date(1574704677716L),
                                                                                                                 new Date(1574704675268L),
                                                                                                                 new Date(1574704678379L),
                                                                                                                 new Date(1574704676501L),
                                                                                                                 new Date(1574704681122L),
                                                                                                                 new Date(1574704674276L),
                                                                                                                 new Date(1574704680191L)))
                                                                                  .lessThanTimestamp(new Date(1574704674940L))
                                                                                  .greaterThanTimestamp(new Date(1574704677338L))
                                                                                  .inUpdatedAts(Arrays.asList(new Date(1574704673895L)))
                                                                                  .notInUpdatedAts(Arrays.asList(new Date(1574704675473L),
                                                                                                                 new Date(1574704681743L)))
                                                                                  .lessThanUpdatedAt(new Date(1574704676962L))
                                                                                  .greaterThanUpdatedAt(new Date(1574704675054L))
                                                                                  .equalToDescription("2870069d-3022-4820-af8d-04b0d79d9b88")
                                                                                  .notEqualToDescription("66dd2b38-a9b8-4010-bec6-5b2541341a33")
                                                                                  .inDescriptions(Arrays.asList("55767a07-6a50-44ee-b73b-7ae7a75d6c04",
                                                                                                                "0dca1719-427a-4fad-ae9e-176b5312b23b",
                                                                                                                "21e979c8-6e44-48d7-8bbf-189a796874a9"))
                                                                                  .notInDescriptions(Arrays.asList("9d7b064b-8c66-42d7-91d0-3310ba31f8ba",
                                                                                                                   "471fff46-4b87-441d-a2bb-8dfad056a63b",
                                                                                                                   "9a4d2bdc-11de-4549-a5ba-54c7f46ee400",
                                                                                                                   "24b2fdf9-3676-474c-9d3d-bff11bf36a7e",
                                                                                                                   "2a3518f0-9d71-4e70-b8d6-b7fb07dd90fd",
                                                                                                                   "ecfa1ab4-ff3f-4285-8b44-0dae686dda90",
                                                                                                                   "b0c00901-6fd3-40e3-85fa-640b50497514",
                                                                                                                   "1be49819-f8b8-425c-8dc4-abe5139d2931"));
            assertTrue(option.hasFilters());
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1574704674885L), new Date(1574704680252L), new Date(1574704680201L),
                                       new Date(1574704679575L), new Date(1574704681165L), new Date(1574704674783L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1574704674203L), new Date(1574704678721L), new Date(1574704679537L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                        FilterOperator.LESS_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1574704674606L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1574704679448L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME, FilterOperator.EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("a0891b5c-145f-4480-a737-3868e5e68926",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("a7793b42-571e-4a1b-8ae8-e171f2c90edf",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME, FilterOperator.IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("3830ae3b-2bc3-4197-bd1a-3410d96982ae", "1f553fe6-c0b1-4808-99ff-e7e44eabcdab",
                                       "42105999-d51f-444f-a12a-7b10075f8b74", "ec73096c-8b16-4bfc-9c12-5de179df939a",
                                       "d4b32856-e5a9-4343-86f1-6ff0f0130630", "9541a13e-7713-488c-9db2-02f8e4134113",
                                       "3eb8431e-8292-489b-a19e-bb6602c2973b", "52d3c837-3f0b-43d1-b07e-01dee3a33a9c",
                                       "96265a48-0f59-4177-b730-588d8d970047"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("b63f09d1-bf10-423d-b5a0-4626f60e1f41", "8c72d6bc-b188-4f4f-b385-e79e1429bb4b",
                                       "dfaa7c42-93d5-4157-ae26-aca1b097a04a", "1ebbdc28-04d5-4a22-ab1b-37bc63a014a9",
                                       "d7145cba-7a7a-40c3-96cc-cf7f8aee4295", "b1e66641-7bca-46d4-9873-e31e6ef590ab",
                                       "846387c7-d53d-4f6a-ac13-22e39d89a054", "4e148347-90a7-4405-8e39-bdfb77a5d500",
                                       "093716b0-7c7b-4acc-b3a6-b3a62fd52098"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID, FilterOperator.EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("12ddaa01-a1c0-4b15-9d40-1b16f008569b",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("aa09bdf1-65b0-48d1-85f1-da033f1c865d",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID, FilterOperator.IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("09ac49b5-6e32-44ad-b7d4-389a8ce533bf"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("0db69ff2-ee94-4ad8-b0b4-299e97dd95a4", "9687c487-b147-40b1-9bd3-1b035f0859d2",
                                       "4face62e-7529-4c89-bd0f-cf8c47dd20ee", "1a7c2c6d-bf14-4f7d-a47c-92d60a4d4592",
                                       "676d72ca-27bb-4ef4-8da4-9f267e1205dc"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("37c1440e-3313-4488-895e-3e3d756feb44",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("75e50223-6c68-4b2c-97a3-92b07c1cc6be",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("e0e4e6b1-64e6-4382-8498-58eb4b8f314a", "ed2e015f-b2d9-47f3-ae2b-82011d3bf964",
                                       "cf9c8fd8-2482-45d2-8633-ed4c928c5f8d", "00ebe008-b729-4078-b04f-755ebbd0082e",
                                       "f0ceb4a2-03ad-4be8-8097-80bd841e0b43", "7b387320-2e87-4b6e-9c94-d093dd23bca0",
                                       "801fd426-5e30-4e8a-81b1-cc7e30c9acd8"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("567c2df6-1678-4224-81b2-6fdec16ebdcb", "968e64dc-2980-4180-b90b-d739d069beb2",
                                       "9a8e9d7d-b28a-4821-bd9c-f2ddd5dde550", "17374ba0-28d0-44ae-88b3-7bbf15b89fb4"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(45),
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    Long.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(2),
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                       Long.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(30), Long.valueOf(18), Long.valueOf(-58), Long.valueOf(25),
                                       Long.valueOf(107)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                        FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(-28), Long.valueOf(30), Long.valueOf(94), Long.valueOf(-44),
                                       Long.valueOf(-5), Long.valueOf(-124)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS, FilterOperator.EQUAL));
            assertNotNull(option.getDeviceClassFilters());
            assertEquals("716e6607-bfb9-4c12-a664-6deed717dcdc",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDeviceClassFilters());
            assertEquals("537eb720-2120-4313-a0c8-60f99c06bfec",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS, FilterOperator.IN));
            assertNotNull(option.getDeviceClassFilters());
            assertEquals(Arrays.asList("ada00d0d-6b0c-4e14-a29e-b23c6e0a871f", "bc90070a-6a2d-45af-8dcf-28cbb78ceed0",
                                       "aa847ff3-8804-47e1-a929-1ccf21f1ef3e", "a37f6a3b-0f01-4f11-abf3-0261df5fea85",
                                       "4b0c6bb8-6f4b-477d-b788-a335663b682d", "450c1cf0-39d0-42aa-b834-2f77e62bd28a",
                                       "844b20fe-ac85-4348-b9ea-9e2ae242ab07"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS, FilterOperator.NOT_IN));
            assertNotNull(option.getDeviceClassFilters());
            assertEquals(Arrays.asList("121ede7a-e0bd-497d-822d-be9932017f58", "95eb82ed-7013-432d-901d-e40a49a94a05",
                                       "e68b0561-4955-4760-8f29-acdf5fefdb75"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP, FilterOperator.IN));
            assertNotNull(option.getTimestampFilters());
            assertEquals(Arrays.asList(new Date(1574704674224L), new Date(1574704681816L), new Date(1574704673950L),
                                       new Date(1574704679193L), new Date(1574704675874L), new Date(1574704678472L),
                                       new Date(1574704677908L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP, FilterOperator.NOT_IN));
            assertNotNull(option.getTimestampFilters());
            assertEquals(Arrays.asList(new Date(1574704675953L), new Date(1574704678749L), new Date(1574704677716L),
                                       new Date(1574704675268L), new Date(1574704678379L), new Date(1574704676501L),
                                       new Date(1574704681122L), new Date(1574704674276L), new Date(1574704680191L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP, FilterOperator.LESS_THAN));
            assertNotNull(option.getTimestampFilters());
            assertEquals(new Date(1574704674940L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getTimestampFilters());
            assertEquals(new Date(1574704677338L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1574704673895L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1574704675473L), new Date(1574704681743L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                        FilterOperator.LESS_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1574704676962L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1574704675054L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("2870069d-3022-4820-af8d-04b0d79d9b88",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("66dd2b38-a9b8-4010-bec6-5b2541341a33",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("55767a07-6a50-44ee-b73b-7ae7a75d6c04", "0dca1719-427a-4fad-ae9e-176b5312b23b",
                                       "21e979c8-6e44-48d7-8bbf-189a796874a9"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("9d7b064b-8c66-42d7-91d0-3310ba31f8ba", "471fff46-4b87-441d-a2bb-8dfad056a63b",
                                       "9a4d2bdc-11de-4549-a5ba-54c7f46ee400", "24b2fdf9-3676-474c-9d3d-bff11bf36a7e",
                                       "2a3518f0-9d71-4e70-b8d6-b7fb07dd90fd", "ecfa1ab4-ff3f-4285-8b44-0dae686dda90",
                                       "b0c00901-6fd3-40e3-85fa-640b50497514", "1be49819-f8b8-425c-8dc4-abe5139d2931"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    List.class, option));
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            FirmwareManifestListOptions firmwaremanifestlistoptions1 = new FirmwareManifestListOptions(Integer.valueOf(106),
                                                                                                       Long.valueOf(-90),
                                                                                                       Order.getDefault(),
                                                                                                       "38790e53-f34b-4b2b-a442-5d23345760d1",
                                                                                                       null, null);
            FirmwareManifestListOptions firmwaremanifestlistoptions2 = new FirmwareManifestListOptions(Integer.valueOf(106),
                                                                                                       Long.valueOf(-90),
                                                                                                       Order.getDefault(),
                                                                                                       "38790e53-f34b-4b2b-a442-5d23345760d1",
                                                                                                       null, null);
            assertNotNull(firmwaremanifestlistoptions1);
            assertNotNull(firmwaremanifestlistoptions2);
            assertNotSame(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2.hashCode(), firmwaremanifestlistoptions1.hashCode());
            int hashCode = firmwaremanifestlistoptions1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, firmwaremanifestlistoptions1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            FirmwareManifestListOptions firmwaremanifestlistoptions1 = new FirmwareManifestListOptions(Integer.valueOf(-3),
                                                                                                       Long.valueOf(-39),
                                                                                                       Order.getDefault(),
                                                                                                       "ede6f275-5690-47ed-bc3e-0a4b9f11e89d",
                                                                                                       null, null);
            FirmwareManifestListOptions firmwaremanifestlistoptions2 = new FirmwareManifestListOptions(Integer.valueOf(-3),
                                                                                                       Long.valueOf(-39),
                                                                                                       Order.getDefault(),
                                                                                                       "ede6f275-5690-47ed-bc3e-0a4b9f11e89d",
                                                                                                       null, null);
            FirmwareManifestListOptions firmwaremanifestlistoptions3 = new FirmwareManifestListOptions(Integer.valueOf(-81),
                                                                                                       Long.valueOf(-96),
                                                                                                       Order.getDefault(),
                                                                                                       "d4dae9c2-ce11-46a0-a1cc-afeb7599e5c1",
                                                                                                       null, null);
            assertNotNull(firmwaremanifestlistoptions1);
            assertNotNull(firmwaremanifestlistoptions2);
            assertNotNull(firmwaremanifestlistoptions3);
            assertNotSame(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertNotSame(firmwaremanifestlistoptions3, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions1, firmwaremanifestlistoptions2);
            assertEquals(firmwaremanifestlistoptions1, firmwaremanifestlistoptions1);
            assertFalse(firmwaremanifestlistoptions1.equals(null));
            assertNotEquals(firmwaremanifestlistoptions3, firmwaremanifestlistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
