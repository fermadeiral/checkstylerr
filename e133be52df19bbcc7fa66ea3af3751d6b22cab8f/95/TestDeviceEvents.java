// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEvents.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEvents {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1574704666421L), null,
                                                          new Date(1574704664531L),
                                                          "ef070826-4155-41c7-910f-d0fd8579a314",
                                                          "3ddab6de-8972-4a51-9de3-a7805f8a0ff1",
                                                          "e4540f33-23ca-4c74-add9-b278f793f397",
                                                          "74bf47d7-64b4-4ca1-ba03-e1524ddf0a11",
                                                          "e5e58694-5a3d-49ad-870a-676a60c066da",
                                                          "d0414c7e-319e-4c04-a219-1b76abffae18", true);
            DeviceEvents deviceevents2 = deviceevents1.clone();
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1574704660784L), null,
                                                          new Date(1574704665134L),
                                                          "8d6a46b6-a8cb-4a44-989a-ef421e63600f",
                                                          "a2bb268e-7944-4178-bf29-02a68e095fa0",
                                                          "3e39cdb8-1cb3-4509-8b76-da3e898de131",
                                                          "b1a86eec-4937-4d2d-be29-8f4d30b2b33b",
                                                          "801999d5-0a89-4606-91bc-ff1b6304bcc5",
                                                          "c1797e35-a4d2-4e2e-81b8-6083ed55b732", true);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1574704660784L), null,
                                                          new Date(1574704665134L),
                                                          "8d6a46b6-a8cb-4a44-989a-ef421e63600f",
                                                          "a2bb268e-7944-4178-bf29-02a68e095fa0",
                                                          "3e39cdb8-1cb3-4509-8b76-da3e898de131",
                                                          "b1a86eec-4937-4d2d-be29-8f4d30b2b33b",
                                                          "801999d5-0a89-4606-91bc-ff1b6304bcc5",
                                                          "c1797e35-a4d2-4e2e-81b8-6083ed55b732", true);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2.hashCode(), deviceevents1.hashCode());
            int hashCode = deviceevents1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceevents1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEvents deviceevents = new DeviceEvents(null, new Date(1574704666848L), null, new Date(1574704667387L),
                                                     "668385ec-0114-42e4-babe-70a49ab0f7f2",
                                                     "78078802-684e-4718-9e6e-e27380dc5448",
                                                     "d31e7a7d-ed30-449c-90f0-a551b05c0495",
                                                     "f5477138-9962-41a4-ba75-503511317228",
                                                     "b5556125-9603-46f1-940a-bdc67dcfec99",
                                                     "39747350-0e1d-4772-9c7a-05e99a6f7655", true);
        assertTrue(deviceevents.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1574704664465L), null,
                                                          new Date(1574704663577L),
                                                          "bc4f6261-3d93-4b87-b223-5fa5eef7ef05",
                                                          "b8cd3717-1d00-4d5b-95c2-e7df4a3044dd",
                                                          "1657aacd-4abd-45e0-97c2-1f9ca9cca853",
                                                          "5ea6f0de-51bf-4a58-9b86-5a24e2e25fd8",
                                                          "7f32e507-1f3e-4af1-a25d-0dc7f402e37d",
                                                          "11918595-502a-41c9-9cd0-a0a47ee3cef8", true);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1574704664465L), null,
                                                          new Date(1574704663577L),
                                                          "bc4f6261-3d93-4b87-b223-5fa5eef7ef05",
                                                          "b8cd3717-1d00-4d5b-95c2-e7df4a3044dd",
                                                          "1657aacd-4abd-45e0-97c2-1f9ca9cca853",
                                                          "5ea6f0de-51bf-4a58-9b86-5a24e2e25fd8",
                                                          "7f32e507-1f3e-4af1-a25d-0dc7f402e37d",
                                                          "11918595-502a-41c9-9cd0-a0a47ee3cef8", true);
            DeviceEvents deviceevents3 = new DeviceEvents(null, new Date(1574704666019L), null,
                                                          new Date(1574704664964L),
                                                          "21985221-2041-4873-9378-7592bc6d4afc",
                                                          "8158ce7e-465c-4c9b-a5c9-ca4304abba31",
                                                          "c1ff0673-e697-4dd3-bb03-d1a57ac4baa7",
                                                          "124f415e-e2ff-4d40-8da6-8707a3a638f3",
                                                          "b0ad10e4-0d91-489c-bb96-9183f92d2a7f",
                                                          "3072d12c-4cee-47b8-b157-40af95942b0b", true);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotNull(deviceevents3);
            assertNotSame(deviceevents2, deviceevents1);
            assertNotSame(deviceevents3, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents1, deviceevents2);
            assertEquals(deviceevents1, deviceevents1);
            assertFalse(deviceevents1.equals(null));
            assertNotEquals(deviceevents3, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
