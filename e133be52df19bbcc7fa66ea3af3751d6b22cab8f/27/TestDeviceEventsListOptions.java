// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import com.arm.mbed.cloud.sdk.common.Order;
import com.arm.mbed.cloud.sdk.common.listing.ListOptionsEncoder;
import com.arm.mbed.cloud.sdk.common.listing.filtering.FilterOperator;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEventsListOptions.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEventsListOptions {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEventsListOptions deviceeventslistoptions1 = new DeviceEventsListOptions(Integer.valueOf(-40),
                                                                                           Long.valueOf(-89),
                                                                                           Order.getDefault(),
                                                                                           "9896a128-6a0a-4954-9794-bf46f8747326",
                                                                                           null, null);
            DeviceEventsListOptions deviceeventslistoptions2 = deviceeventslistoptions1.clone();
            assertNotNull(deviceeventslistoptions1);
            assertNotNull(deviceeventslistoptions2);
            assertNotSame(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2, deviceeventslistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the filters method.
     */
    @SuppressWarnings({ "boxing", "resource" })
    @Test
    public void testFilters() {
        try {
            DeviceEventsListOptions option = new DeviceEventsListOptions().equalToDeviceId("00afcaef-85d8-4b3e-b518-404eeaaa92f9")
                                                                          .notEqualToDeviceId("f78462ce-a33a-4311-ae94-b6daab86ff10")
                                                                          .inDeviceIds(Arrays.asList("0d18f99e-0072-4ea6-b7ba-3db2970e7c74",
                                                                                                     "b9fedf58-26df-4b7b-af3e-4e5d5dc373fa"))
                                                                          .notInDeviceIds(Arrays.asList("199105b5-7453-4bad-81a0-d790a1d4af23",
                                                                                                        "b262a3b3-6be0-4f05-92ac-67db3552a112"))
                                                                          .equalToDescription("abdc8074-9a84-4369-b1a1-26d74d7d18aa")
                                                                          .notEqualToDescription("164fec4d-6f6f-46a9-ba8a-7c2b502f8315")
                                                                          .inDescriptions(Arrays.asList("4a5425a9-1564-45e9-b337-e2805a680b0f"))
                                                                          .notInDescriptions(Arrays.asList("2badfae0-e831-46c9-aac5-a966f6bd15e6",
                                                                                                           "1013ce83-a875-4e9e-a656-457961264d0d",
                                                                                                           "ca2fcb35-32fb-48e6-87fd-6cb5727ddc7b",
                                                                                                           "68366725-3e69-461f-83f4-0be6c040a359",
                                                                                                           "3f0b8aa9-1204-45c1-86f8-6a27c46abcf8"))
                                                                          .inDateTimes(Arrays.asList(new Date(1574704678422L),
                                                                                                     new Date(1574704680489L),
                                                                                                     new Date(1574704678736L),
                                                                                                     new Date(1574704682113L),
                                                                                                     new Date(1574704681035L)))
                                                                          .notInDateTimes(Arrays.asList(new Date(1574704677500L),
                                                                                                        new Date(1574704677407L),
                                                                                                        new Date(1574704673960L),
                                                                                                        new Date(1574704682050L),
                                                                                                        new Date(1574704673683L),
                                                                                                        new Date(1574704673090L),
                                                                                                        new Date(1574704681632L)))
                                                                          .lessThanDateTime(new Date(1574704675849L))
                                                                          .greaterThanDateTime(new Date(1574704680983L))
                                                                          .equalToStateChange(Boolean.TRUE)
                                                                          .notEqualToStateChange(Boolean.FALSE)
                                                                          .equalToId("9c0a7fab-a994-49f2-9070-04f8b64cd5c0")
                                                                          .notEqualToId("b6c6816b-5f71-41e3-865a-eb5bbc1f2e1d")
                                                                          .inIds(Arrays.asList("165e8226-46a0-4d18-b502-4a4ac5290e4b",
                                                                                               "739049e2-28c0-498f-8c9d-feaed3bc75e0"))
                                                                          .notInIds(Arrays.asList("4376ed85-7707-42c6-ac3d-c4dee4f1ed6a",
                                                                                                  "142090b0-f5e6-4260-aedc-0e2336f05445",
                                                                                                  "86547264-4934-4093-a4da-af025e100074",
                                                                                                  "cc95e658-89c0-46ec-8942-6d38b1671008",
                                                                                                  "17c05835-ab30-4928-8c03-dc51691d6f49",
                                                                                                  "e535dd55-2061-4d26-bc98-abc846b45d5d",
                                                                                                  "443d7919-d77f-4b94-a499-d4ee685a08aa"))
                                                                          .equalToEventType("7b1209db-c10d-4dc5-ab14-b40e9e80336e")
                                                                          .notEqualToEventType("0b6e302f-8ee0-4dc4-bc00-af8b8348e722")
                                                                          .inEventTypes(Arrays.asList("3f420fcc-b3e0-446d-9cad-3d4666f40203",
                                                                                                      "ef79ccef-52dc-4749-81b7-1be547d4024b",
                                                                                                      "a9479fbe-31a6-498c-a89e-b5f55bea74ca",
                                                                                                      "61a3a7d4-fe80-47f2-a5e7-f3ba80c363d2",
                                                                                                      "d9532928-a393-4b29-b2ef-0ec96450db48",
                                                                                                      "d61e4bc5-c20c-464a-8e52-59867a98f6e4",
                                                                                                      "33afbafb-c0d1-45ec-a5b7-34e700995dea",
                                                                                                      "7e8418b8-409c-419c-abbf-2cfdec93d1d5",
                                                                                                      "d52bd001-025d-4c40-bf57-c6dadc35b770"))
                                                                          .notInEventTypes(Arrays.asList("faba97e5-c263-4f97-9565-dbff1042227d",
                                                                                                         "9f4cdcdc-fc37-499b-94f9-02b6e5b0e7b8",
                                                                                                         "99eb8fed-c916-4e1b-87c1-15a89ef4489c",
                                                                                                         "e60ed118-ef2a-4127-98fc-c11e0a33d168"));
            assertTrue(option.hasFilters());
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID, FilterOperator.EQUAL));
            assertNotNull(option.getDeviceIdFilters());
            assertEquals("00afcaef-85d8-4b3e-b518-404eeaaa92f9",
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDeviceIdFilters());
            assertEquals("f78462ce-a33a-4311-ae94-b6daab86ff10",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID, FilterOperator.IN));
            assertNotNull(option.getDeviceIdFilters());
            assertEquals(Arrays.asList("0d18f99e-0072-4ea6-b7ba-3db2970e7c74", "b9fedf58-26df-4b7b-af3e-4e5d5dc373fa"),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID,
                                                                 List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getDeviceIdFilters());
            assertEquals(Arrays.asList("199105b5-7453-4bad-81a0-d790a1d4af23", "b262a3b3-6be0-4f05-92ac-67db3552a112"),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID,
                                                                    List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("abdc8074-9a84-4369-b1a1-26d74d7d18aa",
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("164fec4d-6f6f-46a9-ba8a-7c2b502f8315",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                       String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("4a5425a9-1564-45e9-b337-e2805a680b0f"),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                 List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("2badfae0-e831-46c9-aac5-a966f6bd15e6", "1013ce83-a875-4e9e-a656-457961264d0d",
                                       "ca2fcb35-32fb-48e6-87fd-6cb5727ddc7b", "68366725-3e69-461f-83f4-0be6c040a359",
                                       "3f0b8aa9-1204-45c1-86f8-6a27c46abcf8"),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME, FilterOperator.IN));
            assertNotNull(option.getDateTimeFilters());
            assertEquals(Arrays.asList(new Date(1574704678422L), new Date(1574704680489L), new Date(1574704678736L),
                                       new Date(1574704682113L), new Date(1574704681035L)),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME,
                                                                 List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME, FilterOperator.NOT_IN));
            assertNotNull(option.getDateTimeFilters());
            assertEquals(Arrays.asList(new Date(1574704677500L), new Date(1574704677407L), new Date(1574704673960L),
                                       new Date(1574704682050L), new Date(1574704673683L), new Date(1574704673090L),
                                       new Date(1574704681632L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME,
                                                                    List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME, FilterOperator.LESS_THAN));
            assertNotNull(option.getDateTimeFilters());
            assertEquals(new Date(1574704675849L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME, FilterOperator.GREATER_THAN));
            assertNotNull(option.getDateTimeFilters());
            assertEquals(new Date(1574704680983L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE, FilterOperator.EQUAL));
            assertNotNull(option.getStateChangeFilters());
            assertEquals(Boolean.TRUE,
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE,
                                                                    Boolean.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getStateChangeFilters());
            assertEquals(Boolean.FALSE,
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE,
                                                                       Boolean.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, FilterOperator.EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("9c0a7fab-a994-49f2-9070-04f8b64cd5c0",
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("b6c6816b-5f71-41e3-865a-eb5bbc1f2e1d",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, FilterOperator.IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("165e8226-46a0-4d18-b502-4a4ac5290e4b", "739049e2-28c0-498f-8c9d-feaed3bc75e0"),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, List.class,
                                                                 option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("4376ed85-7707-42c6-ac3d-c4dee4f1ed6a", "142090b0-f5e6-4260-aedc-0e2336f05445",
                                       "86547264-4934-4093-a4da-af025e100074", "cc95e658-89c0-46ec-8942-6d38b1671008",
                                       "17c05835-ab30-4928-8c03-dc51691d6f49", "e535dd55-2061-4d26-bc98-abc846b45d5d",
                                       "443d7919-d77f-4b94-a499-d4ee685a08aa"),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID,
                                                                    List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE, FilterOperator.EQUAL));
            assertNotNull(option.getEventTypeFilters());
            assertEquals("7b1209db-c10d-4dc5-ab14-b40e9e80336e",
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE,
                                                                    String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getEventTypeFilters());
            assertEquals("0b6e302f-8ee0-4dc4-bc00-af8b8348e722",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE,
                                                                       String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE, FilterOperator.IN));
            assertNotNull(option.getEventTypeFilters());
            assertEquals(Arrays.asList("3f420fcc-b3e0-446d-9cad-3d4666f40203", "ef79ccef-52dc-4749-81b7-1be547d4024b",
                                       "a9479fbe-31a6-498c-a89e-b5f55bea74ca", "61a3a7d4-fe80-47f2-a5e7-f3ba80c363d2",
                                       "d9532928-a393-4b29-b2ef-0ec96450db48", "d61e4bc5-c20c-464a-8e52-59867a98f6e4",
                                       "33afbafb-c0d1-45ec-a5b7-34e700995dea", "7e8418b8-409c-419c-abbf-2cfdec93d1d5",
                                       "d52bd001-025d-4c40-bf57-c6dadc35b770"),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE,
                                                                 List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE, FilterOperator.NOT_IN));
            assertNotNull(option.getEventTypeFilters());
            assertEquals(Arrays.asList("faba97e5-c263-4f97-9565-dbff1042227d", "9f4cdcdc-fc37-499b-94f9-02b6e5b0e7b8",
                                       "99eb8fed-c916-4e1b-87c1-15a89ef4489c", "e60ed118-ef2a-4127-98fc-c11e0a33d168"),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE,
                                                                    List.class, option));
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEventsListOptions deviceeventslistoptions1 = new DeviceEventsListOptions(Integer.valueOf(82),
                                                                                           Long.valueOf(57),
                                                                                           Order.getDefault(),
                                                                                           "ad745755-6673-40cd-82a2-4b9abc62f304",
                                                                                           null, null);
            DeviceEventsListOptions deviceeventslistoptions2 = new DeviceEventsListOptions(Integer.valueOf(82),
                                                                                           Long.valueOf(57),
                                                                                           Order.getDefault(),
                                                                                           "ad745755-6673-40cd-82a2-4b9abc62f304",
                                                                                           null, null);
            assertNotNull(deviceeventslistoptions1);
            assertNotNull(deviceeventslistoptions2);
            assertNotSame(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2.hashCode(), deviceeventslistoptions1.hashCode());
            int hashCode = deviceeventslistoptions1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceeventslistoptions1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEventsListOptions deviceeventslistoptions1 = new DeviceEventsListOptions(Integer.valueOf(-72),
                                                                                           Long.valueOf(-43),
                                                                                           Order.getDefault(),
                                                                                           "8b0b1d3a-afda-4201-b302-76a23a98f7fe",
                                                                                           null, null);
            DeviceEventsListOptions deviceeventslistoptions2 = new DeviceEventsListOptions(Integer.valueOf(-72),
                                                                                           Long.valueOf(-43),
                                                                                           Order.getDefault(),
                                                                                           "8b0b1d3a-afda-4201-b302-76a23a98f7fe",
                                                                                           null, null);
            DeviceEventsListOptions deviceeventslistoptions3 = new DeviceEventsListOptions(Integer.valueOf(-44),
                                                                                           Long.valueOf(3),
                                                                                           Order.getDefault(),
                                                                                           "43687136-0775-4cbe-82d1-f7d0baae212e",
                                                                                           null, null);
            assertNotNull(deviceeventslistoptions1);
            assertNotNull(deviceeventslistoptions2);
            assertNotNull(deviceeventslistoptions3);
            assertNotSame(deviceeventslistoptions2, deviceeventslistoptions1);
            assertNotSame(deviceeventslistoptions3, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions1, deviceeventslistoptions2);
            assertEquals(deviceeventslistoptions1, deviceeventslistoptions1);
            assertFalse(deviceeventslistoptions1.equals(null));
            assertNotEquals(deviceeventslistoptions3, deviceeventslistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
