// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model LoginProfile.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestLoginProfile {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            LoginProfile loginprofile1 = new LoginProfile("8bbfa74c-ad02-4c9c-828b-2a18d31eb2d5",
                                                          LoginProfileType.getDefault(),
                                                          "8546a744-4fca-4ce0-bb5a-91a15156ee2c");
            LoginProfile loginprofile2 = loginprofile1.clone();
            assertNotNull(loginprofile1);
            assertNotNull(loginprofile2);
            assertNotSame(loginprofile2, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            LoginProfile loginprofile1 = new LoginProfile("49c99099-e91d-4810-be4c-978cf70fb8b3",
                                                          LoginProfileType.getDefault(),
                                                          "6a1fd01b-1527-482f-b04e-02423637e95a");
            LoginProfile loginprofile2 = new LoginProfile("49c99099-e91d-4810-be4c-978cf70fb8b3",
                                                          LoginProfileType.getDefault(),
                                                          "6a1fd01b-1527-482f-b04e-02423637e95a");
            assertNotNull(loginprofile1);
            assertNotNull(loginprofile2);
            assertNotSame(loginprofile2, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
            assertEquals(loginprofile2.hashCode(), loginprofile1.hashCode());
            int hashCode = loginprofile1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, loginprofile1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        LoginProfile loginprofile = new LoginProfile("3647ea8e-942c-4b7f-b19a-cc2e762c8c81",
                                                     LoginProfileType.getDefault(),
                                                     "b05287b3-560d-4b35-9615-c9bbfd3bc065");
        assertTrue(loginprofile.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            LoginProfile loginprofile1 = new LoginProfile("49888c0a-4b81-450f-85eb-83f11f4c82b7",
                                                          LoginProfileType.getDefault(),
                                                          "9b098f3a-734e-49a0-a898-1a8081385de0");
            LoginProfile loginprofile2 = new LoginProfile("49888c0a-4b81-450f-85eb-83f11f4c82b7",
                                                          LoginProfileType.getDefault(),
                                                          "9b098f3a-734e-49a0-a898-1a8081385de0");
            LoginProfile loginprofile3 = new LoginProfile("36b7c73a-3e9d-405d-a3e3-398953b2089c",
                                                          LoginProfileType.getDefault(),
                                                          "966dc2fe-cdb9-441f-a8a6-9d290e561313");
            assertNotNull(loginprofile1);
            assertNotNull(loginprofile2);
            assertNotNull(loginprofile3);
            assertNotSame(loginprofile2, loginprofile1);
            assertNotSame(loginprofile3, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
            assertEquals(loginprofile1, loginprofile2);
            assertEquals(loginprofile1, loginprofile1);
            assertFalse(loginprofile1.equals(null));
            assertNotEquals(loginprofile3, loginprofile1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
