// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantPolicyGroup.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantPolicyGroup {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantPolicyGroup subtenantpolicygroup1 = new SubtenantPolicyGroup("4f267f967f7d1f5e3fa0d6abaccdb4bf",
                                                                                  -127, new Date(1574704667268L),
                                                                                  "4f267f967f7d1f5e3fa0d6abaccdb4bf",
                                                                                  "a95274ba-2100-4eae-a7ac-1ae275557a35",
                                                                                  new Date(1574704664886L), 32);
            SubtenantPolicyGroup subtenantpolicygroup2 = subtenantpolicygroup1.clone();
            assertNotNull(subtenantpolicygroup1);
            assertNotNull(subtenantpolicygroup2);
            assertNotSame(subtenantpolicygroup2, subtenantpolicygroup1);
            assertEquals(subtenantpolicygroup2, subtenantpolicygroup1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantPolicyGroup subtenantpolicygroup1 = new SubtenantPolicyGroup("4f267f967f7d1f5e3fa0d6abaccdb4bf",
                                                                                  -71, new Date(1574704668488L),
                                                                                  "4f267f967f7d1f5e3fa0d6abaccdb4bf",
                                                                                  "fa109e86-9ca1-4c66-99c1-883f3809a115",
                                                                                  new Date(1574704667681L), -11);
            SubtenantPolicyGroup subtenantpolicygroup2 = new SubtenantPolicyGroup("4f267f967f7d1f5e3fa0d6abaccdb4bf",
                                                                                  -71, new Date(1574704668488L),
                                                                                  "4f267f967f7d1f5e3fa0d6abaccdb4bf",
                                                                                  "fa109e86-9ca1-4c66-99c1-883f3809a115",
                                                                                  new Date(1574704667681L), -11);
            assertNotNull(subtenantpolicygroup1);
            assertNotNull(subtenantpolicygroup2);
            assertNotSame(subtenantpolicygroup2, subtenantpolicygroup1);
            assertEquals(subtenantpolicygroup2, subtenantpolicygroup1);
            assertEquals(subtenantpolicygroup2.hashCode(), subtenantpolicygroup1.hashCode());
            int hashCode = subtenantpolicygroup1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantpolicygroup1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantPolicyGroup subtenantpolicygroup = new SubtenantPolicyGroup("4f267f967f7d1f5e3fa0d6abaccdb4bf", -46,
                                                                             new Date(1574704671071L),
                                                                             "4f267f967f7d1f5e3fa0d6abaccdb4bf",
                                                                             "8ab0c249-ceca-401c-af07-b17c3c1016db",
                                                                             new Date(1574704666576L), 124);
        assertTrue(subtenantpolicygroup.isValid());
        SubtenantPolicyGroup subtenantpolicygroupInvalid = new SubtenantPolicyGroup(null, 59, new Date(1574704663953L),
                                                                                    "8â?ˆè¡ŒBC8GHç§™%8â­?\u0004R88í?º8å°¸8EUT\\\\+R\u00138è¥¯\u0007B\u001eå—´àµ´;N8î¶¤8ã¹Œ\u000eï’›=á–±88Tî¬·8å¡›8?888ïŽ§å°¼8çŽµ/W?K",
                                                                                    null, new Date(1574704669723L),
                                                                                    117);
        assertFalse(subtenantpolicygroupInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantPolicyGroup subtenantpolicygroup1 = new SubtenantPolicyGroup("4f267f967f7d1f5e3fa0d6abaccdb4bf",
                                                                                  -103, new Date(1574704664760L),
                                                                                  "4f267f967f7d1f5e3fa0d6abaccdb4bf",
                                                                                  "e1e57ca8-40bd-4cb0-add0-e2ed28f18ade",
                                                                                  new Date(1574704670710L), 75);
            SubtenantPolicyGroup subtenantpolicygroup2 = new SubtenantPolicyGroup("4f267f967f7d1f5e3fa0d6abaccdb4bf",
                                                                                  -103, new Date(1574704664760L),
                                                                                  "4f267f967f7d1f5e3fa0d6abaccdb4bf",
                                                                                  "e1e57ca8-40bd-4cb0-add0-e2ed28f18ade",
                                                                                  new Date(1574704670710L), 75);
            SubtenantPolicyGroup subtenantpolicygroup3 = new SubtenantPolicyGroup("4f267f967f7d1f5e3fa0d6abaccdb4bf",
                                                                                  -5, new Date(1574704661677L),
                                                                                  "4f267f967f7d1f5e3fa0d6abaccdb4bf",
                                                                                  "3de445f2-4ce9-4f2e-bbef-634ee0c1292b",
                                                                                  new Date(1574704667766L), -65);
            assertNotNull(subtenantpolicygroup1);
            assertNotNull(subtenantpolicygroup2);
            assertNotNull(subtenantpolicygroup3);
            assertNotSame(subtenantpolicygroup2, subtenantpolicygroup1);
            assertNotSame(subtenantpolicygroup3, subtenantpolicygroup1);
            assertEquals(subtenantpolicygroup2, subtenantpolicygroup1);
            assertEquals(subtenantpolicygroup2, subtenantpolicygroup1);
            assertEquals(subtenantpolicygroup1, subtenantpolicygroup2);
            assertEquals(subtenantpolicygroup1, subtenantpolicygroup1);
            assertFalse(subtenantpolicygroup1.equals(null));
            assertNotEquals(subtenantpolicygroup3, subtenantpolicygroup1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
