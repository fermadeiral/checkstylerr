// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.deviceupdate.model;

import static org.junit.Assert.*;

import com.arm.mbed.cloud.sdk.common.Order;
import com.arm.mbed.cloud.sdk.common.listing.ListOptionsEncoder;
import com.arm.mbed.cloud.sdk.common.listing.filtering.FilterOperator;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import org.junit.Test;

/**
 * Unit tests for Model FirmwareImageListOptions.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestFirmwareImageListOptions {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            FirmwareImageListOptions firmwareimagelistoptions1 = new FirmwareImageListOptions(Integer.valueOf(62),
                                                                                              Long.valueOf(-108),
                                                                                              Order.getDefault(),
                                                                                              "fe5ae079-64ba-4cd4-a2a3-25dae54320b4",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions2 = firmwareimagelistoptions1.clone();
            assertNotNull(firmwareimagelistoptions1);
            assertNotNull(firmwareimagelistoptions2);
            assertNotSame(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the filters method.
     */
    @SuppressWarnings({ "boxing", "resource" })
    @Test
    public void testFilters() {
        try {
            FirmwareImageListOptions option = new FirmwareImageListOptions().inUpdatedAts(Arrays.asList(new Date(1574704672830L),
                                                                                                        new Date(1574704682097L),
                                                                                                        new Date(1574704676846L),
                                                                                                        new Date(1574704673545L),
                                                                                                        new Date(1574704680179L)))
                                                                            .notInUpdatedAts(Arrays.asList(new Date(1574704672845L),
                                                                                                           new Date(1574704675661L),
                                                                                                           new Date(1574704675837L),
                                                                                                           new Date(1574704677686L),
                                                                                                           new Date(1574704679930L)))
                                                                            .lessThanUpdatedAt(new Date(1574704676776L))
                                                                            .greaterThanUpdatedAt(new Date(1574704678621L))
                                                                            .equalToName("c9e94129-0218-4392-ad0e-b2e8d1b575d8")
                                                                            .notEqualToName("a588905d-2e8a-427a-8049-7374720b76bb")
                                                                            .inNames(Arrays.asList("ae3d4e45-a7ea-47a1-8e57-51e7923f863c",
                                                                                                   "fd50278e-b967-4532-90ca-6f441eedb9fc",
                                                                                                   "8e42ff9a-3b75-4881-a948-12681e797f1c",
                                                                                                   "6af8420d-f93d-4105-bb2b-53b218e133ac",
                                                                                                   "7179c6f4-1440-4862-86b5-7fad1731e03d",
                                                                                                   "9b464239-73b9-465d-9443-504df2ca2b1b",
                                                                                                   "528a22ff-160a-4826-ad29-5a4f9b66ba26",
                                                                                                   "cf546bcf-69fd-4928-abd3-5ccebd7d5003"))
                                                                            .notInNames(Arrays.asList("cf2fc2df-8d1d-42ce-806f-27bf4147a9af"))
                                                                            .equalToDescription("24888adf-fea3-47ab-8ffd-1cbbf7fe4b07")
                                                                            .notEqualToDescription("7853058e-1710-4c59-a4d1-b8d586997579")
                                                                            .inDescriptions(Arrays.asList("ddcdc890-8e7f-4bd7-89e9-3109964601fc",
                                                                                                          "a89ae587-590a-4807-bfd1-3826cadca16a",
                                                                                                          "ebc95254-b04d-494d-afa1-eb3946816a8a",
                                                                                                          "f5388090-0c61-477b-91be-8fdda8542010",
                                                                                                          "7a5d2181-a2f9-45b8-b42d-fd2bc818f960",
                                                                                                          "76be2615-b5be-49cd-8779-d704ebbc7b63",
                                                                                                          "8de900a7-4859-4761-abb5-3aa6c1e4a81c",
                                                                                                          "76eb4abc-f444-49b1-a2ca-07242b43aa61"))
                                                                            .notInDescriptions(Arrays.asList("8a5a7ad1-60ea-4806-ba96-eaff8bc6f8eb",
                                                                                                             "c0060c1f-f8cc-4b57-bb08-9addab06dcb9",
                                                                                                             "893975a8-7b08-4db7-9c6c-6818234cd41c",
                                                                                                             "5deb8162-91b5-43c5-a4bc-03af4acb3f8a",
                                                                                                             "1357ab83-d42f-4cbe-9847-6d086679fc9c",
                                                                                                             "98832099-2677-4ac4-b1c8-611082813199",
                                                                                                             "b027e436-a9dc-49fa-80da-b392aed6d631",
                                                                                                             "6b1fdc2e-bcd3-4b66-9692-8ed72b97adc4"))
                                                                            .inCreatedAts(Arrays.asList(new Date(1574704673665L),
                                                                                                        new Date(1574704679915L),
                                                                                                        new Date(1574704674467L)))
                                                                            .notInCreatedAts(Arrays.asList(new Date(1574704674282L),
                                                                                                           new Date(1574704676204L),
                                                                                                           new Date(1574704678261L),
                                                                                                           new Date(1574704675932L),
                                                                                                           new Date(1574704682384L)))
                                                                            .lessThanCreatedAt(new Date(1574704679711L))
                                                                            .greaterThanCreatedAt(new Date(1574704673872L))
                                                                            .equalToDatafileUrl("e76e7e13-02b4-4933-9595-ed7ed7434333")
                                                                            .notEqualToDatafileUrl("45b26a49-a738-4e66-8c62-eb4696a7a743")
                                                                            .inDatafileUrls(Arrays.asList("535ef435-03cd-4196-9ef4-32919a7d8049",
                                                                                                          "f9b77d22-1650-461a-819a-fd265dcd9978",
                                                                                                          "020be213-d665-43d9-ad32-332f71e57366",
                                                                                                          "71d37f65-5402-4c6f-86f9-bb5b2a6269bf",
                                                                                                          "c46161f7-5f36-476d-8138-cc38e4e1ef8b",
                                                                                                          "9de38f1c-052f-453d-b0d7-7052ef333838",
                                                                                                          "f9cfb153-d633-4767-bc60-f7f9f2f8b34d",
                                                                                                          "77f26f42-c719-438a-b12e-a7d7e58744e7",
                                                                                                          "abc29f2c-4690-4783-8ded-5f866d5d3edd"))
                                                                            .notInDatafileUrls(Arrays.asList("9e8f996f-811d-4f3a-8314-76d7dc51a59d",
                                                                                                             "38ebc29c-bc71-4876-b552-f14c21a074cc"))
                                                                            .equalToDatafileSize(Long.valueOf(-121))
                                                                            .notEqualToDatafileSize(Long.valueOf(-46))
                                                                            .inDatafileSizes(Arrays.asList(Long.valueOf(32),
                                                                                                           Long.valueOf(-2),
                                                                                                           Long.valueOf(65),
                                                                                                           Long.valueOf(93),
                                                                                                           Long.valueOf(59),
                                                                                                           Long.valueOf(54)))
                                                                            .notInDatafileSizes(Arrays.asList(Long.valueOf(-122),
                                                                                                              Long.valueOf(55)))
                                                                            .equalToDatafileChecksum("613ec8d4-8864-41b8-a842-b748464d532a")
                                                                            .notEqualToDatafileChecksum("f4089dd9-200a-4d8d-82b6-b0423a7a776f")
                                                                            .inDatafileChecksums(Arrays.asList("3db8c95d-82ca-4494-85df-8a166a5e34b6"))
                                                                            .notInDatafileChecksums(Arrays.asList("b3efec0e-93f1-4aa1-a1a1-915d54984e4e",
                                                                                                                  "15f48e70-e029-4cdd-931f-1554814689ee"))
                                                                            .equalToId("58b8afda-9c98-402b-8413-4f5b6b2628b6")
                                                                            .notEqualToId("248fd956-c083-40f8-ac18-5d36784ba125")
                                                                            .inIds(Arrays.asList("64ef153c-6934-4f8e-9054-bc7f6c9d2c28",
                                                                                                 "fe004728-83fc-46bc-a032-9bd513c2ec69",
                                                                                                 "da97c3a9-d4e0-451c-9026-48d5e861a84b",
                                                                                                 "5edd669e-d494-478c-9110-400401f94e3d",
                                                                                                 "115f596e-59d0-41ff-bf9d-3582ebe4f623"))
                                                                            .notInIds(Arrays.asList("6ea64b71-1b3f-4979-8896-414f1b207139",
                                                                                                    "516a10cb-009b-446b-8fe8-46acefbb2524",
                                                                                                    "4cd208b1-6a7f-4dd0-9938-db07d01d7876",
                                                                                                    "dd9c18b5-1c69-4224-967a-5ac93486ad45",
                                                                                                    "4fe3850f-8fc2-4705-9f57-2209beafce08",
                                                                                                    "2cdc43f7-7314-4a40-b341-db168feac06f",
                                                                                                    "d5b20f18-0247-42ac-b6fd-9c91a0a91fe5",
                                                                                                    "4ea7db6a-ee03-4e88-9913-fbd5b296a37e"));
            assertTrue(option.hasFilters());
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1574704672830L), new Date(1574704682097L), new Date(1574704676846L),
                                       new Date(1574704673545L), new Date(1574704680179L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1574704672845L), new Date(1574704675661L), new Date(1574704675837L),
                                       new Date(1574704677686L), new Date(1574704679930L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.LESS_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1574704676776L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1574704678621L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("c9e94129-0218-4392-ad0e-b2e8d1b575d8",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("a588905d-2e8a-427a-8049-7374720b76bb",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("ae3d4e45-a7ea-47a1-8e57-51e7923f863c", "fd50278e-b967-4532-90ca-6f441eedb9fc",
                                       "8e42ff9a-3b75-4881-a948-12681e797f1c", "6af8420d-f93d-4105-bb2b-53b218e133ac",
                                       "7179c6f4-1440-4862-86b5-7fad1731e03d", "9b464239-73b9-465d-9443-504df2ca2b1b",
                                       "528a22ff-160a-4826-ad29-5a4f9b66ba26", "cf546bcf-69fd-4928-abd3-5ccebd7d5003"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("cf2fc2df-8d1d-42ce-806f-27bf4147a9af"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("24888adf-fea3-47ab-8ffd-1cbbf7fe4b07",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("7853058e-1710-4c59-a4d1-b8d586997579",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("ddcdc890-8e7f-4bd7-89e9-3109964601fc", "a89ae587-590a-4807-bfd1-3826cadca16a",
                                       "ebc95254-b04d-494d-afa1-eb3946816a8a", "f5388090-0c61-477b-91be-8fdda8542010",
                                       "7a5d2181-a2f9-45b8-b42d-fd2bc818f960", "76be2615-b5be-49cd-8779-d704ebbc7b63",
                                       "8de900a7-4859-4761-abb5-3aa6c1e4a81c", "76eb4abc-f444-49b1-a2ca-07242b43aa61"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("8a5a7ad1-60ea-4806-ba96-eaff8bc6f8eb", "c0060c1f-f8cc-4b57-bb08-9addab06dcb9",
                                       "893975a8-7b08-4db7-9c6c-6818234cd41c", "5deb8162-91b5-43c5-a4bc-03af4acb3f8a",
                                       "1357ab83-d42f-4cbe-9847-6d086679fc9c", "98832099-2677-4ac4-b1c8-611082813199",
                                       "b027e436-a9dc-49fa-80da-b392aed6d631", "6b1fdc2e-bcd3-4b66-9692-8ed72b97adc4"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1574704673665L), new Date(1574704679915L), new Date(1574704674467L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1574704674282L), new Date(1574704676204L), new Date(1574704678261L),
                                       new Date(1574704675932L), new Date(1574704682384L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.LESS_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1574704679711L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1574704673872L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("e76e7e13-02b4-4933-9595-ed7ed7434333",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("45b26a49-a738-4e66-8c62-eb4696a7a743",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("535ef435-03cd-4196-9ef4-32919a7d8049", "f9b77d22-1650-461a-819a-fd265dcd9978",
                                       "020be213-d665-43d9-ad32-332f71e57366", "71d37f65-5402-4c6f-86f9-bb5b2a6269bf",
                                       "c46161f7-5f36-476d-8138-cc38e4e1ef8b", "9de38f1c-052f-453d-b0d7-7052ef333838",
                                       "f9cfb153-d633-4767-bc60-f7f9f2f8b34d", "77f26f42-c719-438a-b12e-a7d7e58744e7",
                                       "abc29f2c-4690-4783-8ded-5f866d5d3edd"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("9e8f996f-811d-4f3a-8314-76d7dc51a59d", "38ebc29c-bc71-4876-b552-f14c21a074cc"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(-121),
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    Long.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(-46),
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                       Long.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(32), Long.valueOf(-2), Long.valueOf(65), Long.valueOf(93),
                                       Long.valueOf(59), Long.valueOf(54)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(-122), Long.valueOf(55)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                        FilterOperator.EQUAL));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals("613ec8d4-8864-41b8-a842-b748464d532a",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals("f4089dd9-200a-4d8d-82b6-b0423a7a776f",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM, FilterOperator.IN));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals(Arrays.asList("3db8c95d-82ca-4494-85df-8a166a5e34b6"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                        FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals(Arrays.asList("b3efec0e-93f1-4aa1-a1a1-915d54984e4e", "15f48e70-e029-4cdd-931f-1554814689ee"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("58b8afda-9c98-402b-8413-4f5b6b2628b6",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("248fd956-c083-40f8-ac18-5d36784ba125",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("64ef153c-6934-4f8e-9054-bc7f6c9d2c28", "fe004728-83fc-46bc-a032-9bd513c2ec69",
                                       "da97c3a9-d4e0-451c-9026-48d5e861a84b", "5edd669e-d494-478c-9110-400401f94e3d",
                                       "115f596e-59d0-41ff-bf9d-3582ebe4f623"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, List.class,
                                                                 option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("6ea64b71-1b3f-4979-8896-414f1b207139", "516a10cb-009b-446b-8fe8-46acefbb2524",
                                       "4cd208b1-6a7f-4dd0-9938-db07d01d7876", "dd9c18b5-1c69-4224-967a-5ac93486ad45",
                                       "4fe3850f-8fc2-4705-9f57-2209beafce08", "2cdc43f7-7314-4a40-b341-db168feac06f",
                                       "d5b20f18-0247-42ac-b6fd-9c91a0a91fe5", "4ea7db6a-ee03-4e88-9913-fbd5b296a37e"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID,
                                                                    List.class, option));
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            FirmwareImageListOptions firmwareimagelistoptions1 = new FirmwareImageListOptions(Integer.valueOf(-22),
                                                                                              Long.valueOf(84),
                                                                                              Order.getDefault(),
                                                                                              "b9b2b3df-e5c9-4c2b-a08b-95376a571406",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions2 = new FirmwareImageListOptions(Integer.valueOf(-22),
                                                                                              Long.valueOf(84),
                                                                                              Order.getDefault(),
                                                                                              "b9b2b3df-e5c9-4c2b-a08b-95376a571406",
                                                                                              null, null);
            assertNotNull(firmwareimagelistoptions1);
            assertNotNull(firmwareimagelistoptions2);
            assertNotSame(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2.hashCode(), firmwareimagelistoptions1.hashCode());
            int hashCode = firmwareimagelistoptions1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, firmwareimagelistoptions1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            FirmwareImageListOptions firmwareimagelistoptions1 = new FirmwareImageListOptions(Integer.valueOf(100),
                                                                                              Long.valueOf(6),
                                                                                              Order.getDefault(),
                                                                                              "c75ea4e8-eaf2-4c5f-b106-aa7a74717d0d",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions2 = new FirmwareImageListOptions(Integer.valueOf(100),
                                                                                              Long.valueOf(6),
                                                                                              Order.getDefault(),
                                                                                              "c75ea4e8-eaf2-4c5f-b106-aa7a74717d0d",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions3 = new FirmwareImageListOptions(Integer.valueOf(-35),
                                                                                              Long.valueOf(61),
                                                                                              Order.getDefault(),
                                                                                              "217f5c38-84a9-4459-a676-e048e34c7c8b",
                                                                                              null, null);
            assertNotNull(firmwareimagelistoptions1);
            assertNotNull(firmwareimagelistoptions2);
            assertNotNull(firmwareimagelistoptions3);
            assertNotSame(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertNotSame(firmwareimagelistoptions3, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions1, firmwareimagelistoptions2);
            assertEquals(firmwareimagelistoptions1, firmwareimagelistoptions1);
            assertFalse(firmwareimagelistoptions1.equals(null));
            assertNotEquals(firmwareimagelistoptions3, firmwareimagelistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
