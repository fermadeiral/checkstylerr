// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model IdentityProviderPublicKey.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestIdentityProviderPublicKey {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            IdentityProviderPublicKey identityproviderpublickey1 = new IdentityProviderPublicKey("686710b5-1308-4a73-96fa-fafc7fb4ed31",
                                                                                                 "95cfb1bf-a393-44b4-9f88-9721a7d4359e");
            IdentityProviderPublicKey identityproviderpublickey2 = identityproviderpublickey1.clone();
            assertNotNull(identityproviderpublickey1);
            assertNotNull(identityproviderpublickey2);
            assertNotSame(identityproviderpublickey2, identityproviderpublickey1);
            assertEquals(identityproviderpublickey2, identityproviderpublickey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            IdentityProviderPublicKey identityproviderpublickey1 = new IdentityProviderPublicKey("796f6d21-55db-4f38-a9b8-69fb74fdc3d0",
                                                                                                 "df00a3a6-8c00-4d45-bcb8-11f547940d2f");
            IdentityProviderPublicKey identityproviderpublickey2 = new IdentityProviderPublicKey("796f6d21-55db-4f38-a9b8-69fb74fdc3d0",
                                                                                                 "df00a3a6-8c00-4d45-bcb8-11f547940d2f");
            assertNotNull(identityproviderpublickey1);
            assertNotNull(identityproviderpublickey2);
            assertNotSame(identityproviderpublickey2, identityproviderpublickey1);
            assertEquals(identityproviderpublickey2, identityproviderpublickey1);
            assertEquals(identityproviderpublickey2.hashCode(), identityproviderpublickey1.hashCode());
            int hashCode = identityproviderpublickey1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, identityproviderpublickey1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        IdentityProviderPublicKey identityproviderpublickey = new IdentityProviderPublicKey("941aa002-53c7-4618-9c6d-316cfb3236a8",
                                                                                            "299deff9-8a7b-4abf-85de-790aec7e6da4");
        assertTrue(identityproviderpublickey.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            IdentityProviderPublicKey identityproviderpublickey1 = new IdentityProviderPublicKey("06737639-913c-4c58-9d11-08a8e545ee3d",
                                                                                                 "8ce09d19-49d1-4057-8d45-493aaba6137a");
            IdentityProviderPublicKey identityproviderpublickey2 = new IdentityProviderPublicKey("06737639-913c-4c58-9d11-08a8e545ee3d",
                                                                                                 "8ce09d19-49d1-4057-8d45-493aaba6137a");
            IdentityProviderPublicKey identityproviderpublickey3 = new IdentityProviderPublicKey("d58f373a-1782-43fd-884d-478b00eb34ac",
                                                                                                 "acef7c48-6105-42b4-bedf-15575cfcfa0d");
            assertNotNull(identityproviderpublickey1);
            assertNotNull(identityproviderpublickey2);
            assertNotNull(identityproviderpublickey3);
            assertNotSame(identityproviderpublickey2, identityproviderpublickey1);
            assertNotSame(identityproviderpublickey3, identityproviderpublickey1);
            assertEquals(identityproviderpublickey2, identityproviderpublickey1);
            assertEquals(identityproviderpublickey2, identityproviderpublickey1);
            assertEquals(identityproviderpublickey1, identityproviderpublickey2);
            assertEquals(identityproviderpublickey1, identityproviderpublickey1);
            assertFalse(identityproviderpublickey1.equals(null));
            assertNotEquals(identityproviderpublickey3, identityproviderpublickey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
