// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.security.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeveloperCertificate.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeveloperCertificate {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("1251ea85-f5e8-47af-a2bc-3b9e3b0162f3",
                                                                                  "81eb4129-5a65-4812-ade8-6446962c190f",
                                                                                  new Date(1574704660559L),
                                                                                  "435e1eca-4979-4b23-8142-0b64d38ad25f",
                                                                                  "cdaceb09-8fe9-4a81-882f-8cc9bcdb7fc3",
                                                                                  "009a2f0c-0f6a-40a6-9365-91648d3704ab",
                                                                                  "e8f9519b-47be-4a3a-bd88-2b11a97e210d",
                                                                                  "307572d9-3ef5-439f-9007-a443c80f4644");
            DeveloperCertificate developercertificate2 = developercertificate1.clone();
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("7185f3c7-e9d9-4ffd-aa2e-0a16c8522a60",
                                                                                  "feb3b46c-c78a-4921-bc80-6335caf86b07",
                                                                                  new Date(1574704662175L),
                                                                                  "ea611c99-82f0-4122-ba84-d55958d44b97",
                                                                                  "18dae56f-9482-47f5-b0e7-3e9384ed9f57",
                                                                                  "20e5de97-5930-41b2-81ff-1e1ef4f146a4",
                                                                                  "3e6a244a-8aae-4008-9680-82ccf0e53c68",
                                                                                  "2a823189-582a-44ed-91fd-9374bda336a5");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("7185f3c7-e9d9-4ffd-aa2e-0a16c8522a60",
                                                                                  "feb3b46c-c78a-4921-bc80-6335caf86b07",
                                                                                  new Date(1574704662175L),
                                                                                  "ea611c99-82f0-4122-ba84-d55958d44b97",
                                                                                  "18dae56f-9482-47f5-b0e7-3e9384ed9f57",
                                                                                  "20e5de97-5930-41b2-81ff-1e1ef4f146a4",
                                                                                  "3e6a244a-8aae-4008-9680-82ccf0e53c68",
                                                                                  "2a823189-582a-44ed-91fd-9374bda336a5");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2.hashCode(), developercertificate1.hashCode());
            int hashCode = developercertificate1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, developercertificate1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeveloperCertificate developercertificate = new DeveloperCertificate("33a8d98e-d6db-4e4e-b782-402b9955845a",
                                                                             "cd32905c-af9e-4a94-bb30-987e3551a130",
                                                                             new Date(1574704665962L),
                                                                             "203102f1-98d4-458f-b2ca-43f3fb3d5d9f",
                                                                             "25021e2a-59b8-4497-86d6-f857acfa8672",
                                                                             "9f117ef7-4b52-481d-a2a2-54c706b93598",
                                                                             "2516dfaa-c00d-412b-a728-954d7e9c4866",
                                                                             "1adcbe51-0528-47e7-aa51-90fc9eaca593");
        assertTrue(developercertificate.isValid());
        DeveloperCertificate developercertificateInvalid = new DeveloperCertificate("1913c388-2e7a-441b-932a-4e33f52f0d04",
                                                                                    "cd0ccda2-d47b-447c-817f-4cbddc0f41c8",
                                                                                    new Date(1574704665819L),
                                                                                    "d369f4fc-6295-4dd9-b9a1-53c91cf448de",
                                                                                    "93acb39b-b56e-4991-b8ba-45cd65fda56d",
                                                                                    "bb23fb0c-e0e7-4f85-b0a2-75569a3ceed3",
                                                                                    null,
                                                                                    "8ae4ada8-d3b6-4d3a-bfee-1d0358296965");
        assertFalse(developercertificateInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("001c62d4-7afc-4ee3-9687-3ca7d97f8080",
                                                                                  "b6fb9868-a278-4f71-9dd0-26087686f8fe",
                                                                                  new Date(1574704663510L),
                                                                                  "496d4db3-358d-490b-9d9b-d575be09bfaf",
                                                                                  "77ddc6d3-502a-4edb-9c97-090f8ba79500",
                                                                                  "6980592f-8c20-4d87-9234-e6543d153768",
                                                                                  "2564b10c-1127-4204-a4ae-516c82037e7c",
                                                                                  "cdfec0f0-d5f7-435e-ab8a-d39628748197");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("001c62d4-7afc-4ee3-9687-3ca7d97f8080",
                                                                                  "b6fb9868-a278-4f71-9dd0-26087686f8fe",
                                                                                  new Date(1574704663510L),
                                                                                  "496d4db3-358d-490b-9d9b-d575be09bfaf",
                                                                                  "77ddc6d3-502a-4edb-9c97-090f8ba79500",
                                                                                  "6980592f-8c20-4d87-9234-e6543d153768",
                                                                                  "2564b10c-1127-4204-a4ae-516c82037e7c",
                                                                                  "cdfec0f0-d5f7-435e-ab8a-d39628748197");
            DeveloperCertificate developercertificate3 = new DeveloperCertificate("357c0b05-a379-43bb-809f-d56cf2594fb9",
                                                                                  "d05693b0-0a15-4c74-bc55-19f5513fc6fc",
                                                                                  new Date(1574704664097L),
                                                                                  "edb77ee5-414c-4d6a-aef0-05efe9b59034",
                                                                                  "a1681135-7de8-456b-a6b4-7ecb24c5dea3",
                                                                                  "955ae017-d04a-4007-a83a-cf63ba526fe7",
                                                                                  "3eae7775-186e-4110-bb73-5bb04fb3900d",
                                                                                  "8c07b096-0a32-48b2-8b33-d40b5eefc74f");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotNull(developercertificate3);
            assertNotSame(developercertificate2, developercertificate1);
            assertNotSame(developercertificate3, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate1, developercertificate2);
            assertEquals(developercertificate1, developercertificate1);
            assertFalse(developercertificate1.equals(null));
            assertNotEquals(developercertificate3, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
