// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model ApiKey.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestApiKey {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ApiKey apikey1 = new ApiKey("4f267f967f7d1f5e3fa0d6abaccdb4bf", new Date(1574704664145L), 38, null,
                                        "4f267f967f7d1f5e3fa0d6abaccdb4bf", "dd051f05-822a-4d1c-8991-b04ea2f9e38a", -43,
                                        "1f5c1687-e10a-46e9-b1db-0e297994cb98", "4f267f967f7d1f5e3fa0d6abaccdb4bf",
                                        ApiKeyStatus.getDefault(), new Date(1574704664795L));
            ApiKey apikey2 = apikey1.clone();
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotSame(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ApiKey apikey1 = new ApiKey("4f267f967f7d1f5e3fa0d6abaccdb4bf", new Date(1574704662523L), -73, null,
                                        "4f267f967f7d1f5e3fa0d6abaccdb4bf", "a86c1975-e3fd-48fb-8b9c-4719ad1e2918", -63,
                                        "84d54496-a5ee-4d10-9880-ca6933296cdb", "4f267f967f7d1f5e3fa0d6abaccdb4bf",
                                        ApiKeyStatus.getDefault(), new Date(1574704661388L));
            ApiKey apikey2 = new ApiKey("4f267f967f7d1f5e3fa0d6abaccdb4bf", new Date(1574704662523L), -73, null,
                                        "4f267f967f7d1f5e3fa0d6abaccdb4bf", "a86c1975-e3fd-48fb-8b9c-4719ad1e2918", -63,
                                        "84d54496-a5ee-4d10-9880-ca6933296cdb", "4f267f967f7d1f5e3fa0d6abaccdb4bf",
                                        ApiKeyStatus.getDefault(), new Date(1574704661388L));
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotSame(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey2.hashCode(), apikey1.hashCode());
            int hashCode = apikey1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, apikey1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ApiKey apikey = new ApiKey("4f267f967f7d1f5e3fa0d6abaccdb4bf", new Date(1574704668781L), -127, null,
                                   "4f267f967f7d1f5e3fa0d6abaccdb4bf", "ed3465eb-7d83-4dce-a95b-193c0daa9848", 5,
                                   "8c3e2231-a281-4722-b62f-cba99ce308d5", "4f267f967f7d1f5e3fa0d6abaccdb4bf",
                                   ApiKeyStatus.getDefault(), new Date(1574704663800L));
        assertTrue(apikey.isValid());
        ApiKey apikeyInvalid = new ApiKey("8â?ˆè¡ŒBC8GHç§™%8â­?\u0004R88í?º8å°¸8EUT\\\\+R\u00138è¥¯\u0007B\u001eå—´àµ´;N8î¶¤8ã¹Œ\u000eï’›=á–±88Tî¬·8å¡›8?888ïŽ§å°¼8çŽµ/W?K",
                                          new Date(1574704663320L), -2, null,
                                          "8â?ˆè¡ŒBC8GHç§™%8â­?\u0004R88í?º8å°¸8EUT\\\\+R\u00138è¥¯\u0007B\u001eå—´àµ´;N8î¶¤8ã¹Œ\u000eï’›=á–±88Tî¬·8å¡›8?888ïŽ§å°¼8çŽµ/W?K",
                                          "5c702605-9428-4e4d-a377-dcdedaa6a4dd", 124, null,
                                          "8â?ˆè¡ŒBC8GHç§™%8â­?\u0004R88í?º8å°¸8EUT\\\\+R\u00138è¥¯\u0007B\u001eå—´àµ´;N8î¶¤8ã¹Œ\u000eï’›=á–±88Tî¬·8å¡›8?888ïŽ§å°¼8çŽµ/W?K",
                                          ApiKeyStatus.getDefault(), new Date(1574704661775L));
        assertFalse(apikeyInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ApiKey apikey1 = new ApiKey("4f267f967f7d1f5e3fa0d6abaccdb4bf", new Date(1574704662194L), -24, null,
                                        "4f267f967f7d1f5e3fa0d6abaccdb4bf", "38ad5642-06ce-42d0-a539-b0f5e0e38ced",
                                        -114, "da689df6-f0b4-4d53-a86a-1bf4f6924873",
                                        "4f267f967f7d1f5e3fa0d6abaccdb4bf", ApiKeyStatus.getDefault(),
                                        new Date(1574704667038L));
            ApiKey apikey2 = new ApiKey("4f267f967f7d1f5e3fa0d6abaccdb4bf", new Date(1574704662194L), -24, null,
                                        "4f267f967f7d1f5e3fa0d6abaccdb4bf", "38ad5642-06ce-42d0-a539-b0f5e0e38ced",
                                        -114, "da689df6-f0b4-4d53-a86a-1bf4f6924873",
                                        "4f267f967f7d1f5e3fa0d6abaccdb4bf", ApiKeyStatus.getDefault(),
                                        new Date(1574704667038L));
            ApiKey apikey3 = new ApiKey("4f267f967f7d1f5e3fa0d6abaccdb4bf", new Date(1574704669198L), -100, null,
                                        "4f267f967f7d1f5e3fa0d6abaccdb4bf", "ac8b9254-49ac-4e97-a2f8-b932a9d28cc3", 17,
                                        "5dd99074-8599-4fb0-a390-08c542f5358e", "4f267f967f7d1f5e3fa0d6abaccdb4bf",
                                        ApiKeyStatus.getDefault(), new Date(1574704669077L));
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotNull(apikey3);
            assertNotSame(apikey2, apikey1);
            assertNotSame(apikey3, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey1, apikey2);
            assertEquals(apikey1, apikey1);
            assertFalse(apikey1.equals(null));
            assertNotEquals(apikey3, apikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
