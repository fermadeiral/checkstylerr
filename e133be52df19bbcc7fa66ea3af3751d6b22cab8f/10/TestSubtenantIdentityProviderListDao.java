// This file was generated by the Pelion SDK foundation code generator.
// This unit test suite was autogenerated on Mon Nov 25 17:57:53 GMT 2019. Feel free to change its contents as you wish.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model SubtenantIdentityProviderListDao.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantIdentityProviderListDao {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantIdentityProviderListDao subtenantidentityproviderlistdao1 = new SubtenantIdentityProviderListDao();
            SubtenantIdentityProviderListDao subtenantidentityproviderlistdao2 = subtenantidentityproviderlistdao1.clone();
            assertNotNull(subtenantidentityproviderlistdao1);
            assertNotNull(subtenantidentityproviderlistdao2);
            assertNotSame(subtenantidentityproviderlistdao2, subtenantidentityproviderlistdao1);
            assertEquals(subtenantidentityproviderlistdao2, subtenantidentityproviderlistdao1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantIdentityProviderListDao subtenantidentityproviderlistdao1 = new SubtenantIdentityProviderListDao();
            SubtenantIdentityProviderListDao subtenantidentityproviderlistdao2 = new SubtenantIdentityProviderListDao();
            assertNotNull(subtenantidentityproviderlistdao1);
            assertNotNull(subtenantidentityproviderlistdao2);
            assertNotSame(subtenantidentityproviderlistdao2, subtenantidentityproviderlistdao1);
            assertEquals(subtenantidentityproviderlistdao2, subtenantidentityproviderlistdao1);
            assertEquals(subtenantidentityproviderlistdao2.hashCode(), subtenantidentityproviderlistdao1.hashCode());
            int hashCode = subtenantidentityproviderlistdao1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantidentityproviderlistdao1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantIdentityProviderListDao subtenantidentityproviderlistdao1 = new SubtenantIdentityProviderListDao();
            SubtenantIdentityProviderListDao subtenantidentityproviderlistdao2 = new SubtenantIdentityProviderListDao();
            assertNotNull(subtenantidentityproviderlistdao1);
            assertNotNull(subtenantidentityproviderlistdao2);
            assertNotSame(subtenantidentityproviderlistdao2, subtenantidentityproviderlistdao1);
            assertEquals(subtenantidentityproviderlistdao2, subtenantidentityproviderlistdao1);
            assertEquals(subtenantidentityproviderlistdao2, subtenantidentityproviderlistdao1);
            assertEquals(subtenantidentityproviderlistdao1, subtenantidentityproviderlistdao2);
            assertEquals(subtenantidentityproviderlistdao1, subtenantidentityproviderlistdao1);
            assertFalse(subtenantidentityproviderlistdao1.equals(null));
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
