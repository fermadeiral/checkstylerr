// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model User.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestUser {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            User user1 = new User("4f267f967f7d1f5e3fa0d6abaccdb4bf", null, "6e5ed3a9-79a2-4e0f-a38f-9a8d58b86d6a",
                                  new Date(1574704666657L), -115, null, "62691.57121@8571a.me", true,
                                  "060759ff-801e-411b-b205-4a74825c7f09", null, "4f267f967f7d1f5e3fa0d6abaccdb4bf",
                                  false, false, true, 98, null, null, "3921a41f-a56f-42f0-98a2-880b4619c6f9", 83,
                                  "dabfad5b-68ce-40ff-9509-17695337d474", UserStatus.getDefault(), null,
                                  new Date(1574704664556L), ",5-2+");
            User user2 = user1.clone();
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotSame(user2, user1);
            assertEquals(user2, user1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            User user1 = new User("4f267f967f7d1f5e3fa0d6abaccdb4bf", null, "32ec564c-79f6-4e9c-be22-abea0ebf4a6b",
                                  new Date(1574704663795L), 67, null, "56ad4.ce4fa@a8b1b.me", true,
                                  "cb44c06f-3a10-43ca-b7bc-668db4287687", null, "4f267f967f7d1f5e3fa0d6abaccdb4bf",
                                  true, true, false, -100, null, null, "24536b43-76bc-4e7c-a0ec-adb3a1fa28ee", 72,
                                  "335612d9-3eb5-4872-a45b-65722af8afcd", UserStatus.getDefault(), null,
                                  new Date(1574704666665L), ",5-2+");
            User user2 = new User("4f267f967f7d1f5e3fa0d6abaccdb4bf", null, "32ec564c-79f6-4e9c-be22-abea0ebf4a6b",
                                  new Date(1574704663795L), 67, null, "56ad4.ce4fa@a8b1b.me", true,
                                  "cb44c06f-3a10-43ca-b7bc-668db4287687", null, "4f267f967f7d1f5e3fa0d6abaccdb4bf",
                                  true, true, false, -100, null, null, "24536b43-76bc-4e7c-a0ec-adb3a1fa28ee", 72,
                                  "335612d9-3eb5-4872-a45b-65722af8afcd", UserStatus.getDefault(), null,
                                  new Date(1574704666665L), ",5-2+");
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotSame(user2, user1);
            assertEquals(user2, user1);
            assertEquals(user2.hashCode(), user1.hashCode());
            int hashCode = user1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, user1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        User user = new User("4f267f967f7d1f5e3fa0d6abaccdb4bf", null, "db55bfc9-9765-43eb-b680-bd4eb1dff9d7",
                             new Date(1574704670019L), 50, null, "6eb98.7aa4d@3bcff.me", false,
                             "fbdbbfba-d470-4e74-8ab9-1b942c8ed0d1", null, "4f267f967f7d1f5e3fa0d6abaccdb4bf", true,
                             false, false, -17, null, null, "2ea2e015-3dba-4dff-8449-f26c83ef55d9", -46,
                             "a5699a6a-d3d6-4467-b152-659db6c2bf4f", UserStatus.getDefault(), null,
                             new Date(1574704665699L), ",5-2+");
        assertTrue(user.isValid());
        User userInvalid = new User("8â?ˆè¡ŒBC8GHç§™%8â­?\u0004R88í?º8å°¸8EUT\\\\+R\u00138è¥¯\u0007B\u001eå—´àµ´;N8î¶¤8ã¹Œ\u000eï’›=á–±88Tî¬·8å¡›8?888ïŽ§å°¼8çŽµ/W?K",
                                    null, "e636e192-959e-4905-a6bf-9158787b8c85", new Date(1574704669561L), 97, null,
                                    null, false,
                                    "ff3dda29-1933-4e6e-bb87-b05e10a74e43e0f7abcd-cbe9-44d3-8a4f-a1267081e7b147b5e06d-4ed3-4651-bc0f-edd4e7c1c56f",
                                    null,
                                    "8â?ˆè¡ŒBC8GHç§™%8â­?\u0004R88í?º8å°¸8EUT\\\\+R\u00138è¥¯\u0007B\u001eå—´àµ´;N8î¶¤8ã¹Œ\u000eï’›=á–±88Tî¬·8å¡›8?888ïŽ§å°¼8çŽµ/W?K",
                                    true, false, false, -21, null, null, "5b8bf8b7-68af-4e2a-904d-d13f31b9f630", 116,
                                    "3ef0c7af-df75-4614-bfcb-5ba3ab3ab47cdbee46b0-7b53-43c5-8b0c-06fe93c331689e6bd607-097b-404f-ab0f-c68f5b17bff6",
                                    UserStatus.getDefault(), null, new Date(1574704668100L),
                                    "!\u0018.433å?™/åˆ™4ä‚›é³¬330ã‰¦ë¥€\u001aï¹²\u0016è°’14.43-03á”£ç¤ž4\u00184&14-\u000f\u0001313èš?ï?­$$-?\u000731)æ?²-3æ˜£3í›§$$êµ³4\u0019å©¢\f");
        assertFalse(userInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            User user1 = new User("4f267f967f7d1f5e3fa0d6abaccdb4bf", null, "8e21f60d-3f48-4cb0-8e5e-c70600ad71d0",
                                  new Date(1574704668165L), 38, null, "f3524.4b81a@e017c.fr", false,
                                  "169b5c32-4479-4136-a29b-3f89e3c3d744", null, "4f267f967f7d1f5e3fa0d6abaccdb4bf",
                                  true, false, false, -124, null, null, "9bcbfcb9-c14c-405a-8cb7-62de7699a965", 60,
                                  "419c8f4b-d508-4bea-86c6-a81f85133598", UserStatus.getDefault(), null,
                                  new Date(1574704664032L), ",5-2+");
            User user2 = new User("4f267f967f7d1f5e3fa0d6abaccdb4bf", null, "8e21f60d-3f48-4cb0-8e5e-c70600ad71d0",
                                  new Date(1574704668165L), 38, null, "f3524.4b81a@e017c.fr", false,
                                  "169b5c32-4479-4136-a29b-3f89e3c3d744", null, "4f267f967f7d1f5e3fa0d6abaccdb4bf",
                                  true, false, false, -124, null, null, "9bcbfcb9-c14c-405a-8cb7-62de7699a965", 60,
                                  "419c8f4b-d508-4bea-86c6-a81f85133598", UserStatus.getDefault(), null,
                                  new Date(1574704664032L), ",5-2+");
            User user3 = new User("4f267f967f7d1f5e3fa0d6abaccdb4bf", null, "217325f2-3d19-40d6-bf03-4cb63a576f31",
                                  new Date(1574704665990L), 6, null, "fd6de.2b94c@159b5.me", false,
                                  "8aa50991-22bd-4817-b471-d904b6b633ac", null, "4f267f967f7d1f5e3fa0d6abaccdb4bf",
                                  true, false, false, -63, null, null, "95f3d14f-e29f-4e67-8a51-fd725458740c", 52,
                                  "86eaa9fd-bafb-4713-bb31-9429c63fab23", UserStatus.getDefault(), null,
                                  new Date(1574704665906L), ",5-2+");
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotNull(user3);
            assertNotSame(user2, user1);
            assertNotSame(user3, user1);
            assertEquals(user2, user1);
            assertEquals(user2, user1);
            assertEquals(user1, user2);
            assertEquals(user1, user1);
            assertFalse(user1.equals(null));
            assertNotEquals(user3, user1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
