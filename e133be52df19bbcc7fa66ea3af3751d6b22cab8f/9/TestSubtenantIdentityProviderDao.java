// This file was generated by the Pelion SDK foundation code generator.
// This unit test suite was autogenerated on Mon Nov 25 17:57:53 GMT 2019. Feel free to change its contents as you wish.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model SubtenantIdentityProviderDao.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantIdentityProviderDao {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantIdentityProviderDao subtenantidentityproviderdao1 = new SubtenantIdentityProviderDao();
            SubtenantIdentityProviderDao subtenantidentityproviderdao2 = subtenantidentityproviderdao1.clone();
            assertNotNull(subtenantidentityproviderdao1);
            assertNotNull(subtenantidentityproviderdao2);
            assertNotSame(subtenantidentityproviderdao2, subtenantidentityproviderdao1);
            assertEquals(subtenantidentityproviderdao2, subtenantidentityproviderdao1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantIdentityProviderDao subtenantidentityproviderdao1 = new SubtenantIdentityProviderDao();
            SubtenantIdentityProviderDao subtenantidentityproviderdao2 = new SubtenantIdentityProviderDao();
            assertNotNull(subtenantidentityproviderdao1);
            assertNotNull(subtenantidentityproviderdao2);
            assertNotSame(subtenantidentityproviderdao2, subtenantidentityproviderdao1);
            assertEquals(subtenantidentityproviderdao2, subtenantidentityproviderdao1);
            assertEquals(subtenantidentityproviderdao2.hashCode(), subtenantidentityproviderdao1.hashCode());
            int hashCode = subtenantidentityproviderdao1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantidentityproviderdao1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantIdentityProviderDao subtenantidentityproviderdao1 = new SubtenantIdentityProviderDao();
            SubtenantIdentityProviderDao subtenantidentityproviderdao2 = new SubtenantIdentityProviderDao();
            assertNotNull(subtenantidentityproviderdao1);
            assertNotNull(subtenantidentityproviderdao2);
            assertNotSame(subtenantidentityproviderdao2, subtenantidentityproviderdao1);
            assertEquals(subtenantidentityproviderdao2, subtenantidentityproviderdao1);
            assertEquals(subtenantidentityproviderdao2, subtenantidentityproviderdao1);
            assertEquals(subtenantidentityproviderdao1, subtenantidentityproviderdao2);
            assertEquals(subtenantidentityproviderdao1, subtenantidentityproviderdao1);
            assertFalse(subtenantidentityproviderdao1.equals(null));
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
