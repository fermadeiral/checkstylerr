// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEnrollmentDenial.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEnrollmentDenial {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("4f267f967f7d1f5e3fa0d6abaccdb4bf",
                                                                                        new Date(1574704669961L),
                                                                                        "22629a91-3033-4f82-b266-9465b1c96a67",
                                                                                        "4f267f967f7d1f5e3fa0d6abaccdb4bf",
                                                                                        "4f267f967f7d1f5e3fa0d6abaccdb4bf");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = deviceenrollmentdenial1.clone();
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("4f267f967f7d1f5e3fa0d6abaccdb4bf",
                                                                                        new Date(1574704665714L),
                                                                                        "6212c916-5b26-4076-8153-29e1712fb44b",
                                                                                        "4f267f967f7d1f5e3fa0d6abaccdb4bf",
                                                                                        "4f267f967f7d1f5e3fa0d6abaccdb4bf");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = new DeviceEnrollmentDenial("4f267f967f7d1f5e3fa0d6abaccdb4bf",
                                                                                        new Date(1574704665714L),
                                                                                        "6212c916-5b26-4076-8153-29e1712fb44b",
                                                                                        "4f267f967f7d1f5e3fa0d6abaccdb4bf",
                                                                                        "4f267f967f7d1f5e3fa0d6abaccdb4bf");
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2.hashCode(), deviceenrollmentdenial1.hashCode());
            int hashCode = deviceenrollmentdenial1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceenrollmentdenial1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEnrollmentDenial deviceenrollmentdenial = new DeviceEnrollmentDenial("4f267f967f7d1f5e3fa0d6abaccdb4bf",
                                                                                   new Date(1574704662206L),
                                                                                   "0456c3f1-812f-4e43-8088-3b2fa14ca1b1",
                                                                                   "4f267f967f7d1f5e3fa0d6abaccdb4bf",
                                                                                   "4f267f967f7d1f5e3fa0d6abaccdb4bf");
        assertTrue(deviceenrollmentdenial.isValid());
        DeviceEnrollmentDenial deviceenrollmentdenialInvalid = new DeviceEnrollmentDenial("8â?ˆè¡ŒBC8GHç§™%8â­?\u0004R88í?º8å°¸8EUT\\\\+R\u00138è¥¯\u0007B\u001eå—´àµ´;N8î¶¤8ã¹Œ\u000eï’›=á–±88Tî¬·8å¡›8?888ïŽ§å°¼8çŽµ/W?K",
                                                                                          new Date(1574704664336L),
                                                                                          "83a3ca74-b099-423b-bfa0-303b17c8906a",
                                                                                          "8â?ˆè¡ŒBC8GHç§™%8â­?\u0004R88í?º8å°¸8EUT\\\\+R\u00138è¥¯\u0007B\u001eå—´àµ´;N8î¶¤8ã¹Œ\u000eï’›=á–±88Tî¬·8å¡›8?888ïŽ§å°¼8çŽµ/W?K",
                                                                                          "8â?ˆè¡ŒBC8GHç§™%8â­?\u0004R88í?º8å°¸8EUT\\\\+R\u00138è¥¯\u0007B\u001eå—´àµ´;N8î¶¤8ã¹Œ\u000eï’›=á–±88Tî¬·8å¡›8?888ïŽ§å°¼8çŽµ/W?K");
        assertFalse(deviceenrollmentdenialInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("4f267f967f7d1f5e3fa0d6abaccdb4bf",
                                                                                        new Date(1574704662885L),
                                                                                        "add25b77-a528-424d-a30d-8f8ed7160c62",
                                                                                        "4f267f967f7d1f5e3fa0d6abaccdb4bf",
                                                                                        "4f267f967f7d1f5e3fa0d6abaccdb4bf");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = new DeviceEnrollmentDenial("4f267f967f7d1f5e3fa0d6abaccdb4bf",
                                                                                        new Date(1574704662885L),
                                                                                        "add25b77-a528-424d-a30d-8f8ed7160c62",
                                                                                        "4f267f967f7d1f5e3fa0d6abaccdb4bf",
                                                                                        "4f267f967f7d1f5e3fa0d6abaccdb4bf");
            DeviceEnrollmentDenial deviceenrollmentdenial3 = new DeviceEnrollmentDenial("4f267f967f7d1f5e3fa0d6abaccdb4bf",
                                                                                        new Date(1574704668214L),
                                                                                        "3891bf34-4c97-4ac7-8021-c2206bf22de5",
                                                                                        "4f267f967f7d1f5e3fa0d6abaccdb4bf",
                                                                                        "4f267f967f7d1f5e3fa0d6abaccdb4bf");
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotNull(deviceenrollmentdenial3);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertNotSame(deviceenrollmentdenial3, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial1, deviceenrollmentdenial2);
            assertEquals(deviceenrollmentdenial1, deviceenrollmentdenial1);
            assertFalse(deviceenrollmentdenial1.equals(null));
            assertNotEquals(deviceenrollmentdenial3, deviceenrollmentdenial1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
