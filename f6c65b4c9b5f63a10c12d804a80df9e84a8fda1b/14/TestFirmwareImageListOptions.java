// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.deviceupdate.model;

import static org.junit.Assert.*;

import com.arm.mbed.cloud.sdk.common.Order;
import com.arm.mbed.cloud.sdk.common.listing.ListOptionsEncoder;
import com.arm.mbed.cloud.sdk.common.listing.filtering.FilterOperator;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import org.junit.Test;

/**
 * Unit tests for Model FirmwareImageListOptions.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestFirmwareImageListOptions {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            FirmwareImageListOptions firmwareimagelistoptions1 = new FirmwareImageListOptions(Integer.valueOf(-83),
                                                                                              Long.valueOf(-38),
                                                                                              Order.getDefault(),
                                                                                              "367865ff-afd5-461b-87c0-3cfba4542d70",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions2 = firmwareimagelistoptions1.clone();
            assertNotNull(firmwareimagelistoptions1);
            assertNotNull(firmwareimagelistoptions2);
            assertNotSame(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the filters method.
     */
    @SuppressWarnings({ "boxing", "resource" })
    @Test
    public void testFilters() {
        try {
            FirmwareImageListOptions option = new FirmwareImageListOptions().inUpdatedAts(Arrays.asList(new Date(1558003284069L),
                                                                                                        new Date(1558003276448L),
                                                                                                        new Date(1558003284412L),
                                                                                                        new Date(1558003277818L),
                                                                                                        new Date(1558003277138L),
                                                                                                        new Date(1558003278099L),
                                                                                                        new Date(1558003280490L)))
                                                                            .notInUpdatedAts(Arrays.asList(new Date(1558003282792L),
                                                                                                           new Date(1558003284957L),
                                                                                                           new Date(1558003284224L),
                                                                                                           new Date(1558003283915L),
                                                                                                           new Date(1558003284914L),
                                                                                                           new Date(1558003284238L),
                                                                                                           new Date(1558003283037L),
                                                                                                           new Date(1558003284912L)))
                                                                            .lessThanUpdatedAt(new Date(1558003284343L))
                                                                            .greaterThanUpdatedAt(new Date(1558003283503L))
                                                                            .equalToName("dec295b2-0020-4589-ae37-259147ed979b")
                                                                            .notEqualToName("d8125c92-ceae-4ecf-94c0-499616e62c0f")
                                                                            .inNames(Arrays.asList("3bf6ebd2-7a8d-467a-bc28-e945ad32bd3a",
                                                                                                   "9843f1da-c9fc-4f7a-af68-61f1737a92d3",
                                                                                                   "15b0d011-c9b2-48ec-995c-cac67cd0dc30",
                                                                                                   "9c683228-b6dc-47c4-a908-5faa8c7721eb",
                                                                                                   "162b48fe-8d5b-4fe7-af67-b3ffafe90a94",
                                                                                                   "c34c97ea-b55d-46a0-bd2c-6b78c6d4f0fd",
                                                                                                   "7906f2bd-1f25-46a0-888b-953c017c967d"))
                                                                            .notInNames(Arrays.asList("91a13aea-9d2c-4627-9406-3b244f43762f",
                                                                                                      "87d54df5-6b64-4604-9622-1360eb58fd2e",
                                                                                                      "7e732ddd-0c6f-4f59-8796-13023765d119",
                                                                                                      "a3a3cc66-9089-4ae8-a57e-94e7244b8e13",
                                                                                                      "fc1a073a-7fc9-435c-b4b8-76a2430515ee",
                                                                                                      "aca7fb3a-13e1-4fb3-a75b-ef5a63b008fd"))
                                                                            .equalToDescription("e17e3881-399f-417d-b91d-b1ee99facf31")
                                                                            .notEqualToDescription("db76df58-f499-4aa2-aa6a-e935b036c3dd")
                                                                            .inDescriptions(Arrays.asList("e2029450-be0e-4f77-be07-d88ba72a5bc0",
                                                                                                          "ba726e30-2fca-485b-be1a-c6340d9cd214",
                                                                                                          "301e103b-4320-4776-b566-34c401d29ef0"))
                                                                            .notInDescriptions(Arrays.asList("e79dae6f-5ef3-428b-af7e-3a13741a508e",
                                                                                                             "d89be62c-d4b7-4e4c-b650-5469bc31785d",
                                                                                                             "1f6ece74-d9d8-4fad-9af0-05d84f123f80",
                                                                                                             "562e7aee-5e8b-459b-b520-c3085e810cfb",
                                                                                                             "708f0a25-907a-4aa7-a8b9-5e2c09f525ae",
                                                                                                             "3c5409e5-68c9-48ec-ae54-ed9cd2b6c587",
                                                                                                             "aba14bce-664e-476e-aa50-321416e6662d"))
                                                                            .inCreatedAts(Arrays.asList(new Date(1558003283968L),
                                                                                                        new Date(1558003279146L),
                                                                                                        new Date(1558003277156L),
                                                                                                        new Date(1558003277372L),
                                                                                                        new Date(1558003284251L),
                                                                                                        new Date(1558003284502L),
                                                                                                        new Date(1558003278564L),
                                                                                                        new Date(1558003278819L),
                                                                                                        new Date(1558003282397L)))
                                                                            .notInCreatedAts(Arrays.asList(new Date(1558003281168L),
                                                                                                           new Date(1558003276388L),
                                                                                                           new Date(1558003285251L),
                                                                                                           new Date(1558003277947L),
                                                                                                           new Date(1558003282138L),
                                                                                                           new Date(1558003277606L),
                                                                                                           new Date(1558003282037L),
                                                                                                           new Date(1558003279599L)))
                                                                            .lessThanCreatedAt(new Date(1558003275905L))
                                                                            .greaterThanCreatedAt(new Date(1558003276007L))
                                                                            .equalToDatafileUrl("e66fbd96-e44d-4d97-b646-4010059b14b9")
                                                                            .notEqualToDatafileUrl("1186ffec-d79e-4756-b5ba-e765f9cf367b")
                                                                            .inDatafileUrls(Arrays.asList("0877fcca-9eb4-4d5a-8cde-c63c671d9876",
                                                                                                          "aaf8549f-0bee-40bd-bb92-944fc4801584"))
                                                                            .notInDatafileUrls(Arrays.asList("247cd0c3-83ec-4f36-8ff3-db1d4af822fb",
                                                                                                             "14a99410-9aad-4e35-bc05-6d757583bf09",
                                                                                                             "f99a183f-b44d-4b54-ac76-196d1a352cbd",
                                                                                                             "de6d01ab-bd04-4d18-b83a-2dec8bff20fd",
                                                                                                             "e79f10da-7477-43b4-b130-fe999b53a4a1",
                                                                                                             "eaae7894-4268-49ab-b485-2199e02c9555",
                                                                                                             "4e2270e8-491d-447a-8b87-fc1e75f123ea"))
                                                                            .equalToDatafileSize(Long.valueOf(12))
                                                                            .notEqualToDatafileSize(Long.valueOf(-96))
                                                                            .inDatafileSizes(Arrays.asList(Long.valueOf(-41)))
                                                                            .notInDatafileSizes(Arrays.asList(Long.valueOf(-19),
                                                                                                              Long.valueOf(27),
                                                                                                              Long.valueOf(-92),
                                                                                                              Long.valueOf(125),
                                                                                                              Long.valueOf(109)))
                                                                            .equalToDatafileChecksum("cc10a132-1cc2-43e2-843b-cae1152c509e")
                                                                            .notEqualToDatafileChecksum("891bfa3d-7b1f-480c-b7e6-f94bfc4b863c")
                                                                            .inDatafileChecksums(Arrays.asList("30b7c9da-b211-4915-842b-1383eb1c5270",
                                                                                                               "b9bed53c-39ae-41d3-b96e-a16822b45f5b",
                                                                                                               "daf86ef9-2af5-4f95-9949-918ad2f9f7c3",
                                                                                                               "2d436879-95c7-44e1-9132-f0b6471cd9b3",
                                                                                                               "793d6382-daf2-4cc8-969d-56a24a130eee",
                                                                                                               "11aaa9a2-4b7a-47e2-b014-7db285690a37"))
                                                                            .notInDatafileChecksums(Arrays.asList("a53049f5-2e54-4f9d-9271-0b61c3d6f487",
                                                                                                                  "6df78131-00f1-487d-b452-cea5ec1d92b4",
                                                                                                                  "1600f108-5dca-4744-8730-84fb6736a8ab",
                                                                                                                  "5e1fa1c0-db54-4b78-825b-b9b67aa7d086",
                                                                                                                  "ecea33a8-9c4b-462d-95fe-d2807a9fbcc7"))
                                                                            .equalToId("926e9db2-4f77-41f8-9ee8-4da7f55220e8")
                                                                            .notEqualToId("0590073f-12f5-4295-9682-688d9b381a5f")
                                                                            .inIds(Arrays.asList("0dadf071-bb3e-4358-bc2b-104bae820789",
                                                                                                 "a6dec67b-bd84-43ee-be50-2ebba518463a",
                                                                                                 "44170f0b-04be-49c8-9e0d-23e16306bef1",
                                                                                                 "e962a01d-d08d-4367-a132-198cb9f01bc3",
                                                                                                 "ef7fe712-ae59-44d7-9bb5-525fb83e8fb1"))
                                                                            .notInIds(Arrays.asList("7d817aad-e43e-4544-8d6c-3e5d1dc29091",
                                                                                                    "d392caa2-342a-423e-b07a-b3249210dae7",
                                                                                                    "e442fec5-da19-4218-b7d0-e007f0dd8b41",
                                                                                                    "06e5590f-74d3-4ef8-a2a1-b2f8baa9f73d",
                                                                                                    "7d11862c-921b-4081-b072-8af3536f96f6",
                                                                                                    "b5645355-e67d-493d-84e2-5951f8148de9",
                                                                                                    "8e2f2f99-6dfb-42a6-92ec-5bc169684c27",
                                                                                                    "e51957c8-e1ba-4739-9d38-b89bee1e99e6",
                                                                                                    "e039db82-421b-4255-904f-13ba3085cf8d"));
            assertTrue(option.hasFilters());
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1558003284069L), new Date(1558003276448L), new Date(1558003284412L),
                                       new Date(1558003277818L), new Date(1558003277138L), new Date(1558003278099L),
                                       new Date(1558003280490L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1558003282792L), new Date(1558003284957L), new Date(1558003284224L),
                                       new Date(1558003283915L), new Date(1558003284914L), new Date(1558003284238L),
                                       new Date(1558003283037L), new Date(1558003284912L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.LESS_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1558003284343L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1558003283503L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("dec295b2-0020-4589-ae37-259147ed979b",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("d8125c92-ceae-4ecf-94c0-499616e62c0f",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("3bf6ebd2-7a8d-467a-bc28-e945ad32bd3a", "9843f1da-c9fc-4f7a-af68-61f1737a92d3",
                                       "15b0d011-c9b2-48ec-995c-cac67cd0dc30", "9c683228-b6dc-47c4-a908-5faa8c7721eb",
                                       "162b48fe-8d5b-4fe7-af67-b3ffafe90a94", "c34c97ea-b55d-46a0-bd2c-6b78c6d4f0fd",
                                       "7906f2bd-1f25-46a0-888b-953c017c967d"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("91a13aea-9d2c-4627-9406-3b244f43762f", "87d54df5-6b64-4604-9622-1360eb58fd2e",
                                       "7e732ddd-0c6f-4f59-8796-13023765d119", "a3a3cc66-9089-4ae8-a57e-94e7244b8e13",
                                       "fc1a073a-7fc9-435c-b4b8-76a2430515ee", "aca7fb3a-13e1-4fb3-a75b-ef5a63b008fd"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("e17e3881-399f-417d-b91d-b1ee99facf31",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("db76df58-f499-4aa2-aa6a-e935b036c3dd",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("e2029450-be0e-4f77-be07-d88ba72a5bc0", "ba726e30-2fca-485b-be1a-c6340d9cd214",
                                       "301e103b-4320-4776-b566-34c401d29ef0"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("e79dae6f-5ef3-428b-af7e-3a13741a508e", "d89be62c-d4b7-4e4c-b650-5469bc31785d",
                                       "1f6ece74-d9d8-4fad-9af0-05d84f123f80", "562e7aee-5e8b-459b-b520-c3085e810cfb",
                                       "708f0a25-907a-4aa7-a8b9-5e2c09f525ae", "3c5409e5-68c9-48ec-ae54-ed9cd2b6c587",
                                       "aba14bce-664e-476e-aa50-321416e6662d"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1558003283968L), new Date(1558003279146L), new Date(1558003277156L),
                                       new Date(1558003277372L), new Date(1558003284251L), new Date(1558003284502L),
                                       new Date(1558003278564L), new Date(1558003278819L), new Date(1558003282397L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1558003281168L), new Date(1558003276388L), new Date(1558003285251L),
                                       new Date(1558003277947L), new Date(1558003282138L), new Date(1558003277606L),
                                       new Date(1558003282037L), new Date(1558003279599L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.LESS_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1558003275905L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1558003276007L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("e66fbd96-e44d-4d97-b646-4010059b14b9",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("1186ffec-d79e-4756-b5ba-e765f9cf367b",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("0877fcca-9eb4-4d5a-8cde-c63c671d9876", "aaf8549f-0bee-40bd-bb92-944fc4801584"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("247cd0c3-83ec-4f36-8ff3-db1d4af822fb", "14a99410-9aad-4e35-bc05-6d757583bf09",
                                       "f99a183f-b44d-4b54-ac76-196d1a352cbd", "de6d01ab-bd04-4d18-b83a-2dec8bff20fd",
                                       "e79f10da-7477-43b4-b130-fe999b53a4a1", "eaae7894-4268-49ab-b485-2199e02c9555",
                                       "4e2270e8-491d-447a-8b87-fc1e75f123ea"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(12),
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    Long.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(-96),
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                       Long.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(-41)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(-19), Long.valueOf(27), Long.valueOf(-92), Long.valueOf(125),
                                       Long.valueOf(109)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                        FilterOperator.EQUAL));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals("cc10a132-1cc2-43e2-843b-cae1152c509e",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals("891bfa3d-7b1f-480c-b7e6-f94bfc4b863c",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM, FilterOperator.IN));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals(Arrays.asList("30b7c9da-b211-4915-842b-1383eb1c5270", "b9bed53c-39ae-41d3-b96e-a16822b45f5b",
                                       "daf86ef9-2af5-4f95-9949-918ad2f9f7c3", "2d436879-95c7-44e1-9132-f0b6471cd9b3",
                                       "793d6382-daf2-4cc8-969d-56a24a130eee", "11aaa9a2-4b7a-47e2-b014-7db285690a37"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                        FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals(Arrays.asList("a53049f5-2e54-4f9d-9271-0b61c3d6f487", "6df78131-00f1-487d-b452-cea5ec1d92b4",
                                       "1600f108-5dca-4744-8730-84fb6736a8ab", "5e1fa1c0-db54-4b78-825b-b9b67aa7d086",
                                       "ecea33a8-9c4b-462d-95fe-d2807a9fbcc7"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("926e9db2-4f77-41f8-9ee8-4da7f55220e8",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("0590073f-12f5-4295-9682-688d9b381a5f",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("0dadf071-bb3e-4358-bc2b-104bae820789", "a6dec67b-bd84-43ee-be50-2ebba518463a",
                                       "44170f0b-04be-49c8-9e0d-23e16306bef1", "e962a01d-d08d-4367-a132-198cb9f01bc3",
                                       "ef7fe712-ae59-44d7-9bb5-525fb83e8fb1"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, List.class,
                                                                 option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("7d817aad-e43e-4544-8d6c-3e5d1dc29091", "d392caa2-342a-423e-b07a-b3249210dae7",
                                       "e442fec5-da19-4218-b7d0-e007f0dd8b41", "06e5590f-74d3-4ef8-a2a1-b2f8baa9f73d",
                                       "7d11862c-921b-4081-b072-8af3536f96f6", "b5645355-e67d-493d-84e2-5951f8148de9",
                                       "8e2f2f99-6dfb-42a6-92ec-5bc169684c27", "e51957c8-e1ba-4739-9d38-b89bee1e99e6",
                                       "e039db82-421b-4255-904f-13ba3085cf8d"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID,
                                                                    List.class, option));
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            FirmwareImageListOptions firmwareimagelistoptions1 = new FirmwareImageListOptions(Integer.valueOf(51),
                                                                                              Long.valueOf(52),
                                                                                              Order.getDefault(),
                                                                                              "87a210ee-3ae2-48b1-9d82-5423235b3167",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions2 = new FirmwareImageListOptions(Integer.valueOf(51),
                                                                                              Long.valueOf(52),
                                                                                              Order.getDefault(),
                                                                                              "87a210ee-3ae2-48b1-9d82-5423235b3167",
                                                                                              null, null);
            assertNotNull(firmwareimagelistoptions1);
            assertNotNull(firmwareimagelistoptions2);
            assertNotSame(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2.hashCode(), firmwareimagelistoptions1.hashCode());
            int hashCode = firmwareimagelistoptions1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, firmwareimagelistoptions1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            FirmwareImageListOptions firmwareimagelistoptions1 = new FirmwareImageListOptions(Integer.valueOf(-11),
                                                                                              Long.valueOf(123),
                                                                                              Order.getDefault(),
                                                                                              "43bf1907-0730-4429-b920-9a3fde0d3c44",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions2 = new FirmwareImageListOptions(Integer.valueOf(-11),
                                                                                              Long.valueOf(123),
                                                                                              Order.getDefault(),
                                                                                              "43bf1907-0730-4429-b920-9a3fde0d3c44",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions3 = new FirmwareImageListOptions(Integer.valueOf(-13),
                                                                                              Long.valueOf(-30),
                                                                                              Order.getDefault(),
                                                                                              "e6f53df8-415b-4687-9c06-6179ee258120",
                                                                                              null, null);
            assertNotNull(firmwareimagelistoptions1);
            assertNotNull(firmwareimagelistoptions2);
            assertNotNull(firmwareimagelistoptions3);
            assertNotSame(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertNotSame(firmwareimagelistoptions3, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions1, firmwareimagelistoptions2);
            assertEquals(firmwareimagelistoptions1, firmwareimagelistoptions1);
            assertFalse(firmwareimagelistoptions1.equals(null));
            assertNotEquals(firmwareimagelistoptions3, firmwareimagelistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
