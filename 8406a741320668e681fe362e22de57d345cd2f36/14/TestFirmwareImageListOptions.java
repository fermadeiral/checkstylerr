// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.deviceupdate.model;

import static org.junit.Assert.*;

import com.arm.mbed.cloud.sdk.common.Order;
import com.arm.mbed.cloud.sdk.common.listing.ListOptionsEncoder;
import com.arm.mbed.cloud.sdk.common.listing.filtering.FilterOperator;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import org.junit.Test;

/**
 * Unit tests for Model FirmwareImageListOptions.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestFirmwareImageListOptions {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            FirmwareImageListOptions firmwareimagelistoptions1 = new FirmwareImageListOptions(Integer.valueOf(-112),
                                                                                              Long.valueOf(5),
                                                                                              Order.getDefault(),
                                                                                              "09808f95-a515-4253-b0f0-a05dd6879c84",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions2 = firmwareimagelistoptions1.clone();
            assertNotNull(firmwareimagelistoptions1);
            assertNotNull(firmwareimagelistoptions2);
            assertNotSame(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the filters method.
     */
    @SuppressWarnings({ "boxing", "resource" })
    @Test
    public void testFilters() {
        try {
            FirmwareImageListOptions option = new FirmwareImageListOptions().inUpdatedAts(Arrays.asList(new Date(1558018689056L),
                                                                                                        new Date(1558018685154L),
                                                                                                        new Date(1558018694314L)))
                                                                            .notInUpdatedAts(Arrays.asList(new Date(1558018688583L),
                                                                                                           new Date(1558018692493L),
                                                                                                           new Date(1558018685617L),
                                                                                                           new Date(1558018692065L),
                                                                                                           new Date(1558018688862L),
                                                                                                           new Date(1558018690027L),
                                                                                                           new Date(1558018694558L)))
                                                                            .lessThanUpdatedAt(new Date(1558018692169L))
                                                                            .greaterThanUpdatedAt(new Date(1558018690863L))
                                                                            .equalToName("2acdf97a-4c0b-47b5-9624-eb46bd4de07d")
                                                                            .notEqualToName("eec7ca54-84b5-452f-bc1f-f64003994f7b")
                                                                            .inNames(Arrays.asList("53748737-e5b1-4c3a-8531-e1ac5057e515",
                                                                                                   "4524ae82-2b6b-47f0-b882-d90da9b29aa4",
                                                                                                   "2f51c56a-1672-4610-b629-920e0202f3e1"))
                                                                            .notInNames(Arrays.asList("2e62f9d4-bf17-470b-9bfe-3d991a5c66e0",
                                                                                                      "2cac1123-86d2-4ccc-b11f-99d3712ed33a",
                                                                                                      "fda134ae-8b95-41e8-8fe3-e0cc2ef1cdb3",
                                                                                                      "35b38fd9-6af9-43f4-87f7-4052a8a63b90",
                                                                                                      "26416340-08b0-4aa5-a072-f0c740b73c62",
                                                                                                      "5ed9ead8-98cd-4c2f-be94-0c986f56f8da",
                                                                                                      "f52d31fd-1046-42d1-ba25-59cc51e1fc76",
                                                                                                      "aed13675-5ce5-49d6-b5bf-214308835d34",
                                                                                                      "d70ec696-9545-41fb-b2cc-aaeb1a8052d3"))
                                                                            .equalToDescription("f1bd457f-8b6b-4217-8909-f877e99c5a98")
                                                                            .notEqualToDescription("5d08159a-e351-4733-940f-c24c72a2fcaf")
                                                                            .inDescriptions(Arrays.asList("59128eb1-3ffe-4ad0-beb3-860cfd149392"))
                                                                            .notInDescriptions(Arrays.asList("7761d514-cfd2-4e20-a5fd-4b67d0f21601",
                                                                                                             "22d7faba-50dd-449d-84e6-d765f2e2baaa",
                                                                                                             "cdf2904d-349b-49f4-b8fc-1646a809bff6",
                                                                                                             "ed7819ac-7d22-440f-b3f7-e87c9694e8bc",
                                                                                                             "0a4ab405-7654-447e-a0f4-cae2c3f7978d",
                                                                                                             "ed7a8334-b4a9-4335-a82b-24803f020d7c"))
                                                                            .inCreatedAts(Arrays.asList(new Date(1558018691326L),
                                                                                                        new Date(1558018688020L),
                                                                                                        new Date(1558018693343L),
                                                                                                        new Date(1558018688952L),
                                                                                                        new Date(1558018688389L),
                                                                                                        new Date(1558018689479L),
                                                                                                        new Date(1558018692354L),
                                                                                                        new Date(1558018693072L),
                                                                                                        new Date(1558018686291L)))
                                                                            .notInCreatedAts(Arrays.asList(new Date(1558018689011L),
                                                                                                           new Date(1558018688565L),
                                                                                                           new Date(1558018687671L)))
                                                                            .lessThanCreatedAt(new Date(1558018684911L))
                                                                            .greaterThanCreatedAt(new Date(1558018690400L))
                                                                            .equalToDatafileUrl("23fb8cb0-e53b-487b-91d5-4889cfe4d314")
                                                                            .notEqualToDatafileUrl("3ba31053-9d0e-47c5-a755-d64f3ad7a572")
                                                                            .inDatafileUrls(Arrays.asList("57fa0166-03ae-44e6-a52c-e928bc6843dd",
                                                                                                          "87576084-6f9d-4662-bd72-5bf463c6df14",
                                                                                                          "462636e2-b981-4199-b641-8e6392561441",
                                                                                                          "9e314347-1f75-4dda-98c9-c77eb8101123",
                                                                                                          "70948ac7-dd3c-4fea-ad28-e1d73ba796fc",
                                                                                                          "e6e12c58-149b-4cb7-b7ed-78f395c06a0e",
                                                                                                          "021c5ac6-02fc-4cd7-82fc-1cb29bcf1095",
                                                                                                          "6a5fdf56-1a90-48f1-ae87-4a78c99aa1b3",
                                                                                                          "e96ae0b3-c6a1-49c1-aceb-e52b41d360b6"))
                                                                            .notInDatafileUrls(Arrays.asList("0b7d2dea-717e-443b-a4fc-b497c1b33add",
                                                                                                             "3b018fce-de97-43ec-8c67-125422b21897",
                                                                                                             "d54ae7d1-4b8e-4701-8c38-76d2dd029342",
                                                                                                             "a3d140fc-c6af-403e-83bf-ded4eff1560e",
                                                                                                             "03d1e4d1-dde3-4ea5-ba40-2123514d46e1",
                                                                                                             "4c3b9791-9c7f-41f6-b0f3-5eac72b822ce"))
                                                                            .equalToDatafileSize(Long.valueOf(44))
                                                                            .notEqualToDatafileSize(Long.valueOf(15))
                                                                            .inDatafileSizes(Arrays.asList(Long.valueOf(-124),
                                                                                                           Long.valueOf(120),
                                                                                                           Long.valueOf(52),
                                                                                                           Long.valueOf(116)))
                                                                            .notInDatafileSizes(Arrays.asList(Long.valueOf(-46),
                                                                                                              Long.valueOf(-56),
                                                                                                              Long.valueOf(121),
                                                                                                              Long.valueOf(-3),
                                                                                                              Long.valueOf(-115),
                                                                                                              Long.valueOf(-126),
                                                                                                              Long.valueOf(28)))
                                                                            .equalToDatafileChecksum("f7561573-8efd-450e-8d7b-4553d2f9c040")
                                                                            .notEqualToDatafileChecksum("db02cd84-b70d-445b-810d-aa6528f4c673")
                                                                            .inDatafileChecksums(Arrays.asList("c7a3551c-4131-40e7-9bec-7f00ca90080d",
                                                                                                               "5e554550-b15e-46e1-a4b3-40b73580cdb4",
                                                                                                               "52f6b127-de45-430e-8b2d-29416902b5dc",
                                                                                                               "5168d710-ea1b-49a0-a1c8-fdfc75b9b6a9",
                                                                                                               "a2a1e985-2015-46cd-9591-dfd3bb7b98ef"))
                                                                            .notInDatafileChecksums(Arrays.asList("73776c9f-be33-40fe-b5bb-dde19f19726a",
                                                                                                                  "ccb5dcb1-623b-4ccb-a1fe-b0c481897f02",
                                                                                                                  "bef110df-1092-4e08-9cc2-5db53fa3e0bc",
                                                                                                                  "1e264961-2f96-4c21-8100-bd0b072dfc6e",
                                                                                                                  "d4328b25-f4c4-47f0-b828-351fd94ea79f",
                                                                                                                  "14f12e14-2242-4766-aed1-435f809c3081",
                                                                                                                  "1554da15-99f4-4601-a81b-21b356ee25bf",
                                                                                                                  "e9cbe422-cf13-4c0e-b0d4-edef12ec9a0b"))
                                                                            .equalToId("857b1fac-c675-459c-a65e-659ad97091af")
                                                                            .notEqualToId("5716b587-890d-4ccc-b625-8fd056a801e6")
                                                                            .inIds(Arrays.asList("561ae270-58d0-4f75-92a5-668dfa4eae3e",
                                                                                                 "17048a4c-01f1-4f22-bbaf-c619a5adc3a3",
                                                                                                 "ede0f3a2-5b88-4586-9142-8a00d191bfc4",
                                                                                                 "1c7173cd-45d0-4fe7-99c6-5aabb3563003",
                                                                                                 "84e4d758-9c29-4db8-adc6-752faabd8348"))
                                                                            .notInIds(Arrays.asList("3b378366-b7da-4811-b6ab-fb58832fadbe"));
            assertTrue(option.hasFilters());
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1558018689056L), new Date(1558018685154L), new Date(1558018694314L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1558018688583L), new Date(1558018692493L), new Date(1558018685617L),
                                       new Date(1558018692065L), new Date(1558018688862L), new Date(1558018690027L),
                                       new Date(1558018694558L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.LESS_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1558018692169L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1558018690863L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("2acdf97a-4c0b-47b5-9624-eb46bd4de07d",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("eec7ca54-84b5-452f-bc1f-f64003994f7b",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("53748737-e5b1-4c3a-8531-e1ac5057e515", "4524ae82-2b6b-47f0-b882-d90da9b29aa4",
                                       "2f51c56a-1672-4610-b629-920e0202f3e1"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("2e62f9d4-bf17-470b-9bfe-3d991a5c66e0", "2cac1123-86d2-4ccc-b11f-99d3712ed33a",
                                       "fda134ae-8b95-41e8-8fe3-e0cc2ef1cdb3", "35b38fd9-6af9-43f4-87f7-4052a8a63b90",
                                       "26416340-08b0-4aa5-a072-f0c740b73c62", "5ed9ead8-98cd-4c2f-be94-0c986f56f8da",
                                       "f52d31fd-1046-42d1-ba25-59cc51e1fc76", "aed13675-5ce5-49d6-b5bf-214308835d34",
                                       "d70ec696-9545-41fb-b2cc-aaeb1a8052d3"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("f1bd457f-8b6b-4217-8909-f877e99c5a98",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("5d08159a-e351-4733-940f-c24c72a2fcaf",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("59128eb1-3ffe-4ad0-beb3-860cfd149392"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("7761d514-cfd2-4e20-a5fd-4b67d0f21601", "22d7faba-50dd-449d-84e6-d765f2e2baaa",
                                       "cdf2904d-349b-49f4-b8fc-1646a809bff6", "ed7819ac-7d22-440f-b3f7-e87c9694e8bc",
                                       "0a4ab405-7654-447e-a0f4-cae2c3f7978d", "ed7a8334-b4a9-4335-a82b-24803f020d7c"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1558018691326L), new Date(1558018688020L), new Date(1558018693343L),
                                       new Date(1558018688952L), new Date(1558018688389L), new Date(1558018689479L),
                                       new Date(1558018692354L), new Date(1558018693072L), new Date(1558018686291L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1558018689011L), new Date(1558018688565L), new Date(1558018687671L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.LESS_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1558018684911L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1558018690400L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("23fb8cb0-e53b-487b-91d5-4889cfe4d314",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("3ba31053-9d0e-47c5-a755-d64f3ad7a572",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("57fa0166-03ae-44e6-a52c-e928bc6843dd", "87576084-6f9d-4662-bd72-5bf463c6df14",
                                       "462636e2-b981-4199-b641-8e6392561441", "9e314347-1f75-4dda-98c9-c77eb8101123",
                                       "70948ac7-dd3c-4fea-ad28-e1d73ba796fc", "e6e12c58-149b-4cb7-b7ed-78f395c06a0e",
                                       "021c5ac6-02fc-4cd7-82fc-1cb29bcf1095", "6a5fdf56-1a90-48f1-ae87-4a78c99aa1b3",
                                       "e96ae0b3-c6a1-49c1-aceb-e52b41d360b6"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("0b7d2dea-717e-443b-a4fc-b497c1b33add", "3b018fce-de97-43ec-8c67-125422b21897",
                                       "d54ae7d1-4b8e-4701-8c38-76d2dd029342", "a3d140fc-c6af-403e-83bf-ded4eff1560e",
                                       "03d1e4d1-dde3-4ea5-ba40-2123514d46e1", "4c3b9791-9c7f-41f6-b0f3-5eac72b822ce"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(44),
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    Long.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(15),
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                       Long.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(-124), Long.valueOf(120), Long.valueOf(52), Long.valueOf(116)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(-46), Long.valueOf(-56), Long.valueOf(121), Long.valueOf(-3),
                                       Long.valueOf(-115), Long.valueOf(-126), Long.valueOf(28)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                        FilterOperator.EQUAL));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals("f7561573-8efd-450e-8d7b-4553d2f9c040",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals("db02cd84-b70d-445b-810d-aa6528f4c673",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM, FilterOperator.IN));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals(Arrays.asList("c7a3551c-4131-40e7-9bec-7f00ca90080d", "5e554550-b15e-46e1-a4b3-40b73580cdb4",
                                       "52f6b127-de45-430e-8b2d-29416902b5dc", "5168d710-ea1b-49a0-a1c8-fdfc75b9b6a9",
                                       "a2a1e985-2015-46cd-9591-dfd3bb7b98ef"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                        FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals(Arrays.asList("73776c9f-be33-40fe-b5bb-dde19f19726a", "ccb5dcb1-623b-4ccb-a1fe-b0c481897f02",
                                       "bef110df-1092-4e08-9cc2-5db53fa3e0bc", "1e264961-2f96-4c21-8100-bd0b072dfc6e",
                                       "d4328b25-f4c4-47f0-b828-351fd94ea79f", "14f12e14-2242-4766-aed1-435f809c3081",
                                       "1554da15-99f4-4601-a81b-21b356ee25bf", "e9cbe422-cf13-4c0e-b0d4-edef12ec9a0b"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("857b1fac-c675-459c-a65e-659ad97091af",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("5716b587-890d-4ccc-b625-8fd056a801e6",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("561ae270-58d0-4f75-92a5-668dfa4eae3e", "17048a4c-01f1-4f22-bbaf-c619a5adc3a3",
                                       "ede0f3a2-5b88-4586-9142-8a00d191bfc4", "1c7173cd-45d0-4fe7-99c6-5aabb3563003",
                                       "84e4d758-9c29-4db8-adc6-752faabd8348"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, List.class,
                                                                 option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("3b378366-b7da-4811-b6ab-fb58832fadbe"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID,
                                                                    List.class, option));
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            FirmwareImageListOptions firmwareimagelistoptions1 = new FirmwareImageListOptions(Integer.valueOf(19),
                                                                                              Long.valueOf(35),
                                                                                              Order.getDefault(),
                                                                                              "200beb58-1acb-4542-8b54-d9c356057357",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions2 = new FirmwareImageListOptions(Integer.valueOf(19),
                                                                                              Long.valueOf(35),
                                                                                              Order.getDefault(),
                                                                                              "200beb58-1acb-4542-8b54-d9c356057357",
                                                                                              null, null);
            assertNotNull(firmwareimagelistoptions1);
            assertNotNull(firmwareimagelistoptions2);
            assertNotSame(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2.hashCode(), firmwareimagelistoptions1.hashCode());
            int hashCode = firmwareimagelistoptions1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, firmwareimagelistoptions1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            FirmwareImageListOptions firmwareimagelistoptions1 = new FirmwareImageListOptions(Integer.valueOf(58),
                                                                                              Long.valueOf(83),
                                                                                              Order.getDefault(),
                                                                                              "74e02638-08e8-4d39-8404-88b00ea17b69",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions2 = new FirmwareImageListOptions(Integer.valueOf(58),
                                                                                              Long.valueOf(83),
                                                                                              Order.getDefault(),
                                                                                              "74e02638-08e8-4d39-8404-88b00ea17b69",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions3 = new FirmwareImageListOptions(Integer.valueOf(-85),
                                                                                              Long.valueOf(-69),
                                                                                              Order.getDefault(),
                                                                                              "89b6ac6a-da71-4865-a29c-1163afa16e78",
                                                                                              null, null);
            assertNotNull(firmwareimagelistoptions1);
            assertNotNull(firmwareimagelistoptions2);
            assertNotNull(firmwareimagelistoptions3);
            assertNotSame(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertNotSame(firmwareimagelistoptions3, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions1, firmwareimagelistoptions2);
            assertEquals(firmwareimagelistoptions1, firmwareimagelistoptions1);
            assertFalse(firmwareimagelistoptions1.equals(null));
            assertNotEquals(firmwareimagelistoptions3, firmwareimagelistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
