// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEvents.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEvents {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1558018688234L), null,
                                                          new Date(1558018684305L),
                                                          "541d8f6f-034c-4077-848b-db832a695de6",
                                                          "a3f5e3d1-ec14-419e-a36a-67bfda3da9e3",
                                                          "7bcfc545-138c-4cbb-b4ef-5ba16cbf8453",
                                                          "8da6d4af-9473-4140-9e5b-bc40b087eee7",
                                                          "8c05b39e-acd3-4cb6-9448-da07d45aea42",
                                                          "6d18d947-8ca4-4868-89c6-d1d5f21fca2f", false);
            DeviceEvents deviceevents2 = deviceevents1.clone();
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1558018691488L), null,
                                                          new Date(1558018692161L),
                                                          "acccc80a-091d-48bf-a43a-ef440e2090a0",
                                                          "03f30e51-9a7a-45e4-a029-170f70209932",
                                                          "734441cd-9bef-49bd-a885-7936fc9c4be2",
                                                          "7af8098b-4589-40e7-b02b-e8f2c3345a0d",
                                                          "e8a3576a-0b8d-4ca3-abc4-2ceca232b49a",
                                                          "16cae140-c049-4e72-84ee-ade249f869ac", false);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1558018691488L), null,
                                                          new Date(1558018692161L),
                                                          "acccc80a-091d-48bf-a43a-ef440e2090a0",
                                                          "03f30e51-9a7a-45e4-a029-170f70209932",
                                                          "734441cd-9bef-49bd-a885-7936fc9c4be2",
                                                          "7af8098b-4589-40e7-b02b-e8f2c3345a0d",
                                                          "e8a3576a-0b8d-4ca3-abc4-2ceca232b49a",
                                                          "16cae140-c049-4e72-84ee-ade249f869ac", false);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2.hashCode(), deviceevents1.hashCode());
            int hashCode = deviceevents1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceevents1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEvents deviceevents = new DeviceEvents(null, new Date(1558018684048L), null, new Date(1558018684196L),
                                                     "71ab6f30-6c90-4585-8c22-1143df7864bc",
                                                     "99cfc9f3-a3d6-491f-8814-7d2952a903c2",
                                                     "26a61739-bbd4-4b84-9a42-c8c9a7f59177",
                                                     "18d47bd4-8c41-46c3-aac1-6eec0817ce5e",
                                                     "c5a17837-f7d4-4102-8592-def294018e74",
                                                     "a8fc70f9-067e-4202-803a-4e693e48fce5", true);
        assertTrue(deviceevents.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1558018686689L), null,
                                                          new Date(1558018693072L),
                                                          "d3b31c98-d8cb-4971-add7-c6500a3437a7",
                                                          "60887987-b6af-47cc-bd19-79079f29de59",
                                                          "cd3316dc-4682-489e-ba4b-a53098f4f788",
                                                          "b61e19bb-0aeb-4a1a-a05b-1bff7ae7b502",
                                                          "f1a322a5-507a-4c75-bc83-d0a258543bc9",
                                                          "75e218c0-d4c2-463f-8bd4-debbca309bd6", false);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1558018686689L), null,
                                                          new Date(1558018693072L),
                                                          "d3b31c98-d8cb-4971-add7-c6500a3437a7",
                                                          "60887987-b6af-47cc-bd19-79079f29de59",
                                                          "cd3316dc-4682-489e-ba4b-a53098f4f788",
                                                          "b61e19bb-0aeb-4a1a-a05b-1bff7ae7b502",
                                                          "f1a322a5-507a-4c75-bc83-d0a258543bc9",
                                                          "75e218c0-d4c2-463f-8bd4-debbca309bd6", false);
            DeviceEvents deviceevents3 = new DeviceEvents(null, new Date(1558018687087L), null,
                                                          new Date(1558018690870L),
                                                          "29cf9db9-06aa-429c-88cb-b4677c976173",
                                                          "b9c86cfb-22b8-421f-b29e-e0e60c34a4fd",
                                                          "37cf274e-3be8-4f96-a705-0690937cca3e",
                                                          "2e02e39c-6143-4310-98ed-ac4e14bf8945",
                                                          "0e08d310-f58c-419d-8d77-649bd30f7936",
                                                          "c6384df1-86d9-4201-ae90-3f602384806f", false);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotNull(deviceevents3);
            assertNotSame(deviceevents2, deviceevents1);
            assertNotSame(deviceevents3, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents1, deviceevents2);
            assertEquals(deviceevents1, deviceevents1);
            assertFalse(deviceevents1.equals(null));
            assertNotEquals(deviceevents3, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
