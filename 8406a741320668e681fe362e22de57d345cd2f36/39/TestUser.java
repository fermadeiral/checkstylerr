// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model User.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestUser {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            User user1 = new User("61c6923c18efbbacbd7af9d6fa2e336c", null, "6d48cd04-a282-40a4-aee0-4a3064390189",
                                  new Date(1558018683692L), 24, null, "c2a93.4cec7@03af0.fr", false,
                                  "ed85b1aa-ca77-4474-bd88-28d37ed82d0c", "61c6923c18efbbacbd7af9d6fa2e336c", false,
                                  false, false, 87, null, null, "7ed8d2b8-a069-4e24-b66f-6cbfdd65de74", 60,
                                  "58795ab4-088f-4dc3-86f1-f4ace9de8284", UserStatus.getDefault(), null,
                                  new Date(1558018683458L), "_.5_=");
            User user2 = user1.clone();
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotSame(user2, user1);
            assertEquals(user2, user1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            User user1 = new User("61c6923c18efbbacbd7af9d6fa2e336c", null, "579c5898-eed1-4f2e-8094-0ec10badb336",
                                  new Date(1558018689108L), -18, null, "4a287.e49c2@e7b85.me", false,
                                  "bd425f59-3d1f-4d39-84a6-9928c181a4bd", "61c6923c18efbbacbd7af9d6fa2e336c", false,
                                  false, true, 71, null, null, "3fba0680-b77c-40f0-be42-1cdc32d3bd3c", 8,
                                  "46086dac-9467-4c39-9a24-1f3db66d87f5", UserStatus.getDefault(), null,
                                  new Date(1558018692501L), "_.5_=");
            User user2 = new User("61c6923c18efbbacbd7af9d6fa2e336c", null, "579c5898-eed1-4f2e-8094-0ec10badb336",
                                  new Date(1558018689108L), -18, null, "4a287.e49c2@e7b85.me", false,
                                  "bd425f59-3d1f-4d39-84a6-9928c181a4bd", "61c6923c18efbbacbd7af9d6fa2e336c", false,
                                  false, true, 71, null, null, "3fba0680-b77c-40f0-be42-1cdc32d3bd3c", 8,
                                  "46086dac-9467-4c39-9a24-1f3db66d87f5", UserStatus.getDefault(), null,
                                  new Date(1558018692501L), "_.5_=");
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotSame(user2, user1);
            assertEquals(user2, user1);
            assertEquals(user2.hashCode(), user1.hashCode());
            int hashCode = user1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, user1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        User user = new User("61c6923c18efbbacbd7af9d6fa2e336c", null, "429257c5-8e6b-417e-966c-136be5104c21",
                             new Date(1558018686205L), -19, null, "3c05b.e1d39@aa999.fr", true,
                             "b46dd577-c43d-4984-9bb7-43d8507f2ef7", "61c6923c18efbbacbd7af9d6fa2e336c", true, true,
                             false, 107, null, null, "8d68f4f0-5efd-4581-b713-2b80823f0ac1", -46,
                             "01d39120-129f-4fb8-96cc-9720f0e390ac", UserStatus.getDefault(), null,
                             new Date(1558018686134L), "_.5_=");
        assertTrue(user.isValid());
        User userInvalid = new User("\u0016\f,â‚Ÿ$$\u001fä‚Š*4L445544]ë‡œä²­4\tJY'\u001d%ä°¢4é­©C;\u0002(B>\u000fì¯«å¿´?\u0016/ç»³55ç©”á?Ÿ4L5?è«³\u0010ë¿¿55?555@ :H",
                                    null, "6847aab6-776c-49b3-97f2-67b0b51fdad9", new Date(1558018687641L), -67, null,
                                    null, false,
                                    "5270261a-9b8d-48e5-8b16-ec1e69066d98acf1b407-ea4e-4570-a4e3-3a932d0bf00217726c48-3b35-4758-96f0-ffd7d9bb10da",
                                    "\u0016\f,â‚Ÿ$$\u001fä‚Š*4L445544]ë‡œä²­4\tJY'\u001d%ä°¢4é­©C;\u0002(B>\u000fì¯«å¿´?\u0016/ç»³55ç©”á?Ÿ4L5?è«³\u0010ë¿¿55?555@ :H",
                                    true, false, false, 89, null, null, "4565383f-3306-47a3-b659-2c5f9ad0f44b", 62,
                                    "da35c9ad-fab6-49ea-8d83-425e16328d77447cf267-cf7f-4282-b877-6a46e0e1b98390c09d38-fd86-4902-a79d-fa8e92d61f91",
                                    UserStatus.getDefault(), null, new Date(1558018692192L),
                                    "4á°„171Gê©¶!?;ï?²î¸ N? â¤¡é²°Ü¬3áŸ£:!Y<3\u000b<;\u00177#(9/Èºæ‹ƒ8B\u000038:F\u001164<<,?60!ë¥…Hâ³†I83Wæº¾");
        assertFalse(userInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            User user1 = new User("61c6923c18efbbacbd7af9d6fa2e336c", null, "a668517c-dfca-4d17-84c0-67c228638e28",
                                  new Date(1558018684509L), 119, null, "d4ee6.da73f@61478.fr", false,
                                  "b1f8c978-a45f-4b61-9bd6-36e6b404196d", "61c6923c18efbbacbd7af9d6fa2e336c", false,
                                  false, true, 74, null, null, "044fdbf5-1e4e-417a-8a48-cda2564ebede", 4,
                                  "44c55ad5-dd16-4564-bfbc-08e720ba879d", UserStatus.getDefault(), null,
                                  new Date(1558018690485L), "_.5_=");
            User user2 = new User("61c6923c18efbbacbd7af9d6fa2e336c", null, "a668517c-dfca-4d17-84c0-67c228638e28",
                                  new Date(1558018684509L), 119, null, "d4ee6.da73f@61478.fr", false,
                                  "b1f8c978-a45f-4b61-9bd6-36e6b404196d", "61c6923c18efbbacbd7af9d6fa2e336c", false,
                                  false, true, 74, null, null, "044fdbf5-1e4e-417a-8a48-cda2564ebede", 4,
                                  "44c55ad5-dd16-4564-bfbc-08e720ba879d", UserStatus.getDefault(), null,
                                  new Date(1558018690485L), "_.5_=");
            User user3 = new User("61c6923c18efbbacbd7af9d6fa2e336c", null, "141884f1-f884-45bf-b63c-3437ccb07b77",
                                  new Date(1558018685378L), -87, null, "7529a.f8c14@04e63.fr", false,
                                  "1be5131a-fca2-4d0c-a748-555bf9487adb", "61c6923c18efbbacbd7af9d6fa2e336c", false,
                                  false, true, -30, null, null, "b75f74b6-1b68-4005-a59d-5b37baafd2bc", 50,
                                  "bb02f9a0-f027-4f00-9eee-5efc3e084f65", UserStatus.getDefault(), null,
                                  new Date(1558018687631L), "_.5_=");
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotNull(user3);
            assertNotSame(user2, user1);
            assertNotSame(user3, user1);
            assertEquals(user2, user1);
            assertEquals(user2, user1);
            assertEquals(user1, user2);
            assertEquals(user1, user1);
            assertFalse(user1.equals(null));
            assertNotEquals(user3, user1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
