// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.security.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeveloperCertificate.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeveloperCertificate {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("969aeeb0-e328-4067-9271-51235b652f0d",
                                                                                  "43716ec1-9db6-4367-a15b-92408fbc8865",
                                                                                  new Date(1558018686230L),
                                                                                  "331f1b5a-b51f-4ad8-b528-b5667d2690b9",
                                                                                  "fd305469-c005-4e1c-859a-e9fa412f5ad0",
                                                                                  "24583512-348e-4464-80f0-e367e39eb545",
                                                                                  "014461cc-ab2b-4759-815f-394ed56b149f",
                                                                                  "27e7c85c-55c6-44b1-be8c-d82ae1b39c39");
            DeveloperCertificate developercertificate2 = developercertificate1.clone();
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("527d6078-5eff-4f04-89a4-8d42d6eeeb00",
                                                                                  "0844fd9b-359f-4e47-8109-8377ac12a078",
                                                                                  new Date(1558018690955L),
                                                                                  "0661b9b2-4a63-40e5-a438-22e43fc923c0",
                                                                                  "b9e60f97-66e4-4c00-a4d2-966d6b030fac",
                                                                                  "1036d864-6941-46d5-857f-655d92223a94",
                                                                                  "c52c558b-5877-4e78-8d8f-a5e8a50a5fa2",
                                                                                  "94ce7d47-a6dd-4c83-a67e-4bf166e8de2a");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("527d6078-5eff-4f04-89a4-8d42d6eeeb00",
                                                                                  "0844fd9b-359f-4e47-8109-8377ac12a078",
                                                                                  new Date(1558018690955L),
                                                                                  "0661b9b2-4a63-40e5-a438-22e43fc923c0",
                                                                                  "b9e60f97-66e4-4c00-a4d2-966d6b030fac",
                                                                                  "1036d864-6941-46d5-857f-655d92223a94",
                                                                                  "c52c558b-5877-4e78-8d8f-a5e8a50a5fa2",
                                                                                  "94ce7d47-a6dd-4c83-a67e-4bf166e8de2a");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2.hashCode(), developercertificate1.hashCode());
            int hashCode = developercertificate1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, developercertificate1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeveloperCertificate developercertificate = new DeveloperCertificate("a65ec422-f13c-4a3f-80c4-b6f0e0b38193",
                                                                             "339e33c6-f25a-4e3f-9304-bb7fb21b37d3",
                                                                             new Date(1558018688267L),
                                                                             "497a9cec-41a6-4e5a-98bb-12b8bf69e0f7",
                                                                             "2c5157e7-5789-4804-ad4d-7716f0468e81",
                                                                             "607bb581-d4ae-4246-bfee-8774299c9eac",
                                                                             "941b97ec-a34f-441f-8558-a280d0546b37",
                                                                             "70b2083a-2566-4fd9-a202-c4c27e1e0b31");
        assertTrue(developercertificate.isValid());
        DeveloperCertificate developercertificateInvalid = new DeveloperCertificate("ff41bb58-09f7-4ffa-ac88-04aaa8343b55",
                                                                                    "a0743377-5751-4911-8949-f8dc8ce13535",
                                                                                    new Date(1558018685658L),
                                                                                    "50f3b988-4b53-49eb-bec3-dc9f39293c19",
                                                                                    "7e8adefc-27cb-4186-b0aa-362786de87b6",
                                                                                    "ac3d8a16-8222-4910-a559-44ead08f84a1",
                                                                                    null,
                                                                                    "847f0088-31f5-4720-8cb8-0a33c10256bc");
        assertFalse(developercertificateInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("ed5d7df1-5cd7-4b9a-aed3-a1d05a3f612d",
                                                                                  "a8ec85be-cbc3-4531-8679-86310f49739f",
                                                                                  new Date(1558018687806L),
                                                                                  "18d3cd92-79bf-4b5a-bfd2-bf69931dc9b1",
                                                                                  "6f5c65fc-aa30-498c-86aa-ad2dfe689f99",
                                                                                  "2aec8771-e9cc-4e37-803c-22197577f20c",
                                                                                  "87f9d0ae-4cb8-4903-bfcf-740d91fcee69",
                                                                                  "b6e94b11-becf-45f0-a661-9435b12098a6");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("ed5d7df1-5cd7-4b9a-aed3-a1d05a3f612d",
                                                                                  "a8ec85be-cbc3-4531-8679-86310f49739f",
                                                                                  new Date(1558018687806L),
                                                                                  "18d3cd92-79bf-4b5a-bfd2-bf69931dc9b1",
                                                                                  "6f5c65fc-aa30-498c-86aa-ad2dfe689f99",
                                                                                  "2aec8771-e9cc-4e37-803c-22197577f20c",
                                                                                  "87f9d0ae-4cb8-4903-bfcf-740d91fcee69",
                                                                                  "b6e94b11-becf-45f0-a661-9435b12098a6");
            DeveloperCertificate developercertificate3 = new DeveloperCertificate("a3812635-f420-484b-9804-2a6202c214b4",
                                                                                  "858f4f4e-02ba-463a-9adc-b4637018d8f8",
                                                                                  new Date(1558018689969L),
                                                                                  "10d6afb1-79f1-4c5b-b15e-dcab76387345",
                                                                                  "b053f9ff-daa2-4689-aa48-dec56f9866f8",
                                                                                  "5427999e-a11f-4239-9b5a-4dfcb0e13e7d",
                                                                                  "cbcb5cb3-1fdd-4670-b15e-b05cdf644cba",
                                                                                  "2178e2cf-372e-4dd3-9150-c821dc487dea");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotNull(developercertificate3);
            assertNotSame(developercertificate2, developercertificate1);
            assertNotSame(developercertificate3, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate1, developercertificate2);
            assertEquals(developercertificate1, developercertificate1);
            assertFalse(developercertificate1.equals(null));
            assertNotEquals(developercertificate3, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
