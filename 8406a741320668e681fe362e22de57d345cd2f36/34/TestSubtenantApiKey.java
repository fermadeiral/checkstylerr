// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantApiKey.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantApiKey {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("61c6923c18efbbacbd7af9d6fa2e336c",
                                                                   new Date(1558018690429L), -53,
                                                                   "61c6923c18efbbacbd7af9d6fa2e336c",
                                                                   "e23dd2a9-ae75-4d33-99fe-6e18cf03411b", 55,
                                                                   "7c8911ed-4e08-4dde-9cb1-58975399e72f",
                                                                   "61c6923c18efbbacbd7af9d6fa2e336c",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1558018692973L));
            SubtenantApiKey subtenantapikey2 = subtenantapikey1.clone();
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("61c6923c18efbbacbd7af9d6fa2e336c",
                                                                   new Date(1558018688162L), 0,
                                                                   "61c6923c18efbbacbd7af9d6fa2e336c",
                                                                   "5119a187-215c-4f0a-9b68-a8576059587d", 61,
                                                                   "e81342b5-eabb-4969-b142-75cc1fee5242",
                                                                   "61c6923c18efbbacbd7af9d6fa2e336c",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1558018684283L));
            SubtenantApiKey subtenantapikey2 = new SubtenantApiKey("61c6923c18efbbacbd7af9d6fa2e336c",
                                                                   new Date(1558018688162L), 0,
                                                                   "61c6923c18efbbacbd7af9d6fa2e336c",
                                                                   "5119a187-215c-4f0a-9b68-a8576059587d", 61,
                                                                   "e81342b5-eabb-4969-b142-75cc1fee5242",
                                                                   "61c6923c18efbbacbd7af9d6fa2e336c",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1558018684283L));
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2.hashCode(), subtenantapikey1.hashCode());
            int hashCode = subtenantapikey1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantapikey1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantApiKey subtenantapikey = new SubtenantApiKey("61c6923c18efbbacbd7af9d6fa2e336c",
                                                              new Date(1558018686874L), 6,
                                                              "61c6923c18efbbacbd7af9d6fa2e336c",
                                                              "546b5832-45d9-4780-8a49-dbf50c500bc5", 96,
                                                              "1830f158-7e80-404c-ab6f-dff89ee9bc93",
                                                              "61c6923c18efbbacbd7af9d6fa2e336c",
                                                              SubtenantApiKeyStatus.getDefault(),
                                                              new Date(1558018688546L));
        assertTrue(subtenantapikey.isValid());
        SubtenantApiKey subtenantapikeyInvalid = new SubtenantApiKey(null, new Date(1558018684868L), -11,
                                                                     "\u0016\f,â‚Ÿ$$\u001fä‚Š*4L445544]ë‡œä²­4\tJY'\u001d%ä°¢4é­©C;\u0002(B>\u000fì¯«å¿´?\u0016/ç»³55ç©”á?Ÿ4L5?è«³\u0010ë¿¿55?555@ :H",
                                                                     "7bc34bfe-7a59-4367-9ebb-dbfe747971cf", -19, null,
                                                                     "\u0016\f,â‚Ÿ$$\u001fä‚Š*4L445544]ë‡œä²­4\tJY'\u001d%ä°¢4é­©C;\u0002(B>\u000fì¯«å¿´?\u0016/ç»³55ç©”á?Ÿ4L5?è«³\u0010ë¿¿55?555@ :H",
                                                                     SubtenantApiKeyStatus.getDefault(),
                                                                     new Date(1558018686853L));
        assertFalse(subtenantapikeyInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("61c6923c18efbbacbd7af9d6fa2e336c",
                                                                   new Date(1558018689627L), 12,
                                                                   "61c6923c18efbbacbd7af9d6fa2e336c",
                                                                   "7c5a8424-f49e-466d-a187-257e6c4c0b27", 116,
                                                                   "3d2acb75-c29d-415b-a645-59bd2ea8261c",
                                                                   "61c6923c18efbbacbd7af9d6fa2e336c",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1558018685365L));
            SubtenantApiKey subtenantapikey2 = new SubtenantApiKey("61c6923c18efbbacbd7af9d6fa2e336c",
                                                                   new Date(1558018689627L), 12,
                                                                   "61c6923c18efbbacbd7af9d6fa2e336c",
                                                                   "7c5a8424-f49e-466d-a187-257e6c4c0b27", 116,
                                                                   "3d2acb75-c29d-415b-a645-59bd2ea8261c",
                                                                   "61c6923c18efbbacbd7af9d6fa2e336c",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1558018685365L));
            SubtenantApiKey subtenantapikey3 = new SubtenantApiKey("61c6923c18efbbacbd7af9d6fa2e336c",
                                                                   new Date(1558018689539L), -36,
                                                                   "61c6923c18efbbacbd7af9d6fa2e336c",
                                                                   "e2bd5dcf-36b9-4f5e-92b0-31f482a11dc0", 79,
                                                                   "c08741b9-dfb0-4eb4-80fb-6fe1f673ed87",
                                                                   "61c6923c18efbbacbd7af9d6fa2e336c",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1558018690333L));
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotNull(subtenantapikey3);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertNotSame(subtenantapikey3, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey1, subtenantapikey2);
            assertEquals(subtenantapikey1, subtenantapikey1);
            assertFalse(subtenantapikey1.equals(null));
            assertNotEquals(subtenantapikey3, subtenantapikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
