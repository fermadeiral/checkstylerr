// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.deviceupdate.model;

import static org.junit.Assert.*;

import com.arm.mbed.cloud.sdk.common.Order;
import com.arm.mbed.cloud.sdk.common.listing.ListOptionsEncoder;
import com.arm.mbed.cloud.sdk.common.listing.filtering.FilterOperator;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import org.junit.Test;

/**
 * Unit tests for Model FirmwareManifestListOptions.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestFirmwareManifestListOptions {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            FirmwareManifestListOptions firmwaremanifestlistoptions1 = new FirmwareManifestListOptions(Integer.valueOf(102),
                                                                                                       Long.valueOf(101),
                                                                                                       Order.getDefault(),
                                                                                                       "f0a48a15-6857-494d-b5a2-ed14ea35ceae",
                                                                                                       null, null);
            FirmwareManifestListOptions firmwaremanifestlistoptions2 = firmwaremanifestlistoptions1.clone();
            assertNotNull(firmwaremanifestlistoptions1);
            assertNotNull(firmwaremanifestlistoptions2);
            assertNotSame(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the filters method.
     */
    @SuppressWarnings({ "boxing", "resource" })
    @Test
    public void testFilters() {
        try {
            FirmwareManifestListOptions option = new FirmwareManifestListOptions().inCreatedAts(Arrays.asList(new Date(1558018686363L),
                                                                                                              new Date(1558018688816L),
                                                                                                              new Date(1558018688903L),
                                                                                                              new Date(1558018692674L),
                                                                                                              new Date(1558018687262L),
                                                                                                              new Date(1558018687072L),
                                                                                                              new Date(1558018685543L)))
                                                                                  .notInCreatedAts(Arrays.asList(new Date(1558018694313L)))
                                                                                  .lessThanCreatedAt(new Date(1558018685003L))
                                                                                  .greaterThanCreatedAt(new Date(1558018693656L))
                                                                                  .equalToName("86ec4cc4-786c-4b53-a46f-e94b4e453f8b")
                                                                                  .notEqualToName("83766dbc-3970-4c30-ab1c-c48c488621c0")
                                                                                  .inNames(Arrays.asList("d0fe4e23-390a-4451-9a6d-f00b0916f98d",
                                                                                                         "6af13ceb-3379-431b-93cf-9a3d9cbf214c",
                                                                                                         "68b52cae-f3fd-4a5f-a9d5-82f99a28512d",
                                                                                                         "11b2d895-43c0-4bd3-a25f-a115f1fd4aba",
                                                                                                         "1e9a1438-d051-4c38-8d3d-8fcb520426b7"))
                                                                                  .notInNames(Arrays.asList("4a944942-e32f-4e21-bc02-1d6dba2c403e",
                                                                                                            "025727fc-ccf5-4703-80de-2a54cfb70534",
                                                                                                            "200e110e-df5c-4762-85ab-cf0004e55f7f",
                                                                                                            "3b1231e7-1c36-41bc-853c-e1f0b2876a48"))
                                                                                  .equalToId("08211c69-6187-4d42-b4cd-51f3f38ed8b4")
                                                                                  .notEqualToId("4c5eb8d3-5ba9-46af-b52c-689a8631777f")
                                                                                  .inIds(Arrays.asList("4c958af2-98e4-4b7d-9a5f-68adcd1a6605",
                                                                                                       "40d7e726-569a-4ef0-8ff7-b01ee759b55c",
                                                                                                       "c1e3b24d-a814-4367-9623-881e6a4225f1",
                                                                                                       "3b26a6c9-48b0-462d-a2c2-a319900756c9",
                                                                                                       "0e4b9475-d34b-4df8-a733-6b3711ba5150",
                                                                                                       "6181067f-f82d-43e0-8934-9e2039a3f172"))
                                                                                  .notInIds(Arrays.asList("aeb7fbbf-0c54-4c6c-ae82-6d058eda73c1",
                                                                                                          "a1f049cd-da22-420e-8343-3f9ab3138496"))
                                                                                  .equalToDatafileUrl("e0682e46-4081-4120-bcc3-78500cef9d67")
                                                                                  .notEqualToDatafileUrl("419da025-6097-4125-8c69-998f8b8aa4a3")
                                                                                  .inDatafileUrls(Arrays.asList("685f0c9d-6215-4ae0-94c5-49681cfa84c4",
                                                                                                                "34abcc64-90b3-4193-a3ec-eac0c1907bea",
                                                                                                                "786f8795-4eae-46f9-917f-69656713b228",
                                                                                                                "7b246959-ef35-415c-800a-380562864726",
                                                                                                                "92fbf842-04d8-4b69-91e9-d7df48dceeac",
                                                                                                                "0b8c583d-bc16-46d4-a914-61cf7f3f2ce6",
                                                                                                                "60db98cc-a6d6-49ef-a607-c38891c4f737"))
                                                                                  .notInDatafileUrls(Arrays.asList("f0db1519-16d6-48fe-92cb-fa3fdd6f9b1a",
                                                                                                                   "c5e9a821-0a89-4250-98a7-cba0f5275f8b"))
                                                                                  .equalToDatafileSize(Long.valueOf(9))
                                                                                  .notEqualToDatafileSize(Long.valueOf(103))
                                                                                  .inDatafileSizes(Arrays.asList(Long.valueOf(-13),
                                                                                                                 Long.valueOf(117),
                                                                                                                 Long.valueOf(-13),
                                                                                                                 Long.valueOf(123),
                                                                                                                 Long.valueOf(119),
                                                                                                                 Long.valueOf(89),
                                                                                                                 Long.valueOf(-128)))
                                                                                  .notInDatafileSizes(Arrays.asList(Long.valueOf(-60),
                                                                                                                    Long.valueOf(36),
                                                                                                                    Long.valueOf(43),
                                                                                                                    Long.valueOf(-97),
                                                                                                                    Long.valueOf(-5)))
                                                                                  .equalToDeviceClass("299a7542-e324-43fa-9d06-6b187883cbdd")
                                                                                  .notEqualToDeviceClass("778ff6fb-7b05-47f2-80ca-d048fb1ea2a2")
                                                                                  .inDeviceClass(Arrays.asList("30a4931f-707b-4074-bf52-7870354da1ed",
                                                                                                               "fa7decc1-3d11-4658-83cd-3310c30b658b",
                                                                                                               "c16b7873-f062-4922-bb09-00c7cf5f6871",
                                                                                                               "8c863361-2404-4a39-9440-ab05ece72c6a",
                                                                                                               "dd137ae4-af6d-42e0-98cb-0af47cc3cef9"))
                                                                                  .notInDeviceClass(Arrays.asList("d895348c-2ec6-4f3a-9074-014823fc7341",
                                                                                                                  "e52a4438-f9bc-4a6f-9683-a708aec70ae3"))
                                                                                  .inTimestamps(Arrays.asList(new Date(1558018685760L),
                                                                                                              new Date(1558018692276L)))
                                                                                  .notInTimestamps(Arrays.asList(new Date(1558018684834L)))
                                                                                  .lessThanTimestamp(new Date(1558018689815L))
                                                                                  .greaterThanTimestamp(new Date(1558018688959L))
                                                                                  .inUpdatedAts(Arrays.asList(new Date(1558018688215L)))
                                                                                  .notInUpdatedAts(Arrays.asList(new Date(1558018692655L),
                                                                                                                 new Date(1558018691331L),
                                                                                                                 new Date(1558018685624L)))
                                                                                  .lessThanUpdatedAt(new Date(1558018691211L))
                                                                                  .greaterThanUpdatedAt(new Date(1558018685554L))
                                                                                  .equalToDescription("0320d20d-50b6-43ff-ba27-660b9cb8a9df")
                                                                                  .notEqualToDescription("54c5516c-d198-4ab3-a763-01b7cfb29db7")
                                                                                  .inDescriptions(Arrays.asList("fd157b7e-a2ec-475b-a023-616531a6650a",
                                                                                                                "b04167b3-2974-4355-bf4a-66415af8d92a",
                                                                                                                "726f645f-3643-4a29-9c1b-ddb6d3890dda",
                                                                                                                "22f30ebc-2f9a-4ed1-83fe-41a7d87ca4d6",
                                                                                                                "6a263921-df40-41b6-8d08-69bfa138e431",
                                                                                                                "de710f50-e1f5-49f4-aa26-0ac3e4b3823a",
                                                                                                                "99c50c22-1e80-42fb-9b2e-5cb92912d63e",
                                                                                                                "4bdfeae4-4bdb-449a-9860-dc72f3c6f0b6",
                                                                                                                "531eb069-3ead-4c5e-84aa-977689aea108"))
                                                                                  .notInDescriptions(Arrays.asList("045c5eff-c9cc-4309-a0ed-ff7377969edb",
                                                                                                                   "30584044-7058-4631-9d1f-340b145040ba",
                                                                                                                   "3d46a534-1f0b-4547-aa31-855f76f18b5d",
                                                                                                                   "8ddaa579-7d5e-4d40-a9e4-b44616035b22",
                                                                                                                   "38b61fe5-5982-4704-86f0-d011b4b62792",
                                                                                                                   "e4f113f2-2470-4877-9f8e-2fcb8637b922",
                                                                                                                   "ccdcf051-be68-4b18-8cdd-a6eb3b0c712d",
                                                                                                                   "eed685b8-587d-4e4a-a44e-d6284ffab48e"));
            assertTrue(option.hasFilters());
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1558018686363L), new Date(1558018688816L), new Date(1558018688903L),
                                       new Date(1558018692674L), new Date(1558018687262L), new Date(1558018687072L),
                                       new Date(1558018685543L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1558018694313L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                        FilterOperator.LESS_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1558018685003L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1558018693656L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME, FilterOperator.EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("86ec4cc4-786c-4b53-a46f-e94b4e453f8b",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("83766dbc-3970-4c30-ab1c-c48c488621c0",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME, FilterOperator.IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("d0fe4e23-390a-4451-9a6d-f00b0916f98d", "6af13ceb-3379-431b-93cf-9a3d9cbf214c",
                                       "68b52cae-f3fd-4a5f-a9d5-82f99a28512d", "11b2d895-43c0-4bd3-a25f-a115f1fd4aba",
                                       "1e9a1438-d051-4c38-8d3d-8fcb520426b7"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("4a944942-e32f-4e21-bc02-1d6dba2c403e", "025727fc-ccf5-4703-80de-2a54cfb70534",
                                       "200e110e-df5c-4762-85ab-cf0004e55f7f", "3b1231e7-1c36-41bc-853c-e1f0b2876a48"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID, FilterOperator.EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("08211c69-6187-4d42-b4cd-51f3f38ed8b4",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("4c5eb8d3-5ba9-46af-b52c-689a8631777f",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID, FilterOperator.IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("4c958af2-98e4-4b7d-9a5f-68adcd1a6605", "40d7e726-569a-4ef0-8ff7-b01ee759b55c",
                                       "c1e3b24d-a814-4367-9623-881e6a4225f1", "3b26a6c9-48b0-462d-a2c2-a319900756c9",
                                       "0e4b9475-d34b-4df8-a733-6b3711ba5150", "6181067f-f82d-43e0-8934-9e2039a3f172"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("aeb7fbbf-0c54-4c6c-ae82-6d058eda73c1", "a1f049cd-da22-420e-8343-3f9ab3138496"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("e0682e46-4081-4120-bcc3-78500cef9d67",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("419da025-6097-4125-8c69-998f8b8aa4a3",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("685f0c9d-6215-4ae0-94c5-49681cfa84c4", "34abcc64-90b3-4193-a3ec-eac0c1907bea",
                                       "786f8795-4eae-46f9-917f-69656713b228", "7b246959-ef35-415c-800a-380562864726",
                                       "92fbf842-04d8-4b69-91e9-d7df48dceeac", "0b8c583d-bc16-46d4-a914-61cf7f3f2ce6",
                                       "60db98cc-a6d6-49ef-a607-c38891c4f737"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("f0db1519-16d6-48fe-92cb-fa3fdd6f9b1a", "c5e9a821-0a89-4250-98a7-cba0f5275f8b"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(9),
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    Long.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(103),
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                       Long.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(-13), Long.valueOf(117), Long.valueOf(-13), Long.valueOf(123),
                                       Long.valueOf(119), Long.valueOf(89), Long.valueOf(-128)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                        FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(-60), Long.valueOf(36), Long.valueOf(43), Long.valueOf(-97),
                                       Long.valueOf(-5)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS, FilterOperator.EQUAL));
            assertNotNull(option.getDeviceClassFilters());
            assertEquals("299a7542-e324-43fa-9d06-6b187883cbdd",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDeviceClassFilters());
            assertEquals("778ff6fb-7b05-47f2-80ca-d048fb1ea2a2",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS, FilterOperator.IN));
            assertNotNull(option.getDeviceClassFilters());
            assertEquals(Arrays.asList("30a4931f-707b-4074-bf52-7870354da1ed", "fa7decc1-3d11-4658-83cd-3310c30b658b",
                                       "c16b7873-f062-4922-bb09-00c7cf5f6871", "8c863361-2404-4a39-9440-ab05ece72c6a",
                                       "dd137ae4-af6d-42e0-98cb-0af47cc3cef9"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS, FilterOperator.NOT_IN));
            assertNotNull(option.getDeviceClassFilters());
            assertEquals(Arrays.asList("d895348c-2ec6-4f3a-9074-014823fc7341", "e52a4438-f9bc-4a6f-9683-a708aec70ae3"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP, FilterOperator.IN));
            assertNotNull(option.getTimestampFilters());
            assertEquals(Arrays.asList(new Date(1558018685760L), new Date(1558018692276L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP, FilterOperator.NOT_IN));
            assertNotNull(option.getTimestampFilters());
            assertEquals(Arrays.asList(new Date(1558018684834L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP, FilterOperator.LESS_THAN));
            assertNotNull(option.getTimestampFilters());
            assertEquals(new Date(1558018689815L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getTimestampFilters());
            assertEquals(new Date(1558018688959L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1558018688215L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1558018692655L), new Date(1558018691331L), new Date(1558018685624L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                        FilterOperator.LESS_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1558018691211L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1558018685554L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("0320d20d-50b6-43ff-ba27-660b9cb8a9df",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("54c5516c-d198-4ab3-a763-01b7cfb29db7",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("fd157b7e-a2ec-475b-a023-616531a6650a", "b04167b3-2974-4355-bf4a-66415af8d92a",
                                       "726f645f-3643-4a29-9c1b-ddb6d3890dda", "22f30ebc-2f9a-4ed1-83fe-41a7d87ca4d6",
                                       "6a263921-df40-41b6-8d08-69bfa138e431", "de710f50-e1f5-49f4-aa26-0ac3e4b3823a",
                                       "99c50c22-1e80-42fb-9b2e-5cb92912d63e", "4bdfeae4-4bdb-449a-9860-dc72f3c6f0b6",
                                       "531eb069-3ead-4c5e-84aa-977689aea108"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("045c5eff-c9cc-4309-a0ed-ff7377969edb", "30584044-7058-4631-9d1f-340b145040ba",
                                       "3d46a534-1f0b-4547-aa31-855f76f18b5d", "8ddaa579-7d5e-4d40-a9e4-b44616035b22",
                                       "38b61fe5-5982-4704-86f0-d011b4b62792", "e4f113f2-2470-4877-9f8e-2fcb8637b922",
                                       "ccdcf051-be68-4b18-8cdd-a6eb3b0c712d", "eed685b8-587d-4e4a-a44e-d6284ffab48e"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    List.class, option));
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            FirmwareManifestListOptions firmwaremanifestlistoptions1 = new FirmwareManifestListOptions(Integer.valueOf(1),
                                                                                                       Long.valueOf(-3),
                                                                                                       Order.getDefault(),
                                                                                                       "0ddd5cad-99f7-444f-ad77-5f468a9e8f06",
                                                                                                       null, null);
            FirmwareManifestListOptions firmwaremanifestlistoptions2 = new FirmwareManifestListOptions(Integer.valueOf(1),
                                                                                                       Long.valueOf(-3),
                                                                                                       Order.getDefault(),
                                                                                                       "0ddd5cad-99f7-444f-ad77-5f468a9e8f06",
                                                                                                       null, null);
            assertNotNull(firmwaremanifestlistoptions1);
            assertNotNull(firmwaremanifestlistoptions2);
            assertNotSame(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2.hashCode(), firmwaremanifestlistoptions1.hashCode());
            int hashCode = firmwaremanifestlistoptions1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, firmwaremanifestlistoptions1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            FirmwareManifestListOptions firmwaremanifestlistoptions1 = new FirmwareManifestListOptions(Integer.valueOf(116),
                                                                                                       Long.valueOf(85),
                                                                                                       Order.getDefault(),
                                                                                                       "95794438-7daa-4a41-9f72-618e7689a849",
                                                                                                       null, null);
            FirmwareManifestListOptions firmwaremanifestlistoptions2 = new FirmwareManifestListOptions(Integer.valueOf(116),
                                                                                                       Long.valueOf(85),
                                                                                                       Order.getDefault(),
                                                                                                       "95794438-7daa-4a41-9f72-618e7689a849",
                                                                                                       null, null);
            FirmwareManifestListOptions firmwaremanifestlistoptions3 = new FirmwareManifestListOptions(Integer.valueOf(108),
                                                                                                       Long.valueOf(4),
                                                                                                       Order.getDefault(),
                                                                                                       "24e3320f-ec87-43c2-b418-d1093720feaa",
                                                                                                       null, null);
            assertNotNull(firmwaremanifestlistoptions1);
            assertNotNull(firmwaremanifestlistoptions2);
            assertNotNull(firmwaremanifestlistoptions3);
            assertNotSame(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertNotSame(firmwaremanifestlistoptions3, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions1, firmwaremanifestlistoptions2);
            assertEquals(firmwaremanifestlistoptions1, firmwaremanifestlistoptions1);
            assertFalse(firmwaremanifestlistoptions1.equals(null));
            assertNotEquals(firmwaremanifestlistoptions3, firmwaremanifestlistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
