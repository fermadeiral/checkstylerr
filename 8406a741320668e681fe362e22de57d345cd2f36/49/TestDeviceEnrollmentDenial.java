// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEnrollmentDenial.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEnrollmentDenial {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("61c6923c18efbbacbd7af9d6fa2e336c",
                                                                                        new Date(1558018691779L),
                                                                                        "203cbf60-0525-4890-8475-84b1db8d653c",
                                                                                        "61c6923c18efbbacbd7af9d6fa2e336c",
                                                                                        "61c6923c18efbbacbd7af9d6fa2e336c");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = deviceenrollmentdenial1.clone();
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("61c6923c18efbbacbd7af9d6fa2e336c",
                                                                                        new Date(1558018684223L),
                                                                                        "40221caf-5b98-4f42-b1a4-643daf8307f7",
                                                                                        "61c6923c18efbbacbd7af9d6fa2e336c",
                                                                                        "61c6923c18efbbacbd7af9d6fa2e336c");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = new DeviceEnrollmentDenial("61c6923c18efbbacbd7af9d6fa2e336c",
                                                                                        new Date(1558018684223L),
                                                                                        "40221caf-5b98-4f42-b1a4-643daf8307f7",
                                                                                        "61c6923c18efbbacbd7af9d6fa2e336c",
                                                                                        "61c6923c18efbbacbd7af9d6fa2e336c");
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2.hashCode(), deviceenrollmentdenial1.hashCode());
            int hashCode = deviceenrollmentdenial1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceenrollmentdenial1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEnrollmentDenial deviceenrollmentdenial = new DeviceEnrollmentDenial("61c6923c18efbbacbd7af9d6fa2e336c",
                                                                                   new Date(1558018687510L),
                                                                                   "b6f3a1dd-5e81-4576-b490-d6b05d6e2494",
                                                                                   "61c6923c18efbbacbd7af9d6fa2e336c",
                                                                                   "61c6923c18efbbacbd7af9d6fa2e336c");
        assertTrue(deviceenrollmentdenial.isValid());
        DeviceEnrollmentDenial deviceenrollmentdenialInvalid = new DeviceEnrollmentDenial("\u0016\f,â‚Ÿ$$\u001fä‚Š*4L445544]ë‡œä²­4\tJY'\u001d%ä°¢4é­©C;\u0002(B>\u000fì¯«å¿´?\u0016/ç»³55ç©”á?Ÿ4L5?è«³\u0010ë¿¿55?555@ :H",
                                                                                          new Date(1558018691253L),
                                                                                          "8480a8bd-b6c5-49ed-bad9-e11ec81e8744",
                                                                                          "\u0016\f,â‚Ÿ$$\u001fä‚Š*4L445544]ë‡œä²­4\tJY'\u001d%ä°¢4é­©C;\u0002(B>\u000fì¯«å¿´?\u0016/ç»³55ç©”á?Ÿ4L5?è«³\u0010ë¿¿55?555@ :H",
                                                                                          "\u0016\f,â‚Ÿ$$\u001fä‚Š*4L445544]ë‡œä²­4\tJY'\u001d%ä°¢4é­©C;\u0002(B>\u000fì¯«å¿´?\u0016/ç»³55ç©”á?Ÿ4L5?è«³\u0010ë¿¿55?555@ :H");
        assertFalse(deviceenrollmentdenialInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("61c6923c18efbbacbd7af9d6fa2e336c",
                                                                                        new Date(1558018686972L),
                                                                                        "736deb01-595f-4584-81f0-43facbbb109f",
                                                                                        "61c6923c18efbbacbd7af9d6fa2e336c",
                                                                                        "61c6923c18efbbacbd7af9d6fa2e336c");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = new DeviceEnrollmentDenial("61c6923c18efbbacbd7af9d6fa2e336c",
                                                                                        new Date(1558018686972L),
                                                                                        "736deb01-595f-4584-81f0-43facbbb109f",
                                                                                        "61c6923c18efbbacbd7af9d6fa2e336c",
                                                                                        "61c6923c18efbbacbd7af9d6fa2e336c");
            DeviceEnrollmentDenial deviceenrollmentdenial3 = new DeviceEnrollmentDenial("61c6923c18efbbacbd7af9d6fa2e336c",
                                                                                        new Date(1558018683889L),
                                                                                        "472b27b6-71b6-4b5e-a3ef-aa59155830f8",
                                                                                        "61c6923c18efbbacbd7af9d6fa2e336c",
                                                                                        "61c6923c18efbbacbd7af9d6fa2e336c");
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotNull(deviceenrollmentdenial3);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertNotSame(deviceenrollmentdenial3, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial1, deviceenrollmentdenial2);
            assertEquals(deviceenrollmentdenial1, deviceenrollmentdenial1);
            assertFalse(deviceenrollmentdenial1.equals(null));
            assertNotEquals(deviceenrollmentdenial3, deviceenrollmentdenial1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
