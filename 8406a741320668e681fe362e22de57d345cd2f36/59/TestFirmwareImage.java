// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.deviceupdate.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model FirmwareImage.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestFirmwareImage {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            FirmwareImage firmwareimage1 = new FirmwareImage(new Date(1558018690212L),
                                                             "30fce06c-7687-481c-8107-dffef10dfc65", 21,
                                                             "c855351a-1632-494b-a8d6-f08bcb7cb54b",
                                                             "906bc905-ffc8-48a1-bc71-bbaf75e80eb3",
                                                             "19046ff7-de40-40e5-a477-fd646317df00",
                                                             "28c3094d-c183-4724-a779-3e1b04fa4312",
                                                             new Date(1558018687256L));
            FirmwareImage firmwareimage2 = firmwareimage1.clone();
            assertNotNull(firmwareimage1);
            assertNotNull(firmwareimage2);
            assertNotSame(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage2, firmwareimage1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            FirmwareImage firmwareimage1 = new FirmwareImage(new Date(1558018689203L),
                                                             "e8f07bbc-65df-4e6d-80d0-9007a572bee4", 16,
                                                             "b8f033ae-7283-4ee7-b7a9-5a2999336bc1",
                                                             "0208a35b-f835-453f-a5fc-81f9027eff99",
                                                             "d31cd916-4b6f-4b38-b85b-8c7e81b9a985",
                                                             "7cc539e9-7920-4350-8321-d6753dadaf3e",
                                                             new Date(1558018686883L));
            FirmwareImage firmwareimage2 = new FirmwareImage(new Date(1558018689203L),
                                                             "e8f07bbc-65df-4e6d-80d0-9007a572bee4", 16,
                                                             "b8f033ae-7283-4ee7-b7a9-5a2999336bc1",
                                                             "0208a35b-f835-453f-a5fc-81f9027eff99",
                                                             "d31cd916-4b6f-4b38-b85b-8c7e81b9a985",
                                                             "7cc539e9-7920-4350-8321-d6753dadaf3e",
                                                             new Date(1558018686883L));
            assertNotNull(firmwareimage1);
            assertNotNull(firmwareimage2);
            assertNotSame(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage2.hashCode(), firmwareimage1.hashCode());
            int hashCode = firmwareimage1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, firmwareimage1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        FirmwareImage firmwareimage = new FirmwareImage(new Date(1558018692167L),
                                                        "024bbd47-1d69-456e-afe0-32a751eaca6d", -79,
                                                        "aaa88321-c19f-4285-ac55-61687abae25b",
                                                        "8dd21934-f425-412b-aa12-f679171d0207",
                                                        "e27560a1-91c1-4419-a0d2-cab23881ea37",
                                                        "7dd68847-94a5-453c-b812-480372d9fce5",
                                                        new Date(1558018690842L));
        assertTrue(firmwareimage.isValid());
        FirmwareImage firmwareimageInvalid = new FirmwareImage(new Date(1558018691489L),
                                                               "c094e73e-d407-464a-9da1-da05875abf83", 107,
                                                               "351f6dad-8d23-4b06-98ce-070c3b2556e5",
                                                               "ad8cd2b1-b38e-4731-af28-8600fc3f9f7978ff7e03-64ee-454e-8611-1843a935848b70d5c5ce-927f-4f7b-b064-ed2354fed554594486e6-ce24-429c-aeb6-af809a12856873586373-f00e-4715-a549-3f9f062cd146c207dcaa-9126-4ae7-be16-207e4fa6cca08292700f-b3bd-430c-b13c-8e5591801659afebd8a3-fbff-46f8-871d-52f49ef41f8f3fd38dab-f745-4ee3-8fc2-2ea2a91a4cd9d3d70682-6252-4b22-847f-0360f1634bf649ee8a52-dcb0-4ac1-89dc-9e6698e4079cc9d6577a-c70a-4dbe-8963-2c008c496c3e989e35fb-e587-474b-8bfd-2fde72042044f2d00a17-2344-410a-8f68-ac8cd55c270a5e603f45-0ebe-43a2-b175-a416f2119a8e61eb9bec-db11-45d5-8411-aced41f853aae36138b1-892c-4b25-a53a-c1023d6ca74af39e52e8-a02d-44e4-b71a-beacc7010f6c853b1137-54c9-453d-9c1e-465603612052a8b4ee25-6576-4e72-b74e-ebc72991e61d5bdea1d6-9630-420b-a38d-7e6fc96ea44b7da85dcd-6026-4472-ae89-50db6f7bde6013bdb11f-602c-4f92-a769-d4e59618a4696e7090e2-d4b0-43f8-938d-969c07f536d6efeeb4eb-5bcd-4f37-8fe7-c5f7de0d325fbef0d762-4a6e-4495-b46e-46f07d6dc2fe5f6bef5f-4d38-42a2-aa9c-c9feed5c726b39cab135-1674-454a-8f8b-8053fd1cdb0b4ca48c91-994e-4747-be9b-97d38d2f11a3b6fbb9c2-eb4f-4b54-88f1-0793fc6f73c208524c72-f684-4e70-997f-55f942673beb0c840945-ca61-433a-93c7-3c7df64c9d3d7083664f-fa3c-4da3-a6a1-1f6765756be66674395a-1da3-470e-828d-7a9e59cc2bd4095b38d9-d31c-4a6c-b066-b980b5e0002529988ddc-863a-4a1b-ad54-7bdfd0c4cee09c3f448a-e0ea-4dfd-b84a-958679ff876f9879e91c-2d26-4f5c-8b70-cba43db8eb8929c29086-1613-41bf-b9a0-db7ae19946d3f63c9087-2831-4ae7-b5b3-f3cca9c9aa8b7030a5a4-99e4-43d0-b8f5-fea335bd2e9e7195d799-6b1a-4b30-b67e-feea60fc3929edd24be0-1d89-4441-b976-6b61745201e47077ed15-7dea-4d3d-9a85-9c271e2763172c581fd8-5521-48a6-a3a6-93006ff854780b9a239a-6736-4de3-a526-269c6a592bbea153171b-dce6-4f67-8894-68606b8e57950f18f842-18e0-4ebe-b574-868dd6682f56b7d15059-0d47-44e3-95e2-7f97554d32daffcfdff1-d4e7-42e0-926f-7ebe1f237520d227aa4f-c49b-46a1-ae7b-289881950d00b63c1dcd-2330-4812-9263-d8bc796f0643f92ed928-ae71-4ab6-9ea2-b86a66dd9f282d2783d6-b6b0-48d1-a0c2-85e67cd6d31d03d1353a-251d-44d5-8d77-bb928808508507ad03b5-0d95-4713-853b-938b6917559a",
                                                               "bb00429f-35e8-4c42-8ba6-ac928ffcfcf2",
                                                               "1bd7d1c1-5acc-402d-9cce-a47f5f560feca092e937-99c3-4818-b99f-6e2d6b6ceb4094dbefa2-8671-4740-9af9-5c9488fa57d9b6a8b2a0-692c-4b54-b9f5-43deb07c68bf",
                                                               new Date(1558018690015L));
        assertFalse(firmwareimageInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            FirmwareImage firmwareimage1 = new FirmwareImage(new Date(1558018691063L),
                                                             "16579efa-cf1c-4636-97d4-6f2a0ff9473f", -51,
                                                             "f7e77fc6-61ad-4292-95b5-34e6ffc81ef7",
                                                             "8ecb9cda-8e5a-4f3a-82b6-6fa24edd53e0",
                                                             "59d36ea9-6690-40f2-b745-11031120e84a",
                                                             "a6ae1181-ca43-4a08-8ef8-263afb315526",
                                                             new Date(1558018688178L));
            FirmwareImage firmwareimage2 = new FirmwareImage(new Date(1558018691063L),
                                                             "16579efa-cf1c-4636-97d4-6f2a0ff9473f", -51,
                                                             "f7e77fc6-61ad-4292-95b5-34e6ffc81ef7",
                                                             "8ecb9cda-8e5a-4f3a-82b6-6fa24edd53e0",
                                                             "59d36ea9-6690-40f2-b745-11031120e84a",
                                                             "a6ae1181-ca43-4a08-8ef8-263afb315526",
                                                             new Date(1558018688178L));
            FirmwareImage firmwareimage3 = new FirmwareImage(new Date(1558018685479L),
                                                             "983465e0-f990-41ff-b798-9a71f6fcb3b1", 115,
                                                             "016fd30b-61c5-4387-aa30-c8b9d46f7cfe",
                                                             "6ff32e4e-38e5-4c6d-9daf-74b74833d784",
                                                             "972973b2-51c3-4851-943c-ad5ff205de61",
                                                             "b5505d1d-06ef-40d6-8b11-5923dd57eaa5",
                                                             new Date(1558018689881L));
            assertNotNull(firmwareimage1);
            assertNotNull(firmwareimage2);
            assertNotNull(firmwareimage3);
            assertNotSame(firmwareimage2, firmwareimage1);
            assertNotSame(firmwareimage3, firmwareimage1);
            assertEquals(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage1, firmwareimage2);
            assertEquals(firmwareimage1, firmwareimage1);
            assertFalse(firmwareimage1.equals(null));
            assertNotEquals(firmwareimage3, firmwareimage1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
