// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantApiKey.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantApiKey {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("ae7a4e096c0cf61badbe341c63408ff3",
                                                                   new Date(1559148830681L), 35,
                                                                   "ae7a4e096c0cf61badbe341c63408ff3",
                                                                   "44a627ad-6e4f-47a7-bf25-2bdfa6881ff9", 46,
                                                                   "4ed8a8ce-8488-4de7-bab1-b36d49856f8b",
                                                                   "ae7a4e096c0cf61badbe341c63408ff3",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1559148832281L));
            SubtenantApiKey subtenantapikey2 = subtenantapikey1.clone();
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("ae7a4e096c0cf61badbe341c63408ff3",
                                                                   new Date(1559148825873L), 44,
                                                                   "ae7a4e096c0cf61badbe341c63408ff3",
                                                                   "f0527418-dd01-47c5-bb13-563b39981ca8", 91,
                                                                   "3234ecbc-e04e-4182-a0b7-632d1a6b6a5a",
                                                                   "ae7a4e096c0cf61badbe341c63408ff3",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1559148828986L));
            SubtenantApiKey subtenantapikey2 = new SubtenantApiKey("ae7a4e096c0cf61badbe341c63408ff3",
                                                                   new Date(1559148825873L), 44,
                                                                   "ae7a4e096c0cf61badbe341c63408ff3",
                                                                   "f0527418-dd01-47c5-bb13-563b39981ca8", 91,
                                                                   "3234ecbc-e04e-4182-a0b7-632d1a6b6a5a",
                                                                   "ae7a4e096c0cf61badbe341c63408ff3",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1559148828986L));
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2.hashCode(), subtenantapikey1.hashCode());
            int hashCode = subtenantapikey1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantapikey1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantApiKey subtenantapikey = new SubtenantApiKey("ae7a4e096c0cf61badbe341c63408ff3",
                                                              new Date(1559148826655L), -82,
                                                              "ae7a4e096c0cf61badbe341c63408ff3",
                                                              "76033cc2-d93d-45c3-ac85-7a5b95869c4f", 106,
                                                              "845a9640-9830-4e28-8a34-c2ec93aea5f8",
                                                              "ae7a4e096c0cf61badbe341c63408ff3",
                                                              SubtenantApiKeyStatus.getDefault(),
                                                              new Date(1559148830377L));
        assertTrue(subtenantapikey.isValid());
        SubtenantApiKey subtenantapikeyInvalid = new SubtenantApiKey(null, new Date(1559148826496L), 94,
                                                                     "52*çš†2?\u0015U25Bâ ¢5\u0017ê¶ž\u000b5#\b2í›¹2\u00045HDá?¨5O2[25\u0002222`FQï³ŽEDé‹‚2%ã“—5é’€522\u0015ë¢¬!H\u0016225èŒ¡5ã®”2",
                                                                     "2c58c0c7-83ec-44c2-9cfc-3a69499e6e72", -91, null,
                                                                     "52*çš†2?\u0015U25Bâ ¢5\u0017ê¶ž\u000b5#\b2í›¹2\u00045HDá?¨5O2[25\u0002222`FQï³ŽEDé‹‚2%ã“—5é’€522\u0015ë¢¬!H\u0016225èŒ¡5ã®”2",
                                                                     SubtenantApiKeyStatus.getDefault(),
                                                                     new Date(1559148828564L));
        assertFalse(subtenantapikeyInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("ae7a4e096c0cf61badbe341c63408ff3",
                                                                   new Date(1559148827479L), 122,
                                                                   "ae7a4e096c0cf61badbe341c63408ff3",
                                                                   "b42936b6-1521-4a5c-858d-867f4deff690", -37,
                                                                   "bf450dae-8b54-4a13-907d-b4accd9e8f81",
                                                                   "ae7a4e096c0cf61badbe341c63408ff3",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1559148834388L));
            SubtenantApiKey subtenantapikey2 = new SubtenantApiKey("ae7a4e096c0cf61badbe341c63408ff3",
                                                                   new Date(1559148827479L), 122,
                                                                   "ae7a4e096c0cf61badbe341c63408ff3",
                                                                   "b42936b6-1521-4a5c-858d-867f4deff690", -37,
                                                                   "bf450dae-8b54-4a13-907d-b4accd9e8f81",
                                                                   "ae7a4e096c0cf61badbe341c63408ff3",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1559148834388L));
            SubtenantApiKey subtenantapikey3 = new SubtenantApiKey("ae7a4e096c0cf61badbe341c63408ff3",
                                                                   new Date(1559148834458L), 55,
                                                                   "ae7a4e096c0cf61badbe341c63408ff3",
                                                                   "e802d789-a796-4876-bc66-7c2a9c87c8a4", -43,
                                                                   "dfa6d68c-ec72-466a-b495-7928790ef9d9",
                                                                   "ae7a4e096c0cf61badbe341c63408ff3",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1559148827711L));
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotNull(subtenantapikey3);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertNotSame(subtenantapikey3, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey1, subtenantapikey2);
            assertEquals(subtenantapikey1, subtenantapikey1);
            assertFalse(subtenantapikey1.equals(null));
            assertNotEquals(subtenantapikey3, subtenantapikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
