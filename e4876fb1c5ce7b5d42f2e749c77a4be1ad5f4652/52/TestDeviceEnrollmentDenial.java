// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEnrollmentDenial.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEnrollmentDenial {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("ae7a4e096c0cf61badbe341c63408ff3",
                                                                                        new Date(1559148827904L),
                                                                                        "28cb6268-eaa4-4996-8ef7-6a8b172496ad",
                                                                                        "ae7a4e096c0cf61badbe341c63408ff3",
                                                                                        "ae7a4e096c0cf61badbe341c63408ff3");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = deviceenrollmentdenial1.clone();
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("ae7a4e096c0cf61badbe341c63408ff3",
                                                                                        new Date(1559148832160L),
                                                                                        "d8dfa354-1778-4603-b61a-684a2d8dc9af",
                                                                                        "ae7a4e096c0cf61badbe341c63408ff3",
                                                                                        "ae7a4e096c0cf61badbe341c63408ff3");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = new DeviceEnrollmentDenial("ae7a4e096c0cf61badbe341c63408ff3",
                                                                                        new Date(1559148832160L),
                                                                                        "d8dfa354-1778-4603-b61a-684a2d8dc9af",
                                                                                        "ae7a4e096c0cf61badbe341c63408ff3",
                                                                                        "ae7a4e096c0cf61badbe341c63408ff3");
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2.hashCode(), deviceenrollmentdenial1.hashCode());
            int hashCode = deviceenrollmentdenial1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceenrollmentdenial1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEnrollmentDenial deviceenrollmentdenial = new DeviceEnrollmentDenial("ae7a4e096c0cf61badbe341c63408ff3",
                                                                                   new Date(1559148830879L),
                                                                                   "9b126c2b-cab3-4ce1-a118-70f3e141e5cb",
                                                                                   "ae7a4e096c0cf61badbe341c63408ff3",
                                                                                   "ae7a4e096c0cf61badbe341c63408ff3");
        assertTrue(deviceenrollmentdenial.isValid());
        DeviceEnrollmentDenial deviceenrollmentdenialInvalid = new DeviceEnrollmentDenial("52*çš†2?\u0015U25Bâ ¢5\u0017ê¶ž\u000b5#\b2í›¹2\u00045HDá?¨5O2[25\u0002222`FQï³ŽEDé‹‚2%ã“—5é’€522\u0015ë¢¬!H\u0016225èŒ¡5ã®”2",
                                                                                          new Date(1559148825951L),
                                                                                          "b031e34d-25be-4276-8c3e-3051495cc8f1",
                                                                                          "52*çš†2?\u0015U25Bâ ¢5\u0017ê¶ž\u000b5#\b2í›¹2\u00045HDá?¨5O2[25\u0002222`FQï³ŽEDé‹‚2%ã“—5é’€522\u0015ë¢¬!H\u0016225èŒ¡5ã®”2",
                                                                                          "52*çš†2?\u0015U25Bâ ¢5\u0017ê¶ž\u000b5#\b2í›¹2\u00045HDá?¨5O2[25\u0002222`FQï³ŽEDé‹‚2%ã“—5é’€522\u0015ë¢¬!H\u0016225èŒ¡5ã®”2");
        assertFalse(deviceenrollmentdenialInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("ae7a4e096c0cf61badbe341c63408ff3",
                                                                                        new Date(1559148833776L),
                                                                                        "5dac5731-0ad8-436c-b71d-afc79441c54d",
                                                                                        "ae7a4e096c0cf61badbe341c63408ff3",
                                                                                        "ae7a4e096c0cf61badbe341c63408ff3");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = new DeviceEnrollmentDenial("ae7a4e096c0cf61badbe341c63408ff3",
                                                                                        new Date(1559148833776L),
                                                                                        "5dac5731-0ad8-436c-b71d-afc79441c54d",
                                                                                        "ae7a4e096c0cf61badbe341c63408ff3",
                                                                                        "ae7a4e096c0cf61badbe341c63408ff3");
            DeviceEnrollmentDenial deviceenrollmentdenial3 = new DeviceEnrollmentDenial("ae7a4e096c0cf61badbe341c63408ff3",
                                                                                        new Date(1559148831315L),
                                                                                        "a6f05e83-2727-4736-885d-b00825ddf241",
                                                                                        "ae7a4e096c0cf61badbe341c63408ff3",
                                                                                        "ae7a4e096c0cf61badbe341c63408ff3");
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotNull(deviceenrollmentdenial3);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertNotSame(deviceenrollmentdenial3, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial1, deviceenrollmentdenial2);
            assertEquals(deviceenrollmentdenial1, deviceenrollmentdenial1);
            assertFalse(deviceenrollmentdenial1.equals(null));
            assertNotEquals(deviceenrollmentdenial3, deviceenrollmentdenial1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
