// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEvents.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEvents {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1565006433132L), null,
                                                          new Date(1565006430325L),
                                                          "76a2b759-3a22-4ba0-b2dd-0656c66e8ee1",
                                                          "ab1e1ebf-fe94-4a5b-b78c-2ada2a218da4",
                                                          "450b910f-27c6-419c-b7eb-a0a777e0bff2",
                                                          "aa141b85-96fc-41f3-9767-5c38e8ed93a5",
                                                          "cea13ebe-d603-4ef0-b710-bcaa9e9909ca",
                                                          "6e987866-b87e-4b62-ad42-d5bac03c91e0", true);
            DeviceEvents deviceevents2 = deviceevents1.clone();
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1565006438234L), null,
                                                          new Date(1565006430491L),
                                                          "61c7a46b-23a4-4e1d-816d-b5b1bc821218",
                                                          "e9268726-5a5c-4ea9-a4dd-685fb2da0495",
                                                          "0bed51bb-c8d8-4ddf-808a-485090e04f08",
                                                          "95ee77c0-eb4d-42a6-8013-9d8cca713325",
                                                          "e5580466-f9b5-47ae-8e18-d788f717e1fa",
                                                          "e76dc1d6-ad14-4d22-8fef-2105de386138", false);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1565006438234L), null,
                                                          new Date(1565006430491L),
                                                          "61c7a46b-23a4-4e1d-816d-b5b1bc821218",
                                                          "e9268726-5a5c-4ea9-a4dd-685fb2da0495",
                                                          "0bed51bb-c8d8-4ddf-808a-485090e04f08",
                                                          "95ee77c0-eb4d-42a6-8013-9d8cca713325",
                                                          "e5580466-f9b5-47ae-8e18-d788f717e1fa",
                                                          "e76dc1d6-ad14-4d22-8fef-2105de386138", false);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2.hashCode(), deviceevents1.hashCode());
            int hashCode = deviceevents1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceevents1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEvents deviceevents = new DeviceEvents(null, new Date(1565006436101L), null, new Date(1565006434544L),
                                                     "9b8745d6-7a2a-44af-bdfd-7903c5bb459a",
                                                     "cece6d90-b7c1-41e9-b9b8-32730dee8cf6",
                                                     "b8fefa7e-719b-4bb3-9a49-f341759b61e0",
                                                     "97ab9ec0-c371-4f05-95c0-57a62a86b08e",
                                                     "173c2a4a-74b4-42be-bc09-956d16f0e21c",
                                                     "ae55925d-4cee-4103-9c1a-2b527b6161b1", false);
        assertTrue(deviceevents.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1565006436619L), null,
                                                          new Date(1565006431760L),
                                                          "b7c632be-1bf5-4078-a341-19cd5aaf2bd6",
                                                          "93ecfccd-5d1d-4310-81b0-ffe0b65d45f6",
                                                          "10c4a29e-4df3-45e7-882e-3c4c5b679c2d",
                                                          "b87871cf-ee18-4d95-a525-b4e8f227550a",
                                                          "e4fde9e0-e53f-4f9a-99dc-60b0da8d437e",
                                                          "f2f8f138-3b6e-4fc0-b69e-63814b9d1c5b", true);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1565006436619L), null,
                                                          new Date(1565006431760L),
                                                          "b7c632be-1bf5-4078-a341-19cd5aaf2bd6",
                                                          "93ecfccd-5d1d-4310-81b0-ffe0b65d45f6",
                                                          "10c4a29e-4df3-45e7-882e-3c4c5b679c2d",
                                                          "b87871cf-ee18-4d95-a525-b4e8f227550a",
                                                          "e4fde9e0-e53f-4f9a-99dc-60b0da8d437e",
                                                          "f2f8f138-3b6e-4fc0-b69e-63814b9d1c5b", true);
            DeviceEvents deviceevents3 = new DeviceEvents(null, new Date(1565006439451L), null,
                                                          new Date(1565006432738L),
                                                          "634acffc-7068-4062-9564-2c25e41c8fd6",
                                                          "22553be4-6bdc-4101-9c35-ecabcd9630bc",
                                                          "b33da1e0-cf31-4f4d-baff-446f1fc98ade",
                                                          "e2e99130-a60b-4d67-a47e-3ba5d8276ae8",
                                                          "8aad752d-7e54-455b-b164-4edd48a93291",
                                                          "8ef3fff2-130c-40a0-96fe-086943ab2266", true);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotNull(deviceevents3);
            assertNotSame(deviceevents2, deviceevents1);
            assertNotSame(deviceevents3, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents1, deviceevents2);
            assertEquals(deviceevents1, deviceevents1);
            assertFalse(deviceevents1.equals(null));
            assertNotEquals(deviceevents3, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
