// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantUserInvitation.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantUserInvitation {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantUserInvitation subtenantuserinvitation1 = new SubtenantUserInvitation("403affc6fd3080e7dab854be02c43523",
                                                                                           new Date(1565006431749L),
                                                                                           "86bb4.36702@f7c3a.me",
                                                                                           new Date(1565006430959L),
                                                                                           "403affc6fd3080e7dab854be02c43523",
                                                                                           null,
                                                                                           new Date(1565006437121L),
                                                                                           "403affc6fd3080e7dab854be02c43523");
            SubtenantUserInvitation subtenantuserinvitation2 = subtenantuserinvitation1.clone();
            assertNotNull(subtenantuserinvitation1);
            assertNotNull(subtenantuserinvitation2);
            assertNotSame(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantUserInvitation subtenantuserinvitation1 = new SubtenantUserInvitation("403affc6fd3080e7dab854be02c43523",
                                                                                           new Date(1565006436503L),
                                                                                           "c5f63.eb97f@4fb3c.me",
                                                                                           new Date(1565006438071L),
                                                                                           "403affc6fd3080e7dab854be02c43523",
                                                                                           null,
                                                                                           new Date(1565006432527L),
                                                                                           "403affc6fd3080e7dab854be02c43523");
            SubtenantUserInvitation subtenantuserinvitation2 = new SubtenantUserInvitation("403affc6fd3080e7dab854be02c43523",
                                                                                           new Date(1565006436503L),
                                                                                           "c5f63.eb97f@4fb3c.me",
                                                                                           new Date(1565006438071L),
                                                                                           "403affc6fd3080e7dab854be02c43523",
                                                                                           null,
                                                                                           new Date(1565006432527L),
                                                                                           "403affc6fd3080e7dab854be02c43523");
            assertNotNull(subtenantuserinvitation1);
            assertNotNull(subtenantuserinvitation2);
            assertNotSame(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2.hashCode(), subtenantuserinvitation1.hashCode());
            int hashCode = subtenantuserinvitation1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantuserinvitation1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantUserInvitation subtenantuserinvitation = new SubtenantUserInvitation("403affc6fd3080e7dab854be02c43523",
                                                                                      new Date(1565006439716L),
                                                                                      "74491.ea770@8fc33.me",
                                                                                      new Date(1565006437499L),
                                                                                      "403affc6fd3080e7dab854be02c43523",
                                                                                      null, new Date(1565006435713L),
                                                                                      "403affc6fd3080e7dab854be02c43523");
        assertTrue(subtenantuserinvitation.isValid());
        SubtenantUserInvitation subtenantuserinvitationInvalid = new SubtenantUserInvitation(null,
                                                                                             new Date(1565006437097L),
                                                                                             null,
                                                                                             new Date(1565006436190L),
                                                                                             "1Lä†»1\u0017â¥¥1$$â‚™\u000fJî“™ë¾’î‰®Sï·™é‰‰+1B1P1`íš‘;ê¯ˆîƒ•X/M1\u001f\u001a\u000e\u0018â›«\u00071ï¼—#è§¨11M.\u0011ãœª1U1ï?¨è¼´\b1Sé¤€%L1ç”º\u0019",
                                                                                             null,
                                                                                             new Date(1565006432145L),
                                                                                             "1Lä†»1\u0017â¥¥1$$â‚™\u000fJî“™ë¾’î‰®Sï·™é‰‰+1B1P1`íš‘;ê¯ˆîƒ•X/M1\u001f\u001a\u000e\u0018â›«\u00071ï¼—#è§¨11M.\u0011ãœª1U1ï?¨è¼´\b1Sé¤€%L1ç”º\u0019");
        assertFalse(subtenantuserinvitationInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantUserInvitation subtenantuserinvitation1 = new SubtenantUserInvitation("403affc6fd3080e7dab854be02c43523",
                                                                                           new Date(1565006436740L),
                                                                                           "5b716.6291d@7743f.me",
                                                                                           new Date(1565006429901L),
                                                                                           "403affc6fd3080e7dab854be02c43523",
                                                                                           null,
                                                                                           new Date(1565006432891L),
                                                                                           "403affc6fd3080e7dab854be02c43523");
            SubtenantUserInvitation subtenantuserinvitation2 = new SubtenantUserInvitation("403affc6fd3080e7dab854be02c43523",
                                                                                           new Date(1565006436740L),
                                                                                           "5b716.6291d@7743f.me",
                                                                                           new Date(1565006429901L),
                                                                                           "403affc6fd3080e7dab854be02c43523",
                                                                                           null,
                                                                                           new Date(1565006432891L),
                                                                                           "403affc6fd3080e7dab854be02c43523");
            SubtenantUserInvitation subtenantuserinvitation3 = new SubtenantUserInvitation("403affc6fd3080e7dab854be02c43523",
                                                                                           new Date(1565006432975L),
                                                                                           "47b6e.4a0d5@a4a3f.me",
                                                                                           new Date(1565006439730L),
                                                                                           "403affc6fd3080e7dab854be02c43523",
                                                                                           null,
                                                                                           new Date(1565006438155L),
                                                                                           "403affc6fd3080e7dab854be02c43523");
            assertNotNull(subtenantuserinvitation1);
            assertNotNull(subtenantuserinvitation2);
            assertNotNull(subtenantuserinvitation3);
            assertNotSame(subtenantuserinvitation2, subtenantuserinvitation1);
            assertNotSame(subtenantuserinvitation3, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation1, subtenantuserinvitation2);
            assertEquals(subtenantuserinvitation1, subtenantuserinvitation1);
            assertFalse(subtenantuserinvitation1.equals(null));
            assertNotEquals(subtenantuserinvitation3, subtenantuserinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
