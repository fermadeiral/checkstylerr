// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantUser.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantUser {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("403affc6fd3080e7dab854be02c43523", null,
                                                             "e08d56ff-4f04-4ede-accb-56f9e37a582d",
                                                             new Date(1565006432154L), -30, null,
                                                             "7e441.f43f7@53739.fr", true,
                                                             "065eb683-2c2e-4b25-8160-355ce9d88595",
                                                             "403affc6fd3080e7dab854be02c43523", true, true, true, 41,
                                                             null, null, "3ebe8131-5f16-47f5-8f0b-b3b022c3182b", -103,
                                                             "c6636976-f19b-4fd0-b47b-9d11a4afb58a",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1565006437760L), "=9=V=_,=_");
            SubtenantUser subtenantuser2 = subtenantuser1.clone();
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("403affc6fd3080e7dab854be02c43523", null,
                                                             "25be06c3-5938-4a61-ab19-87c0c9eace58",
                                                             new Date(1565006431896L), -13, null,
                                                             "14aa4.7293a@ebd07.me", true,
                                                             "7c522bdb-4381-4e3b-bea0-8c183cb2d1ca",
                                                             "403affc6fd3080e7dab854be02c43523", false, true, false,
                                                             -14, null, null, "9d07360e-e24d-45d6-998d-bf336edcd9ef", 4,
                                                             "84c829de-84b1-42be-b203-ac335930ad75",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1565006434844L), "=9=V=_,=_");
            SubtenantUser subtenantuser2 = new SubtenantUser("403affc6fd3080e7dab854be02c43523", null,
                                                             "25be06c3-5938-4a61-ab19-87c0c9eace58",
                                                             new Date(1565006431896L), -13, null,
                                                             "14aa4.7293a@ebd07.me", true,
                                                             "7c522bdb-4381-4e3b-bea0-8c183cb2d1ca",
                                                             "403affc6fd3080e7dab854be02c43523", false, true, false,
                                                             -14, null, null, "9d07360e-e24d-45d6-998d-bf336edcd9ef", 4,
                                                             "84c829de-84b1-42be-b203-ac335930ad75",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1565006434844L), "=9=V=_,=_");
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2.hashCode(), subtenantuser1.hashCode());
            int hashCode = subtenantuser1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantuser1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantUser subtenantuser = new SubtenantUser("403affc6fd3080e7dab854be02c43523", null,
                                                        "b55b16bd-ba79-44be-b6e7-2b4b4050f706",
                                                        new Date(1565006434370L), -84, null, "5a0e6.f0858@ee0ea.fr",
                                                        true, "227af8c9-25c8-4324-8d41-ac5a272e1454",
                                                        "403affc6fd3080e7dab854be02c43523", true, true, false, -69,
                                                        null, null, "843b2b52-4937-4d68-bc3e-46fdcce6a55e", 73,
                                                        "c463a21f-16d3-46bb-8cfb-378e1aa9a2ae",
                                                        SubtenantUserStatus.getDefault(), null,
                                                        new Date(1565006436455L), "=9=V=_,=_");
        assertTrue(subtenantuser.isValid());
        SubtenantUser subtenantuserInvalid = new SubtenantUser(null, null, "b31a323e-3635-4c3d-b990-f6e29fedbd44",
                                                               new Date(1565006438997L), 91, null, null, true,
                                                               "10603cc5-d0d5-45b1-9be1-300df85e193540dfc472-243a-448b-b05c-b90b87c6c3b7fd781d71-709a-439f-9f07-b673199b4d30",
                                                               "1Lä†»1\u0017â¥¥1$$â‚™\u000fJî“™ë¾’î‰®Sï·™é‰‰+1B1P1`íš‘;ê¯ˆîƒ•X/M1\u001f\u001a\u000e\u0018â›«\u00071ï¼—#è§¨11M.\u0011ãœª1U1ï?¨è¼´\b1Sé¤€%L1ç”º\u0019",
                                                               true, false, true, -28, null, null,
                                                               "bc784447-7327-4e89-bf6d-b0429f216854", 65,
                                                               "a32bdc12-3c8c-482b-8914-87e1f3f3a74447ced4c7-7fc0-445d-9853-adf05b5274300b233f8d-4479-43d2-8104-2ffae269dd5c",
                                                               SubtenantUserStatus.getDefault(), null,
                                                               new Date(1565006433383L),
                                                               "ç€£<:ZN\u0014U>:ì´?NW6í’¸3<è»ºD6;ä³¡<1::7<\u000bN\u001e2W;WYB2:;0Tá¨•266ä—œ\u000b 6:\u000b;\u0007N$$@Ûš;PYÜ­áˆ·5");
        assertFalse(subtenantuserInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("403affc6fd3080e7dab854be02c43523", null,
                                                             "0875fb48-9e3a-4c1f-be8a-e659d1db5d8d",
                                                             new Date(1565006438922L), 116, null,
                                                             "a0052.27380@e1ec0.me", true,
                                                             "dd0bddab-968b-4349-afa6-19bb99b1ade1",
                                                             "403affc6fd3080e7dab854be02c43523", false, false, false,
                                                             77, null, null, "d82d2d3a-b627-42df-98ed-1c9d4d7e3241", 13,
                                                             "84c40eb2-b0f9-41b7-a628-c5a814a8b176",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1565006430541L), "=9=V=_,=_");
            SubtenantUser subtenantuser2 = new SubtenantUser("403affc6fd3080e7dab854be02c43523", null,
                                                             "0875fb48-9e3a-4c1f-be8a-e659d1db5d8d",
                                                             new Date(1565006438922L), 116, null,
                                                             "a0052.27380@e1ec0.me", true,
                                                             "dd0bddab-968b-4349-afa6-19bb99b1ade1",
                                                             "403affc6fd3080e7dab854be02c43523", false, false, false,
                                                             77, null, null, "d82d2d3a-b627-42df-98ed-1c9d4d7e3241", 13,
                                                             "84c40eb2-b0f9-41b7-a628-c5a814a8b176",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1565006430541L), "=9=V=_,=_");
            SubtenantUser subtenantuser3 = new SubtenantUser("403affc6fd3080e7dab854be02c43523", null,
                                                             "23218df3-e8ca-45f8-9d69-941abbed5a11",
                                                             new Date(1565006435125L), -108, null,
                                                             "bbcf1.b97eb@9e54d.me", true,
                                                             "8ceb1a50-0407-48bb-89e4-610f145a4d1d",
                                                             "403affc6fd3080e7dab854be02c43523", false, false, false,
                                                             -62, null, null, "e7d616bc-ad8d-458c-bc20-92ecf9f013f3",
                                                             73, "56266b56-4757-47c3-a0fa-114783a03d34",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1565006436697L), "=9=V=_,=_");
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotNull(subtenantuser3);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertNotSame(subtenantuser3, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser1, subtenantuser2);
            assertEquals(subtenantuser1, subtenantuser1);
            assertFalse(subtenantuser1.equals(null));
            assertNotEquals(subtenantuser3, subtenantuser1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
