// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantApiKey.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantApiKey {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("403affc6fd3080e7dab854be02c43523",
                                                                   new Date(1565006435111L), 118,
                                                                   "403affc6fd3080e7dab854be02c43523",
                                                                   "ca7234cb-f6d5-4a4b-a5af-fe689350a5d7", -33,
                                                                   "599c2250-ada4-45f4-8df4-47077fcf8682",
                                                                   "403affc6fd3080e7dab854be02c43523",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1565006432480L));
            SubtenantApiKey subtenantapikey2 = subtenantapikey1.clone();
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("403affc6fd3080e7dab854be02c43523",
                                                                   new Date(1565006429980L), 51,
                                                                   "403affc6fd3080e7dab854be02c43523",
                                                                   "0495ddbe-5b60-4d32-87f3-de05ae4ef1ba", -49,
                                                                   "87d92d4c-ce69-439c-93a2-bb092471adc1",
                                                                   "403affc6fd3080e7dab854be02c43523",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1565006431285L));
            SubtenantApiKey subtenantapikey2 = new SubtenantApiKey("403affc6fd3080e7dab854be02c43523",
                                                                   new Date(1565006429980L), 51,
                                                                   "403affc6fd3080e7dab854be02c43523",
                                                                   "0495ddbe-5b60-4d32-87f3-de05ae4ef1ba", -49,
                                                                   "87d92d4c-ce69-439c-93a2-bb092471adc1",
                                                                   "403affc6fd3080e7dab854be02c43523",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1565006431285L));
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2.hashCode(), subtenantapikey1.hashCode());
            int hashCode = subtenantapikey1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantapikey1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantApiKey subtenantapikey = new SubtenantApiKey("403affc6fd3080e7dab854be02c43523",
                                                              new Date(1565006437332L), 77,
                                                              "403affc6fd3080e7dab854be02c43523",
                                                              "ea7f706b-8042-43a6-8851-1275c4b7f80e", 2,
                                                              "d4ad4d98-9d4d-4d5e-9c1c-32eb35a83ea8",
                                                              "403affc6fd3080e7dab854be02c43523",
                                                              SubtenantApiKeyStatus.getDefault(),
                                                              new Date(1565006436459L));
        assertTrue(subtenantapikey.isValid());
        SubtenantApiKey subtenantapikeyInvalid = new SubtenantApiKey(null, new Date(1565006435464L), -32,
                                                                     "1Lä†»1\u0017â¥¥1$$â‚™\u000fJî“™ë¾’î‰®Sï·™é‰‰+1B1P1`íš‘;ê¯ˆîƒ•X/M1\u001f\u001a\u000e\u0018â›«\u00071ï¼—#è§¨11M.\u0011ãœª1U1ï?¨è¼´\b1Sé¤€%L1ç”º\u0019",
                                                                     "7d9d6458-b4a0-4c5f-b6d8-ef5a0057b5a4", 16, null,
                                                                     "1Lä†»1\u0017â¥¥1$$â‚™\u000fJî“™ë¾’î‰®Sï·™é‰‰+1B1P1`íš‘;ê¯ˆîƒ•X/M1\u001f\u001a\u000e\u0018â›«\u00071ï¼—#è§¨11M.\u0011ãœª1U1ï?¨è¼´\b1Sé¤€%L1ç”º\u0019",
                                                                     SubtenantApiKeyStatus.getDefault(),
                                                                     new Date(1565006434830L));
        assertFalse(subtenantapikeyInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("403affc6fd3080e7dab854be02c43523",
                                                                   new Date(1565006434646L), -74,
                                                                   "403affc6fd3080e7dab854be02c43523",
                                                                   "bfc0afad-96ce-436b-832e-e659de3d86da", -52,
                                                                   "8c03631d-332b-4cc0-94d1-a7a3afc8274f",
                                                                   "403affc6fd3080e7dab854be02c43523",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1565006432608L));
            SubtenantApiKey subtenantapikey2 = new SubtenantApiKey("403affc6fd3080e7dab854be02c43523",
                                                                   new Date(1565006434646L), -74,
                                                                   "403affc6fd3080e7dab854be02c43523",
                                                                   "bfc0afad-96ce-436b-832e-e659de3d86da", -52,
                                                                   "8c03631d-332b-4cc0-94d1-a7a3afc8274f",
                                                                   "403affc6fd3080e7dab854be02c43523",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1565006432608L));
            SubtenantApiKey subtenantapikey3 = new SubtenantApiKey("403affc6fd3080e7dab854be02c43523",
                                                                   new Date(1565006433778L), -41,
                                                                   "403affc6fd3080e7dab854be02c43523",
                                                                   "42624a7b-1bbe-47da-a23f-b7f8c17610b5", 112,
                                                                   "79da4a84-099d-405f-a6c1-723d917c4d61",
                                                                   "403affc6fd3080e7dab854be02c43523",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1565006430831L));
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotNull(subtenantapikey3);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertNotSame(subtenantapikey3, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey1, subtenantapikey2);
            assertEquals(subtenantapikey1, subtenantapikey1);
            assertFalse(subtenantapikey1.equals(null));
            assertNotEquals(subtenantapikey3, subtenantapikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
