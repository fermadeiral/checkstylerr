// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.branding.model;

import static org.junit.Assert.*;

import com.arm.mbed.cloud.sdk.common.Order;
import org.junit.Test;

/**
 * Unit tests for Model LightThemeColorListOptions.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestLightThemeColorListOptions {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            LightThemeColorListOptions lightthemecolorlistoptions1 = new LightThemeColorListOptions(Integer.valueOf(-6),
                                                                                                    Long.valueOf(93),
                                                                                                    Order.getDefault(),
                                                                                                    "52cab94e-8ff4-487a-8285-68995ad80a38",
                                                                                                    null, null);
            LightThemeColorListOptions lightthemecolorlistoptions2 = lightthemecolorlistoptions1.clone();
            assertNotNull(lightthemecolorlistoptions1);
            assertNotNull(lightthemecolorlistoptions2);
            assertNotSame(lightthemecolorlistoptions2, lightthemecolorlistoptions1);
            assertEquals(lightthemecolorlistoptions2, lightthemecolorlistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            LightThemeColorListOptions lightthemecolorlistoptions1 = new LightThemeColorListOptions(Integer.valueOf(-89),
                                                                                                    Long.valueOf(-51),
                                                                                                    Order.getDefault(),
                                                                                                    "a1f2fa48-b810-4208-93af-77ef4234d1bf",
                                                                                                    null, null);
            LightThemeColorListOptions lightthemecolorlistoptions2 = new LightThemeColorListOptions(Integer.valueOf(-89),
                                                                                                    Long.valueOf(-51),
                                                                                                    Order.getDefault(),
                                                                                                    "a1f2fa48-b810-4208-93af-77ef4234d1bf",
                                                                                                    null, null);
            assertNotNull(lightthemecolorlistoptions1);
            assertNotNull(lightthemecolorlistoptions2);
            assertNotSame(lightthemecolorlistoptions2, lightthemecolorlistoptions1);
            assertEquals(lightthemecolorlistoptions2, lightthemecolorlistoptions1);
            assertEquals(lightthemecolorlistoptions2.hashCode(), lightthemecolorlistoptions1.hashCode());
            int hashCode = lightthemecolorlistoptions1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, lightthemecolorlistoptions1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            LightThemeColorListOptions lightthemecolorlistoptions1 = new LightThemeColorListOptions(Integer.valueOf(-106),
                                                                                                    Long.valueOf(-37),
                                                                                                    Order.getDefault(),
                                                                                                    "23355a83-e29c-4fd3-8aa7-865a3578a11e",
                                                                                                    null, null);
            LightThemeColorListOptions lightthemecolorlistoptions2 = new LightThemeColorListOptions(Integer.valueOf(-106),
                                                                                                    Long.valueOf(-37),
                                                                                                    Order.getDefault(),
                                                                                                    "23355a83-e29c-4fd3-8aa7-865a3578a11e",
                                                                                                    null, null);
            LightThemeColorListOptions lightthemecolorlistoptions3 = new LightThemeColorListOptions(Integer.valueOf(-74),
                                                                                                    Long.valueOf(77),
                                                                                                    Order.getDefault(),
                                                                                                    "57003163-4dd0-4f8b-a413-60a47cb02eb7",
                                                                                                    null, null);
            assertNotNull(lightthemecolorlistoptions1);
            assertNotNull(lightthemecolorlistoptions2);
            assertNotNull(lightthemecolorlistoptions3);
            assertNotSame(lightthemecolorlistoptions2, lightthemecolorlistoptions1);
            assertNotSame(lightthemecolorlistoptions3, lightthemecolorlistoptions1);
            assertEquals(lightthemecolorlistoptions2, lightthemecolorlistoptions1);
            assertEquals(lightthemecolorlistoptions2, lightthemecolorlistoptions1);
            assertEquals(lightthemecolorlistoptions1, lightthemecolorlistoptions2);
            assertEquals(lightthemecolorlistoptions1, lightthemecolorlistoptions1);
            assertFalse(lightthemecolorlistoptions1.equals(null));
            assertNotEquals(lightthemecolorlistoptions3, lightthemecolorlistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
