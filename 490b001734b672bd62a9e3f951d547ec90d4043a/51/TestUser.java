// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model User.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestUser {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            User user1 = new User("403affc6fd3080e7dab854be02c43523", null, "f9b68e5f-a38f-4992-84dd-9692da2e8fca",
                                  new Date(1565006432814L), 37, null, "756c4.81c10@29ac6.fr", false,
                                  "db1a7a1a-a752-40f1-903f-df3ef54e8621", "403affc6fd3080e7dab854be02c43523", true,
                                  true, true, 50, null, null, "70e249d7-699c-4952-9fc0-487a6d98a0ac", -65,
                                  "944eefc2-2e56-4852-bf45-90aace69164a", UserStatus.getDefault(), null,
                                  new Date(1565006437426L), "=9=V=_,=_");
            User user2 = user1.clone();
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotSame(user2, user1);
            assertEquals(user2, user1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            User user1 = new User("403affc6fd3080e7dab854be02c43523", null, "17678a0c-c866-474e-8733-224521cd8962",
                                  new Date(1565006429975L), -12, null, "69f75.e2b45@20aa3.fr", false,
                                  "c0902f79-c0cc-46b6-94d0-a1612a04fe32", "403affc6fd3080e7dab854be02c43523", false,
                                  true, true, 93, null, null, "5806f5ee-f4fb-43b8-b00c-7d325518fd8e", 90,
                                  "2d10b9a2-c19b-4a16-a7a3-f3913f73392f", UserStatus.getDefault(), null,
                                  new Date(1565006438655L), "=9=V=_,=_");
            User user2 = new User("403affc6fd3080e7dab854be02c43523", null, "17678a0c-c866-474e-8733-224521cd8962",
                                  new Date(1565006429975L), -12, null, "69f75.e2b45@20aa3.fr", false,
                                  "c0902f79-c0cc-46b6-94d0-a1612a04fe32", "403affc6fd3080e7dab854be02c43523", false,
                                  true, true, 93, null, null, "5806f5ee-f4fb-43b8-b00c-7d325518fd8e", 90,
                                  "2d10b9a2-c19b-4a16-a7a3-f3913f73392f", UserStatus.getDefault(), null,
                                  new Date(1565006438655L), "=9=V=_,=_");
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotSame(user2, user1);
            assertEquals(user2, user1);
            assertEquals(user2.hashCode(), user1.hashCode());
            int hashCode = user1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, user1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        User user = new User("403affc6fd3080e7dab854be02c43523", null, "37bc8c90-8109-41bb-b196-ba94eb037f63",
                             new Date(1565006438508L), -89, null, "7cbc6.aaab8@65320.me", true,
                             "99f4f959-8a03-40e8-9b87-560f64f712ef", "403affc6fd3080e7dab854be02c43523", true, false,
                             true, -118, null, null, "9958f981-5940-4a02-bc0a-b7ae08b617c6", 8,
                             "69f45902-b950-42d5-b1ec-5eddc21b14eb", UserStatus.getDefault(), null,
                             new Date(1565006438125L), "=9=V=_,=_");
        assertTrue(user.isValid());
        User userInvalid = new User("1Lä†»1\u0017â¥¥1$$â‚™\u000fJî“™ë¾’î‰®Sï·™é‰‰+1B1P1`íš‘;ê¯ˆîƒ•X/M1\u001f\u001a\u000e\u0018â›«\u00071ï¼—#è§¨11M.\u0011ãœª1U1ï?¨è¼´\b1Sé¤€%L1ç”º\u0019",
                                    null, "659f37e0-3287-4707-8c1f-2a523aa53fe1", new Date(1565006431392L), -10, null,
                                    null, true,
                                    "c6bbe8e7-a856-4194-a343-751e5deffd2e5d541dbc-c015-4dd2-9efa-138cd7f7fa15e6e01910-d020-4367-b000-24f11859c9fa",
                                    "1Lä†»1\u0017â¥¥1$$â‚™\u000fJî“™ë¾’î‰®Sï·™é‰‰+1B1P1`íš‘;ê¯ˆîƒ•X/M1\u001f\u001a\u000e\u0018â›«\u00071ï¼—#è§¨11M.\u0011ãœª1U1ï?¨è¼´\b1Sé¤€%L1ç”º\u0019",
                                    false, true, false, 98, null, null, "f84dbba1-8129-45f8-81a5-b23196951c3f", -21,
                                    "7bd9782e-3eb3-4b4a-b1b5-52170cad0ecf6a7be884-d78f-4ad8-be7c-2dfb987b7422e4945d79-152f-4d12-b002-f0d148d6652f",
                                    UserStatus.getDefault(), null, new Date(1565006435632L),
                                    "ç€£<:ZN\u0014U>:ì´?NW6í’¸3<è»ºD6;ä³¡<1::7<\u000bN\u001e2W;WYB2:;0Tá¨•266ä—œ\u000b 6:\u000b;\u0007N$$@Ûš;PYÜ­áˆ·5");
        assertFalse(userInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            User user1 = new User("403affc6fd3080e7dab854be02c43523", null, "708eda56-594d-444d-85f0-2d6a506c7025",
                                  new Date(1565006431868L), 45, null, "439cf.174d1@1fd78.fr", false,
                                  "9ed391fd-96dc-4449-b8a3-4097d2a50118", "403affc6fd3080e7dab854be02c43523", false,
                                  true, true, -93, null, null, "d7fbee65-4895-457a-b3fe-72468c029eda", 27,
                                  "494db800-bfff-4f19-86e5-a7639e2c9373", UserStatus.getDefault(), null,
                                  new Date(1565006431677L), "=9=V=_,=_");
            User user2 = new User("403affc6fd3080e7dab854be02c43523", null, "708eda56-594d-444d-85f0-2d6a506c7025",
                                  new Date(1565006431868L), 45, null, "439cf.174d1@1fd78.fr", false,
                                  "9ed391fd-96dc-4449-b8a3-4097d2a50118", "403affc6fd3080e7dab854be02c43523", false,
                                  true, true, -93, null, null, "d7fbee65-4895-457a-b3fe-72468c029eda", 27,
                                  "494db800-bfff-4f19-86e5-a7639e2c9373", UserStatus.getDefault(), null,
                                  new Date(1565006431677L), "=9=V=_,=_");
            User user3 = new User("403affc6fd3080e7dab854be02c43523", null, "7248d748-39a2-4bda-957f-165b4032b2c9",
                                  new Date(1565006436173L), -7, null, "b67d1.f7337@d8e8e.me", false,
                                  "b6dee6ec-61ee-4e74-89de-2a26628f4546", "403affc6fd3080e7dab854be02c43523", false,
                                  true, true, -112, null, null, "a42920eb-3a7d-4291-8ae4-03755152af8a", 77,
                                  "c3ada96b-4a65-4236-bed8-3381facac30b", UserStatus.getDefault(), null,
                                  new Date(1565006437980L), "=9=V=_,=_");
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotNull(user3);
            assertNotSame(user2, user1);
            assertNotSame(user3, user1);
            assertEquals(user2, user1);
            assertEquals(user2, user1);
            assertEquals(user1, user2);
            assertEquals(user1, user1);
            assertFalse(user1.equals(null));
            assertNotEquals(user3, user1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
