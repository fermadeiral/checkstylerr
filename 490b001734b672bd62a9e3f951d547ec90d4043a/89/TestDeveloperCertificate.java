// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.security.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeveloperCertificate.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeveloperCertificate {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("3070ed7b-ca57-4338-b611-305a4070f341",
                                                                                  "4d30ca49-a43c-401d-95f7-2c163344a0d1",
                                                                                  new Date(1565006437605L),
                                                                                  "d3f5d217-9e2f-4b1f-90a0-da53d04bc9d1",
                                                                                  "65124c8a-f663-451a-8602-0c724ad629ee",
                                                                                  "db3de3c7-0656-4cfc-888f-fe1a66eee95f",
                                                                                  "02a77758-01bd-4bd5-aaba-d9383c86c18a",
                                                                                  "346d1b7c-c917-444e-8472-c598d816cfde");
            DeveloperCertificate developercertificate2 = developercertificate1.clone();
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("7f6aebe2-f0c6-4b4a-8b40-3ea41f6f3439",
                                                                                  "bcf00b65-bd03-4d28-baac-b61829af725d",
                                                                                  new Date(1565006433645L),
                                                                                  "b14663ef-ea25-4723-a9bf-be63f65a3e13",
                                                                                  "085d2dc4-3173-455e-97bf-b90b76ed317f",
                                                                                  "edccde2e-377f-4538-88df-81598a2ad273",
                                                                                  "5f8da064-2f95-4d98-b851-8fcbc32ebbef",
                                                                                  "032589c2-0858-469e-900c-635f44cc4e78");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("7f6aebe2-f0c6-4b4a-8b40-3ea41f6f3439",
                                                                                  "bcf00b65-bd03-4d28-baac-b61829af725d",
                                                                                  new Date(1565006433645L),
                                                                                  "b14663ef-ea25-4723-a9bf-be63f65a3e13",
                                                                                  "085d2dc4-3173-455e-97bf-b90b76ed317f",
                                                                                  "edccde2e-377f-4538-88df-81598a2ad273",
                                                                                  "5f8da064-2f95-4d98-b851-8fcbc32ebbef",
                                                                                  "032589c2-0858-469e-900c-635f44cc4e78");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2.hashCode(), developercertificate1.hashCode());
            int hashCode = developercertificate1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, developercertificate1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeveloperCertificate developercertificate = new DeveloperCertificate("b9477840-706c-4564-9324-eab5bb29466b",
                                                                             "05bc8013-53b6-4ec2-a0d0-366accb11d06",
                                                                             new Date(1565006435608L),
                                                                             "796b1b60-5da3-4416-8df8-feb4513c9ee5",
                                                                             "966adbc7-a0c1-4cd4-b56c-b2b098cd14b0",
                                                                             "721602ad-9f3e-42cf-9f42-7df4e20c5a70",
                                                                             "3f932843-a5d8-40a3-acf8-0ce10530b6cb",
                                                                             "6ea10f7b-fcd4-4b83-85c0-484a6c40cf72");
        assertTrue(developercertificate.isValid());
        DeveloperCertificate developercertificateInvalid = new DeveloperCertificate("e497ab63-b8b1-4ce1-8cf2-5c51fec4347c",
                                                                                    "16b48dab-7c62-4a79-92fd-0377a5a0c12b",
                                                                                    new Date(1565006438307L),
                                                                                    "205f0028-1457-4c01-ba52-5ef6e3079740",
                                                                                    "ee1c0193-79c1-47be-9801-b5a1ede84f13",
                                                                                    "ad070514-f3ab-428e-939b-2632104895d5",
                                                                                    null,
                                                                                    "24776b6b-5a0f-4620-aafe-5b24e818cac7");
        assertFalse(developercertificateInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("55a8ae17-e63c-4690-a588-75f96abbf5c9",
                                                                                  "b19695f1-94c3-4bdc-9093-650a28b1c236",
                                                                                  new Date(1565006432214L),
                                                                                  "dab50332-403c-4e27-9001-1424de7dee94",
                                                                                  "7522a7b6-1c5d-416a-9aab-25b6ae1b0621",
                                                                                  "4995e9ff-2d41-4344-b425-5179a7087b96",
                                                                                  "cff8dd02-5617-45a8-b440-1b0b0733b735",
                                                                                  "e75ba4ce-c31b-4a37-a130-87b1980996ea");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("55a8ae17-e63c-4690-a588-75f96abbf5c9",
                                                                                  "b19695f1-94c3-4bdc-9093-650a28b1c236",
                                                                                  new Date(1565006432214L),
                                                                                  "dab50332-403c-4e27-9001-1424de7dee94",
                                                                                  "7522a7b6-1c5d-416a-9aab-25b6ae1b0621",
                                                                                  "4995e9ff-2d41-4344-b425-5179a7087b96",
                                                                                  "cff8dd02-5617-45a8-b440-1b0b0733b735",
                                                                                  "e75ba4ce-c31b-4a37-a130-87b1980996ea");
            DeveloperCertificate developercertificate3 = new DeveloperCertificate("85ed2b5d-8312-49ce-8213-684ad8f9f715",
                                                                                  "62f4e4c7-4dd8-43ef-8afb-4fff921c748b",
                                                                                  new Date(1565006437622L),
                                                                                  "13f1b31a-7a45-4065-b643-ca93dbcb565c",
                                                                                  "c70f8837-ba7a-4bee-a3e2-87ea855f6722",
                                                                                  "93847760-c0aa-4802-827c-5f32dc47b84e",
                                                                                  "3c06ae5a-8d10-4727-95b4-0b1929ed5d19",
                                                                                  "730d6d69-d7cc-4264-a572-0ae0d6ca6d96");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotNull(developercertificate3);
            assertNotSame(developercertificate2, developercertificate1);
            assertNotSame(developercertificate3, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate1, developercertificate2);
            assertEquals(developercertificate1, developercertificate1);
            assertFalse(developercertificate1.equals(null));
            assertNotEquals(developercertificate3, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
