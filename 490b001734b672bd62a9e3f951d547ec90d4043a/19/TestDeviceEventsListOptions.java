// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import com.arm.mbed.cloud.sdk.common.Order;
import com.arm.mbed.cloud.sdk.common.listing.ListOptionsEncoder;
import com.arm.mbed.cloud.sdk.common.listing.filtering.FilterOperator;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEventsListOptions.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEventsListOptions {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEventsListOptions deviceeventslistoptions1 = new DeviceEventsListOptions(Integer.valueOf(3),
                                                                                           Long.valueOf(97),
                                                                                           Order.getDefault(),
                                                                                           "ce90be9f-d98d-486e-8ccb-9ce127ceb802",
                                                                                           null, null);
            DeviceEventsListOptions deviceeventslistoptions2 = deviceeventslistoptions1.clone();
            assertNotNull(deviceeventslistoptions1);
            assertNotNull(deviceeventslistoptions2);
            assertNotSame(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2, deviceeventslistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the filters method.
     */
    @SuppressWarnings({ "boxing", "resource" })
    @Test
    public void testFilters() {
        try {
            DeviceEventsListOptions option = new DeviceEventsListOptions().equalToDeviceId("9af4e45f-e9ca-4e88-85ca-f6d58b308bd2")
                                                                          .notEqualToDeviceId("86b1d031-8090-4d07-85a5-f97935c7d480")
                                                                          .inDeviceIds(Arrays.asList("115ada26-c60b-4c22-aea2-baba7cf16667",
                                                                                                     "0c13983c-a915-472f-88dc-ed93dac943da",
                                                                                                     "4a9b3265-fb52-4f41-b4a3-904858e9a156"))
                                                                          .notInDeviceIds(Arrays.asList("6f264cd5-888d-4a8c-bc87-b02c9e8f1cb8",
                                                                                                        "3b9db8ce-2e6a-41af-b147-5acf4707910e",
                                                                                                        "c5cd7ca9-2c11-49e2-8205-9c4a14b96c0c",
                                                                                                        "e4c147e7-f129-4ccc-ad5a-f29421cbbf35",
                                                                                                        "96eded58-a23d-4177-8437-3907e62953a9"))
                                                                          .equalToDescription("b904e0cc-cb58-4540-b071-37bc405ed51e")
                                                                          .notEqualToDescription("9cead2c5-e537-4cb0-b097-2a09fa93d2e5")
                                                                          .inDescriptions(Arrays.asList("6b15d3e9-3b05-4941-89a0-fe94182518dd",
                                                                                                        "8df445d2-97fa-4e88-aaf8-865c158a44a0",
                                                                                                        "5405d9ae-1cea-4024-9d24-4f21634f6b95",
                                                                                                        "65a67e5f-d8a1-4430-98d9-6ee9402883ec",
                                                                                                        "ef2e3953-db2a-49f8-94d3-59c0c21d8830",
                                                                                                        "52d5ea5d-b8fe-43d8-9dd2-5bd01d1c5884"))
                                                                          .notInDescriptions(Arrays.asList("22ca0ae4-8d3b-44c3-b01d-dc42375d81a0",
                                                                                                           "84c0980a-602a-426b-9e58-7317950e76e8",
                                                                                                           "4d9f3219-9804-4080-af87-5c14ba5415c3",
                                                                                                           "bafcb858-4091-4918-8872-7093c8a09bf2",
                                                                                                           "db6b27fa-8c67-46b4-879b-c66473fda26c",
                                                                                                           "89b63636-c2ad-4004-a43e-de17c7e522fe",
                                                                                                           "6cb7a839-f0b0-4ff6-9ab4-a0f8dd91416a",
                                                                                                           "8187d9a2-f29a-4852-b9e1-5c5e6004a3a1",
                                                                                                           "b62bd15e-5dda-4fd7-a07d-e8ba2fd3e5cc"))
                                                                          .inDateTimes(Arrays.asList(new Date(1565006442552L),
                                                                                                     new Date(1565006440096L),
                                                                                                     new Date(1565006440821L)))
                                                                          .notInDateTimes(Arrays.asList(new Date(1565006435850L),
                                                                                                        new Date(1565006441839L),
                                                                                                        new Date(1565006440067L)))
                                                                          .lessThanDateTime(new Date(1565006434265L))
                                                                          .greaterThanDateTime(new Date(1565006437640L))
                                                                          .equalToStateChange(Boolean.TRUE)
                                                                          .notEqualToStateChange(Boolean.TRUE)
                                                                          .equalToId("2651cded-e8f4-47d3-af03-7e7ef1ea4fa3")
                                                                          .notEqualToId("d4489feb-5819-42f8-9f17-a8c517e2bfb5")
                                                                          .inIds(Arrays.asList("fe17e97d-70de-4ff6-8255-8a4c01abe84f",
                                                                                               "13318b36-ca26-4f2e-9753-1af7f42ed62f",
                                                                                               "ba04ec27-2482-4f88-99d8-238aff47bbb0"))
                                                                          .notInIds(Arrays.asList("25385f48-b3b2-469d-833a-a408e52b184c",
                                                                                                  "91fada91-3a35-4556-8cc0-254451de6c70",
                                                                                                  "c0b679d2-70f7-4182-ad5d-70fc17b7c557",
                                                                                                  "b2cc304f-1b56-455b-a99d-af428e6c33bb",
                                                                                                  "cef48609-790b-4746-b4d2-d4a6ac9e7375",
                                                                                                  "27c48c98-0637-4238-8118-b45cba5106a5",
                                                                                                  "76e4a185-3da6-45b2-ac93-e267a5ddac57",
                                                                                                  "2651a4f5-c29b-41fb-8388-5479aba33312",
                                                                                                  "6a1d0bc7-d1fe-4bde-893d-473db91fbccc"))
                                                                          .equalToEventType("0613896e-e7ca-4fa9-b407-aa98bfd008e4")
                                                                          .notEqualToEventType("38bb91fe-5b7a-4b47-9843-ec01fbe46039")
                                                                          .inEventTypes(Arrays.asList("536c3b06-f16f-438d-8f90-e054f5d4c080",
                                                                                                      "f0ed5a6a-2b2d-4de8-ad63-86618a2b237f"))
                                                                          .notInEventTypes(Arrays.asList("e5ade628-a26b-4518-b601-aa74bea88efe",
                                                                                                         "47332ae8-e086-4157-a2c6-7ad0f3cd0e92",
                                                                                                         "433901ac-a7ad-4e91-847c-6b376cff54a9",
                                                                                                         "598a599f-29ea-4812-9516-9f7fdfdf6d28",
                                                                                                         "ab857ffd-6d1a-4aa4-aaa0-06819b83ef4a",
                                                                                                         "81456947-915f-4b48-97e4-2c29d84cd8ef",
                                                                                                         "839a6aac-c9df-49b7-a474-aecc9983685a"));
            assertTrue(option.hasFilters());
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID, FilterOperator.EQUAL));
            assertNotNull(option.getDeviceIdFilters());
            assertEquals("9af4e45f-e9ca-4e88-85ca-f6d58b308bd2",
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDeviceIdFilters());
            assertEquals("86b1d031-8090-4d07-85a5-f97935c7d480",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID, FilterOperator.IN));
            assertNotNull(option.getDeviceIdFilters());
            assertEquals(Arrays.asList("115ada26-c60b-4c22-aea2-baba7cf16667", "0c13983c-a915-472f-88dc-ed93dac943da",
                                       "4a9b3265-fb52-4f41-b4a3-904858e9a156"),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID,
                                                                 List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getDeviceIdFilters());
            assertEquals(Arrays.asList("6f264cd5-888d-4a8c-bc87-b02c9e8f1cb8", "3b9db8ce-2e6a-41af-b147-5acf4707910e",
                                       "c5cd7ca9-2c11-49e2-8205-9c4a14b96c0c", "e4c147e7-f129-4ccc-ad5a-f29421cbbf35",
                                       "96eded58-a23d-4177-8437-3907e62953a9"),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID,
                                                                    List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("b904e0cc-cb58-4540-b071-37bc405ed51e",
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("9cead2c5-e537-4cb0-b097-2a09fa93d2e5",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                       String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("6b15d3e9-3b05-4941-89a0-fe94182518dd", "8df445d2-97fa-4e88-aaf8-865c158a44a0",
                                       "5405d9ae-1cea-4024-9d24-4f21634f6b95", "65a67e5f-d8a1-4430-98d9-6ee9402883ec",
                                       "ef2e3953-db2a-49f8-94d3-59c0c21d8830", "52d5ea5d-b8fe-43d8-9dd2-5bd01d1c5884"),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                 List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("22ca0ae4-8d3b-44c3-b01d-dc42375d81a0", "84c0980a-602a-426b-9e58-7317950e76e8",
                                       "4d9f3219-9804-4080-af87-5c14ba5415c3", "bafcb858-4091-4918-8872-7093c8a09bf2",
                                       "db6b27fa-8c67-46b4-879b-c66473fda26c", "89b63636-c2ad-4004-a43e-de17c7e522fe",
                                       "6cb7a839-f0b0-4ff6-9ab4-a0f8dd91416a", "8187d9a2-f29a-4852-b9e1-5c5e6004a3a1",
                                       "b62bd15e-5dda-4fd7-a07d-e8ba2fd3e5cc"),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME, FilterOperator.IN));
            assertNotNull(option.getDateTimeFilters());
            assertEquals(Arrays.asList(new Date(1565006442552L), new Date(1565006440096L), new Date(1565006440821L)),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME,
                                                                 List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME, FilterOperator.NOT_IN));
            assertNotNull(option.getDateTimeFilters());
            assertEquals(Arrays.asList(new Date(1565006435850L), new Date(1565006441839L), new Date(1565006440067L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME,
                                                                    List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME, FilterOperator.LESS_THAN));
            assertNotNull(option.getDateTimeFilters());
            assertEquals(new Date(1565006434265L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME, FilterOperator.GREATER_THAN));
            assertNotNull(option.getDateTimeFilters());
            assertEquals(new Date(1565006437640L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE, FilterOperator.EQUAL));
            assertNotNull(option.getStateChangeFilters());
            assertEquals(Boolean.TRUE,
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE,
                                                                    Boolean.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getStateChangeFilters());
            assertEquals(Boolean.TRUE,
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE,
                                                                       Boolean.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, FilterOperator.EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("2651cded-e8f4-47d3-af03-7e7ef1ea4fa3",
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("d4489feb-5819-42f8-9f17-a8c517e2bfb5",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, FilterOperator.IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("fe17e97d-70de-4ff6-8255-8a4c01abe84f", "13318b36-ca26-4f2e-9753-1af7f42ed62f",
                                       "ba04ec27-2482-4f88-99d8-238aff47bbb0"),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, List.class,
                                                                 option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("25385f48-b3b2-469d-833a-a408e52b184c", "91fada91-3a35-4556-8cc0-254451de6c70",
                                       "c0b679d2-70f7-4182-ad5d-70fc17b7c557", "b2cc304f-1b56-455b-a99d-af428e6c33bb",
                                       "cef48609-790b-4746-b4d2-d4a6ac9e7375", "27c48c98-0637-4238-8118-b45cba5106a5",
                                       "76e4a185-3da6-45b2-ac93-e267a5ddac57", "2651a4f5-c29b-41fb-8388-5479aba33312",
                                       "6a1d0bc7-d1fe-4bde-893d-473db91fbccc"),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID,
                                                                    List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE, FilterOperator.EQUAL));
            assertNotNull(option.getEventTypeFilters());
            assertEquals("0613896e-e7ca-4fa9-b407-aa98bfd008e4",
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE,
                                                                    String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getEventTypeFilters());
            assertEquals("38bb91fe-5b7a-4b47-9843-ec01fbe46039",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE,
                                                                       String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE, FilterOperator.IN));
            assertNotNull(option.getEventTypeFilters());
            assertEquals(Arrays.asList("536c3b06-f16f-438d-8f90-e054f5d4c080", "f0ed5a6a-2b2d-4de8-ad63-86618a2b237f"),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE,
                                                                 List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE, FilterOperator.NOT_IN));
            assertNotNull(option.getEventTypeFilters());
            assertEquals(Arrays.asList("e5ade628-a26b-4518-b601-aa74bea88efe", "47332ae8-e086-4157-a2c6-7ad0f3cd0e92",
                                       "433901ac-a7ad-4e91-847c-6b376cff54a9", "598a599f-29ea-4812-9516-9f7fdfdf6d28",
                                       "ab857ffd-6d1a-4aa4-aaa0-06819b83ef4a", "81456947-915f-4b48-97e4-2c29d84cd8ef",
                                       "839a6aac-c9df-49b7-a474-aecc9983685a"),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE,
                                                                    List.class, option));
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEventsListOptions deviceeventslistoptions1 = new DeviceEventsListOptions(Integer.valueOf(25),
                                                                                           Long.valueOf(76),
                                                                                           Order.getDefault(),
                                                                                           "ec869f42-970a-4cd7-a295-a15d60d56796",
                                                                                           null, null);
            DeviceEventsListOptions deviceeventslistoptions2 = new DeviceEventsListOptions(Integer.valueOf(25),
                                                                                           Long.valueOf(76),
                                                                                           Order.getDefault(),
                                                                                           "ec869f42-970a-4cd7-a295-a15d60d56796",
                                                                                           null, null);
            assertNotNull(deviceeventslistoptions1);
            assertNotNull(deviceeventslistoptions2);
            assertNotSame(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2.hashCode(), deviceeventslistoptions1.hashCode());
            int hashCode = deviceeventslistoptions1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceeventslistoptions1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEventsListOptions deviceeventslistoptions1 = new DeviceEventsListOptions(Integer.valueOf(-27),
                                                                                           Long.valueOf(-82),
                                                                                           Order.getDefault(),
                                                                                           "621873f4-96b5-442e-b25f-a5a3a5aa82ed",
                                                                                           null, null);
            DeviceEventsListOptions deviceeventslistoptions2 = new DeviceEventsListOptions(Integer.valueOf(-27),
                                                                                           Long.valueOf(-82),
                                                                                           Order.getDefault(),
                                                                                           "621873f4-96b5-442e-b25f-a5a3a5aa82ed",
                                                                                           null, null);
            DeviceEventsListOptions deviceeventslistoptions3 = new DeviceEventsListOptions(Integer.valueOf(-106),
                                                                                           Long.valueOf(-85),
                                                                                           Order.getDefault(),
                                                                                           "35a11aec-23e6-4170-9fe2-9c7488a13e4d",
                                                                                           null, null);
            assertNotNull(deviceeventslistoptions1);
            assertNotNull(deviceeventslistoptions2);
            assertNotNull(deviceeventslistoptions3);
            assertNotSame(deviceeventslistoptions2, deviceeventslistoptions1);
            assertNotSame(deviceeventslistoptions3, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions1, deviceeventslistoptions2);
            assertEquals(deviceeventslistoptions1, deviceeventslistoptions1);
            assertFalse(deviceeventslistoptions1.equals(null));
            assertNotEquals(deviceeventslistoptions3, deviceeventslistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
