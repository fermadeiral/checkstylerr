// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEnrollment.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEnrollment {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEnrollment deviceenrollment1 = new DeviceEnrollment("6a40c5e5-36ad-4683-94d4-cbfa90d08b0a",
                                                                      new Date(1565006432901L),
                                                                      new Date(1565006433086L),
                                                                      "Ij5N5CNzKq14nDaqiRfsEvM74ON9y3l2",
                                                                      "A-x16E9KiW14WM2Z7ccZ:FmWBvIWH5PwaC9ame35u70qu:9x6fuK:5nH487xp3kMYPN187Pv7sQiAgE:Vvb9Ip6WAQF:W8m4Q",
                                                                      new Date(1565006433376L),
                                                                      "Ij5N5CNzKq14nDaqiRfsEvM74ON9y3l2");
            DeviceEnrollment deviceenrollment2 = deviceenrollment1.clone();
            assertNotNull(deviceenrollment1);
            assertNotNull(deviceenrollment2);
            assertNotSame(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEnrollment deviceenrollment1 = new DeviceEnrollment("20cc3bb1-3cd8-4771-9056-c2d498a022d2",
                                                                      new Date(1565006436826L),
                                                                      new Date(1565006432369L),
                                                                      "Ij5N5CNzKq14nDaqiRfsEvM74ON9y3l2",
                                                                      "A-x16E9KiW14WM2Z7ccZ:FmWBvIWH5PwaC9ame35u70qu:9x6fuK:5nH487xp3kMYPN187Pv7sQiAgE:Vvb9Ip6WAQF:W8m4Q",
                                                                      new Date(1565006433616L),
                                                                      "Ij5N5CNzKq14nDaqiRfsEvM74ON9y3l2");
            DeviceEnrollment deviceenrollment2 = new DeviceEnrollment("20cc3bb1-3cd8-4771-9056-c2d498a022d2",
                                                                      new Date(1565006436826L),
                                                                      new Date(1565006432369L),
                                                                      "Ij5N5CNzKq14nDaqiRfsEvM74ON9y3l2",
                                                                      "A-x16E9KiW14WM2Z7ccZ:FmWBvIWH5PwaC9ame35u70qu:9x6fuK:5nH487xp3kMYPN187Pv7sQiAgE:Vvb9Ip6WAQF:W8m4Q",
                                                                      new Date(1565006433616L),
                                                                      "Ij5N5CNzKq14nDaqiRfsEvM74ON9y3l2");
            assertNotNull(deviceenrollment1);
            assertNotNull(deviceenrollment2);
            assertNotSame(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2.hashCode(), deviceenrollment1.hashCode());
            int hashCode = deviceenrollment1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceenrollment1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEnrollment deviceenrollment = new DeviceEnrollment("3c5b671b-e439-426e-a80d-b28caaab4888",
                                                                 new Date(1565006436548L), new Date(1565006438004L),
                                                                 "Ij5N5CNzKq14nDaqiRfsEvM74ON9y3l2",
                                                                 "A-x16E9KiW14WM2Z7ccZ:FmWBvIWH5PwaC9ame35u70qu:9x6fuK:5nH487xp3kMYPN187Pv7sQiAgE:Vvb9Ip6WAQF:W8m4Q",
                                                                 new Date(1565006430671L),
                                                                 "Ij5N5CNzKq14nDaqiRfsEvM74ON9y3l2");
        assertTrue(deviceenrollment.isValid());
        DeviceEnrollment deviceenrollmentInvalid = new DeviceEnrollment("8f1c9734-b458-4834-a7cd-2e4a7e601c71",
                                                                        new Date(1565006432408L),
                                                                        new Date(1565006432313L),
                                                                        "#oJæŒ?xJk\u000brLgLH;\u0016dJwA-kmU;\u0004î¦–gw(opæ«†ubêŽ´rPpJ:bm8rwJtmkã©§Q86gLm8ì¸±QJá‹¼Jgg",
                                                                        null, new Date(1565006430768L),
                                                                        "#oJæŒ?xJk\u000brLgLH;\u0016dJwA-kmU;\u0004î¦–gw(opæ«†ubêŽ´rPpJ:bm8rwJtmkã©§Q86gLm8ì¸±QJá‹¼Jgg");
        assertFalse(deviceenrollmentInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEnrollment deviceenrollment1 = new DeviceEnrollment("fd14f84b-78b7-4543-aead-9c18a1de6ea3",
                                                                      new Date(1565006430440L),
                                                                      new Date(1565006436575L),
                                                                      "Ij5N5CNzKq14nDaqiRfsEvM74ON9y3l2",
                                                                      "A-x16E9KiW14WM2Z7ccZ:FmWBvIWH5PwaC9ame35u70qu:9x6fuK:5nH487xp3kMYPN187Pv7sQiAgE:Vvb9Ip6WAQF:W8m4Q",
                                                                      new Date(1565006435414L),
                                                                      "Ij5N5CNzKq14nDaqiRfsEvM74ON9y3l2");
            DeviceEnrollment deviceenrollment2 = new DeviceEnrollment("fd14f84b-78b7-4543-aead-9c18a1de6ea3",
                                                                      new Date(1565006430440L),
                                                                      new Date(1565006436575L),
                                                                      "Ij5N5CNzKq14nDaqiRfsEvM74ON9y3l2",
                                                                      "A-x16E9KiW14WM2Z7ccZ:FmWBvIWH5PwaC9ame35u70qu:9x6fuK:5nH487xp3kMYPN187Pv7sQiAgE:Vvb9Ip6WAQF:W8m4Q",
                                                                      new Date(1565006435414L),
                                                                      "Ij5N5CNzKq14nDaqiRfsEvM74ON9y3l2");
            DeviceEnrollment deviceenrollment3 = new DeviceEnrollment("3e5b2a93-a428-49dd-abd5-2036e083eecc",
                                                                      new Date(1565006435580L),
                                                                      new Date(1565006432738L),
                                                                      "Ij5N5CNzKq14nDaqiRfsEvM74ON9y3l2",
                                                                      "A-x16E9KiW14WM2Z7ccZ:FmWBvIWH5PwaC9ame35u70qu:9x6fuK:5nH487xp3kMYPN187Pv7sQiAgE:Vvb9Ip6WAQF:W8m4Q",
                                                                      new Date(1565006439174L),
                                                                      "Ij5N5CNzKq14nDaqiRfsEvM74ON9y3l2");
            assertNotNull(deviceenrollment1);
            assertNotNull(deviceenrollment2);
            assertNotNull(deviceenrollment3);
            assertNotSame(deviceenrollment2, deviceenrollment1);
            assertNotSame(deviceenrollment3, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment1, deviceenrollment2);
            assertEquals(deviceenrollment1, deviceenrollment1);
            assertFalse(deviceenrollment1.equals(null));
            assertNotEquals(deviceenrollment3, deviceenrollment1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
