// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceGroup.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceGroup {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceGroup devicegroup1 = new DeviceGroup(new Date(1565006431853L), null,
                                                       "75da38c4-e429-4cfb-a598-619ce92c73df", -114,
                                                       "372ea941-bded-4718-ade7-5e8248b0382f",
                                                       "24d4a2bb-7b65-4bf6-8c27-4a8d4406b1a5",
                                                       new Date(1565006431348L));
            DeviceGroup devicegroup2 = devicegroup1.clone();
            assertNotNull(devicegroup1);
            assertNotNull(devicegroup2);
            assertNotSame(devicegroup2, devicegroup1);
            assertEquals(devicegroup2, devicegroup1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceGroup devicegroup1 = new DeviceGroup(new Date(1565006434841L), null,
                                                       "2763792d-5036-40bd-bc68-438ea4b3694e", 123,
                                                       "608614c7-8c2a-4489-9baa-bde0ed755423",
                                                       "2c66fdb8-b1af-4f30-964c-ef372c279dcd",
                                                       new Date(1565006437646L));
            DeviceGroup devicegroup2 = new DeviceGroup(new Date(1565006434841L), null,
                                                       "2763792d-5036-40bd-bc68-438ea4b3694e", 123,
                                                       "608614c7-8c2a-4489-9baa-bde0ed755423",
                                                       "2c66fdb8-b1af-4f30-964c-ef372c279dcd",
                                                       new Date(1565006437646L));
            assertNotNull(devicegroup1);
            assertNotNull(devicegroup2);
            assertNotSame(devicegroup2, devicegroup1);
            assertEquals(devicegroup2, devicegroup1);
            assertEquals(devicegroup2.hashCode(), devicegroup1.hashCode());
            int hashCode = devicegroup1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, devicegroup1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceGroup devicegroup = new DeviceGroup(new Date(1565006436055L), null,
                                                  "6f5b3ce0-05d9-4a31-9001-3bbbd04dccdb", 34,
                                                  "a6f26524-9e76-4c70-b47e-a43d2b0347f2",
                                                  "3d749551-8733-48e7-8fda-8bde36c1c0b0", new Date(1565006429896L));
        assertTrue(devicegroup.isValid());
        DeviceGroup devicegroupInvalid = new DeviceGroup(new Date(1565006431279L), null,
                                                         "5ad75a58-e681-4f1c-bbe4-6f4a4b79e6093bdd785f-806f-40ff-aac2-5246bc7cb74f893885f5-6b62-43f2-9501-59eba1afe5f0493550a1-74d5-4a0b-9675-86de24fe043abe2666be-f4ec-43c8-9fd0-23002f1ecc9e0ec830c0-7f5d-4651-9463-e312b6097945c866df67-930a-429c-95c6-3f101fe9bdbae474c2c1-75b5-48ed-9751-4976df06d604713c6962-6374-4110-adfe-dd87376b6d4287af02f4-e8b4-414e-8722-237fef2df8df6b6ea7e3-13f6-43d8-97df-9c761f489429a4d1f8c5-f8e6-426b-b5d3-f0e18042f4917ffb1dad-5643-4dec-8731-32e1f8505c4ab3bbdc60-2d60-429d-b61d-7d9165f9a2da4b4cded0-f54e-4ff9-8928-5268d0ae1aad09868a99-409a-449b-8603-41f981e7a76147308d70-6629-43d6-899d-246f1719d8e423f78c4f-fd07-4100-8e19-f971e5043ee3b362e11d-aa16-4471-be0f-990a58243376c1fcc962-c76a-4bb6-aaff-a10e17d0f0388b072fa2-2319-4617-aa50-f1498ac9313a24491cf6-6108-4178-940d-7af0abb988e2cc3b596c-cabe-4c4d-8f2f-3a269731d77fca91e68a-a867-4b55-8833-56108e8256f856708d72-f328-4d4e-ae79-86816f18d5ea311c3570-80d5-42f7-85a4-37a7fb6a4560b077c5fa-3952-4539-aca3-f5bb64df90decea1b64f-744a-4d9c-99dc-4a83c49ef8fa2d89909e-1f33-432e-8bd8-5c1898051a8f788ca483-f4f2-44f2-90c5-01ac95e7d4b317d16c60-05a3-4452-acfb-1d77fe44ef64d547f821-9577-4917-a336-0cf76610a27dec2f4baa-bccf-4539-b34e-6854a1637a5822386bf3-09cf-4441-a04b-a83491b97c8a4f779be4-08db-49a2-8193-1467b53b83ef6190788d-6c96-447e-abae-b4de1a1c05abd9d148bf-e087-40f7-a0cd-e8104605b66c81f15926-38a1-4db5-90b8-49c00906884168f078fb-b9e8-4c2a-ad11-6e6962b10cc72d9da49d-bda6-486b-896d-e2ab6a2db4aae313adb4-c91c-44ca-b7c7-6992f507ceb18cade9a2-57dd-46c1-a7f7-6e70f8c59c753108b0e4-74bf-4db0-a9d2-03d87e2a4bcce3adb4a0-898e-4654-a4f7-24e498b551f12e6012fa-2467-4625-b82e-119bc048c60a863f6c84-714e-4602-a139-59a3abe3b7c181566d6f-fff0-4792-92fd-cb827aa2edf8416809d2-23bc-41c3-bb53-2be2898efdbd93896328-a969-4cce-b6fd-a2874f7439f76054de65-594e-4df2-94c4-09c18544d3ed71d6fc8b-b0b3-4cf6-8acf-a6adfd9e4617308b3218-f028-4785-acf4-391da5f864b3ee020aac-e706-4885-a868-0a3bf4f2a98c402e5a1f-1fc6-431a-bf98-c094de457f3dd136778c-3e3a-4a2b-8f6d-1448b12f30d2ed334ab1-d63c-4129-b6cb-f0d2cac0e1ec",
                                                         35, "7d0cc018-c9ae-4672-8f49-c82406861370",
                                                         "e15d8626-de79-4a23-b80c-1af93ef432417aaa57e0-5642-421b-9298-052cac7c6a81a39bc040-62a5-4d85-b8f4-194b004779c692727ee6-f007-4947-b74b-a243329aa416",
                                                         new Date(1565006434687L));
        assertFalse(devicegroupInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceGroup devicegroup1 = new DeviceGroup(new Date(1565006430481L), null,
                                                       "c5f64477-c1b8-4fd9-9b29-6072d9da0715", -120,
                                                       "cda0b09d-0eaf-4f3b-aeb5-f881c29f7a53",
                                                       "8bdb19fb-4173-47c8-9d7f-4e116c5f8d74",
                                                       new Date(1565006434889L));
            DeviceGroup devicegroup2 = new DeviceGroup(new Date(1565006430481L), null,
                                                       "c5f64477-c1b8-4fd9-9b29-6072d9da0715", -120,
                                                       "cda0b09d-0eaf-4f3b-aeb5-f881c29f7a53",
                                                       "8bdb19fb-4173-47c8-9d7f-4e116c5f8d74",
                                                       new Date(1565006434889L));
            DeviceGroup devicegroup3 = new DeviceGroup(new Date(1565006431331L), null,
                                                       "40671d7c-6bcd-4b97-8d49-477f9dee2bb7", -66,
                                                       "3b93e0e7-18d7-4a10-99e3-652fa8063f9c",
                                                       "c60c08df-4ed0-4267-8d15-f8bab280bc7b",
                                                       new Date(1565006432841L));
            assertNotNull(devicegroup1);
            assertNotNull(devicegroup2);
            assertNotNull(devicegroup3);
            assertNotSame(devicegroup2, devicegroup1);
            assertNotSame(devicegroup3, devicegroup1);
            assertEquals(devicegroup2, devicegroup1);
            assertEquals(devicegroup2, devicegroup1);
            assertEquals(devicegroup1, devicegroup2);
            assertEquals(devicegroup1, devicegroup1);
            assertFalse(devicegroup1.equals(null));
            assertNotEquals(devicegroup3, devicegroup1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
