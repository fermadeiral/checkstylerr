// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model ActiveSession.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestActiveSession {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ActiveSession activesession1 = new ActiveSession("403affc6fd3080e7dab854be02c43523",
                                                             "46082d5f-8202-494c-a431-cbbe8767bdf0",
                                                             new Date(1565006437863L),
                                                             "4c44bd25-8b00-44ff-9f4a-e7a55bce32f5",
                                                             "584e1783-ec46-4bfe-a542-9582adfab5db");
            ActiveSession activesession2 = activesession1.clone();
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotSame(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ActiveSession activesession1 = new ActiveSession("403affc6fd3080e7dab854be02c43523",
                                                             "dfda0a73-ca3e-4548-9489-7011de51c132",
                                                             new Date(1565006433572L),
                                                             "c635e12c-d4f8-492b-8df3-24b7ec9cad87",
                                                             "ae9a0eb9-1570-4b22-a818-c7838ddaff8d");
            ActiveSession activesession2 = new ActiveSession("403affc6fd3080e7dab854be02c43523",
                                                             "dfda0a73-ca3e-4548-9489-7011de51c132",
                                                             new Date(1565006433572L),
                                                             "c635e12c-d4f8-492b-8df3-24b7ec9cad87",
                                                             "ae9a0eb9-1570-4b22-a818-c7838ddaff8d");
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotSame(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession2.hashCode(), activesession1.hashCode());
            int hashCode = activesession1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, activesession1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ActiveSession activesession = new ActiveSession("403affc6fd3080e7dab854be02c43523",
                                                        "b91104ee-5883-464b-91d9-bb5209d5751e",
                                                        new Date(1565006433804L),
                                                        "dd75694d-27d4-4e28-9bab-b63c88826a89",
                                                        "6228b3f4-8ad0-4c2b-9b59-41d73bda0d24");
        assertTrue(activesession.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ActiveSession activesession1 = new ActiveSession("403affc6fd3080e7dab854be02c43523",
                                                             "365fa276-165b-4a25-8a4c-9de2f60f1e29",
                                                             new Date(1565006435220L),
                                                             "7ed2947e-4b4a-4ff3-a2e0-de7ef8d2a630",
                                                             "521c2a47-215a-41b6-adfe-1280161e9c8b");
            ActiveSession activesession2 = new ActiveSession("403affc6fd3080e7dab854be02c43523",
                                                             "365fa276-165b-4a25-8a4c-9de2f60f1e29",
                                                             new Date(1565006435220L),
                                                             "7ed2947e-4b4a-4ff3-a2e0-de7ef8d2a630",
                                                             "521c2a47-215a-41b6-adfe-1280161e9c8b");
            ActiveSession activesession3 = new ActiveSession("403affc6fd3080e7dab854be02c43523",
                                                             "72829aea-2ceb-4026-af0b-25b3b08397b0",
                                                             new Date(1565006439296L),
                                                             "8b0abeea-9b57-4d81-9f5a-ac818ef7f548",
                                                             "aa55e543-7a59-4761-aa32-77572b53a565");
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotNull(activesession3);
            assertNotSame(activesession2, activesession1);
            assertNotSame(activesession3, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession1, activesession2);
            assertEquals(activesession1, activesession1);
            assertFalse(activesession1.equals(null));
            assertNotEquals(activesession3, activesession1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
