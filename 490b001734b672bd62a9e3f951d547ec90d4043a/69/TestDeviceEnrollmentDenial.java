// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEnrollmentDenial.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEnrollmentDenial {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("403affc6fd3080e7dab854be02c43523",
                                                                                        new Date(1565006435059L),
                                                                                        "16163c8b-3534-435e-9832-72d12b1da690",
                                                                                        "403affc6fd3080e7dab854be02c43523",
                                                                                        "403affc6fd3080e7dab854be02c43523");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = deviceenrollmentdenial1.clone();
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("403affc6fd3080e7dab854be02c43523",
                                                                                        new Date(1565006436718L),
                                                                                        "547d2bb4-85cf-489b-879f-592c2728114d",
                                                                                        "403affc6fd3080e7dab854be02c43523",
                                                                                        "403affc6fd3080e7dab854be02c43523");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = new DeviceEnrollmentDenial("403affc6fd3080e7dab854be02c43523",
                                                                                        new Date(1565006436718L),
                                                                                        "547d2bb4-85cf-489b-879f-592c2728114d",
                                                                                        "403affc6fd3080e7dab854be02c43523",
                                                                                        "403affc6fd3080e7dab854be02c43523");
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2.hashCode(), deviceenrollmentdenial1.hashCode());
            int hashCode = deviceenrollmentdenial1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceenrollmentdenial1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEnrollmentDenial deviceenrollmentdenial = new DeviceEnrollmentDenial("403affc6fd3080e7dab854be02c43523",
                                                                                   new Date(1565006431486L),
                                                                                   "cc9111be-fac7-497e-abb1-459c7580d483",
                                                                                   "403affc6fd3080e7dab854be02c43523",
                                                                                   "403affc6fd3080e7dab854be02c43523");
        assertTrue(deviceenrollmentdenial.isValid());
        DeviceEnrollmentDenial deviceenrollmentdenialInvalid = new DeviceEnrollmentDenial("1Lä†»1\u0017â¥¥1$$â‚™\u000fJî“™ë¾’î‰®Sï·™é‰‰+1B1P1`íš‘;ê¯ˆîƒ•X/M1\u001f\u001a\u000e\u0018â›«\u00071ï¼—#è§¨11M.\u0011ãœª1U1ï?¨è¼´\b1Sé¤€%L1ç”º\u0019",
                                                                                          new Date(1565006430187L),
                                                                                          "dafc4a2d-1326-48a3-a53a-ab390545a5f3",
                                                                                          "1Lä†»1\u0017â¥¥1$$â‚™\u000fJî“™ë¾’î‰®Sï·™é‰‰+1B1P1`íš‘;ê¯ˆîƒ•X/M1\u001f\u001a\u000e\u0018â›«\u00071ï¼—#è§¨11M.\u0011ãœª1U1ï?¨è¼´\b1Sé¤€%L1ç”º\u0019",
                                                                                          "1Lä†»1\u0017â¥¥1$$â‚™\u000fJî“™ë¾’î‰®Sï·™é‰‰+1B1P1`íš‘;ê¯ˆîƒ•X/M1\u001f\u001a\u000e\u0018â›«\u00071ï¼—#è§¨11M.\u0011ãœª1U1ï?¨è¼´\b1Sé¤€%L1ç”º\u0019");
        assertFalse(deviceenrollmentdenialInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("403affc6fd3080e7dab854be02c43523",
                                                                                        new Date(1565006430835L),
                                                                                        "14ccd4b7-b6a5-40b8-891d-5e55ff3d0964",
                                                                                        "403affc6fd3080e7dab854be02c43523",
                                                                                        "403affc6fd3080e7dab854be02c43523");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = new DeviceEnrollmentDenial("403affc6fd3080e7dab854be02c43523",
                                                                                        new Date(1565006430835L),
                                                                                        "14ccd4b7-b6a5-40b8-891d-5e55ff3d0964",
                                                                                        "403affc6fd3080e7dab854be02c43523",
                                                                                        "403affc6fd3080e7dab854be02c43523");
            DeviceEnrollmentDenial deviceenrollmentdenial3 = new DeviceEnrollmentDenial("403affc6fd3080e7dab854be02c43523",
                                                                                        new Date(1565006437172L),
                                                                                        "f5547f59-16f1-4eae-8fba-242eb88eb3b1",
                                                                                        "403affc6fd3080e7dab854be02c43523",
                                                                                        "403affc6fd3080e7dab854be02c43523");
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotNull(deviceenrollmentdenial3);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertNotSame(deviceenrollmentdenial3, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial1, deviceenrollmentdenial2);
            assertEquals(deviceenrollmentdenial1, deviceenrollmentdenial1);
            assertFalse(deviceenrollmentdenial1.equals(null));
            assertNotEquals(deviceenrollmentdenial3, deviceenrollmentdenial1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
