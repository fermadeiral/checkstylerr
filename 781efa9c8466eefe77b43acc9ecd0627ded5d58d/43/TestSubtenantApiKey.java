// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantApiKey.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantApiKey {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("723f897cf94d230cfbfdd860cbab94ac",
                                                                   new Date(1561572702004L), -88,
                                                                   "723f897cf94d230cfbfdd860cbab94ac",
                                                                   "2959d4e4-0a65-40f4-b5fa-90f2964a25f9", -62,
                                                                   "8ec9f563-3be9-4559-951a-9320dbc99bf1",
                                                                   "723f897cf94d230cfbfdd860cbab94ac",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1561572706226L));
            SubtenantApiKey subtenantapikey2 = subtenantapikey1.clone();
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("723f897cf94d230cfbfdd860cbab94ac",
                                                                   new Date(1561572708225L), -36,
                                                                   "723f897cf94d230cfbfdd860cbab94ac",
                                                                   "1c6d8b08-5e68-4f15-a746-ad715c7dd535", 27,
                                                                   "01d7d69e-aac2-4bfd-94b9-7f58b3f32b33",
                                                                   "723f897cf94d230cfbfdd860cbab94ac",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1561572700474L));
            SubtenantApiKey subtenantapikey2 = new SubtenantApiKey("723f897cf94d230cfbfdd860cbab94ac",
                                                                   new Date(1561572708225L), -36,
                                                                   "723f897cf94d230cfbfdd860cbab94ac",
                                                                   "1c6d8b08-5e68-4f15-a746-ad715c7dd535", 27,
                                                                   "01d7d69e-aac2-4bfd-94b9-7f58b3f32b33",
                                                                   "723f897cf94d230cfbfdd860cbab94ac",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1561572700474L));
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2.hashCode(), subtenantapikey1.hashCode());
            int hashCode = subtenantapikey1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantapikey1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantApiKey subtenantapikey = new SubtenantApiKey("723f897cf94d230cfbfdd860cbab94ac",
                                                              new Date(1561572708097L), -56,
                                                              "723f897cf94d230cfbfdd860cbab94ac",
                                                              "05238862-1c50-402d-8988-fe861de8ef41", 76,
                                                              "8a2c1950-c2fc-48af-a9b1-5c6893ef1afc",
                                                              "723f897cf94d230cfbfdd860cbab94ac",
                                                              SubtenantApiKeyStatus.getDefault(),
                                                              new Date(1561572708280L));
        assertTrue(subtenantapikey.isValid());
        SubtenantApiKey subtenantapikeyInvalid = new SubtenantApiKey(null, new Date(1561572702003L), 74,
                                                                     "VeH䔾e\u001611^eﳤ\u00055Z5E\u0019115MNe15䫽e硣ZB%5\u00191哞\u001c1X\u00105#X1e1e5ꡫ?⻃周e%녫\u001a;5ꣀ퓮5e",
                                                                     "3743e4ec-6ce3-4c14-b458-10c8e7956040", 113, null,
                                                                     "VeH䔾e\u001611^eﳤ\u00055Z5E\u0019115MNe15䫽e硣ZB%5\u00191哞\u001c1X\u00105#X1e1e5ꡫ?⻃周e%녫\u001a;5ꣀ퓮5e",
                                                                     SubtenantApiKeyStatus.getDefault(),
                                                                     new Date(1561572701271L));
        assertFalse(subtenantapikeyInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("723f897cf94d230cfbfdd860cbab94ac",
                                                                   new Date(1561572708333L), -35,
                                                                   "723f897cf94d230cfbfdd860cbab94ac",
                                                                   "44f41a32-e62b-4a52-9b27-262eaf154381", 88,
                                                                   "a5d3bb1c-630d-4ff6-9dbe-7bcc552ab743",
                                                                   "723f897cf94d230cfbfdd860cbab94ac",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1561572708622L));
            SubtenantApiKey subtenantapikey2 = new SubtenantApiKey("723f897cf94d230cfbfdd860cbab94ac",
                                                                   new Date(1561572708333L), -35,
                                                                   "723f897cf94d230cfbfdd860cbab94ac",
                                                                   "44f41a32-e62b-4a52-9b27-262eaf154381", 88,
                                                                   "a5d3bb1c-630d-4ff6-9dbe-7bcc552ab743",
                                                                   "723f897cf94d230cfbfdd860cbab94ac",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1561572708622L));
            SubtenantApiKey subtenantapikey3 = new SubtenantApiKey("723f897cf94d230cfbfdd860cbab94ac",
                                                                   new Date(1561572703387L), -127,
                                                                   "723f897cf94d230cfbfdd860cbab94ac",
                                                                   "bace036e-c319-41d6-af0a-b8f011be181d", -109,
                                                                   "8c9cc73a-639a-4e2a-b121-f9911ddb0353",
                                                                   "723f897cf94d230cfbfdd860cbab94ac",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1561572701272L));
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotNull(subtenantapikey3);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertNotSame(subtenantapikey3, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey1, subtenantapikey2);
            assertEquals(subtenantapikey1, subtenantapikey1);
            assertFalse(subtenantapikey1.equals(null));
            assertNotEquals(subtenantapikey3, subtenantapikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
