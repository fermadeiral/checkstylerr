// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model Policy.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestPolicy {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            Policy policy1 = new Policy("60b47a8c-8bdb-40ff-aa68-889fc7ab3889", false,
                                        "ca743eda-ad81-4cea-8e90-2c365745285e", true,
                                        "f9b865a0-6ae6-4e1c-8875-ef41983b995e");
            Policy policy2 = policy1.clone();
            assertNotNull(policy1);
            assertNotNull(policy2);
            assertNotSame(policy2, policy1);
            assertEquals(policy2, policy1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            Policy policy1 = new Policy("6b985693-5fb2-4598-a9c1-7c1ad3f4e5a5", false,
                                        "23b1524a-4636-43df-9e20-3f0185e5e456", false,
                                        "c2b88be0-ee83-4d2e-9105-6c6957ff0055");
            Policy policy2 = new Policy("6b985693-5fb2-4598-a9c1-7c1ad3f4e5a5", false,
                                        "23b1524a-4636-43df-9e20-3f0185e5e456", false,
                                        "c2b88be0-ee83-4d2e-9105-6c6957ff0055");
            assertNotNull(policy1);
            assertNotNull(policy2);
            assertNotSame(policy2, policy1);
            assertEquals(policy2, policy1);
            assertEquals(policy2.hashCode(), policy1.hashCode());
            int hashCode = policy1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, policy1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        Policy policy = new Policy("2d256426-3459-4e94-9b16-5746d4f6af2f", false,
                                   "65ec9fd4-52ab-4cd6-b140-692d4a134601", true,
                                   "14df5752-fe65-428d-ad80-e114eb648c9d");
        assertTrue(policy.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            Policy policy1 = new Policy("2740e3df-f492-47d7-b48a-a77ae3dc4f69", true,
                                        "63af9076-a0ad-4b1b-999c-fb8d6dafcf47", false,
                                        "c935d60f-81d9-4761-bca8-fc0dbd2134c6");
            Policy policy2 = new Policy("2740e3df-f492-47d7-b48a-a77ae3dc4f69", true,
                                        "63af9076-a0ad-4b1b-999c-fb8d6dafcf47", false,
                                        "c935d60f-81d9-4761-bca8-fc0dbd2134c6");
            Policy policy3 = new Policy("d8f7713a-53f8-4151-b31d-60237a1a4488", true,
                                        "bd5988f4-3dec-407a-a4fb-094ef084919d", false,
                                        "c474a9ce-6419-4c0d-9976-7eb7614836d7");
            assertNotNull(policy1);
            assertNotNull(policy2);
            assertNotNull(policy3);
            assertNotSame(policy2, policy1);
            assertNotSame(policy3, policy1);
            assertEquals(policy2, policy1);
            assertEquals(policy2, policy1);
            assertEquals(policy1, policy2);
            assertEquals(policy1, policy1);
            assertFalse(policy1.equals(null));
            assertNotEquals(policy3, policy1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
