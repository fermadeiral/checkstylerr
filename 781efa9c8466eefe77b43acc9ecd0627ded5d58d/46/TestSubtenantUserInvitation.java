// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantUserInvitation.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantUserInvitation {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantUserInvitation subtenantuserinvitation1 = new SubtenantUserInvitation("723f897cf94d230cfbfdd860cbab94ac",
                                                                                           new Date(1561572708327L),
                                                                                           "fda10.b9975@e1d54.fr",
                                                                                           new Date(1561572702589L),
                                                                                           "723f897cf94d230cfbfdd860cbab94ac",
                                                                                           null,
                                                                                           new Date(1561572709412L),
                                                                                           "723f897cf94d230cfbfdd860cbab94ac");
            SubtenantUserInvitation subtenantuserinvitation2 = subtenantuserinvitation1.clone();
            assertNotNull(subtenantuserinvitation1);
            assertNotNull(subtenantuserinvitation2);
            assertNotSame(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantUserInvitation subtenantuserinvitation1 = new SubtenantUserInvitation("723f897cf94d230cfbfdd860cbab94ac",
                                                                                           new Date(1561572708220L),
                                                                                           "c70a0.49561@b860e.fr",
                                                                                           new Date(1561572702840L),
                                                                                           "723f897cf94d230cfbfdd860cbab94ac",
                                                                                           null,
                                                                                           new Date(1561572706437L),
                                                                                           "723f897cf94d230cfbfdd860cbab94ac");
            SubtenantUserInvitation subtenantuserinvitation2 = new SubtenantUserInvitation("723f897cf94d230cfbfdd860cbab94ac",
                                                                                           new Date(1561572708220L),
                                                                                           "c70a0.49561@b860e.fr",
                                                                                           new Date(1561572702840L),
                                                                                           "723f897cf94d230cfbfdd860cbab94ac",
                                                                                           null,
                                                                                           new Date(1561572706437L),
                                                                                           "723f897cf94d230cfbfdd860cbab94ac");
            assertNotNull(subtenantuserinvitation1);
            assertNotNull(subtenantuserinvitation2);
            assertNotSame(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2.hashCode(), subtenantuserinvitation1.hashCode());
            int hashCode = subtenantuserinvitation1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantuserinvitation1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantUserInvitation subtenantuserinvitation = new SubtenantUserInvitation("723f897cf94d230cfbfdd860cbab94ac",
                                                                                      new Date(1561572702651L),
                                                                                      "d5e7c.6832d@dff40.me",
                                                                                      new Date(1561572700659L),
                                                                                      "723f897cf94d230cfbfdd860cbab94ac",
                                                                                      null, new Date(1561572705863L),
                                                                                      "723f897cf94d230cfbfdd860cbab94ac");
        assertTrue(subtenantuserinvitation.isValid());
        SubtenantUserInvitation subtenantuserinvitationInvalid = new SubtenantUserInvitation(null,
                                                                                             new Date(1561572700916L),
                                                                                             null,
                                                                                             new Date(1561572702447L),
                                                                                             "VeH䔾e\u001611^eﳤ\u00055Z5E\u0019115MNe15䫽e硣ZB%5\u00191哞\u001c1X\u00105#X1e1e5ꡫ?⻃周e%녫\u001a;5ꣀ퓮5e",
                                                                                             null,
                                                                                             new Date(1561572709480L),
                                                                                             "VeH䔾e\u001611^eﳤ\u00055Z5E\u0019115MNe15䫽e硣ZB%5\u00191哞\u001c1X\u00105#X1e1e5ꡫ?⻃周e%녫\u001a;5ꣀ퓮5e");
        assertFalse(subtenantuserinvitationInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantUserInvitation subtenantuserinvitation1 = new SubtenantUserInvitation("723f897cf94d230cfbfdd860cbab94ac",
                                                                                           new Date(1561572700598L),
                                                                                           "96c7a.42f0c@6e286.me",
                                                                                           new Date(1561572708330L),
                                                                                           "723f897cf94d230cfbfdd860cbab94ac",
                                                                                           null,
                                                                                           new Date(1561572699718L),
                                                                                           "723f897cf94d230cfbfdd860cbab94ac");
            SubtenantUserInvitation subtenantuserinvitation2 = new SubtenantUserInvitation("723f897cf94d230cfbfdd860cbab94ac",
                                                                                           new Date(1561572700598L),
                                                                                           "96c7a.42f0c@6e286.me",
                                                                                           new Date(1561572708330L),
                                                                                           "723f897cf94d230cfbfdd860cbab94ac",
                                                                                           null,
                                                                                           new Date(1561572699718L),
                                                                                           "723f897cf94d230cfbfdd860cbab94ac");
            SubtenantUserInvitation subtenantuserinvitation3 = new SubtenantUserInvitation("723f897cf94d230cfbfdd860cbab94ac",
                                                                                           new Date(1561572706071L),
                                                                                           "af532.110c2@eeb87.me",
                                                                                           new Date(1561572703411L),
                                                                                           "723f897cf94d230cfbfdd860cbab94ac",
                                                                                           null,
                                                                                           new Date(1561572707798L),
                                                                                           "723f897cf94d230cfbfdd860cbab94ac");
            assertNotNull(subtenantuserinvitation1);
            assertNotNull(subtenantuserinvitation2);
            assertNotNull(subtenantuserinvitation3);
            assertNotSame(subtenantuserinvitation2, subtenantuserinvitation1);
            assertNotSame(subtenantuserinvitation3, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation1, subtenantuserinvitation2);
            assertEquals(subtenantuserinvitation1, subtenantuserinvitation1);
            assertFalse(subtenantuserinvitation1.equals(null));
            assertNotEquals(subtenantuserinvitation3, subtenantuserinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
