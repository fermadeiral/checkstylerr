// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEnrollmentDenial.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEnrollmentDenial {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("723f897cf94d230cfbfdd860cbab94ac",
                                                                                        new Date(1561572700984L),
                                                                                        "9ad9f584-4c9c-4b4d-9919-689f5d978f4d",
                                                                                        "723f897cf94d230cfbfdd860cbab94ac",
                                                                                        "723f897cf94d230cfbfdd860cbab94ac");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = deviceenrollmentdenial1.clone();
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("723f897cf94d230cfbfdd860cbab94ac",
                                                                                        new Date(1561572707626L),
                                                                                        "8babb5cd-33dc-4ae0-9244-10b9db110b03",
                                                                                        "723f897cf94d230cfbfdd860cbab94ac",
                                                                                        "723f897cf94d230cfbfdd860cbab94ac");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = new DeviceEnrollmentDenial("723f897cf94d230cfbfdd860cbab94ac",
                                                                                        new Date(1561572707626L),
                                                                                        "8babb5cd-33dc-4ae0-9244-10b9db110b03",
                                                                                        "723f897cf94d230cfbfdd860cbab94ac",
                                                                                        "723f897cf94d230cfbfdd860cbab94ac");
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2.hashCode(), deviceenrollmentdenial1.hashCode());
            int hashCode = deviceenrollmentdenial1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceenrollmentdenial1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEnrollmentDenial deviceenrollmentdenial = new DeviceEnrollmentDenial("723f897cf94d230cfbfdd860cbab94ac",
                                                                                   new Date(1561572705120L),
                                                                                   "a5ddbbe4-bd37-445a-9791-bd9fe9d3f00a",
                                                                                   "723f897cf94d230cfbfdd860cbab94ac",
                                                                                   "723f897cf94d230cfbfdd860cbab94ac");
        assertTrue(deviceenrollmentdenial.isValid());
        DeviceEnrollmentDenial deviceenrollmentdenialInvalid = new DeviceEnrollmentDenial("VeH䔾e\u001611^eﳤ\u00055Z5E\u0019115MNe15䫽e硣ZB%5\u00191哞\u001c1X\u00105#X1e1e5ꡫ?⻃周e%녫\u001a;5ꣀ퓮5e",
                                                                                          new Date(1561572701651L),
                                                                                          "47314cea-e692-4253-8324-7c444d11b3b8",
                                                                                          "VeH䔾e\u001611^eﳤ\u00055Z5E\u0019115MNe15䫽e硣ZB%5\u00191哞\u001c1X\u00105#X1e1e5ꡫ?⻃周e%녫\u001a;5ꣀ퓮5e",
                                                                                          "VeH䔾e\u001611^eﳤ\u00055Z5E\u0019115MNe15䫽e硣ZB%5\u00191哞\u001c1X\u00105#X1e1e5ꡫ?⻃周e%녫\u001a;5ꣀ퓮5e");
        assertFalse(deviceenrollmentdenialInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("723f897cf94d230cfbfdd860cbab94ac",
                                                                                        new Date(1561572700523L),
                                                                                        "2991d529-790b-4eaf-be7d-f2ad4bb30fe4",
                                                                                        "723f897cf94d230cfbfdd860cbab94ac",
                                                                                        "723f897cf94d230cfbfdd860cbab94ac");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = new DeviceEnrollmentDenial("723f897cf94d230cfbfdd860cbab94ac",
                                                                                        new Date(1561572700523L),
                                                                                        "2991d529-790b-4eaf-be7d-f2ad4bb30fe4",
                                                                                        "723f897cf94d230cfbfdd860cbab94ac",
                                                                                        "723f897cf94d230cfbfdd860cbab94ac");
            DeviceEnrollmentDenial deviceenrollmentdenial3 = new DeviceEnrollmentDenial("723f897cf94d230cfbfdd860cbab94ac",
                                                                                        new Date(1561572704027L),
                                                                                        "c26a3d37-8611-442e-9807-99374e682ad3",
                                                                                        "723f897cf94d230cfbfdd860cbab94ac",
                                                                                        "723f897cf94d230cfbfdd860cbab94ac");
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotNull(deviceenrollmentdenial3);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertNotSame(deviceenrollmentdenial3, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial1, deviceenrollmentdenial2);
            assertEquals(deviceenrollmentdenial1, deviceenrollmentdenial1);
            assertFalse(deviceenrollmentdenial1.equals(null));
            assertNotEquals(deviceenrollmentdenial3, deviceenrollmentdenial1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
