// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEvents.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEvents {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1553795410124L), null,
                                                          new Date(1553795419478L),
                                                          "1a9f97c3-5d66-46a6-98f7-55b2e212bc1b",
                                                          "0987d685-954f-466a-9ead-4a5b0e3b7089",
                                                          "fbe17303-7aef-4a90-9a62-6e1b64b458ee",
                                                          "adcc4ecf-54b0-4053-88dc-35a9a0a8fc65",
                                                          "29bec95b-c81e-4853-8f92-b5421ab744e3",
                                                          "26debe6d-9b63-46d8-9b02-23960faf33f7", false);
            DeviceEvents deviceevents2 = deviceevents1.clone();
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1553795415338L), null,
                                                          new Date(1553795416992L),
                                                          "803ca8c6-6da7-4926-a047-c19f4db108ab",
                                                          "38dcc7f4-448a-496f-a493-081bc0f7d936",
                                                          "c12d9925-a4bc-470a-a881-a03e7738d72e",
                                                          "e4815e6f-dac0-4d19-854a-e51f95b2f818",
                                                          "3e1146a1-cb01-4561-9387-77e020b4a80b",
                                                          "043f989c-d9a2-4652-a1ab-69b2fcbf205a", true);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1553795415338L), null,
                                                          new Date(1553795416992L),
                                                          "803ca8c6-6da7-4926-a047-c19f4db108ab",
                                                          "38dcc7f4-448a-496f-a493-081bc0f7d936",
                                                          "c12d9925-a4bc-470a-a881-a03e7738d72e",
                                                          "e4815e6f-dac0-4d19-854a-e51f95b2f818",
                                                          "3e1146a1-cb01-4561-9387-77e020b4a80b",
                                                          "043f989c-d9a2-4652-a1ab-69b2fcbf205a", true);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2.hashCode(), deviceevents1.hashCode());
            int hashCode = deviceevents1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceevents1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEvents deviceevents = new DeviceEvents(null, new Date(1553795417228L), null, new Date(1553795411498L),
                                                     "c6909a55-4a55-4153-a89a-90f9bd2bbfc8",
                                                     "dd6acb01-65ba-4b4f-a354-c4afdb0cb468",
                                                     "ee42acc0-a141-4f4c-86ee-d674c8c4fb9a",
                                                     "a83576b4-5280-4e5e-a8b5-02906325fa00",
                                                     "1ba0f136-2c00-4fe5-9b93-12807f588a81",
                                                     "6430c30c-3a73-4cd4-8400-2e0dfebbfa61", true);
        assertTrue(deviceevents.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1553795412133L), null,
                                                          new Date(1553795418664L),
                                                          "081dcd10-8e39-4690-b612-80477b36a8be",
                                                          "ada5f71b-a3f7-40e7-89a6-290b65084fd6",
                                                          "476de67f-806b-4721-944b-62226c865ab1",
                                                          "e12e1235-9c92-4aa9-af19-c984d84ab64d",
                                                          "eedc2340-d4b7-4323-a6af-cec73cb297ee",
                                                          "cf96af6d-3588-4565-a018-be1147131db0", true);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1553795412133L), null,
                                                          new Date(1553795418664L),
                                                          "081dcd10-8e39-4690-b612-80477b36a8be",
                                                          "ada5f71b-a3f7-40e7-89a6-290b65084fd6",
                                                          "476de67f-806b-4721-944b-62226c865ab1",
                                                          "e12e1235-9c92-4aa9-af19-c984d84ab64d",
                                                          "eedc2340-d4b7-4323-a6af-cec73cb297ee",
                                                          "cf96af6d-3588-4565-a018-be1147131db0", true);
            DeviceEvents deviceevents3 = new DeviceEvents(null, new Date(1553795413843L), null,
                                                          new Date(1553795416193L),
                                                          "80c0c3d9-9eb8-4072-a838-86ce7a47ae95",
                                                          "73e2919f-ed60-4b5e-b025-acf9f6bf5191",
                                                          "a269b5bb-8544-41fa-8d88-16aa3e76c97a",
                                                          "28718e16-a5a0-4b50-a6d0-bf4335b2d129",
                                                          "d831a02e-a979-4fdf-8442-98998140b103",
                                                          "c613d7ee-74a4-4e18-9d8f-6084f38ec1c7", true);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotNull(deviceevents3);
            assertNotSame(deviceevents2, deviceevents1);
            assertNotSame(deviceevents3, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents1, deviceevents2);
            assertEquals(deviceevents1, deviceevents1);
            assertFalse(deviceevents1.equals(null));
            assertNotEquals(deviceevents3, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
