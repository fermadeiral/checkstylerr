// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.security.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeveloperCertificate.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeveloperCertificate {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("603feb76-eef8-4996-8551-66bb800cf8fe",
                                                                                  "2ea5e87c-79b3-44e0-a82a-3d66b9d764ce",
                                                                                  new Date(1553795414159L),
                                                                                  "af1ec1a5-0c88-49d5-8a8f-6f6a89a0f3db",
                                                                                  "8b69439a-f319-4ea0-84a6-d647378602b5",
                                                                                  "4a22ff69-f965-49ed-b890-314cf5702a5c",
                                                                                  "4a9a4cfe-0bec-4ead-a66e-16f34d2f3d31");
            DeveloperCertificate developercertificate2 = developercertificate1.clone();
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("0f25d856-580f-4937-b637-baf826a6ceaa",
                                                                                  "a92a907c-bf86-4230-9abd-77f7c0576a9a",
                                                                                  new Date(1553795418190L),
                                                                                  "7e01571f-70ba-48fd-b3a7-4d4ad9d62c19",
                                                                                  "bfba9b55-28b9-4d57-8123-bb9c27bd184d",
                                                                                  "e670bdcc-5911-409c-a0d2-62e3fa084f37",
                                                                                  "c67d7600-83bb-46c0-a099-a90b293e6fcb");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("0f25d856-580f-4937-b637-baf826a6ceaa",
                                                                                  "a92a907c-bf86-4230-9abd-77f7c0576a9a",
                                                                                  new Date(1553795418190L),
                                                                                  "7e01571f-70ba-48fd-b3a7-4d4ad9d62c19",
                                                                                  "bfba9b55-28b9-4d57-8123-bb9c27bd184d",
                                                                                  "e670bdcc-5911-409c-a0d2-62e3fa084f37",
                                                                                  "c67d7600-83bb-46c0-a099-a90b293e6fcb");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2.hashCode(), developercertificate1.hashCode());
            int hashCode = developercertificate1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, developercertificate1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeveloperCertificate developercertificate = new DeveloperCertificate("2c2d8396-69a3-4f47-ae74-68d8843bdaef",
                                                                             "f3a9cc1e-0dff-41a7-88c6-4fe1ccf81e5b",
                                                                             new Date(1553795409835L),
                                                                             "7b0a0c6a-3a39-4a56-8f11-dd0e081ce15e",
                                                                             "aca85ec2-3b81-4200-8d3c-c7c0f1beacac",
                                                                             "dcc615f5-809f-46f4-8bae-8c4d863ff906",
                                                                             "3d69e634-0a98-4d85-95a3-f3570dffba35");
        assertTrue(developercertificate.isValid());
        DeveloperCertificate developercertificateInvalid = new DeveloperCertificate("e97ca404-0d99-4845-aeab-895215a33d8a",
                                                                                    "17338183-ed20-4d47-b36e-6a7e3f6d82df",
                                                                                    new Date(1553795412812L),
                                                                                    "ad10d5f5-34c9-4a82-8291-c6a87b4f8178",
                                                                                    "99584843-9151-4425-a7b5-17a4fa1abdea",
                                                                                    null,
                                                                                    "b805dc95-f0da-4e3e-8aca-b4f7d139eb80");
        assertFalse(developercertificateInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("1873a997-8261-421e-901d-9da835497e5c",
                                                                                  "1d0fc46b-3da8-4878-87d2-0ef2ba96131a",
                                                                                  new Date(1553795418334L),
                                                                                  "c3772a54-dbe5-4b7a-800e-40c71bde0f76",
                                                                                  "02f89515-aaf2-4527-824a-da3406c149d7",
                                                                                  "5d1fd443-799f-408a-a7a3-0584421e88e2",
                                                                                  "0ee33397-5fa5-4b03-967d-4dc2a46b5304");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("1873a997-8261-421e-901d-9da835497e5c",
                                                                                  "1d0fc46b-3da8-4878-87d2-0ef2ba96131a",
                                                                                  new Date(1553795418334L),
                                                                                  "c3772a54-dbe5-4b7a-800e-40c71bde0f76",
                                                                                  "02f89515-aaf2-4527-824a-da3406c149d7",
                                                                                  "5d1fd443-799f-408a-a7a3-0584421e88e2",
                                                                                  "0ee33397-5fa5-4b03-967d-4dc2a46b5304");
            DeveloperCertificate developercertificate3 = new DeveloperCertificate("d8e5a7cb-a36c-45e8-a7a1-afe6c2359bf3",
                                                                                  "317e371d-54c3-4c12-8d93-a44d1c9c39ab",
                                                                                  new Date(1553795415146L),
                                                                                  "06bdd3e4-355b-449e-b6ef-ea49fb118fe5",
                                                                                  "1307dbb4-5103-488e-93c6-703b19221f1d",
                                                                                  "244c14e1-a249-41a3-ac39-49b5df09e60c",
                                                                                  "09b1d9b3-179d-4b69-851f-4f8af75f602e");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotNull(developercertificate3);
            assertNotSame(developercertificate2, developercertificate1);
            assertNotSame(developercertificate3, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate1, developercertificate2);
            assertEquals(developercertificate1, developercertificate1);
            assertFalse(developercertificate1.equals(null));
            assertNotEquals(developercertificate3, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
