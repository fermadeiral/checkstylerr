// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model UserInvitation.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestUserInvitation {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("33246db8-0d40-4354-bdb7-e150e0569c34",
                                                                new Date(1553795415009L),
                                                                "b078acb6-097e-4b77-a514-696a40cfdd14",
                                                                new Date(1553795414322L),
                                                                "314ac244-77b7-4a6a-bdab-b1f8aa222e22", null,
                                                                new Date(1553795412687L),
                                                                "ff5ea1e6-2470-4d37-8331-7a3beb44e508");
            UserInvitation userinvitation2 = userinvitation1.clone();
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotSame(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("a9dc22d0-ddc3-4ed7-a72d-a5b69cdd893d",
                                                                new Date(1553795416369L),
                                                                "a5810b45-d69a-44bf-a8d7-9770cdcd4b10",
                                                                new Date(1553795415168L),
                                                                "8df46fef-9362-4126-b4a3-a5973d5422be", null,
                                                                new Date(1553795410423L),
                                                                "7348d2d3-185c-429a-a0c8-c061b6b5c451");
            UserInvitation userinvitation2 = new UserInvitation("a9dc22d0-ddc3-4ed7-a72d-a5b69cdd893d",
                                                                new Date(1553795416369L),
                                                                "a5810b45-d69a-44bf-a8d7-9770cdcd4b10",
                                                                new Date(1553795415168L),
                                                                "8df46fef-9362-4126-b4a3-a5973d5422be", null,
                                                                new Date(1553795410423L),
                                                                "7348d2d3-185c-429a-a0c8-c061b6b5c451");
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotSame(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation2.hashCode(), userinvitation1.hashCode());
            int hashCode = userinvitation1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, userinvitation1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        UserInvitation userinvitation = new UserInvitation("0bb2f79e-050a-4674-ba45-81b43f8db94c",
                                                           new Date(1553795412835L),
                                                           "8dc70083-0d0b-4cd9-b3e1-b8a5efbb5bfc",
                                                           new Date(1553795418932L),
                                                           "b4ec5059-c460-4384-95d9-6d24a264eadb", null,
                                                           new Date(1553795409820L),
                                                           "8a1f2270-3be5-4218-b18f-bad6542bfaee");
        assertTrue(userinvitation.isValid());
        UserInvitation userinvitationInvalid = new UserInvitation("de2f5fd7-109a-4694-b4f4-6034b9cf85d0",
                                                                  new Date(1553795413346L), null,
                                                                  new Date(1553795416407L),
                                                                  "2f4647d7-eaea-4b2a-8fa7-404d4f69ccd2", null,
                                                                  new Date(1553795416195L),
                                                                  "3874d3e1-075d-465e-8d48-2e2c5c5f481c");
        assertFalse(userinvitationInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("3ea46d50-a925-4554-94e6-58d4ce1b9b5a",
                                                                new Date(1553795414564L),
                                                                "01ffa6a0-19e1-4af4-8275-ae85f7038549",
                                                                new Date(1553795414016L),
                                                                "5908edd9-6e0b-4aa9-8468-60f3693d69af", null,
                                                                new Date(1553795419055L),
                                                                "3d8c93c3-77e4-418f-bacd-0653402519a0");
            UserInvitation userinvitation2 = new UserInvitation("3ea46d50-a925-4554-94e6-58d4ce1b9b5a",
                                                                new Date(1553795414564L),
                                                                "01ffa6a0-19e1-4af4-8275-ae85f7038549",
                                                                new Date(1553795414016L),
                                                                "5908edd9-6e0b-4aa9-8468-60f3693d69af", null,
                                                                new Date(1553795419055L),
                                                                "3d8c93c3-77e4-418f-bacd-0653402519a0");
            UserInvitation userinvitation3 = new UserInvitation("35123e4f-2d3d-4c5f-b6c8-c9da6fe94140",
                                                                new Date(1553795414789L),
                                                                "e824bf5b-6d6e-40ef-acb6-0a50c303f75f",
                                                                new Date(1553795413190L),
                                                                "4740b9e8-4b2a-45e3-b00d-53b17397f69a", null,
                                                                new Date(1553795418076L),
                                                                "2216c97c-aa56-4f44-80c5-527fcc34ab3e");
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotNull(userinvitation3);
            assertNotSame(userinvitation2, userinvitation1);
            assertNotSame(userinvitation3, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation1, userinvitation2);
            assertEquals(userinvitation1, userinvitation1);
            assertFalse(userinvitation1.equals(null));
            assertNotEquals(userinvitation3, userinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
