// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model ApiKey.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestApiKey {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ApiKey apikey1 = new ApiKey("c9fcfe6fe9023446e3c866daad5cd321", new Date(1553795409365L), -53,
                                        "2a437cab-293b-4b7f-b9e6-17efb6e6d00f", "5c01119c-3ee1-45ea-b9fa-05732ec37488",
                                        23, "f9e1df10-2fc0-4857-afd2-1900d930e26e",
                                        "37a2e998-a1bc-4de2-ac7f-30b3b4c71408", ApiKeyStatus.getDefault(),
                                        new Date(1553795413868L));
            ApiKey apikey2 = apikey1.clone();
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotSame(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ApiKey apikey1 = new ApiKey("413d4cbdc4c39b8c3bf2b94f02cffb94", new Date(1553795418671L), -51,
                                        "2608cfbd-293d-4ad7-8075-6f7feab4690c", "6b96739f-4342-4701-93bb-0b5cd32d82bf",
                                        -106, "6bc38206-40f3-4cc0-8453-d3fc1e5ac1c9",
                                        "e1e79210-0932-485d-8a19-1f04571585af", ApiKeyStatus.getDefault(),
                                        new Date(1553795416783L));
            ApiKey apikey2 = new ApiKey("413d4cbdc4c39b8c3bf2b94f02cffb94", new Date(1553795418671L), -51,
                                        "2608cfbd-293d-4ad7-8075-6f7feab4690c", "6b96739f-4342-4701-93bb-0b5cd32d82bf",
                                        -106, "6bc38206-40f3-4cc0-8453-d3fc1e5ac1c9",
                                        "e1e79210-0932-485d-8a19-1f04571585af", ApiKeyStatus.getDefault(),
                                        new Date(1553795416783L));
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotSame(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey2.hashCode(), apikey1.hashCode());
            int hashCode = apikey1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, apikey1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ApiKey apikey = new ApiKey("b8af147b219c6d6ce4ef5829ad956180", new Date(1553795410142L), -73,
                                   "ebeefd47-0855-44fe-88eb-45b00dfacd06", "ae4f2416-bdef-4eee-aa35-12a1c6df43df", -62,
                                   "619d4029-8bee-4892-a6ee-dbee9d639438", "414ab72e-890b-45f4-b98b-ca05c64c7cd9",
                                   ApiKeyStatus.getDefault(), new Date(1553795414899L));
        assertTrue(apikey.isValid());
        ApiKey apikeyInvalid = new ApiKey("?$$\u00102ìˆ¥!æ·?\u0018\u0003ï…¾\u001a\u000f\u0013\u000b\u0018C2á«­\u0010ì…«2I2\u0016TUåª¡2\u001c2`2#2222Wî•?è˜¥æ­†^2\u0013â¤€å¶Ÿ\\\\\fK2ë£“_Në¶§`%2K;á³?W",
                                          new Date(1553795412400L), -112, "d35c5540-e35e-420c-af9a-8078566e5926",
                                          "b9f21c01-e449-44b9-b315-d6b1d5407ef6", -1, null,
                                          "b930085b-8045-4ac3-a85c-e7a51de9d880", ApiKeyStatus.getDefault(),
                                          new Date(1553795415110L));
        assertFalse(apikeyInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ApiKey apikey1 = new ApiKey("d9e2e620386821f7dede6fa8bcbb62ab", new Date(1553795409959L), -29,
                                        "a5005168-ff80-464d-8534-65bb36f3f40f", "66bf16d8-cb48-4dd1-94b9-2a8be3ed31ed",
                                        -101, "b5bd21ca-8750-47bb-923b-46a6e0484d0c",
                                        "5782553b-c4c4-458f-a482-9833455d6a45", ApiKeyStatus.getDefault(),
                                        new Date(1553795418338L));
            ApiKey apikey2 = new ApiKey("d9e2e620386821f7dede6fa8bcbb62ab", new Date(1553795409959L), -29,
                                        "a5005168-ff80-464d-8534-65bb36f3f40f", "66bf16d8-cb48-4dd1-94b9-2a8be3ed31ed",
                                        -101, "b5bd21ca-8750-47bb-923b-46a6e0484d0c",
                                        "5782553b-c4c4-458f-a482-9833455d6a45", ApiKeyStatus.getDefault(),
                                        new Date(1553795418338L));
            ApiKey apikey3 = new ApiKey("b150e8ed6ff47fb5dcab17a41244a09b", new Date(1553795412651L), -7,
                                        "055a0050-010a-47ce-9bba-757cdd502041", "aea7a9c3-02fa-4164-b9fa-5b5d728e2928",
                                        -123, "a2c698e4-f671-4b33-9119-cf407af97052",
                                        "2e65e73a-9484-4fcf-88ad-c593c21d3a70", ApiKeyStatus.getDefault(),
                                        new Date(1553795418265L));
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotNull(apikey3);
            assertNotSame(apikey2, apikey1);
            assertNotSame(apikey3, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey1, apikey2);
            assertEquals(apikey1, apikey1);
            assertFalse(apikey1.equals(null));
            assertNotEquals(apikey3, apikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
