// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEnrollmentDenial.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEnrollmentDenial {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("78dd34c52dac0efe94fca4c8efd6cb08",
                                                                                        new Date(1553795416144L),
                                                                                        "970dc44f-aa86-407f-953f-9153c45cb5c8",
                                                                                        "fb5baf3fd40f7ebd6b5566dae43fb3eb",
                                                                                        "abd456eb22b2b82ccc4b93f0dd47bb6f");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = deviceenrollmentdenial1.clone();
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("f3c2b2bfa3f557288c1c67bb9f77bc98",
                                                                                        new Date(1553795415406L),
                                                                                        "24ea2cfb-bfa4-4148-b050-cd13446ec846",
                                                                                        "b0a8f3ebc87a2abd7a54ddb5e24b3f5a",
                                                                                        "9202ecd9baebc14cbc1c8f7adbbfb0d6");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = new DeviceEnrollmentDenial("f3c2b2bfa3f557288c1c67bb9f77bc98",
                                                                                        new Date(1553795415406L),
                                                                                        "24ea2cfb-bfa4-4148-b050-cd13446ec846",
                                                                                        "b0a8f3ebc87a2abd7a54ddb5e24b3f5a",
                                                                                        "9202ecd9baebc14cbc1c8f7adbbfb0d6");
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2.hashCode(), deviceenrollmentdenial1.hashCode());
            int hashCode = deviceenrollmentdenial1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceenrollmentdenial1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEnrollmentDenial deviceenrollmentdenial = new DeviceEnrollmentDenial("73e0c24d8dd3ffdf7eaa4e96e1dbb44d",
                                                                                   new Date(1553795419364L),
                                                                                   "eb200a14-da0d-45cb-b75b-ff4afac0750a",
                                                                                   "fff0fefd6597fb4bce8463e11fce7485",
                                                                                   "ac472dee79c0721e0135f610e22d82c8");
        assertTrue(deviceenrollmentdenial.isValid());
        DeviceEnrollmentDenial deviceenrollmentdenialInvalid = new DeviceEnrollmentDenial("8\bEí‡¢W]J66686<ê¬žO;ä‹“86!?616F68ìˆŽ6VX8ã£“6Oâ•‹S8\u001388866C`866ì¢ŽK6\u0001í„ˆ6Z&È—^6\u001d6T",
                                                                                          new Date(1553795416298L),
                                                                                          "39e6aace-a9ac-4241-90dd-84ee5e8ced17",
                                                                                          "65îŠ¿G6[6\u001eï–µU$$à°®`éš?6<î?«áŠ§5\u001f:<.áš·?5ä?¯Q\u000255è›œ6P[å­Ž5ëƒ½66\u001dí?”ï¥†êƒ›\u001e/â½–\u0017WÕŽZ-]55)> /\u000eà¥€T5",
                                                                                          "6>65)?6î€–ã?±15ç¾‹33é²§\u0006Xà³ %1H365è‹ƒM3163CI11555\u0000ã?†î?“&?ã?¡/53ëš­\u0002é ²6ç¸«5\u000e5G<G13î™¢6\u001d6\u0002");
        assertFalse(deviceenrollmentdenialInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("1bbdce9be1fabbb4890487399c31ac75",
                                                                                        new Date(1553795416170L),
                                                                                        "eb2c88cf-b2b3-4273-9744-125b765ddfe1",
                                                                                        "d8665f4f1e129ad1eccc1182bb6603cd",
                                                                                        "bbdde97ebd75d0fe96e5fb31d2ffb50e");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = new DeviceEnrollmentDenial("1bbdce9be1fabbb4890487399c31ac75",
                                                                                        new Date(1553795416170L),
                                                                                        "eb2c88cf-b2b3-4273-9744-125b765ddfe1",
                                                                                        "d8665f4f1e129ad1eccc1182bb6603cd",
                                                                                        "bbdde97ebd75d0fe96e5fb31d2ffb50e");
            DeviceEnrollmentDenial deviceenrollmentdenial3 = new DeviceEnrollmentDenial("07ef4eafacaffec9e52f401dcf8011d7",
                                                                                        new Date(1553795411182L),
                                                                                        "11ad7db6-b3e7-4258-8ef4-01623d579fe2",
                                                                                        "0e81280f2e3fcda0edd931d6b306dad2",
                                                                                        "1c999be6adc293cdabb6b25e937cd389");
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotNull(deviceenrollmentdenial3);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertNotSame(deviceenrollmentdenial3, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial1, deviceenrollmentdenial2);
            assertEquals(deviceenrollmentdenial1, deviceenrollmentdenial1);
            assertFalse(deviceenrollmentdenial1.equals(null));
            assertNotEquals(deviceenrollmentdenial3, deviceenrollmentdenial1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
