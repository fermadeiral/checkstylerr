// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import com.arm.mbed.cloud.sdk.common.Order;
import com.arm.mbed.cloud.sdk.common.listing.ListOptionsEncoder;
import com.arm.mbed.cloud.sdk.common.listing.filtering.FilterOperator;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEventsListOptions.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEventsListOptions {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEventsListOptions deviceeventslistoptions1 = new DeviceEventsListOptions(Integer.valueOf(-97),
                                                                                           Long.valueOf(110),
                                                                                           Order.getDefault(),
                                                                                           "8953d045-5d3d-4453-9012-0d51bdb032ac",
                                                                                           null, null);
            DeviceEventsListOptions deviceeventslistoptions2 = deviceeventslistoptions1.clone();
            assertNotNull(deviceeventslistoptions1);
            assertNotNull(deviceeventslistoptions2);
            assertNotSame(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2, deviceeventslistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the filters method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testFilters() {
        try {
            DeviceEventsListOptions option = new DeviceEventsListOptions().equalToDeviceId("e2409bef-dab1-4056-8571-6356df362c54")
                                                                          .notEqualToDeviceId("7170bf5b-1d8a-4fa1-8883-b1ccec6e33aa")
                                                                          .inDeviceIds(Arrays.asList("84eefd53-fcf7-4942-9cde-61cf8f8d3df7",
                                                                                                     "69d1a573-b0ef-4ae3-9ea9-1564d58c2520",
                                                                                                     "b55f5fc7-56bf-46d4-87c1-262dec262191"))
                                                                          .notInDeviceIds(Arrays.asList("55661243-9b1d-4963-bfeb-10caa295389e",
                                                                                                        "d815d3b3-b50e-4f78-b007-379ff65dd5d2",
                                                                                                        "2c37e32c-4227-405f-b928-c156c9a82e9d",
                                                                                                        "6171ebab-eb70-496b-a0d5-29a136b592db",
                                                                                                        "cfabf463-ab3b-4155-a3ff-be3f58c81a80",
                                                                                                        "995fd77b-fd45-4d35-910a-12a7c26a0752",
                                                                                                        "551587aa-b2de-477b-9fc7-7042f96d479e"))
                                                                          .equalToDescription("d4510d52-6776-4fe5-9557-e5e5736690da")
                                                                          .notEqualToDescription("fff715ac-16b1-42f7-943f-3f411407329c")
                                                                          .inDescriptions(Arrays.asList("92b9f4ac-39ca-4a56-92e5-37c0fe0d68b0",
                                                                                                        "36e45273-0679-4d94-b74f-5ba98231c828",
                                                                                                        "7a318f5d-fba4-4b75-9696-0acf16269770",
                                                                                                        "b46cb1ab-37ac-4140-95a1-00fa18660efe",
                                                                                                        "9b5a5b66-6d1c-4ef3-ab4d-699523ad9f1c",
                                                                                                        "be76dd38-076b-4324-b5bd-b7b90ac07ad8",
                                                                                                        "f7ed73c2-18a5-4baa-9386-197ceeef304b",
                                                                                                        "5c47f0fe-bd89-429f-8684-988767ea9bc2",
                                                                                                        "a260cb4e-a6c4-4b86-9ea8-a7a9a91434e4"))
                                                                          .notInDescriptions(Arrays.asList("0d2b740f-c2a0-49ab-9a0a-b296dd85a968",
                                                                                                           "c866b21a-6a45-496f-98e4-cc0162081889",
                                                                                                           "a2851cea-0b4c-40ea-8189-c4a3deaa99a2",
                                                                                                           "12a82a58-4565-457a-a0d9-970c0769add4",
                                                                                                           "0a371f2d-89f0-40e5-9bea-6a21550091c1",
                                                                                                           "5c834af9-5901-4bfc-a9e7-8a70d166bf70"))
                                                                          .inDateTimes(Arrays.asList(new Date(1553795414584L),
                                                                                                     new Date(1553795410596L),
                                                                                                     new Date(1553795411328L),
                                                                                                     new Date(1553795419433L)))
                                                                          .notInDateTimes(Arrays.asList(new Date(1553795411742L),
                                                                                                        new Date(1553795415430L)))
                                                                          .lessThanDateTime(new Date(1553795415616L))
                                                                          .greaterThanDateTime(new Date(1553795415381L))
                                                                          .equalToStateChange(Boolean.FALSE)
                                                                          .notEqualToStateChange(Boolean.TRUE)
                                                                          .equalToId("634067f9-54b6-45d4-964b-d26da069aa77")
                                                                          .notEqualToId("01af5c82-3d95-435e-b64d-a48b0280a6ca")
                                                                          .inIds(Arrays.asList("61aa247c-e255-4e8b-82ec-2addb9da9947",
                                                                                               "e06508d8-7497-4e4c-b7cf-70ada5994e10",
                                                                                               "6c3f8b27-8250-4612-a730-6e882df6d73b",
                                                                                               "f54f4bc0-c20a-48f8-a099-71ab20bd053a",
                                                                                               "ed197ca0-b4d8-4d7b-96d6-6e915c3b891c"))
                                                                          .notInIds(Arrays.asList("b9374c97-2af0-463a-a1f9-5446d0676087",
                                                                                                  "c534dde5-1c14-4d0e-a715-6581bffc8123",
                                                                                                  "b55d07b1-7601-44ae-9cc0-a8b48fee176b",
                                                                                                  "20469516-d571-4f3b-a954-e844f076cc41",
                                                                                                  "b5e05058-59c4-4614-8ed0-a4eaa662939a",
                                                                                                  "f59d66af-103f-4113-a35b-1234b400cb27",
                                                                                                  "097eea18-5c2e-47a2-bb74-4fcd92f5ceed"))
                                                                          .equalToEventType("69ccf008-fa0e-48a2-b7ac-871adbb0f3be")
                                                                          .notEqualToEventType("6519c02b-761e-4bf1-982a-2d540da5bde3")
                                                                          .inEventTypes(Arrays.asList("3d573b68-8bec-4fb6-9d01-f177b9ffad0a",
                                                                                                      "126c446b-a838-4e49-aa81-449ee0976083"))
                                                                          .notInEventTypes(Arrays.asList("4df0033d-8891-44d3-8cda-20539e55f55e",
                                                                                                         "4c81535a-92f1-4a20-a6d0-d2be67cdcd65",
                                                                                                         "b518d5e1-2784-4911-bd54-5ca62b3c1fe4"));
            assertTrue(option.hasFilters());
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID, FilterOperator.EQUAL));
            assertNotNull(option.getDeviceIdFilters());
            assertEquals("e2409bef-dab1-4056-8571-6356df362c54",
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDeviceIdFilters());
            assertEquals("7170bf5b-1d8a-4fa1-8883-b1ccec6e33aa",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID, FilterOperator.IN));
            assertNotNull(option.getDeviceIdFilters());
            assertEquals(Arrays.asList("84eefd53-fcf7-4942-9cde-61cf8f8d3df7", "69d1a573-b0ef-4ae3-9ea9-1564d58c2520",
                                       "b55f5fc7-56bf-46d4-87c1-262dec262191"),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID,
                                                                 List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getDeviceIdFilters());
            assertEquals(Arrays.asList("55661243-9b1d-4963-bfeb-10caa295389e", "d815d3b3-b50e-4f78-b007-379ff65dd5d2",
                                       "2c37e32c-4227-405f-b928-c156c9a82e9d", "6171ebab-eb70-496b-a0d5-29a136b592db",
                                       "cfabf463-ab3b-4155-a3ff-be3f58c81a80", "995fd77b-fd45-4d35-910a-12a7c26a0752",
                                       "551587aa-b2de-477b-9fc7-7042f96d479e"),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID,
                                                                    List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("d4510d52-6776-4fe5-9557-e5e5736690da",
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("fff715ac-16b1-42f7-943f-3f411407329c",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                       String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("92b9f4ac-39ca-4a56-92e5-37c0fe0d68b0", "36e45273-0679-4d94-b74f-5ba98231c828",
                                       "7a318f5d-fba4-4b75-9696-0acf16269770", "b46cb1ab-37ac-4140-95a1-00fa18660efe",
                                       "9b5a5b66-6d1c-4ef3-ab4d-699523ad9f1c", "be76dd38-076b-4324-b5bd-b7b90ac07ad8",
                                       "f7ed73c2-18a5-4baa-9386-197ceeef304b", "5c47f0fe-bd89-429f-8684-988767ea9bc2",
                                       "a260cb4e-a6c4-4b86-9ea8-a7a9a91434e4"),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                 List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("0d2b740f-c2a0-49ab-9a0a-b296dd85a968", "c866b21a-6a45-496f-98e4-cc0162081889",
                                       "a2851cea-0b4c-40ea-8189-c4a3deaa99a2", "12a82a58-4565-457a-a0d9-970c0769add4",
                                       "0a371f2d-89f0-40e5-9bea-6a21550091c1", "5c834af9-5901-4bfc-a9e7-8a70d166bf70"),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME, FilterOperator.IN));
            assertNotNull(option.getDateTimeFilters());
            assertEquals(Arrays.asList(new Date(1553795414584L), new Date(1553795410596L), new Date(1553795411328L),
                                       new Date(1553795419433L)),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME,
                                                                 List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME, FilterOperator.NOT_IN));
            assertNotNull(option.getDateTimeFilters());
            assertEquals(Arrays.asList(new Date(1553795411742L), new Date(1553795415430L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME,
                                                                    List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME, FilterOperator.LESS_THAN));
            assertNotNull(option.getDateTimeFilters());
            assertEquals(new Date(1553795415616L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME, FilterOperator.GREATER_THAN));
            assertNotNull(option.getDateTimeFilters());
            assertEquals(new Date(1553795415381L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE, FilterOperator.EQUAL));
            assertNotNull(option.getStateChangeFilters());
            assertEquals(Boolean.FALSE,
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE,
                                                                    Boolean.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getStateChangeFilters());
            assertEquals(Boolean.TRUE,
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE,
                                                                       Boolean.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, FilterOperator.EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("634067f9-54b6-45d4-964b-d26da069aa77",
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("01af5c82-3d95-435e-b64d-a48b0280a6ca",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, FilterOperator.IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("61aa247c-e255-4e8b-82ec-2addb9da9947", "e06508d8-7497-4e4c-b7cf-70ada5994e10",
                                       "6c3f8b27-8250-4612-a730-6e882df6d73b", "f54f4bc0-c20a-48f8-a099-71ab20bd053a",
                                       "ed197ca0-b4d8-4d7b-96d6-6e915c3b891c"),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, List.class,
                                                                 option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("b9374c97-2af0-463a-a1f9-5446d0676087", "c534dde5-1c14-4d0e-a715-6581bffc8123",
                                       "b55d07b1-7601-44ae-9cc0-a8b48fee176b", "20469516-d571-4f3b-a954-e844f076cc41",
                                       "b5e05058-59c4-4614-8ed0-a4eaa662939a", "f59d66af-103f-4113-a35b-1234b400cb27",
                                       "097eea18-5c2e-47a2-bb74-4fcd92f5ceed"),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID,
                                                                    List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE, FilterOperator.EQUAL));
            assertNotNull(option.getEventTypeFilters());
            assertEquals("69ccf008-fa0e-48a2-b7ac-871adbb0f3be",
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE,
                                                                    String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getEventTypeFilters());
            assertEquals("6519c02b-761e-4bf1-982a-2d540da5bde3",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE,
                                                                       String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE, FilterOperator.IN));
            assertNotNull(option.getEventTypeFilters());
            assertEquals(Arrays.asList("3d573b68-8bec-4fb6-9d01-f177b9ffad0a", "126c446b-a838-4e49-aa81-449ee0976083"),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE,
                                                                 List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE, FilterOperator.NOT_IN));
            assertNotNull(option.getEventTypeFilters());
            assertEquals(Arrays.asList("4df0033d-8891-44d3-8cda-20539e55f55e", "4c81535a-92f1-4a20-a6d0-d2be67cdcd65",
                                       "b518d5e1-2784-4911-bd54-5ca62b3c1fe4"),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE,
                                                                    List.class, option));
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEventsListOptions deviceeventslistoptions1 = new DeviceEventsListOptions(Integer.valueOf(46),
                                                                                           Long.valueOf(98),
                                                                                           Order.getDefault(),
                                                                                           "8b0fc7ee-f6d6-4d00-a65c-f285d8b0102e",
                                                                                           null, null);
            DeviceEventsListOptions deviceeventslistoptions2 = new DeviceEventsListOptions(Integer.valueOf(46),
                                                                                           Long.valueOf(98),
                                                                                           Order.getDefault(),
                                                                                           "8b0fc7ee-f6d6-4d00-a65c-f285d8b0102e",
                                                                                           null, null);
            assertNotNull(deviceeventslistoptions1);
            assertNotNull(deviceeventslistoptions2);
            assertNotSame(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2.hashCode(), deviceeventslistoptions1.hashCode());
            int hashCode = deviceeventslistoptions1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceeventslistoptions1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEventsListOptions deviceeventslistoptions1 = new DeviceEventsListOptions(Integer.valueOf(42),
                                                                                           Long.valueOf(-34),
                                                                                           Order.getDefault(),
                                                                                           "a08eed84-0af7-4f4f-b40b-e90861557736",
                                                                                           null, null);
            DeviceEventsListOptions deviceeventslistoptions2 = new DeviceEventsListOptions(Integer.valueOf(42),
                                                                                           Long.valueOf(-34),
                                                                                           Order.getDefault(),
                                                                                           "a08eed84-0af7-4f4f-b40b-e90861557736",
                                                                                           null, null);
            DeviceEventsListOptions deviceeventslistoptions3 = new DeviceEventsListOptions(Integer.valueOf(81),
                                                                                           Long.valueOf(-54),
                                                                                           Order.getDefault(),
                                                                                           "69fd8b48-5a36-4b9b-8b3b-d7bd7947fc6c",
                                                                                           null, null);
            assertNotNull(deviceeventslistoptions1);
            assertNotNull(deviceeventslistoptions2);
            assertNotNull(deviceeventslistoptions3);
            assertNotSame(deviceeventslistoptions2, deviceeventslistoptions1);
            assertNotSame(deviceeventslistoptions3, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions1, deviceeventslistoptions2);
            assertEquals(deviceeventslistoptions1, deviceeventslistoptions1);
            assertFalse(deviceeventslistoptions1.equals(null));
            assertNotEquals(deviceeventslistoptions3, deviceeventslistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
