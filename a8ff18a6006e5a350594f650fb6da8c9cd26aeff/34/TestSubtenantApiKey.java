// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantApiKey.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantApiKey {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("e51a609dbd6e0d1c3d5bbabcaedbd2eb",
                                                                   new Date(1559150274654L), 19,
                                                                   "e51a609dbd6e0d1c3d5bbabcaedbd2eb",
                                                                   "51fd02ec-34ab-425d-bc00-d50c37f7ee27", -67,
                                                                   "ca845b0c-fed2-4330-9111-8b3f19fc31a4",
                                                                   "e51a609dbd6e0d1c3d5bbabcaedbd2eb",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1559150278844L));
            SubtenantApiKey subtenantapikey2 = subtenantapikey1.clone();
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("e51a609dbd6e0d1c3d5bbabcaedbd2eb",
                                                                   new Date(1559150272976L), -93,
                                                                   "e51a609dbd6e0d1c3d5bbabcaedbd2eb",
                                                                   "63ef7e1d-d99f-487e-9097-49eb775ce3d3", -50,
                                                                   "6d5d0c40-a902-4c3f-8c8c-43d1abff837d",
                                                                   "e51a609dbd6e0d1c3d5bbabcaedbd2eb",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1559150270179L));
            SubtenantApiKey subtenantapikey2 = new SubtenantApiKey("e51a609dbd6e0d1c3d5bbabcaedbd2eb",
                                                                   new Date(1559150272976L), -93,
                                                                   "e51a609dbd6e0d1c3d5bbabcaedbd2eb",
                                                                   "63ef7e1d-d99f-487e-9097-49eb775ce3d3", -50,
                                                                   "6d5d0c40-a902-4c3f-8c8c-43d1abff837d",
                                                                   "e51a609dbd6e0d1c3d5bbabcaedbd2eb",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1559150270179L));
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2.hashCode(), subtenantapikey1.hashCode());
            int hashCode = subtenantapikey1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantapikey1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantApiKey subtenantapikey = new SubtenantApiKey("e51a609dbd6e0d1c3d5bbabcaedbd2eb",
                                                              new Date(1559150270027L), -99,
                                                              "e51a609dbd6e0d1c3d5bbabcaedbd2eb",
                                                              "1825e81e-0116-4ab9-afa7-05c8620ab185", -86,
                                                              "c63716f4-0549-4d5b-a26b-2824f5fe48cc",
                                                              "e51a609dbd6e0d1c3d5bbabcaedbd2eb",
                                                              SubtenantApiKeyStatus.getDefault(),
                                                              new Date(1559150274107L));
        assertTrue(subtenantapikey.isValid());
        SubtenantApiKey subtenantapikeyInvalid = new SubtenantApiKey(null, new Date(1559150279169L), -86,
                                                                     "ë?“44\t48)87\u000578æª¶Y8à¤œâ­ƒï…Œ\\\\8;M4[4Y7U7@7ç¥“?á…¼? 788?44EìŽ¯è‡¿?ã‰Ÿ`7ã‹‘ã˜ž7ç¸¦!8ï¢µJ744æœ·ã¦«48",
                                                                     "2ceb903e-f22e-46eb-a57b-346ce162cb8f", 28, null,
                                                                     "ë?“44\t48)87\u000578æª¶Y8à¤œâ­ƒï…Œ\\\\8;M4[4Y7U7@7ç¥“?á…¼? 788?44EìŽ¯è‡¿?ã‰Ÿ`7ã‹‘ã˜ž7ç¸¦!8ï¢µJ744æœ·ã¦«48",
                                                                     SubtenantApiKeyStatus.getDefault(),
                                                                     new Date(1559150276920L));
        assertFalse(subtenantapikeyInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("e51a609dbd6e0d1c3d5bbabcaedbd2eb",
                                                                   new Date(1559150279226L), -41,
                                                                   "e51a609dbd6e0d1c3d5bbabcaedbd2eb",
                                                                   "b24ba992-23fc-4abf-b4a0-6b5e235d96ce", -9,
                                                                   "48ebfe51-fe06-4c6b-aad2-6fa5735cf1a9",
                                                                   "e51a609dbd6e0d1c3d5bbabcaedbd2eb",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1559150272499L));
            SubtenantApiKey subtenantapikey2 = new SubtenantApiKey("e51a609dbd6e0d1c3d5bbabcaedbd2eb",
                                                                   new Date(1559150279226L), -41,
                                                                   "e51a609dbd6e0d1c3d5bbabcaedbd2eb",
                                                                   "b24ba992-23fc-4abf-b4a0-6b5e235d96ce", -9,
                                                                   "48ebfe51-fe06-4c6b-aad2-6fa5735cf1a9",
                                                                   "e51a609dbd6e0d1c3d5bbabcaedbd2eb",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1559150272499L));
            SubtenantApiKey subtenantapikey3 = new SubtenantApiKey("e51a609dbd6e0d1c3d5bbabcaedbd2eb",
                                                                   new Date(1559150278409L), 120,
                                                                   "e51a609dbd6e0d1c3d5bbabcaedbd2eb",
                                                                   "94450b70-45c0-4dc6-a82e-271b907d63ae", 94,
                                                                   "f41ce996-eb83-4eec-84a9-fd0f6205ec69",
                                                                   "e51a609dbd6e0d1c3d5bbabcaedbd2eb",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1559150274003L));
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotNull(subtenantapikey3);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertNotSame(subtenantapikey3, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey1, subtenantapikey2);
            assertEquals(subtenantapikey1, subtenantapikey1);
            assertFalse(subtenantapikey1.equals(null));
            assertNotEquals(subtenantapikey3, subtenantapikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
