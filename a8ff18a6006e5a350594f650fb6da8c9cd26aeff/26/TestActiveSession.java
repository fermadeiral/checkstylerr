// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model ActiveSession.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestActiveSession {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ActiveSession activesession1 = new ActiveSession("e51a609dbd6e0d1c3d5bbabcaedbd2eb",
                                                             "2aff1250-dafe-4b62-96c1-4a67e7ab7244",
                                                             new Date(1559150273575L),
                                                             "6187fd31-93b3-4ca3-8c9c-07a4f057b8c1",
                                                             "242f893d-71ac-47b8-a0ec-c64eb5030bf3");
            ActiveSession activesession2 = activesession1.clone();
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotSame(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ActiveSession activesession1 = new ActiveSession("e51a609dbd6e0d1c3d5bbabcaedbd2eb",
                                                             "55a4fdc3-aab9-4e7e-a347-6d9341d64d41",
                                                             new Date(1559150276589L),
                                                             "3613e995-80b9-4e49-8e09-f9091e487a59",
                                                             "18a83308-5f43-4e3e-bba3-23001f6301e2");
            ActiveSession activesession2 = new ActiveSession("e51a609dbd6e0d1c3d5bbabcaedbd2eb",
                                                             "55a4fdc3-aab9-4e7e-a347-6d9341d64d41",
                                                             new Date(1559150276589L),
                                                             "3613e995-80b9-4e49-8e09-f9091e487a59",
                                                             "18a83308-5f43-4e3e-bba3-23001f6301e2");
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotSame(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession2.hashCode(), activesession1.hashCode());
            int hashCode = activesession1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, activesession1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ActiveSession activesession = new ActiveSession("e51a609dbd6e0d1c3d5bbabcaedbd2eb",
                                                        "9406bb02-0aaf-4cfc-9074-f43b76e1d378",
                                                        new Date(1559150274965L),
                                                        "b2ff121a-695d-4736-ab2e-771b30e56563",
                                                        "c0ba80bb-f930-4a89-a893-b61c619ff7ef");
        assertTrue(activesession.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ActiveSession activesession1 = new ActiveSession("e51a609dbd6e0d1c3d5bbabcaedbd2eb",
                                                             "25aa0663-dec3-44c9-a0fd-a6fc22e64540",
                                                             new Date(1559150271462L),
                                                             "f2682fa1-da33-4357-8b99-0d6ad58f8b33",
                                                             "d5c0a059-b626-497e-85e8-3368b67169a8");
            ActiveSession activesession2 = new ActiveSession("e51a609dbd6e0d1c3d5bbabcaedbd2eb",
                                                             "25aa0663-dec3-44c9-a0fd-a6fc22e64540",
                                                             new Date(1559150271462L),
                                                             "f2682fa1-da33-4357-8b99-0d6ad58f8b33",
                                                             "d5c0a059-b626-497e-85e8-3368b67169a8");
            ActiveSession activesession3 = new ActiveSession("e51a609dbd6e0d1c3d5bbabcaedbd2eb",
                                                             "3cf9663c-7f03-4477-9d61-f03c8a6f0622",
                                                             new Date(1559150278001L),
                                                             "c7680849-278a-40fa-bd97-bcb6551fa596",
                                                             "258142a6-8511-4175-9b3f-eefd54954816");
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotNull(activesession3);
            assertNotSame(activesession2, activesession1);
            assertNotSame(activesession3, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession1, activesession2);
            assertEquals(activesession1, activesession1);
            assertFalse(activesession1.equals(null));
            assertNotEquals(activesession3, activesession1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
