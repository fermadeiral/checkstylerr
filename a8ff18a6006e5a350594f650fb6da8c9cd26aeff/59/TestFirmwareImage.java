// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.deviceupdate.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model FirmwareImage.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestFirmwareImage {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            FirmwareImage firmwareimage1 = new FirmwareImage(new Date(1559150273343L),
                                                             "eb33e923-b053-47dc-962d-518e0c9f8f5a", -30,
                                                             "0854ae9c-65c5-40e1-ac61-c9c01ab4face",
                                                             "b2ac896a-2344-48ec-89f6-7a814001350c",
                                                             "8b9975af-1fc3-4638-b143-0a3bb1856d19",
                                                             "382b112d-e08f-4e64-8255-8c8a48f38cf6",
                                                             new Date(1559150278063L));
            FirmwareImage firmwareimage2 = firmwareimage1.clone();
            assertNotNull(firmwareimage1);
            assertNotNull(firmwareimage2);
            assertNotSame(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage2, firmwareimage1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            FirmwareImage firmwareimage1 = new FirmwareImage(new Date(1559150270335L),
                                                             "5ed1cf7d-2769-4c20-bf70-c60bb6165269", -44,
                                                             "5c79d99a-1e00-48f2-9d17-677cffa5ddf9",
                                                             "9ebc9c83-6a52-46e2-b98f-bf5ce066ce14",
                                                             "52167709-86ae-4403-883f-6f891d372896",
                                                             "5d3bf028-8b90-4aa3-9513-4bcc283722f2",
                                                             new Date(1559150274731L));
            FirmwareImage firmwareimage2 = new FirmwareImage(new Date(1559150270335L),
                                                             "5ed1cf7d-2769-4c20-bf70-c60bb6165269", -44,
                                                             "5c79d99a-1e00-48f2-9d17-677cffa5ddf9",
                                                             "9ebc9c83-6a52-46e2-b98f-bf5ce066ce14",
                                                             "52167709-86ae-4403-883f-6f891d372896",
                                                             "5d3bf028-8b90-4aa3-9513-4bcc283722f2",
                                                             new Date(1559150274731L));
            assertNotNull(firmwareimage1);
            assertNotNull(firmwareimage2);
            assertNotSame(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage2.hashCode(), firmwareimage1.hashCode());
            int hashCode = firmwareimage1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, firmwareimage1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        FirmwareImage firmwareimage = new FirmwareImage(new Date(1559150274062L),
                                                        "3913464a-7b22-4fe6-9279-def50fe4bcd1", -33,
                                                        "beea2ff6-eba5-492f-a9a5-6661960890ee",
                                                        "ebcd78ef-7fe9-4b95-8f97-30e7afe4b740",
                                                        "8fcf94af-5f75-4bca-83b4-567f8748dea9",
                                                        "f0daa258-2315-4eb5-aa81-2c3048a83260",
                                                        new Date(1559150278702L));
        assertTrue(firmwareimage.isValid());
        FirmwareImage firmwareimageInvalid = new FirmwareImage(new Date(1559150276133L),
                                                               "3cf4f9e1-03af-4ac0-8f74-e8458d85d9c1", 24,
                                                               "f157c797-a394-48ab-adf7-825fea96209d",
                                                               "b8e8098a-f3f0-4c36-9c67-3f7e340e3c8d36d3c4bf-1db3-4e9c-9cfc-04ad1bc54cb66fc5b131-e336-4e97-a4be-f4eae30a045187d964e7-e347-4ac3-9628-965859153e4b5cdfe7a3-a017-4cf4-9b9d-80ca19c60f79146a399a-66a5-458a-9c1b-b3e6669ee92876095085-f4de-4664-b9c2-dbaaf65d252bf4e0ff75-b572-4a87-9431-f4c71937df792bd32b8a-91ef-4a1d-9b26-d4994a1b94e838ddcc4e-e43d-4990-9dff-3648f05d4667efdd5a00-a240-4914-8236-c6d507684068fe7c993d-74ca-44ca-9442-15b824d65237c648ba55-4f68-4ec4-92fb-3887196f2625f937a283-7c17-43ce-a809-4c4271f2dad75a3e2a6e-c60f-4578-ad23-a49095a546f9c96b1361-8d03-413d-9657-9c48fb8d60985e3e7952-763d-44c6-9276-3b3c293f8cb6072f92fd-63a7-4a03-8604-d4198de9e54167f2b731-829f-4e8d-bc94-1f422da8b8bfc5e45dc2-fc7e-4ead-92ad-eb92b6b18e765d949209-65c9-4848-adc2-ee23d0cd597ab056e8da-a176-4a5b-9cc7-291b4d089d566b490d5f-127f-4b94-94b8-159d162d9fac4aa42ed8-0e86-4546-a6c4-24b517e5c1c6066c21c6-aab3-4e88-b2d5-d6cf4afdd2fe35d30294-ff94-4ae1-8e60-da5cf2b92a24128b3c7f-2c20-4c87-8b7f-f0d7c7830f5b1e8232d9-10a8-4a29-a1ff-effe3bf3eced4e36c21a-9e74-42f1-aa01-a51274aa3f49c3f13168-9f53-4762-a013-ff1673722b0ccb03de29-fd69-418d-9e3d-b58441a5b5801e14d229-4c5a-4582-b849-5897e44429038a3d92c2-d8cc-4e88-a4cf-6f4209707f7ac9d81cdd-ce60-4393-89e0-d97d0a39894f604ed1f1-feda-4244-9404-536a1a6d492ab6b62de2-fe89-479e-8b78-39365c72d37bc80a91f4-ae80-42e5-880f-e20d1173d51dfd74fe98-8862-469e-8b08-338228cfc89413c64569-24a4-42bd-9eca-1e44143c62ed9b19b7ac-7b42-4fc6-a04d-f7939c8841d94adcc134-6879-4b07-aeee-fda9f0775d696d6b9eb0-26c1-4ffb-8bc2-097045f2a8f342c7bd8a-f70a-4e24-b437-e6976e2d20e3d46c5fa7-ff67-4bf0-8f1c-4c7d68b92763f55056bb-a2f9-4d5e-84e9-7bc68ecf35cbf276d619-31a2-438b-a222-acd42b564ffa7e5ddfe0-6d42-462d-8158-43f9d74fcacdc7086ef6-42d7-46e0-92f6-1c8c34c498d3fa4df4e5-070e-47d1-931e-4d737f7c359cac22016c-2e29-440d-b5c8-9efcdddae2a1ae863683-c46c-45e8-b189-6b8aba39d22bb5774334-19d7-4b76-bcf1-351661755cb36525c3cf-b8b3-4079-a228-21680fc0a11e22b569f4-6ada-4a0d-ad4a-25df4472cd3b64092710-1635-40f4-94bb-7d20c52d740ebaa1c651-1d32-4d73-a6e9-68f52d9ec178",
                                                               "bae04730-6374-4768-9252-cf4407686e11",
                                                               "91182040-e651-4d94-8afc-765bbe699ad66ddcbe5d-5805-4953-8de8-8470156e299756fd62a6-728b-43cf-8963-2a6c42bdaed8e1940098-388a-434a-8db4-174370c15aab",
                                                               new Date(1559150278691L));
        assertFalse(firmwareimageInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            FirmwareImage firmwareimage1 = new FirmwareImage(new Date(1559150276095L),
                                                             "cd80ccba-f09a-40be-84a9-09cd215d4c6a", 60,
                                                             "eb6a26b6-766c-4c02-8a0a-d096109fc31d",
                                                             "67c46cd2-caf2-4ee5-bf11-b4eda05dace3",
                                                             "5485abce-5c99-4247-9c9d-860e17fcf3be",
                                                             "7b7dabc2-8bfe-4f41-8542-8c4d3d1dd5b6",
                                                             new Date(1559150276106L));
            FirmwareImage firmwareimage2 = new FirmwareImage(new Date(1559150276095L),
                                                             "cd80ccba-f09a-40be-84a9-09cd215d4c6a", 60,
                                                             "eb6a26b6-766c-4c02-8a0a-d096109fc31d",
                                                             "67c46cd2-caf2-4ee5-bf11-b4eda05dace3",
                                                             "5485abce-5c99-4247-9c9d-860e17fcf3be",
                                                             "7b7dabc2-8bfe-4f41-8542-8c4d3d1dd5b6",
                                                             new Date(1559150276106L));
            FirmwareImage firmwareimage3 = new FirmwareImage(new Date(1559150269947L),
                                                             "cab71f1c-d8db-4425-b20d-edffb48b58f4", 123,
                                                             "7976efee-4d8f-4331-a72d-9db5a30f18a9",
                                                             "55cb2133-2e72-4562-b528-3fc01395df00",
                                                             "3f2ec1c5-6a15-4559-8473-40451b243f29",
                                                             "4dad4a96-4b97-43b8-96d1-004b3b7d1ed3",
                                                             new Date(1559150270248L));
            assertNotNull(firmwareimage1);
            assertNotNull(firmwareimage2);
            assertNotNull(firmwareimage3);
            assertNotSame(firmwareimage2, firmwareimage1);
            assertNotSame(firmwareimage3, firmwareimage1);
            assertEquals(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage1, firmwareimage2);
            assertEquals(firmwareimage1, firmwareimage1);
            assertFalse(firmwareimage1.equals(null));
            assertNotEquals(firmwareimage3, firmwareimage1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
