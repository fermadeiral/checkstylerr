// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantUserInvitation.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantUserInvitation {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantUserInvitation subtenantuserinvitation1 = new SubtenantUserInvitation("e51a609dbd6e0d1c3d5bbabcaedbd2eb",
                                                                                           new Date(1559150270259L),
                                                                                           "9c155.2441f@c2b9c.fr",
                                                                                           new Date(1559150270800L),
                                                                                           "e51a609dbd6e0d1c3d5bbabcaedbd2eb",
                                                                                           null,
                                                                                           new Date(1559150274764L),
                                                                                           "e51a609dbd6e0d1c3d5bbabcaedbd2eb");
            SubtenantUserInvitation subtenantuserinvitation2 = subtenantuserinvitation1.clone();
            assertNotNull(subtenantuserinvitation1);
            assertNotNull(subtenantuserinvitation2);
            assertNotSame(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantUserInvitation subtenantuserinvitation1 = new SubtenantUserInvitation("e51a609dbd6e0d1c3d5bbabcaedbd2eb",
                                                                                           new Date(1559150271517L),
                                                                                           "d4795.0ccc3@6365d.me",
                                                                                           new Date(1559150271576L),
                                                                                           "e51a609dbd6e0d1c3d5bbabcaedbd2eb",
                                                                                           null,
                                                                                           new Date(1559150272295L),
                                                                                           "e51a609dbd6e0d1c3d5bbabcaedbd2eb");
            SubtenantUserInvitation subtenantuserinvitation2 = new SubtenantUserInvitation("e51a609dbd6e0d1c3d5bbabcaedbd2eb",
                                                                                           new Date(1559150271517L),
                                                                                           "d4795.0ccc3@6365d.me",
                                                                                           new Date(1559150271576L),
                                                                                           "e51a609dbd6e0d1c3d5bbabcaedbd2eb",
                                                                                           null,
                                                                                           new Date(1559150272295L),
                                                                                           "e51a609dbd6e0d1c3d5bbabcaedbd2eb");
            assertNotNull(subtenantuserinvitation1);
            assertNotNull(subtenantuserinvitation2);
            assertNotSame(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2.hashCode(), subtenantuserinvitation1.hashCode());
            int hashCode = subtenantuserinvitation1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantuserinvitation1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantUserInvitation subtenantuserinvitation = new SubtenantUserInvitation("e51a609dbd6e0d1c3d5bbabcaedbd2eb",
                                                                                      new Date(1559150274243L),
                                                                                      "f9aac.0aa4c@c1ac1.me",
                                                                                      new Date(1559150278959L),
                                                                                      "e51a609dbd6e0d1c3d5bbabcaedbd2eb",
                                                                                      null, new Date(1559150279010L),
                                                                                      "e51a609dbd6e0d1c3d5bbabcaedbd2eb");
        assertTrue(subtenantuserinvitation.isValid());
        SubtenantUserInvitation subtenantuserinvitationInvalid = new SubtenantUserInvitation(null,
                                                                                             new Date(1559150273702L),
                                                                                             null,
                                                                                             new Date(1559150273515L),
                                                                                             "ë?“44\t48)87\u000578æª¶Y8à¤œâ­ƒï…Œ\\\\8;M4[4Y7U7@7ç¥“?á…¼? 788?44EìŽ¯è‡¿?ã‰Ÿ`7ã‹‘ã˜ž7ç¸¦!8ï¢µJ744æœ·ã¦«48",
                                                                                             null,
                                                                                             new Date(1559150270578L),
                                                                                             "ë?“44\t48)87\u000578æª¶Y8à¤œâ­ƒï…Œ\\\\8;M4[4Y7U7@7ç¥“?á…¼? 788?44EìŽ¯è‡¿?ã‰Ÿ`7ã‹‘ã˜ž7ç¸¦!8ï¢µJ744æœ·ã¦«48");
        assertFalse(subtenantuserinvitationInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantUserInvitation subtenantuserinvitation1 = new SubtenantUserInvitation("e51a609dbd6e0d1c3d5bbabcaedbd2eb",
                                                                                           new Date(1559150270802L),
                                                                                           "54f4d.30491@40090.me",
                                                                                           new Date(1559150272399L),
                                                                                           "e51a609dbd6e0d1c3d5bbabcaedbd2eb",
                                                                                           null,
                                                                                           new Date(1559150273526L),
                                                                                           "e51a609dbd6e0d1c3d5bbabcaedbd2eb");
            SubtenantUserInvitation subtenantuserinvitation2 = new SubtenantUserInvitation("e51a609dbd6e0d1c3d5bbabcaedbd2eb",
                                                                                           new Date(1559150270802L),
                                                                                           "54f4d.30491@40090.me",
                                                                                           new Date(1559150272399L),
                                                                                           "e51a609dbd6e0d1c3d5bbabcaedbd2eb",
                                                                                           null,
                                                                                           new Date(1559150273526L),
                                                                                           "e51a609dbd6e0d1c3d5bbabcaedbd2eb");
            SubtenantUserInvitation subtenantuserinvitation3 = new SubtenantUserInvitation("e51a609dbd6e0d1c3d5bbabcaedbd2eb",
                                                                                           new Date(1559150275185L),
                                                                                           "497f5.3e24e@60e61.me",
                                                                                           new Date(1559150272642L),
                                                                                           "e51a609dbd6e0d1c3d5bbabcaedbd2eb",
                                                                                           null,
                                                                                           new Date(1559150274506L),
                                                                                           "e51a609dbd6e0d1c3d5bbabcaedbd2eb");
            assertNotNull(subtenantuserinvitation1);
            assertNotNull(subtenantuserinvitation2);
            assertNotNull(subtenantuserinvitation3);
            assertNotSame(subtenantuserinvitation2, subtenantuserinvitation1);
            assertNotSame(subtenantuserinvitation3, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation1, subtenantuserinvitation2);
            assertEquals(subtenantuserinvitation1, subtenantuserinvitation1);
            assertFalse(subtenantuserinvitation1.equals(null));
            assertNotEquals(subtenantuserinvitation3, subtenantuserinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
