// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model ApiKey.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestApiKey {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ApiKey apikey1 = new ApiKey("e51a609dbd6e0d1c3d5bbabcaedbd2eb", new Date(1559150278017L), -48,
                                        "e51a609dbd6e0d1c3d5bbabcaedbd2eb", "c7e3230b-9e08-4cc8-90fe-c32f6ded5155", -21,
                                        "b6e8275d-7bee-4ed1-aac1-4e79b341e251", "e51a609dbd6e0d1c3d5bbabcaedbd2eb",
                                        ApiKeyStatus.getDefault(), new Date(1559150270460L));
            ApiKey apikey2 = apikey1.clone();
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotSame(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ApiKey apikey1 = new ApiKey("e51a609dbd6e0d1c3d5bbabcaedbd2eb", new Date(1559150272511L), -63,
                                        "e51a609dbd6e0d1c3d5bbabcaedbd2eb", "05052c5c-dca8-4476-a377-dfe211599dd4", 46,
                                        "3518ee25-b156-49fb-adba-111fb0af3901", "e51a609dbd6e0d1c3d5bbabcaedbd2eb",
                                        ApiKeyStatus.getDefault(), new Date(1559150275150L));
            ApiKey apikey2 = new ApiKey("e51a609dbd6e0d1c3d5bbabcaedbd2eb", new Date(1559150272511L), -63,
                                        "e51a609dbd6e0d1c3d5bbabcaedbd2eb", "05052c5c-dca8-4476-a377-dfe211599dd4", 46,
                                        "3518ee25-b156-49fb-adba-111fb0af3901", "e51a609dbd6e0d1c3d5bbabcaedbd2eb",
                                        ApiKeyStatus.getDefault(), new Date(1559150275150L));
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotSame(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey2.hashCode(), apikey1.hashCode());
            int hashCode = apikey1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, apikey1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ApiKey apikey = new ApiKey("e51a609dbd6e0d1c3d5bbabcaedbd2eb", new Date(1559150277726L), 34,
                                   "e51a609dbd6e0d1c3d5bbabcaedbd2eb", "6415f0fc-9cb2-492d-b8e1-ab592d47e492", 30,
                                   "83b1e243-3d99-4f6a-948c-30037e2d96da", "e51a609dbd6e0d1c3d5bbabcaedbd2eb",
                                   ApiKeyStatus.getDefault(), new Date(1559150278128L));
        assertTrue(apikey.isValid());
        ApiKey apikeyInvalid = new ApiKey("ë?“44\t48)87\u000578æª¶Y8à¤œâ­ƒï…Œ\\\\8;M4[4Y7U7@7ç¥“?á…¼? 788?44EìŽ¯è‡¿?ã‰Ÿ`7ã‹‘ã˜ž7ç¸¦!8ï¢µJ744æœ·ã¦«48",
                                          new Date(1559150273667L), -26,
                                          "ë?“44\t48)87\u000578æª¶Y8à¤œâ­ƒï…Œ\\\\8;M4[4Y7U7@7ç¥“?á…¼? 788?44EìŽ¯è‡¿?ã‰Ÿ`7ã‹‘ã˜ž7ç¸¦!8ï¢µJ744æœ·ã¦«48",
                                          "1496e3ef-cbbc-4ff0-a583-d4ace48de5aa", -116, null,
                                          "ë?“44\t48)87\u000578æª¶Y8à¤œâ­ƒï…Œ\\\\8;M4[4Y7U7@7ç¥“?á…¼? 788?44EìŽ¯è‡¿?ã‰Ÿ`7ã‹‘ã˜ž7ç¸¦!8ï¢µJ744æœ·ã¦«48",
                                          ApiKeyStatus.getDefault(), new Date(1559150278180L));
        assertFalse(apikeyInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ApiKey apikey1 = new ApiKey("e51a609dbd6e0d1c3d5bbabcaedbd2eb", new Date(1559150277577L), -65,
                                        "e51a609dbd6e0d1c3d5bbabcaedbd2eb", "cbee2f54-68bd-4219-b53e-b8185bf3b02a", 97,
                                        "8ee13073-285c-4cc5-b082-0568a85b1046", "e51a609dbd6e0d1c3d5bbabcaedbd2eb",
                                        ApiKeyStatus.getDefault(), new Date(1559150273955L));
            ApiKey apikey2 = new ApiKey("e51a609dbd6e0d1c3d5bbabcaedbd2eb", new Date(1559150277577L), -65,
                                        "e51a609dbd6e0d1c3d5bbabcaedbd2eb", "cbee2f54-68bd-4219-b53e-b8185bf3b02a", 97,
                                        "8ee13073-285c-4cc5-b082-0568a85b1046", "e51a609dbd6e0d1c3d5bbabcaedbd2eb",
                                        ApiKeyStatus.getDefault(), new Date(1559150273955L));
            ApiKey apikey3 = new ApiKey("e51a609dbd6e0d1c3d5bbabcaedbd2eb", new Date(1559150275452L), -50,
                                        "e51a609dbd6e0d1c3d5bbabcaedbd2eb", "34a29c52-bf68-4699-821b-e2b424a340cc", 63,
                                        "eb8e65f8-dd14-49ca-8c1a-0e3933d56661", "e51a609dbd6e0d1c3d5bbabcaedbd2eb",
                                        ApiKeyStatus.getDefault(), new Date(1559150270261L));
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotNull(apikey3);
            assertNotSame(apikey2, apikey1);
            assertNotSame(apikey3, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey1, apikey2);
            assertEquals(apikey1, apikey1);
            assertFalse(apikey1.equals(null));
            assertNotEquals(apikey3, apikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
