// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model ParentAccount.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestParentAccount {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("cb5ae.a32a4@92c9a.me",
                                                             "b9f55f02-8516-4dec-843b-420c2aea9339",
                                                             "e51a609dbd6e0d1c3d5bbabcaedbd2eb");
            ParentAccount parentaccount2 = parentaccount1.clone();
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotSame(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("54fb5.7c3bb@76b66.fr",
                                                             "a357854c-084b-48e7-aa47-e974905f402e",
                                                             "e51a609dbd6e0d1c3d5bbabcaedbd2eb");
            ParentAccount parentaccount2 = new ParentAccount("54fb5.7c3bb@76b66.fr",
                                                             "a357854c-084b-48e7-aa47-e974905f402e",
                                                             "e51a609dbd6e0d1c3d5bbabcaedbd2eb");
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotSame(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount2.hashCode(), parentaccount1.hashCode());
            int hashCode = parentaccount1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, parentaccount1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ParentAccount parentaccount = new ParentAccount("aa86b.c3f05@aaac6.me", "04c1fa02-01d5-4b66-a123-1741a1587622",
                                                        "e51a609dbd6e0d1c3d5bbabcaedbd2eb");
        assertTrue(parentaccount.isValid());
        ParentAccount parentaccountInvalid = new ParentAccount("å¯ˆçƒ…ï‚¢ì±¶ å€§?à¬¯áœƒ5\u0004ì€ ä½??ë²¾áž•á¼ª\u000e\u0007à¼®îž¨î†€R:\u0084å›†íŽ¦ç‘‚à¼°ä‚…ä¿´>ï½šî³??'î?‹î­‘à³¾%ìž«ç‰?6æ¦‡ãš?ã?„ï¦°Â¹à¼¨à¼±ã¸žç‚€î§¨ï§†>í”²ï‘¥ë™‘ê­¼é°¤à¼©?â‰¡åŠ”",
                                                               "afb8813b-aae2-4543-a71b-02d277a35be731fecf93-ffb9-452a-899a-c3db7920d23fa019d1d8-ed80-4a76-9c5e-be3c8973c66e",
                                                               "ë?“44\t48)87\u000578æª¶Y8à¤œâ­ƒï…Œ\\\\8;M4[4Y7U7@7ç¥“?á…¼? 788?44EìŽ¯è‡¿?ã‰Ÿ`7ã‹‘ã˜ž7ç¸¦!8ï¢µJ744æœ·ã¦«48");
        assertFalse(parentaccountInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("60927.d7da2@2514c.me",
                                                             "0ce19196-8f44-4a56-a502-3c9177c452c1",
                                                             "e51a609dbd6e0d1c3d5bbabcaedbd2eb");
            ParentAccount parentaccount2 = new ParentAccount("60927.d7da2@2514c.me",
                                                             "0ce19196-8f44-4a56-a502-3c9177c452c1",
                                                             "e51a609dbd6e0d1c3d5bbabcaedbd2eb");
            ParentAccount parentaccount3 = new ParentAccount("e06e5.4e814@0894a.me",
                                                             "66c07248-260f-450d-9365-eee369ed6026",
                                                             "e51a609dbd6e0d1c3d5bbabcaedbd2eb");
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotNull(parentaccount3);
            assertNotSame(parentaccount2, parentaccount1);
            assertNotSame(parentaccount3, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount1, parentaccount2);
            assertEquals(parentaccount1, parentaccount1);
            assertFalse(parentaccount1.equals(null));
            assertNotEquals(parentaccount3, parentaccount1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
