// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model LoginProfile.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestLoginProfile {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            LoginProfile loginprofile1 = new LoginProfile("30fc1033-c0fc-4451-8b69-4950d45bd203",
                                                          "306c952e-609a-48b3-bcef-396603781048");
            LoginProfile loginprofile2 = loginprofile1.clone();
            assertNotNull(loginprofile1);
            assertNotNull(loginprofile2);
            assertNotSame(loginprofile2, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            LoginProfile loginprofile1 = new LoginProfile("3c8e58c3-1854-4ab3-a7a3-5527871773dd",
                                                          "5f34aff6-1bc3-45ed-8321-6613218b514f");
            LoginProfile loginprofile2 = new LoginProfile("3c8e58c3-1854-4ab3-a7a3-5527871773dd",
                                                          "5f34aff6-1bc3-45ed-8321-6613218b514f");
            assertNotNull(loginprofile1);
            assertNotNull(loginprofile2);
            assertNotSame(loginprofile2, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
            assertEquals(loginprofile2.hashCode(), loginprofile1.hashCode());
            int hashCode = loginprofile1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, loginprofile1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        LoginProfile loginprofile = new LoginProfile("1cbd3b5e-9da4-4f9b-b5d1-8007ca1ba1ea",
                                                     "4502a07c-6bbd-4b23-bc03-291485fc3c33");
        assertTrue(loginprofile.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            LoginProfile loginprofile1 = new LoginProfile("bb401600-c284-40b3-8dd0-3823a2af83cd",
                                                          "63aa1848-19aa-41ab-87e7-98ac70bc3d54");
            LoginProfile loginprofile2 = new LoginProfile("bb401600-c284-40b3-8dd0-3823a2af83cd",
                                                          "63aa1848-19aa-41ab-87e7-98ac70bc3d54");
            LoginProfile loginprofile3 = new LoginProfile("b93fa558-f4d3-4fce-b8ef-f8875ba2c0bc",
                                                          "0518fc40-47e1-4b86-a9e6-f30a11e26f35");
            assertNotNull(loginprofile1);
            assertNotNull(loginprofile2);
            assertNotNull(loginprofile3);
            assertNotSame(loginprofile2, loginprofile1);
            assertNotSame(loginprofile3, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
            assertEquals(loginprofile1, loginprofile2);
            assertEquals(loginprofile1, loginprofile1);
            assertFalse(loginprofile1.equals(null));
            assertNotEquals(loginprofile3, loginprofile1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
