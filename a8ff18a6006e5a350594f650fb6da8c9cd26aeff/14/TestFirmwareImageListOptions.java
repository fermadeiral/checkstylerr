// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.deviceupdate.model;

import static org.junit.Assert.*;

import com.arm.mbed.cloud.sdk.common.Order;
import com.arm.mbed.cloud.sdk.common.listing.ListOptionsEncoder;
import com.arm.mbed.cloud.sdk.common.listing.filtering.FilterOperator;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import org.junit.Test;

/**
 * Unit tests for Model FirmwareImageListOptions.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestFirmwareImageListOptions {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            FirmwareImageListOptions firmwareimagelistoptions1 = new FirmwareImageListOptions(Integer.valueOf(76),
                                                                                              Long.valueOf(-81),
                                                                                              Order.getDefault(),
                                                                                              "30756c09-db46-4eed-844e-a5ecd4222931",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions2 = firmwareimagelistoptions1.clone();
            assertNotNull(firmwareimagelistoptions1);
            assertNotNull(firmwareimagelistoptions2);
            assertNotSame(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the filters method.
     */
    @SuppressWarnings({ "boxing", "resource" })
    @Test
    public void testFilters() {
        try {
            FirmwareImageListOptions option = new FirmwareImageListOptions().inUpdatedAts(Arrays.asList(new Date(1559150275150L),
                                                                                                        new Date(1559150278295L)))
                                                                            .notInUpdatedAts(Arrays.asList(new Date(1559150271984L)))
                                                                            .lessThanUpdatedAt(new Date(1559150280219L))
                                                                            .greaterThanUpdatedAt(new Date(1559150270737L))
                                                                            .equalToName("d07b25f6-4e15-4e2a-8e4c-21dede15306d")
                                                                            .notEqualToName("b2f1f60f-2f17-4e2e-85ae-8f1e2fbfda4f")
                                                                            .inNames(Arrays.asList("5dce0b48-3d1f-4321-957a-8a42399cc7a3",
                                                                                                   "f683cd21-b01a-4ed3-b0bd-4b920ecacf3c",
                                                                                                   "ae3f1671-f098-4f25-8dbe-ba3758e667ed",
                                                                                                   "7c4b432d-f07f-437f-8645-a57c2d6e58f1",
                                                                                                   "28ded971-7522-49cf-8f07-02c0d3064b74"))
                                                                            .notInNames(Arrays.asList("51741cd0-c7c4-4add-ba80-1ca8a1ab7fb0",
                                                                                                      "1b5ca65f-9a1e-424f-b89a-18e0727fdb65",
                                                                                                      "d4a3a8b4-163a-4b6d-9653-de94738a4348",
                                                                                                      "953af9a2-5a34-4838-9f09-4e5f329b8fc2",
                                                                                                      "120c38af-879d-4657-9635-6ed9ccdcdfd7",
                                                                                                      "e3942287-23da-4b2c-b839-3ccad59c60d9",
                                                                                                      "b83670bf-bf60-47b1-9e48-380e77a6032a",
                                                                                                      "1586ca47-1023-452a-af8d-2a558d4352a7",
                                                                                                      "8da2363e-330b-4842-8cd4-b4a89615ddc8"))
                                                                            .equalToDescription("d2f1aeba-10d7-4b70-a2d1-930dc6d93f5c")
                                                                            .notEqualToDescription("7f39c9e2-243f-45be-b8db-7d4d4a39830a")
                                                                            .inDescriptions(Arrays.asList("388f24b2-7183-4677-ba04-fe0c8992ba5d",
                                                                                                          "f23cfc68-f506-443f-b070-bafebc467dd8",
                                                                                                          "1c53d3aa-f53f-418f-abdc-29aaf524ef82",
                                                                                                          "b92f4e2f-ac4b-4b35-86a6-edf39e40fdea",
                                                                                                          "6f67ad35-c747-4946-9a8f-79da5e13cd52",
                                                                                                          "7be41ce5-a0f5-4e75-a056-0337ad9ba852",
                                                                                                          "72bc93f8-0eb8-4c9b-a4e4-05d1edc97628",
                                                                                                          "1d121f29-9fb3-4e61-adb3-0a3f9d0e0056",
                                                                                                          "b3c1a116-4891-4b89-a868-3ee0a9b42c93"))
                                                                            .notInDescriptions(Arrays.asList("1c2a5380-13ba-46cd-b066-09fbba61b9df",
                                                                                                             "06c75a9a-26c2-47d7-a9f5-7e37a3d51d52"))
                                                                            .inCreatedAts(Arrays.asList(new Date(1559150277437L),
                                                                                                        new Date(1559150280262L),
                                                                                                        new Date(1559150278776L),
                                                                                                        new Date(1559150270640L),
                                                                                                        new Date(1559150271356L),
                                                                                                        new Date(1559150279368L),
                                                                                                        new Date(1559150278442L),
                                                                                                        new Date(1559150270684L)))
                                                                            .notInCreatedAts(Arrays.asList(new Date(1559150277010L),
                                                                                                           new Date(1559150274855L)))
                                                                            .lessThanCreatedAt(new Date(1559150271009L))
                                                                            .greaterThanCreatedAt(new Date(1559150275107L))
                                                                            .equalToDatafileUrl("3c642754-06d1-414b-b3c4-8bd8e9390843")
                                                                            .notEqualToDatafileUrl("93417edc-1103-445b-9727-96fb51f29350")
                                                                            .inDatafileUrls(Arrays.asList("ef5cb3c5-9fe3-4835-8e61-57b2c3965d7a"))
                                                                            .notInDatafileUrls(Arrays.asList("8ba1f695-0d62-4ab8-a04b-0fa3d8740cb1"))
                                                                            .equalToDatafileSize(Long.valueOf(54))
                                                                            .notEqualToDatafileSize(Long.valueOf(-64))
                                                                            .inDatafileSizes(Arrays.asList(Long.valueOf(10),
                                                                                                           Long.valueOf(-119),
                                                                                                           Long.valueOf(21),
                                                                                                           Long.valueOf(108),
                                                                                                           Long.valueOf(49),
                                                                                                           Long.valueOf(59),
                                                                                                           Long.valueOf(-94)))
                                                                            .notInDatafileSizes(Arrays.asList(Long.valueOf(64),
                                                                                                              Long.valueOf(107),
                                                                                                              Long.valueOf(-108),
                                                                                                              Long.valueOf(105),
                                                                                                              Long.valueOf(120)))
                                                                            .equalToDatafileChecksum("d3c2c00b-1c56-4f24-b1ba-6e4a9d031524")
                                                                            .notEqualToDatafileChecksum("1af49246-1010-4bd5-ac2d-9621dc713f1a")
                                                                            .inDatafileChecksums(Arrays.asList("3a92c6de-6fb4-4547-9ceb-9bc7220decd4",
                                                                                                               "eece684e-9d8a-4397-9a7a-f41e290204f6"))
                                                                            .notInDatafileChecksums(Arrays.asList("24a87bf0-579c-440b-9afd-cc371bd1e119",
                                                                                                                  "05898580-7709-4612-ad6d-212681c983fa",
                                                                                                                  "3e5e1f9d-f974-4355-bfc4-974ee8d325eb",
                                                                                                                  "c50fc9a5-1f0c-4890-b6aa-2d9eb63787a4",
                                                                                                                  "dda1478a-d191-45a2-80dd-330da01bf6ce",
                                                                                                                  "51392d44-4e74-4deb-b7d8-54cdc3d62c86",
                                                                                                                  "93f327cc-4372-4720-a96a-41ece71e2b0f",
                                                                                                                  "4ba35cfd-fc88-4284-8afc-e5eecf3be384",
                                                                                                                  "e4e0395c-b54b-49bc-bd4c-f5b748495af5"))
                                                                            .equalToId("68843c7c-7c13-4750-aa25-f0f9f0c7939d")
                                                                            .notEqualToId("97e858ad-a797-45ca-a49f-71aaaa6a13b3")
                                                                            .inIds(Arrays.asList("e9cb2c06-e249-47a8-b8ed-1d0bcf363e3d",
                                                                                                 "a311de89-2b09-49d0-a180-116ff81445bb"))
                                                                            .notInIds(Arrays.asList("8efa68b6-b82b-49f2-a5f4-b15edc9c1efa",
                                                                                                    "1faf7370-fcf3-4cbc-9fa0-e3aa828ff62a",
                                                                                                    "ea19653d-17e1-4e03-b515-7462f69542bc",
                                                                                                    "30ec42da-9c39-4b01-a76e-bec85f9e69e7"));
            assertTrue(option.hasFilters());
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559150275150L), new Date(1559150278295L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559150271984L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.LESS_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1559150280219L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1559150270737L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("d07b25f6-4e15-4e2a-8e4c-21dede15306d",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("b2f1f60f-2f17-4e2e-85ae-8f1e2fbfda4f",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("5dce0b48-3d1f-4321-957a-8a42399cc7a3", "f683cd21-b01a-4ed3-b0bd-4b920ecacf3c",
                                       "ae3f1671-f098-4f25-8dbe-ba3758e667ed", "7c4b432d-f07f-437f-8645-a57c2d6e58f1",
                                       "28ded971-7522-49cf-8f07-02c0d3064b74"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("51741cd0-c7c4-4add-ba80-1ca8a1ab7fb0", "1b5ca65f-9a1e-424f-b89a-18e0727fdb65",
                                       "d4a3a8b4-163a-4b6d-9653-de94738a4348", "953af9a2-5a34-4838-9f09-4e5f329b8fc2",
                                       "120c38af-879d-4657-9635-6ed9ccdcdfd7", "e3942287-23da-4b2c-b839-3ccad59c60d9",
                                       "b83670bf-bf60-47b1-9e48-380e77a6032a", "1586ca47-1023-452a-af8d-2a558d4352a7",
                                       "8da2363e-330b-4842-8cd4-b4a89615ddc8"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("d2f1aeba-10d7-4b70-a2d1-930dc6d93f5c",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("7f39c9e2-243f-45be-b8db-7d4d4a39830a",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("388f24b2-7183-4677-ba04-fe0c8992ba5d", "f23cfc68-f506-443f-b070-bafebc467dd8",
                                       "1c53d3aa-f53f-418f-abdc-29aaf524ef82", "b92f4e2f-ac4b-4b35-86a6-edf39e40fdea",
                                       "6f67ad35-c747-4946-9a8f-79da5e13cd52", "7be41ce5-a0f5-4e75-a056-0337ad9ba852",
                                       "72bc93f8-0eb8-4c9b-a4e4-05d1edc97628", "1d121f29-9fb3-4e61-adb3-0a3f9d0e0056",
                                       "b3c1a116-4891-4b89-a868-3ee0a9b42c93"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("1c2a5380-13ba-46cd-b066-09fbba61b9df", "06c75a9a-26c2-47d7-a9f5-7e37a3d51d52"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559150277437L), new Date(1559150280262L), new Date(1559150278776L),
                                       new Date(1559150270640L), new Date(1559150271356L), new Date(1559150279368L),
                                       new Date(1559150278442L), new Date(1559150270684L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559150277010L), new Date(1559150274855L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.LESS_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1559150271009L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1559150275107L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("3c642754-06d1-414b-b3c4-8bd8e9390843",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("93417edc-1103-445b-9727-96fb51f29350",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("ef5cb3c5-9fe3-4835-8e61-57b2c3965d7a"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("8ba1f695-0d62-4ab8-a04b-0fa3d8740cb1"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(54),
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    Long.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(-64),
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                       Long.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(10), Long.valueOf(-119), Long.valueOf(21), Long.valueOf(108),
                                       Long.valueOf(49), Long.valueOf(59), Long.valueOf(-94)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(64), Long.valueOf(107), Long.valueOf(-108), Long.valueOf(105),
                                       Long.valueOf(120)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                        FilterOperator.EQUAL));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals("d3c2c00b-1c56-4f24-b1ba-6e4a9d031524",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals("1af49246-1010-4bd5-ac2d-9621dc713f1a",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM, FilterOperator.IN));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals(Arrays.asList("3a92c6de-6fb4-4547-9ceb-9bc7220decd4", "eece684e-9d8a-4397-9a7a-f41e290204f6"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                        FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals(Arrays.asList("24a87bf0-579c-440b-9afd-cc371bd1e119", "05898580-7709-4612-ad6d-212681c983fa",
                                       "3e5e1f9d-f974-4355-bfc4-974ee8d325eb", "c50fc9a5-1f0c-4890-b6aa-2d9eb63787a4",
                                       "dda1478a-d191-45a2-80dd-330da01bf6ce", "51392d44-4e74-4deb-b7d8-54cdc3d62c86",
                                       "93f327cc-4372-4720-a96a-41ece71e2b0f", "4ba35cfd-fc88-4284-8afc-e5eecf3be384",
                                       "e4e0395c-b54b-49bc-bd4c-f5b748495af5"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("68843c7c-7c13-4750-aa25-f0f9f0c7939d",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("97e858ad-a797-45ca-a49f-71aaaa6a13b3",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("e9cb2c06-e249-47a8-b8ed-1d0bcf363e3d", "a311de89-2b09-49d0-a180-116ff81445bb"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, List.class,
                                                                 option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("8efa68b6-b82b-49f2-a5f4-b15edc9c1efa", "1faf7370-fcf3-4cbc-9fa0-e3aa828ff62a",
                                       "ea19653d-17e1-4e03-b515-7462f69542bc", "30ec42da-9c39-4b01-a76e-bec85f9e69e7"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID,
                                                                    List.class, option));
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            FirmwareImageListOptions firmwareimagelistoptions1 = new FirmwareImageListOptions(Integer.valueOf(-47),
                                                                                              Long.valueOf(-55),
                                                                                              Order.getDefault(),
                                                                                              "a34bb733-810e-437b-9c1c-0b87312c4414",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions2 = new FirmwareImageListOptions(Integer.valueOf(-47),
                                                                                              Long.valueOf(-55),
                                                                                              Order.getDefault(),
                                                                                              "a34bb733-810e-437b-9c1c-0b87312c4414",
                                                                                              null, null);
            assertNotNull(firmwareimagelistoptions1);
            assertNotNull(firmwareimagelistoptions2);
            assertNotSame(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2.hashCode(), firmwareimagelistoptions1.hashCode());
            int hashCode = firmwareimagelistoptions1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, firmwareimagelistoptions1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            FirmwareImageListOptions firmwareimagelistoptions1 = new FirmwareImageListOptions(Integer.valueOf(-123),
                                                                                              Long.valueOf(-65),
                                                                                              Order.getDefault(),
                                                                                              "f866ab84-fb53-4e46-819b-4ceff82e6927",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions2 = new FirmwareImageListOptions(Integer.valueOf(-123),
                                                                                              Long.valueOf(-65),
                                                                                              Order.getDefault(),
                                                                                              "f866ab84-fb53-4e46-819b-4ceff82e6927",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions3 = new FirmwareImageListOptions(Integer.valueOf(-50),
                                                                                              Long.valueOf(-56),
                                                                                              Order.getDefault(),
                                                                                              "909cf0c1-93ce-4279-8b09-0c39e3d73552",
                                                                                              null, null);
            assertNotNull(firmwareimagelistoptions1);
            assertNotNull(firmwareimagelistoptions2);
            assertNotNull(firmwareimagelistoptions3);
            assertNotSame(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertNotSame(firmwareimagelistoptions3, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions1, firmwareimagelistoptions2);
            assertEquals(firmwareimagelistoptions1, firmwareimagelistoptions1);
            assertFalse(firmwareimagelistoptions1.equals(null));
            assertNotEquals(firmwareimagelistoptions3, firmwareimagelistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
