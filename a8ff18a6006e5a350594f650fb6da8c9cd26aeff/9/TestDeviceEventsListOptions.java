// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import com.arm.mbed.cloud.sdk.common.Order;
import com.arm.mbed.cloud.sdk.common.listing.ListOptionsEncoder;
import com.arm.mbed.cloud.sdk.common.listing.filtering.FilterOperator;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEventsListOptions.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEventsListOptions {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEventsListOptions deviceeventslistoptions1 = new DeviceEventsListOptions(Integer.valueOf(101),
                                                                                           Long.valueOf(-35),
                                                                                           Order.getDefault(),
                                                                                           "91ab4a05-7093-45f1-a5f0-900c13f066ed",
                                                                                           null, null);
            DeviceEventsListOptions deviceeventslistoptions2 = deviceeventslistoptions1.clone();
            assertNotNull(deviceeventslistoptions1);
            assertNotNull(deviceeventslistoptions2);
            assertNotSame(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2, deviceeventslistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the filters method.
     */
    @SuppressWarnings({ "boxing", "resource" })
    @Test
    public void testFilters() {
        try {
            DeviceEventsListOptions option = new DeviceEventsListOptions().equalToDeviceId("8a4264e2-b671-459a-90eb-211a746c5f5e")
                                                                          .notEqualToDeviceId("6258e09a-2dc6-4898-90e3-d0e81a242576")
                                                                          .inDeviceIds(Arrays.asList("b5710731-f319-4a17-9500-624fd7ee38f4"))
                                                                          .notInDeviceIds(Arrays.asList("71ba4c3b-3d07-4667-9246-cdcf45764c33",
                                                                                                        "16c591b7-2d2e-4db0-9095-a463adfb03f3",
                                                                                                        "7e73abde-a4a8-473a-aa23-b2c15a2b5000",
                                                                                                        "2050485b-7349-48e4-8ac9-1ad1fabb1cd1",
                                                                                                        "e56fb0a4-4974-44c8-9d23-e5a720b5f1d8",
                                                                                                        "b3cc3611-bc1d-4b18-92a0-ff1af78f6e02",
                                                                                                        "322fc3a8-76e5-4beb-85b9-8c207f28ab91"))
                                                                          .equalToDescription("88af690f-82b4-4c7c-9b99-4b10ca548066")
                                                                          .notEqualToDescription("f25b4292-b5d0-415c-a2f2-63a317c4284d")
                                                                          .inDescriptions(Arrays.asList("3fc7e274-c6d3-45d8-bcbd-27c5601c132f",
                                                                                                        "39dce59c-3ce4-41d2-b39e-37b3021a9ce8",
                                                                                                        "9484fe7b-7810-4d57-91a5-a0c548da193a"))
                                                                          .notInDescriptions(Arrays.asList("b4ae9702-175c-436b-816e-8cf244618f29"))
                                                                          .inDateTimes(Arrays.asList(new Date(1559150273478L),
                                                                                                     new Date(1559150280270L),
                                                                                                     new Date(1559150279456L),
                                                                                                     new Date(1559150271281L),
                                                                                                     new Date(1559150280269L),
                                                                                                     new Date(1559150275269L)))
                                                                          .notInDateTimes(Arrays.asList(new Date(1559150274420L),
                                                                                                        new Date(1559150275708L),
                                                                                                        new Date(1559150274406L),
                                                                                                        new Date(1559150274752L)))
                                                                          .lessThanDateTime(new Date(1559150273865L))
                                                                          .greaterThanDateTime(new Date(1559150272614L))
                                                                          .equalToStateChange(Boolean.FALSE)
                                                                          .notEqualToStateChange(Boolean.FALSE)
                                                                          .equalToId("6819f6a4-bd69-4503-a2b6-9a8f58d9ea85")
                                                                          .notEqualToId("faf5fa6f-1e39-4733-83fc-4c213906b370")
                                                                          .inIds(Arrays.asList("5516689e-c28c-4ca9-bc28-ed4ba0e60e98",
                                                                                               "0fd984be-4c07-4bf3-98dd-33999f50f09b",
                                                                                               "22c568e5-c5d3-4977-bea6-ff3ff0808e6b"))
                                                                          .notInIds(Arrays.asList("f9b2a9cf-e9ec-4ab7-8608-de3b29b32004",
                                                                                                  "a38b3865-4fb1-4d8b-8372-15f80f3b7009",
                                                                                                  "42461129-c8fe-4cc1-8d14-d6e1f1d966bf",
                                                                                                  "b61fee64-3554-49eb-91d6-d5bcfc189ed3",
                                                                                                  "d645d526-1141-4f6f-ad30-2d7ce57d2577"))
                                                                          .equalToEventType("97537bff-0510-48f0-8b22-e5ddcfd547e3")
                                                                          .notEqualToEventType("fb4c77bc-5516-4d90-8c37-cfc18eea2193")
                                                                          .inEventTypes(Arrays.asList("b1ee6e68-e6e7-425d-b354-49da120bcd17",
                                                                                                      "6e7a8be1-0813-4995-80cb-bd466178b952",
                                                                                                      "4d65564c-4b0b-49c5-a706-3cad9b9dc9e1"))
                                                                          .notInEventTypes(Arrays.asList("d3fc1c2b-6f7c-4710-afd4-7eb768868c04",
                                                                                                         "8a7b4220-88b9-4602-ae3b-4ea5a36aa301",
                                                                                                         "ed5636ec-de4d-4eaf-85a1-1c8c056c6347",
                                                                                                         "4a654021-5b0a-488b-8f32-b5cbddacabe0",
                                                                                                         "ecd4103d-5c9f-4b14-8c1d-22080aeafaf1",
                                                                                                         "1d2edf31-9247-4356-899e-c87feb0dc970",
                                                                                                         "03754e3e-3008-432e-bd12-a353592444a2",
                                                                                                         "d6fd8bd0-dfdf-4d9f-a7f3-30391ecfcd3a",
                                                                                                         "d7433587-adff-4c3a-aba7-79bd4a65caa0"));
            assertTrue(option.hasFilters());
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID, FilterOperator.EQUAL));
            assertNotNull(option.getDeviceIdFilters());
            assertEquals("8a4264e2-b671-459a-90eb-211a746c5f5e",
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDeviceIdFilters());
            assertEquals("6258e09a-2dc6-4898-90e3-d0e81a242576",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID, FilterOperator.IN));
            assertNotNull(option.getDeviceIdFilters());
            assertEquals(Arrays.asList("b5710731-f319-4a17-9500-624fd7ee38f4"),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID,
                                                                 List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getDeviceIdFilters());
            assertEquals(Arrays.asList("71ba4c3b-3d07-4667-9246-cdcf45764c33", "16c591b7-2d2e-4db0-9095-a463adfb03f3",
                                       "7e73abde-a4a8-473a-aa23-b2c15a2b5000", "2050485b-7349-48e4-8ac9-1ad1fabb1cd1",
                                       "e56fb0a4-4974-44c8-9d23-e5a720b5f1d8", "b3cc3611-bc1d-4b18-92a0-ff1af78f6e02",
                                       "322fc3a8-76e5-4beb-85b9-8c207f28ab91"),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID,
                                                                    List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("88af690f-82b4-4c7c-9b99-4b10ca548066",
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("f25b4292-b5d0-415c-a2f2-63a317c4284d",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                       String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("3fc7e274-c6d3-45d8-bcbd-27c5601c132f", "39dce59c-3ce4-41d2-b39e-37b3021a9ce8",
                                       "9484fe7b-7810-4d57-91a5-a0c548da193a"),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                 List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("b4ae9702-175c-436b-816e-8cf244618f29"),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME, FilterOperator.IN));
            assertNotNull(option.getDateTimeFilters());
            assertEquals(Arrays.asList(new Date(1559150273478L), new Date(1559150280270L), new Date(1559150279456L),
                                       new Date(1559150271281L), new Date(1559150280269L), new Date(1559150275269L)),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME,
                                                                 List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME, FilterOperator.NOT_IN));
            assertNotNull(option.getDateTimeFilters());
            assertEquals(Arrays.asList(new Date(1559150274420L), new Date(1559150275708L), new Date(1559150274406L),
                                       new Date(1559150274752L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME,
                                                                    List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME, FilterOperator.LESS_THAN));
            assertNotNull(option.getDateTimeFilters());
            assertEquals(new Date(1559150273865L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME, FilterOperator.GREATER_THAN));
            assertNotNull(option.getDateTimeFilters());
            assertEquals(new Date(1559150272614L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE, FilterOperator.EQUAL));
            assertNotNull(option.getStateChangeFilters());
            assertEquals(Boolean.FALSE,
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE,
                                                                    Boolean.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getStateChangeFilters());
            assertEquals(Boolean.FALSE,
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE,
                                                                       Boolean.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, FilterOperator.EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("6819f6a4-bd69-4503-a2b6-9a8f58d9ea85",
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("faf5fa6f-1e39-4733-83fc-4c213906b370",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, FilterOperator.IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("5516689e-c28c-4ca9-bc28-ed4ba0e60e98", "0fd984be-4c07-4bf3-98dd-33999f50f09b",
                                       "22c568e5-c5d3-4977-bea6-ff3ff0808e6b"),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, List.class,
                                                                 option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("f9b2a9cf-e9ec-4ab7-8608-de3b29b32004", "a38b3865-4fb1-4d8b-8372-15f80f3b7009",
                                       "42461129-c8fe-4cc1-8d14-d6e1f1d966bf", "b61fee64-3554-49eb-91d6-d5bcfc189ed3",
                                       "d645d526-1141-4f6f-ad30-2d7ce57d2577"),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID,
                                                                    List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE, FilterOperator.EQUAL));
            assertNotNull(option.getEventTypeFilters());
            assertEquals("97537bff-0510-48f0-8b22-e5ddcfd547e3",
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE,
                                                                    String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getEventTypeFilters());
            assertEquals("fb4c77bc-5516-4d90-8c37-cfc18eea2193",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE,
                                                                       String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE, FilterOperator.IN));
            assertNotNull(option.getEventTypeFilters());
            assertEquals(Arrays.asList("b1ee6e68-e6e7-425d-b354-49da120bcd17", "6e7a8be1-0813-4995-80cb-bd466178b952",
                                       "4d65564c-4b0b-49c5-a706-3cad9b9dc9e1"),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE,
                                                                 List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE, FilterOperator.NOT_IN));
            assertNotNull(option.getEventTypeFilters());
            assertEquals(Arrays.asList("d3fc1c2b-6f7c-4710-afd4-7eb768868c04", "8a7b4220-88b9-4602-ae3b-4ea5a36aa301",
                                       "ed5636ec-de4d-4eaf-85a1-1c8c056c6347", "4a654021-5b0a-488b-8f32-b5cbddacabe0",
                                       "ecd4103d-5c9f-4b14-8c1d-22080aeafaf1", "1d2edf31-9247-4356-899e-c87feb0dc970",
                                       "03754e3e-3008-432e-bd12-a353592444a2", "d6fd8bd0-dfdf-4d9f-a7f3-30391ecfcd3a",
                                       "d7433587-adff-4c3a-aba7-79bd4a65caa0"),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE,
                                                                    List.class, option));
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEventsListOptions deviceeventslistoptions1 = new DeviceEventsListOptions(Integer.valueOf(90),
                                                                                           Long.valueOf(47),
                                                                                           Order.getDefault(),
                                                                                           "55658fba-fa3c-4efb-9f2c-1c0a1c7ecaa8",
                                                                                           null, null);
            DeviceEventsListOptions deviceeventslistoptions2 = new DeviceEventsListOptions(Integer.valueOf(90),
                                                                                           Long.valueOf(47),
                                                                                           Order.getDefault(),
                                                                                           "55658fba-fa3c-4efb-9f2c-1c0a1c7ecaa8",
                                                                                           null, null);
            assertNotNull(deviceeventslistoptions1);
            assertNotNull(deviceeventslistoptions2);
            assertNotSame(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2.hashCode(), deviceeventslistoptions1.hashCode());
            int hashCode = deviceeventslistoptions1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceeventslistoptions1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEventsListOptions deviceeventslistoptions1 = new DeviceEventsListOptions(Integer.valueOf(-126),
                                                                                           Long.valueOf(103),
                                                                                           Order.getDefault(),
                                                                                           "8b1613c3-d490-41fc-91a0-e0cbde060ac9",
                                                                                           null, null);
            DeviceEventsListOptions deviceeventslistoptions2 = new DeviceEventsListOptions(Integer.valueOf(-126),
                                                                                           Long.valueOf(103),
                                                                                           Order.getDefault(),
                                                                                           "8b1613c3-d490-41fc-91a0-e0cbde060ac9",
                                                                                           null, null);
            DeviceEventsListOptions deviceeventslistoptions3 = new DeviceEventsListOptions(Integer.valueOf(-67),
                                                                                           Long.valueOf(31),
                                                                                           Order.getDefault(),
                                                                                           "de367bd9-316d-4ad8-9480-dee1b5d3fcf4",
                                                                                           null, null);
            assertNotNull(deviceeventslistoptions1);
            assertNotNull(deviceeventslistoptions2);
            assertNotNull(deviceeventslistoptions3);
            assertNotSame(deviceeventslistoptions2, deviceeventslistoptions1);
            assertNotSame(deviceeventslistoptions3, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions1, deviceeventslistoptions2);
            assertEquals(deviceeventslistoptions1, deviceeventslistoptions1);
            assertFalse(deviceeventslistoptions1.equals(null));
            assertNotEquals(deviceeventslistoptions3, deviceeventslistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
