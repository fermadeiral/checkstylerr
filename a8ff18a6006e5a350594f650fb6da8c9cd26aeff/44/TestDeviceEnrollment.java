// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEnrollment.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEnrollment {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEnrollment deviceenrollment1 = new DeviceEnrollment("4cca69ec-e9b9-4299-a285-7e3815f2c029",
                                                                      new Date(1559150278778L),
                                                                      new Date(1559150271739L),
                                                                      "j8cwwJ63S7nx1e6DF6Dq6dZI8t5pB4C3",
                                                                      "A-2baU289BUhSxd2XEfVPmMXF0qqi3L98JkZL0OuxOyW:04Gw2UDk9vyl26OVk028lX:7KI8oD2GZd1t4T4:cOM6eud0S5o2b",
                                                                      new Date(1559150275593L),
                                                                      "j8cwwJ63S7nx1e6DF6Dq6dZI8t5pB4C3");
            DeviceEnrollment deviceenrollment2 = deviceenrollment1.clone();
            assertNotNull(deviceenrollment1);
            assertNotNull(deviceenrollment2);
            assertNotSame(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEnrollment deviceenrollment1 = new DeviceEnrollment("14414b6e-5bb6-4346-95b3-d08e529cb1e9",
                                                                      new Date(1559150275454L),
                                                                      new Date(1559150279348L),
                                                                      "j8cwwJ63S7nx1e6DF6Dq6dZI8t5pB4C3",
                                                                      "A-2baU289BUhSxd2XEfVPmMXF0qqi3L98JkZL0OuxOyW:04Gw2UDk9vyl26OVk028lX:7KI8oD2GZd1t4T4:cOM6eud0S5o2b",
                                                                      new Date(1559150273935L),
                                                                      "j8cwwJ63S7nx1e6DF6Dq6dZI8t5pB4C3");
            DeviceEnrollment deviceenrollment2 = new DeviceEnrollment("14414b6e-5bb6-4346-95b3-d08e529cb1e9",
                                                                      new Date(1559150275454L),
                                                                      new Date(1559150279348L),
                                                                      "j8cwwJ63S7nx1e6DF6Dq6dZI8t5pB4C3",
                                                                      "A-2baU289BUhSxd2XEfVPmMXF0qqi3L98JkZL0OuxOyW:04Gw2UDk9vyl26OVk028lX:7KI8oD2GZd1t4T4:cOM6eud0S5o2b",
                                                                      new Date(1559150273935L),
                                                                      "j8cwwJ63S7nx1e6DF6Dq6dZI8t5pB4C3");
            assertNotNull(deviceenrollment1);
            assertNotNull(deviceenrollment2);
            assertNotSame(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2.hashCode(), deviceenrollment1.hashCode());
            int hashCode = deviceenrollment1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceenrollment1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEnrollment deviceenrollment = new DeviceEnrollment("3a2814c5-b231-4f9f-a898-e3eafb2d246e",
                                                                 new Date(1559150278891L), new Date(1559150275286L),
                                                                 "j8cwwJ63S7nx1e6DF6Dq6dZI8t5pB4C3",
                                                                 "A-2baU289BUhSxd2XEfVPmMXF0qqi3L98JkZL0OuxOyW:04Gw2UDk9vyl26OVk028lX:7KI8oD2GZd1t4T4:cOM6eud0S5o2b",
                                                                 new Date(1559150270408L),
                                                                 "j8cwwJ63S7nx1e6DF6Dq6dZI8t5pB4C3");
        assertTrue(deviceenrollment.isValid());
        DeviceEnrollment deviceenrollmentInvalid = new DeviceEnrollment("4d33c90f-312e-4eda-a569-e7b54ac786fc",
                                                                        new Date(1559150278833L),
                                                                        new Date(1559150270985L),
                                                                        "XH`om<2mXa뻌Eshrvv\u001asoLᓰrGlEN0hb0V2v貗aoEml`bgElX\u0003okf[oꛊ췗E2mPT^2^2",
                                                                        null, new Date(1559150274941L),
                                                                        "XH`om<2mXa뻌Eshrvv\u001asoLᓰrGlEN0hb0V2v貗aoEml`bgElX\u0003okf[oꛊ췗E2mPT^2^2");
        assertFalse(deviceenrollmentInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEnrollment deviceenrollment1 = new DeviceEnrollment("db1285ca-f112-44a5-9609-50bb2085d9c7",
                                                                      new Date(1559150272014L),
                                                                      new Date(1559150277362L),
                                                                      "j8cwwJ63S7nx1e6DF6Dq6dZI8t5pB4C3",
                                                                      "A-2baU289BUhSxd2XEfVPmMXF0qqi3L98JkZL0OuxOyW:04Gw2UDk9vyl26OVk028lX:7KI8oD2GZd1t4T4:cOM6eud0S5o2b",
                                                                      new Date(1559150277763L),
                                                                      "j8cwwJ63S7nx1e6DF6Dq6dZI8t5pB4C3");
            DeviceEnrollment deviceenrollment2 = new DeviceEnrollment("db1285ca-f112-44a5-9609-50bb2085d9c7",
                                                                      new Date(1559150272014L),
                                                                      new Date(1559150277362L),
                                                                      "j8cwwJ63S7nx1e6DF6Dq6dZI8t5pB4C3",
                                                                      "A-2baU289BUhSxd2XEfVPmMXF0qqi3L98JkZL0OuxOyW:04Gw2UDk9vyl26OVk028lX:7KI8oD2GZd1t4T4:cOM6eud0S5o2b",
                                                                      new Date(1559150277763L),
                                                                      "j8cwwJ63S7nx1e6DF6Dq6dZI8t5pB4C3");
            DeviceEnrollment deviceenrollment3 = new DeviceEnrollment("892e6f11-2739-441b-9e31-7865193a1e14",
                                                                      new Date(1559150270151L),
                                                                      new Date(1559150271576L),
                                                                      "j8cwwJ63S7nx1e6DF6Dq6dZI8t5pB4C3",
                                                                      "A-2baU289BUhSxd2XEfVPmMXF0qqi3L98JkZL0OuxOyW:04Gw2UDk9vyl26OVk028lX:7KI8oD2GZd1t4T4:cOM6eud0S5o2b",
                                                                      new Date(1559150276162L),
                                                                      "j8cwwJ63S7nx1e6DF6Dq6dZI8t5pB4C3");
            assertNotNull(deviceenrollment1);
            assertNotNull(deviceenrollment2);
            assertNotNull(deviceenrollment3);
            assertNotSame(deviceenrollment2, deviceenrollment1);
            assertNotSame(deviceenrollment3, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment1, deviceenrollment2);
            assertEquals(deviceenrollment1, deviceenrollment1);
            assertFalse(deviceenrollment1.equals(null));
            assertNotEquals(deviceenrollment3, deviceenrollment1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
