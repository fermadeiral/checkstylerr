// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.deviceupdate.model;

import static org.junit.Assert.*;

import com.arm.mbed.cloud.sdk.common.Order;
import com.arm.mbed.cloud.sdk.common.listing.ListOptionsEncoder;
import com.arm.mbed.cloud.sdk.common.listing.filtering.FilterOperator;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import org.junit.Test;

/**
 * Unit tests for Model FirmwareManifestListOptions.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestFirmwareManifestListOptions {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            FirmwareManifestListOptions firmwaremanifestlistoptions1 = new FirmwareManifestListOptions(Integer.valueOf(31),
                                                                                                       Long.valueOf(42),
                                                                                                       Order.getDefault(),
                                                                                                       "75e3f96c-2bb9-4c37-abee-890928b8baa3",
                                                                                                       null, null);
            FirmwareManifestListOptions firmwaremanifestlistoptions2 = firmwaremanifestlistoptions1.clone();
            assertNotNull(firmwaremanifestlistoptions1);
            assertNotNull(firmwaremanifestlistoptions2);
            assertNotSame(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the filters method.
     */
    @SuppressWarnings({ "boxing", "resource" })
    @Test
    public void testFilters() {
        try {
            FirmwareManifestListOptions option = new FirmwareManifestListOptions().inCreatedAts(Arrays.asList(new Date(1559150271906L),
                                                                                                              new Date(1559150279226L),
                                                                                                              new Date(1559150278119L),
                                                                                                              new Date(1559150279787L),
                                                                                                              new Date(1559150273467L),
                                                                                                              new Date(1559150276042L),
                                                                                                              new Date(1559150273840L)))
                                                                                  .notInCreatedAts(Arrays.asList(new Date(1559150271773L),
                                                                                                                 new Date(1559150273797L),
                                                                                                                 new Date(1559150280299L),
                                                                                                                 new Date(1559150272534L),
                                                                                                                 new Date(1559150280037L),
                                                                                                                 new Date(1559150278177L)))
                                                                                  .lessThanCreatedAt(new Date(1559150276376L))
                                                                                  .greaterThanCreatedAt(new Date(1559150279169L))
                                                                                  .equalToName("0051be46-744a-4310-8d14-db546fc98fad")
                                                                                  .notEqualToName("bf66ee3b-75d1-4a8f-8302-3a24ca7a34f8")
                                                                                  .inNames(Arrays.asList("bffbd427-6476-4c0b-ad32-864dcb220774",
                                                                                                         "44a2842a-4839-4739-975b-a9996fae49f2",
                                                                                                         "2d42092f-e908-4365-b5b3-3abf474b255f",
                                                                                                         "046ba75b-4478-4273-a922-535b1eff0267"))
                                                                                  .notInNames(Arrays.asList("58df7cbc-6ece-45f1-aad3-6efc5b8b9c7f",
                                                                                                            "90d3bdbc-4ab8-406f-8611-e4fce1cc47a8",
                                                                                                            "7b4a7e4d-8917-4bb9-b9ec-edb494cede8d"))
                                                                                  .equalToId("34fa2982-a33d-4bba-a755-dcbc2ae08819")
                                                                                  .notEqualToId("50d3ed1f-43a8-43ea-b341-12f46afdb1cc")
                                                                                  .inIds(Arrays.asList("3b7e6e7f-fa64-4fb2-ad94-0c01454e28a2"))
                                                                                  .notInIds(Arrays.asList("85365096-e598-4ea0-85ec-c11ec846e980"))
                                                                                  .equalToDatafileUrl("903c0a5f-911c-41ac-96e4-db0995bd31b9")
                                                                                  .notEqualToDatafileUrl("1b7ded58-ec94-47b0-9af6-0f217a4819be")
                                                                                  .inDatafileUrls(Arrays.asList("8bba8b5e-81ba-40b3-a5c7-c0cbcf304c4e",
                                                                                                                "084cd978-c572-4c4f-86e2-a3ac4abde84f",
                                                                                                                "8747ca99-2023-43ba-8164-333821f7be38",
                                                                                                                "2e4ec699-c506-4e7d-ba35-c518b6fe75da",
                                                                                                                "b7a2afe0-e9bb-4363-9e90-3d94126f7c5b",
                                                                                                                "eb157bb0-dd32-412c-9322-8a6c8d5091ad",
                                                                                                                "0f6f9931-ead8-412b-b88f-324675672b91"))
                                                                                  .notInDatafileUrls(Arrays.asList("89574f6b-24d8-4b6a-ba13-1ff43c1bb6c6",
                                                                                                                   "a0d512b5-afd5-419f-8bf0-32651b82e975",
                                                                                                                   "f5e61cd7-09fe-4622-8ed0-53a174b9e593",
                                                                                                                   "8e1f9bed-e82a-4535-a6ee-fda192e4b30a"))
                                                                                  .equalToDatafileSize(Long.valueOf(29))
                                                                                  .notEqualToDatafileSize(Long.valueOf(52))
                                                                                  .inDatafileSizes(Arrays.asList(Long.valueOf(10)))
                                                                                  .notInDatafileSizes(Arrays.asList(Long.valueOf(-87),
                                                                                                                    Long.valueOf(-28),
                                                                                                                    Long.valueOf(14),
                                                                                                                    Long.valueOf(78),
                                                                                                                    Long.valueOf(-80)))
                                                                                  .equalToDeviceClass("5d0952a9-203a-4c3c-99cf-f3e78daa0ca4")
                                                                                  .notEqualToDeviceClass("2e306632-a93a-43e2-9fe4-a9560025a8f2")
                                                                                  .inDeviceClass(Arrays.asList("f10eeace-def3-46d9-8d38-2bd001709fde"))
                                                                                  .notInDeviceClass(Arrays.asList("bf8b8c1f-1fa5-4750-a6e9-6dd8f1b9c31a",
                                                                                                                  "72ffdfb0-c7ee-4264-a1a0-740fe4c11305",
                                                                                                                  "8c2299b7-fc4c-4d23-81e0-48ede500263e",
                                                                                                                  "1e2bcc0f-4a53-43b7-abe2-08d3259202f5",
                                                                                                                  "dd132796-f681-4333-a8ab-7b376b17f1e9",
                                                                                                                  "bb8bc877-745e-465d-ac57-9e5e28f152d3",
                                                                                                                  "179fcd85-5bc5-43c7-9ca4-bf45d4cc0d7f",
                                                                                                                  "d1190bcb-c9f3-4fc8-9781-395d14ba664b"))
                                                                                  .inTimestamps(Arrays.asList(new Date(1559150279460L),
                                                                                                              new Date(1559150272541L),
                                                                                                              new Date(1559150274043L),
                                                                                                              new Date(1559150280345L),
                                                                                                              new Date(1559150280155L),
                                                                                                              new Date(1559150274974L),
                                                                                                              new Date(1559150278655L)))
                                                                                  .notInTimestamps(Arrays.asList(new Date(1559150273220L)))
                                                                                  .lessThanTimestamp(new Date(1559150278647L))
                                                                                  .greaterThanTimestamp(new Date(1559150272729L))
                                                                                  .inUpdatedAts(Arrays.asList(new Date(1559150280179L),
                                                                                                              new Date(1559150275728L)))
                                                                                  .notInUpdatedAts(Arrays.asList(new Date(1559150277962L),
                                                                                                                 new Date(1559150275640L),
                                                                                                                 new Date(1559150271263L),
                                                                                                                 new Date(1559150271242L),
                                                                                                                 new Date(1559150279448L),
                                                                                                                 new Date(1559150272864L),
                                                                                                                 new Date(1559150272180L),
                                                                                                                 new Date(1559150272132L)))
                                                                                  .lessThanUpdatedAt(new Date(1559150277495L))
                                                                                  .greaterThanUpdatedAt(new Date(1559150280048L))
                                                                                  .equalToDescription("77a753b9-1095-4f01-b447-06c74373c616")
                                                                                  .notEqualToDescription("5dc4bc37-7fe0-4547-8700-d44a15432116")
                                                                                  .inDescriptions(Arrays.asList("5dfbef4e-79ff-4cf1-931c-e3774ce7ded1",
                                                                                                                "0137b4dd-c5f8-4dde-a964-62303beecee3"))
                                                                                  .notInDescriptions(Arrays.asList("2a095e93-4f12-4dc3-8d1a-ed0bc5509fb4",
                                                                                                                   "11e9b5a0-23f9-4cf5-b5d5-92c98d19a574",
                                                                                                                   "2b8acc15-3a0e-4432-91db-d6d6f2ed64f5",
                                                                                                                   "8f6ed36e-19eb-4f11-95c1-74ba85db1b9e"));
            assertTrue(option.hasFilters());
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559150271906L), new Date(1559150279226L), new Date(1559150278119L),
                                       new Date(1559150279787L), new Date(1559150273467L), new Date(1559150276042L),
                                       new Date(1559150273840L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559150271773L), new Date(1559150273797L), new Date(1559150280299L),
                                       new Date(1559150272534L), new Date(1559150280037L), new Date(1559150278177L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                        FilterOperator.LESS_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1559150276376L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1559150279169L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME, FilterOperator.EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("0051be46-744a-4310-8d14-db546fc98fad",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("bf66ee3b-75d1-4a8f-8302-3a24ca7a34f8",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME, FilterOperator.IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("bffbd427-6476-4c0b-ad32-864dcb220774", "44a2842a-4839-4739-975b-a9996fae49f2",
                                       "2d42092f-e908-4365-b5b3-3abf474b255f", "046ba75b-4478-4273-a922-535b1eff0267"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("58df7cbc-6ece-45f1-aad3-6efc5b8b9c7f", "90d3bdbc-4ab8-406f-8611-e4fce1cc47a8",
                                       "7b4a7e4d-8917-4bb9-b9ec-edb494cede8d"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID, FilterOperator.EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("34fa2982-a33d-4bba-a755-dcbc2ae08819",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("50d3ed1f-43a8-43ea-b341-12f46afdb1cc",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID, FilterOperator.IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("3b7e6e7f-fa64-4fb2-ad94-0c01454e28a2"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("85365096-e598-4ea0-85ec-c11ec846e980"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("903c0a5f-911c-41ac-96e4-db0995bd31b9",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("1b7ded58-ec94-47b0-9af6-0f217a4819be",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("8bba8b5e-81ba-40b3-a5c7-c0cbcf304c4e", "084cd978-c572-4c4f-86e2-a3ac4abde84f",
                                       "8747ca99-2023-43ba-8164-333821f7be38", "2e4ec699-c506-4e7d-ba35-c518b6fe75da",
                                       "b7a2afe0-e9bb-4363-9e90-3d94126f7c5b", "eb157bb0-dd32-412c-9322-8a6c8d5091ad",
                                       "0f6f9931-ead8-412b-b88f-324675672b91"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("89574f6b-24d8-4b6a-ba13-1ff43c1bb6c6", "a0d512b5-afd5-419f-8bf0-32651b82e975",
                                       "f5e61cd7-09fe-4622-8ed0-53a174b9e593", "8e1f9bed-e82a-4535-a6ee-fda192e4b30a"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(29),
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    Long.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(52),
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                       Long.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(10)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                        FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(-87), Long.valueOf(-28), Long.valueOf(14), Long.valueOf(78),
                                       Long.valueOf(-80)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS, FilterOperator.EQUAL));
            assertNotNull(option.getDeviceClassFilters());
            assertEquals("5d0952a9-203a-4c3c-99cf-f3e78daa0ca4",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDeviceClassFilters());
            assertEquals("2e306632-a93a-43e2-9fe4-a9560025a8f2",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS, FilterOperator.IN));
            assertNotNull(option.getDeviceClassFilters());
            assertEquals(Arrays.asList("f10eeace-def3-46d9-8d38-2bd001709fde"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS, FilterOperator.NOT_IN));
            assertNotNull(option.getDeviceClassFilters());
            assertEquals(Arrays.asList("bf8b8c1f-1fa5-4750-a6e9-6dd8f1b9c31a", "72ffdfb0-c7ee-4264-a1a0-740fe4c11305",
                                       "8c2299b7-fc4c-4d23-81e0-48ede500263e", "1e2bcc0f-4a53-43b7-abe2-08d3259202f5",
                                       "dd132796-f681-4333-a8ab-7b376b17f1e9", "bb8bc877-745e-465d-ac57-9e5e28f152d3",
                                       "179fcd85-5bc5-43c7-9ca4-bf45d4cc0d7f", "d1190bcb-c9f3-4fc8-9781-395d14ba664b"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP, FilterOperator.IN));
            assertNotNull(option.getTimestampFilters());
            assertEquals(Arrays.asList(new Date(1559150279460L), new Date(1559150272541L), new Date(1559150274043L),
                                       new Date(1559150280345L), new Date(1559150280155L), new Date(1559150274974L),
                                       new Date(1559150278655L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP, FilterOperator.NOT_IN));
            assertNotNull(option.getTimestampFilters());
            assertEquals(Arrays.asList(new Date(1559150273220L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP, FilterOperator.LESS_THAN));
            assertNotNull(option.getTimestampFilters());
            assertEquals(new Date(1559150278647L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getTimestampFilters());
            assertEquals(new Date(1559150272729L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559150280179L), new Date(1559150275728L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559150277962L), new Date(1559150275640L), new Date(1559150271263L),
                                       new Date(1559150271242L), new Date(1559150279448L), new Date(1559150272864L),
                                       new Date(1559150272180L), new Date(1559150272132L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                        FilterOperator.LESS_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1559150277495L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1559150280048L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("77a753b9-1095-4f01-b447-06c74373c616",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("5dc4bc37-7fe0-4547-8700-d44a15432116",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("5dfbef4e-79ff-4cf1-931c-e3774ce7ded1", "0137b4dd-c5f8-4dde-a964-62303beecee3"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("2a095e93-4f12-4dc3-8d1a-ed0bc5509fb4", "11e9b5a0-23f9-4cf5-b5d5-92c98d19a574",
                                       "2b8acc15-3a0e-4432-91db-d6d6f2ed64f5", "8f6ed36e-19eb-4f11-95c1-74ba85db1b9e"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    List.class, option));
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            FirmwareManifestListOptions firmwaremanifestlistoptions1 = new FirmwareManifestListOptions(Integer.valueOf(108),
                                                                                                       Long.valueOf(-52),
                                                                                                       Order.getDefault(),
                                                                                                       "38f1bd2a-f11f-4e27-a9ec-aec521cf13ef",
                                                                                                       null, null);
            FirmwareManifestListOptions firmwaremanifestlistoptions2 = new FirmwareManifestListOptions(Integer.valueOf(108),
                                                                                                       Long.valueOf(-52),
                                                                                                       Order.getDefault(),
                                                                                                       "38f1bd2a-f11f-4e27-a9ec-aec521cf13ef",
                                                                                                       null, null);
            assertNotNull(firmwaremanifestlistoptions1);
            assertNotNull(firmwaremanifestlistoptions2);
            assertNotSame(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2.hashCode(), firmwaremanifestlistoptions1.hashCode());
            int hashCode = firmwaremanifestlistoptions1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, firmwaremanifestlistoptions1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            FirmwareManifestListOptions firmwaremanifestlistoptions1 = new FirmwareManifestListOptions(Integer.valueOf(71),
                                                                                                       Long.valueOf(87),
                                                                                                       Order.getDefault(),
                                                                                                       "88cd775f-f368-4599-bd72-1abd6c9725a9",
                                                                                                       null, null);
            FirmwareManifestListOptions firmwaremanifestlistoptions2 = new FirmwareManifestListOptions(Integer.valueOf(71),
                                                                                                       Long.valueOf(87),
                                                                                                       Order.getDefault(),
                                                                                                       "88cd775f-f368-4599-bd72-1abd6c9725a9",
                                                                                                       null, null);
            FirmwareManifestListOptions firmwaremanifestlistoptions3 = new FirmwareManifestListOptions(Integer.valueOf(32),
                                                                                                       Long.valueOf(42),
                                                                                                       Order.getDefault(),
                                                                                                       "307107cf-3b7f-4274-a9cf-f268f65fbbeb",
                                                                                                       null, null);
            assertNotNull(firmwaremanifestlistoptions1);
            assertNotNull(firmwaremanifestlistoptions2);
            assertNotNull(firmwaremanifestlistoptions3);
            assertNotSame(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertNotSame(firmwaremanifestlistoptions3, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions1, firmwaremanifestlistoptions2);
            assertEquals(firmwaremanifestlistoptions1, firmwaremanifestlistoptions1);
            assertFalse(firmwaremanifestlistoptions1.equals(null));
            assertNotEquals(firmwaremanifestlistoptions3, firmwaremanifestlistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
