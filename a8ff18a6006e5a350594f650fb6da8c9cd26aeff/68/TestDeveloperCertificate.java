// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.security.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeveloperCertificate.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeveloperCertificate {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("85c4ae63-24e1-4a19-be1a-69764f6110f7",
                                                                                  "422effa4-bf0d-47b6-bfd1-65fd8fc083df",
                                                                                  new Date(1559150270888L),
                                                                                  "706e3951-2ef0-4ef9-9171-b8e5ed7d6251",
                                                                                  "ddd434b3-21b3-414e-b996-b4843b6a1020",
                                                                                  "b0ee519c-19d5-4a75-a07b-5a5b06b54e8c",
                                                                                  "f6ceeb56-2aed-4095-802c-1a756c349451",
                                                                                  "dbd39cc2-136b-4091-a945-f33d286732b0");
            DeveloperCertificate developercertificate2 = developercertificate1.clone();
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("aa239ac4-4b8b-4702-8938-3177de23173d",
                                                                                  "65a8e4e5-3c48-4e89-8b6e-9e12031cbbfa",
                                                                                  new Date(1559150276341L),
                                                                                  "23fe0fa1-8c06-4e87-840f-8b5260890bb2",
                                                                                  "590ed06b-9741-4a9d-9e5b-4d6074cbb515",
                                                                                  "4964f7fd-f0c6-4ba5-aaa8-8c976a775c4f",
                                                                                  "266d64e0-ca26-403b-934b-b559b1feb6eb",
                                                                                  "bbaf74dc-2251-4595-86cf-7b59daf7c694");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("aa239ac4-4b8b-4702-8938-3177de23173d",
                                                                                  "65a8e4e5-3c48-4e89-8b6e-9e12031cbbfa",
                                                                                  new Date(1559150276341L),
                                                                                  "23fe0fa1-8c06-4e87-840f-8b5260890bb2",
                                                                                  "590ed06b-9741-4a9d-9e5b-4d6074cbb515",
                                                                                  "4964f7fd-f0c6-4ba5-aaa8-8c976a775c4f",
                                                                                  "266d64e0-ca26-403b-934b-b559b1feb6eb",
                                                                                  "bbaf74dc-2251-4595-86cf-7b59daf7c694");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2.hashCode(), developercertificate1.hashCode());
            int hashCode = developercertificate1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, developercertificate1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeveloperCertificate developercertificate = new DeveloperCertificate("f5361037-702c-49f2-b7f2-9c2a7247034a",
                                                                             "b85d5949-ca48-4c52-bc4a-70cd42967bab",
                                                                             new Date(1559150275724L),
                                                                             "582fb4cd-015c-432c-bec4-826bbb3b9a15",
                                                                             "3fa463d0-ebce-4a68-9c09-3ba9c36c50f1",
                                                                             "5f831a93-0c6f-4a50-9e63-fd047ebf70f0",
                                                                             "6f94dcbb-7900-4e8f-ad0a-03f015171f7c",
                                                                             "82eca992-8318-4cf7-ad5b-5a9a55fc5dd9");
        assertTrue(developercertificate.isValid());
        DeveloperCertificate developercertificateInvalid = new DeveloperCertificate("791d01da-b844-4084-88c7-6eb4be36be1b",
                                                                                    "54510bff-f0ca-4bf7-89c8-8ed81c719ad8",
                                                                                    new Date(1559150276829L),
                                                                                    "90ba6279-4823-40f1-ac84-977c791de901",
                                                                                    "0a6889bf-8bd4-492d-8f5f-82977c0a4bf4",
                                                                                    "cdda4809-a485-438b-a6d7-8972a349798f",
                                                                                    null,
                                                                                    "67723679-769a-4546-9c97-00b0527684b5");
        assertFalse(developercertificateInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("a2c5053d-ea1c-4087-9148-7c19ff678b5b",
                                                                                  "e0166156-1864-4234-8c49-9a2a8266be95",
                                                                                  new Date(1559150276124L),
                                                                                  "49ddeafc-80be-466e-a08f-aa3ca04f3229",
                                                                                  "2cd2b68e-5099-4a2e-abc8-fe1d6a6b7b87",
                                                                                  "fdb183f1-ff98-4dd1-983b-b6cf9fe3f3c0",
                                                                                  "f5a47751-a5f8-47cb-96e2-240b1654513e",
                                                                                  "1ce91a89-3acb-40f5-b989-f57e9a14bb44");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("a2c5053d-ea1c-4087-9148-7c19ff678b5b",
                                                                                  "e0166156-1864-4234-8c49-9a2a8266be95",
                                                                                  new Date(1559150276124L),
                                                                                  "49ddeafc-80be-466e-a08f-aa3ca04f3229",
                                                                                  "2cd2b68e-5099-4a2e-abc8-fe1d6a6b7b87",
                                                                                  "fdb183f1-ff98-4dd1-983b-b6cf9fe3f3c0",
                                                                                  "f5a47751-a5f8-47cb-96e2-240b1654513e",
                                                                                  "1ce91a89-3acb-40f5-b989-f57e9a14bb44");
            DeveloperCertificate developercertificate3 = new DeveloperCertificate("c6e84e7e-a284-4cb6-9931-3b74746f238a",
                                                                                  "2409f0e4-db7d-4681-af72-6155b6531454",
                                                                                  new Date(1559150270278L),
                                                                                  "9bae5f08-81b5-4fa5-ad5d-ed9ab854578b",
                                                                                  "00e5dd28-09c5-405d-9ccb-eba03afb836b",
                                                                                  "3e2c02b1-eb4a-42ba-b757-25411024e4b1",
                                                                                  "b8f57e6a-737c-41e4-b38a-fc551c3db22e",
                                                                                  "303e33f6-6a00-4189-8613-c776ad0b5a68");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotNull(developercertificate3);
            assertNotSame(developercertificate2, developercertificate1);
            assertNotSame(developercertificate3, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate1, developercertificate2);
            assertEquals(developercertificate1, developercertificate1);
            assertFalse(developercertificate1.equals(null));
            assertNotEquals(developercertificate3, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
