// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEvents.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEvents {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1559150271512L), null,
                                                          new Date(1559150276865L),
                                                          "9780771e-aba6-40e5-8b35-2c0cd4b13101",
                                                          "6d2e8b59-4ac9-4a62-85c9-c351950d67da",
                                                          "417cfe5e-85e3-4b07-b628-ddb9966bd469",
                                                          "dab21850-6c3e-430c-8054-f97ebc2fd1bf",
                                                          "3c808b07-6102-4501-8440-9863339969fd",
                                                          "7869b484-5e79-4e22-85c6-3220bddbbae2", true);
            DeviceEvents deviceevents2 = deviceevents1.clone();
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1559150271255L), null,
                                                          new Date(1559150270323L),
                                                          "dd9d61e1-9b3e-40ee-918a-404e868463f6",
                                                          "3a6e8876-65e6-4e12-b273-4a10ae21312f",
                                                          "c2ae8e05-d3dc-4044-8561-cfdacfdb201f",
                                                          "af8c6421-a67d-4707-84f2-582f3a2823d4",
                                                          "186a5d07-e884-4804-9adb-3d7347c2106a",
                                                          "768fdb46-86a6-49f4-8315-b70f33d34b00", false);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1559150271255L), null,
                                                          new Date(1559150270323L),
                                                          "dd9d61e1-9b3e-40ee-918a-404e868463f6",
                                                          "3a6e8876-65e6-4e12-b273-4a10ae21312f",
                                                          "c2ae8e05-d3dc-4044-8561-cfdacfdb201f",
                                                          "af8c6421-a67d-4707-84f2-582f3a2823d4",
                                                          "186a5d07-e884-4804-9adb-3d7347c2106a",
                                                          "768fdb46-86a6-49f4-8315-b70f33d34b00", false);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2.hashCode(), deviceevents1.hashCode());
            int hashCode = deviceevents1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceevents1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEvents deviceevents = new DeviceEvents(null, new Date(1559150273929L), null, new Date(1559150278038L),
                                                     "8e4d055e-2c42-4e73-8a6f-41fe5be4cf3d",
                                                     "e82a4da2-38c3-4b8b-8bf7-5d54396e9b06",
                                                     "0ea439da-2be5-4046-a1fc-202235f7264f",
                                                     "073a3801-79ea-44a9-9129-7dd0a9b94ffa",
                                                     "9f98a74e-a988-491e-947b-1453093442bb",
                                                     "5d2eb4f7-59c8-4414-bf31-de4726f7b573", false);
        assertTrue(deviceevents.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1559150278262L), null,
                                                          new Date(1559150270007L),
                                                          "9eda6af5-d7d8-432a-9286-062e682ecbe6",
                                                          "57647704-dcb2-4868-9e7d-3d2211bbcc42",
                                                          "bd398910-83c6-46b4-a273-3eb7ae6ae271",
                                                          "27847404-5029-4099-a00d-791f12d15d32",
                                                          "d1a94870-67d1-45ed-a27e-d75327c420ee",
                                                          "c00878ee-be5d-4b44-964b-031dbf69e824", false);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1559150278262L), null,
                                                          new Date(1559150270007L),
                                                          "9eda6af5-d7d8-432a-9286-062e682ecbe6",
                                                          "57647704-dcb2-4868-9e7d-3d2211bbcc42",
                                                          "bd398910-83c6-46b4-a273-3eb7ae6ae271",
                                                          "27847404-5029-4099-a00d-791f12d15d32",
                                                          "d1a94870-67d1-45ed-a27e-d75327c420ee",
                                                          "c00878ee-be5d-4b44-964b-031dbf69e824", false);
            DeviceEvents deviceevents3 = new DeviceEvents(null, new Date(1559150277995L), null,
                                                          new Date(1559150273220L),
                                                          "a163fec5-7b83-49db-9228-8217236794b1",
                                                          "6934602c-2bc3-4d8b-a2a9-69e5f04d45c7",
                                                          "af274dea-2db8-4586-aa1d-7069b305af0e",
                                                          "7a538454-a1e3-4373-b47a-71377870dfc7",
                                                          "7415efc2-9f28-4604-87eb-cd086541e0f4",
                                                          "4fb232c6-dccd-433e-9c5e-d5dc333ae56d", false);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotNull(deviceevents3);
            assertNotSame(deviceevents2, deviceevents1);
            assertNotSame(deviceevents3, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents1, deviceevents2);
            assertEquals(deviceevents1, deviceevents1);
            assertFalse(deviceevents1.equals(null));
            assertNotEquals(deviceevents3, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
