// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.deviceupdate.model;

import static org.junit.Assert.*;

import com.arm.mbed.cloud.sdk.common.Order;
import com.arm.mbed.cloud.sdk.common.listing.ListOptionsEncoder;
import com.arm.mbed.cloud.sdk.common.listing.filtering.FilterOperator;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import org.junit.Test;

/**
 * Unit tests for Model UpdateCampaignListOptions.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestUpdateCampaignListOptions {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            UpdateCampaignListOptions updatecampaignlistoptions1 = new UpdateCampaignListOptions(Integer.valueOf(-71),
                                                                                                 Long.valueOf(38),
                                                                                                 Order.getDefault(),
                                                                                                 "0cdf5e09-bf66-49f9-8c14-4cd578b634a2",
                                                                                                 null, null);
            UpdateCampaignListOptions updatecampaignlistoptions2 = updatecampaignlistoptions1.clone();
            assertNotNull(updatecampaignlistoptions1);
            assertNotNull(updatecampaignlistoptions2);
            assertNotSame(updatecampaignlistoptions2, updatecampaignlistoptions1);
            assertEquals(updatecampaignlistoptions2, updatecampaignlistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the filters method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testFilters() {
        try {
            UpdateCampaignListOptions option = new UpdateCampaignListOptions().inCreatedAts(Arrays.asList(new Date(1559150271054L),
                                                                                                          new Date(1559150273080L),
                                                                                                          new Date(1559150280276L),
                                                                                                          new Date(1559150273691L),
                                                                                                          new Date(1559150275434L)))
                                                                              .notInCreatedAts(Arrays.asList(new Date(1559150272437L),
                                                                                                             new Date(1559150276060L),
                                                                                                             new Date(1559150273980L)))
                                                                              .lessThanCreatedAt(new Date(1559150274207L))
                                                                              .greaterThanCreatedAt(new Date(1559150272933L))
                                                                              .equalToName("039763c4-7646-4873-8600-bd7a0c505dbd")
                                                                              .notEqualToName("a463e0d3-8bd2-45ee-8aae-468aa282b044")
                                                                              .inNames(Arrays.asList("f28969c0-77b2-4a09-804c-029750f70355",
                                                                                                     "6c28093d-1bff-4023-9830-ba7637c767ed",
                                                                                                     "f4367ccb-a735-4f1f-b23d-46682c4e27f0",
                                                                                                     "c6ecf46e-4e73-4d36-9bdd-7e0b826a7688",
                                                                                                     "45d9fa48-79c2-4020-8ef6-376f9510571e",
                                                                                                     "7dd19d1b-fcdf-41e3-b03a-cf457186b303",
                                                                                                     "8835ea82-7b73-4f90-ba51-f52a21e9f152"))
                                                                              .notInNames(Arrays.asList("46154543-668b-46ab-9b02-59c4218f887e"))
                                                                              .equalToId("249e8bb4-e1c5-4cbc-9a60-9309d2faa077")
                                                                              .notEqualToId("c41f008a-dc94-4944-a8f9-b42354aea726")
                                                                              .inIds(Arrays.asList("60b5d418-6ef3-424e-b16e-845d5d07da9c",
                                                                                                   "66e3795c-7dce-407f-8c64-0fefb71537bc",
                                                                                                   "cdc9e601-49a8-4fd8-b128-dc5eb91e51c8",
                                                                                                   "56a9fba1-e486-489b-a1e4-35f37b13fdfd",
                                                                                                   "749ad579-1bed-4c30-83e7-43a82e205e88",
                                                                                                   "52e27df3-debd-43a5-bad7-13cd17ec2feb",
                                                                                                   "b2219a2f-819d-4754-9e65-a2ffb95c2945"))
                                                                              .notInIds(Arrays.asList("5246c4de-79c4-4784-93e3-41658cc3bd3f",
                                                                                                      "59fe9afb-51aa-4a76-8671-cd342e310a06",
                                                                                                      "8472a707-dd64-4bd1-84fc-ef93bd993496",
                                                                                                      "52651ecf-7372-4381-889e-3eb83b7cbb1f",
                                                                                                      "88634121-0d13-46ca-8459-b2f3a717830a",
                                                                                                      "fd3ee327-d349-49ae-822e-1cd69b88871f",
                                                                                                      "dfef7323-c5fb-4ace-8577-b714520811d2",
                                                                                                      "7d646c27-afca-4736-94ff-343a4e3f5b96"))
                                                                              .equalToDeviceFilter("e8c9e3a9-22da-4c66-9214-fc599ba75592")
                                                                              .notEqualToDeviceFilter("4a4f9f73-6dea-4ec4-a3a7-ff38249ee8ac")
                                                                              .inDeviceFilters(Arrays.asList("e10e8fcc-5d71-49e5-b7f8-e4699741a7b6",
                                                                                                             "aed945ad-0fb2-4bff-99df-a6cab3765b3c",
                                                                                                             "c03db958-b3be-41a9-8d01-f83a859f67a3",
                                                                                                             "d8088bd5-0db5-4427-8d93-f99336c7fb4a",
                                                                                                             "89a68a10-b3f1-4c73-95be-221f090632e2",
                                                                                                             "0e54b346-6b91-4897-b9ca-ec2cdb05da3c",
                                                                                                             "a5cc7da5-905d-4f00-aed4-3a2408b19635",
                                                                                                             "ce141f36-016a-43b5-9019-9266b0d89b0d"))
                                                                              .notInDeviceFilters(Arrays.asList("a72bc679-6918-4c94-b71a-612930fb7730",
                                                                                                                "179643c8-7f69-40f1-8ef2-478f6f28f0e7",
                                                                                                                "96d5e77e-0f45-41f3-92b2-547c93d1f379",
                                                                                                                "e3faf5d9-060b-43b7-8edf-cffcd2ce6924",
                                                                                                                "96f2d5c0-5e6d-4a67-bf53-9ca0cecc0fa1"))
                                                                              .inFinisheds(Arrays.asList(new Date(1559150270793L),
                                                                                                         new Date(1559150280329L),
                                                                                                         new Date(1559150275134L),
                                                                                                         new Date(1559150279628L)))
                                                                              .notInFinisheds(Arrays.asList(new Date(1559150274493L),
                                                                                                            new Date(1559150278783L),
                                                                                                            new Date(1559150270963L)))
                                                                              .lessThanFinished(new Date(1559150275752L))
                                                                              .greaterThanFinished(new Date(1559150274340L))
                                                                              .inStartedAts(Arrays.asList(new Date(1559150278589L),
                                                                                                          new Date(1559150279505L),
                                                                                                          new Date(1559150278028L),
                                                                                                          new Date(1559150277713L),
                                                                                                          new Date(1559150272034L),
                                                                                                          new Date(1559150278593L),
                                                                                                          new Date(1559150272085L),
                                                                                                          new Date(1559150270939L),
                                                                                                          new Date(1559150272833L)))
                                                                              .notInStartedAts(Arrays.asList(new Date(1559150273664L),
                                                                                                             new Date(1559150279034L),
                                                                                                             new Date(1559150276076L),
                                                                                                             new Date(1559150271220L),
                                                                                                             new Date(1559150272712L)))
                                                                              .lessThanStartedAt(new Date(1559150279664L))
                                                                              .greaterThanStartedAt(new Date(1559150271948L))
                                                                              .inWhens(Arrays.asList(new Date(1559150274014L),
                                                                                                     new Date(1559150273958L),
                                                                                                     new Date(1559150270802L),
                                                                                                     new Date(1559150272726L),
                                                                                                     new Date(1559150277267L),
                                                                                                     new Date(1559150278946L),
                                                                                                     new Date(1559150271782L)))
                                                                              .notInWhens(Arrays.asList(new Date(1559150270569L),
                                                                                                        new Date(1559150277216L),
                                                                                                        new Date(1559150275516L),
                                                                                                        new Date(1559150277578L),
                                                                                                        new Date(1559150279003L),
                                                                                                        new Date(1559150270727L)))
                                                                              .lessThanWhen(new Date(1559150275996L))
                                                                              .greaterThanWhen(new Date(1559150274315L))
                                                                              .inUpdatedAts(Arrays.asList(new Date(1559150273671L),
                                                                                                          new Date(1559150275379L),
                                                                                                          new Date(1559150276778L),
                                                                                                          new Date(1559150274503L),
                                                                                                          new Date(1559150278749L)))
                                                                              .notInUpdatedAts(Arrays.asList(new Date(1559150270618L),
                                                                                                             new Date(1559150276220L),
                                                                                                             new Date(1559150272320L),
                                                                                                             new Date(1559150278051L),
                                                                                                             new Date(1559150275287L),
                                                                                                             new Date(1559150274252L),
                                                                                                             new Date(1559150276489L),
                                                                                                             new Date(1559150271257L)))
                                                                              .lessThanUpdatedAt(new Date(1559150272423L))
                                                                              .greaterThanUpdatedAt(new Date(1559150270423L))
                                                                              .equalToRootManifestId("2f291209-fcb4-4318-b539-f0a6d4efcd0b")
                                                                              .notEqualToRootManifestId("67679f9a-c749-4b57-bf43-5316b14bf7b3")
                                                                              .inRootManifestIds(Arrays.asList("bafdb712-9cc0-4fca-9ec9-2b496879dc9c"))
                                                                              .notInRootManifestIds(Arrays.asList("b27e8e67-8b41-4337-9ab9-a45d8c42442a",
                                                                                                                  "db25de77-569e-4853-b6d5-9f766493a408",
                                                                                                                  "48970d1e-5a5b-4de9-a0db-6e5c53df861e",
                                                                                                                  "a8ffe7fe-a79c-4be9-9908-fb7028257912",
                                                                                                                  "46a3e5d3-97fc-4d88-853e-ef143c07e62e"))
                                                                              .equalToDescription("458c2046-52b8-4ef1-a41e-4de708fe0b87")
                                                                              .notEqualToDescription("debb4a3f-99a2-4fb4-a3c7-327726d39e5f")
                                                                              .inDescriptions(Arrays.asList("760612e8-e5cd-4ac7-af4e-284f5af55913",
                                                                                                            "1d20e966-d8e3-41c3-8822-f852bdff00ef"))
                                                                              .notInDescriptions(Arrays.asList("673b1b4a-02fb-40b6-83d2-4da9b296ef14",
                                                                                                               "52955f2d-ac31-44e2-a1ff-dad9944809f8",
                                                                                                               "27ba78a6-ad00-4f09-928e-488062bee642",
                                                                                                               "40606e99-47ac-46c5-9fa1-deaeff79ce69"));
            assertTrue(option.hasFilters());
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559150271054L), new Date(1559150273080L), new Date(1559150280276L),
                                       new Date(1559150273691L), new Date(1559150275434L)),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559150272437L), new Date(1559150276060L), new Date(1559150273980L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.LESS_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1559150274207L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1559150272933L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME, FilterOperator.EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("039763c4-7646-4873-8600-bd7a0c505dbd",
                         ListOptionsEncoder.encodeSingleEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME,
                                                                    String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("a463e0d3-8bd2-45ee-8aae-468aa282b044",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME,
                                                                       String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME, FilterOperator.IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("f28969c0-77b2-4a09-804c-029750f70355", "6c28093d-1bff-4023-9830-ba7637c767ed",
                                       "f4367ccb-a735-4f1f-b23d-46682c4e27f0", "c6ecf46e-4e73-4d36-9bdd-7e0b826a7688",
                                       "45d9fa48-79c2-4020-8ef6-376f9510571e", "7dd19d1b-fcdf-41e3-b03a-cf457186b303",
                                       "8835ea82-7b73-4f90-ba51-f52a21e9f152"),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("46154543-668b-46ab-9b02-59c4218f887e"),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID, FilterOperator.EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("249e8bb4-e1c5-4cbc-9a60-9309d2faa077",
                         ListOptionsEncoder.encodeSingleEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("c41f008a-dc94-4944-a8f9-b42354aea726",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID, FilterOperator.IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("60b5d418-6ef3-424e-b16e-845d5d07da9c", "66e3795c-7dce-407f-8c64-0fefb71537bc",
                                       "cdc9e601-49a8-4fd8-b128-dc5eb91e51c8", "56a9fba1-e486-489b-a1e4-35f37b13fdfd",
                                       "749ad579-1bed-4c30-83e7-43a82e205e88", "52e27df3-debd-43a5-bad7-13cd17ec2feb",
                                       "b2219a2f-819d-4754-9e65-a2ffb95c2945"),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID, List.class,
                                                                 option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("5246c4de-79c4-4784-93e3-41658cc3bd3f", "59fe9afb-51aa-4a76-8671-cd342e310a06",
                                       "8472a707-dd64-4bd1-84fc-ef93bd993496", "52651ecf-7372-4381-889e-3eb83b7cbb1f",
                                       "88634121-0d13-46ca-8459-b2f3a717830a", "fd3ee327-d349-49ae-822e-1cd69b88871f",
                                       "dfef7323-c5fb-4ace-8577-b714520811d2", "7d646c27-afca-4736-94ff-343a4e3f5b96"),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER, FilterOperator.EQUAL));
            assertNotNull(option.getDeviceFilterFilters());
            assertEquals("e8c9e3a9-22da-4c66-9214-fc599ba75592",
                         ListOptionsEncoder.encodeSingleEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER,
                                                                    String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDeviceFilterFilters());
            assertEquals("4a4f9f73-6dea-4ec4-a3a7-ff38249ee8ac",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER,
                                                                       String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER, FilterOperator.IN));
            assertNotNull(option.getDeviceFilterFilters());
            assertEquals(Arrays.asList("e10e8fcc-5d71-49e5-b7f8-e4699741a7b6", "aed945ad-0fb2-4bff-99df-a6cab3765b3c",
                                       "c03db958-b3be-41a9-8d01-f83a859f67a3", "d8088bd5-0db5-4427-8d93-f99336c7fb4a",
                                       "89a68a10-b3f1-4c73-95be-221f090632e2", "0e54b346-6b91-4897-b9ca-ec2cdb05da3c",
                                       "a5cc7da5-905d-4f00-aed4-3a2408b19635", "ce141f36-016a-43b5-9019-9266b0d89b0d"),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER, FilterOperator.NOT_IN));
            assertNotNull(option.getDeviceFilterFilters());
            assertEquals(Arrays.asList("a72bc679-6918-4c94-b71a-612930fb7730", "179643c8-7f69-40f1-8ef2-478f6f28f0e7",
                                       "96d5e77e-0f45-41f3-92b2-547c93d1f379", "e3faf5d9-060b-43b7-8edf-cffcd2ce6924",
                                       "96f2d5c0-5e6d-4a67-bf53-9ca0cecc0fa1"),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED, FilterOperator.IN));
            assertNotNull(option.getFinishedFilters());
            assertEquals(Arrays.asList(new Date(1559150270793L), new Date(1559150280329L), new Date(1559150275134L),
                                       new Date(1559150279628L)),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED, FilterOperator.NOT_IN));
            assertNotNull(option.getFinishedFilters());
            assertEquals(Arrays.asList(new Date(1559150274493L), new Date(1559150278783L), new Date(1559150270963L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED, FilterOperator.LESS_THAN));
            assertNotNull(option.getFinishedFilters());
            assertEquals(new Date(1559150275752L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED, FilterOperator.GREATER_THAN));
            assertNotNull(option.getFinishedFilters());
            assertEquals(new Date(1559150274340L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT, FilterOperator.IN));
            assertNotNull(option.getStartedAtFilters());
            assertEquals(Arrays.asList(new Date(1559150278589L), new Date(1559150279505L), new Date(1559150278028L),
                                       new Date(1559150277713L), new Date(1559150272034L), new Date(1559150278593L),
                                       new Date(1559150272085L), new Date(1559150270939L), new Date(1559150272833L)),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getStartedAtFilters());
            assertEquals(Arrays.asList(new Date(1559150273664L), new Date(1559150279034L), new Date(1559150276076L),
                                       new Date(1559150271220L), new Date(1559150272712L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT, FilterOperator.LESS_THAN));
            assertNotNull(option.getStartedAtFilters());
            assertEquals(new Date(1559150279664L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getStartedAtFilters());
            assertEquals(new Date(1559150271948L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN, FilterOperator.IN));
            assertNotNull(option.getWhenFilters());
            assertEquals(Arrays.asList(new Date(1559150274014L), new Date(1559150273958L), new Date(1559150270802L),
                                       new Date(1559150272726L), new Date(1559150277267L), new Date(1559150278946L),
                                       new Date(1559150271782L)),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN, FilterOperator.NOT_IN));
            assertNotNull(option.getWhenFilters());
            assertEquals(Arrays.asList(new Date(1559150270569L), new Date(1559150277216L), new Date(1559150275516L),
                                       new Date(1559150277578L), new Date(1559150279003L), new Date(1559150270727L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN, FilterOperator.LESS_THAN));
            assertNotNull(option.getWhenFilters());
            assertEquals(new Date(1559150275996L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN, FilterOperator.GREATER_THAN));
            assertNotNull(option.getWhenFilters());
            assertEquals(new Date(1559150274315L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559150273671L), new Date(1559150275379L), new Date(1559150276778L),
                                       new Date(1559150274503L), new Date(1559150278749L)),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559150270618L), new Date(1559150276220L), new Date(1559150272320L),
                                       new Date(1559150278051L), new Date(1559150275287L), new Date(1559150274252L),
                                       new Date(1559150276489L), new Date(1559150271257L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.LESS_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1559150272423L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1559150270423L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID,
                                        FilterOperator.EQUAL));
            assertNotNull(option.getRootManifestIdFilters());
            assertEquals("2f291209-fcb4-4318-b539-f0a6d4efcd0b",
                         ListOptionsEncoder.encodeSingleEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getRootManifestIdFilters());
            assertEquals("67679f9a-c749-4b57-bf43-5316b14bf7b3",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID, FilterOperator.IN));
            assertNotNull(option.getRootManifestIdFilters());
            assertEquals(Arrays.asList("bafdb712-9cc0-4fca-9ec9-2b496879dc9c"),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID,
                                        FilterOperator.NOT_IN));
            assertNotNull(option.getRootManifestIdFilters());
            assertEquals(Arrays.asList("b27e8e67-8b41-4337-9ab9-a45d8c42442a", "db25de77-569e-4853-b6d5-9f766493a408",
                                       "48970d1e-5a5b-4de9-a0db-6e5c53df861e", "a8ffe7fe-a79c-4be9-9908-fb7028257912",
                                       "46a3e5d3-97fc-4d88-853e-ef143c07e62e"),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("458c2046-52b8-4ef1-a41e-4de708fe0b87",
                         ListOptionsEncoder.encodeSingleEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("debb4a3f-99a2-4fb4-a3c7-327726d39e5f",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                       String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("760612e8-e5cd-4ac7-af4e-284f5af55913", "1d20e966-d8e3-41c3-8822-f852bdff00ef"),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("673b1b4a-02fb-40b6-83d2-4da9b296ef14", "52955f2d-ac31-44e2-a1ff-dad9944809f8",
                                       "27ba78a6-ad00-4f09-928e-488062bee642", "40606e99-47ac-46c5-9fa1-deaeff79ce69"),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    List.class, option));
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            UpdateCampaignListOptions updatecampaignlistoptions1 = new UpdateCampaignListOptions(Integer.valueOf(-29),
                                                                                                 Long.valueOf(0),
                                                                                                 Order.getDefault(),
                                                                                                 "d9b34b55-247e-4b5a-b232-f9f7a4a36398",
                                                                                                 null, null);
            UpdateCampaignListOptions updatecampaignlistoptions2 = new UpdateCampaignListOptions(Integer.valueOf(-29),
                                                                                                 Long.valueOf(0),
                                                                                                 Order.getDefault(),
                                                                                                 "d9b34b55-247e-4b5a-b232-f9f7a4a36398",
                                                                                                 null, null);
            assertNotNull(updatecampaignlistoptions1);
            assertNotNull(updatecampaignlistoptions2);
            assertNotSame(updatecampaignlistoptions2, updatecampaignlistoptions1);
            assertEquals(updatecampaignlistoptions2, updatecampaignlistoptions1);
            assertEquals(updatecampaignlistoptions2.hashCode(), updatecampaignlistoptions1.hashCode());
            int hashCode = updatecampaignlistoptions1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, updatecampaignlistoptions1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            UpdateCampaignListOptions updatecampaignlistoptions1 = new UpdateCampaignListOptions(Integer.valueOf(90),
                                                                                                 Long.valueOf(4),
                                                                                                 Order.getDefault(),
                                                                                                 "c0d5e65a-b01f-40dc-84e0-8c026422c0fd",
                                                                                                 null, null);
            UpdateCampaignListOptions updatecampaignlistoptions2 = new UpdateCampaignListOptions(Integer.valueOf(90),
                                                                                                 Long.valueOf(4),
                                                                                                 Order.getDefault(),
                                                                                                 "c0d5e65a-b01f-40dc-84e0-8c026422c0fd",
                                                                                                 null, null);
            UpdateCampaignListOptions updatecampaignlistoptions3 = new UpdateCampaignListOptions(Integer.valueOf(8),
                                                                                                 Long.valueOf(37),
                                                                                                 Order.getDefault(),
                                                                                                 "ddd8e142-f687-44dd-b30f-3003fc248cc8",
                                                                                                 null, null);
            assertNotNull(updatecampaignlistoptions1);
            assertNotNull(updatecampaignlistoptions2);
            assertNotNull(updatecampaignlistoptions3);
            assertNotSame(updatecampaignlistoptions2, updatecampaignlistoptions1);
            assertNotSame(updatecampaignlistoptions3, updatecampaignlistoptions1);
            assertEquals(updatecampaignlistoptions2, updatecampaignlistoptions1);
            assertEquals(updatecampaignlistoptions2, updatecampaignlistoptions1);
            assertEquals(updatecampaignlistoptions1, updatecampaignlistoptions2);
            assertEquals(updatecampaignlistoptions1, updatecampaignlistoptions1);
            assertFalse(updatecampaignlistoptions1.equals(null));
            assertNotEquals(updatecampaignlistoptions3, updatecampaignlistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
