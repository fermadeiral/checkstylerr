// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.deviceupdate.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model FirmwareImage.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestFirmwareImage {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            FirmwareImage firmwareimage1 = new FirmwareImage(new Date(1562663762296L),
                                                             "c2e671c5-e048-4cbc-8b44-6167b68a239b", 58,
                                                             "dd07e9fa-ff66-4c39-8752-7b1c659ab418",
                                                             "78c6e491-605f-45f3-ba8a-645df59aac79",
                                                             "0fc204cf-d083-4841-b618-7bbf7aa7c968",
                                                             "7c305da1-f621-4c79-8c7d-4cf4b003f75d",
                                                             new Date(1562663760144L));
            FirmwareImage firmwareimage2 = firmwareimage1.clone();
            assertNotNull(firmwareimage1);
            assertNotNull(firmwareimage2);
            assertNotSame(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage2, firmwareimage1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            FirmwareImage firmwareimage1 = new FirmwareImage(new Date(1562663760433L),
                                                             "c928a043-6305-45f7-89a7-75ada2ffcecf", 1,
                                                             "20529305-f9db-4645-b090-c991e362e327",
                                                             "de4e9335-2a6f-45ed-831c-0d9ddd8a1c66",
                                                             "ebc16e8b-ec52-4954-bc53-7cdd9e924336",
                                                             "c3bd1e94-fc17-479b-b54b-af8d2d0773a2",
                                                             new Date(1562663759194L));
            FirmwareImage firmwareimage2 = new FirmwareImage(new Date(1562663760433L),
                                                             "c928a043-6305-45f7-89a7-75ada2ffcecf", 1,
                                                             "20529305-f9db-4645-b090-c991e362e327",
                                                             "de4e9335-2a6f-45ed-831c-0d9ddd8a1c66",
                                                             "ebc16e8b-ec52-4954-bc53-7cdd9e924336",
                                                             "c3bd1e94-fc17-479b-b54b-af8d2d0773a2",
                                                             new Date(1562663759194L));
            assertNotNull(firmwareimage1);
            assertNotNull(firmwareimage2);
            assertNotSame(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage2.hashCode(), firmwareimage1.hashCode());
            int hashCode = firmwareimage1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, firmwareimage1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        FirmwareImage firmwareimage = new FirmwareImage(new Date(1562663761339L),
                                                        "2b133434-e76a-4ae9-810b-8887d38c744b", -52,
                                                        "5b618c05-783e-49cf-b06b-7a59fe42fe53",
                                                        "b31f2031-6475-4aad-b01b-ce14b11080b9",
                                                        "62210bd0-2153-4527-8b6c-b56e51f1ef80",
                                                        "55e60ea8-258d-4196-9e43-235febec459d",
                                                        new Date(1562663765107L));
        assertTrue(firmwareimage.isValid());
        FirmwareImage firmwareimageInvalid = new FirmwareImage(new Date(1562663764550L),
                                                               "bf0d948e-8bf8-48b4-b9d6-28ae1242da14", -74,
                                                               "51b80e10-4b02-4731-8425-23fc6fd2a7ae",
                                                               "75d8b09f-5005-4f34-b123-3ef302000813e57aa445-ea8e-441b-83f1-6d752740bcbdb3cad95a-646a-46d6-8c2d-4175344034cb23c50a51-62bb-4a07-99f4-a0ecd5aa87b5836e4ecf-342e-4bf7-add5-337edd6115e02c3d1215-caef-4a1b-b614-2762282f04fd9c192e2e-9d53-4638-98e7-47ac059508446b9c5c3b-658a-45b4-840e-9c7e91dc45ba86bceb12-9d76-4dc0-9cd0-896457053fd012ca9157-c31c-47e3-83d8-29f7437f74978740a8ba-e9ee-436a-9421-860d2e97a26990739d12-fac7-4c27-b5b3-781d2ac977bc927a9f63-dc28-4fec-8087-c420cfc956a0a7db57ea-7964-414f-ab9a-e906876770bd6a4d2685-f4f6-428c-ae13-79c84aa0ccc7d0121730-c7e2-4d8a-9874-bb2da50dd200121272c8-903c-4269-915f-3cd6144e6fdc44a293f2-08f3-46f0-b9ae-0a059e0895456c6f47a2-ba9e-4b2e-98ab-70d54888ad8a5cabe2cb-81ee-4d3a-8fba-b523d58794be3e67c488-406c-48e8-8204-073c07882a7aff6d8c10-9f7c-4790-8e0a-f4192b0d36155bad4341-992f-4408-abdb-5a4609957b09bb416eb0-612e-428f-b62a-ae34e3c005aedf220ecf-5ca7-4df6-a13b-a848c334c60426925c59-9eda-466b-baff-6738e423e68c2aceefab-939a-4307-a5db-8ee2291a7e725528ec1f-c585-434f-9546-eca05ea6a3aa98333d2a-a6b9-461c-ae08-980c53666736868a6390-e405-45ab-ac8e-14f6ef476743fbf6cd93-6b33-4b6a-b8ac-bdcf9a7be493f5efadc7-7842-46ea-be50-b4876127e815175403c9-2d3c-474d-8e43-c0e59389075cebe030c7-6f5f-487d-a735-93994b6b052c22fbc635-7e64-42e5-8940-27924b772117a34c1b2f-bb2d-4da0-a2d6-a823620b7b0c2ccd6a52-8e09-483f-8457-9c6f9d220899bec06694-0d1e-4fda-9976-42405c0b6da2e2cfce1b-5145-4920-81b9-11c06801f632c1649ceb-1821-4b57-8945-dc838a5b8eef181fd814-5ea4-4ff4-b085-74d4af2962153ac4190a-bd37-4418-a5ff-83b72358fe13805ac94b-4e8a-4537-a0d6-be909b96b913d0206d58-221c-4fac-a035-e5c38a84ed49ab403744-098d-435a-8e7e-ed9b9e6231c2924098e6-79f3-42b5-ae41-b1f88eb05a190f60c853-9d16-405b-8f83-6486d8d978d1fee1f2ad-a69b-4df5-b283-03f4a9364dcf344aac72-2f2e-4e2b-a204-b457a1905b8b538f5aa6-d80b-41eb-8d23-1be03d37045a2d612517-aa2b-42a0-8f31-71c34dfd5672fb881fd0-8eae-4ae5-8757-b710c713e170d646ec11-5ec5-4144-8790-81ac3b8c561592f1add2-357f-44c8-b947-88a607f38aaa88476160-547c-416e-bdbd-1e3377d61f471a0726a5-5e6a-4df6-8b50-97c3196658ea",
                                                               "75f88a58-afe1-4c0f-aee1-0beb35f86823",
                                                               "54d96977-4042-408a-98e3-72e7f2a6636584bc231f-760e-4933-b63f-92304f70e01f4dafad39-f969-4441-bf0a-7f44e9b6dbdd819d6165-febf-47ab-9740-6c7e4da34282",
                                                               new Date(1562663764693L));
        assertFalse(firmwareimageInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            FirmwareImage firmwareimage1 = new FirmwareImage(new Date(1562663764748L),
                                                             "94d11e9c-7953-437f-903c-02c61fd52a2a", -66,
                                                             "25cdbb48-1717-4b96-9e6c-f62c22f8837f",
                                                             "7812c230-f5ed-4944-a1e8-73a6818861e4",
                                                             "3ef8a0a1-06bb-41e3-8198-b10dec3839e7",
                                                             "9d643460-462f-4606-b47f-96a2b04927d6",
                                                             new Date(1562663765483L));
            FirmwareImage firmwareimage2 = new FirmwareImage(new Date(1562663764748L),
                                                             "94d11e9c-7953-437f-903c-02c61fd52a2a", -66,
                                                             "25cdbb48-1717-4b96-9e6c-f62c22f8837f",
                                                             "7812c230-f5ed-4944-a1e8-73a6818861e4",
                                                             "3ef8a0a1-06bb-41e3-8198-b10dec3839e7",
                                                             "9d643460-462f-4606-b47f-96a2b04927d6",
                                                             new Date(1562663765483L));
            FirmwareImage firmwareimage3 = new FirmwareImage(new Date(1562663760761L),
                                                             "3df55bc3-ac43-45c6-893e-51ec97aa57ef", -42,
                                                             "17c7da5a-379c-4cca-85c4-eba8ca782af2",
                                                             "ec1244e5-899b-4cdb-91e5-341abb31ef2b",
                                                             "68cffb67-b7f7-4b76-99ff-6b5bbde4b51e",
                                                             "3a596fc7-7306-4f43-9178-88a442af00d5",
                                                             new Date(1562663762917L));
            assertNotNull(firmwareimage1);
            assertNotNull(firmwareimage2);
            assertNotNull(firmwareimage3);
            assertNotSame(firmwareimage2, firmwareimage1);
            assertNotSame(firmwareimage3, firmwareimage1);
            assertEquals(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage1, firmwareimage2);
            assertEquals(firmwareimage1, firmwareimage1);
            assertFalse(firmwareimage1.equals(null));
            assertNotEquals(firmwareimage3, firmwareimage1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
