// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEnrollment.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEnrollment {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEnrollment deviceenrollment1 = new DeviceEnrollment("79cfb964-c67f-41a9-9463-071550b132e9",
                                                                      new Date(1562663759933L),
                                                                      new Date(1562663757320L),
                                                                      "SlVoFLzs113WM0Egl6QlKU6Lrt7K6Zn3",
                                                                      "A-4VwDPc3p5R8pMhS5EU19w41te4ohvRdJ:z8v4FZ5WfcTyHi1VqzAzPRL3TKxYTz0pka4:4YQUbpKB3A22E4fnykVzYa9IZ0",
                                                                      new Date(1562663762542L),
                                                                      "SlVoFLzs113WM0Egl6QlKU6Lrt7K6Zn3");
            DeviceEnrollment deviceenrollment2 = deviceenrollment1.clone();
            assertNotNull(deviceenrollment1);
            assertNotNull(deviceenrollment2);
            assertNotSame(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEnrollment deviceenrollment1 = new DeviceEnrollment("c357ffd2-fe16-47bb-96ec-385757ed5de5",
                                                                      new Date(1562663765556L),
                                                                      new Date(1562663760927L),
                                                                      "SlVoFLzs113WM0Egl6QlKU6Lrt7K6Zn3",
                                                                      "A-4VwDPc3p5R8pMhS5EU19w41te4ohvRdJ:z8v4FZ5WfcTyHi1VqzAzPRL3TKxYTz0pka4:4YQUbpKB3A22E4fnykVzYa9IZ0",
                                                                      new Date(1562663763541L),
                                                                      "SlVoFLzs113WM0Egl6QlKU6Lrt7K6Zn3");
            DeviceEnrollment deviceenrollment2 = new DeviceEnrollment("c357ffd2-fe16-47bb-96ec-385757ed5de5",
                                                                      new Date(1562663765556L),
                                                                      new Date(1562663760927L),
                                                                      "SlVoFLzs113WM0Egl6QlKU6Lrt7K6Zn3",
                                                                      "A-4VwDPc3p5R8pMhS5EU19w41te4ohvRdJ:z8v4FZ5WfcTyHi1VqzAzPRL3TKxYTz0pka4:4YQUbpKB3A22E4fnykVzYa9IZ0",
                                                                      new Date(1562663763541L),
                                                                      "SlVoFLzs113WM0Egl6QlKU6Lrt7K6Zn3");
            assertNotNull(deviceenrollment1);
            assertNotNull(deviceenrollment2);
            assertNotSame(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2.hashCode(), deviceenrollment1.hashCode());
            int hashCode = deviceenrollment1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceenrollment1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEnrollment deviceenrollment = new DeviceEnrollment("66e25e2a-94d6-4062-882e-9b89fdae15ad",
                                                                 new Date(1562663764594L), new Date(1562663761449L),
                                                                 "SlVoFLzs113WM0Egl6QlKU6Lrt7K6Zn3",
                                                                 "A-4VwDPc3p5R8pMhS5EU19w41te4ohvRdJ:z8v4FZ5WfcTyHi1VqzAzPRL3TKxYTz0pka4:4YQUbpKB3A22E4fnykVzYa9IZ0",
                                                                 new Date(1562663756392L),
                                                                 "SlVoFLzs113WM0Egl6QlKU6Lrt7K6Zn3");
        assertTrue(deviceenrollment.isValid());
        DeviceEnrollment deviceenrollmentInvalid = new DeviceEnrollment("84dd76fa-0abb-4de7-ae9d-e7a4e3a78c5e",
                                                                        new Date(1562663763986L),
                                                                        new Date(1562663763985L),
                                                                        "XXN\u0018YC2pHaf韪TPc@2RcTy55Omh\u000e2OfdwTTRm\\\\m=kTuAwYfX(mTqJRmI筡 5>5jp2",
                                                                        null, new Date(1562663758486L),
                                                                        "XXN\u0018YC2pHaf韪TPc@2RcTy55Omh\u000e2OfdwTTRm\\\\m=kTuAwYfX(mTqJRmI筡 5>5jp2");
        assertFalse(deviceenrollmentInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEnrollment deviceenrollment1 = new DeviceEnrollment("394bbb68-4053-48a7-a2c9-0e35e8ad97e4",
                                                                      new Date(1562663762045L),
                                                                      new Date(1562663756898L),
                                                                      "SlVoFLzs113WM0Egl6QlKU6Lrt7K6Zn3",
                                                                      "A-4VwDPc3p5R8pMhS5EU19w41te4ohvRdJ:z8v4FZ5WfcTyHi1VqzAzPRL3TKxYTz0pka4:4YQUbpKB3A22E4fnykVzYa9IZ0",
                                                                      new Date(1562663758551L),
                                                                      "SlVoFLzs113WM0Egl6QlKU6Lrt7K6Zn3");
            DeviceEnrollment deviceenrollment2 = new DeviceEnrollment("394bbb68-4053-48a7-a2c9-0e35e8ad97e4",
                                                                      new Date(1562663762045L),
                                                                      new Date(1562663756898L),
                                                                      "SlVoFLzs113WM0Egl6QlKU6Lrt7K6Zn3",
                                                                      "A-4VwDPc3p5R8pMhS5EU19w41te4ohvRdJ:z8v4FZ5WfcTyHi1VqzAzPRL3TKxYTz0pka4:4YQUbpKB3A22E4fnykVzYa9IZ0",
                                                                      new Date(1562663758551L),
                                                                      "SlVoFLzs113WM0Egl6QlKU6Lrt7K6Zn3");
            DeviceEnrollment deviceenrollment3 = new DeviceEnrollment("786a74ff-d4d5-4d9e-8f8b-14b1dc543734",
                                                                      new Date(1562663757649L),
                                                                      new Date(1562663765588L),
                                                                      "SlVoFLzs113WM0Egl6QlKU6Lrt7K6Zn3",
                                                                      "A-4VwDPc3p5R8pMhS5EU19w41te4ohvRdJ:z8v4FZ5WfcTyHi1VqzAzPRL3TKxYTz0pka4:4YQUbpKB3A22E4fnykVzYa9IZ0",
                                                                      new Date(1562663757903L),
                                                                      "SlVoFLzs113WM0Egl6QlKU6Lrt7K6Zn3");
            assertNotNull(deviceenrollment1);
            assertNotNull(deviceenrollment2);
            assertNotNull(deviceenrollment3);
            assertNotSame(deviceenrollment2, deviceenrollment1);
            assertNotSame(deviceenrollment3, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment1, deviceenrollment2);
            assertEquals(deviceenrollment1, deviceenrollment1);
            assertFalse(deviceenrollment1.equals(null));
            assertNotEquals(deviceenrollment3, deviceenrollment1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
