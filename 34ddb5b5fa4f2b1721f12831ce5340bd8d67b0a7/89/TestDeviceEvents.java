// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEvents.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEvents {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1562663765523L), null,
                                                          new Date(1562663760563L),
                                                          "92ac990d-d596-4595-a1f4-7a0626a2fda0",
                                                          "be019285-f101-488c-8d5e-1fdbee4ba72c",
                                                          "5c4a9ac2-3dd3-4971-9cee-6c3b34b857d4",
                                                          "4442dfba-9546-4275-bbaf-1aba6d7dbdfd",
                                                          "35e22a4d-d82c-4a1f-9398-995490a5041b",
                                                          "624e36bf-1bd2-4e8d-88a0-0466505187da", true);
            DeviceEvents deviceevents2 = deviceevents1.clone();
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1562663761044L), null,
                                                          new Date(1562663763088L),
                                                          "c6f0ca44-d4f5-4388-a4ed-9b19ca57fc1b",
                                                          "660dd598-0802-45b4-97c4-33ffada26324",
                                                          "4ca1abbd-41bb-4c9f-aa5f-003a43428c63",
                                                          "20d52f5f-d4c6-434a-9a83-e5fd1bd9f1da",
                                                          "f13a0700-ca9c-41e9-84bf-610c2498d1bd",
                                                          "465a4262-7ea3-482b-b109-c442f7563439", false);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1562663761044L), null,
                                                          new Date(1562663763088L),
                                                          "c6f0ca44-d4f5-4388-a4ed-9b19ca57fc1b",
                                                          "660dd598-0802-45b4-97c4-33ffada26324",
                                                          "4ca1abbd-41bb-4c9f-aa5f-003a43428c63",
                                                          "20d52f5f-d4c6-434a-9a83-e5fd1bd9f1da",
                                                          "f13a0700-ca9c-41e9-84bf-610c2498d1bd",
                                                          "465a4262-7ea3-482b-b109-c442f7563439", false);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2.hashCode(), deviceevents1.hashCode());
            int hashCode = deviceevents1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceevents1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEvents deviceevents = new DeviceEvents(null, new Date(1562663760514L), null, new Date(1562663761599L),
                                                     "039c7483-1e99-43bb-98e4-0cfca924a8c1",
                                                     "a6d24a8e-0ad8-4273-a5fc-1e5e0e8ffa8f",
                                                     "31b7abc6-b13e-41eb-b0a1-528eafb04ee6",
                                                     "6c2e3216-4026-4477-b45f-e3fe628aef8e",
                                                     "ca7c009f-ea44-488c-a7aa-b856304cb7d1",
                                                     "9aaec1bb-489e-407c-a98d-9a00a43e4ed3", true);
        assertTrue(deviceevents.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1562663765348L), null,
                                                          new Date(1562663756519L),
                                                          "c7570cb6-c3e6-4ef4-8940-a8048b0f09dc",
                                                          "0199e81a-217b-4a90-a583-e056fc395a52",
                                                          "86a60495-9646-476e-bea0-3d0cb0ee2725",
                                                          "4dcfd828-a939-46dc-b608-25c695465c6b",
                                                          "b1cc00aa-a9ce-4102-bda4-d9e351a45ffc",
                                                          "d4048c38-8dbf-43cd-a5ab-31b393c276ca", true);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1562663765348L), null,
                                                          new Date(1562663756519L),
                                                          "c7570cb6-c3e6-4ef4-8940-a8048b0f09dc",
                                                          "0199e81a-217b-4a90-a583-e056fc395a52",
                                                          "86a60495-9646-476e-bea0-3d0cb0ee2725",
                                                          "4dcfd828-a939-46dc-b608-25c695465c6b",
                                                          "b1cc00aa-a9ce-4102-bda4-d9e351a45ffc",
                                                          "d4048c38-8dbf-43cd-a5ab-31b393c276ca", true);
            DeviceEvents deviceevents3 = new DeviceEvents(null, new Date(1562663765354L), null,
                                                          new Date(1562663764983L),
                                                          "dcf42449-7c16-424b-80d4-ed209ef20438",
                                                          "35dcae1f-cd3e-43ed-a1d5-8a1c62c90c32",
                                                          "9dbfbe9e-7a9a-4244-a5da-00714f4a3335",
                                                          "84cbf00b-5829-4abd-8fff-fd9c739182b5",
                                                          "efe4b50e-f505-4b8e-8d95-7dfede8f1241",
                                                          "a7b138e4-39e0-49a1-a9ff-67a577c66ea1", true);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotNull(deviceevents3);
            assertNotSame(deviceevents2, deviceevents1);
            assertNotSame(deviceevents3, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents1, deviceevents2);
            assertEquals(deviceevents1, deviceevents1);
            assertFalse(deviceevents1.equals(null));
            assertNotEquals(deviceevents3, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
