// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantApiKey.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantApiKey {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("a5fdd8ccb79ecfcc089719469de69b9b",
                                                                   new Date(1562663756238L), -4,
                                                                   "a5fdd8ccb79ecfcc089719469de69b9b",
                                                                   "4970eab0-c8fd-46aa-8583-8ea6caf3bfd0", 118,
                                                                   "05bf0f0e-0972-4958-9aed-e547bcdef446",
                                                                   "a5fdd8ccb79ecfcc089719469de69b9b",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1562663756442L));
            SubtenantApiKey subtenantapikey2 = subtenantapikey1.clone();
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("a5fdd8ccb79ecfcc089719469de69b9b",
                                                                   new Date(1562663761062L), 104,
                                                                   "a5fdd8ccb79ecfcc089719469de69b9b",
                                                                   "71947817-6553-4ced-b316-a517875a0a9d", -49,
                                                                   "d53dd79b-d605-4b74-992b-95184ec25892",
                                                                   "a5fdd8ccb79ecfcc089719469de69b9b",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1562663765888L));
            SubtenantApiKey subtenantapikey2 = new SubtenantApiKey("a5fdd8ccb79ecfcc089719469de69b9b",
                                                                   new Date(1562663761062L), 104,
                                                                   "a5fdd8ccb79ecfcc089719469de69b9b",
                                                                   "71947817-6553-4ced-b316-a517875a0a9d", -49,
                                                                   "d53dd79b-d605-4b74-992b-95184ec25892",
                                                                   "a5fdd8ccb79ecfcc089719469de69b9b",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1562663765888L));
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2.hashCode(), subtenantapikey1.hashCode());
            int hashCode = subtenantapikey1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantapikey1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantApiKey subtenantapikey = new SubtenantApiKey("a5fdd8ccb79ecfcc089719469de69b9b",
                                                              new Date(1562663763582L), -93,
                                                              "a5fdd8ccb79ecfcc089719469de69b9b",
                                                              "a68c959f-0b8b-41c3-9b0a-6cbc23af6931", -9,
                                                              "46afb0f0-bed1-47c6-b542-36d08bd366b3",
                                                              "a5fdd8ccb79ecfcc089719469de69b9b",
                                                              SubtenantApiKeyStatus.getDefault(),
                                                              new Date(1562663757335L));
        assertTrue(subtenantapikey.isValid());
        SubtenantApiKey subtenantapikeyInvalid = new SubtenantApiKey(null, new Date(1562663763729L), 96,
                                                                     "\u0006Oç¥‰ä©³L\u0007-\u0019$$áŽ¼<#2,%33áŽŸ3U3\bã•§äª¹Sï‚µ$$\u000e?3\u0016é¤‹3\u0015GYêšƒ3R\u0001á£¼`2è½?2\u000eà¨—\u0012è™°á†Š]\u0016[?\u000f!3 @2V",
                                                                     "62348cd3-1364-4905-9e2d-544893411987", -21, null,
                                                                     "\u0006Oç¥‰ä©³L\u0007-\u0019$$áŽ¼<#2,%33áŽŸ3U3\bã•§äª¹Sï‚µ$$\u000e?3\u0016é¤‹3\u0015GYêšƒ3R\u0001á£¼`2è½?2\u000eà¨—\u0012è™°á†Š]\u0016[?\u000f!3 @2V",
                                                                     SubtenantApiKeyStatus.getDefault(),
                                                                     new Date(1562663760476L));
        assertFalse(subtenantapikeyInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("a5fdd8ccb79ecfcc089719469de69b9b",
                                                                   new Date(1562663759054L), 45,
                                                                   "a5fdd8ccb79ecfcc089719469de69b9b",
                                                                   "f9cc94c4-1a64-4149-bc0b-646fa1029e0b", 5,
                                                                   "bdaf46c2-5674-4d9d-9727-89b559398065",
                                                                   "a5fdd8ccb79ecfcc089719469de69b9b",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1562663765416L));
            SubtenantApiKey subtenantapikey2 = new SubtenantApiKey("a5fdd8ccb79ecfcc089719469de69b9b",
                                                                   new Date(1562663759054L), 45,
                                                                   "a5fdd8ccb79ecfcc089719469de69b9b",
                                                                   "f9cc94c4-1a64-4149-bc0b-646fa1029e0b", 5,
                                                                   "bdaf46c2-5674-4d9d-9727-89b559398065",
                                                                   "a5fdd8ccb79ecfcc089719469de69b9b",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1562663765416L));
            SubtenantApiKey subtenantapikey3 = new SubtenantApiKey("a5fdd8ccb79ecfcc089719469de69b9b",
                                                                   new Date(1562663757307L), 49,
                                                                   "a5fdd8ccb79ecfcc089719469de69b9b",
                                                                   "06f9fa93-f208-4be1-a0a9-d6c19cf156d7", -52,
                                                                   "176527e3-b055-47c9-ba24-dcbbf6a5095c",
                                                                   "a5fdd8ccb79ecfcc089719469de69b9b",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1562663759692L));
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotNull(subtenantapikey3);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertNotSame(subtenantapikey3, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey1, subtenantapikey2);
            assertEquals(subtenantapikey1, subtenantapikey1);
            assertFalse(subtenantapikey1.equals(null));
            assertNotEquals(subtenantapikey3, subtenantapikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
