// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model ActiveSession.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestActiveSession {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ActiveSession activesession1 = new ActiveSession("a5fdd8ccb79ecfcc089719469de69b9b",
                                                             "3eca4b28-11a6-4fb4-98bb-4325ea348019",
                                                             new Date(1562663757067L),
                                                             "8b7deffe-a424-4672-aa74-654f033e3671",
                                                             "0950648b-6097-4274-9118-98b136416306");
            ActiveSession activesession2 = activesession1.clone();
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotSame(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ActiveSession activesession1 = new ActiveSession("a5fdd8ccb79ecfcc089719469de69b9b",
                                                             "77388d0d-3c3d-4ba0-ad3e-bff008b53839",
                                                             new Date(1562663764729L),
                                                             "c0bd1d29-6855-41b0-a03e-0493d1e14dc1",
                                                             "976a48de-80d0-43a3-a4f8-572bd0b2a598");
            ActiveSession activesession2 = new ActiveSession("a5fdd8ccb79ecfcc089719469de69b9b",
                                                             "77388d0d-3c3d-4ba0-ad3e-bff008b53839",
                                                             new Date(1562663764729L),
                                                             "c0bd1d29-6855-41b0-a03e-0493d1e14dc1",
                                                             "976a48de-80d0-43a3-a4f8-572bd0b2a598");
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotSame(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession2.hashCode(), activesession1.hashCode());
            int hashCode = activesession1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, activesession1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ActiveSession activesession = new ActiveSession("a5fdd8ccb79ecfcc089719469de69b9b",
                                                        "83cdc9a4-7865-4411-ab9b-0e7532bd7c2a",
                                                        new Date(1562663756417L),
                                                        "82b0a767-6240-4e4f-b1f2-992c7ff4c9e6",
                                                        "fd4294fd-a912-47e1-97cb-679acc2f8ee0");
        assertTrue(activesession.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ActiveSession activesession1 = new ActiveSession("a5fdd8ccb79ecfcc089719469de69b9b",
                                                             "b691d8d1-9195-4772-9170-2b13d1d4ada4",
                                                             new Date(1562663762916L),
                                                             "50a6db7f-242c-4858-9feb-153725fd5c92",
                                                             "32853965-05a6-4f2d-b492-0143d6b75003");
            ActiveSession activesession2 = new ActiveSession("a5fdd8ccb79ecfcc089719469de69b9b",
                                                             "b691d8d1-9195-4772-9170-2b13d1d4ada4",
                                                             new Date(1562663762916L),
                                                             "50a6db7f-242c-4858-9feb-153725fd5c92",
                                                             "32853965-05a6-4f2d-b492-0143d6b75003");
            ActiveSession activesession3 = new ActiveSession("a5fdd8ccb79ecfcc089719469de69b9b",
                                                             "52a8d17f-2114-49f9-8729-c3e08c0cb601",
                                                             new Date(1562663763862L),
                                                             "287624ef-974a-4e17-b0fb-fe6949c47a72",
                                                             "c593a3a4-e077-4c94-8c00-546809eea3ff");
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotNull(activesession3);
            assertNotSame(activesession2, activesession1);
            assertNotSame(activesession3, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession1, activesession2);
            assertEquals(activesession1, activesession1);
            assertFalse(activesession1.equals(null));
            assertNotEquals(activesession3, activesession1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
