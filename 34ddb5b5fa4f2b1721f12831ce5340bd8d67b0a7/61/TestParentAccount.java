// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model ParentAccount.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestParentAccount {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("9dc95.d587e@c8c32.fr",
                                                             "5b2378e6-60c5-4992-8f86-372400237282",
                                                             "a5fdd8ccb79ecfcc089719469de69b9b");
            ParentAccount parentaccount2 = parentaccount1.clone();
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotSame(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("da19b.f4c7d@bd0d1.fr",
                                                             "fe270488-7d3a-4018-a210-2db63d814edb",
                                                             "a5fdd8ccb79ecfcc089719469de69b9b");
            ParentAccount parentaccount2 = new ParentAccount("da19b.f4c7d@bd0d1.fr",
                                                             "fe270488-7d3a-4018-a210-2db63d814edb",
                                                             "a5fdd8ccb79ecfcc089719469de69b9b");
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotSame(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount2.hashCode(), parentaccount1.hashCode());
            int hashCode = parentaccount1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, parentaccount1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ParentAccount parentaccount = new ParentAccount("6a160.4c353@e8846.me", "0efb756f-6d75-4d90-ad9e-ef368192106f",
                                                        "a5fdd8ccb79ecfcc089719469de69b9b");
        assertTrue(parentaccount.isValid());
        ParentAccount parentaccountInvalid = new ParentAccount(" \u0006<ê®¬ë³šï¾¨>!ï¾¬æš¡ã£­ï¿ \t\u0000î‚‡\u0016\u0015>î“ž>\u000e\tã„‡äœ§ì„³ä’¥\u001eé¯­ê®?äž³ì‡’ë½?\u000f\u000f\u0018\u0000ê¬ ï…€\t\u0000\u001e\u0015\u001a\u0000ã¥‹ã¸­ê¬«ã¼€%ï½ŽëŒªè¼¦\u001f\u0004\u0003\u0004ä•³\f\u0000\u0015?ëŠˆï½—ç®±",
                                                               "275c2b41-d80d-4f00-b694-509fd90dda834d88b7ad-e3cb-4abd-99bf-41fbe5171e1461c2849e-d6e4-454e-bbf6-a06a2249c98d",
                                                               "\u0006Oç¥‰ä©³L\u0007-\u0019$$áŽ¼<#2,%33áŽŸ3U3\bã•§äª¹Sï‚µ$$\u000e?3\u0016é¤‹3\u0015GYêšƒ3R\u0001á£¼`2è½?2\u000eà¨—\u0012è™°á†Š]\u0016[?\u000f!3 @2V");
        assertFalse(parentaccountInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("0a55d.272f4@6f927.me",
                                                             "5e1eb078-cc7a-49d4-9ca0-113ab67e4c99",
                                                             "a5fdd8ccb79ecfcc089719469de69b9b");
            ParentAccount parentaccount2 = new ParentAccount("0a55d.272f4@6f927.me",
                                                             "5e1eb078-cc7a-49d4-9ca0-113ab67e4c99",
                                                             "a5fdd8ccb79ecfcc089719469de69b9b");
            ParentAccount parentaccount3 = new ParentAccount("c9107.7cbe8@39a07.me",
                                                             "47b6f00f-59a7-46b7-b8f1-d39cba62920c",
                                                             "a5fdd8ccb79ecfcc089719469de69b9b");
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotNull(parentaccount3);
            assertNotSame(parentaccount2, parentaccount1);
            assertNotSame(parentaccount3, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount1, parentaccount2);
            assertEquals(parentaccount1, parentaccount1);
            assertFalse(parentaccount1.equals(null));
            assertNotEquals(parentaccount3, parentaccount1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
