// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.security.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeveloperCertificate.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeveloperCertificate {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("d4ca6710-7fc9-4c94-99e4-ed56d527b40f",
                                                                                  "4d2ae3ec-06b9-490a-8a4b-29ccc78ca3aa",
                                                                                  new Date(1562663759184L),
                                                                                  "0536d7e8-6437-484c-8e7a-2a1a1d032538",
                                                                                  "4016dc06-3a22-4870-87cd-d2ee0174aa8f",
                                                                                  "c56b9e8f-b657-4124-84db-3a538988a610",
                                                                                  "f75ceeed-1cdd-4ab6-8be7-5baac6f5fb24",
                                                                                  "16e0cde9-81a1-4bb8-898c-1762a4c5ffcf");
            DeveloperCertificate developercertificate2 = developercertificate1.clone();
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("427012e6-4b94-41a8-969c-8616310bda41",
                                                                                  "e25a8a4f-2bb6-4d78-ac8f-a60bb58f8bcf",
                                                                                  new Date(1562663763014L),
                                                                                  "a770d281-2e79-4065-8db2-808e3bfe3a80",
                                                                                  "44daf165-aae8-4837-b7a2-351b8a095b52",
                                                                                  "30596ff7-29f0-4155-8457-a3d0134158f8",
                                                                                  "ed20f54c-d75e-4d87-af64-c3d0781a9170",
                                                                                  "711baff4-e369-4027-b62d-bb0092bb8194");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("427012e6-4b94-41a8-969c-8616310bda41",
                                                                                  "e25a8a4f-2bb6-4d78-ac8f-a60bb58f8bcf",
                                                                                  new Date(1562663763014L),
                                                                                  "a770d281-2e79-4065-8db2-808e3bfe3a80",
                                                                                  "44daf165-aae8-4837-b7a2-351b8a095b52",
                                                                                  "30596ff7-29f0-4155-8457-a3d0134158f8",
                                                                                  "ed20f54c-d75e-4d87-af64-c3d0781a9170",
                                                                                  "711baff4-e369-4027-b62d-bb0092bb8194");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2.hashCode(), developercertificate1.hashCode());
            int hashCode = developercertificate1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, developercertificate1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeveloperCertificate developercertificate = new DeveloperCertificate("51795028-1951-464d-88db-44cc7da37f6a",
                                                                             "4cb56379-c709-43d4-a074-5cd83e839ab3",
                                                                             new Date(1562663759990L),
                                                                             "0bd858a1-8710-4e94-ba52-8f0cf4910326",
                                                                             "128d883b-c4d3-4b7b-9c4b-b0d01166621d",
                                                                             "b282416d-0a8a-475d-ace6-7d25b7b25753",
                                                                             "3298ba21-acd4-4764-970d-242fa14d0ead",
                                                                             "3085f2db-0c3f-4719-bc8f-fc3b4b83817c");
        assertTrue(developercertificate.isValid());
        DeveloperCertificate developercertificateInvalid = new DeveloperCertificate("21ade37f-447f-4679-aab7-69a3024aed1f",
                                                                                    "4831eb8c-6d13-40a9-914c-0669c899fce7",
                                                                                    new Date(1562663762410L),
                                                                                    "ab46d8e6-f8b9-4fcf-b6ce-79a1737b5f38",
                                                                                    "8089370f-8292-4310-bb75-7de5f424ef4b",
                                                                                    "c4c760e9-60cd-4a8e-8e84-2273b35f0249",
                                                                                    null,
                                                                                    "e97c89b1-6425-4b53-9c0b-110fc07602fd");
        assertFalse(developercertificateInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("9bf68d61-c63d-4267-96a7-0ff17c46c775",
                                                                                  "8b0f79e3-4cea-4ca8-adc8-0815c7d2d5b1",
                                                                                  new Date(1562663762573L),
                                                                                  "ea0eb00e-2bf6-4b6b-a14c-0253486aa6bf",
                                                                                  "b407d84b-eb26-45f5-9ac8-c33b525f8b10",
                                                                                  "aaf3ee58-3748-4830-bf43-a0cdb5c00743",
                                                                                  "95995c08-18bd-459c-9bb3-7840c6e75475",
                                                                                  "5c846849-8540-4927-86b5-f17d2a328319");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("9bf68d61-c63d-4267-96a7-0ff17c46c775",
                                                                                  "8b0f79e3-4cea-4ca8-adc8-0815c7d2d5b1",
                                                                                  new Date(1562663762573L),
                                                                                  "ea0eb00e-2bf6-4b6b-a14c-0253486aa6bf",
                                                                                  "b407d84b-eb26-45f5-9ac8-c33b525f8b10",
                                                                                  "aaf3ee58-3748-4830-bf43-a0cdb5c00743",
                                                                                  "95995c08-18bd-459c-9bb3-7840c6e75475",
                                                                                  "5c846849-8540-4927-86b5-f17d2a328319");
            DeveloperCertificate developercertificate3 = new DeveloperCertificate("573c4370-d42e-4d27-877c-26434c6c4638",
                                                                                  "072ebd56-d4b3-49a1-b395-e3dd7e848ba1",
                                                                                  new Date(1562663761664L),
                                                                                  "1c9b9e10-47c0-4b98-b54a-87a66fe152cf",
                                                                                  "2e0d1ef9-551b-4016-a757-28fa0291710d",
                                                                                  "adec455d-d1b0-484a-a2f1-a2a935d590b8",
                                                                                  "37a56dbe-30f8-4413-b148-3285475f8315",
                                                                                  "69356adc-2dc8-4c9f-922e-13c8c76b2457");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotNull(developercertificate3);
            assertNotSame(developercertificate2, developercertificate1);
            assertNotSame(developercertificate3, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate1, developercertificate2);
            assertEquals(developercertificate1, developercertificate1);
            assertFalse(developercertificate1.equals(null));
            assertNotEquals(developercertificate3, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
