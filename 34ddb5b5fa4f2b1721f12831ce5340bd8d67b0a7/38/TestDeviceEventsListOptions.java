// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import com.arm.mbed.cloud.sdk.common.Order;
import com.arm.mbed.cloud.sdk.common.listing.ListOptionsEncoder;
import com.arm.mbed.cloud.sdk.common.listing.filtering.FilterOperator;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEventsListOptions.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEventsListOptions {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEventsListOptions deviceeventslistoptions1 = new DeviceEventsListOptions(Integer.valueOf(98),
                                                                                           Long.valueOf(-38),
                                                                                           Order.getDefault(),
                                                                                           "acb2592b-9df6-4f7a-bc24-379e93d89aed",
                                                                                           null, null);
            DeviceEventsListOptions deviceeventslistoptions2 = deviceeventslistoptions1.clone();
            assertNotNull(deviceeventslistoptions1);
            assertNotNull(deviceeventslistoptions2);
            assertNotSame(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2, deviceeventslistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the filters method.
     */
    @SuppressWarnings({ "boxing", "resource" })
    @Test
    public void testFilters() {
        try {
            DeviceEventsListOptions option = new DeviceEventsListOptions().equalToDeviceId("0489d851-a571-4ad0-b197-e6c410ba4479")
                                                                          .notEqualToDeviceId("e396a0a5-1967-4200-935d-59241f19cce9")
                                                                          .inDeviceIds(Arrays.asList("b62c9dcd-d9a9-4805-b1f5-983f1d08fb43",
                                                                                                     "035bac20-c69c-4d5c-9490-2f03d0e7c37c",
                                                                                                     "7d21ecbf-c8ff-4075-9530-c10e4bdb138e",
                                                                                                     "e63c02f9-b591-4ac1-92e0-818fd8662754"))
                                                                          .notInDeviceIds(Arrays.asList("e0e33398-068c-4542-872f-8f2a4b84ef71",
                                                                                                        "fcc4de18-aed8-42cc-8028-0bb21db8e42c",
                                                                                                        "cb773ecd-991b-441e-9af1-b537124fd979",
                                                                                                        "30aa835b-1145-4939-8252-de56b4f8a60c",
                                                                                                        "1c30e62a-67a4-4eef-99ce-70a091e834e6"))
                                                                          .equalToDescription("1765161b-e38f-455e-ac85-a0765077139a")
                                                                          .notEqualToDescription("fe5c1763-7cf2-468b-82f8-1360eaa345dd")
                                                                          .inDescriptions(Arrays.asList("e25bca6a-eec2-4299-8a35-68811e379994",
                                                                                                        "dcc3fa42-8477-4f9f-bfc0-0fe0cd2dd68c",
                                                                                                        "e7494d12-c111-4619-9166-002b4bf47926",
                                                                                                        "7fe5f097-2b8d-4dc0-a4b7-0a5801083519",
                                                                                                        "88bd9932-7218-45b4-a7cc-577b7fff30bf"))
                                                                          .notInDescriptions(Arrays.asList("c42da91c-2205-4c12-bb21-7678f497ba1e",
                                                                                                           "13af73a4-a054-48d6-aeda-e0a203ca703e",
                                                                                                           "842e99ee-dd3a-42d6-9124-d3576dc278c8",
                                                                                                           "fd3308c4-6b23-4024-8d0b-b7b40b8f841e"))
                                                                          .inDateTimes(Arrays.asList(new Date(1562663762180L),
                                                                                                     new Date(1562663764845L),
                                                                                                     new Date(1562663765478L),
                                                                                                     new Date(1562663766205L),
                                                                                                     new Date(1562663767231L),
                                                                                                     new Date(1562663758155L),
                                                                                                     new Date(1562663759321L),
                                                                                                     new Date(1562663764327L)))
                                                                          .notInDateTimes(Arrays.asList(new Date(1562663764637L),
                                                                                                        new Date(1562663758101L)))
                                                                          .lessThanDateTime(new Date(1562663764877L))
                                                                          .greaterThanDateTime(new Date(1562663764175L))
                                                                          .equalToStateChange(Boolean.TRUE)
                                                                          .notEqualToStateChange(Boolean.FALSE)
                                                                          .equalToId("9d46d7ad-3cef-4c6c-9763-0cf8a2e4f508")
                                                                          .notEqualToId("0928efab-b661-4c58-9451-225b04c6c7f5")
                                                                          .inIds(Arrays.asList("a156e1a0-d6e8-47a3-b12c-55199846381c",
                                                                                               "3006eb63-4157-4102-91ce-3b45c125aa42",
                                                                                               "e6914edd-6d44-4114-b676-1506a9c9659f",
                                                                                               "2ed1ce6d-654c-4555-a76e-0c5a92b78dbb",
                                                                                               "a03ae6fd-7557-4d5b-8ea0-f29fec605300",
                                                                                               "ca5d08af-0e8f-457a-abb6-32598fbbedb3",
                                                                                               "1dc71b73-c190-4c8f-a48f-4afab1a9b4be"))
                                                                          .notInIds(Arrays.asList("760bcc44-775d-46ea-bb8d-1e71ca0ab1cb",
                                                                                                  "36d6adb9-3e18-4585-b5d3-e09dbd45ec91",
                                                                                                  "ca027348-caa8-46f5-aaf0-4ad5787f5076",
                                                                                                  "2bd9eb30-59c0-4850-9c87-8c1e03591991",
                                                                                                  "1b25f8b1-3ce6-46e3-b106-52be1306be19",
                                                                                                  "733a1967-4c51-4eb3-a2ae-d717e7c079e0",
                                                                                                  "7d2f15bf-1ccc-4a8b-86be-30be430275f2",
                                                                                                  "b7ee1e6f-cf7a-429e-a04a-6fd1bcd6aa32",
                                                                                                  "4194f4b5-6f86-487b-8b12-e9eb502457b9"))
                                                                          .equalToEventType("6333fa7a-db00-4fb5-b877-f01d76312c7a")
                                                                          .notEqualToEventType("e9aff439-3b7d-469d-adee-e9de81750879")
                                                                          .inEventTypes(Arrays.asList("0bdb0dbe-6e7f-4e96-a110-a5ad9600e7ec",
                                                                                                      "f1a6ec39-d3fd-4854-bbab-1d45638c7134"))
                                                                          .notInEventTypes(Arrays.asList("27f5a5f9-5c96-4c27-9bf2-ad097f123e0c",
                                                                                                         "7c2a74aa-351a-46d8-8e8d-447862a3dd9f",
                                                                                                         "36e5e7e9-9135-40a6-9476-7ef9c6373efb",
                                                                                                         "b9bba6ef-5501-4a75-b224-3a9c11da9de7",
                                                                                                         "c0937d19-4a81-42d6-90ed-21f0a451fa0d",
                                                                                                         "78016c1e-cf71-4fe0-8aa2-3c77143d6e12"));
            assertTrue(option.hasFilters());
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID, FilterOperator.EQUAL));
            assertNotNull(option.getDeviceIdFilters());
            assertEquals("0489d851-a571-4ad0-b197-e6c410ba4479",
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDeviceIdFilters());
            assertEquals("e396a0a5-1967-4200-935d-59241f19cce9",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID, FilterOperator.IN));
            assertNotNull(option.getDeviceIdFilters());
            assertEquals(Arrays.asList("b62c9dcd-d9a9-4805-b1f5-983f1d08fb43", "035bac20-c69c-4d5c-9490-2f03d0e7c37c",
                                       "7d21ecbf-c8ff-4075-9530-c10e4bdb138e", "e63c02f9-b591-4ac1-92e0-818fd8662754"),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID,
                                                                 List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getDeviceIdFilters());
            assertEquals(Arrays.asList("e0e33398-068c-4542-872f-8f2a4b84ef71", "fcc4de18-aed8-42cc-8028-0bb21db8e42c",
                                       "cb773ecd-991b-441e-9af1-b537124fd979", "30aa835b-1145-4939-8252-de56b4f8a60c",
                                       "1c30e62a-67a4-4eef-99ce-70a091e834e6"),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID,
                                                                    List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("1765161b-e38f-455e-ac85-a0765077139a",
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("fe5c1763-7cf2-468b-82f8-1360eaa345dd",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                       String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("e25bca6a-eec2-4299-8a35-68811e379994", "dcc3fa42-8477-4f9f-bfc0-0fe0cd2dd68c",
                                       "e7494d12-c111-4619-9166-002b4bf47926", "7fe5f097-2b8d-4dc0-a4b7-0a5801083519",
                                       "88bd9932-7218-45b4-a7cc-577b7fff30bf"),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                 List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("c42da91c-2205-4c12-bb21-7678f497ba1e", "13af73a4-a054-48d6-aeda-e0a203ca703e",
                                       "842e99ee-dd3a-42d6-9124-d3576dc278c8", "fd3308c4-6b23-4024-8d0b-b7b40b8f841e"),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME, FilterOperator.IN));
            assertNotNull(option.getDateTimeFilters());
            assertEquals(Arrays.asList(new Date(1562663762180L), new Date(1562663764845L), new Date(1562663765478L),
                                       new Date(1562663766205L), new Date(1562663767231L), new Date(1562663758155L),
                                       new Date(1562663759321L), new Date(1562663764327L)),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME,
                                                                 List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME, FilterOperator.NOT_IN));
            assertNotNull(option.getDateTimeFilters());
            assertEquals(Arrays.asList(new Date(1562663764637L), new Date(1562663758101L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME,
                                                                    List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME, FilterOperator.LESS_THAN));
            assertNotNull(option.getDateTimeFilters());
            assertEquals(new Date(1562663764877L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME, FilterOperator.GREATER_THAN));
            assertNotNull(option.getDateTimeFilters());
            assertEquals(new Date(1562663764175L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE, FilterOperator.EQUAL));
            assertNotNull(option.getStateChangeFilters());
            assertEquals(Boolean.TRUE,
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE,
                                                                    Boolean.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getStateChangeFilters());
            assertEquals(Boolean.FALSE,
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE,
                                                                       Boolean.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, FilterOperator.EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("9d46d7ad-3cef-4c6c-9763-0cf8a2e4f508",
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("0928efab-b661-4c58-9451-225b04c6c7f5",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, FilterOperator.IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("a156e1a0-d6e8-47a3-b12c-55199846381c", "3006eb63-4157-4102-91ce-3b45c125aa42",
                                       "e6914edd-6d44-4114-b676-1506a9c9659f", "2ed1ce6d-654c-4555-a76e-0c5a92b78dbb",
                                       "a03ae6fd-7557-4d5b-8ea0-f29fec605300", "ca5d08af-0e8f-457a-abb6-32598fbbedb3",
                                       "1dc71b73-c190-4c8f-a48f-4afab1a9b4be"),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, List.class,
                                                                 option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("760bcc44-775d-46ea-bb8d-1e71ca0ab1cb", "36d6adb9-3e18-4585-b5d3-e09dbd45ec91",
                                       "ca027348-caa8-46f5-aaf0-4ad5787f5076", "2bd9eb30-59c0-4850-9c87-8c1e03591991",
                                       "1b25f8b1-3ce6-46e3-b106-52be1306be19", "733a1967-4c51-4eb3-a2ae-d717e7c079e0",
                                       "7d2f15bf-1ccc-4a8b-86be-30be430275f2", "b7ee1e6f-cf7a-429e-a04a-6fd1bcd6aa32",
                                       "4194f4b5-6f86-487b-8b12-e9eb502457b9"),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID,
                                                                    List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE, FilterOperator.EQUAL));
            assertNotNull(option.getEventTypeFilters());
            assertEquals("6333fa7a-db00-4fb5-b877-f01d76312c7a",
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE,
                                                                    String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getEventTypeFilters());
            assertEquals("e9aff439-3b7d-469d-adee-e9de81750879",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE,
                                                                       String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE, FilterOperator.IN));
            assertNotNull(option.getEventTypeFilters());
            assertEquals(Arrays.asList("0bdb0dbe-6e7f-4e96-a110-a5ad9600e7ec", "f1a6ec39-d3fd-4854-bbab-1d45638c7134"),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE,
                                                                 List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE, FilterOperator.NOT_IN));
            assertNotNull(option.getEventTypeFilters());
            assertEquals(Arrays.asList("27f5a5f9-5c96-4c27-9bf2-ad097f123e0c", "7c2a74aa-351a-46d8-8e8d-447862a3dd9f",
                                       "36e5e7e9-9135-40a6-9476-7ef9c6373efb", "b9bba6ef-5501-4a75-b224-3a9c11da9de7",
                                       "c0937d19-4a81-42d6-90ed-21f0a451fa0d", "78016c1e-cf71-4fe0-8aa2-3c77143d6e12"),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE,
                                                                    List.class, option));
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEventsListOptions deviceeventslistoptions1 = new DeviceEventsListOptions(Integer.valueOf(-109),
                                                                                           Long.valueOf(-71),
                                                                                           Order.getDefault(),
                                                                                           "f322e43f-65d5-4a98-a44a-4bc857b70a17",
                                                                                           null, null);
            DeviceEventsListOptions deviceeventslistoptions2 = new DeviceEventsListOptions(Integer.valueOf(-109),
                                                                                           Long.valueOf(-71),
                                                                                           Order.getDefault(),
                                                                                           "f322e43f-65d5-4a98-a44a-4bc857b70a17",
                                                                                           null, null);
            assertNotNull(deviceeventslistoptions1);
            assertNotNull(deviceeventslistoptions2);
            assertNotSame(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2.hashCode(), deviceeventslistoptions1.hashCode());
            int hashCode = deviceeventslistoptions1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceeventslistoptions1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEventsListOptions deviceeventslistoptions1 = new DeviceEventsListOptions(Integer.valueOf(-25),
                                                                                           Long.valueOf(-57),
                                                                                           Order.getDefault(),
                                                                                           "124bd5d1-40e8-4c76-8f32-d6ccb7c16c75",
                                                                                           null, null);
            DeviceEventsListOptions deviceeventslistoptions2 = new DeviceEventsListOptions(Integer.valueOf(-25),
                                                                                           Long.valueOf(-57),
                                                                                           Order.getDefault(),
                                                                                           "124bd5d1-40e8-4c76-8f32-d6ccb7c16c75",
                                                                                           null, null);
            DeviceEventsListOptions deviceeventslistoptions3 = new DeviceEventsListOptions(Integer.valueOf(14),
                                                                                           Long.valueOf(53),
                                                                                           Order.getDefault(),
                                                                                           "a034ce20-5ca7-4c36-bc23-0abfb258e3f9",
                                                                                           null, null);
            assertNotNull(deviceeventslistoptions1);
            assertNotNull(deviceeventslistoptions2);
            assertNotNull(deviceeventslistoptions3);
            assertNotSame(deviceeventslistoptions2, deviceeventslistoptions1);
            assertNotSame(deviceeventslistoptions3, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions1, deviceeventslistoptions2);
            assertEquals(deviceeventslistoptions1, deviceeventslistoptions1);
            assertFalse(deviceeventslistoptions1.equals(null));
            assertNotEquals(deviceeventslistoptions3, deviceeventslistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
