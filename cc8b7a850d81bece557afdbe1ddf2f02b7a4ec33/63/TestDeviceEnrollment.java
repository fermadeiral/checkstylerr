// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEnrollment.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEnrollment {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEnrollment deviceenrollment1 = new DeviceEnrollment("ffb5f70b-4b54-45a0-99b3-acd7958b08e9",
                                                                      new Date(1561032444889L),
                                                                      new Date(1561032448810L),
                                                                      "5ScAhd1GT54w6O5uj1i1jAqys906jwWJ",
                                                                      "A-b3E62l4:vf2y7nJ3YNtL0g01uObCnDDW6WBHLEcXvcxsc854ZSqXBWAqz48Iuv3zalkG8Y2s3A3kOc5UlCu::u26u7z1YnM",
                                                                      new Date(1561032449184L),
                                                                      "5ScAhd1GT54w6O5uj1i1jAqys906jwWJ");
            DeviceEnrollment deviceenrollment2 = deviceenrollment1.clone();
            assertNotNull(deviceenrollment1);
            assertNotNull(deviceenrollment2);
            assertNotSame(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEnrollment deviceenrollment1 = new DeviceEnrollment("8ab0b445-7244-4fb1-824f-7d233bebf32a",
                                                                      new Date(1561032449832L),
                                                                      new Date(1561032442827L),
                                                                      "5ScAhd1GT54w6O5uj1i1jAqys906jwWJ",
                                                                      "A-b3E62l4:vf2y7nJ3YNtL0g01uObCnDDW6WBHLEcXvcxsc854ZSqXBWAqz48Iuv3zalkG8Y2s3A3kOc5UlCu::u26u7z1YnM",
                                                                      new Date(1561032449027L),
                                                                      "5ScAhd1GT54w6O5uj1i1jAqys906jwWJ");
            DeviceEnrollment deviceenrollment2 = new DeviceEnrollment("8ab0b445-7244-4fb1-824f-7d233bebf32a",
                                                                      new Date(1561032449832L),
                                                                      new Date(1561032442827L),
                                                                      "5ScAhd1GT54w6O5uj1i1jAqys906jwWJ",
                                                                      "A-b3E62l4:vf2y7nJ3YNtL0g01uObCnDDW6WBHLEcXvcxsc854ZSqXBWAqz48Iuv3zalkG8Y2s3A3kOc5UlCu::u26u7z1YnM",
                                                                      new Date(1561032449027L),
                                                                      "5ScAhd1GT54w6O5uj1i1jAqys906jwWJ");
            assertNotNull(deviceenrollment1);
            assertNotNull(deviceenrollment2);
            assertNotSame(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2.hashCode(), deviceenrollment1.hashCode());
            int hashCode = deviceenrollment1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceenrollment1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEnrollment deviceenrollment = new DeviceEnrollment("4e945e4c-e77d-4a91-b22c-377fd501ddc5",
                                                                 new Date(1561032451608L), new Date(1561032445983L),
                                                                 "5ScAhd1GT54w6O5uj1i1jAqys906jwWJ",
                                                                 "A-b3E62l4:vf2y7nJ3YNtL0g01uObCnDDW6WBHLEcXvcxsc854ZSqXBWAqz48Iuv3zalkG8Y2s3A3kOc5UlCu::u26u7z1YnM",
                                                                 new Date(1561032449473L),
                                                                 "5ScAhd1GT54w6O5uj1i1jAqys906jwWJ");
        assertTrue(deviceenrollment.isValid());
        DeviceEnrollment deviceenrollmentInvalid = new DeviceEnrollment("728dd51d-16a6-4e87-9487-ca3b790a0a3d",
                                                                        new Date(1561032451664L),
                                                                        new Date(1561032449667L),
                                                                        "r]=xxH2KvxV믽ItMrvn;xRH8v83tX$$N7`Rgx #xH8\u0003_v8xtU7xv\u0012r\u0019@=tt+RR輯\u0014IR",
                                                                        null, new Date(1561032448263L),
                                                                        "r]=xxH2KvxV믽ItMrvn;xRH8v83tX$$N7`Rgx #xH8\u0003_v8xtU7xv\u0012r\u0019@=tt+RR輯\u0014IR");
        assertFalse(deviceenrollmentInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEnrollment deviceenrollment1 = new DeviceEnrollment("f94c435f-82e0-4976-a0a4-e8eea1795657",
                                                                      new Date(1561032450979L),
                                                                      new Date(1561032447296L),
                                                                      "5ScAhd1GT54w6O5uj1i1jAqys906jwWJ",
                                                                      "A-b3E62l4:vf2y7nJ3YNtL0g01uObCnDDW6WBHLEcXvcxsc854ZSqXBWAqz48Iuv3zalkG8Y2s3A3kOc5UlCu::u26u7z1YnM",
                                                                      new Date(1561032450096L),
                                                                      "5ScAhd1GT54w6O5uj1i1jAqys906jwWJ");
            DeviceEnrollment deviceenrollment2 = new DeviceEnrollment("f94c435f-82e0-4976-a0a4-e8eea1795657",
                                                                      new Date(1561032450979L),
                                                                      new Date(1561032447296L),
                                                                      "5ScAhd1GT54w6O5uj1i1jAqys906jwWJ",
                                                                      "A-b3E62l4:vf2y7nJ3YNtL0g01uObCnDDW6WBHLEcXvcxsc854ZSqXBWAqz48Iuv3zalkG8Y2s3A3kOc5UlCu::u26u7z1YnM",
                                                                      new Date(1561032450096L),
                                                                      "5ScAhd1GT54w6O5uj1i1jAqys906jwWJ");
            DeviceEnrollment deviceenrollment3 = new DeviceEnrollment("1bc52a34-6237-494a-a67e-9f13b908018a",
                                                                      new Date(1561032451733L),
                                                                      new Date(1561032446956L),
                                                                      "5ScAhd1GT54w6O5uj1i1jAqys906jwWJ",
                                                                      "A-b3E62l4:vf2y7nJ3YNtL0g01uObCnDDW6WBHLEcXvcxsc854ZSqXBWAqz48Iuv3zalkG8Y2s3A3kOc5UlCu::u26u7z1YnM",
                                                                      new Date(1561032447529L),
                                                                      "5ScAhd1GT54w6O5uj1i1jAqys906jwWJ");
            assertNotNull(deviceenrollment1);
            assertNotNull(deviceenrollment2);
            assertNotNull(deviceenrollment3);
            assertNotSame(deviceenrollment2, deviceenrollment1);
            assertNotSame(deviceenrollment3, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment1, deviceenrollment2);
            assertEquals(deviceenrollment1, deviceenrollment1);
            assertFalse(deviceenrollment1.equals(null));
            assertNotEquals(deviceenrollment3, deviceenrollment1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
