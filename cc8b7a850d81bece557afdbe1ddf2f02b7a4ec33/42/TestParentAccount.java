// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model ParentAccount.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestParentAccount {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("b8fd7.db738@7fed6.me",
                                                             "14d2a2ac-3ed0-47d6-a1da-b37daf72bb06",
                                                             "6fb4ddd2721d7f5fedbf16812e41749b");
            ParentAccount parentaccount2 = parentaccount1.clone();
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotSame(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("72a18.be4d2@0c25c.fr",
                                                             "6ecba6e4-345f-438d-b0b8-6a4120f9ed5d",
                                                             "6fb4ddd2721d7f5fedbf16812e41749b");
            ParentAccount parentaccount2 = new ParentAccount("72a18.be4d2@0c25c.fr",
                                                             "6ecba6e4-345f-438d-b0b8-6a4120f9ed5d",
                                                             "6fb4ddd2721d7f5fedbf16812e41749b");
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotSame(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount2.hashCode(), parentaccount1.hashCode());
            int hashCode = parentaccount1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, parentaccount1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ParentAccount parentaccount = new ParentAccount("3f400.e13d1@09adf.me", "16d1c418-ebe2-4d56-989d-fba79ae7d613",
                                                        "6fb4ddd2721d7f5fedbf16812e41749b");
        assertTrue(parentaccount.isValid());
        ParentAccount parentaccountInvalid = new ParentAccount(">æ¥‰:ì?±æ´º>ïš•67îž¯å‚œî³§ê‰º.ïµŠï‰€îº—ë˜«ï©Œ0æ?¹!æ•Ÿæ³‰ìŸ†æœ?>ã¼¦æ²¤ï¨‚ê³œæžŒæ­–:æ¬»\u001bé­?æµ’>ä½Šå“?æ?„ä‰?\u0000\u0017îºª(æ•Ÿã³ƒ>ïˆ½è±¢ë†™æ žå˜®?æ¦™æ¯¶\u0001å®ˆï©Ÿì?”î®½î•»",
                                                               "b4580d0e-bc72-4954-af40-2084e129898fb16cec0f-ab39-4187-a04a-89f4298c9c3a8e6800e1-bdda-4464-abb3-59b9e8814714",
                                                               "ç¹§3N3ë¸§33\u001433î¾¶3\u00103QA#\u001e\u001d`:3;c@c[\u00163Aìº·à¼«,æ¯†c3î´?3+\tê‘¼cccScTR\u0000cL\u0007c3\u000fç¢ 333×™ë‚ªcc");
        assertFalse(parentaccountInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("c3545.9aaee@78f3f.me",
                                                             "388fbf3e-4e91-4dcf-bc0b-e8a9d6dd084a",
                                                             "6fb4ddd2721d7f5fedbf16812e41749b");
            ParentAccount parentaccount2 = new ParentAccount("c3545.9aaee@78f3f.me",
                                                             "388fbf3e-4e91-4dcf-bc0b-e8a9d6dd084a",
                                                             "6fb4ddd2721d7f5fedbf16812e41749b");
            ParentAccount parentaccount3 = new ParentAccount("bd839.9fdc0@7e98d.fr",
                                                             "cfe36a60-f664-442f-865c-72435f335d74",
                                                             "6fb4ddd2721d7f5fedbf16812e41749b");
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotNull(parentaccount3);
            assertNotSame(parentaccount2, parentaccount1);
            assertNotSame(parentaccount3, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount1, parentaccount2);
            assertEquals(parentaccount1, parentaccount1);
            assertFalse(parentaccount1.equals(null));
            assertNotEquals(parentaccount3, parentaccount1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
