// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantUserInvitation.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantUserInvitation {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantUserInvitation subtenantuserinvitation1 = new SubtenantUserInvitation("6fb4ddd2721d7f5fedbf16812e41749b",
                                                                                           new Date(1561032444101L),
                                                                                           "4b6f8.9599c@a27a4.fr",
                                                                                           new Date(1561032447398L),
                                                                                           "6fb4ddd2721d7f5fedbf16812e41749b",
                                                                                           null,
                                                                                           new Date(1561032444888L),
                                                                                           "6fb4ddd2721d7f5fedbf16812e41749b");
            SubtenantUserInvitation subtenantuserinvitation2 = subtenantuserinvitation1.clone();
            assertNotNull(subtenantuserinvitation1);
            assertNotNull(subtenantuserinvitation2);
            assertNotSame(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantUserInvitation subtenantuserinvitation1 = new SubtenantUserInvitation("6fb4ddd2721d7f5fedbf16812e41749b",
                                                                                           new Date(1561032450427L),
                                                                                           "58ffe.d4dc0@811ac.fr",
                                                                                           new Date(1561032450028L),
                                                                                           "6fb4ddd2721d7f5fedbf16812e41749b",
                                                                                           null,
                                                                                           new Date(1561032442858L),
                                                                                           "6fb4ddd2721d7f5fedbf16812e41749b");
            SubtenantUserInvitation subtenantuserinvitation2 = new SubtenantUserInvitation("6fb4ddd2721d7f5fedbf16812e41749b",
                                                                                           new Date(1561032450427L),
                                                                                           "58ffe.d4dc0@811ac.fr",
                                                                                           new Date(1561032450028L),
                                                                                           "6fb4ddd2721d7f5fedbf16812e41749b",
                                                                                           null,
                                                                                           new Date(1561032442858L),
                                                                                           "6fb4ddd2721d7f5fedbf16812e41749b");
            assertNotNull(subtenantuserinvitation1);
            assertNotNull(subtenantuserinvitation2);
            assertNotSame(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2.hashCode(), subtenantuserinvitation1.hashCode());
            int hashCode = subtenantuserinvitation1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantuserinvitation1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantUserInvitation subtenantuserinvitation = new SubtenantUserInvitation("6fb4ddd2721d7f5fedbf16812e41749b",
                                                                                      new Date(1561032447324L),
                                                                                      "253c4.5aa88@239bd.me",
                                                                                      new Date(1561032451211L),
                                                                                      "6fb4ddd2721d7f5fedbf16812e41749b",
                                                                                      null, new Date(1561032449409L),
                                                                                      "6fb4ddd2721d7f5fedbf16812e41749b");
        assertTrue(subtenantuserinvitation.isValid());
        SubtenantUserInvitation subtenantuserinvitationInvalid = new SubtenantUserInvitation(null,
                                                                                             new Date(1561032443373L),
                                                                                             null,
                                                                                             new Date(1561032450590L),
                                                                                             "ç¹§3N3ë¸§33\u001433î¾¶3\u00103QA#\u001e\u001d`:3;c@c[\u00163Aìº·à¼«,æ¯†c3î´?3+\tê‘¼cccScTR\u0000cL\u0007c3\u000fç¢ 333×™ë‚ªcc",
                                                                                             null,
                                                                                             new Date(1561032443829L),
                                                                                             "ç¹§3N3ë¸§33\u001433î¾¶3\u00103QA#\u001e\u001d`:3;c@c[\u00163Aìº·à¼«,æ¯†c3î´?3+\tê‘¼cccScTR\u0000cL\u0007c3\u000fç¢ 333×™ë‚ªcc");
        assertFalse(subtenantuserinvitationInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantUserInvitation subtenantuserinvitation1 = new SubtenantUserInvitation("6fb4ddd2721d7f5fedbf16812e41749b",
                                                                                           new Date(1561032444024L),
                                                                                           "0a11b.fb08d@70568.me",
                                                                                           new Date(1561032445166L),
                                                                                           "6fb4ddd2721d7f5fedbf16812e41749b",
                                                                                           null,
                                                                                           new Date(1561032451572L),
                                                                                           "6fb4ddd2721d7f5fedbf16812e41749b");
            SubtenantUserInvitation subtenantuserinvitation2 = new SubtenantUserInvitation("6fb4ddd2721d7f5fedbf16812e41749b",
                                                                                           new Date(1561032444024L),
                                                                                           "0a11b.fb08d@70568.me",
                                                                                           new Date(1561032445166L),
                                                                                           "6fb4ddd2721d7f5fedbf16812e41749b",
                                                                                           null,
                                                                                           new Date(1561032451572L),
                                                                                           "6fb4ddd2721d7f5fedbf16812e41749b");
            SubtenantUserInvitation subtenantuserinvitation3 = new SubtenantUserInvitation("6fb4ddd2721d7f5fedbf16812e41749b",
                                                                                           new Date(1561032447247L),
                                                                                           "22007.ae627@c5e21.me",
                                                                                           new Date(1561032452465L),
                                                                                           "6fb4ddd2721d7f5fedbf16812e41749b",
                                                                                           null,
                                                                                           new Date(1561032444660L),
                                                                                           "6fb4ddd2721d7f5fedbf16812e41749b");
            assertNotNull(subtenantuserinvitation1);
            assertNotNull(subtenantuserinvitation2);
            assertNotNull(subtenantuserinvitation3);
            assertNotSame(subtenantuserinvitation2, subtenantuserinvitation1);
            assertNotSame(subtenantuserinvitation3, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation1, subtenantuserinvitation2);
            assertEquals(subtenantuserinvitation1, subtenantuserinvitation1);
            assertFalse(subtenantuserinvitation1.equals(null));
            assertNotEquals(subtenantuserinvitation3, subtenantuserinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
