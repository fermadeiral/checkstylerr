// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEvents.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEvents {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1561032450057L), null,
                                                          new Date(1561032447346L),
                                                          "eeac10c2-ce60-4383-a523-e1e093f55153",
                                                          "6a623a49-1bb8-43d7-ae0f-38183fbe5d4a",
                                                          "1ccbc40a-7379-41ea-8589-a57c34ea20f1",
                                                          "121579b8-b1bf-4714-8bb6-8bf97a723eac",
                                                          "e2e97f02-8a6b-401f-8d4c-4de53658726f",
                                                          "33545a78-bdb5-4440-b9fc-74bbff83f6c0", true);
            DeviceEvents deviceevents2 = deviceevents1.clone();
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1561032449302L), null,
                                                          new Date(1561032443757L),
                                                          "813e80f3-a72c-4528-8d68-14e72dbeb455",
                                                          "bd4734e7-ff3b-4f55-a759-0744387186d1",
                                                          "28b05d6c-8b0d-477c-8371-4ae5eb1ddc55",
                                                          "62c7546b-de59-4df1-b666-71b34ae5a11f",
                                                          "654b8e2a-fd2b-4890-864e-611c2300a02c",
                                                          "2f900326-1e68-4328-a4e3-77a0c6e6bd45", true);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1561032449302L), null,
                                                          new Date(1561032443757L),
                                                          "813e80f3-a72c-4528-8d68-14e72dbeb455",
                                                          "bd4734e7-ff3b-4f55-a759-0744387186d1",
                                                          "28b05d6c-8b0d-477c-8371-4ae5eb1ddc55",
                                                          "62c7546b-de59-4df1-b666-71b34ae5a11f",
                                                          "654b8e2a-fd2b-4890-864e-611c2300a02c",
                                                          "2f900326-1e68-4328-a4e3-77a0c6e6bd45", true);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2.hashCode(), deviceevents1.hashCode());
            int hashCode = deviceevents1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceevents1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEvents deviceevents = new DeviceEvents(null, new Date(1561032444161L), null, new Date(1561032442828L),
                                                     "d90cd44e-37d6-4a12-a082-646ed4b2950c",
                                                     "082b187a-32df-4bae-af96-ca86c5708fa8",
                                                     "bfe4720e-6d4f-4da4-bae9-8b5f524d2a8c",
                                                     "84d1270d-e7da-4a84-953f-10def5270d8e",
                                                     "d93ef13f-a9f1-41fb-9022-3e6f79128fdd",
                                                     "e5537ca8-27c4-4253-ab3c-8acd5fc5ba67", false);
        assertTrue(deviceevents.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1561032450107L), null,
                                                          new Date(1561032443560L),
                                                          "82c7b514-468f-44e2-bfb0-9aa09ea5e3c1",
                                                          "3d590c79-16a8-4c34-90d5-aa338b47c370",
                                                          "93fc7f4f-6720-4a4b-a234-0932f70d33ed",
                                                          "b239d93b-bb74-4d5e-b4c5-4b6729fe01ff",
                                                          "34dd781f-761c-4e3b-9247-2985d17eb508",
                                                          "c6a70a41-4df8-446d-ba0c-871addac80cc", false);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1561032450107L), null,
                                                          new Date(1561032443560L),
                                                          "82c7b514-468f-44e2-bfb0-9aa09ea5e3c1",
                                                          "3d590c79-16a8-4c34-90d5-aa338b47c370",
                                                          "93fc7f4f-6720-4a4b-a234-0932f70d33ed",
                                                          "b239d93b-bb74-4d5e-b4c5-4b6729fe01ff",
                                                          "34dd781f-761c-4e3b-9247-2985d17eb508",
                                                          "c6a70a41-4df8-446d-ba0c-871addac80cc", false);
            DeviceEvents deviceevents3 = new DeviceEvents(null, new Date(1561032448923L), null,
                                                          new Date(1561032451857L),
                                                          "6606666f-199c-421f-bd5b-5b3bebaf647a",
                                                          "e8db1d2e-477e-49d1-9b27-b37f1e772811",
                                                          "1dcf6a0d-7705-484b-9af0-20fd3eaad000",
                                                          "5e8a7fbb-4cae-48fd-b868-0f4e7d42f21e",
                                                          "9e58a406-cd0d-4e75-83d8-56bf781195c3",
                                                          "f1fa3356-e267-4a6e-88f8-8e8e2b3ec2bf", false);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotNull(deviceevents3);
            assertNotSame(deviceevents2, deviceevents1);
            assertNotSame(deviceevents3, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents1, deviceevents2);
            assertEquals(deviceevents1, deviceevents1);
            assertFalse(deviceevents1.equals(null));
            assertNotEquals(deviceevents3, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
