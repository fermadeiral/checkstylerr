// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model LoginProfile.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestLoginProfile {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            LoginProfile loginprofile1 = new LoginProfile("48497b21-317f-49a4-9bb7-f43fae6518c6",
                                                          "5520396e-01e1-4ccd-b8b4-ae58542a6a9d");
            LoginProfile loginprofile2 = loginprofile1.clone();
            assertNotNull(loginprofile1);
            assertNotNull(loginprofile2);
            assertNotSame(loginprofile2, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            LoginProfile loginprofile1 = new LoginProfile("c388546f-c48c-4e2b-9960-de78249839cd",
                                                          "881c6ee0-6e3b-4774-bfb5-f3bc480d9938");
            LoginProfile loginprofile2 = new LoginProfile("c388546f-c48c-4e2b-9960-de78249839cd",
                                                          "881c6ee0-6e3b-4774-bfb5-f3bc480d9938");
            assertNotNull(loginprofile1);
            assertNotNull(loginprofile2);
            assertNotSame(loginprofile2, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
            assertEquals(loginprofile2.hashCode(), loginprofile1.hashCode());
            int hashCode = loginprofile1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, loginprofile1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        LoginProfile loginprofile = new LoginProfile("d001d7fc-8940-4761-b782-5ab9e7773858",
                                                     "18354d99-d2b0-417f-8795-5e7d567e37da");
        assertTrue(loginprofile.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            LoginProfile loginprofile1 = new LoginProfile("f9af12bc-a42b-4467-b65a-d8a3ed7991b7",
                                                          "c1f99862-f760-4160-8432-d2fe7863c910");
            LoginProfile loginprofile2 = new LoginProfile("f9af12bc-a42b-4467-b65a-d8a3ed7991b7",
                                                          "c1f99862-f760-4160-8432-d2fe7863c910");
            LoginProfile loginprofile3 = new LoginProfile("7cf2f0a4-f0e6-46bf-a5ed-cce114cb1da1",
                                                          "cfe10c95-b7bc-405b-b6e0-b2698638a002");
            assertNotNull(loginprofile1);
            assertNotNull(loginprofile2);
            assertNotNull(loginprofile3);
            assertNotSame(loginprofile2, loginprofile1);
            assertNotSame(loginprofile3, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
            assertEquals(loginprofile1, loginprofile2);
            assertEquals(loginprofile1, loginprofile1);
            assertFalse(loginprofile1.equals(null));
            assertNotEquals(loginprofile3, loginprofile1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
