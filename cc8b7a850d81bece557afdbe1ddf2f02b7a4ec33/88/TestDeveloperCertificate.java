// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.security.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeveloperCertificate.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeveloperCertificate {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("902df087-9bf3-49d1-9ebe-06056ebcd3b8",
                                                                                  "1e87e4dc-5c81-48b7-baf6-c4491845f39f",
                                                                                  new Date(1561032447653L),
                                                                                  "e28ab40d-1660-4df6-8779-d651e7f5fea9",
                                                                                  "a65e132a-b3ac-4c46-bc4f-61d297f1e270",
                                                                                  "64cd827e-6ae9-4283-a74a-ffa7574c280e",
                                                                                  "52741011-b805-434b-ab57-9d61feac91b4",
                                                                                  "167988dd-400a-4406-a265-4327600a57be");
            DeveloperCertificate developercertificate2 = developercertificate1.clone();
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("05c7b9f4-3fe4-44f5-b893-e915e9c97b86",
                                                                                  "42d9d81f-b992-4f6c-adbe-20f5f1af1f4a",
                                                                                  new Date(1561032445815L),
                                                                                  "6cf2c530-a1c9-4c68-aa29-ad9719b3f104",
                                                                                  "2797086d-12d8-449a-b825-d0800b7b0aa0",
                                                                                  "3ee93b08-2a8d-41d5-acb6-b6db1f5012e9",
                                                                                  "40f58bff-4acd-48d3-952a-39880171f8df",
                                                                                  "a8cfb20f-69c4-40f6-8c35-88c9edf568d7");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("05c7b9f4-3fe4-44f5-b893-e915e9c97b86",
                                                                                  "42d9d81f-b992-4f6c-adbe-20f5f1af1f4a",
                                                                                  new Date(1561032445815L),
                                                                                  "6cf2c530-a1c9-4c68-aa29-ad9719b3f104",
                                                                                  "2797086d-12d8-449a-b825-d0800b7b0aa0",
                                                                                  "3ee93b08-2a8d-41d5-acb6-b6db1f5012e9",
                                                                                  "40f58bff-4acd-48d3-952a-39880171f8df",
                                                                                  "a8cfb20f-69c4-40f6-8c35-88c9edf568d7");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2.hashCode(), developercertificate1.hashCode());
            int hashCode = developercertificate1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, developercertificate1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeveloperCertificate developercertificate = new DeveloperCertificate("adda8df4-a887-423e-93da-c0d1ae67507f",
                                                                             "bdc035fd-89a4-4c89-b2d7-a1e058d3a7da",
                                                                             new Date(1561032449259L),
                                                                             "d3850581-1adf-4b76-ad68-43f080838743",
                                                                             "595dc174-4f0e-4b15-abb5-40ed63337fb0",
                                                                             "c1d18e90-022e-4408-973a-38f9c19d5f4e",
                                                                             "5a6bb70f-0cde-47ed-bc17-cba89b550bc9",
                                                                             "21ca6109-e7e4-40a2-99b7-2aa50c85e867");
        assertTrue(developercertificate.isValid());
        DeveloperCertificate developercertificateInvalid = new DeveloperCertificate("25b8bcba-a2fe-4e5a-91fa-d35ea3377401",
                                                                                    "2e783dfd-15c3-423c-b17b-966ca35fa52e",
                                                                                    new Date(1561032446674L),
                                                                                    "f00549e1-42c7-485e-8e68-a2a27cdb0430",
                                                                                    "1d3be32b-ea16-4306-bc36-ed894ea8979e",
                                                                                    "0a336649-fd22-4523-918b-dadab2303cba",
                                                                                    null,
                                                                                    "ce0e31c7-a004-4334-b71a-11aef661a553");
        assertFalse(developercertificateInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("949b8486-d172-4c26-b682-a03bd2ea1e79",
                                                                                  "980d7b05-edb2-4f7b-9b77-08530a8a5d9d",
                                                                                  new Date(1561032443213L),
                                                                                  "aea4df0b-e6f7-4149-845b-4b2aa70c9829",
                                                                                  "7f827e23-70c4-416e-abc8-78f3b5ad5903",
                                                                                  "75492d27-511f-490f-85b5-3530c3b1bb21",
                                                                                  "f2740c3b-fce3-449d-a67d-7d60234c9aca",
                                                                                  "6320f66f-f02d-47ee-b27a-d4798cc79854");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("949b8486-d172-4c26-b682-a03bd2ea1e79",
                                                                                  "980d7b05-edb2-4f7b-9b77-08530a8a5d9d",
                                                                                  new Date(1561032443213L),
                                                                                  "aea4df0b-e6f7-4149-845b-4b2aa70c9829",
                                                                                  "7f827e23-70c4-416e-abc8-78f3b5ad5903",
                                                                                  "75492d27-511f-490f-85b5-3530c3b1bb21",
                                                                                  "f2740c3b-fce3-449d-a67d-7d60234c9aca",
                                                                                  "6320f66f-f02d-47ee-b27a-d4798cc79854");
            DeveloperCertificate developercertificate3 = new DeveloperCertificate("de80810a-58b5-4e26-8432-d5fcf8c24af9",
                                                                                  "e385e6dd-23e1-4274-99ec-e982f7d0fb84",
                                                                                  new Date(1561032446571L),
                                                                                  "7f1c0aed-8236-40d5-a5e6-ef20986a0eaa",
                                                                                  "61b48a8c-ce64-4e6e-86d8-ef6ec376889b",
                                                                                  "c7c686c6-606f-4a39-a506-79e7449545ff",
                                                                                  "7f3579f5-c4f1-4b7f-879e-f0ca65181e34",
                                                                                  "e9e2bd35-af91-4205-8fcc-c7756c0cd511");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotNull(developercertificate3);
            assertNotSame(developercertificate2, developercertificate1);
            assertNotSame(developercertificate3, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate1, developercertificate2);
            assertEquals(developercertificate1, developercertificate1);
            assertFalse(developercertificate1.equals(null));
            assertNotEquals(developercertificate3, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
