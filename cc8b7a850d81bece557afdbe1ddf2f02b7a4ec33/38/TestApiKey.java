// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model ApiKey.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestApiKey {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ApiKey apikey1 = new ApiKey("6fb4ddd2721d7f5fedbf16812e41749b", new Date(1561032443016L), 37,
                                        "6fb4ddd2721d7f5fedbf16812e41749b", "ec87c042-4edf-46c0-86c7-3ef696e34a44", 113,
                                        "ea654509-18ae-42d4-ad25-7fc387d16f81", "6fb4ddd2721d7f5fedbf16812e41749b",
                                        ApiKeyStatus.getDefault(), new Date(1561032445029L));
            ApiKey apikey2 = apikey1.clone();
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotSame(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ApiKey apikey1 = new ApiKey("6fb4ddd2721d7f5fedbf16812e41749b", new Date(1561032447391L), 29,
                                        "6fb4ddd2721d7f5fedbf16812e41749b", "24a995e5-a615-4fd9-9f93-3419498336b5", -40,
                                        "0dc246d0-979e-4a85-ba40-7a0c03e800e1", "6fb4ddd2721d7f5fedbf16812e41749b",
                                        ApiKeyStatus.getDefault(), new Date(1561032449482L));
            ApiKey apikey2 = new ApiKey("6fb4ddd2721d7f5fedbf16812e41749b", new Date(1561032447391L), 29,
                                        "6fb4ddd2721d7f5fedbf16812e41749b", "24a995e5-a615-4fd9-9f93-3419498336b5", -40,
                                        "0dc246d0-979e-4a85-ba40-7a0c03e800e1", "6fb4ddd2721d7f5fedbf16812e41749b",
                                        ApiKeyStatus.getDefault(), new Date(1561032449482L));
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotSame(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey2.hashCode(), apikey1.hashCode());
            int hashCode = apikey1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, apikey1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ApiKey apikey = new ApiKey("6fb4ddd2721d7f5fedbf16812e41749b", new Date(1561032442776L), 19,
                                   "6fb4ddd2721d7f5fedbf16812e41749b", "39209c85-a171-4da1-8bee-3a2abbfd0830", 7,
                                   "e985698d-0c2e-4ecd-b98c-ae97afa11f10", "6fb4ddd2721d7f5fedbf16812e41749b",
                                   ApiKeyStatus.getDefault(), new Date(1561032452101L));
        assertTrue(apikey.isValid());
        ApiKey apikeyInvalid = new ApiKey("ç¹§3N3ë¸§33\u001433î¾¶3\u00103QA#\u001e\u001d`:3;c@c[\u00163Aìº·à¼«,æ¯†c3î´?3+\tê‘¼cccScTR\u0000cL\u0007c3\u000fç¢ 333×™ë‚ªcc",
                                          new Date(1561032444250L), -25,
                                          "ç¹§3N3ë¸§33\u001433î¾¶3\u00103QA#\u001e\u001d`:3;c@c[\u00163Aìº·à¼«,æ¯†c3î´?3+\tê‘¼cccScTR\u0000cL\u0007c3\u000fç¢ 333×™ë‚ªcc",
                                          "33143428-4e28-49e6-b996-bf0170543474", -11, null,
                                          "ç¹§3N3ë¸§33\u001433î¾¶3\u00103QA#\u001e\u001d`:3;c@c[\u00163Aìº·à¼«,æ¯†c3î´?3+\tê‘¼cccScTR\u0000cL\u0007c3\u000fç¢ 333×™ë‚ªcc",
                                          ApiKeyStatus.getDefault(), new Date(1561032452031L));
        assertFalse(apikeyInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ApiKey apikey1 = new ApiKey("6fb4ddd2721d7f5fedbf16812e41749b", new Date(1561032443764L), -14,
                                        "6fb4ddd2721d7f5fedbf16812e41749b", "2d3aa000-70be-4062-a20e-50c81e7c20c2", -99,
                                        "5feaea6c-05e7-4780-8580-09a1d4111ccb", "6fb4ddd2721d7f5fedbf16812e41749b",
                                        ApiKeyStatus.getDefault(), new Date(1561032449314L));
            ApiKey apikey2 = new ApiKey("6fb4ddd2721d7f5fedbf16812e41749b", new Date(1561032443764L), -14,
                                        "6fb4ddd2721d7f5fedbf16812e41749b", "2d3aa000-70be-4062-a20e-50c81e7c20c2", -99,
                                        "5feaea6c-05e7-4780-8580-09a1d4111ccb", "6fb4ddd2721d7f5fedbf16812e41749b",
                                        ApiKeyStatus.getDefault(), new Date(1561032449314L));
            ApiKey apikey3 = new ApiKey("6fb4ddd2721d7f5fedbf16812e41749b", new Date(1561032451964L), -17,
                                        "6fb4ddd2721d7f5fedbf16812e41749b", "a4d931a2-61db-410b-8bb6-2ec31df6caf6",
                                        -120, "46b53ea8-e20c-4629-a08a-5f1d35413d98",
                                        "6fb4ddd2721d7f5fedbf16812e41749b", ApiKeyStatus.getDefault(),
                                        new Date(1561032452185L));
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotNull(apikey3);
            assertNotSame(apikey2, apikey1);
            assertNotSame(apikey3, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey1, apikey2);
            assertEquals(apikey1, apikey1);
            assertFalse(apikey1.equals(null));
            assertNotEquals(apikey3, apikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
