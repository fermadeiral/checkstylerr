// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEvents.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEvents {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1558093219658L), null,
                                                          new Date(1558093226373L),
                                                          "e3aa97c0-7301-4595-9324-92585b3ec2b0",
                                                          "d0ec7331-233e-4469-8fde-eb6e884866d8",
                                                          "82c782c1-b895-4e22-af01-f08c9cfb7f25",
                                                          "ccb59d2c-49ee-4f91-ac54-49de248df689",
                                                          "3800688b-010b-4265-8176-94f7c507f83e",
                                                          "bef22527-4432-410c-bcee-410a1bc86a09", false);
            DeviceEvents deviceevents2 = deviceevents1.clone();
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1558093226247L), null,
                                                          new Date(1558093228188L),
                                                          "8c6b5db5-217b-4057-b73a-89e5939890c1",
                                                          "7203ff1f-b4f0-47f7-b300-d37c0d63c744",
                                                          "3a8eeca9-d9a0-472d-94db-2f132c5f856d",
                                                          "e5bdad1f-596e-4e11-88f8-17ddd357d403",
                                                          "32772347-5eac-43ef-801c-fb579293a348",
                                                          "d9854de1-3410-443e-bc79-d2e0f96aa98b", true);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1558093226247L), null,
                                                          new Date(1558093228188L),
                                                          "8c6b5db5-217b-4057-b73a-89e5939890c1",
                                                          "7203ff1f-b4f0-47f7-b300-d37c0d63c744",
                                                          "3a8eeca9-d9a0-472d-94db-2f132c5f856d",
                                                          "e5bdad1f-596e-4e11-88f8-17ddd357d403",
                                                          "32772347-5eac-43ef-801c-fb579293a348",
                                                          "d9854de1-3410-443e-bc79-d2e0f96aa98b", true);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2.hashCode(), deviceevents1.hashCode());
            int hashCode = deviceevents1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceevents1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEvents deviceevents = new DeviceEvents(null, new Date(1558093227830L), null, new Date(1558093224584L),
                                                     "bb33045b-bb4b-46a0-9427-e104a9dc19bd",
                                                     "e099c050-65ad-4f6f-b6dd-cabbad004b37",
                                                     "04b041c8-4e78-4638-9b96-0817a976cd7a",
                                                     "2f8ffe65-0e17-48ce-af83-f7daaa3f7305",
                                                     "510fa025-3536-46af-9a9f-a2d5e86e3acc",
                                                     "46d84826-ed45-499f-acbd-64ea25e24b3f", true);
        assertTrue(deviceevents.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1558093224635L), null,
                                                          new Date(1558093219344L),
                                                          "b1e9d48d-075a-4052-ab8c-cecabd9d720d",
                                                          "de8772c5-63a5-44eb-8868-737431bb2ce9",
                                                          "770ca1f1-9c7b-428b-beac-d9c563c7d102",
                                                          "377cbc6f-ceff-4a09-95e5-1b3da85bcfca",
                                                          "bab66a64-cf0e-4d28-9974-4846705c652d",
                                                          "7ccf3d39-671c-45b9-b9f5-125605235e35", false);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1558093224635L), null,
                                                          new Date(1558093219344L),
                                                          "b1e9d48d-075a-4052-ab8c-cecabd9d720d",
                                                          "de8772c5-63a5-44eb-8868-737431bb2ce9",
                                                          "770ca1f1-9c7b-428b-beac-d9c563c7d102",
                                                          "377cbc6f-ceff-4a09-95e5-1b3da85bcfca",
                                                          "bab66a64-cf0e-4d28-9974-4846705c652d",
                                                          "7ccf3d39-671c-45b9-b9f5-125605235e35", false);
            DeviceEvents deviceevents3 = new DeviceEvents(null, new Date(1558093224198L), null,
                                                          new Date(1558093219163L),
                                                          "f75238c2-40e9-429a-bac5-0ccb19c8e281",
                                                          "48fec75f-dc69-4b63-a2a2-8b5657e13766",
                                                          "f3389591-7590-4399-baa5-e39f2c8a4c24",
                                                          "f99f0324-0b5d-42a1-b83a-514bf5bad53c",
                                                          "de34627c-d3b2-4fd1-94d1-465b51866c81",
                                                          "c7212799-5a57-4c61-8673-3c6382b4c535", false);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotNull(deviceevents3);
            assertNotSame(deviceevents2, deviceevents1);
            assertNotSame(deviceevents3, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents1, deviceevents2);
            assertEquals(deviceevents1, deviceevents1);
            assertFalse(deviceevents1.equals(null));
            assertNotEquals(deviceevents3, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
