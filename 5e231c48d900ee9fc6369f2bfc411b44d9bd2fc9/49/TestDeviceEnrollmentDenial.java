// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEnrollmentDenial.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEnrollmentDenial {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("88dd64bea93cce83aebac0d84813ec71",
                                                                                        new Date(1558093222665L),
                                                                                        "42ee1fd1-6246-416b-b054-b84b4434a701",
                                                                                        "88dd64bea93cce83aebac0d84813ec71",
                                                                                        "88dd64bea93cce83aebac0d84813ec71");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = deviceenrollmentdenial1.clone();
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("88dd64bea93cce83aebac0d84813ec71",
                                                                                        new Date(1558093227469L),
                                                                                        "fe798864-a9bd-4028-8d51-e69d0e3425fe",
                                                                                        "88dd64bea93cce83aebac0d84813ec71",
                                                                                        "88dd64bea93cce83aebac0d84813ec71");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = new DeviceEnrollmentDenial("88dd64bea93cce83aebac0d84813ec71",
                                                                                        new Date(1558093227469L),
                                                                                        "fe798864-a9bd-4028-8d51-e69d0e3425fe",
                                                                                        "88dd64bea93cce83aebac0d84813ec71",
                                                                                        "88dd64bea93cce83aebac0d84813ec71");
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2.hashCode(), deviceenrollmentdenial1.hashCode());
            int hashCode = deviceenrollmentdenial1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceenrollmentdenial1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEnrollmentDenial deviceenrollmentdenial = new DeviceEnrollmentDenial("88dd64bea93cce83aebac0d84813ec71",
                                                                                   new Date(1558093221212L),
                                                                                   "f2941268-424b-429b-901d-097da4f1a19d",
                                                                                   "88dd64bea93cce83aebac0d84813ec71",
                                                                                   "88dd64bea93cce83aebac0d84813ec71");
        assertTrue(deviceenrollmentdenial.isValid());
        DeviceEnrollmentDenial deviceenrollmentdenialInvalid = new DeviceEnrollmentDenial("255V\u0011\u001aî‚¶è¥¸25N2\u00062:55?ç¨µ25W2GTá‘?X2ë §Fá¤™2#æ°º5L2!ê«°H5G2\u0002Yêœ“(?+5â¤²U/Q5â‡ª^è©Š22!2ë ¹'",
                                                                                          new Date(1558093226799L),
                                                                                          "c8c6c660-4dec-4554-b71d-368382b841ee",
                                                                                          "255V\u0011\u001aî‚¶è¥¸25N2\u00062:55?ç¨µ25W2GTá‘?X2ë §Fá¤™2#æ°º5L2!ê«°H5G2\u0002Yêœ“(?+5â¤²U/Q5â‡ª^è©Š22!2ë ¹'",
                                                                                          "255V\u0011\u001aî‚¶è¥¸25N2\u00062:55?ç¨µ25W2GTá‘?X2ë §Fá¤™2#æ°º5L2!ê«°H5G2\u0002Yêœ“(?+5â¤²U/Q5â‡ª^è©Š22!2ë ¹'");
        assertFalse(deviceenrollmentdenialInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("88dd64bea93cce83aebac0d84813ec71",
                                                                                        new Date(1558093222107L),
                                                                                        "0cb05c69-cf12-43d6-8567-d9b4e3ea6165",
                                                                                        "88dd64bea93cce83aebac0d84813ec71",
                                                                                        "88dd64bea93cce83aebac0d84813ec71");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = new DeviceEnrollmentDenial("88dd64bea93cce83aebac0d84813ec71",
                                                                                        new Date(1558093222107L),
                                                                                        "0cb05c69-cf12-43d6-8567-d9b4e3ea6165",
                                                                                        "88dd64bea93cce83aebac0d84813ec71",
                                                                                        "88dd64bea93cce83aebac0d84813ec71");
            DeviceEnrollmentDenial deviceenrollmentdenial3 = new DeviceEnrollmentDenial("88dd64bea93cce83aebac0d84813ec71",
                                                                                        new Date(1558093225087L),
                                                                                        "d5c823a6-40c0-4b74-8496-e7774d799199",
                                                                                        "88dd64bea93cce83aebac0d84813ec71",
                                                                                        "88dd64bea93cce83aebac0d84813ec71");
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotNull(deviceenrollmentdenial3);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertNotSame(deviceenrollmentdenial3, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial1, deviceenrollmentdenial2);
            assertEquals(deviceenrollmentdenial1, deviceenrollmentdenial1);
            assertFalse(deviceenrollmentdenial1.equals(null));
            assertNotEquals(deviceenrollmentdenial3, deviceenrollmentdenial1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
