// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantUserInvitation.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantUserInvitation {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantUserInvitation subtenantuserinvitation1 = new SubtenantUserInvitation("88dd64bea93cce83aebac0d84813ec71",
                                                                                           new Date(1558093226864L),
                                                                                           "be138.2f900@a217f.fr",
                                                                                           new Date(1558093221318L),
                                                                                           "88dd64bea93cce83aebac0d84813ec71",
                                                                                           null,
                                                                                           new Date(1558093223661L),
                                                                                           "88dd64bea93cce83aebac0d84813ec71");
            SubtenantUserInvitation subtenantuserinvitation2 = subtenantuserinvitation1.clone();
            assertNotNull(subtenantuserinvitation1);
            assertNotNull(subtenantuserinvitation2);
            assertNotSame(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantUserInvitation subtenantuserinvitation1 = new SubtenantUserInvitation("88dd64bea93cce83aebac0d84813ec71",
                                                                                           new Date(1558093222425L),
                                                                                           "d5a01.88108@211a2.fr",
                                                                                           new Date(1558093220515L),
                                                                                           "88dd64bea93cce83aebac0d84813ec71",
                                                                                           null,
                                                                                           new Date(1558093222513L),
                                                                                           "88dd64bea93cce83aebac0d84813ec71");
            SubtenantUserInvitation subtenantuserinvitation2 = new SubtenantUserInvitation("88dd64bea93cce83aebac0d84813ec71",
                                                                                           new Date(1558093222425L),
                                                                                           "d5a01.88108@211a2.fr",
                                                                                           new Date(1558093220515L),
                                                                                           "88dd64bea93cce83aebac0d84813ec71",
                                                                                           null,
                                                                                           new Date(1558093222513L),
                                                                                           "88dd64bea93cce83aebac0d84813ec71");
            assertNotNull(subtenantuserinvitation1);
            assertNotNull(subtenantuserinvitation2);
            assertNotSame(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2.hashCode(), subtenantuserinvitation1.hashCode());
            int hashCode = subtenantuserinvitation1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantuserinvitation1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantUserInvitation subtenantuserinvitation = new SubtenantUserInvitation("88dd64bea93cce83aebac0d84813ec71",
                                                                                      new Date(1558093223550L),
                                                                                      "bf14f.b4eed@a8e0d.me",
                                                                                      new Date(1558093226341L),
                                                                                      "88dd64bea93cce83aebac0d84813ec71",
                                                                                      null, new Date(1558093225062L),
                                                                                      "88dd64bea93cce83aebac0d84813ec71");
        assertTrue(subtenantuserinvitation.isValid());
        SubtenantUserInvitation subtenantuserinvitationInvalid = new SubtenantUserInvitation(null,
                                                                                             new Date(1558093220257L),
                                                                                             null,
                                                                                             new Date(1558093225333L),
                                                                                             "255V\u0011\u001aî‚¶è¥¸25N2\u00062:55?ç¨µ25W2GTá‘?X2ë §Fá¤™2#æ°º5L2!ê«°H5G2\u0002Yêœ“(?+5â¤²U/Q5â‡ª^è©Š22!2ë ¹'",
                                                                                             null,
                                                                                             new Date(1558093226646L),
                                                                                             "255V\u0011\u001aî‚¶è¥¸25N2\u00062:55?ç¨µ25W2GTá‘?X2ë §Fá¤™2#æ°º5L2!ê«°H5G2\u0002Yêœ“(?+5â¤²U/Q5â‡ª^è©Š22!2ë ¹'");
        assertFalse(subtenantuserinvitationInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantUserInvitation subtenantuserinvitation1 = new SubtenantUserInvitation("88dd64bea93cce83aebac0d84813ec71",
                                                                                           new Date(1558093228261L),
                                                                                           "97213.1d387@2f481.fr",
                                                                                           new Date(1558093227368L),
                                                                                           "88dd64bea93cce83aebac0d84813ec71",
                                                                                           null,
                                                                                           new Date(1558093223896L),
                                                                                           "88dd64bea93cce83aebac0d84813ec71");
            SubtenantUserInvitation subtenantuserinvitation2 = new SubtenantUserInvitation("88dd64bea93cce83aebac0d84813ec71",
                                                                                           new Date(1558093228261L),
                                                                                           "97213.1d387@2f481.fr",
                                                                                           new Date(1558093227368L),
                                                                                           "88dd64bea93cce83aebac0d84813ec71",
                                                                                           null,
                                                                                           new Date(1558093223896L),
                                                                                           "88dd64bea93cce83aebac0d84813ec71");
            SubtenantUserInvitation subtenantuserinvitation3 = new SubtenantUserInvitation("88dd64bea93cce83aebac0d84813ec71",
                                                                                           new Date(1558093226673L),
                                                                                           "1eed2.bc1a9@feac3.me",
                                                                                           new Date(1558093228140L),
                                                                                           "88dd64bea93cce83aebac0d84813ec71",
                                                                                           null,
                                                                                           new Date(1558093223318L),
                                                                                           "88dd64bea93cce83aebac0d84813ec71");
            assertNotNull(subtenantuserinvitation1);
            assertNotNull(subtenantuserinvitation2);
            assertNotNull(subtenantuserinvitation3);
            assertNotSame(subtenantuserinvitation2, subtenantuserinvitation1);
            assertNotSame(subtenantuserinvitation3, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation1, subtenantuserinvitation2);
            assertEquals(subtenantuserinvitation1, subtenantuserinvitation1);
            assertFalse(subtenantuserinvitation1.equals(null));
            assertNotEquals(subtenantuserinvitation3, subtenantuserinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
