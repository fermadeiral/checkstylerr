// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import com.arm.mbed.cloud.sdk.common.Order;
import com.arm.mbed.cloud.sdk.common.listing.ListOptionsEncoder;
import com.arm.mbed.cloud.sdk.common.listing.filtering.FilterOperator;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEventsListOptions.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEventsListOptions {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEventsListOptions deviceeventslistoptions1 = new DeviceEventsListOptions(Integer.valueOf(24),
                                                                                           Long.valueOf(1),
                                                                                           Order.getDefault(),
                                                                                           "1a9efe45-944f-42bb-9495-4100bb8a4b76",
                                                                                           null, null);
            DeviceEventsListOptions deviceeventslistoptions2 = deviceeventslistoptions1.clone();
            assertNotNull(deviceeventslistoptions1);
            assertNotNull(deviceeventslistoptions2);
            assertNotSame(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2, deviceeventslistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the filters method.
     */
    @SuppressWarnings({ "boxing", "resource" })
    @Test
    public void testFilters() {
        try {
            DeviceEventsListOptions option = new DeviceEventsListOptions().equalToDeviceId("9b45c905-d243-4feb-aaba-ea4cfecf95c1")
                                                                          .notEqualToDeviceId("742b2db9-9ec3-48ff-8d1f-4c3856834fa5")
                                                                          .inDeviceIds(Arrays.asList("0c39b98a-cbea-488d-9912-fbbbeff5678e",
                                                                                                     "cb0f5d3a-d4c2-4409-8b69-36b21559a5fd",
                                                                                                     "a32bdab5-1b6c-4a02-9c8f-33990db938bd"))
                                                                          .notInDeviceIds(Arrays.asList("7116dc0e-ae98-48ac-922b-cc62b5fd9834",
                                                                                                        "001618a6-3d83-4763-836a-9362127b8daa",
                                                                                                        "c56f77f6-55a0-4548-9c75-fd6245872042",
                                                                                                        "c49b3c91-a1b7-4f5b-a8c2-51d341b8e89c",
                                                                                                        "ca9a00fe-66c4-4592-a82c-7f11294f3718",
                                                                                                        "0bc4950a-e560-458b-835d-0c74fcb4679d",
                                                                                                        "7113b75e-9dfb-4c61-b404-b63dd5291d63",
                                                                                                        "3bb4da70-c983-45b5-97b2-7d60c1ba0dab",
                                                                                                        "ef303b70-0724-4344-ad23-e8753886b843"))
                                                                          .equalToDescription("60c0dcfc-1ebb-41ed-a3f3-ffec0554a75f")
                                                                          .notEqualToDescription("89b4f99d-9c55-47a1-b033-d07b0287e082")
                                                                          .inDescriptions(Arrays.asList("d4c62acb-3dac-4afc-9d90-de7514eb2839",
                                                                                                        "9d352ec4-d1e2-49c7-a934-ac5e68ff09eb",
                                                                                                        "8d26bfd9-32d6-451b-ab0e-5df42ce47be8",
                                                                                                        "694c66c3-1a77-4604-bb8c-92ff49c42010",
                                                                                                        "7f0e50bd-6a00-4c44-8554-092f70020f45",
                                                                                                        "5873c437-c022-4a82-a47d-c699b7f2ac3e",
                                                                                                        "a9d499ac-3926-4895-8299-96b8f0762a5d",
                                                                                                        "ab75d921-2d63-4790-a713-754feba9d8f5",
                                                                                                        "37db0fa4-53d2-4ec2-a8e3-08512b3d2f8f"))
                                                                          .notInDescriptions(Arrays.asList("22d9dbc2-cd42-49f6-aee8-047f0477cee3",
                                                                                                           "6bb3253c-a91a-4f62-ad53-747c0f649065",
                                                                                                           "3a5af41b-3e57-4c57-8bac-2604a925e584"))
                                                                          .inDateTimes(Arrays.asList(new Date(1558093228223L),
                                                                                                     new Date(1558093229391L),
                                                                                                     new Date(1558093224076L),
                                                                                                     new Date(1558093229123L),
                                                                                                     new Date(1558093223040L),
                                                                                                     new Date(1558093221671L)))
                                                                          .notInDateTimes(Arrays.asList(new Date(1558093229264L),
                                                                                                        new Date(1558093223860L),
                                                                                                        new Date(1558093224236L)))
                                                                          .lessThanDateTime(new Date(1558093228298L))
                                                                          .greaterThanDateTime(new Date(1558093221783L))
                                                                          .equalToStateChange(Boolean.FALSE)
                                                                          .notEqualToStateChange(Boolean.FALSE)
                                                                          .equalToId("8803ad8e-994d-41d1-b022-25b3bf97f8af")
                                                                          .notEqualToId("e62c3b5a-08a3-4468-97da-dabbabd2c902")
                                                                          .inIds(Arrays.asList("6989ccb8-1a34-427c-9956-41b403939f55"))
                                                                          .notInIds(Arrays.asList("f22923f8-7eac-4dc3-8a23-a4ceb4194cbb",
                                                                                                  "cde8977f-97e3-46e5-ae68-84511b4edafb",
                                                                                                  "52e6104d-b2d6-4a8f-95fc-8f986b9fd341",
                                                                                                  "c42d805b-1c1b-441c-81d3-7503aa2bed5f",
                                                                                                  "64b7c11a-728d-43cf-90de-65f1806e28c4",
                                                                                                  "18269359-c024-4146-95e9-5e3b65db3a4c",
                                                                                                  "3f7908c9-c435-4719-bc7a-8c5e195242ed"))
                                                                          .equalToEventType("8229626f-2d7d-48b2-9f7b-8a02e94c6510")
                                                                          .notEqualToEventType("2231b56a-f3e9-430d-8632-2aaf471265e5")
                                                                          .inEventTypes(Arrays.asList("1dbfbd7c-6ee6-453c-bb14-eeb3452831a5"))
                                                                          .notInEventTypes(Arrays.asList("c93340b2-67f5-4fa2-8e15-b43bfe2d9276",
                                                                                                         "73219a7f-0f06-423e-9d37-7548f97f8a4c",
                                                                                                         "7c2aa44a-76d2-4a61-aaeb-8680a7d1c8fe",
                                                                                                         "52d81b81-fd66-4ca2-b15f-79ed01314427"));
            assertTrue(option.hasFilters());
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID, FilterOperator.EQUAL));
            assertNotNull(option.getDeviceIdFilters());
            assertEquals("9b45c905-d243-4feb-aaba-ea4cfecf95c1",
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDeviceIdFilters());
            assertEquals("742b2db9-9ec3-48ff-8d1f-4c3856834fa5",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID, FilterOperator.IN));
            assertNotNull(option.getDeviceIdFilters());
            assertEquals(Arrays.asList("0c39b98a-cbea-488d-9912-fbbbeff5678e", "cb0f5d3a-d4c2-4409-8b69-36b21559a5fd",
                                       "a32bdab5-1b6c-4a02-9c8f-33990db938bd"),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID,
                                                                 List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getDeviceIdFilters());
            assertEquals(Arrays.asList("7116dc0e-ae98-48ac-922b-cc62b5fd9834", "001618a6-3d83-4763-836a-9362127b8daa",
                                       "c56f77f6-55a0-4548-9c75-fd6245872042", "c49b3c91-a1b7-4f5b-a8c2-51d341b8e89c",
                                       "ca9a00fe-66c4-4592-a82c-7f11294f3718", "0bc4950a-e560-458b-835d-0c74fcb4679d",
                                       "7113b75e-9dfb-4c61-b404-b63dd5291d63", "3bb4da70-c983-45b5-97b2-7d60c1ba0dab",
                                       "ef303b70-0724-4344-ad23-e8753886b843"),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID,
                                                                    List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("60c0dcfc-1ebb-41ed-a3f3-ffec0554a75f",
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("89b4f99d-9c55-47a1-b033-d07b0287e082",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                       String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("d4c62acb-3dac-4afc-9d90-de7514eb2839", "9d352ec4-d1e2-49c7-a934-ac5e68ff09eb",
                                       "8d26bfd9-32d6-451b-ab0e-5df42ce47be8", "694c66c3-1a77-4604-bb8c-92ff49c42010",
                                       "7f0e50bd-6a00-4c44-8554-092f70020f45", "5873c437-c022-4a82-a47d-c699b7f2ac3e",
                                       "a9d499ac-3926-4895-8299-96b8f0762a5d", "ab75d921-2d63-4790-a713-754feba9d8f5",
                                       "37db0fa4-53d2-4ec2-a8e3-08512b3d2f8f"),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                 List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("22d9dbc2-cd42-49f6-aee8-047f0477cee3", "6bb3253c-a91a-4f62-ad53-747c0f649065",
                                       "3a5af41b-3e57-4c57-8bac-2604a925e584"),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME, FilterOperator.IN));
            assertNotNull(option.getDateTimeFilters());
            assertEquals(Arrays.asList(new Date(1558093228223L), new Date(1558093229391L), new Date(1558093224076L),
                                       new Date(1558093229123L), new Date(1558093223040L), new Date(1558093221671L)),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME,
                                                                 List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME, FilterOperator.NOT_IN));
            assertNotNull(option.getDateTimeFilters());
            assertEquals(Arrays.asList(new Date(1558093229264L), new Date(1558093223860L), new Date(1558093224236L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME,
                                                                    List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME, FilterOperator.LESS_THAN));
            assertNotNull(option.getDateTimeFilters());
            assertEquals(new Date(1558093228298L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME, FilterOperator.GREATER_THAN));
            assertNotNull(option.getDateTimeFilters());
            assertEquals(new Date(1558093221783L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE, FilterOperator.EQUAL));
            assertNotNull(option.getStateChangeFilters());
            assertEquals(Boolean.FALSE,
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE,
                                                                    Boolean.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getStateChangeFilters());
            assertEquals(Boolean.FALSE,
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE,
                                                                       Boolean.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, FilterOperator.EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("8803ad8e-994d-41d1-b022-25b3bf97f8af",
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("e62c3b5a-08a3-4468-97da-dabbabd2c902",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, FilterOperator.IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("6989ccb8-1a34-427c-9956-41b403939f55"),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, List.class,
                                                                 option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("f22923f8-7eac-4dc3-8a23-a4ceb4194cbb", "cde8977f-97e3-46e5-ae68-84511b4edafb",
                                       "52e6104d-b2d6-4a8f-95fc-8f986b9fd341", "c42d805b-1c1b-441c-81d3-7503aa2bed5f",
                                       "64b7c11a-728d-43cf-90de-65f1806e28c4", "18269359-c024-4146-95e9-5e3b65db3a4c",
                                       "3f7908c9-c435-4719-bc7a-8c5e195242ed"),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID,
                                                                    List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE, FilterOperator.EQUAL));
            assertNotNull(option.getEventTypeFilters());
            assertEquals("8229626f-2d7d-48b2-9f7b-8a02e94c6510",
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE,
                                                                    String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getEventTypeFilters());
            assertEquals("2231b56a-f3e9-430d-8632-2aaf471265e5",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE,
                                                                       String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE, FilterOperator.IN));
            assertNotNull(option.getEventTypeFilters());
            assertEquals(Arrays.asList("1dbfbd7c-6ee6-453c-bb14-eeb3452831a5"),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE,
                                                                 List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE, FilterOperator.NOT_IN));
            assertNotNull(option.getEventTypeFilters());
            assertEquals(Arrays.asList("c93340b2-67f5-4fa2-8e15-b43bfe2d9276", "73219a7f-0f06-423e-9d37-7548f97f8a4c",
                                       "7c2aa44a-76d2-4a61-aaeb-8680a7d1c8fe", "52d81b81-fd66-4ca2-b15f-79ed01314427"),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE,
                                                                    List.class, option));
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEventsListOptions deviceeventslistoptions1 = new DeviceEventsListOptions(Integer.valueOf(-45),
                                                                                           Long.valueOf(-54),
                                                                                           Order.getDefault(),
                                                                                           "b3062576-74c8-4773-a333-fb558b17dc43",
                                                                                           null, null);
            DeviceEventsListOptions deviceeventslistoptions2 = new DeviceEventsListOptions(Integer.valueOf(-45),
                                                                                           Long.valueOf(-54),
                                                                                           Order.getDefault(),
                                                                                           "b3062576-74c8-4773-a333-fb558b17dc43",
                                                                                           null, null);
            assertNotNull(deviceeventslistoptions1);
            assertNotNull(deviceeventslistoptions2);
            assertNotSame(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2.hashCode(), deviceeventslistoptions1.hashCode());
            int hashCode = deviceeventslistoptions1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceeventslistoptions1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEventsListOptions deviceeventslistoptions1 = new DeviceEventsListOptions(Integer.valueOf(-49),
                                                                                           Long.valueOf(-67),
                                                                                           Order.getDefault(),
                                                                                           "a094af60-94fb-4ce8-a861-2ac7e6b3d916",
                                                                                           null, null);
            DeviceEventsListOptions deviceeventslistoptions2 = new DeviceEventsListOptions(Integer.valueOf(-49),
                                                                                           Long.valueOf(-67),
                                                                                           Order.getDefault(),
                                                                                           "a094af60-94fb-4ce8-a861-2ac7e6b3d916",
                                                                                           null, null);
            DeviceEventsListOptions deviceeventslistoptions3 = new DeviceEventsListOptions(Integer.valueOf(-101),
                                                                                           Long.valueOf(12),
                                                                                           Order.getDefault(),
                                                                                           "628bc9e3-2c88-462a-83e7-458689832629",
                                                                                           null, null);
            assertNotNull(deviceeventslistoptions1);
            assertNotNull(deviceeventslistoptions2);
            assertNotNull(deviceeventslistoptions3);
            assertNotSame(deviceeventslistoptions2, deviceeventslistoptions1);
            assertNotSame(deviceeventslistoptions3, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions1, deviceeventslistoptions2);
            assertEquals(deviceeventslistoptions1, deviceeventslistoptions1);
            assertFalse(deviceeventslistoptions1.equals(null));
            assertNotEquals(deviceeventslistoptions3, deviceeventslistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
