// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model ParentAccount.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestParentAccount {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("3300b.17e8b@8ac70.fr",
                                                             "e399369b-1e75-4bde-97ea-d9c27941ed05",
                                                             "88dd64bea93cce83aebac0d84813ec71");
            ParentAccount parentaccount2 = parentaccount1.clone();
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotSame(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("e2e69.30591@f1392.me",
                                                             "f0105e41-8fed-4539-af87-890b1ef2d1aa",
                                                             "88dd64bea93cce83aebac0d84813ec71");
            ParentAccount parentaccount2 = new ParentAccount("e2e69.30591@f1392.me",
                                                             "f0105e41-8fed-4539-af87-890b1ef2d1aa",
                                                             "88dd64bea93cce83aebac0d84813ec71");
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotSame(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount2.hashCode(), parentaccount1.hashCode());
            int hashCode = parentaccount1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, parentaccount1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ParentAccount parentaccount = new ParentAccount("8d83c.5e5de@b2321.me", "314fdd74-a4c5-45b8-a7b6-04b8507eea31",
                                                        "88dd64bea93cce83aebac0d84813ec71");
        assertTrue(parentaccount.isValid());
        ParentAccount parentaccountInvalid = new ParentAccount("é‹“\u000e0 â®²âžž!\u0004\u001d\u001dè¨…!âªµá‹§å ¬â«¸ã»…>>é©¾#>\u000f9\u0007!6ï?‚ä…º#êŽ¬6å³‚\b å²’ä¦‚ãŒ?â·Ÿ>à³«ã‚´ï¯£ï¡µâ±¡éª¥â¬„êŽ’â®—ä¤„é¨?â„¶\u0015ç´„ ï”·ä¾‡éš•ï??ïŸµâ´ƒè°Ž",
                                                               "49d759e0-b955-402a-9b5a-40404e934458be3ce35c-e85c-4312-8770-c1fd238bb167892a7947-d8af-4570-88f2-db6489c5fd8e",
                                                               "255V\u0011\u001aî‚¶è¥¸25N2\u00062:55?ç¨µ25W2GTá‘?X2ë §Fá¤™2#æ°º5L2!ê«°H5G2\u0002Yêœ“(?+5â¤²U/Q5â‡ª^è©Š22!2ë ¹'");
        assertFalse(parentaccountInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("eab6d.135dd@f0a40.me",
                                                             "60186945-1c54-496f-bb11-fd719d383a61",
                                                             "88dd64bea93cce83aebac0d84813ec71");
            ParentAccount parentaccount2 = new ParentAccount("eab6d.135dd@f0a40.me",
                                                             "60186945-1c54-496f-bb11-fd719d383a61",
                                                             "88dd64bea93cce83aebac0d84813ec71");
            ParentAccount parentaccount3 = new ParentAccount("44616.25151@caef8.fr",
                                                             "9c7aad60-643c-45a6-bd2c-bf49463d7978",
                                                             "88dd64bea93cce83aebac0d84813ec71");
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotNull(parentaccount3);
            assertNotSame(parentaccount2, parentaccount1);
            assertNotSame(parentaccount3, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount1, parentaccount2);
            assertEquals(parentaccount1, parentaccount1);
            assertFalse(parentaccount1.equals(null));
            assertNotEquals(parentaccount3, parentaccount1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
