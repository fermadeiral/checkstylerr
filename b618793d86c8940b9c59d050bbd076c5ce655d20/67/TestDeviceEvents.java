// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEvents.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEvents {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1561379514499L), null,
                                                          new Date(1561379512075L),
                                                          "7fecdf57-96ec-4566-a38d-567e63ef43d9",
                                                          "bde5e073-5a0f-40fa-9961-8b60cd20a1a1",
                                                          "6ed7e5c4-1a82-4ca6-82ed-a161923a1778",
                                                          "1e304157-a4b5-47db-a8ab-f2df00dfe4ab",
                                                          "75e851f7-4620-4b1d-bc76-04dbee1083d8",
                                                          "59140628-ab13-4875-bdca-b3a2fc0b06f3", true);
            DeviceEvents deviceevents2 = deviceevents1.clone();
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1561379516464L), null,
                                                          new Date(1561379519868L),
                                                          "05bb704a-4d18-496d-aaba-676067ee7727",
                                                          "d4dcf873-2247-48c4-b227-c22d1e551ed9",
                                                          "a76f6619-6614-4a5f-8ae9-1e19bfa302b8",
                                                          "f84098aa-c21b-4861-9b4b-04bccd354cde",
                                                          "e5505f1c-290d-45e6-87dd-14b3215df013",
                                                          "e6668a41-87b0-4773-aaed-87b762112e13", true);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1561379516464L), null,
                                                          new Date(1561379519868L),
                                                          "05bb704a-4d18-496d-aaba-676067ee7727",
                                                          "d4dcf873-2247-48c4-b227-c22d1e551ed9",
                                                          "a76f6619-6614-4a5f-8ae9-1e19bfa302b8",
                                                          "f84098aa-c21b-4861-9b4b-04bccd354cde",
                                                          "e5505f1c-290d-45e6-87dd-14b3215df013",
                                                          "e6668a41-87b0-4773-aaed-87b762112e13", true);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2.hashCode(), deviceevents1.hashCode());
            int hashCode = deviceevents1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceevents1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEvents deviceevents = new DeviceEvents(null, new Date(1561379516554L), null, new Date(1561379514003L),
                                                     "d70bcf1d-b072-4d94-a122-5277a5a21aee",
                                                     "0e18c7b4-b589-4cdd-958d-769c3ea64bef",
                                                     "6618099f-c638-46ba-98cc-dafbc3269b49",
                                                     "77462b2f-f5e0-4e3a-8804-6b5bd3f17292",
                                                     "0d4359d1-ac7a-4bb6-89ad-9428bb75017a",
                                                     "77ef408d-6c4b-461f-9d0d-0ab191199a97", false);
        assertTrue(deviceevents.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1561379511919L), null,
                                                          new Date(1561379514102L),
                                                          "6de33b19-7859-4c46-8f50-be43fec2acca",
                                                          "11200512-ebfb-4afa-b643-6ba6c8c6178b",
                                                          "dbcdd8d2-428e-418a-b039-3750e01c0354",
                                                          "1d3b4cc9-51eb-4c29-8458-9b739c0c83c1",
                                                          "cf7ac989-a432-47f6-a742-eeaab477b209",
                                                          "268c4cde-6f76-45ea-8290-715827a8c33c", true);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1561379511919L), null,
                                                          new Date(1561379514102L),
                                                          "6de33b19-7859-4c46-8f50-be43fec2acca",
                                                          "11200512-ebfb-4afa-b643-6ba6c8c6178b",
                                                          "dbcdd8d2-428e-418a-b039-3750e01c0354",
                                                          "1d3b4cc9-51eb-4c29-8458-9b739c0c83c1",
                                                          "cf7ac989-a432-47f6-a742-eeaab477b209",
                                                          "268c4cde-6f76-45ea-8290-715827a8c33c", true);
            DeviceEvents deviceevents3 = new DeviceEvents(null, new Date(1561379512986L), null,
                                                          new Date(1561379517283L),
                                                          "084323d5-de77-4429-ba7a-9e8cae6b9e04",
                                                          "33d278da-ada9-477b-82a7-49943ac7c35c",
                                                          "686d0206-d53f-4047-8e8b-0ab508ebbbd5",
                                                          "adadf7c0-86bc-4cab-aab3-87629617ecae",
                                                          "f689c95b-22c0-4da9-b043-f527817a4168",
                                                          "e37113b4-415f-4f87-b8c0-c8d8366f3b67", true);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotNull(deviceevents3);
            assertNotSame(deviceevents2, deviceevents1);
            assertNotSame(deviceevents3, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents1, deviceevents2);
            assertEquals(deviceevents1, deviceevents1);
            assertFalse(deviceevents1.equals(null));
            assertNotEquals(deviceevents3, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
