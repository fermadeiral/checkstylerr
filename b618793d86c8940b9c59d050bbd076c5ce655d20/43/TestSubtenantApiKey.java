// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantApiKey.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantApiKey {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("d352a55a4f9dba6e0ef7ddad0a227bef",
                                                                   new Date(1561379511604L), 31,
                                                                   "d352a55a4f9dba6e0ef7ddad0a227bef",
                                                                   "ca6066a0-ac39-4a9c-a498-ec5b1344ec82", 60,
                                                                   "a84cdf9b-7ce2-457e-9ddb-d621120e2acf",
                                                                   "d352a55a4f9dba6e0ef7ddad0a227bef",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1561379517801L));
            SubtenantApiKey subtenantapikey2 = subtenantapikey1.clone();
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("d352a55a4f9dba6e0ef7ddad0a227bef",
                                                                   new Date(1561379516381L), 99,
                                                                   "d352a55a4f9dba6e0ef7ddad0a227bef",
                                                                   "1a5db85f-6e5d-46b4-8655-ecc3329a0189", -78,
                                                                   "324a77aa-3b99-470e-8142-dd3756edf6f0",
                                                                   "d352a55a4f9dba6e0ef7ddad0a227bef",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1561379515208L));
            SubtenantApiKey subtenantapikey2 = new SubtenantApiKey("d352a55a4f9dba6e0ef7ddad0a227bef",
                                                                   new Date(1561379516381L), 99,
                                                                   "d352a55a4f9dba6e0ef7ddad0a227bef",
                                                                   "1a5db85f-6e5d-46b4-8655-ecc3329a0189", -78,
                                                                   "324a77aa-3b99-470e-8142-dd3756edf6f0",
                                                                   "d352a55a4f9dba6e0ef7ddad0a227bef",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1561379515208L));
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2.hashCode(), subtenantapikey1.hashCode());
            int hashCode = subtenantapikey1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantapikey1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantApiKey subtenantapikey = new SubtenantApiKey("d352a55a4f9dba6e0ef7ddad0a227bef",
                                                              new Date(1561379517021L), -125,
                                                              "d352a55a4f9dba6e0ef7ddad0a227bef",
                                                              "10fe9c37-9051-4bf9-80f2-e988039368de", -57,
                                                              "2c3c8a9e-b011-4ec5-beb8-55c3fbd897db",
                                                              "d352a55a4f9dba6e0ef7ddad0a227bef",
                                                              SubtenantApiKeyStatus.getDefault(),
                                                              new Date(1561379513189L));
        assertTrue(subtenantapikey.isValid());
        SubtenantApiKey subtenantapikeyInvalid = new SubtenantApiKey(null, new Date(1561379512861L), -90,
                                                                     "1<Q\u0003811â„Žc81\u0001]1ïƒƒ\u00188î¹¾câª€B1cc$$êŒ¼;ã¼Šá¡º1W\u00111c11.8^11c8\u0014\u00128é?›K\u0012c18@P\u000bccc1)?88",
                                                                     "c807c829-401f-4723-9638-4628ef7b6646", -2, null,
                                                                     "1<Q\u0003811â„Žc81\u0001]1ïƒƒ\u00188î¹¾câª€B1cc$$êŒ¼;ã¼Šá¡º1W\u00111c11.8^11c8\u0014\u00128é?›K\u0012c18@P\u000bccc1)?88",
                                                                     SubtenantApiKeyStatus.getDefault(),
                                                                     new Date(1561379512064L));
        assertFalse(subtenantapikeyInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("d352a55a4f9dba6e0ef7ddad0a227bef",
                                                                   new Date(1561379520249L), -69,
                                                                   "d352a55a4f9dba6e0ef7ddad0a227bef",
                                                                   "083bf2ca-931d-437b-8483-290a4204fbdc", 15,
                                                                   "86269f8b-6827-49db-afbd-e276485ed481",
                                                                   "d352a55a4f9dba6e0ef7ddad0a227bef",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1561379517739L));
            SubtenantApiKey subtenantapikey2 = new SubtenantApiKey("d352a55a4f9dba6e0ef7ddad0a227bef",
                                                                   new Date(1561379520249L), -69,
                                                                   "d352a55a4f9dba6e0ef7ddad0a227bef",
                                                                   "083bf2ca-931d-437b-8483-290a4204fbdc", 15,
                                                                   "86269f8b-6827-49db-afbd-e276485ed481",
                                                                   "d352a55a4f9dba6e0ef7ddad0a227bef",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1561379517739L));
            SubtenantApiKey subtenantapikey3 = new SubtenantApiKey("d352a55a4f9dba6e0ef7ddad0a227bef",
                                                                   new Date(1561379514690L), 31,
                                                                   "d352a55a4f9dba6e0ef7ddad0a227bef",
                                                                   "f3c779e5-0dac-4cc1-849b-538d034795ef", -127,
                                                                   "18b4859d-7657-49a3-987d-43fc5c7e87d2",
                                                                   "d352a55a4f9dba6e0ef7ddad0a227bef",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1561379513062L));
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotNull(subtenantapikey3);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertNotSame(subtenantapikey3, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey1, subtenantapikey2);
            assertEquals(subtenantapikey1, subtenantapikey1);
            assertFalse(subtenantapikey1.equals(null));
            assertNotEquals(subtenantapikey3, subtenantapikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
