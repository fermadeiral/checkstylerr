// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEvents.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEvents {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1553793336286L), null,
                                                          new Date(1553793335223L),
                                                          "38303913-7f66-44d4-9b95-5b14a74a9846",
                                                          "bc6932a6-3b20-49f0-ab76-b4ea21798812",
                                                          "52a7c4b6-80ab-409b-a404-c3a89308230c",
                                                          "b7e5e38e-5205-45fc-ae5c-514d5b8e0ab5",
                                                          "7adf9f68-adca-4d0b-b7b5-dc7c1b581f5f",
                                                          "cd9b002a-ad88-4fcf-9d98-8f943812a6bb", false);
            DeviceEvents deviceevents2 = deviceevents1.clone();
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1553793332811L), null,
                                                          new Date(1553793327272L),
                                                          "2f82e080-e175-4426-b0a4-ec300694e8e7",
                                                          "cf0e5552-0f35-423b-bb2f-8330ef132374",
                                                          "22dd3d67-7087-42c3-b7f9-531b21455d7e",
                                                          "be3d4c15-8ea7-4b0f-956c-ca6862cec873",
                                                          "371e0ec0-e63c-49ad-9195-ac9801b07605",
                                                          "47292f07-6a43-4fca-9e4d-8015d9e8a9d1", true);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1553793332811L), null,
                                                          new Date(1553793327272L),
                                                          "2f82e080-e175-4426-b0a4-ec300694e8e7",
                                                          "cf0e5552-0f35-423b-bb2f-8330ef132374",
                                                          "22dd3d67-7087-42c3-b7f9-531b21455d7e",
                                                          "be3d4c15-8ea7-4b0f-956c-ca6862cec873",
                                                          "371e0ec0-e63c-49ad-9195-ac9801b07605",
                                                          "47292f07-6a43-4fca-9e4d-8015d9e8a9d1", true);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2.hashCode(), deviceevents1.hashCode());
            int hashCode = deviceevents1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceevents1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEvents deviceevents = new DeviceEvents(null, new Date(1553793331326L), null, new Date(1553793333155L),
                                                     "f0f28099-87ca-4f72-8d4d-40e08f7cd992",
                                                     "d5f0e1fa-069d-4af6-a428-427858376724",
                                                     "2347aa7f-5ab7-4871-97db-038b821412f8",
                                                     "a463047c-c1fb-446b-a87b-96c530959289",
                                                     "b0c5b046-553b-40c0-9db4-ee551f159c96",
                                                     "f405171e-a64d-4ef1-a524-64c00259bb87", false);
        assertTrue(deviceevents.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1553793331371L), null,
                                                          new Date(1553793327250L),
                                                          "3fe27dac-72dd-427e-bb4e-9630c905890b",
                                                          "c87e9283-d807-4284-beac-ec91b6dd8b89",
                                                          "b61994a4-063b-4d03-891d-5c9fbe258369",
                                                          "aacd3b8e-06f8-4ec2-b3df-d5b24c37b718",
                                                          "bce534e9-2307-45a7-b059-621bbcfc79a1",
                                                          "82af3ff0-2979-4639-9dce-6c126186d836", true);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1553793331371L), null,
                                                          new Date(1553793327250L),
                                                          "3fe27dac-72dd-427e-bb4e-9630c905890b",
                                                          "c87e9283-d807-4284-beac-ec91b6dd8b89",
                                                          "b61994a4-063b-4d03-891d-5c9fbe258369",
                                                          "aacd3b8e-06f8-4ec2-b3df-d5b24c37b718",
                                                          "bce534e9-2307-45a7-b059-621bbcfc79a1",
                                                          "82af3ff0-2979-4639-9dce-6c126186d836", true);
            DeviceEvents deviceevents3 = new DeviceEvents(null, new Date(1553793331053L), null,
                                                          new Date(1553793336496L),
                                                          "5f641842-3214-43ba-9dc2-8a05cf143e32",
                                                          "0031f1eb-960d-4901-a8d8-0c50ba7a2e21",
                                                          "00bbb535-aba3-4c64-816e-46be90d411de",
                                                          "5bdc0827-2386-4724-a417-5a4a25c82cbe",
                                                          "2a755f39-4d27-445e-bf33-3c5e7be0ce3f",
                                                          "fba79096-2775-4ed8-b83a-b39120713765", true);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotNull(deviceevents3);
            assertNotSame(deviceevents2, deviceevents1);
            assertNotSame(deviceevents3, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents1, deviceevents2);
            assertEquals(deviceevents1, deviceevents1);
            assertFalse(deviceevents1.equals(null));
            assertNotEquals(deviceevents3, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
