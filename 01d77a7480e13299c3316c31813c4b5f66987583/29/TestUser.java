// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model User.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestUser {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            User user1 = new User("ac236cad-5003-425d-935a-19e516ed4706", null, "a74427e3-13d5-4528-8a0a-ce252e15718e",
                                  new Date(1553793327043L), 6, null, "a1ffac65-8d8b-4ac1-8315-1a96a1cf0c1f", true,
                                  "5aeca3c0-6053-4e39-bb25-0cf4816a55df", "629d2c03-ec9e-4ea6-a0b4-23e1a4e44a51", -112,
                                  null, null, true, "a9a86eb5-09d3-4dc8-9e24-61c2b3fe515d", -34,
                                  "f74efe96-8e5b-41a7-9cc0-4aadfbbd4c50", UserStatus.getDefault(), false, null, true,
                                  new Date(1553793334956L), "dc93e95c-78c1-4544-87f5-99cee53eeb13");
            User user2 = user1.clone();
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotSame(user2, user1);
            assertEquals(user2, user1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            User user1 = new User("045ac648-b2d1-4b4f-a5ba-c7017fda5e17", null, "4018d92f-049d-4087-a580-9fb3582eff58",
                                  new Date(1553793328835L), -21, null, "421fcd5c-bcff-4b9a-a1f2-13e13058aadc", true,
                                  "2b7137e4-4438-4de7-acd3-a3b514d4711e", "7d6b722f-dd03-47f7-b063-afcccf8d3c4d", -9,
                                  null, null, false, "2b55e455-6abb-41bc-8b7a-f6565cb20857", -124,
                                  "382a58ab-bfd8-47b1-bffa-30b383eff651", UserStatus.getDefault(), false, null, false,
                                  new Date(1553793335063L), "278df4bc-f9ce-4b63-9ab1-bbeb02ac381a");
            User user2 = new User("045ac648-b2d1-4b4f-a5ba-c7017fda5e17", null, "4018d92f-049d-4087-a580-9fb3582eff58",
                                  new Date(1553793328835L), -21, null, "421fcd5c-bcff-4b9a-a1f2-13e13058aadc", true,
                                  "2b7137e4-4438-4de7-acd3-a3b514d4711e", "7d6b722f-dd03-47f7-b063-afcccf8d3c4d", -9,
                                  null, null, false, "2b55e455-6abb-41bc-8b7a-f6565cb20857", -124,
                                  "382a58ab-bfd8-47b1-bffa-30b383eff651", UserStatus.getDefault(), false, null, false,
                                  new Date(1553793335063L), "278df4bc-f9ce-4b63-9ab1-bbeb02ac381a");
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotSame(user2, user1);
            assertEquals(user2, user1);
            assertEquals(user2.hashCode(), user1.hashCode());
            int hashCode = user1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, user1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        User user = new User("77c4e2f2-2831-4831-a09b-4841ad72f452", null, "417ca8b4-92cb-487d-9e01-eba546883f0c",
                             new Date(1553793332258L), 65, null, "3cd65d4a-f681-4989-94ff-c8ad65446d5e", false,
                             "f746c913-226e-4e39-9127-70fb9902f349", "5e3af5e1-863f-468c-aa86-c473c45c4dd6", -109, null,
                             null, true, "76cc44a0-0c75-47d0-a47f-383ed70deb99", 101,
                             "2047b780-b7a6-4a6b-933a-7f6fa734913b", UserStatus.getDefault(), false, null, true,
                             new Date(1553793329219L), "4aed14ba-5b86-4f63-8cc2-79427a7d4cf2");
        assertTrue(user.isValid());
        User userInvalid = new User("0d9d5226-2e0c-40d8-8d41-682c6c83a82a", null,
                                    "b9cfbb20-ca56-4c07-ad14-b27bc721de61", new Date(1553793333245L), 15, null, null,
                                    true, "2d7ba600-3615-4b4f-a133-2c55f7744f95",
                                    "b0c03852-9660-41e6-8a01-5e101d1264a1", 44, null, null, false,
                                    "a699065a-2dd2-4236-bdc0-e4c48b77ab12", 120, "9cd20ea7-e34a-452d-b7dd-8bdbd03b795c",
                                    UserStatus.getDefault(), false, null, false, new Date(1553793329861L),
                                    "29e68eb7-fcc7-4390-be94-1332d61a9c61");
        assertFalse(userInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            User user1 = new User("5aa06277-b5e7-4bd0-834f-e3e548ca394c", null, "399c8f8e-8eb9-4137-8798-9d66680b45a2",
                                  new Date(1553793328397L), 56, null, "11851605-01de-4ee9-af1b-d8d08ee4aeb1", false,
                                  "d189a644-da2c-48a9-a29c-de4feba943aa", "042035bf-8278-4675-9a88-af1721422d54", 126,
                                  null, null, true, "1a79918a-a236-4854-bab4-69f6014dfa57", -84,
                                  "232ea8c6-9343-40fa-a043-106fafb8ee85", UserStatus.getDefault(), false, null, true,
                                  new Date(1553793330189L), "34e43120-ce35-46a7-8441-d9768f2e520e");
            User user2 = new User("5aa06277-b5e7-4bd0-834f-e3e548ca394c", null, "399c8f8e-8eb9-4137-8798-9d66680b45a2",
                                  new Date(1553793328397L), 56, null, "11851605-01de-4ee9-af1b-d8d08ee4aeb1", false,
                                  "d189a644-da2c-48a9-a29c-de4feba943aa", "042035bf-8278-4675-9a88-af1721422d54", 126,
                                  null, null, true, "1a79918a-a236-4854-bab4-69f6014dfa57", -84,
                                  "232ea8c6-9343-40fa-a043-106fafb8ee85", UserStatus.getDefault(), false, null, true,
                                  new Date(1553793330189L), "34e43120-ce35-46a7-8441-d9768f2e520e");
            User user3 = new User("a6485ee9-7193-4630-a84b-900957e7d48f", null, "ac6aab9f-aab8-4d09-be15-9c35baea5b8b",
                                  new Date(1553793332511L), 20, null, "5f8d8341-3290-4bc3-aabc-a5e62531215a", false,
                                  "c5b38a29-2cda-4b0d-ad53-1fd0dc0678a1", "bf477028-70ef-4f42-9946-bec9b5e2bf58", -81,
                                  null, null, true, "2d54f710-c506-4049-8ef9-6dd10b6cbbde", -34,
                                  "28e7b11d-6e71-45ff-baaa-1e5b1b76e01d", UserStatus.getDefault(), false, null, true,
                                  new Date(1553793332054L), "1876e96f-6063-434b-bd39-b0e19ef08490");
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotNull(user3);
            assertNotSame(user2, user1);
            assertNotSame(user3, user1);
            assertEquals(user2, user1);
            assertEquals(user2, user1);
            assertEquals(user1, user2);
            assertEquals(user1, user1);
            assertFalse(user1.equals(null));
            assertNotEquals(user3, user1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
