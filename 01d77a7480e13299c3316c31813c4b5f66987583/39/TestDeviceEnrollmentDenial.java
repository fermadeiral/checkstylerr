// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEnrollmentDenial.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEnrollmentDenial {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("0d4b3e75de3ebe5db4ebda8767c4f1f2",
                                                                                        new Date(1553793328744L),
                                                                                        "9c37bc28-e089-4693-aaab-a73f318d699e",
                                                                                        "4444bf2aacaef0cf8b968aff26dae2ff",
                                                                                        "b6c5ffcb58efd04c3c67bbb9ed8feda0");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = deviceenrollmentdenial1.clone();
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("c8bbd79ceaad9cdf4c19e990bdba56bb",
                                                                                        new Date(1553793333418L),
                                                                                        "e6d37b4f-5f90-4c5f-8617-014ed87f62b5",
                                                                                        "6c5c84d67f19ce028b19cbbdc6530204",
                                                                                        "a7befbd12fcd1fb22b21edab7d0f90e0");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = new DeviceEnrollmentDenial("c8bbd79ceaad9cdf4c19e990bdba56bb",
                                                                                        new Date(1553793333418L),
                                                                                        "e6d37b4f-5f90-4c5f-8617-014ed87f62b5",
                                                                                        "6c5c84d67f19ce028b19cbbdc6530204",
                                                                                        "a7befbd12fcd1fb22b21edab7d0f90e0");
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2.hashCode(), deviceenrollmentdenial1.hashCode());
            int hashCode = deviceenrollmentdenial1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceenrollmentdenial1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEnrollmentDenial deviceenrollmentdenial = new DeviceEnrollmentDenial("ab90f7e8e5ef1d5d09d0df8ed65daddb",
                                                                                   new Date(1553793327107L),
                                                                                   "dfc1eb81-9933-4d46-8671-41ecc134c950",
                                                                                   "f2eb849fd824690269dc18254ab8c2e9",
                                                                                   "527d764aad5370c16e8247167b9d0729");
        assertTrue(deviceenrollmentdenial.isValid());
        DeviceEnrollmentDenial deviceenrollmentdenialInvalid = new DeviceEnrollmentDenial("âš¾1F5\u0017:5T\u000251155ì«Žê¥²<=ç…™B55æ‰«_551\u00161â†¢55^Øµí‰¬51111\u0002íž±ä?œ551^1ë¦°á›?Oæœ¾55515ë¥ˆî§ž15ëŸ¼\u0018?",
                                                                                          new Date(1553793335602L),
                                                                                          "11a6a78f-470f-409a-a7d0-12d4f6aace11",
                                                                                          "3ë™º6333í–¯#9é¼¤W66.à«–ä¼»^;3\u0002HC-\u0007<í”„3Y3\u0014&;3ì“?S3CJ\u0004?\bî´•K6.3ï®•âš¯[366_L*Pé—•MD3663",
                                                                                          "#52L(55îª›55ï œ5\u0019ç·®55ì¦‡_22\u0003H\u001dîŽ¦áœŽ 52ïˆ·2:â?¸A\u0017.52æ›»?FSà©¿]\u0014\u001bNç´Ž\u0012_552525P25\u0019[\u001e2ê¥Œ");
        assertFalse(deviceenrollmentdenialInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("fefcbe7d6eed466a633a26cf9bbe7fd0",
                                                                                        new Date(1553793327901L),
                                                                                        "54175c3d-b8ec-4f95-bb88-7e160e8cd463",
                                                                                        "0fff6584efdfecf90eecc9fcf3a24f88",
                                                                                        "dab4f9e02c658c97f243019ed193ffd9");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = new DeviceEnrollmentDenial("fefcbe7d6eed466a633a26cf9bbe7fd0",
                                                                                        new Date(1553793327901L),
                                                                                        "54175c3d-b8ec-4f95-bb88-7e160e8cd463",
                                                                                        "0fff6584efdfecf90eecc9fcf3a24f88",
                                                                                        "dab4f9e02c658c97f243019ed193ffd9");
            DeviceEnrollmentDenial deviceenrollmentdenial3 = new DeviceEnrollmentDenial("acb48cd9e47b4d305b10b35c0690673c",
                                                                                        new Date(1553793330025L),
                                                                                        "d57e7034-567d-47c9-af36-9fcce252876c",
                                                                                        "55c2baae5490bdfcccae0c4b15d0bdf2",
                                                                                        "b04db5cae3fdf8a455b520b75279fd53");
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotNull(deviceenrollmentdenial3);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertNotSame(deviceenrollmentdenial3, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial1, deviceenrollmentdenial2);
            assertEquals(deviceenrollmentdenial1, deviceenrollmentdenial1);
            assertFalse(deviceenrollmentdenial1.equals(null));
            assertNotEquals(deviceenrollmentdenial3, deviceenrollmentdenial1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
