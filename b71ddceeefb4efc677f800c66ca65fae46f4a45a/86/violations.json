[
    {
        "line": "18",
        "severity": "warning",
        "message": "'package' should be separated from previous statement.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
    },
    {
        "line": "24",
        "severity": "warning",
        "message": "Wrong lexicographical order for 'java.io.ByteArrayInputStream' import. Should be before 'org.springframework.core.env.Environment'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.CustomImportOrderCheck"
    },
    {
        "line": "25",
        "severity": "warning",
        "message": "Wrong lexicographical order for 'java.io.InputStream' import. Should be before 'org.springframework.core.env.Environment'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.CustomImportOrderCheck"
    },
    {
        "line": "26",
        "severity": "warning",
        "message": "Wrong lexicographical order for 'java.nio.charset.StandardCharsets' import. Should be before 'org.springframework.core.env.Environment'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.CustomImportOrderCheck"
    },
    {
        "line": "27",
        "severity": "warning",
        "message": "Wrong lexicographical order for 'java.util.ArrayList' import. Should be before 'org.springframework.core.env.Environment'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.CustomImportOrderCheck"
    },
    {
        "line": "28",
        "severity": "warning",
        "message": "Wrong lexicographical order for 'java.util.HashMap' import. Should be before 'org.springframework.core.env.Environment'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.CustomImportOrderCheck"
    },
    {
        "line": "30",
        "severity": "warning",
        "message": "Import statement for 'org.hamcrest.MatcherAssert.assertThat' is in the wrong order. Should be in the 'STATIC' group, expecting not assigned imports on this line.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.CustomImportOrderCheck"
    },
    {
        "line": "31",
        "severity": "warning",
        "message": "Import statement for 'org.hamcrest.Matchers.contains' is in the wrong order. Should be in the 'STATIC' group, expecting not assigned imports on this line.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.CustomImportOrderCheck"
    },
    {
        "line": "32",
        "severity": "warning",
        "message": "Import statement for 'org.hamcrest.collection.IsMapContaining.hasEntry' is in the wrong order. Should be in the 'STATIC' group, expecting not assigned imports on this line.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.CustomImportOrderCheck"
    },
    {
        "line": "33",
        "severity": "warning",
        "message": "Import statement for 'org.mockito.Mockito.*' is in the wrong order. Should be in the 'STATIC' group, expecting not assigned imports on this line.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.CustomImportOrderCheck"
    },
    {
        "line": "33",
        "severity": "warning",
        "message": "Using the '.*' form of import should be avoided - org.mockito.Mockito.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "35",
        "severity": "warning",
        "message": "Abbreviation in name 'DockerStormCLIWrapperTest' must contain no more than '2' consecutive capital letters.",
        "source": "com.puppycrawl.tools.checkstyle.checks.naming.AbbreviationAsWordInNameCheck"
    },
    {
        "line": "38",
        "severity": "warning",
        "message": "Abbreviation in name 'dockerStormCLIWrapper' must contain no more than '2' consecutive capital letters.",
        "source": "com.puppycrawl.tools.checkstyle.checks.naming.AbbreviationAsWordInNameCheck"
    },
    {
        "line": "40",
        "column": "3",
        "severity": "warning",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "57",
        "severity": "warning",
        "message": "Line is longer than 100 characters (found 115).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "70",
        "severity": "warning",
        "message": "Comment has incorrect indentation level 6, expected is 4, indentation should be the same level as line 71.",
        "source": "com.puppycrawl.tools.checkstyle.checks.indentation.CommentsIndentationCheck"
    },
    {
        "line": "71",
        "severity": "warning",
        "message": "Line is longer than 100 characters (found 129).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    }
]