// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import com.arm.mbed.cloud.sdk.common.Order;
import com.arm.mbed.cloud.sdk.common.listing.ListOptionsEncoder;
import com.arm.mbed.cloud.sdk.common.listing.filtering.FilterOperator;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEventsListOptions.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEventsListOptions {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEventsListOptions deviceeventslistoptions1 = new DeviceEventsListOptions(Integer.valueOf(-10),
                                                                                           Long.valueOf(-20),
                                                                                           Order.getDefault(),
                                                                                           "738c4a87-b003-4fc6-9663-ce4d93e46d00",
                                                                                           null, null);
            DeviceEventsListOptions deviceeventslistoptions2 = deviceeventslistoptions1.clone();
            assertNotNull(deviceeventslistoptions1);
            assertNotNull(deviceeventslistoptions2);
            assertNotSame(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2, deviceeventslistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the filters method.
     */
    @SuppressWarnings({ "boxing", "resource" })
    @Test
    public void testFilters() {
        try {
            DeviceEventsListOptions option = new DeviceEventsListOptions().equalToDeviceId("b2811a8f-cde1-4377-8a16-8d76cbe2db4b")
                                                                          .notEqualToDeviceId("8c97aa5a-b655-4437-9cb9-30218c74e09e")
                                                                          .inDeviceIds(Arrays.asList("4bb64e7e-8af5-4d0d-a833-24f7942850b3",
                                                                                                     "0ea78aae-f1ee-417f-846c-75716a07d161",
                                                                                                     "2e5378fd-7978-432a-8589-5ebc21949d07",
                                                                                                     "81656f7c-a674-4416-8dea-48b3cfa6cbd1",
                                                                                                     "8f36e5b4-0e61-4922-a621-bdf372bd038f",
                                                                                                     "888ee6cb-0d6a-47ca-bd9f-ae4c6c79d2c6",
                                                                                                     "bb59d625-703c-4f50-b2c4-ac190b41540b",
                                                                                                     "0ab34fa7-64d5-4e28-9baf-3c99f7785f9b"))
                                                                          .notInDeviceIds(Arrays.asList("247e6548-d785-45c7-8ef1-95ca471d7389",
                                                                                                        "c7b8e22c-6bae-4c3a-b348-caf87b1e95f2",
                                                                                                        "89719862-4405-4a76-a8c5-eb1df4ecd9db",
                                                                                                        "c4fdd1ee-7ceb-4da1-aed7-45fb87ca7d72",
                                                                                                        "94de06d2-8c97-4bf2-8c32-bffd7c270dbb",
                                                                                                        "6a9dacb1-5321-4381-a940-95c893c6e01f",
                                                                                                        "a092502a-95a0-43ac-8a5d-e6633acadafc"))
                                                                          .equalToDescription("3bdc0340-62e2-487a-96b6-81bbd734e6df")
                                                                          .notEqualToDescription("6e641dcf-8a4e-48d5-af45-4c52bd1c7581")
                                                                          .inDescriptions(Arrays.asList("55635885-947c-4885-86dd-751728dc10da"))
                                                                          .notInDescriptions(Arrays.asList("51204ab7-2193-4811-9fb2-72447e0135bc",
                                                                                                           "6ffc2d05-1ded-4816-91e3-e2410c009d47",
                                                                                                           "af68026e-2642-4ad3-a802-a740daea3bd7",
                                                                                                           "fe97b4d0-1b19-4233-a9ed-43cad285a71b",
                                                                                                           "66ba9454-174a-4880-b6b5-969fb92909aa",
                                                                                                           "134a33ea-39ca-4d7c-a5d8-3102170e44af",
                                                                                                           "e8f6e890-bfd5-4467-98a4-3af68437bafb",
                                                                                                           "c58ffa94-cf6b-4d76-89a8-388aec8eea23",
                                                                                                           "cb45af00-31bf-4959-9254-38f639407e0e"))
                                                                          .inDateTimes(Arrays.asList(new Date(1561032448064L),
                                                                                                     new Date(1561032450663L),
                                                                                                     new Date(1561032450608L),
                                                                                                     new Date(1561032448617L)))
                                                                          .notInDateTimes(Arrays.asList(new Date(1561032453422L),
                                                                                                        new Date(1561032454430L),
                                                                                                        new Date(1561032453249L),
                                                                                                        new Date(1561032447484L),
                                                                                                        new Date(1561032447670L),
                                                                                                        new Date(1561032448770L),
                                                                                                        new Date(1561032445120L),
                                                                                                        new Date(1561032445063L),
                                                                                                        new Date(1561032445825L)))
                                                                          .lessThanDateTime(new Date(1561032451279L))
                                                                          .greaterThanDateTime(new Date(1561032451912L))
                                                                          .equalToStateChange(Boolean.FALSE)
                                                                          .notEqualToStateChange(Boolean.TRUE)
                                                                          .equalToId("07d69c39-46f7-475c-aab8-a5be3b1b5805")
                                                                          .notEqualToId("99c76c20-1e65-49d2-b07d-938f8a493b15")
                                                                          .inIds(Arrays.asList("9f76d304-b9a2-4bbf-8b8a-d7c7c1ed83d8",
                                                                                               "d05d4537-19d2-45ef-8db0-7f367ade8cd1",
                                                                                               "be250a04-5e77-4fdb-b257-71d919924acd",
                                                                                               "852abbb8-555b-45ff-8ef1-169e10819d72",
                                                                                               "2a05d1b6-f9ce-4573-8e3a-c647c17cb37c",
                                                                                               "56879f6f-41c6-4061-b694-dfe4407425f2",
                                                                                               "04798d79-7172-4a75-a776-0171eb72e0d9",
                                                                                               "f1221e2a-bbd0-4622-90ff-1479635a0774",
                                                                                               "f5c8f7d7-6970-4cd6-9031-5f775b2717e9"))
                                                                          .notInIds(Arrays.asList("36b338c2-e50e-4078-93e9-b24365fa8435",
                                                                                                  "4b58c8cb-76f6-4c02-9d97-4b985906658c",
                                                                                                  "847904b6-f192-4a4e-a5e8-ddf7bde09962"))
                                                                          .equalToEventType("47e93d73-4a04-44c8-ac80-4d2abfede69f")
                                                                          .notEqualToEventType("d0261d8c-c14b-4a4e-9797-7e1c52d1ceb5")
                                                                          .inEventTypes(Arrays.asList("327c0a24-af75-4f34-b7c3-0f57b753fe4c",
                                                                                                      "fda982fb-e357-4330-8b46-d1cc39d56f6a"))
                                                                          .notInEventTypes(Arrays.asList("e4b9b8e0-0bcc-43f5-bb45-3abbef9992cc",
                                                                                                         "8b3b4ae2-bfb3-42f9-b981-f712aba54068",
                                                                                                         "4e577741-1ab6-4d27-babe-f69c5b509ada",
                                                                                                         "61898351-87e9-4d56-bd63-3d4864ac64f3"));
            assertTrue(option.hasFilters());
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID, FilterOperator.EQUAL));
            assertNotNull(option.getDeviceIdFilters());
            assertEquals("b2811a8f-cde1-4377-8a16-8d76cbe2db4b",
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDeviceIdFilters());
            assertEquals("8c97aa5a-b655-4437-9cb9-30218c74e09e",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID, FilterOperator.IN));
            assertNotNull(option.getDeviceIdFilters());
            assertEquals(Arrays.asList("4bb64e7e-8af5-4d0d-a833-24f7942850b3", "0ea78aae-f1ee-417f-846c-75716a07d161",
                                       "2e5378fd-7978-432a-8589-5ebc21949d07", "81656f7c-a674-4416-8dea-48b3cfa6cbd1",
                                       "8f36e5b4-0e61-4922-a621-bdf372bd038f", "888ee6cb-0d6a-47ca-bd9f-ae4c6c79d2c6",
                                       "bb59d625-703c-4f50-b2c4-ac190b41540b", "0ab34fa7-64d5-4e28-9baf-3c99f7785f9b"),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID,
                                                                 List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getDeviceIdFilters());
            assertEquals(Arrays.asList("247e6548-d785-45c7-8ef1-95ca471d7389", "c7b8e22c-6bae-4c3a-b348-caf87b1e95f2",
                                       "89719862-4405-4a76-a8c5-eb1df4ecd9db", "c4fdd1ee-7ceb-4da1-aed7-45fb87ca7d72",
                                       "94de06d2-8c97-4bf2-8c32-bffd7c270dbb", "6a9dacb1-5321-4381-a940-95c893c6e01f",
                                       "a092502a-95a0-43ac-8a5d-e6633acadafc"),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID,
                                                                    List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("3bdc0340-62e2-487a-96b6-81bbd734e6df",
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("6e641dcf-8a4e-48d5-af45-4c52bd1c7581",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                       String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("55635885-947c-4885-86dd-751728dc10da"),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                 List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("51204ab7-2193-4811-9fb2-72447e0135bc", "6ffc2d05-1ded-4816-91e3-e2410c009d47",
                                       "af68026e-2642-4ad3-a802-a740daea3bd7", "fe97b4d0-1b19-4233-a9ed-43cad285a71b",
                                       "66ba9454-174a-4880-b6b5-969fb92909aa", "134a33ea-39ca-4d7c-a5d8-3102170e44af",
                                       "e8f6e890-bfd5-4467-98a4-3af68437bafb", "c58ffa94-cf6b-4d76-89a8-388aec8eea23",
                                       "cb45af00-31bf-4959-9254-38f639407e0e"),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME, FilterOperator.IN));
            assertNotNull(option.getDateTimeFilters());
            assertEquals(Arrays.asList(new Date(1561032448064L), new Date(1561032450663L), new Date(1561032450608L),
                                       new Date(1561032448617L)),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME,
                                                                 List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME, FilterOperator.NOT_IN));
            assertNotNull(option.getDateTimeFilters());
            assertEquals(Arrays.asList(new Date(1561032453422L), new Date(1561032454430L), new Date(1561032453249L),
                                       new Date(1561032447484L), new Date(1561032447670L), new Date(1561032448770L),
                                       new Date(1561032445120L), new Date(1561032445063L), new Date(1561032445825L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME,
                                                                    List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME, FilterOperator.LESS_THAN));
            assertNotNull(option.getDateTimeFilters());
            assertEquals(new Date(1561032451279L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME, FilterOperator.GREATER_THAN));
            assertNotNull(option.getDateTimeFilters());
            assertEquals(new Date(1561032451912L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE, FilterOperator.EQUAL));
            assertNotNull(option.getStateChangeFilters());
            assertEquals(Boolean.FALSE,
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE,
                                                                    Boolean.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getStateChangeFilters());
            assertEquals(Boolean.TRUE,
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE,
                                                                       Boolean.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, FilterOperator.EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("07d69c39-46f7-475c-aab8-a5be3b1b5805",
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("99c76c20-1e65-49d2-b07d-938f8a493b15",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, FilterOperator.IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("9f76d304-b9a2-4bbf-8b8a-d7c7c1ed83d8", "d05d4537-19d2-45ef-8db0-7f367ade8cd1",
                                       "be250a04-5e77-4fdb-b257-71d919924acd", "852abbb8-555b-45ff-8ef1-169e10819d72",
                                       "2a05d1b6-f9ce-4573-8e3a-c647c17cb37c", "56879f6f-41c6-4061-b694-dfe4407425f2",
                                       "04798d79-7172-4a75-a776-0171eb72e0d9", "f1221e2a-bbd0-4622-90ff-1479635a0774",
                                       "f5c8f7d7-6970-4cd6-9031-5f775b2717e9"),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, List.class,
                                                                 option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("36b338c2-e50e-4078-93e9-b24365fa8435", "4b58c8cb-76f6-4c02-9d97-4b985906658c",
                                       "847904b6-f192-4a4e-a5e8-ddf7bde09962"),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID,
                                                                    List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE, FilterOperator.EQUAL));
            assertNotNull(option.getEventTypeFilters());
            assertEquals("47e93d73-4a04-44c8-ac80-4d2abfede69f",
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE,
                                                                    String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getEventTypeFilters());
            assertEquals("d0261d8c-c14b-4a4e-9797-7e1c52d1ceb5",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE,
                                                                       String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE, FilterOperator.IN));
            assertNotNull(option.getEventTypeFilters());
            assertEquals(Arrays.asList("327c0a24-af75-4f34-b7c3-0f57b753fe4c", "fda982fb-e357-4330-8b46-d1cc39d56f6a"),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE,
                                                                 List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE, FilterOperator.NOT_IN));
            assertNotNull(option.getEventTypeFilters());
            assertEquals(Arrays.asList("e4b9b8e0-0bcc-43f5-bb45-3abbef9992cc", "8b3b4ae2-bfb3-42f9-b981-f712aba54068",
                                       "4e577741-1ab6-4d27-babe-f69c5b509ada", "61898351-87e9-4d56-bd63-3d4864ac64f3"),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE,
                                                                    List.class, option));
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEventsListOptions deviceeventslistoptions1 = new DeviceEventsListOptions(Integer.valueOf(-85),
                                                                                           Long.valueOf(-115),
                                                                                           Order.getDefault(),
                                                                                           "cb0b9e86-0519-4a74-855b-6a119a9d65be",
                                                                                           null, null);
            DeviceEventsListOptions deviceeventslistoptions2 = new DeviceEventsListOptions(Integer.valueOf(-85),
                                                                                           Long.valueOf(-115),
                                                                                           Order.getDefault(),
                                                                                           "cb0b9e86-0519-4a74-855b-6a119a9d65be",
                                                                                           null, null);
            assertNotNull(deviceeventslistoptions1);
            assertNotNull(deviceeventslistoptions2);
            assertNotSame(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2.hashCode(), deviceeventslistoptions1.hashCode());
            int hashCode = deviceeventslistoptions1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceeventslistoptions1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEventsListOptions deviceeventslistoptions1 = new DeviceEventsListOptions(Integer.valueOf(-11),
                                                                                           Long.valueOf(-125),
                                                                                           Order.getDefault(),
                                                                                           "e194826f-bbe2-44ed-99a3-d4d3a13c2d36",
                                                                                           null, null);
            DeviceEventsListOptions deviceeventslistoptions2 = new DeviceEventsListOptions(Integer.valueOf(-11),
                                                                                           Long.valueOf(-125),
                                                                                           Order.getDefault(),
                                                                                           "e194826f-bbe2-44ed-99a3-d4d3a13c2d36",
                                                                                           null, null);
            DeviceEventsListOptions deviceeventslistoptions3 = new DeviceEventsListOptions(Integer.valueOf(-4),
                                                                                           Long.valueOf(28),
                                                                                           Order.getDefault(),
                                                                                           "cfc35393-ab99-43fc-8fc3-308a98cc2546",
                                                                                           null, null);
            assertNotNull(deviceeventslistoptions1);
            assertNotNull(deviceeventslistoptions2);
            assertNotNull(deviceeventslistoptions3);
            assertNotSame(deviceeventslistoptions2, deviceeventslistoptions1);
            assertNotSame(deviceeventslistoptions3, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions1, deviceeventslistoptions2);
            assertEquals(deviceeventslistoptions1, deviceeventslistoptions1);
            assertFalse(deviceeventslistoptions1.equals(null));
            assertNotEquals(deviceeventslistoptions3, deviceeventslistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
