// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model User.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestUser {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            User user1 = new User("6fb4ddd2721d7f5fedbf16812e41749b", null, "faa1d3d5-3554-4cbb-b94f-34e326bb207a",
                                  new Date(1561032450054L), 46, null, "11908.59240@18213.me", false,
                                  "99f67503-9b41-4b0c-a61b-3d61b8ffc704", "6fb4ddd2721d7f5fedbf16812e41749b", false,
                                  false, true, 13, null, null, "0eb8cddf-3abc-46c9-b0cd-5ac6b2402654", 116,
                                  "36c7c91e-77de-4ad8-9921-d330094635e1", UserStatus.getDefault(), null,
                                  new Date(1561032443521L), "utt.=-===yck6==s");
            User user2 = user1.clone();
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotSame(user2, user1);
            assertEquals(user2, user1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            User user1 = new User("6fb4ddd2721d7f5fedbf16812e41749b", null, "f21e2dff-e0b9-468d-92ca-4881924816cf",
                                  new Date(1561032448873L), 105, null, "90273.2f0ac@3d828.fr", true,
                                  "2bcc7e81-02b8-4487-aa75-9c89ab141b00", "6fb4ddd2721d7f5fedbf16812e41749b", true,
                                  true, false, -124, null, null, "053ecb0d-e469-4966-a217-147ff0987f44", -124,
                                  "970da101-1eb6-4f90-a431-860b8e45750a", UserStatus.getDefault(), null,
                                  new Date(1561032446486L), "utt.=-===yck6==s");
            User user2 = new User("6fb4ddd2721d7f5fedbf16812e41749b", null, "f21e2dff-e0b9-468d-92ca-4881924816cf",
                                  new Date(1561032448873L), 105, null, "90273.2f0ac@3d828.fr", true,
                                  "2bcc7e81-02b8-4487-aa75-9c89ab141b00", "6fb4ddd2721d7f5fedbf16812e41749b", true,
                                  true, false, -124, null, null, "053ecb0d-e469-4966-a217-147ff0987f44", -124,
                                  "970da101-1eb6-4f90-a431-860b8e45750a", UserStatus.getDefault(), null,
                                  new Date(1561032446486L), "utt.=-===yck6==s");
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotSame(user2, user1);
            assertEquals(user2, user1);
            assertEquals(user2.hashCode(), user1.hashCode());
            int hashCode = user1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, user1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        User user = new User("6fb4ddd2721d7f5fedbf16812e41749b", null, "a81a77a2-d86e-4d06-b858-2dc8ebe925d3",
                             new Date(1561032452217L), 74, null, "27921.849e4@403c2.me", false,
                             "96de2432-c9fd-4888-b163-bedd83c1fb35", "6fb4ddd2721d7f5fedbf16812e41749b", true, true,
                             true, 2, null, null, "468cd306-cb40-4fed-884a-2afab35b6113", -4,
                             "0b036c00-0b16-4d4c-ab7c-f8cc2e3dd05d", UserStatus.getDefault(), null,
                             new Date(1561032446654L), "utt.=-===yck6==s");
        assertTrue(user.isValid());
        User userInvalid = new User("ç¹§3N3ë¸§33\u001433î¾¶3\u00103QA#\u001e\u001d`:3;c@c[\u00163Aìº·à¼«,æ¯†c3î´?3+\tê‘¼cccScTR\u0000cL\u0007c3\u000fç¢ 333×™ë‚ªcc",
                                    null, "9ca770dd-2824-4b72-9b25-257ee40d540f", new Date(1561032447534L), 43, null,
                                    null, true,
                                    "12d34bfe-4789-4379-a954-526d2b1a00bcbf2bfc02-6c4e-44a5-89a2-6f99bd5dcb94072458d5-95d6-48ef-81e9-46d290da4fe7",
                                    "ç¹§3N3ë¸§33\u001433î¾¶3\u00103QA#\u001e\u001d`:3;c@c[\u00163Aìº·à¼«,æ¯†c3î´?3+\tê‘¼cccScTR\u0000cL\u0007c3\u000fç¢ 333×™ë‚ªcc",
                                    false, true, true, -29, null, null, "16cc0bfc-06e1-4f86-ae8e-eed122ff3c3c", -88,
                                    "6690c39c-9493-47cc-a52f-1a386fbee6e2212307cb-cd59-4659-9441-6f8cffbb537223b5edc6-c604-4f03-9eac-97c9073290c5",
                                    UserStatus.getDefault(), null, new Date(1561032445749L),
                                    "\fN\u001aqL\u000fvJvrd2\u001ewr/l!8me/$$ë·¸wjlJhí?µ\u0018\u0007qvé¢¬Ng9eì¤’rnê¾‚mdi;5veilv5+d<rev;<59");
        assertFalse(userInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            User user1 = new User("6fb4ddd2721d7f5fedbf16812e41749b", null, "02aa6013-86ae-48b8-a6b8-6259887a0542",
                                  new Date(1561032445527L), -62, null, "c2437.e684d@fd6ec.me", false,
                                  "2d293a4c-f0d5-4777-b74c-a0a53be7adbf", "6fb4ddd2721d7f5fedbf16812e41749b", true,
                                  false, true, 96, null, null, "65f2b942-d4d7-443d-9562-17641e7bd145", 59,
                                  "dc5594b1-3b77-4bf0-b21c-a662a76ddcdd", UserStatus.getDefault(), null,
                                  new Date(1561032448743L), "utt.=-===yck6==s");
            User user2 = new User("6fb4ddd2721d7f5fedbf16812e41749b", null, "02aa6013-86ae-48b8-a6b8-6259887a0542",
                                  new Date(1561032445527L), -62, null, "c2437.e684d@fd6ec.me", false,
                                  "2d293a4c-f0d5-4777-b74c-a0a53be7adbf", "6fb4ddd2721d7f5fedbf16812e41749b", true,
                                  false, true, 96, null, null, "65f2b942-d4d7-443d-9562-17641e7bd145", 59,
                                  "dc5594b1-3b77-4bf0-b21c-a662a76ddcdd", UserStatus.getDefault(), null,
                                  new Date(1561032448743L), "utt.=-===yck6==s");
            User user3 = new User("6fb4ddd2721d7f5fedbf16812e41749b", null, "abe3f70a-32d3-4ba3-9a6f-de7849c9644e",
                                  new Date(1561032445077L), 80, null, "0d72e.839ec@186d9.fr", false,
                                  "1ed93e03-ab11-469b-8738-4e6e14032b16", "6fb4ddd2721d7f5fedbf16812e41749b", true,
                                  false, true, 84, null, null, "0c42f077-122d-40cf-9834-f2067777f8d0", 29,
                                  "4d7275c9-7913-4fa1-8737-e947e6fc8188", UserStatus.getDefault(), null,
                                  new Date(1561032444616L), "utt.=-===yck6==s");
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotNull(user3);
            assertNotSame(user2, user1);
            assertNotSame(user3, user1);
            assertEquals(user2, user1);
            assertEquals(user2, user1);
            assertEquals(user1, user2);
            assertEquals(user1, user1);
            assertFalse(user1.equals(null));
            assertNotEquals(user3, user1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
