// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantUser.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantUser {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("6fb4ddd2721d7f5fedbf16812e41749b", null,
                                                             "a6350f2e-d36f-43d5-8898-e0b552a5ce60",
                                                             new Date(1561032445287L), 7, null, "0b17a.f36a9@5d312.fr",
                                                             true, "6ff442a0-7c1b-45e4-9db6-6e436a2038b5",
                                                             "6fb4ddd2721d7f5fedbf16812e41749b", false, false, false,
                                                             -20, null, null, "a86aedb1-8878-47fb-a121-47d3e32cfae2",
                                                             38, "1d97664d-5e3f-47c6-be3b-34daa712626e",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1561032450314L), "utt.=-===yck6==s");
            SubtenantUser subtenantuser2 = subtenantuser1.clone();
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("6fb4ddd2721d7f5fedbf16812e41749b", null,
                                                             "7f5b1501-0798-468f-a453-0c7bc1fcd7db",
                                                             new Date(1561032449275L), 39, null, "1175f.1f223@ab1e8.me",
                                                             false, "83e50da0-5cc1-4f51-ab4b-38d27a6950a5",
                                                             "6fb4ddd2721d7f5fedbf16812e41749b", false, false, false, 2,
                                                             null, null, "c5277044-6ba6-4ad4-b934-e5a487bdfc27", -112,
                                                             "3b23e3b0-e821-410f-a15a-f9e1b77ceb58",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1561032444548L), "utt.=-===yck6==s");
            SubtenantUser subtenantuser2 = new SubtenantUser("6fb4ddd2721d7f5fedbf16812e41749b", null,
                                                             "7f5b1501-0798-468f-a453-0c7bc1fcd7db",
                                                             new Date(1561032449275L), 39, null, "1175f.1f223@ab1e8.me",
                                                             false, "83e50da0-5cc1-4f51-ab4b-38d27a6950a5",
                                                             "6fb4ddd2721d7f5fedbf16812e41749b", false, false, false, 2,
                                                             null, null, "c5277044-6ba6-4ad4-b934-e5a487bdfc27", -112,
                                                             "3b23e3b0-e821-410f-a15a-f9e1b77ceb58",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1561032444548L), "utt.=-===yck6==s");
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2.hashCode(), subtenantuser1.hashCode());
            int hashCode = subtenantuser1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantuser1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantUser subtenantuser = new SubtenantUser("6fb4ddd2721d7f5fedbf16812e41749b", null,
                                                        "d44a74e1-a5c8-4a32-bb1f-0d8cb473ec76",
                                                        new Date(1561032443790L), -77, null, "08eed.b07e3@8630a.me",
                                                        false, "2a548a0f-4ace-4b4d-8a5d-484ed27efad8",
                                                        "6fb4ddd2721d7f5fedbf16812e41749b", false, true, false, 61,
                                                        null, null, "9484b866-5b58-4f2c-9cc2-7fa34a5f3b90", 97,
                                                        "65bc8fce-dcae-4601-a8a8-2d3aa386a9d3",
                                                        SubtenantUserStatus.getDefault(), null,
                                                        new Date(1561032448607L), "utt.=-===yck6==s");
        assertTrue(subtenantuser.isValid());
        SubtenantUser subtenantuserInvalid = new SubtenantUser(null, null, "04af0d56-bb7f-40c7-8270-7614da512831",
                                                               new Date(1561032447625L), 124, null, null, false,
                                                               "6ac566bf-709c-4f70-8ce3-4eca09637011d97040d1-6a19-4869-8566-8788c4cd725ea813428e-d8b3-4085-86f7-44f3a78410fe",
                                                               "ç¹§3N3ë¸§33\u001433î¾¶3\u00103QA#\u001e\u001d`:3;c@c[\u00163Aìº·à¼«,æ¯†c3î´?3+\tê‘¼cccScTR\u0000cL\u0007c3\u000fç¢ 333×™ë‚ªcc",
                                                               false, true, false, -104, null, null,
                                                               "d7f234b0-c217-40d8-83e3-7a7dd13b6073", -52,
                                                               "b162621f-df10-4cf4-9d4c-a9308ece8c42f9873f0b-5614-4fc5-9e29-b1b917f66ffe146db66f-1df7-4621-95be-864d95235684",
                                                               SubtenantUserStatus.getDefault(), null,
                                                               new Date(1561032448745L),
                                                               "\fN\u001aqL\u000fvJvrd2\u001ewr/l!8me/$$ë·¸wjlJhí?µ\u0018\u0007qvé¢¬Ng9eì¤’rnê¾‚mdi;5veilv5+d<rev;<59");
        assertFalse(subtenantuserInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("6fb4ddd2721d7f5fedbf16812e41749b", null,
                                                             "6f42a0bd-e69c-4824-aac6-b0d33e5ea5c8",
                                                             new Date(1561032444044L), -79, null,
                                                             "5f77c.4b63b@739aa.fr", true,
                                                             "1af8ac51-7aec-44dd-8ad3-f1920759f560",
                                                             "6fb4ddd2721d7f5fedbf16812e41749b", false, true, true, 120,
                                                             null, null, "4e7cec58-0bef-490e-8d39-9f2e0a035fee", 80,
                                                             "312a82ad-289b-4ae9-9901-142222087e65",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1561032451466L), "utt.=-===yck6==s");
            SubtenantUser subtenantuser2 = new SubtenantUser("6fb4ddd2721d7f5fedbf16812e41749b", null,
                                                             "6f42a0bd-e69c-4824-aac6-b0d33e5ea5c8",
                                                             new Date(1561032444044L), -79, null,
                                                             "5f77c.4b63b@739aa.fr", true,
                                                             "1af8ac51-7aec-44dd-8ad3-f1920759f560",
                                                             "6fb4ddd2721d7f5fedbf16812e41749b", false, true, true, 120,
                                                             null, null, "4e7cec58-0bef-490e-8d39-9f2e0a035fee", 80,
                                                             "312a82ad-289b-4ae9-9901-142222087e65",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1561032451466L), "utt.=-===yck6==s");
            SubtenantUser subtenantuser3 = new SubtenantUser("6fb4ddd2721d7f5fedbf16812e41749b", null,
                                                             "82daf817-957c-4783-81b5-ec1496bd833f",
                                                             new Date(1561032449276L), -66, null,
                                                             "b5f57.c0995@0e012.me", true,
                                                             "300921fb-48b3-4b13-b05e-b94e84c43b92",
                                                             "6fb4ddd2721d7f5fedbf16812e41749b", false, true, true, 103,
                                                             null, null, "509f9b3d-b597-4cc8-b116-26466ddcfb54", -20,
                                                             "d121ff8c-bbc8-4454-aa5e-21d5101a67eb",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1561032452526L), "utt.=-===yck6==s");
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotNull(subtenantuser3);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertNotSame(subtenantuser3, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser1, subtenantuser2);
            assertEquals(subtenantuser1, subtenantuser1);
            assertFalse(subtenantuser1.equals(null));
            assertNotEquals(subtenantuser3, subtenantuser1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
