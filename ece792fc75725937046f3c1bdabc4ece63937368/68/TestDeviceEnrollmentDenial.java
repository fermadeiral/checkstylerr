// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEnrollmentDenial.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEnrollmentDenial {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("6fb4ddd2721d7f5fedbf16812e41749b",
                                                                                        new Date(1561032451500L),
                                                                                        "dafe0890-197c-40ff-98f7-6fcf20271584",
                                                                                        "6fb4ddd2721d7f5fedbf16812e41749b",
                                                                                        "6fb4ddd2721d7f5fedbf16812e41749b");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = deviceenrollmentdenial1.clone();
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("6fb4ddd2721d7f5fedbf16812e41749b",
                                                                                        new Date(1561032446222L),
                                                                                        "7f01e800-1f26-415d-81e4-9a49b7db4fd5",
                                                                                        "6fb4ddd2721d7f5fedbf16812e41749b",
                                                                                        "6fb4ddd2721d7f5fedbf16812e41749b");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = new DeviceEnrollmentDenial("6fb4ddd2721d7f5fedbf16812e41749b",
                                                                                        new Date(1561032446222L),
                                                                                        "7f01e800-1f26-415d-81e4-9a49b7db4fd5",
                                                                                        "6fb4ddd2721d7f5fedbf16812e41749b",
                                                                                        "6fb4ddd2721d7f5fedbf16812e41749b");
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2.hashCode(), deviceenrollmentdenial1.hashCode());
            int hashCode = deviceenrollmentdenial1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceenrollmentdenial1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEnrollmentDenial deviceenrollmentdenial = new DeviceEnrollmentDenial("6fb4ddd2721d7f5fedbf16812e41749b",
                                                                                   new Date(1561032450234L),
                                                                                   "0c1fa0cf-0555-4338-83f1-ce46cbd1d020",
                                                                                   "6fb4ddd2721d7f5fedbf16812e41749b",
                                                                                   "6fb4ddd2721d7f5fedbf16812e41749b");
        assertTrue(deviceenrollmentdenial.isValid());
        DeviceEnrollmentDenial deviceenrollmentdenialInvalid = new DeviceEnrollmentDenial("ç¹§3N3ë¸§33\u001433î¾¶3\u00103QA#\u001e\u001d`:3;c@c[\u00163Aìº·à¼«,æ¯†c3î´?3+\tê‘¼cccScTR\u0000cL\u0007c3\u000fç¢ 333×™ë‚ªcc",
                                                                                          new Date(1561032448560L),
                                                                                          "62d33cf5-f0b1-4119-a25a-16f18f32a2e4",
                                                                                          "ç¹§3N3ë¸§33\u001433î¾¶3\u00103QA#\u001e\u001d`:3;c@c[\u00163Aìº·à¼«,æ¯†c3î´?3+\tê‘¼cccScTR\u0000cL\u0007c3\u000fç¢ 333×™ë‚ªcc",
                                                                                          "ç¹§3N3ë¸§33\u001433î¾¶3\u00103QA#\u001e\u001d`:3;c@c[\u00163Aìº·à¼«,æ¯†c3î´?3+\tê‘¼cccScTR\u0000cL\u0007c3\u000fç¢ 333×™ë‚ªcc");
        assertFalse(deviceenrollmentdenialInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("6fb4ddd2721d7f5fedbf16812e41749b",
                                                                                        new Date(1561032447780L),
                                                                                        "513b0f6f-7ba9-4f34-9905-0cebf50aea63",
                                                                                        "6fb4ddd2721d7f5fedbf16812e41749b",
                                                                                        "6fb4ddd2721d7f5fedbf16812e41749b");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = new DeviceEnrollmentDenial("6fb4ddd2721d7f5fedbf16812e41749b",
                                                                                        new Date(1561032447780L),
                                                                                        "513b0f6f-7ba9-4f34-9905-0cebf50aea63",
                                                                                        "6fb4ddd2721d7f5fedbf16812e41749b",
                                                                                        "6fb4ddd2721d7f5fedbf16812e41749b");
            DeviceEnrollmentDenial deviceenrollmentdenial3 = new DeviceEnrollmentDenial("6fb4ddd2721d7f5fedbf16812e41749b",
                                                                                        new Date(1561032444319L),
                                                                                        "a5c38ce3-7a57-4121-9517-c2fa6ac0eb20",
                                                                                        "6fb4ddd2721d7f5fedbf16812e41749b",
                                                                                        "6fb4ddd2721d7f5fedbf16812e41749b");
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotNull(deviceenrollmentdenial3);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertNotSame(deviceenrollmentdenial3, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial1, deviceenrollmentdenial2);
            assertEquals(deviceenrollmentdenial1, deviceenrollmentdenial1);
            assertFalse(deviceenrollmentdenial1.equals(null));
            assertNotEquals(deviceenrollmentdenial3, deviceenrollmentdenial1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
