// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.security.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeveloperCertificate.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeveloperCertificate {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("f377ea42-8de2-4b1f-91de-8dac6739566c",
                                                                                  "a0538f4b-b9f0-4438-93e1-e549c21ee655",
                                                                                  new Date(1559835555719L),
                                                                                  "c715c73e-8c5c-4da6-a28b-ffefa4441a44",
                                                                                  "1fc7d2f7-1da2-48f2-a1c7-7287d2c75a82",
                                                                                  "b1665bc1-9e09-44ff-9d60-b9c32c7dda45",
                                                                                  "7a77453f-f14b-47ff-b4e4-15630403a185",
                                                                                  "e38b71d4-e00e-400c-b24e-21839d84310f");
            DeveloperCertificate developercertificate2 = developercertificate1.clone();
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("8c9f2808-b109-4de6-8240-51ea0eb0fe5a",
                                                                                  "100ca767-08fd-4208-9771-9f283b084b11",
                                                                                  new Date(1559835556109L),
                                                                                  "0800ed2a-efde-4123-8674-6625fca6ff96",
                                                                                  "5429641b-71be-414e-a736-25983eaaa4f3",
                                                                                  "01a54362-82c6-4cef-bfe2-b13e9752246b",
                                                                                  "5be7a9c7-51f8-4259-ad07-04f7ffebec75",
                                                                                  "10d48027-9629-4684-9746-0f5b4a055e32");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("8c9f2808-b109-4de6-8240-51ea0eb0fe5a",
                                                                                  "100ca767-08fd-4208-9771-9f283b084b11",
                                                                                  new Date(1559835556109L),
                                                                                  "0800ed2a-efde-4123-8674-6625fca6ff96",
                                                                                  "5429641b-71be-414e-a736-25983eaaa4f3",
                                                                                  "01a54362-82c6-4cef-bfe2-b13e9752246b",
                                                                                  "5be7a9c7-51f8-4259-ad07-04f7ffebec75",
                                                                                  "10d48027-9629-4684-9746-0f5b4a055e32");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2.hashCode(), developercertificate1.hashCode());
            int hashCode = developercertificate1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, developercertificate1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeveloperCertificate developercertificate = new DeveloperCertificate("0c370a05-561f-467c-8075-b2e8c0f007ad",
                                                                             "865a269d-5287-416a-a2c8-1231b323d84e",
                                                                             new Date(1559835555420L),
                                                                             "3d20932a-9bc4-4d21-96da-0b297583a378",
                                                                             "cf36daca-5e9e-438a-bf5d-88d4508661fe",
                                                                             "759523b3-2b9b-4a57-98e6-69258d3bab76",
                                                                             "6b36a0be-5da7-48c5-b379-d44d9bab97c0",
                                                                             "b6f79602-0e38-43aa-9b0e-7c71bcf65cb9");
        assertTrue(developercertificate.isValid());
        DeveloperCertificate developercertificateInvalid = new DeveloperCertificate("561fa62c-5408-4734-8d24-e7d7aa070a12",
                                                                                    "7266c02d-f758-4274-8286-bbdfeccfd675",
                                                                                    new Date(1559835560406L),
                                                                                    "bb84e298-0d72-4388-a9cd-7db5fd24a61f",
                                                                                    "f8f60ed0-72db-40ef-afff-0715266ed5ce",
                                                                                    "5d84ebb8-662a-4ae2-a89e-51076826dd26",
                                                                                    null,
                                                                                    "827673b3-d500-4abe-b174-b33378b98560");
        assertFalse(developercertificateInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("9c905595-e398-48ee-8963-4a46adb157d1",
                                                                                  "a941223f-8f38-43fd-b3ee-8ba0f4264bdf",
                                                                                  new Date(1559835560296L),
                                                                                  "ceb96913-60fc-4215-a3b5-43f5ec9434cf",
                                                                                  "d27a2cb2-7648-4c7a-bce8-e68493720c92",
                                                                                  "a845229f-38ae-4b21-8f1b-b08b795268cd",
                                                                                  "a067a4ad-8d06-41f6-807b-7e22fdd2cce7",
                                                                                  "81bf55cf-5706-4f4f-b416-aa17c013349a");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("9c905595-e398-48ee-8963-4a46adb157d1",
                                                                                  "a941223f-8f38-43fd-b3ee-8ba0f4264bdf",
                                                                                  new Date(1559835560296L),
                                                                                  "ceb96913-60fc-4215-a3b5-43f5ec9434cf",
                                                                                  "d27a2cb2-7648-4c7a-bce8-e68493720c92",
                                                                                  "a845229f-38ae-4b21-8f1b-b08b795268cd",
                                                                                  "a067a4ad-8d06-41f6-807b-7e22fdd2cce7",
                                                                                  "81bf55cf-5706-4f4f-b416-aa17c013349a");
            DeveloperCertificate developercertificate3 = new DeveloperCertificate("c41d02f1-1541-479c-b4ea-56cb32a00655",
                                                                                  "47bd2414-438c-4caa-89ff-e74ad0117950",
                                                                                  new Date(1559835557548L),
                                                                                  "5ce979aa-9eb9-4433-962a-21a00705ffc2",
                                                                                  "22c62e20-9ce8-454c-9bc7-39d883234b7b",
                                                                                  "d9ebdc93-e68c-4131-bd67-f955e8e06649",
                                                                                  "de030188-623b-41cd-9e1b-76ca30633842",
                                                                                  "d1f66101-dbd1-4315-9267-ec9b12a73aa1");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotNull(developercertificate3);
            assertNotSame(developercertificate2, developercertificate1);
            assertNotSame(developercertificate3, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate1, developercertificate2);
            assertEquals(developercertificate1, developercertificate1);
            assertFalse(developercertificate1.equals(null));
            assertNotEquals(developercertificate3, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
