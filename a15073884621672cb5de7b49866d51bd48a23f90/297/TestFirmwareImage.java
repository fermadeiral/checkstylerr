// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.deviceupdate.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model FirmwareImage.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestFirmwareImage {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            FirmwareImage firmwareimage1 = new FirmwareImage(new Date(1559835553718L),
                                                             "73223d0a-4d42-465e-ae8e-8f72b30b2da8", -105,
                                                             "241d934c-068d-41cf-816b-ce049900e235",
                                                             "764de3c2-df8a-4e62-89df-3fc10820309e",
                                                             "6e65a3b8-63c4-44a7-9c28-956e5b80be3c",
                                                             "5ac8ab47-8857-4567-88df-211488655edc",
                                                             new Date(1559835558055L));
            FirmwareImage firmwareimage2 = firmwareimage1.clone();
            assertNotNull(firmwareimage1);
            assertNotNull(firmwareimage2);
            assertNotSame(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage2, firmwareimage1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            FirmwareImage firmwareimage1 = new FirmwareImage(new Date(1559835557897L),
                                                             "2085a916-9948-4d5d-bcbd-f36b186b98a6", 92,
                                                             "88e512d5-6c84-48b1-b02a-a105c21ade41",
                                                             "583dcb22-819b-4e26-b941-a2678d163a12",
                                                             "beba1758-51aa-4c0c-8360-0ef2ad4dc63a",
                                                             "0725b3e0-f41f-48b1-9872-2ead57757b3a",
                                                             new Date(1559835551026L));
            FirmwareImage firmwareimage2 = new FirmwareImage(new Date(1559835557897L),
                                                             "2085a916-9948-4d5d-bcbd-f36b186b98a6", 92,
                                                             "88e512d5-6c84-48b1-b02a-a105c21ade41",
                                                             "583dcb22-819b-4e26-b941-a2678d163a12",
                                                             "beba1758-51aa-4c0c-8360-0ef2ad4dc63a",
                                                             "0725b3e0-f41f-48b1-9872-2ead57757b3a",
                                                             new Date(1559835551026L));
            assertNotNull(firmwareimage1);
            assertNotNull(firmwareimage2);
            assertNotSame(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage2.hashCode(), firmwareimage1.hashCode());
            int hashCode = firmwareimage1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, firmwareimage1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        FirmwareImage firmwareimage = new FirmwareImage(new Date(1559835555718L),
                                                        "e9003896-eeeb-4073-9dd7-fdf6a148984b", 8,
                                                        "5da92e55-3531-4362-82ea-874f70933788",
                                                        "42b7386a-d092-4762-9149-e2943094155b",
                                                        "245cb863-a6ef-4cd8-9170-064a171c18cb",
                                                        "9265d6a7-ecc4-4e3b-9f35-11e284d23857",
                                                        new Date(1559835555000L));
        assertTrue(firmwareimage.isValid());
        FirmwareImage firmwareimageInvalid = new FirmwareImage(new Date(1559835551664L),
                                                               "4f47a49e-aac5-4452-bcce-77f7d5d5bc66", -18,
                                                               "d1057462-466b-4be6-96cf-c09cda245148",
                                                               "ccc27954-71b9-4e3e-bb97-7e93efc0db628d8ba858-d54c-464c-97ed-6963f05e611ba0d5a12f-707c-42e2-98f2-821ad8df541e6bccb21d-a5ee-485e-9f6b-f2a8b4c4500e8ce48cd1-ba7b-4b4b-9ab5-c2a6d44a41838912f248-ebb2-4fba-8059-6b168e885ad9840deda0-3c0d-4550-90a4-96b404e909671ab4960c-0bea-425a-96ac-3dd3517af5982d44729e-e306-4dab-9837-b8270ebc77f2c5a2b4a7-3f7c-44be-a79e-799128f81a02930cdd91-7d8a-4645-9fa8-95c17065df3a74554dc4-80d3-45d1-a0ef-2e7048c05fcbd3958f64-8e25-43ca-aa20-739bf08c7348fe027a9a-e037-4d45-bcc5-e4f53cad1e73d787e2eb-806d-4757-bd14-cedcbbeb0e44e09c3061-ad94-469f-b42c-0206dfc3fe79aa2f8bc3-72a9-4b3c-8647-ed34c0fd3a27ca2acae4-a91d-4ffc-95a5-511cf2a684b93127076f-e713-4118-9b64-cdef452f597488baee27-efde-47b8-b773-6720c6e953fa725bafc2-3df2-41db-bacf-46f684167c831aa97d64-74f0-4696-b927-9799f017657cec9dbf26-c037-4fcf-ae54-0fd07033bf939cab042d-49e2-4fd0-bea4-7102ac6815a73813e844-8820-4613-9dcc-0211eb6cf483bf5c74d0-fdf1-43e3-89e9-5ac93808fa33221ff6f7-7a3e-4048-a4c6-2291d4673ed0c0ac0bd9-d4d1-4afa-9e5e-729f647cde45972fe036-3b99-46f2-9852-5ca76292cf5ee3dddcc7-76f5-40b3-8e24-71ca0ae99c5dd4ae984f-e262-477c-9a3d-f2f908f41684bb1c332c-b07b-4f16-ad23-adf4eb9399dbef6b2eb1-6a7f-4e99-9876-3ab8a2f9c06155a54a8b-b4a6-40f9-821c-2667f62bd9ab045b4822-9bc4-4769-9167-be00174739cfb4cefb7f-28ae-4482-b4ab-8b61b4259d0c94ae080d-7635-4707-ad4a-86a765ca1c03d9e87e53-a49a-440c-8a66-3787837860928d2a5dbf-d4d9-46a2-ae3a-bee14c2dd350b45c6c45-d23b-43f5-a4b1-08c2aa368eb829880782-ab61-41ee-bc2e-970c05c7829f6b2a7189-41b0-4c42-bb3a-dea8f2179eb6aa2be8f8-8f7e-4718-b3a6-35118822b9a6ba783803-25ae-4797-98e4-58cbb764c3852f5b66fa-4373-4e58-b7c8-f289c164b1091ef1cf7a-9d77-419e-9dd2-1e26138023c18351de20-36c2-4de7-ac33-d375d8e217168009d7b4-644f-4e1e-a3b3-a73144d8df8f83b41872-fd20-4924-a1dd-1a9dba177794e8542c2b-a27a-4e5c-9430-6e64a0726e256b990b1e-0983-445b-820f-caa97b9c6b2c95ea328e-e2cf-4089-8ec4-2349bd08a8b869ccddbc-e864-420b-be4f-b7e96d11966ac80483a3-7516-4e03-b4a2-00fd5105737dcb5862ec-0f48-444c-808d-feaef2917a6dd1f800d9-5577-40e1-a76a-bfc03c4bb8f0",
                                                               "df7238de-9eac-4914-8f66-e45bcd0d4e6f",
                                                               "952dabe3-71cb-4a28-9117-bdfa351c2e2e0d8b88e0-7c46-473f-9103-7e103821845c7ef091ec-f79b-4509-9e1f-0abd4706fa181a0e695b-02a9-4b56-b994-ad170a430469",
                                                               new Date(1559835556196L));
        assertFalse(firmwareimageInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            FirmwareImage firmwareimage1 = new FirmwareImage(new Date(1559835555799L),
                                                             "1bf0a692-b227-408d-84c8-4a3ade55f16b", -53,
                                                             "9269885c-9420-4420-a266-2bf6a51f5feb",
                                                             "5f3a231e-0397-40af-a131-55e122063035",
                                                             "4cdab8d4-888e-4df4-8051-5bf26f8fa7cd",
                                                             "7c0f42a3-ed22-4c55-bec5-83a44e83dafa",
                                                             new Date(1559835552619L));
            FirmwareImage firmwareimage2 = new FirmwareImage(new Date(1559835555799L),
                                                             "1bf0a692-b227-408d-84c8-4a3ade55f16b", -53,
                                                             "9269885c-9420-4420-a266-2bf6a51f5feb",
                                                             "5f3a231e-0397-40af-a131-55e122063035",
                                                             "4cdab8d4-888e-4df4-8051-5bf26f8fa7cd",
                                                             "7c0f42a3-ed22-4c55-bec5-83a44e83dafa",
                                                             new Date(1559835552619L));
            FirmwareImage firmwareimage3 = new FirmwareImage(new Date(1559835556055L),
                                                             "4815ed06-1343-4ebd-960a-74f9ae6b2792", -22,
                                                             "bb24944d-5f27-44bf-8991-e5925d215d0f",
                                                             "88f2e4fc-c43a-4443-a6e9-9b91d6ec430d",
                                                             "6e3c0786-4da7-486f-a413-8a581cdde70c",
                                                             "d4ca6899-544f-47c2-a870-4826673b32fd",
                                                             new Date(1559835553149L));
            assertNotNull(firmwareimage1);
            assertNotNull(firmwareimage2);
            assertNotNull(firmwareimage3);
            assertNotSame(firmwareimage2, firmwareimage1);
            assertNotSame(firmwareimage3, firmwareimage1);
            assertEquals(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage1, firmwareimage2);
            assertEquals(firmwareimage1, firmwareimage1);
            assertFalse(firmwareimage1.equals(null));
            assertNotEquals(firmwareimage3, firmwareimage1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
