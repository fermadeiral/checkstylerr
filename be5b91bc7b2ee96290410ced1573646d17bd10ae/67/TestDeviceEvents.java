// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEvents.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEvents {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1561383447602L), null,
                                                          new Date(1561383449160L),
                                                          "33ade037-3fe8-4318-9cd3-b405005b0fef",
                                                          "71fc0727-3905-494a-86c7-d6e4f3a1893b",
                                                          "29d1cfd7-b157-49bb-8caa-a4332f6d1ac6",
                                                          "df408e86-cd77-4886-8933-8027473b0c5f",
                                                          "ab0c9570-aa17-4d1e-b881-1d19a2daed8a",
                                                          "64e26a84-c48d-468f-8032-f33e23b0ad34", true);
            DeviceEvents deviceevents2 = deviceevents1.clone();
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1561383444163L), null,
                                                          new Date(1561383441145L),
                                                          "eb91aebe-aef8-4e0c-8ca2-7b25916d28d5",
                                                          "824dcc60-a488-43c8-a784-9d23a8dd2ae9",
                                                          "ed99935c-d727-4829-af54-5a6e9afc0289",
                                                          "7dd7e383-a8fd-4437-a8af-6c9408b2a8fd",
                                                          "1d41477f-76cd-4442-9d46-1e65bd5e8efb",
                                                          "505d4a87-2f7b-4642-8fb8-249dcf4bbf2e", false);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1561383444163L), null,
                                                          new Date(1561383441145L),
                                                          "eb91aebe-aef8-4e0c-8ca2-7b25916d28d5",
                                                          "824dcc60-a488-43c8-a784-9d23a8dd2ae9",
                                                          "ed99935c-d727-4829-af54-5a6e9afc0289",
                                                          "7dd7e383-a8fd-4437-a8af-6c9408b2a8fd",
                                                          "1d41477f-76cd-4442-9d46-1e65bd5e8efb",
                                                          "505d4a87-2f7b-4642-8fb8-249dcf4bbf2e", false);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2.hashCode(), deviceevents1.hashCode());
            int hashCode = deviceevents1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceevents1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEvents deviceevents = new DeviceEvents(null, new Date(1561383443485L), null, new Date(1561383450074L),
                                                     "852a97fc-71b8-48dc-bc60-df7721b81fb6",
                                                     "df594e4c-8ad4-4adf-90e5-8ad63be69134",
                                                     "96d548ea-e432-4616-a37a-ebf49c559241",
                                                     "ab75c266-69d1-47a8-bf3c-b0361c099343",
                                                     "5bf2a007-4741-4a12-9d97-2e9ccb5d05b7",
                                                     "7326a491-63b8-479c-8b5c-cb897eac693c", true);
        assertTrue(deviceevents.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1561383442455L), null,
                                                          new Date(1561383447024L),
                                                          "cbb5a706-0cf4-4d36-95ee-9bdf9fefbb94",
                                                          "bbabd2a7-2e0b-4c05-acc6-20b4ae7e2a29",
                                                          "1f9b748d-1738-4f06-8e7a-debfe3791f6d",
                                                          "0a777fbb-c525-4962-a2a7-381e4f003e44",
                                                          "c8b7ac3e-7934-4637-8559-d953b22c06c4",
                                                          "85bea62a-f665-4f9f-8a26-fb80abdc47f7", false);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1561383442455L), null,
                                                          new Date(1561383447024L),
                                                          "cbb5a706-0cf4-4d36-95ee-9bdf9fefbb94",
                                                          "bbabd2a7-2e0b-4c05-acc6-20b4ae7e2a29",
                                                          "1f9b748d-1738-4f06-8e7a-debfe3791f6d",
                                                          "0a777fbb-c525-4962-a2a7-381e4f003e44",
                                                          "c8b7ac3e-7934-4637-8559-d953b22c06c4",
                                                          "85bea62a-f665-4f9f-8a26-fb80abdc47f7", false);
            DeviceEvents deviceevents3 = new DeviceEvents(null, new Date(1561383445005L), null,
                                                          new Date(1561383448080L),
                                                          "fc4398d4-018e-482e-9e27-34fbd10ad7bb",
                                                          "41b27225-23ef-4288-84c9-029e2ee7fcad",
                                                          "09261233-54ee-4b61-a91e-f81cd00e067b",
                                                          "1c551112-e938-43b7-bcb6-729d0600ff4d",
                                                          "b4d8316d-8db1-40ce-b401-caf1cfb8769d",
                                                          "79f0a5e8-1023-4179-874a-53afed2a6612", false);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotNull(deviceevents3);
            assertNotSame(deviceevents2, deviceevents1);
            assertNotSame(deviceevents3, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents1, deviceevents2);
            assertEquals(deviceevents1, deviceevents1);
            assertFalse(deviceevents1.equals(null));
            assertNotEquals(deviceevents3, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
