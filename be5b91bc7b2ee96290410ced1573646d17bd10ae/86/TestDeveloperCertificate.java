// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.security.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeveloperCertificate.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeveloperCertificate {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("4898f033-0d8f-4046-a96a-df29f3034e35",
                                                                                  "30737698-6967-4b5a-aa9a-34974e3dddc1",
                                                                                  new Date(1561383446073L),
                                                                                  "848f7a3b-d1b0-47bf-b36c-e7b86b12f01a",
                                                                                  "426f323e-92ea-4361-a307-45a82d392c4e",
                                                                                  "e03be3cc-b60e-4432-b29c-26494581cc88",
                                                                                  "50b0837f-bfcd-4b5f-b4b2-3e4998da6e11",
                                                                                  "3a7ad27b-10bc-4a8f-8e9e-9a4a8baf7563");
            DeveloperCertificate developercertificate2 = developercertificate1.clone();
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("4e93c1d5-8433-4f65-ba91-c6a7184e8e72",
                                                                                  "ad27fe00-b409-4ca1-94c5-0fa110d26860",
                                                                                  new Date(1561383444162L),
                                                                                  "7137715f-414e-4f63-b00f-b9ddb5e8a96d",
                                                                                  "f07adf68-53d5-4305-b3b8-58aa0fb3139f",
                                                                                  "16ac851d-a55e-485d-96a0-7eabf7dd9c21",
                                                                                  "edad9aa5-7fe3-4408-b8db-18e77858f138",
                                                                                  "50a13a9e-5051-46be-bf81-9eea2d530650");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("4e93c1d5-8433-4f65-ba91-c6a7184e8e72",
                                                                                  "ad27fe00-b409-4ca1-94c5-0fa110d26860",
                                                                                  new Date(1561383444162L),
                                                                                  "7137715f-414e-4f63-b00f-b9ddb5e8a96d",
                                                                                  "f07adf68-53d5-4305-b3b8-58aa0fb3139f",
                                                                                  "16ac851d-a55e-485d-96a0-7eabf7dd9c21",
                                                                                  "edad9aa5-7fe3-4408-b8db-18e77858f138",
                                                                                  "50a13a9e-5051-46be-bf81-9eea2d530650");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2.hashCode(), developercertificate1.hashCode());
            int hashCode = developercertificate1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, developercertificate1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeveloperCertificate developercertificate = new DeveloperCertificate("090bf09a-515a-4108-8257-8a8633e48351",
                                                                             "cd640a81-8456-4b2f-8f54-5db6819d5b09",
                                                                             new Date(1561383442491L),
                                                                             "9a5a2254-5465-4b90-b1bb-6d572daf1152",
                                                                             "1e5a16de-a017-4460-9bc1-e2f359a7bfbb",
                                                                             "2d83b7bd-214a-4a67-ad1a-2d7c4f025543",
                                                                             "8e1e86c0-a7e7-479b-b58e-1d705dc1e398",
                                                                             "a86efcf5-6081-45c4-bfd9-c1a6621eab2a");
        assertTrue(developercertificate.isValid());
        DeveloperCertificate developercertificateInvalid = new DeveloperCertificate("e461cef5-c262-4223-aed8-ec160795b2be",
                                                                                    "95ac3d15-64cd-4659-a8ce-fc57f0f8033e",
                                                                                    new Date(1561383444309L),
                                                                                    "1fdc8552-6dfe-4744-af7d-259831eb6b1b",
                                                                                    "70ddbd28-807e-40d1-8516-6f8ca7a8bb3b",
                                                                                    "83010640-c3f4-4d22-b7a8-1b7cbddd2655",
                                                                                    null,
                                                                                    "60f885f8-ba8a-4ec0-b045-0871c24c25f7");
        assertFalse(developercertificateInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("d4aac3d5-a77e-4ea6-a53d-5b0e0d87fa35",
                                                                                  "51e14a3f-99b2-4105-a636-61f5621c1adc",
                                                                                  new Date(1561383441071L),
                                                                                  "fafc2ae2-acdb-461f-8d79-5572499d4ba3",
                                                                                  "3dc25047-bea1-40cb-ab08-ffd70f6173ba",
                                                                                  "710ba1d1-5208-44df-97c7-3bb2a21ce3e0",
                                                                                  "2949269c-a96b-46ac-8f8a-5ec7886f88d4",
                                                                                  "e33b9cf9-6188-4bfd-bcb1-b73841cbc983");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("d4aac3d5-a77e-4ea6-a53d-5b0e0d87fa35",
                                                                                  "51e14a3f-99b2-4105-a636-61f5621c1adc",
                                                                                  new Date(1561383441071L),
                                                                                  "fafc2ae2-acdb-461f-8d79-5572499d4ba3",
                                                                                  "3dc25047-bea1-40cb-ab08-ffd70f6173ba",
                                                                                  "710ba1d1-5208-44df-97c7-3bb2a21ce3e0",
                                                                                  "2949269c-a96b-46ac-8f8a-5ec7886f88d4",
                                                                                  "e33b9cf9-6188-4bfd-bcb1-b73841cbc983");
            DeveloperCertificate developercertificate3 = new DeveloperCertificate("7eaca5e3-f484-4d7b-883f-1c945add3b67",
                                                                                  "c709c720-0035-45e1-b4b6-dc916a039444",
                                                                                  new Date(1561383440795L),
                                                                                  "2be734a4-c73c-4ac5-8a3a-be45e76b465d",
                                                                                  "7ed7a4ac-1e3a-4b1a-a434-271a811e0b04",
                                                                                  "0043413d-f830-450b-a5fa-1ba4c824d8f7",
                                                                                  "5d21afb0-5c7b-4be0-885f-0656a20aa41c",
                                                                                  "591c16bb-8464-46d7-9f72-ad636e86de78");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotNull(developercertificate3);
            assertNotSame(developercertificate2, developercertificate1);
            assertNotSame(developercertificate3, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate1, developercertificate2);
            assertEquals(developercertificate1, developercertificate1);
            assertFalse(developercertificate1.equals(null));
            assertNotEquals(developercertificate3, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
