// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantUserInvitation.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantUserInvitation {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantUserInvitation subtenantuserinvitation1 = new SubtenantUserInvitation("6db86c0a205f4061b6e4796773e6aba1",
                                                                                           new Date(1561383443443L),
                                                                                           "d8dc5.917ac@f51fb.me",
                                                                                           new Date(1561383446910L),
                                                                                           "6db86c0a205f4061b6e4796773e6aba1",
                                                                                           null,
                                                                                           new Date(1561383448748L),
                                                                                           "6db86c0a205f4061b6e4796773e6aba1");
            SubtenantUserInvitation subtenantuserinvitation2 = subtenantuserinvitation1.clone();
            assertNotNull(subtenantuserinvitation1);
            assertNotNull(subtenantuserinvitation2);
            assertNotSame(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantUserInvitation subtenantuserinvitation1 = new SubtenantUserInvitation("6db86c0a205f4061b6e4796773e6aba1",
                                                                                           new Date(1561383442583L),
                                                                                           "7065c.324ca@61a7a.me",
                                                                                           new Date(1561383443010L),
                                                                                           "6db86c0a205f4061b6e4796773e6aba1",
                                                                                           null,
                                                                                           new Date(1561383444872L),
                                                                                           "6db86c0a205f4061b6e4796773e6aba1");
            SubtenantUserInvitation subtenantuserinvitation2 = new SubtenantUserInvitation("6db86c0a205f4061b6e4796773e6aba1",
                                                                                           new Date(1561383442583L),
                                                                                           "7065c.324ca@61a7a.me",
                                                                                           new Date(1561383443010L),
                                                                                           "6db86c0a205f4061b6e4796773e6aba1",
                                                                                           null,
                                                                                           new Date(1561383444872L),
                                                                                           "6db86c0a205f4061b6e4796773e6aba1");
            assertNotNull(subtenantuserinvitation1);
            assertNotNull(subtenantuserinvitation2);
            assertNotSame(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2.hashCode(), subtenantuserinvitation1.hashCode());
            int hashCode = subtenantuserinvitation1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantuserinvitation1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantUserInvitation subtenantuserinvitation = new SubtenantUserInvitation("6db86c0a205f4061b6e4796773e6aba1",
                                                                                      new Date(1561383441527L),
                                                                                      "8d493.0b94f@61fd2.me",
                                                                                      new Date(1561383442929L),
                                                                                      "6db86c0a205f4061b6e4796773e6aba1",
                                                                                      null, new Date(1561383440768L),
                                                                                      "6db86c0a205f4061b6e4796773e6aba1");
        assertTrue(subtenantuserinvitation.isValid());
        SubtenantUserInvitation subtenantuserinvitationInvalid = new SubtenantUserInvitation(null,
                                                                                             new Date(1561383450554L),
                                                                                             null,
                                                                                             new Date(1561383448290L),
                                                                                             "à°¸&ã«“E\u0011\u0014Pá?Ž\u001bï¢´î¬‘ëˆ·æ?«O_çµ˜\u0017_\u0001^Mí”‰T] á„ºJ\u0012;\f.ç³®?Z-\u001bä›¤\fã½¯D=)\u0013 `^/Vì„¼=\u0001T[\u0010D>[\u001eä°?\u0000=è”•",
                                                                                             null,
                                                                                             new Date(1561383450350L),
                                                                                             "à°¸&ã«“E\u0011\u0014Pá?Ž\u001bï¢´î¬‘ëˆ·æ?«O_çµ˜\u0017_\u0001^Mí”‰T] á„ºJ\u0012;\f.ç³®?Z-\u001bä›¤\fã½¯D=)\u0013 `^/Vì„¼=\u0001T[\u0010D>[\u001eä°?\u0000=è”•");
        assertFalse(subtenantuserinvitationInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantUserInvitation subtenantuserinvitation1 = new SubtenantUserInvitation("6db86c0a205f4061b6e4796773e6aba1",
                                                                                           new Date(1561383444107L),
                                                                                           "08487.56acc@be5f8.me",
                                                                                           new Date(1561383449457L),
                                                                                           "6db86c0a205f4061b6e4796773e6aba1",
                                                                                           null,
                                                                                           new Date(1561383443126L),
                                                                                           "6db86c0a205f4061b6e4796773e6aba1");
            SubtenantUserInvitation subtenantuserinvitation2 = new SubtenantUserInvitation("6db86c0a205f4061b6e4796773e6aba1",
                                                                                           new Date(1561383444107L),
                                                                                           "08487.56acc@be5f8.me",
                                                                                           new Date(1561383449457L),
                                                                                           "6db86c0a205f4061b6e4796773e6aba1",
                                                                                           null,
                                                                                           new Date(1561383443126L),
                                                                                           "6db86c0a205f4061b6e4796773e6aba1");
            SubtenantUserInvitation subtenantuserinvitation3 = new SubtenantUserInvitation("6db86c0a205f4061b6e4796773e6aba1",
                                                                                           new Date(1561383446531L),
                                                                                           "842d8.9e670@1c54b.fr",
                                                                                           new Date(1561383449970L),
                                                                                           "6db86c0a205f4061b6e4796773e6aba1",
                                                                                           null,
                                                                                           new Date(1561383446146L),
                                                                                           "6db86c0a205f4061b6e4796773e6aba1");
            assertNotNull(subtenantuserinvitation1);
            assertNotNull(subtenantuserinvitation2);
            assertNotNull(subtenantuserinvitation3);
            assertNotSame(subtenantuserinvitation2, subtenantuserinvitation1);
            assertNotSame(subtenantuserinvitation3, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation1, subtenantuserinvitation2);
            assertEquals(subtenantuserinvitation1, subtenantuserinvitation1);
            assertFalse(subtenantuserinvitation1.equals(null));
            assertNotEquals(subtenantuserinvitation3, subtenantuserinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
