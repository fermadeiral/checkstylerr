// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceGroup.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceGroup {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceGroup devicegroup1 = new DeviceGroup(new Date(1561477842152L), null,
                                                       "47e8763a-e800-4ca0-887f-02a1e3fc6b9b", -63,
                                                       "b24febe8-8784-4168-96b0-416b3bbe9ef6",
                                                       "2eb44d88-1d4b-4ae7-a89a-a4f19bece975",
                                                       new Date(1561477836481L));
            DeviceGroup devicegroup2 = devicegroup1.clone();
            assertNotNull(devicegroup1);
            assertNotNull(devicegroup2);
            assertNotSame(devicegroup2, devicegroup1);
            assertEquals(devicegroup2, devicegroup1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceGroup devicegroup1 = new DeviceGroup(new Date(1561477833055L), null,
                                                       "93d20a06-ab9e-4deb-af58-6e53819c63e7", -127,
                                                       "fa4ae86b-24f6-481d-af34-8e5d3e4bf2f5",
                                                       "3ec3afbf-a289-42ff-8413-909280dcec5f",
                                                       new Date(1561477833155L));
            DeviceGroup devicegroup2 = new DeviceGroup(new Date(1561477833055L), null,
                                                       "93d20a06-ab9e-4deb-af58-6e53819c63e7", -127,
                                                       "fa4ae86b-24f6-481d-af34-8e5d3e4bf2f5",
                                                       "3ec3afbf-a289-42ff-8413-909280dcec5f",
                                                       new Date(1561477833155L));
            assertNotNull(devicegroup1);
            assertNotNull(devicegroup2);
            assertNotSame(devicegroup2, devicegroup1);
            assertEquals(devicegroup2, devicegroup1);
            assertEquals(devicegroup2.hashCode(), devicegroup1.hashCode());
            int hashCode = devicegroup1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, devicegroup1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceGroup devicegroup = new DeviceGroup(new Date(1561477833439L), null,
                                                  "b1e7572b-fa29-4632-a87b-a793f72baeca", -25,
                                                  "bbc32efa-08fe-4c02-a2bc-1a696f1d3b6d",
                                                  "d43f83e2-98dd-4b5a-a10e-4712dc8786ff", new Date(1561477834137L));
        assertTrue(devicegroup.isValid());
        DeviceGroup devicegroupInvalid = new DeviceGroup(new Date(1561477841316L), null,
                                                         "683d2882-f906-4c6f-b912-69f98e80cd82a64053c8-b9fb-4fb4-b13a-ff3279b2eba2e695b865-b2c8-4c7f-bd76-6b63dfd182cf01c8fdca-1c3a-43b4-a593-b191836b7262b73ce85c-2060-4bfb-b05c-520f7a4a383bc2ed247b-0c44-4d81-83a5-a90053cbadc13b06196d-8e3b-4684-ad65-ce03774bf10b66308470-918a-4693-a1e4-93f86f1ef84f7f37cad6-e2d0-453b-8f1b-83e7c5368f52ce128375-8e69-4434-a35b-b74cd08132a718a2728a-96ce-4699-a897-73ecbed2c92d496c0f0e-10c6-49a7-86f5-169d1738dfd066891534-92ba-4521-a420-4b5e70f6954dd0e20a22-3def-4a3d-9e96-bbc331a20b3283f44e83-3a9c-4bc4-b489-b8ab2623a68da08bf4c5-6518-467d-ae6c-d39393ea0b1269124faa-023d-4b98-8205-628b2c1031d2f8dd15ab-011a-4bb0-ae4a-f4feb373394019cadde1-5902-48cc-8652-52ab737036138dd19c54-561c-4ae2-bbb0-96fe2f73133f6d58f12f-d927-487f-b38d-506e702ba8704d8d0a82-53ac-420e-bda8-4bc66957924fdc9b1083-e745-4f25-9ddf-847956accb33103e9aac-07ba-48aa-8b08-dce2e488c7aa61a5b052-f02d-47c2-a791-c86ea2a39df2fcb120ed-0e7f-4e78-9e76-49b18bda15a3e4f12b25-a955-4809-ac90-5dab68e8524c28c7dc9d-0059-4de4-8815-b3ebd4e9e476db6661f1-c9b4-40f1-9e4a-4a8e2448fe14eef107eb-f44b-4ada-a384-dfc24ba245c185405a58-3520-4f73-96d6-a2dddd673385419a9312-daaf-4af6-ab32-1da25eee3001f3030ebf-ae3e-49f6-8812-ddd9e63abc8165bd9249-8e3c-4246-90d1-c02a1b2ee6d9832cee7c-2578-4ad7-873f-3947fe0bdb98c9cedd04-bb17-4f9d-8216-1e81ca530703c1e074e6-b5b5-4b11-99e4-b47d1bdf444312b67ab8-0257-47a4-bf17-dd54b498a310d02ab52f-164e-452f-a2d2-28feb655f0bf6d043bc1-d6cf-40b1-ac8d-1958dba7f3d6af212c0a-6380-42cf-8237-d7ffa5e423cd86cf4e2f-4230-4fe3-90db-5a6de5f2f460fe658c94-440e-40d2-8232-1039ffbd1bd873f32b7f-e2f7-4c66-a843-7e19900c2379e55143f3-79f7-42e1-845f-aa1469d9ef3f6c7e22c2-10d3-4cbb-9044-c2260047093f086710c2-b0c9-4b4b-b5b0-44750361215aa4631564-0db1-4633-b38b-6ffee6e0d6de5df1fd48-879c-4389-8af1-c75d666df960ee24bd0d-c82e-4895-9232-48f86384f1a665336660-4b85-44e4-995f-feb317dd19101ee38095-934b-48af-a76c-32e8f534720ea9deac7c-1edb-4bfa-94c5-e9b59ce4ae46521da9fd-820f-499d-af96-68be12184560e0e94376-3ce7-4126-a21e-c1b2c49061f8701f7143-25cb-43ef-81e1-651004fe6679",
                                                         15, "a4110d72-bf4f-45d0-ab9b-f03ab964d3bf",
                                                         "152ae2d8-4a58-4d41-a33e-392c4314790117b4eb74-00be-4991-ac6a-32f53cf541025186d84c-05f1-4d9d-9ead-88cb733c2618b4ba9c20-1df8-4bb7-936b-2e9f85395ac1",
                                                         new Date(1561477834230L));
        assertFalse(devicegroupInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceGroup devicegroup1 = new DeviceGroup(new Date(1561477838096L), null,
                                                       "b6ae3ee3-283d-4923-a0ba-a6ab467499a7", 6,
                                                       "d703678b-b2d4-47f7-a99b-cd072ee02c3e",
                                                       "593ca065-f771-4208-9af3-51a4de16fd5a",
                                                       new Date(1561477832595L));
            DeviceGroup devicegroup2 = new DeviceGroup(new Date(1561477838096L), null,
                                                       "b6ae3ee3-283d-4923-a0ba-a6ab467499a7", 6,
                                                       "d703678b-b2d4-47f7-a99b-cd072ee02c3e",
                                                       "593ca065-f771-4208-9af3-51a4de16fd5a",
                                                       new Date(1561477832595L));
            DeviceGroup devicegroup3 = new DeviceGroup(new Date(1561477834420L), null,
                                                       "8b6874bd-cd1e-456a-8d8b-e5343f782e9d", 114,
                                                       "40feefb7-010f-4e8a-9dbc-ec6269dbffef",
                                                       "6fde9214-6bd8-4a06-9a17-795bd9dfe4d0",
                                                       new Date(1561477834498L));
            assertNotNull(devicegroup1);
            assertNotNull(devicegroup2);
            assertNotNull(devicegroup3);
            assertNotSame(devicegroup2, devicegroup1);
            assertNotSame(devicegroup3, devicegroup1);
            assertEquals(devicegroup2, devicegroup1);
            assertEquals(devicegroup2, devicegroup1);
            assertEquals(devicegroup1, devicegroup2);
            assertEquals(devicegroup1, devicegroup1);
            assertFalse(devicegroup1.equals(null));
            assertNotEquals(devicegroup3, devicegroup1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
