// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.branding.model;

import static org.junit.Assert.*;

import com.arm.mbed.cloud.sdk.common.Order;
import org.junit.Test;

/**
 * Unit tests for Model DarkThemeImageListOptions.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDarkThemeImageListOptions {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DarkThemeImageListOptions darkthemeimagelistoptions1 = new DarkThemeImageListOptions(Integer.valueOf(121),
                                                                                                 Long.valueOf(110),
                                                                                                 Order.getDefault(),
                                                                                                 "576bcc3f-8d3b-4782-993a-bdfc4a10ae23",
                                                                                                 null, null);
            DarkThemeImageListOptions darkthemeimagelistoptions2 = darkthemeimagelistoptions1.clone();
            assertNotNull(darkthemeimagelistoptions1);
            assertNotNull(darkthemeimagelistoptions2);
            assertNotSame(darkthemeimagelistoptions2, darkthemeimagelistoptions1);
            assertEquals(darkthemeimagelistoptions2, darkthemeimagelistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DarkThemeImageListOptions darkthemeimagelistoptions1 = new DarkThemeImageListOptions(Integer.valueOf(-89),
                                                                                                 Long.valueOf(-1),
                                                                                                 Order.getDefault(),
                                                                                                 "3b1f2687-33bf-4c3d-b76c-ab090baa6a9c",
                                                                                                 null, null);
            DarkThemeImageListOptions darkthemeimagelistoptions2 = new DarkThemeImageListOptions(Integer.valueOf(-89),
                                                                                                 Long.valueOf(-1),
                                                                                                 Order.getDefault(),
                                                                                                 "3b1f2687-33bf-4c3d-b76c-ab090baa6a9c",
                                                                                                 null, null);
            assertNotNull(darkthemeimagelistoptions1);
            assertNotNull(darkthemeimagelistoptions2);
            assertNotSame(darkthemeimagelistoptions2, darkthemeimagelistoptions1);
            assertEquals(darkthemeimagelistoptions2, darkthemeimagelistoptions1);
            assertEquals(darkthemeimagelistoptions2.hashCode(), darkthemeimagelistoptions1.hashCode());
            int hashCode = darkthemeimagelistoptions1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, darkthemeimagelistoptions1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DarkThemeImageListOptions darkthemeimagelistoptions1 = new DarkThemeImageListOptions(Integer.valueOf(-6),
                                                                                                 Long.valueOf(-127),
                                                                                                 Order.getDefault(),
                                                                                                 "7124558a-f25a-4950-a5f9-984dda7c1930",
                                                                                                 null, null);
            DarkThemeImageListOptions darkthemeimagelistoptions2 = new DarkThemeImageListOptions(Integer.valueOf(-6),
                                                                                                 Long.valueOf(-127),
                                                                                                 Order.getDefault(),
                                                                                                 "7124558a-f25a-4950-a5f9-984dda7c1930",
                                                                                                 null, null);
            DarkThemeImageListOptions darkthemeimagelistoptions3 = new DarkThemeImageListOptions(Integer.valueOf(37),
                                                                                                 Long.valueOf(40),
                                                                                                 Order.getDefault(),
                                                                                                 "423be158-6e43-48ce-a50c-153c4f28765c",
                                                                                                 null, null);
            assertNotNull(darkthemeimagelistoptions1);
            assertNotNull(darkthemeimagelistoptions2);
            assertNotNull(darkthemeimagelistoptions3);
            assertNotSame(darkthemeimagelistoptions2, darkthemeimagelistoptions1);
            assertNotSame(darkthemeimagelistoptions3, darkthemeimagelistoptions1);
            assertEquals(darkthemeimagelistoptions2, darkthemeimagelistoptions1);
            assertEquals(darkthemeimagelistoptions2, darkthemeimagelistoptions1);
            assertEquals(darkthemeimagelistoptions1, darkthemeimagelistoptions2);
            assertEquals(darkthemeimagelistoptions1, darkthemeimagelistoptions1);
            assertFalse(darkthemeimagelistoptions1.equals(null));
            assertNotEquals(darkthemeimagelistoptions3, darkthemeimagelistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
