// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantUser.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantUser {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("fc91ece4c663c84ce50ea8058379fe26", null,
                                                             "0c9e01e5-4ddd-4bc7-b2e9-1ebbbd58c67d",
                                                             new Date(1561477840045L), 19, null, "f6818.7a0b6@983b1.me",
                                                             true, "b6594622-bd43-443a-85d8-443a0ed866cf",
                                                             "fc91ece4c663c84ce50ea8058379fe26", true, false, false,
                                                             -101, null, null, "668a3327-a509-4aa5-a119-76bf26a02c4f",
                                                             -28, "21b45498-6af7-4956-8e5a-f8f73641b63b",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1561477835146L), "5E7M_7");
            SubtenantUser subtenantuser2 = subtenantuser1.clone();
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("fc91ece4c663c84ce50ea8058379fe26", null,
                                                             "12b18a26-0487-44e0-abb1-0fc4b281141a",
                                                             new Date(1561477834842L), -85, null,
                                                             "76db9.fd105@5d908.fr", true,
                                                             "850f2999-fe78-419b-a409-9499847164e5",
                                                             "fc91ece4c663c84ce50ea8058379fe26", true, true, true, 121,
                                                             null, null, "d7d756ab-d509-4a6d-a2c9-b7d6b13b6164", -126,
                                                             "23e94ad4-2f47-44cd-b457-2eb861ec4e10",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1561477833112L), "5E7M_7");
            SubtenantUser subtenantuser2 = new SubtenantUser("fc91ece4c663c84ce50ea8058379fe26", null,
                                                             "12b18a26-0487-44e0-abb1-0fc4b281141a",
                                                             new Date(1561477834842L), -85, null,
                                                             "76db9.fd105@5d908.fr", true,
                                                             "850f2999-fe78-419b-a409-9499847164e5",
                                                             "fc91ece4c663c84ce50ea8058379fe26", true, true, true, 121,
                                                             null, null, "d7d756ab-d509-4a6d-a2c9-b7d6b13b6164", -126,
                                                             "23e94ad4-2f47-44cd-b457-2eb861ec4e10",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1561477833112L), "5E7M_7");
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2.hashCode(), subtenantuser1.hashCode());
            int hashCode = subtenantuser1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantuser1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantUser subtenantuser = new SubtenantUser("fc91ece4c663c84ce50ea8058379fe26", null,
                                                        "8e79f383-7c14-4fa3-9b5a-a0bc799f80f7",
                                                        new Date(1561477835366L), 21, null, "a228f.fba5e@d2d78.fr",
                                                        false, "6e6f033c-2aae-4fd4-97e9-b0ab4f806fa6",
                                                        "fc91ece4c663c84ce50ea8058379fe26", false, true, true, -54,
                                                        null, null, "6245e815-2972-434f-81cb-613195c3c68e", 56,
                                                        "80237a62-d89d-46ce-9785-505eeabcafc8",
                                                        SubtenantUserStatus.getDefault(), null,
                                                        new Date(1561477842111L), "5E7M_7");
        assertTrue(subtenantuser.isValid());
        SubtenantUser subtenantuserInvalid = new SubtenantUser(null, null, "e66ec5e6-2257-4620-9155-b7408ae7f280",
                                                               new Date(1561477835393L), -51, null, null, false,
                                                               "4c4f7278-5d7d-4c77-afb8-9082b919c1fcb99862c5-2024-4d89-92d6-b75c756751eb46ec926a-e714-4e10-9ed7-7e93bbf636f8",
                                                               "\u001edçŽ¿Zì’¤ã¸ƒâ–¦&'d\\\\d=/\u0001b]bå†‘ìŸ„ddbbb@\u0019dd_:bd\u0014G,dd+\\\\ï ‰dbbbE`æ¶®b\u0013ç²”AUbbbKè¥Š\bO>dî½¬b",
                                                               false, true, false, -88, null, null,
                                                               "1887d39e-919d-449e-b8a0-c61748490658", 18,
                                                               "2d1c7073-b1f3-4e1b-8244-855031998c9a4fd7971c-79a7-4c5b-b699-fc8c104f139c26c189aa-4119-42cb-9697-b14d5e852233",
                                                               SubtenantUserStatus.getDefault(), null,
                                                               new Date(1561477832922L),
                                                               "A?C'\u0018BJSJFI66ä?—\u0014HæšžO6Kç–§OCPD]\u0004HLUNCFKG@XY!6W6F6\u000f^69DA:á®·66\u0001â‹§å¶ŠD>266\u0019G");
        assertFalse(subtenantuserInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("fc91ece4c663c84ce50ea8058379fe26", null,
                                                             "d40f0768-51d6-4385-a3e7-acd74e09c7f4",
                                                             new Date(1561477837230L), 72, null, "83f79.7cf74@5b9ef.me",
                                                             true, "0355a717-1b0e-4646-857e-9d768994bfd2",
                                                             "fc91ece4c663c84ce50ea8058379fe26", true, false, false, 86,
                                                             null, null, "da9f1fd7-8ba9-48f5-a44a-2f88f4dbf3f1", -3,
                                                             "c024a0b9-7f75-4c7d-8147-2bca5d8488fa",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1561477838559L), "5E7M_7");
            SubtenantUser subtenantuser2 = new SubtenantUser("fc91ece4c663c84ce50ea8058379fe26", null,
                                                             "d40f0768-51d6-4385-a3e7-acd74e09c7f4",
                                                             new Date(1561477837230L), 72, null, "83f79.7cf74@5b9ef.me",
                                                             true, "0355a717-1b0e-4646-857e-9d768994bfd2",
                                                             "fc91ece4c663c84ce50ea8058379fe26", true, false, false, 86,
                                                             null, null, "da9f1fd7-8ba9-48f5-a44a-2f88f4dbf3f1", -3,
                                                             "c024a0b9-7f75-4c7d-8147-2bca5d8488fa",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1561477838559L), "5E7M_7");
            SubtenantUser subtenantuser3 = new SubtenantUser("fc91ece4c663c84ce50ea8058379fe26", null,
                                                             "afcdbecf-78d6-40b5-a2c3-250b389180f8",
                                                             new Date(1561477835032L), -45, null,
                                                             "f7144.c8b89@35e7c.me", true,
                                                             "ee45d5eb-55ff-4f14-a457-2d26ecbc7c58",
                                                             "fc91ece4c663c84ce50ea8058379fe26", true, false, false,
                                                             -101, null, null, "299ae09f-285c-421e-ab70-cb6e03686491",
                                                             38, "4895a22a-f95f-41bb-ae9b-87918e47203c",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1561477837580L), "5E7M_7");
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotNull(subtenantuser3);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertNotSame(subtenantuser3, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser1, subtenantuser2);
            assertEquals(subtenantuser1, subtenantuser1);
            assertFalse(subtenantuser1.equals(null));
            assertNotEquals(subtenantuser3, subtenantuser1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
