// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantUserInvitation.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantUserInvitation {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantUserInvitation subtenantuserinvitation1 = new SubtenantUserInvitation("fc91ece4c663c84ce50ea8058379fe26",
                                                                                           new Date(1561477840134L),
                                                                                           "b6149.45326@5ee8c.me",
                                                                                           new Date(1561477835990L),
                                                                                           "fc91ece4c663c84ce50ea8058379fe26",
                                                                                           null,
                                                                                           new Date(1561477839500L),
                                                                                           "fc91ece4c663c84ce50ea8058379fe26");
            SubtenantUserInvitation subtenantuserinvitation2 = subtenantuserinvitation1.clone();
            assertNotNull(subtenantuserinvitation1);
            assertNotNull(subtenantuserinvitation2);
            assertNotSame(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantUserInvitation subtenantuserinvitation1 = new SubtenantUserInvitation("fc91ece4c663c84ce50ea8058379fe26",
                                                                                           new Date(1561477841461L),
                                                                                           "f3cd8.76da8@3c0fd.fr",
                                                                                           new Date(1561477835955L),
                                                                                           "fc91ece4c663c84ce50ea8058379fe26",
                                                                                           null,
                                                                                           new Date(1561477832660L),
                                                                                           "fc91ece4c663c84ce50ea8058379fe26");
            SubtenantUserInvitation subtenantuserinvitation2 = new SubtenantUserInvitation("fc91ece4c663c84ce50ea8058379fe26",
                                                                                           new Date(1561477841461L),
                                                                                           "f3cd8.76da8@3c0fd.fr",
                                                                                           new Date(1561477835955L),
                                                                                           "fc91ece4c663c84ce50ea8058379fe26",
                                                                                           null,
                                                                                           new Date(1561477832660L),
                                                                                           "fc91ece4c663c84ce50ea8058379fe26");
            assertNotNull(subtenantuserinvitation1);
            assertNotNull(subtenantuserinvitation2);
            assertNotSame(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2.hashCode(), subtenantuserinvitation1.hashCode());
            int hashCode = subtenantuserinvitation1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantuserinvitation1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantUserInvitation subtenantuserinvitation = new SubtenantUserInvitation("fc91ece4c663c84ce50ea8058379fe26",
                                                                                      new Date(1561477832907L),
                                                                                      "a370c.705f1@24240.me",
                                                                                      new Date(1561477840043L),
                                                                                      "fc91ece4c663c84ce50ea8058379fe26",
                                                                                      null, new Date(1561477834459L),
                                                                                      "fc91ece4c663c84ce50ea8058379fe26");
        assertTrue(subtenantuserinvitation.isValid());
        SubtenantUserInvitation subtenantuserinvitationInvalid = new SubtenantUserInvitation(null,
                                                                                             new Date(1561477841236L),
                                                                                             null,
                                                                                             new Date(1561477837586L),
                                                                                             "\u001ed玿Z쒤㸃▦&'d\\\\d=/\u0001b]b冑쟄ddbbb@\u0019dd_:bd\u0014G,dd+\\\\dbbbE`涮b\u0013粔AUbbbK襊\bO>db",
                                                                                             null,
                                                                                             new Date(1561477840036L),
                                                                                             "\u001ed玿Z쒤㸃▦&'d\\\\d=/\u0001b]b冑쟄ddbbb@\u0019dd_:bd\u0014G,dd+\\\\dbbbE`涮b\u0013粔AUbbbK襊\bO>db");
        assertFalse(subtenantuserinvitationInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantUserInvitation subtenantuserinvitation1 = new SubtenantUserInvitation("fc91ece4c663c84ce50ea8058379fe26",
                                                                                           new Date(1561477842378L),
                                                                                           "46ab0.2b424@2085e.me",
                                                                                           new Date(1561477835176L),
                                                                                           "fc91ece4c663c84ce50ea8058379fe26",
                                                                                           null,
                                                                                           new Date(1561477837981L),
                                                                                           "fc91ece4c663c84ce50ea8058379fe26");
            SubtenantUserInvitation subtenantuserinvitation2 = new SubtenantUserInvitation("fc91ece4c663c84ce50ea8058379fe26",
                                                                                           new Date(1561477842378L),
                                                                                           "46ab0.2b424@2085e.me",
                                                                                           new Date(1561477835176L),
                                                                                           "fc91ece4c663c84ce50ea8058379fe26",
                                                                                           null,
                                                                                           new Date(1561477837981L),
                                                                                           "fc91ece4c663c84ce50ea8058379fe26");
            SubtenantUserInvitation subtenantuserinvitation3 = new SubtenantUserInvitation("fc91ece4c663c84ce50ea8058379fe26",
                                                                                           new Date(1561477836024L),
                                                                                           "f5e9e.52118@b5ccb.fr",
                                                                                           new Date(1561477833175L),
                                                                                           "fc91ece4c663c84ce50ea8058379fe26",
                                                                                           null,
                                                                                           new Date(1561477839947L),
                                                                                           "fc91ece4c663c84ce50ea8058379fe26");
            assertNotNull(subtenantuserinvitation1);
            assertNotNull(subtenantuserinvitation2);
            assertNotNull(subtenantuserinvitation3);
            assertNotSame(subtenantuserinvitation2, subtenantuserinvitation1);
            assertNotSame(subtenantuserinvitation3, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation1, subtenantuserinvitation2);
            assertEquals(subtenantuserinvitation1, subtenantuserinvitation1);
            assertFalse(subtenantuserinvitation1.equals(null));
            assertNotEquals(subtenantuserinvitation3, subtenantuserinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
