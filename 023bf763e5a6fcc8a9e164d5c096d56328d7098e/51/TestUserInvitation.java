// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model UserInvitation.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestUserInvitation {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("9e70a034c4e3cc5aa8682c95a95d2309",
                                                                new Date(1563275983980L), "a82a9.ea127@e17c4.fr",
                                                                new Date(1563275990700L),
                                                                "9e70a034c4e3cc5aa8682c95a95d2309", null,
                                                                new Date(1563275993308L),
                                                                "9e70a034c4e3cc5aa8682c95a95d2309");
            UserInvitation userinvitation2 = userinvitation1.clone();
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotSame(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("9e70a034c4e3cc5aa8682c95a95d2309",
                                                                new Date(1563275984723L), "50318.2a59b@23dc0.me",
                                                                new Date(1563275984323L),
                                                                "9e70a034c4e3cc5aa8682c95a95d2309", null,
                                                                new Date(1563275988338L),
                                                                "9e70a034c4e3cc5aa8682c95a95d2309");
            UserInvitation userinvitation2 = new UserInvitation("9e70a034c4e3cc5aa8682c95a95d2309",
                                                                new Date(1563275984723L), "50318.2a59b@23dc0.me",
                                                                new Date(1563275984323L),
                                                                "9e70a034c4e3cc5aa8682c95a95d2309", null,
                                                                new Date(1563275988338L),
                                                                "9e70a034c4e3cc5aa8682c95a95d2309");
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotSame(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation2.hashCode(), userinvitation1.hashCode());
            int hashCode = userinvitation1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, userinvitation1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        UserInvitation userinvitation = new UserInvitation("9e70a034c4e3cc5aa8682c95a95d2309", new Date(1563275993185L),
                                                           "9a949.00eeb@a8da1.me", new Date(1563275991619L),
                                                           "9e70a034c4e3cc5aa8682c95a95d2309", null,
                                                           new Date(1563275986439L),
                                                           "9e70a034c4e3cc5aa8682c95a95d2309");
        assertTrue(userinvitation.isValid());
        UserInvitation userinvitationInvalid = new UserInvitation("Uî‘”`á‘¡bÃ¬Më¬…bbì–´VVâ§’K<Dä“«\u0010b\u0016bbb1b\u0006'11[1è™‘1R!UDb\bbá¥¾11/\u0002\\\\bb\u001d\u00051à©”bPW11bb1bë??C",
                                                                  new Date(1563275986842L), null,
                                                                  new Date(1563275991363L),
                                                                  "Uî‘”`á‘¡bÃ¬Më¬…bbì–´VVâ§’K<Dä“«\u0010b\u0016bbb1b\u0006'11[1è™‘1R!UDb\bbá¥¾11/\u0002\\\\bb\u001d\u00051à©”bPW11bb1bë??C",
                                                                  null, new Date(1563275983465L),
                                                                  "Uî‘”`á‘¡bÃ¬Më¬…bbì–´VVâ§’K<Dä“«\u0010b\u0016bbb1b\u0006'11[1è™‘1R!UDb\bbá¥¾11/\u0002\\\\bb\u001d\u00051à©”bPW11bb1bë??C");
        assertFalse(userinvitationInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("9e70a034c4e3cc5aa8682c95a95d2309",
                                                                new Date(1563275988743L), "28c3e.d5700@a0856.fr",
                                                                new Date(1563275984100L),
                                                                "9e70a034c4e3cc5aa8682c95a95d2309", null,
                                                                new Date(1563275989925L),
                                                                "9e70a034c4e3cc5aa8682c95a95d2309");
            UserInvitation userinvitation2 = new UserInvitation("9e70a034c4e3cc5aa8682c95a95d2309",
                                                                new Date(1563275988743L), "28c3e.d5700@a0856.fr",
                                                                new Date(1563275984100L),
                                                                "9e70a034c4e3cc5aa8682c95a95d2309", null,
                                                                new Date(1563275989925L),
                                                                "9e70a034c4e3cc5aa8682c95a95d2309");
            UserInvitation userinvitation3 = new UserInvitation("9e70a034c4e3cc5aa8682c95a95d2309",
                                                                new Date(1563275989973L), "e96eb.51385@e8ab5.me",
                                                                new Date(1563275986805L),
                                                                "9e70a034c4e3cc5aa8682c95a95d2309", null,
                                                                new Date(1563275987993L),
                                                                "9e70a034c4e3cc5aa8682c95a95d2309");
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotNull(userinvitation3);
            assertNotSame(userinvitation2, userinvitation1);
            assertNotSame(userinvitation3, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation1, userinvitation2);
            assertEquals(userinvitation1, userinvitation1);
            assertFalse(userinvitation1.equals(null));
            assertNotEquals(userinvitation3, userinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
