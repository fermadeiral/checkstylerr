// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.deviceupdate.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model FirmwareImage.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestFirmwareImage {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            FirmwareImage firmwareimage1 = new FirmwareImage(new Date(1563275987087L),
                                                             "a11bceed-0e11-48f1-9dad-f3ab43e8f7d8", -21,
                                                             "d1da981f-6587-429d-bdc8-7d3a9ad4ab54",
                                                             "2c9e844b-27a3-4d53-a903-076bccb25e86",
                                                             "1e6884d9-398e-4b8b-91e2-e7ddf8b63659",
                                                             "6069e84f-26d8-4a13-85ff-d4585760013b",
                                                             new Date(1563275985890L));
            FirmwareImage firmwareimage2 = firmwareimage1.clone();
            assertNotNull(firmwareimage1);
            assertNotNull(firmwareimage2);
            assertNotSame(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage2, firmwareimage1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            FirmwareImage firmwareimage1 = new FirmwareImage(new Date(1563275986944L),
                                                             "7ef35b47-1b75-4346-9139-6da0bf665671", 47,
                                                             "8aa711f6-464d-4497-9f2a-1de21ba6ac77",
                                                             "0d0cecd3-1f4c-4d91-bebf-38c8dd9ec4f1",
                                                             "da74b0b8-da2a-4590-ae7d-c6dc4b5ff491",
                                                             "8d82bbc7-87cd-4e1a-9f93-b20fbff7ff7b",
                                                             new Date(1563275992573L));
            FirmwareImage firmwareimage2 = new FirmwareImage(new Date(1563275986944L),
                                                             "7ef35b47-1b75-4346-9139-6da0bf665671", 47,
                                                             "8aa711f6-464d-4497-9f2a-1de21ba6ac77",
                                                             "0d0cecd3-1f4c-4d91-bebf-38c8dd9ec4f1",
                                                             "da74b0b8-da2a-4590-ae7d-c6dc4b5ff491",
                                                             "8d82bbc7-87cd-4e1a-9f93-b20fbff7ff7b",
                                                             new Date(1563275992573L));
            assertNotNull(firmwareimage1);
            assertNotNull(firmwareimage2);
            assertNotSame(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage2.hashCode(), firmwareimage1.hashCode());
            int hashCode = firmwareimage1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, firmwareimage1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        FirmwareImage firmwareimage = new FirmwareImage(new Date(1563275984645L),
                                                        "8a9ead1c-c2be-40b1-871b-813a52c6abc6", 46,
                                                        "31493413-e9db-4a27-86b4-f3ea97788090",
                                                        "a0c2926e-8b46-4855-88f7-43ccf8699d57",
                                                        "f47225cb-289d-4557-85f8-7571499e3780",
                                                        "4d8ef37d-fbbc-428d-befb-d915e4c4f008",
                                                        new Date(1563275985841L));
        assertTrue(firmwareimage.isValid());
        FirmwareImage firmwareimageInvalid = new FirmwareImage(new Date(1563275986356L),
                                                               "8a284d0b-4558-458b-b24e-d859a879cc47", -22,
                                                               "7705b181-bdce-4d71-9c55-4002090ac002",
                                                               "39bad0b1-b654-422f-bf4f-57924473a7c19c85684a-8176-4cd9-aca0-3687b2ee1cbbb980fb25-c90d-46ef-be61-9977a640fa8eea09c010-36d3-4ebf-9e96-97c1c66d626e9a001033-382b-46be-ac51-5e99fc2ec85a598efbbf-36ff-456e-9d88-3b421bf236be7c16bd35-1053-48b2-a443-622319fa3cf97f967dd8-138b-45d8-94ec-ebaf843dd7d6fe2758a0-8ea7-4b55-9885-14cfbaf7f6d6b0551dea-38f9-4c8b-b6bf-61cd3c931d2484797c30-4211-49a0-9bf7-c2df4f1b4d7bee7fe96a-0c8e-4189-b351-df5708c63fb2e005a92a-36fb-4510-a7aa-ebd2a9c9e47a4f233a2c-49e2-453a-ba73-291d63b4e763c996c962-f7bd-49f1-9943-cc9832856e9caa0b0269-3434-4b4b-9507-ccab8efaa9c32e52269f-c2c9-43d4-b38b-7839cacbe5a9f51efdfc-0185-4bc7-9c6f-2c380b6bb0de5afe0b54-a908-42a0-ba27-4f9635b2d2140255c7a0-d82f-4b69-a8a0-e6783882e9a9632a24a2-6894-445c-925e-8aba758e719807d86149-44b1-4c8b-bfdf-6b6ad2ac7adc413214bc-46d6-4cc3-8e6f-30b61af96a440fc060bc-ebdb-48b3-9ccd-e0303b5c0254d9c617d4-8f0d-4ab2-9ac3-4eb1ac68b5df0701a127-6a22-4e2b-a56b-008eacc9079bd5658f27-bbe3-4950-be2d-5f338f8f16c30a29f677-f430-45f4-a0ef-bd8c3c28ee989871be4b-58ad-4aae-a172-82cad23213e854beaa6d-c9a0-4b40-badb-6376fa8a7812e5f93a37-1a05-4288-b502-4a09461d130ebbe8446d-b419-49bb-bf74-9ab0456929bc0d2d4f59-878a-47a6-8cfa-d435c105e3d6d611c26d-e4d3-45cc-8866-f2a0609cd5eaa55053c7-ccf5-4447-9b81-a24689997d80c725e7ce-e374-4a45-8583-250687bc2555122e4aa8-2373-47a0-964e-708db0ce876e7eba7ae2-5592-47af-bd4f-d4730dfbf7a51f3cbe79-74ca-492d-bbdf-340c96a4dd112834b8e1-a36a-45e4-8a1f-12a4caee1ab7dd9360b5-eaec-4153-bf6b-c0df093020b29ecec4c6-23a5-48e9-90a6-799b8e537d27d73d0af4-2d90-4d98-8470-a69eab27933dd8a1c5e5-e1e0-4344-b50f-4c6ddaa6720d3588fe50-1862-4c91-905a-87f5b357c5eebe7a1a99-f690-49f0-bb27-7199a804639b9cc9fbc8-e577-4390-90ae-524221095647ea750120-f7fb-43e8-96c3-d942dd04e9753bbe946e-268a-44dd-ae95-ab6bde9bcd26475a3929-e0ed-4459-87f6-3df12185fc49b3f14030-2b8e-4b41-851e-d71effb0049dde40d05d-b81e-43cb-a591-ee3b77b22e3c1ced5506-067b-4671-89ca-d65cf9698b0409040839-2ba2-4793-8401-cf302a5283646d86d3ca-d172-42ac-8fc0-8259283a126681a7b0a8-da05-4c06-92bd-a18a858d2f37",
                                                               "75c3d42d-4797-4839-9e3a-2c0fcc3176d3",
                                                               "8a2c0e19-baa3-40b3-b76b-4208189368c499601e3d-b97f-49c0-b9be-f9dea581f6e1264eebe3-e18d-4515-8042-ee6951cf96239b5889e1-8938-44c3-bb67-f9ee26ec9051",
                                                               new Date(1563275984077L));
        assertFalse(firmwareimageInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            FirmwareImage firmwareimage1 = new FirmwareImage(new Date(1563275984608L),
                                                             "a54d5e5b-311f-4b95-a457-fb9ccc46c4a5", 53,
                                                             "80772417-78e5-4e07-b92c-b9db3b4fedd2",
                                                             "28afb60f-5482-4711-962f-f281f65723d7",
                                                             "10ecdd0d-9af1-4f54-b2a4-89cd7fab53ff",
                                                             "63bd4147-d5d7-4d63-96bd-70c8e2f9d0b7",
                                                             new Date(1563275992362L));
            FirmwareImage firmwareimage2 = new FirmwareImage(new Date(1563275984608L),
                                                             "a54d5e5b-311f-4b95-a457-fb9ccc46c4a5", 53,
                                                             "80772417-78e5-4e07-b92c-b9db3b4fedd2",
                                                             "28afb60f-5482-4711-962f-f281f65723d7",
                                                             "10ecdd0d-9af1-4f54-b2a4-89cd7fab53ff",
                                                             "63bd4147-d5d7-4d63-96bd-70c8e2f9d0b7",
                                                             new Date(1563275992362L));
            FirmwareImage firmwareimage3 = new FirmwareImage(new Date(1563275986930L),
                                                             "1c2da33f-3414-456d-b6b6-881f4030f789", -110,
                                                             "7478c0c4-6269-4adb-9d87-bfe2c790e601",
                                                             "c6070575-f9ee-4cff-8cf5-492d5bfc3919",
                                                             "4fb15c82-6f0f-45f6-b2eb-e1a69d7c8d8a",
                                                             "f5699bc4-f1d5-4ad8-aa51-65d6ddbe0b9e",
                                                             new Date(1563275992608L));
            assertNotNull(firmwareimage1);
            assertNotNull(firmwareimage2);
            assertNotNull(firmwareimage3);
            assertNotSame(firmwareimage2, firmwareimage1);
            assertNotSame(firmwareimage3, firmwareimage1);
            assertEquals(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage1, firmwareimage2);
            assertEquals(firmwareimage1, firmwareimage1);
            assertFalse(firmwareimage1.equals(null));
            assertNotEquals(firmwareimage3, firmwareimage1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
