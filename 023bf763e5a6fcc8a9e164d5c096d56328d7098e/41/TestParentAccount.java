// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model ParentAccount.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestParentAccount {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("bf249.e0663@f909d.fr",
                                                             "8111578a-6b2c-4e92-96ed-840774eb9b45",
                                                             "9e70a034c4e3cc5aa8682c95a95d2309");
            ParentAccount parentaccount2 = parentaccount1.clone();
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotSame(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("d9931.73fe2@27542.me",
                                                             "eb8bd750-a3f6-48fb-a401-c16aa4a1b047",
                                                             "9e70a034c4e3cc5aa8682c95a95d2309");
            ParentAccount parentaccount2 = new ParentAccount("d9931.73fe2@27542.me",
                                                             "eb8bd750-a3f6-48fb-a401-c16aa4a1b047",
                                                             "9e70a034c4e3cc5aa8682c95a95d2309");
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotSame(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount2.hashCode(), parentaccount1.hashCode());
            int hashCode = parentaccount1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, parentaccount1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ParentAccount parentaccount = new ParentAccount("7f806.69f64@ee9a3.me", "334068a7-b96b-4271-b546-77db3be3fbe7",
                                                        "9e70a034c4e3cc5aa8682c95a95d2309");
        assertTrue(parentaccount.isValid());
        ParentAccount parentaccountInvalid = new ParentAccount("ë­„çž‹%èº™èŸ¼,çƒˆî¤·>Ì˜è»?î·¨,ë¯­é”¬á•½ïˆ»èŒ†à¬ªê¹¦ã?®\u001b&î®›Õƒï¼’è‰¾ï…”#á¢„é¤¿ï¢‚ì¡½î“¦\u001d4è½’>ïŽ§ë¶«ë‹€éª§#GèŸŒ\u000f(3ë±¶ì—‡ï©ˆé?‡ 7ï‹°è‘ƒ \u001dÎ©6à²•\u0019",
                                                               "cf367c1c-230b-42d7-b6ce-e49f614bf10c09bee824-9fb6-4a40-8dc0-e0fbc3afc037af9bee13-1cae-4051-8549-c95c5c5ddcdc",
                                                               "Uî‘”`á‘¡bÃ¬Më¬…bbì–´VVâ§’K<Dä“«\u0010b\u0016bbb1b\u0006'11[1è™‘1R!UDb\bbá¥¾11/\u0002\\\\bb\u001d\u00051à©”bPW11bb1bë??C");
        assertFalse(parentaccountInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("ea3f6.54353@7a7e8.me",
                                                             "aeaf55b1-38f7-429a-863d-13766ded6daf",
                                                             "9e70a034c4e3cc5aa8682c95a95d2309");
            ParentAccount parentaccount2 = new ParentAccount("ea3f6.54353@7a7e8.me",
                                                             "aeaf55b1-38f7-429a-863d-13766ded6daf",
                                                             "9e70a034c4e3cc5aa8682c95a95d2309");
            ParentAccount parentaccount3 = new ParentAccount("273b5.7ca41@5b7ae.fr",
                                                             "7c4561d0-48ba-4dee-b734-3c6f80c66145",
                                                             "9e70a034c4e3cc5aa8682c95a95d2309");
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotNull(parentaccount3);
            assertNotSame(parentaccount2, parentaccount1);
            assertNotSame(parentaccount3, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount1, parentaccount2);
            assertEquals(parentaccount1, parentaccount1);
            assertFalse(parentaccount1.equals(null));
            assertNotEquals(parentaccount3, parentaccount1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
