// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model LoginProfile.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestLoginProfile {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            LoginProfile loginprofile1 = new LoginProfile("eefadd3e-8a80-47c2-8bac-02467815e32a",
                                                          "9226694f-be58-4e1b-93a8-7f8c967e566f");
            LoginProfile loginprofile2 = loginprofile1.clone();
            assertNotNull(loginprofile1);
            assertNotNull(loginprofile2);
            assertNotSame(loginprofile2, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            LoginProfile loginprofile1 = new LoginProfile("df6ffb5c-c9e5-4c9d-b178-a1b0373335a3",
                                                          "17b921b4-7277-4b7a-9a7c-e8ee701350ed");
            LoginProfile loginprofile2 = new LoginProfile("df6ffb5c-c9e5-4c9d-b178-a1b0373335a3",
                                                          "17b921b4-7277-4b7a-9a7c-e8ee701350ed");
            assertNotNull(loginprofile1);
            assertNotNull(loginprofile2);
            assertNotSame(loginprofile2, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
            assertEquals(loginprofile2.hashCode(), loginprofile1.hashCode());
            int hashCode = loginprofile1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, loginprofile1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        LoginProfile loginprofile = new LoginProfile("60724121-aee2-430b-be63-74c98e4a061b",
                                                     "921be3ad-91fc-4a9b-8dc5-f426255f65e4");
        assertTrue(loginprofile.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            LoginProfile loginprofile1 = new LoginProfile("dcc67465-f0d3-41e9-ac51-bc2beeccfff8",
                                                          "6662c787-7f29-4c22-9f33-028258137485");
            LoginProfile loginprofile2 = new LoginProfile("dcc67465-f0d3-41e9-ac51-bc2beeccfff8",
                                                          "6662c787-7f29-4c22-9f33-028258137485");
            LoginProfile loginprofile3 = new LoginProfile("8264e8f5-fc5c-44cd-94a7-a162de44cf9a",
                                                          "c3500e68-c242-4577-af33-a051da4c979a");
            assertNotNull(loginprofile1);
            assertNotNull(loginprofile2);
            assertNotNull(loginprofile3);
            assertNotSame(loginprofile2, loginprofile1);
            assertNotSame(loginprofile3, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
            assertEquals(loginprofile1, loginprofile2);
            assertEquals(loginprofile1, loginprofile1);
            assertFalse(loginprofile1.equals(null));
            assertNotEquals(loginprofile3, loginprofile1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
