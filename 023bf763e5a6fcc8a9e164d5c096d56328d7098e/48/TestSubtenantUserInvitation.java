// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantUserInvitation.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantUserInvitation {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantUserInvitation subtenantuserinvitation1 = new SubtenantUserInvitation("9e70a034c4e3cc5aa8682c95a95d2309",
                                                                                           new Date(1563275990432L),
                                                                                           "09c37.d1185@ec347.me",
                                                                                           new Date(1563275987655L),
                                                                                           "9e70a034c4e3cc5aa8682c95a95d2309",
                                                                                           null,
                                                                                           new Date(1563275985321L),
                                                                                           "9e70a034c4e3cc5aa8682c95a95d2309");
            SubtenantUserInvitation subtenantuserinvitation2 = subtenantuserinvitation1.clone();
            assertNotNull(subtenantuserinvitation1);
            assertNotNull(subtenantuserinvitation2);
            assertNotSame(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantUserInvitation subtenantuserinvitation1 = new SubtenantUserInvitation("9e70a034c4e3cc5aa8682c95a95d2309",
                                                                                           new Date(1563275989096L),
                                                                                           "5a648.d48b2@c71d7.me",
                                                                                           new Date(1563275984359L),
                                                                                           "9e70a034c4e3cc5aa8682c95a95d2309",
                                                                                           null,
                                                                                           new Date(1563275986095L),
                                                                                           "9e70a034c4e3cc5aa8682c95a95d2309");
            SubtenantUserInvitation subtenantuserinvitation2 = new SubtenantUserInvitation("9e70a034c4e3cc5aa8682c95a95d2309",
                                                                                           new Date(1563275989096L),
                                                                                           "5a648.d48b2@c71d7.me",
                                                                                           new Date(1563275984359L),
                                                                                           "9e70a034c4e3cc5aa8682c95a95d2309",
                                                                                           null,
                                                                                           new Date(1563275986095L),
                                                                                           "9e70a034c4e3cc5aa8682c95a95d2309");
            assertNotNull(subtenantuserinvitation1);
            assertNotNull(subtenantuserinvitation2);
            assertNotSame(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2.hashCode(), subtenantuserinvitation1.hashCode());
            int hashCode = subtenantuserinvitation1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantuserinvitation1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantUserInvitation subtenantuserinvitation = new SubtenantUserInvitation("9e70a034c4e3cc5aa8682c95a95d2309",
                                                                                      new Date(1563275985338L),
                                                                                      "8f094.4d882@ee664.me",
                                                                                      new Date(1563275986136L),
                                                                                      "9e70a034c4e3cc5aa8682c95a95d2309",
                                                                                      null, new Date(1563275987869L),
                                                                                      "9e70a034c4e3cc5aa8682c95a95d2309");
        assertTrue(subtenantuserinvitation.isValid());
        SubtenantUserInvitation subtenantuserinvitationInvalid = new SubtenantUserInvitation(null,
                                                                                             new Date(1563275992382L),
                                                                                             null,
                                                                                             new Date(1563275990260L),
                                                                                             "Uî‘”`á‘¡bÃ¬Më¬…bbì–´VVâ§’K<Dä“«\u0010b\u0016bbb1b\u0006'11[1è™‘1R!UDb\bbá¥¾11/\u0002\\\\bb\u001d\u00051à©”bPW11bb1bë??C",
                                                                                             null,
                                                                                             new Date(1563275993021L),
                                                                                             "Uî‘”`á‘¡bÃ¬Më¬…bbì–´VVâ§’K<Dä“«\u0010b\u0016bbb1b\u0006'11[1è™‘1R!UDb\bbá¥¾11/\u0002\\\\bb\u001d\u00051à©”bPW11bb1bë??C");
        assertFalse(subtenantuserinvitationInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantUserInvitation subtenantuserinvitation1 = new SubtenantUserInvitation("9e70a034c4e3cc5aa8682c95a95d2309",
                                                                                           new Date(1563275989830L),
                                                                                           "91b1d.aab62@43827.fr",
                                                                                           new Date(1563275983584L),
                                                                                           "9e70a034c4e3cc5aa8682c95a95d2309",
                                                                                           null,
                                                                                           new Date(1563275990593L),
                                                                                           "9e70a034c4e3cc5aa8682c95a95d2309");
            SubtenantUserInvitation subtenantuserinvitation2 = new SubtenantUserInvitation("9e70a034c4e3cc5aa8682c95a95d2309",
                                                                                           new Date(1563275989830L),
                                                                                           "91b1d.aab62@43827.fr",
                                                                                           new Date(1563275983584L),
                                                                                           "9e70a034c4e3cc5aa8682c95a95d2309",
                                                                                           null,
                                                                                           new Date(1563275990593L),
                                                                                           "9e70a034c4e3cc5aa8682c95a95d2309");
            SubtenantUserInvitation subtenantuserinvitation3 = new SubtenantUserInvitation("9e70a034c4e3cc5aa8682c95a95d2309",
                                                                                           new Date(1563275984498L),
                                                                                           "32266.a3bd2@cdf8a.me",
                                                                                           new Date(1563275988151L),
                                                                                           "9e70a034c4e3cc5aa8682c95a95d2309",
                                                                                           null,
                                                                                           new Date(1563275991922L),
                                                                                           "9e70a034c4e3cc5aa8682c95a95d2309");
            assertNotNull(subtenantuserinvitation1);
            assertNotNull(subtenantuserinvitation2);
            assertNotNull(subtenantuserinvitation3);
            assertNotSame(subtenantuserinvitation2, subtenantuserinvitation1);
            assertNotSame(subtenantuserinvitation3, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation1, subtenantuserinvitation2);
            assertEquals(subtenantuserinvitation1, subtenantuserinvitation1);
            assertFalse(subtenantuserinvitation1.equals(null));
            assertNotEquals(subtenantuserinvitation3, subtenantuserinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
