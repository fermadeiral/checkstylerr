// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model ActiveSession.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestActiveSession {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ActiveSession activesession1 = new ActiveSession("9e70a034c4e3cc5aa8682c95a95d2309",
                                                             "f91bfd94-e876-47d6-90fe-c7a90809280b",
                                                             new Date(1563275991547L),
                                                             "068028da-3043-4e07-86ef-e13dac00cb13",
                                                             "497678d4-24d4-42d4-a068-233fed5406b5");
            ActiveSession activesession2 = activesession1.clone();
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotSame(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ActiveSession activesession1 = new ActiveSession("9e70a034c4e3cc5aa8682c95a95d2309",
                                                             "70829621-1d50-40dc-bfac-de83fd965062",
                                                             new Date(1563275984092L),
                                                             "033beff8-3023-40bf-a6f9-195701b0e6e4",
                                                             "d8dc4db7-0bb3-4d45-9f4d-8c9d70e2cd6c");
            ActiveSession activesession2 = new ActiveSession("9e70a034c4e3cc5aa8682c95a95d2309",
                                                             "70829621-1d50-40dc-bfac-de83fd965062",
                                                             new Date(1563275984092L),
                                                             "033beff8-3023-40bf-a6f9-195701b0e6e4",
                                                             "d8dc4db7-0bb3-4d45-9f4d-8c9d70e2cd6c");
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotSame(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession2.hashCode(), activesession1.hashCode());
            int hashCode = activesession1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, activesession1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ActiveSession activesession = new ActiveSession("9e70a034c4e3cc5aa8682c95a95d2309",
                                                        "edfa6417-0b1e-440f-aa7b-c17fa4233df2",
                                                        new Date(1563275992460L),
                                                        "43c85295-b6e8-4bb0-8616-6e24df5f5815",
                                                        "cb52a686-022e-4b55-8dee-012f98adcfbf");
        assertTrue(activesession.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ActiveSession activesession1 = new ActiveSession("9e70a034c4e3cc5aa8682c95a95d2309",
                                                             "8caa1f36-995c-481e-9b92-cdcd3d16319f",
                                                             new Date(1563275988576L),
                                                             "26e7fc53-01c6-46df-acdd-4a3199696a25",
                                                             "cc72d2c3-1b72-458f-8080-ffee40fe360d");
            ActiveSession activesession2 = new ActiveSession("9e70a034c4e3cc5aa8682c95a95d2309",
                                                             "8caa1f36-995c-481e-9b92-cdcd3d16319f",
                                                             new Date(1563275988576L),
                                                             "26e7fc53-01c6-46df-acdd-4a3199696a25",
                                                             "cc72d2c3-1b72-458f-8080-ffee40fe360d");
            ActiveSession activesession3 = new ActiveSession("9e70a034c4e3cc5aa8682c95a95d2309",
                                                             "21205dd0-e5d4-4ea1-ad1e-d81e7dc7846e",
                                                             new Date(1563275985729L),
                                                             "73c29850-f44d-4e5e-b0a9-d4802915a512",
                                                             "3bfc7466-acaa-45b0-92b7-9b44d92779fc");
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotNull(activesession3);
            assertNotSame(activesession2, activesession1);
            assertNotSame(activesession3, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession1, activesession2);
            assertEquals(activesession1, activesession1);
            assertFalse(activesession1.equals(null));
            assertNotEquals(activesession3, activesession1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
