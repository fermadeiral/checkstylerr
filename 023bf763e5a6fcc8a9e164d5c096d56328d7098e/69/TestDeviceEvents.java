// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEvents.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEvents {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1563275991094L), null,
                                                          new Date(1563275992222L),
                                                          "4f25f3a0-0331-48db-b119-b7cd60b80a89",
                                                          "3667aaf2-f96f-41b0-8728-8b57a8729971",
                                                          "2b813c50-1c75-4243-873f-fe3c9643cc25",
                                                          "75c97173-a2e8-4f12-837b-651021d09133",
                                                          "a75208f3-ea26-4dc4-bdbb-ec6ea9770a80",
                                                          "f3869ae1-7952-4d49-a0b0-897f753d5ddf", true);
            DeviceEvents deviceevents2 = deviceevents1.clone();
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1563275993088L), null,
                                                          new Date(1563275986818L),
                                                          "4f83e17e-556c-46b0-97b4-c13a04e21bda",
                                                          "ea94efd8-20d2-43ef-b73a-39e06158f08d",
                                                          "d1c80d06-6fdf-4993-a3d8-f0636b90ec6a",
                                                          "ebc696fe-e859-48c6-bd1d-91741c54e6d7",
                                                          "fd8e9a0e-61a0-4a50-b85c-e46a91e35e72",
                                                          "25977968-d8e4-433c-8905-b6493db01ab3", false);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1563275993088L), null,
                                                          new Date(1563275986818L),
                                                          "4f83e17e-556c-46b0-97b4-c13a04e21bda",
                                                          "ea94efd8-20d2-43ef-b73a-39e06158f08d",
                                                          "d1c80d06-6fdf-4993-a3d8-f0636b90ec6a",
                                                          "ebc696fe-e859-48c6-bd1d-91741c54e6d7",
                                                          "fd8e9a0e-61a0-4a50-b85c-e46a91e35e72",
                                                          "25977968-d8e4-433c-8905-b6493db01ab3", false);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2.hashCode(), deviceevents1.hashCode());
            int hashCode = deviceevents1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceevents1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEvents deviceevents = new DeviceEvents(null, new Date(1563275985790L), null, new Date(1563275990587L),
                                                     "151e00d3-8e25-4af5-b083-911d02bcafc2",
                                                     "fb50f427-99d6-4d95-b40a-7c6cabfe6937",
                                                     "4de4bbeb-f0f2-439f-b5af-828789c163ff",
                                                     "afb8b535-83be-4327-881a-93fd5ccb308b",
                                                     "71730593-c208-4a60-aeaa-c0d80ea7e355",
                                                     "73394691-0584-41e0-a31f-3c8f8b285b47", true);
        assertTrue(deviceevents.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1563275992162L), null,
                                                          new Date(1563275985874L),
                                                          "9df4af49-548e-4f7d-9e9b-c5a91577ef0d",
                                                          "0624669b-a310-4789-87bd-015fab869847",
                                                          "004b2c89-8d0a-4c4d-b55f-0e3e9c372b94",
                                                          "705f143a-4765-4d30-b8af-746ae170dc2e",
                                                          "562ac92e-3803-4b96-81c5-84e4e1c5e83e",
                                                          "34c9c536-77b1-4413-b367-d5eecec82802", true);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1563275992162L), null,
                                                          new Date(1563275985874L),
                                                          "9df4af49-548e-4f7d-9e9b-c5a91577ef0d",
                                                          "0624669b-a310-4789-87bd-015fab869847",
                                                          "004b2c89-8d0a-4c4d-b55f-0e3e9c372b94",
                                                          "705f143a-4765-4d30-b8af-746ae170dc2e",
                                                          "562ac92e-3803-4b96-81c5-84e4e1c5e83e",
                                                          "34c9c536-77b1-4413-b367-d5eecec82802", true);
            DeviceEvents deviceevents3 = new DeviceEvents(null, new Date(1563275990796L), null,
                                                          new Date(1563275985014L),
                                                          "15c48c4b-7673-4d53-8316-109503eb0d92",
                                                          "b5dbf3f2-3d10-44d1-adac-bb6cdfb5c06f",
                                                          "2d5c6a8d-da3c-4ed6-b47b-2e0fc4e3c2b9",
                                                          "fd928d09-25c7-47b1-8087-fd884d372f6e",
                                                          "8a797a0f-f435-4ed9-8683-4359e077f257",
                                                          "d55a77e0-17e5-4cbf-8b72-cad980d0599f", true);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotNull(deviceevents3);
            assertNotSame(deviceevents2, deviceevents1);
            assertNotSame(deviceevents3, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents1, deviceevents2);
            assertEquals(deviceevents1, deviceevents1);
            assertFalse(deviceevents1.equals(null));
            assertNotEquals(deviceevents3, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
