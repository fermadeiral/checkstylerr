// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.security.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeveloperCertificate.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeveloperCertificate {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("ba405530-478d-4da2-9a33-fd94ed92e6ba",
                                                                                  "42d0e4e1-8a2d-41d5-9938-0209e9899f94",
                                                                                  new Date(1563275984032L),
                                                                                  "78130c05-550c-46b5-bb10-e88f7224ccac",
                                                                                  "5fdcfa2f-1573-43d9-98e1-901d5c0ecee2",
                                                                                  "938d8e45-8770-41d7-945f-32c5c6607e97",
                                                                                  "be596f9a-9d3e-4be4-a789-f5bd7b865a1d",
                                                                                  "c69f688b-8134-4a70-8f2c-5952eaf0a375");
            DeveloperCertificate developercertificate2 = developercertificate1.clone();
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("e9740974-b497-4279-b586-cea42577950c",
                                                                                  "04e3eee4-87fe-4256-9db3-e0a1edaecda2",
                                                                                  new Date(1563275985554L),
                                                                                  "ee805b2e-c21f-49d5-86cd-538e8c41dde9",
                                                                                  "971dffb8-1977-47ec-91c7-54258e304bae",
                                                                                  "3cb2508b-45d5-4321-955a-bf1c73d2bb50",
                                                                                  "581154fe-2521-4b9f-9ef9-dd53bb17f6bc",
                                                                                  "5ef717e5-7490-4937-8fbf-6d2e0b622f7b");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("e9740974-b497-4279-b586-cea42577950c",
                                                                                  "04e3eee4-87fe-4256-9db3-e0a1edaecda2",
                                                                                  new Date(1563275985554L),
                                                                                  "ee805b2e-c21f-49d5-86cd-538e8c41dde9",
                                                                                  "971dffb8-1977-47ec-91c7-54258e304bae",
                                                                                  "3cb2508b-45d5-4321-955a-bf1c73d2bb50",
                                                                                  "581154fe-2521-4b9f-9ef9-dd53bb17f6bc",
                                                                                  "5ef717e5-7490-4937-8fbf-6d2e0b622f7b");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2.hashCode(), developercertificate1.hashCode());
            int hashCode = developercertificate1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, developercertificate1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeveloperCertificate developercertificate = new DeveloperCertificate("c5f225b6-cc7e-451b-ac9d-88f1be2c624f",
                                                                             "180c2f03-b426-4bd7-a029-60527302bb07",
                                                                             new Date(1563275989095L),
                                                                             "3aa31a5e-39ad-4bd5-b348-f967ae3f3df4",
                                                                             "bbe06fc2-dea3-4907-afda-646ca06bfa65",
                                                                             "73ce9a6e-14f9-4167-a051-9a85100e5d28",
                                                                             "87a9285d-fe15-47a5-a95a-0d3fceabe581",
                                                                             "cdf7268a-6d41-40a9-9c42-a4250258878e");
        assertTrue(developercertificate.isValid());
        DeveloperCertificate developercertificateInvalid = new DeveloperCertificate("1934ac15-3795-4926-90c1-f133cda2f3a1",
                                                                                    "9b2017d5-21bc-41e5-a41d-54351b7a026e",
                                                                                    new Date(1563275983776L),
                                                                                    "552ebbae-a2fb-4a16-9a1d-91a3d718c914",
                                                                                    "1150bc63-ef61-4039-8abf-b8a457ba77cd",
                                                                                    "df9bb422-4e02-4dbf-b05c-53efa88132f4",
                                                                                    null,
                                                                                    "0699d3e3-ae02-4811-8d5c-587af61ad45f");
        assertFalse(developercertificateInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("dd6d4584-4df4-46bd-8f1f-ecb25487031d",
                                                                                  "dda308cc-abbe-4b8e-98a9-b57285714f79",
                                                                                  new Date(1563275985751L),
                                                                                  "2c0d5c58-d531-4753-92ca-c1b78d435fd1",
                                                                                  "dbab8e3c-2f43-4a38-b5d1-114f78c2a1ab",
                                                                                  "d8a763b9-b129-426a-b7e3-7970246343c3",
                                                                                  "8c99631c-3e1a-4601-b08a-65055dc9a5b1",
                                                                                  "e9dbfd37-425b-4c39-aa52-4b0b5f880e82");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("dd6d4584-4df4-46bd-8f1f-ecb25487031d",
                                                                                  "dda308cc-abbe-4b8e-98a9-b57285714f79",
                                                                                  new Date(1563275985751L),
                                                                                  "2c0d5c58-d531-4753-92ca-c1b78d435fd1",
                                                                                  "dbab8e3c-2f43-4a38-b5d1-114f78c2a1ab",
                                                                                  "d8a763b9-b129-426a-b7e3-7970246343c3",
                                                                                  "8c99631c-3e1a-4601-b08a-65055dc9a5b1",
                                                                                  "e9dbfd37-425b-4c39-aa52-4b0b5f880e82");
            DeveloperCertificate developercertificate3 = new DeveloperCertificate("b6e0818c-3aaa-4e67-9a65-96a184503fde",
                                                                                  "659ddf05-9641-4356-b1b1-4f0641e606ac",
                                                                                  new Date(1563275987693L),
                                                                                  "a9d9f4e1-6806-4ae0-b9f6-6bf0f8eaae29",
                                                                                  "6dd01339-5ab6-46e8-84e4-e7fd0048ec8b",
                                                                                  "440c07dd-1ee0-4fa3-9db0-7021a8e7f94d",
                                                                                  "793ea12c-e548-47c7-80bc-718dc10cd091",
                                                                                  "24eb1211-6bbd-40f9-91fd-617987436262");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotNull(developercertificate3);
            assertNotSame(developercertificate2, developercertificate1);
            assertNotSame(developercertificate3, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate1, developercertificate2);
            assertEquals(developercertificate1, developercertificate1);
            assertFalse(developercertificate1.equals(null));
            assertNotEquals(developercertificate3, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
