// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model ApiKey.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestApiKey {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ApiKey apikey1 = new ApiKey("9e70a034c4e3cc5aa8682c95a95d2309", new Date(1563275991919L), -77,
                                        "9e70a034c4e3cc5aa8682c95a95d2309", "d3d689b1-e30b-431b-bb96-193b01cd0472",
                                        -114, "349d9087-b628-44fe-8493-de61b914ceb2",
                                        "9e70a034c4e3cc5aa8682c95a95d2309", ApiKeyStatus.getDefault(),
                                        new Date(1563275993238L));
            ApiKey apikey2 = apikey1.clone();
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotSame(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ApiKey apikey1 = new ApiKey("9e70a034c4e3cc5aa8682c95a95d2309", new Date(1563275984835L), -7,
                                        "9e70a034c4e3cc5aa8682c95a95d2309", "f9267c05-d4d9-4ac4-85a2-d15397e3184e",
                                        -121, "c8c0e847-ce2a-4a2b-91ce-497987935463",
                                        "9e70a034c4e3cc5aa8682c95a95d2309", ApiKeyStatus.getDefault(),
                                        new Date(1563275990670L));
            ApiKey apikey2 = new ApiKey("9e70a034c4e3cc5aa8682c95a95d2309", new Date(1563275984835L), -7,
                                        "9e70a034c4e3cc5aa8682c95a95d2309", "f9267c05-d4d9-4ac4-85a2-d15397e3184e",
                                        -121, "c8c0e847-ce2a-4a2b-91ce-497987935463",
                                        "9e70a034c4e3cc5aa8682c95a95d2309", ApiKeyStatus.getDefault(),
                                        new Date(1563275990670L));
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotSame(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey2.hashCode(), apikey1.hashCode());
            int hashCode = apikey1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, apikey1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ApiKey apikey = new ApiKey("9e70a034c4e3cc5aa8682c95a95d2309", new Date(1563275989494L), -118,
                                   "9e70a034c4e3cc5aa8682c95a95d2309", "bb7d3f75-5c2a-44da-a8ef-bc2e491b7d57", -41,
                                   "cdc61405-6e12-42c3-bd33-c786ceb1b15c", "9e70a034c4e3cc5aa8682c95a95d2309",
                                   ApiKeyStatus.getDefault(), new Date(1563275991283L));
        assertTrue(apikey.isValid());
        ApiKey apikeyInvalid = new ApiKey("Uî‘”`á‘¡bÃ¬Më¬…bbì–´VVâ§’K<Dä“«\u0010b\u0016bbb1b\u0006'11[1è™‘1R!UDb\bbá¥¾11/\u0002\\\\bb\u001d\u00051à©”bPW11bb1bë??C",
                                          new Date(1563275983805L), 36,
                                          "Uî‘”`á‘¡bÃ¬Më¬…bbì–´VVâ§’K<Dä“«\u0010b\u0016bbb1b\u0006'11[1è™‘1R!UDb\bbá¥¾11/\u0002\\\\bb\u001d\u00051à©”bPW11bb1bë??C",
                                          "526d7fe5-d737-4a54-9388-f1756a5ab9a7", -6, null,
                                          "Uî‘”`á‘¡bÃ¬Më¬…bbì–´VVâ§’K<Dä“«\u0010b\u0016bbb1b\u0006'11[1è™‘1R!UDb\bbá¥¾11/\u0002\\\\bb\u001d\u00051à©”bPW11bb1bë??C",
                                          ApiKeyStatus.getDefault(), new Date(1563275988794L));
        assertFalse(apikeyInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ApiKey apikey1 = new ApiKey("9e70a034c4e3cc5aa8682c95a95d2309", new Date(1563275985956L), 77,
                                        "9e70a034c4e3cc5aa8682c95a95d2309", "0bb88a32-bc04-4148-b49a-d8957d006c35", 99,
                                        "e988265b-6818-446e-b8b2-971ee7e13f43", "9e70a034c4e3cc5aa8682c95a95d2309",
                                        ApiKeyStatus.getDefault(), new Date(1563275990584L));
            ApiKey apikey2 = new ApiKey("9e70a034c4e3cc5aa8682c95a95d2309", new Date(1563275985956L), 77,
                                        "9e70a034c4e3cc5aa8682c95a95d2309", "0bb88a32-bc04-4148-b49a-d8957d006c35", 99,
                                        "e988265b-6818-446e-b8b2-971ee7e13f43", "9e70a034c4e3cc5aa8682c95a95d2309",
                                        ApiKeyStatus.getDefault(), new Date(1563275990584L));
            ApiKey apikey3 = new ApiKey("9e70a034c4e3cc5aa8682c95a95d2309", new Date(1563275990304L), 77,
                                        "9e70a034c4e3cc5aa8682c95a95d2309", "63722dcc-d8a4-4374-9865-8b8832e8bffd", -35,
                                        "d587cf01-8a97-4274-b2eb-227b12034bc9", "9e70a034c4e3cc5aa8682c95a95d2309",
                                        ApiKeyStatus.getDefault(), new Date(1563275990255L));
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotNull(apikey3);
            assertNotSame(apikey2, apikey1);
            assertNotSame(apikey3, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey1, apikey2);
            assertEquals(apikey1, apikey1);
            assertFalse(apikey1.equals(null));
            assertNotEquals(apikey3, apikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
