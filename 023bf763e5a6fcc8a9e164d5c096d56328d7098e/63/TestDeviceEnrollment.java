// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEnrollment.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEnrollment {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEnrollment deviceenrollment1 = new DeviceEnrollment("53ec7f71-7e7d-4f45-a0be-06e97e58beaf",
                                                                      new Date(1563275990014L),
                                                                      new Date(1563275993343L),
                                                                      "6HWEMQ4Y7ZwiJoMeTA9Lg7gmi006C95U",
                                                                      "A-OLC4lNo9w8MT3b5GJqTc1rCTwxn21oWfJOZtyv9zVVWEKHV7TXU8VE9R0fC1f:3GrWNo8jJH84DtIQlwr:RCTlW3z9zLLNg",
                                                                      new Date(1563275992053L),
                                                                      "6HWEMQ4Y7ZwiJoMeTA9Lg7gmi006C95U");
            DeviceEnrollment deviceenrollment2 = deviceenrollment1.clone();
            assertNotNull(deviceenrollment1);
            assertNotNull(deviceenrollment2);
            assertNotSame(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEnrollment deviceenrollment1 = new DeviceEnrollment("1ac297be-bd57-4119-be02-51a919d8867a",
                                                                      new Date(1563275988457L),
                                                                      new Date(1563275993289L),
                                                                      "6HWEMQ4Y7ZwiJoMeTA9Lg7gmi006C95U",
                                                                      "A-OLC4lNo9w8MT3b5GJqTc1rCTwxn21oWfJOZtyv9zVVWEKHV7TXU8VE9R0fC1f:3GrWNo8jJH84DtIQlwr:RCTlW3z9zLLNg",
                                                                      new Date(1563275989481L),
                                                                      "6HWEMQ4Y7ZwiJoMeTA9Lg7gmi006C95U");
            DeviceEnrollment deviceenrollment2 = new DeviceEnrollment("1ac297be-bd57-4119-be02-51a919d8867a",
                                                                      new Date(1563275988457L),
                                                                      new Date(1563275993289L),
                                                                      "6HWEMQ4Y7ZwiJoMeTA9Lg7gmi006C95U",
                                                                      "A-OLC4lNo9w8MT3b5GJqTc1rCTwxn21oWfJOZtyv9zVVWEKHV7TXU8VE9R0fC1f:3GrWNo8jJH84DtIQlwr:RCTlW3z9zLLNg",
                                                                      new Date(1563275989481L),
                                                                      "6HWEMQ4Y7ZwiJoMeTA9Lg7gmi006C95U");
            assertNotNull(deviceenrollment1);
            assertNotNull(deviceenrollment2);
            assertNotSame(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2.hashCode(), deviceenrollment1.hashCode());
            int hashCode = deviceenrollment1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceenrollment1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEnrollment deviceenrollment = new DeviceEnrollment("e65aa2c5-ba97-4b3e-9e12-5f4140822d91",
                                                                 new Date(1563275984994L), new Date(1563275990305L),
                                                                 "6HWEMQ4Y7ZwiJoMeTA9Lg7gmi006C95U",
                                                                 "A-OLC4lNo9w8MT3b5GJqTc1rCTwxn21oWfJOZtyv9zVVWEKHV7TXU8VE9R0fC1f:3GrWNo8jJH84DtIQlwr:RCTlW3z9zLLNg",
                                                                 new Date(1563275991254L),
                                                                 "6HWEMQ4Y7ZwiJoMeTA9Lg7gmi006C95U");
        assertTrue(deviceenrollment.isValid());
        DeviceEnrollment deviceenrollmentInvalid = new DeviceEnrollment("a495019b-6126-4fdc-99f2-e3e285fc90da",
                                                                        new Date(1563275985811L),
                                                                        new Date(1563275983999L),
                                                                        "O[h8XI8vF\u001djGXXK>F3f8cs2S2\\\\hkcGsIhä£¸íŒ?VIVphDPé††DPP\\\\8XVrN8BXuXGIbBn2D",
                                                                        null, new Date(1563275990445L),
                                                                        "O[h8XI8vF\u001djGXXK>F3f8cs2S2\\\\hkcGsIhä£¸íŒ?VIVphDPé††DPP\\\\8XVrN8BXuXGIbBn2D");
        assertFalse(deviceenrollmentInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEnrollment deviceenrollment1 = new DeviceEnrollment("ebcffb08-68c1-4161-97e9-632f866f3268",
                                                                      new Date(1563275984734L),
                                                                      new Date(1563275992863L),
                                                                      "6HWEMQ4Y7ZwiJoMeTA9Lg7gmi006C95U",
                                                                      "A-OLC4lNo9w8MT3b5GJqTc1rCTwxn21oWfJOZtyv9zVVWEKHV7TXU8VE9R0fC1f:3GrWNo8jJH84DtIQlwr:RCTlW3z9zLLNg",
                                                                      new Date(1563275993076L),
                                                                      "6HWEMQ4Y7ZwiJoMeTA9Lg7gmi006C95U");
            DeviceEnrollment deviceenrollment2 = new DeviceEnrollment("ebcffb08-68c1-4161-97e9-632f866f3268",
                                                                      new Date(1563275984734L),
                                                                      new Date(1563275992863L),
                                                                      "6HWEMQ4Y7ZwiJoMeTA9Lg7gmi006C95U",
                                                                      "A-OLC4lNo9w8MT3b5GJqTc1rCTwxn21oWfJOZtyv9zVVWEKHV7TXU8VE9R0fC1f:3GrWNo8jJH84DtIQlwr:RCTlW3z9zLLNg",
                                                                      new Date(1563275993076L),
                                                                      "6HWEMQ4Y7ZwiJoMeTA9Lg7gmi006C95U");
            DeviceEnrollment deviceenrollment3 = new DeviceEnrollment("b87912f2-4709-40e9-8d9b-2fa6bc471b0d",
                                                                      new Date(1563275989103L),
                                                                      new Date(1563275991330L),
                                                                      "6HWEMQ4Y7ZwiJoMeTA9Lg7gmi006C95U",
                                                                      "A-OLC4lNo9w8MT3b5GJqTc1rCTwxn21oWfJOZtyv9zVVWEKHV7TXU8VE9R0fC1f:3GrWNo8jJH84DtIQlwr:RCTlW3z9zLLNg",
                                                                      new Date(1563275985205L),
                                                                      "6HWEMQ4Y7ZwiJoMeTA9Lg7gmi006C95U");
            assertNotNull(deviceenrollment1);
            assertNotNull(deviceenrollment2);
            assertNotNull(deviceenrollment3);
            assertNotSame(deviceenrollment2, deviceenrollment1);
            assertNotSame(deviceenrollment3, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment1, deviceenrollment2);
            assertEquals(deviceenrollment1, deviceenrollment1);
            assertFalse(deviceenrollment1.equals(null));
            assertNotEquals(deviceenrollment3, deviceenrollment1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
