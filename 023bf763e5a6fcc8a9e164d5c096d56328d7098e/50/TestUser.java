// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model User.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestUser {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            User user1 = new User("9e70a034c4e3cc5aa8682c95a95d2309", null, "833a49da-6304-4d9b-b5bc-feec2998737c",
                                  new Date(1563275992500L), 37, null, "e2009.3572f@9dac2.fr", false,
                                  "7e754e38-4485-4d8c-ac24-f5fddb7569d2", "9e70a034c4e3cc5aa8682c95a95d2309", true,
                                  false, false, -36, null, null, "f3b42c2e-40bf-4711-bf6c-018af5cb6f5c", -126,
                                  "fa0d8742-7098-4ffb-8d39-c5cc6bc90ea2", UserStatus.getDefault(), null,
                                  new Date(1563275992359L), "mKQ=i");
            User user2 = user1.clone();
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotSame(user2, user1);
            assertEquals(user2, user1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            User user1 = new User("9e70a034c4e3cc5aa8682c95a95d2309", null, "4b58e637-78f2-43df-af49-4e56b4146290",
                                  new Date(1563275991207L), 74, null, "7ee59.6a564@489a9.fr", true,
                                  "9fc48e84-ef38-44a4-9158-8284afa025c1", "9e70a034c4e3cc5aa8682c95a95d2309", false,
                                  true, false, -94, null, null, "80986d75-604b-4c40-86b0-c16c66c569a2", 104,
                                  "d3df24f2-6f30-4e34-ae59-96b9ebf9d56c", UserStatus.getDefault(), null,
                                  new Date(1563275989278L), "mKQ=i");
            User user2 = new User("9e70a034c4e3cc5aa8682c95a95d2309", null, "4b58e637-78f2-43df-af49-4e56b4146290",
                                  new Date(1563275991207L), 74, null, "7ee59.6a564@489a9.fr", true,
                                  "9fc48e84-ef38-44a4-9158-8284afa025c1", "9e70a034c4e3cc5aa8682c95a95d2309", false,
                                  true, false, -94, null, null, "80986d75-604b-4c40-86b0-c16c66c569a2", 104,
                                  "d3df24f2-6f30-4e34-ae59-96b9ebf9d56c", UserStatus.getDefault(), null,
                                  new Date(1563275989278L), "mKQ=i");
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotSame(user2, user1);
            assertEquals(user2, user1);
            assertEquals(user2.hashCode(), user1.hashCode());
            int hashCode = user1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, user1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        User user = new User("9e70a034c4e3cc5aa8682c95a95d2309", null, "409eb6ba-2477-480b-ac48-167dbd8faa3d",
                             new Date(1563275987548L), 23, null, "edcea.38107@d1a46.me", true,
                             "863bcb0a-8936-4a33-abed-8748cafd99e5", "9e70a034c4e3cc5aa8682c95a95d2309", true, false,
                             false, 8, null, null, "277b14d2-3897-4bab-9f4b-f0de760fcd20", 49,
                             "46e25282-e7c7-42cf-905a-8a46a2e2208e", UserStatus.getDefault(), null,
                             new Date(1563275989623L), "mKQ=i");
        assertTrue(user.isValid());
        User userInvalid = new User("Uî‘”`á‘¡bÃ¬Më¬…bbì–´VVâ§’K<Dä“«\u0010b\u0016bbb1b\u0006'11[1è™‘1R!UDb\bbá¥¾11/\u0002\\\\bb\u001d\u00051à©”bPW11bb1bë??C",
                                    null, "602eb469-842c-4740-be55-e4043efa17dc", new Date(1563275984410L), -127, null,
                                    null, false,
                                    "7731ba8e-bc08-4420-b537-ce95f0ea052433697da0-a373-4163-a896-7575fbfd024796f8900a-671f-4d35-835a-db3c7d43d866",
                                    "Uî‘”`á‘¡bÃ¬Më¬…bbì–´VVâ§’K<Dä“«\u0010b\u0016bbb1b\u0006'11[1è™‘1R!UDb\bbá¥¾11/\u0002\\\\bb\u001d\u00051à©”bPW11bb1bë??C",
                                    false, true, true, -127, null, null, "1ed9ff25-43f4-46d2-8d85-aecd3b76fab4", 102,
                                    "a6eb9d1e-0496-47b2-8373-d93af8a2b1e3cf8d5ca2-4466-4609-acc0-5a971c9d971a3869aea3-54fe-46a8-bc99-5f342df6eea8",
                                    UserStatus.getDefault(), null, new Date(1563275985824L),
                                    "PkNOkj\u000e:@f[ Wã´ l`AABXj\u0002\u000fá¥´Mkd$$\u0012\bj9X\tYç‰±\u000bC_kTGO\\\\\u001eå–¬/(lka)?fBB;ë?˜>gIl5P");
        assertFalse(userInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            User user1 = new User("9e70a034c4e3cc5aa8682c95a95d2309", null, "7e05577b-69be-4207-93d2-84ef690f173f",
                                  new Date(1563275983878L), -34, null, "e9c02.51b31@9530e.me", true,
                                  "d011ec2d-8038-4bee-972e-a4c07214db92", "9e70a034c4e3cc5aa8682c95a95d2309", true,
                                  true, false, 9, null, null, "f6c74adc-67a2-4951-b3a4-3fd969401e25", 79,
                                  "7d52e83c-8956-47d2-8c9f-ab4de299d00c", UserStatus.getDefault(), null,
                                  new Date(1563275988904L), "mKQ=i");
            User user2 = new User("9e70a034c4e3cc5aa8682c95a95d2309", null, "7e05577b-69be-4207-93d2-84ef690f173f",
                                  new Date(1563275983878L), -34, null, "e9c02.51b31@9530e.me", true,
                                  "d011ec2d-8038-4bee-972e-a4c07214db92", "9e70a034c4e3cc5aa8682c95a95d2309", true,
                                  true, false, 9, null, null, "f6c74adc-67a2-4951-b3a4-3fd969401e25", 79,
                                  "7d52e83c-8956-47d2-8c9f-ab4de299d00c", UserStatus.getDefault(), null,
                                  new Date(1563275988904L), "mKQ=i");
            User user3 = new User("9e70a034c4e3cc5aa8682c95a95d2309", null, "db8d6b64-d019-4326-b773-cd5994dcb8b2",
                                  new Date(1563275984408L), -117, null, "e799f.392a8@57a46.me", true,
                                  "21492f13-e80e-4dfa-b3fb-fdb6ad33e4ea", "9e70a034c4e3cc5aa8682c95a95d2309", true,
                                  true, false, 4, null, null, "4cc9a22d-7b43-4118-b9ca-fd33bb125735", -24,
                                  "c9a325ac-cb2b-47f6-876a-5850cd97f5bb", UserStatus.getDefault(), null,
                                  new Date(1563275985005L), "mKQ=i");
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotNull(user3);
            assertNotSame(user2, user1);
            assertNotSame(user3, user1);
            assertEquals(user2, user1);
            assertEquals(user2, user1);
            assertEquals(user1, user2);
            assertEquals(user1, user1);
            assertFalse(user1.equals(null));
            assertNotEquals(user3, user1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
