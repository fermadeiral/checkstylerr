// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.deviceupdate.model;

import static org.junit.Assert.*;

import com.arm.mbed.cloud.sdk.common.Order;
import com.arm.mbed.cloud.sdk.common.listing.ListOptionsEncoder;
import com.arm.mbed.cloud.sdk.common.listing.filtering.FilterOperator;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import org.junit.Test;

/**
 * Unit tests for Model FirmwareManifestListOptions.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestFirmwareManifestListOptions {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            FirmwareManifestListOptions firmwaremanifestlistoptions1 = new FirmwareManifestListOptions(Integer.valueOf(0),
                                                                                                       Long.valueOf(59),
                                                                                                       Order.getDefault(),
                                                                                                       "e13204d4-72aa-4dec-83e1-3dee9eea46fa",
                                                                                                       null, null);
            FirmwareManifestListOptions firmwaremanifestlistoptions2 = firmwaremanifestlistoptions1.clone();
            assertNotNull(firmwaremanifestlistoptions1);
            assertNotNull(firmwaremanifestlistoptions2);
            assertNotSame(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the filters method.
     */
    @SuppressWarnings({ "boxing", "resource" })
    @Test
    public void testFilters() {
        try {
            FirmwareManifestListOptions option = new FirmwareManifestListOptions().inCreatedAts(Arrays.asList(new Date(1563275993031L),
                                                                                                              new Date(1563275993430L),
                                                                                                              new Date(1563275993469L),
                                                                                                              new Date(1563275988511L),
                                                                                                              new Date(1563275994755L),
                                                                                                              new Date(1563275990245L),
                                                                                                              new Date(1563275986522L),
                                                                                                              new Date(1563275988200L)))
                                                                                  .notInCreatedAts(Arrays.asList(new Date(1563275986336L),
                                                                                                                 new Date(1563275991782L),
                                                                                                                 new Date(1563275988015L)))
                                                                                  .lessThanCreatedAt(new Date(1563275994928L))
                                                                                  .greaterThanCreatedAt(new Date(1563275985437L))
                                                                                  .equalToName("29b6b2f2-bfbf-48d3-8ca6-44d0b3eee0cd")
                                                                                  .notEqualToName("0883adfb-d27d-4789-81a0-70670267c80e")
                                                                                  .inNames(Arrays.asList("9656728c-ac81-4798-a47d-9f1cf4c89f90",
                                                                                                         "e12ec21c-3eef-4682-9665-a0c7cb81c432",
                                                                                                         "f211b54f-e380-4de7-8968-03491d654be2",
                                                                                                         "9e1b97f0-69c4-4b9c-bff8-0cdf11bd4667",
                                                                                                         "bb344829-ab7d-40bb-8e7d-95c241545564",
                                                                                                         "54a65dec-bb76-4b30-8a9d-f4948a14f74c"))
                                                                                  .notInNames(Arrays.asList("44824559-a116-48f2-80e7-ac67e4c17b94",
                                                                                                            "3a5de615-91d4-4ce8-a654-6c9457a0ef33",
                                                                                                            "5aec0d77-3132-4caa-b87e-c885c6aa3167",
                                                                                                            "d3602061-9d94-4b19-a392-b00fde69b461",
                                                                                                            "ccfd9ff0-dc67-4225-be74-e85979ae2475",
                                                                                                            "7b4aa13f-e5ca-461d-9c30-8d2330745f3e",
                                                                                                            "60f74947-18d1-4d6d-885a-8f277434d517",
                                                                                                            "c16dfb70-d2a9-490e-8edd-624edc9e394d"))
                                                                                  .equalToId("766a9c60-8ab8-4b22-b9a2-030e4fd56ca7")
                                                                                  .notEqualToId("43d1aa49-4cf1-4331-8693-7083d0978a2d")
                                                                                  .inIds(Arrays.asList("feb08a66-3c7f-4f82-9186-88f00670a5da"))
                                                                                  .notInIds(Arrays.asList("5a807967-9bc7-41fc-b3cd-30dec5598165",
                                                                                                          "0bb7d88a-1335-4aa0-9e0d-1e7c47cb1265",
                                                                                                          "8b69e51a-fa9c-4762-959c-9cb4096d4e6d",
                                                                                                          "bc9feb8d-6a19-455d-9486-faf683b40bba"))
                                                                                  .equalToDatafileUrl("3186b7b8-6d1f-455b-a6b8-878756ae31ed")
                                                                                  .notEqualToDatafileUrl("4a8d6089-f908-4303-8f53-66f40bdef98e")
                                                                                  .inDatafileUrls(Arrays.asList("25b792bf-69ac-4df0-ab7d-d1ccf88c1ad4",
                                                                                                                "24bfbc7f-146d-449d-bd3a-0bc977309910",
                                                                                                                "9aa01884-4456-4b3c-aa43-84877346709c",
                                                                                                                "2c674788-7f20-4d4d-8aa3-2813444c5679",
                                                                                                                "b95d58c8-a38d-4468-9b40-6b08a800a0bd",
                                                                                                                "b2554c0d-340f-41b6-9b8c-b35f4b747c05",
                                                                                                                "76841079-d29e-4965-97cc-558005773783",
                                                                                                                "3c99f135-e25a-4c36-abec-7ace0daf4094",
                                                                                                                "5fd052c1-4a4e-438a-a352-0b9feeb7fa34"))
                                                                                  .notInDatafileUrls(Arrays.asList("51250bb9-bd53-4114-ac6b-be25c027c91c",
                                                                                                                   "fcb4bb8a-85f2-4b6d-ad7d-929538fdf2fd",
                                                                                                                   "0ac40e78-b7d7-4379-9c4f-447fdbe36e38",
                                                                                                                   "151009d6-fa16-4610-895e-e3355ec90fe6",
                                                                                                                   "6f93c2aa-e0df-49a3-bb36-f7a2cfa5963f",
                                                                                                                   "2bf94cc3-dfdb-4b75-9a6c-aba7cde373e4",
                                                                                                                   "afd02a2b-546a-4b3d-b5bc-0be064533a89",
                                                                                                                   "a7ffb7f4-63e6-450d-b2c8-8c080e971bb2"))
                                                                                  .equalToDatafileSize(Long.valueOf(32))
                                                                                  .notEqualToDatafileSize(Long.valueOf(-28))
                                                                                  .inDatafileSizes(Arrays.asList(Long.valueOf(-89),
                                                                                                                 Long.valueOf(47)))
                                                                                  .notInDatafileSizes(Arrays.asList(Long.valueOf(72),
                                                                                                                    Long.valueOf(99),
                                                                                                                    Long.valueOf(-72),
                                                                                                                    Long.valueOf(81),
                                                                                                                    Long.valueOf(43)))
                                                                                  .equalToDeviceClass("997e2617-d83e-49f1-8701-6e3e353b21ff")
                                                                                  .notEqualToDeviceClass("acd20db9-f97d-4fab-b691-c168ec680586")
                                                                                  .inDeviceClass(Arrays.asList("32da4dfb-d00e-42e3-aada-0c1cf3399c85"))
                                                                                  .notInDeviceClass(Arrays.asList("84ae6e8a-9cf3-447d-a2b5-4952ed477b17",
                                                                                                                  "28472d67-7cc9-4da5-a15b-3996a495fd8c"))
                                                                                  .inTimestamps(Arrays.asList(new Date(1563275993931L),
                                                                                                              new Date(1563275991539L),
                                                                                                              new Date(1563275985905L),
                                                                                                              new Date(1563275991844L),
                                                                                                              new Date(1563275985995L),
                                                                                                              new Date(1563275989483L)))
                                                                                  .notInTimestamps(Arrays.asList(new Date(1563275987366L),
                                                                                                                 new Date(1563275990741L),
                                                                                                                 new Date(1563275993379L)))
                                                                                  .lessThanTimestamp(new Date(1563275985448L))
                                                                                  .greaterThanTimestamp(new Date(1563275994518L))
                                                                                  .inUpdatedAts(Arrays.asList(new Date(1563275989499L),
                                                                                                              new Date(1563275986521L),
                                                                                                              new Date(1563275990464L),
                                                                                                              new Date(1563275993121L),
                                                                                                              new Date(1563275988110L)))
                                                                                  .notInUpdatedAts(Arrays.asList(new Date(1563275994598L)))
                                                                                  .lessThanUpdatedAt(new Date(1563275985889L))
                                                                                  .greaterThanUpdatedAt(new Date(1563275988609L))
                                                                                  .equalToDescription("ebd44b71-164c-4a82-a4bf-90b511e39292")
                                                                                  .notEqualToDescription("fbe9f19c-2db8-4894-98b8-e47ac419d418")
                                                                                  .inDescriptions(Arrays.asList("394e74c0-7df9-4330-aab0-b4d7490332a3",
                                                                                                                "5a5aec7b-d7aa-45d0-bf07-5ae3a95d335b",
                                                                                                                "cbbeb033-fcfc-47ca-a0b8-cf0b52c1fe81"))
                                                                                  .notInDescriptions(Arrays.asList("60e921d7-1571-4085-9bab-ed022fa76247",
                                                                                                                   "8e2f7250-6cf2-4666-83a7-f02358561aee",
                                                                                                                   "6554ea2f-7a03-448f-88b0-4311a2b349db"));
            assertTrue(option.hasFilters());
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1563275993031L), new Date(1563275993430L), new Date(1563275993469L),
                                       new Date(1563275988511L), new Date(1563275994755L), new Date(1563275990245L),
                                       new Date(1563275986522L), new Date(1563275988200L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1563275986336L), new Date(1563275991782L), new Date(1563275988015L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                        FilterOperator.LESS_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1563275994928L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1563275985437L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME, FilterOperator.EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("29b6b2f2-bfbf-48d3-8ca6-44d0b3eee0cd",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("0883adfb-d27d-4789-81a0-70670267c80e",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME, FilterOperator.IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("9656728c-ac81-4798-a47d-9f1cf4c89f90", "e12ec21c-3eef-4682-9665-a0c7cb81c432",
                                       "f211b54f-e380-4de7-8968-03491d654be2", "9e1b97f0-69c4-4b9c-bff8-0cdf11bd4667",
                                       "bb344829-ab7d-40bb-8e7d-95c241545564", "54a65dec-bb76-4b30-8a9d-f4948a14f74c"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("44824559-a116-48f2-80e7-ac67e4c17b94", "3a5de615-91d4-4ce8-a654-6c9457a0ef33",
                                       "5aec0d77-3132-4caa-b87e-c885c6aa3167", "d3602061-9d94-4b19-a392-b00fde69b461",
                                       "ccfd9ff0-dc67-4225-be74-e85979ae2475", "7b4aa13f-e5ca-461d-9c30-8d2330745f3e",
                                       "60f74947-18d1-4d6d-885a-8f277434d517", "c16dfb70-d2a9-490e-8edd-624edc9e394d"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID, FilterOperator.EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("766a9c60-8ab8-4b22-b9a2-030e4fd56ca7",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("43d1aa49-4cf1-4331-8693-7083d0978a2d",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID, FilterOperator.IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("feb08a66-3c7f-4f82-9186-88f00670a5da"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("5a807967-9bc7-41fc-b3cd-30dec5598165", "0bb7d88a-1335-4aa0-9e0d-1e7c47cb1265",
                                       "8b69e51a-fa9c-4762-959c-9cb4096d4e6d", "bc9feb8d-6a19-455d-9486-faf683b40bba"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("3186b7b8-6d1f-455b-a6b8-878756ae31ed",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("4a8d6089-f908-4303-8f53-66f40bdef98e",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("25b792bf-69ac-4df0-ab7d-d1ccf88c1ad4", "24bfbc7f-146d-449d-bd3a-0bc977309910",
                                       "9aa01884-4456-4b3c-aa43-84877346709c", "2c674788-7f20-4d4d-8aa3-2813444c5679",
                                       "b95d58c8-a38d-4468-9b40-6b08a800a0bd", "b2554c0d-340f-41b6-9b8c-b35f4b747c05",
                                       "76841079-d29e-4965-97cc-558005773783", "3c99f135-e25a-4c36-abec-7ace0daf4094",
                                       "5fd052c1-4a4e-438a-a352-0b9feeb7fa34"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("51250bb9-bd53-4114-ac6b-be25c027c91c", "fcb4bb8a-85f2-4b6d-ad7d-929538fdf2fd",
                                       "0ac40e78-b7d7-4379-9c4f-447fdbe36e38", "151009d6-fa16-4610-895e-e3355ec90fe6",
                                       "6f93c2aa-e0df-49a3-bb36-f7a2cfa5963f", "2bf94cc3-dfdb-4b75-9a6c-aba7cde373e4",
                                       "afd02a2b-546a-4b3d-b5bc-0be064533a89", "a7ffb7f4-63e6-450d-b2c8-8c080e971bb2"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(32),
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    Long.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(-28),
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                       Long.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(-89), Long.valueOf(47)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                        FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(72), Long.valueOf(99), Long.valueOf(-72), Long.valueOf(81),
                                       Long.valueOf(43)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS, FilterOperator.EQUAL));
            assertNotNull(option.getDeviceClassFilters());
            assertEquals("997e2617-d83e-49f1-8701-6e3e353b21ff",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDeviceClassFilters());
            assertEquals("acd20db9-f97d-4fab-b691-c168ec680586",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS, FilterOperator.IN));
            assertNotNull(option.getDeviceClassFilters());
            assertEquals(Arrays.asList("32da4dfb-d00e-42e3-aada-0c1cf3399c85"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS, FilterOperator.NOT_IN));
            assertNotNull(option.getDeviceClassFilters());
            assertEquals(Arrays.asList("84ae6e8a-9cf3-447d-a2b5-4952ed477b17", "28472d67-7cc9-4da5-a15b-3996a495fd8c"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP, FilterOperator.IN));
            assertNotNull(option.getTimestampFilters());
            assertEquals(Arrays.asList(new Date(1563275993931L), new Date(1563275991539L), new Date(1563275985905L),
                                       new Date(1563275991844L), new Date(1563275985995L), new Date(1563275989483L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP, FilterOperator.NOT_IN));
            assertNotNull(option.getTimestampFilters());
            assertEquals(Arrays.asList(new Date(1563275987366L), new Date(1563275990741L), new Date(1563275993379L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP, FilterOperator.LESS_THAN));
            assertNotNull(option.getTimestampFilters());
            assertEquals(new Date(1563275985448L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getTimestampFilters());
            assertEquals(new Date(1563275994518L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1563275989499L), new Date(1563275986521L), new Date(1563275990464L),
                                       new Date(1563275993121L), new Date(1563275988110L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1563275994598L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                        FilterOperator.LESS_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1563275985889L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1563275988609L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("ebd44b71-164c-4a82-a4bf-90b511e39292",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("fbe9f19c-2db8-4894-98b8-e47ac419d418",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("394e74c0-7df9-4330-aab0-b4d7490332a3", "5a5aec7b-d7aa-45d0-bf07-5ae3a95d335b",
                                       "cbbeb033-fcfc-47ca-a0b8-cf0b52c1fe81"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("60e921d7-1571-4085-9bab-ed022fa76247", "8e2f7250-6cf2-4666-83a7-f02358561aee",
                                       "6554ea2f-7a03-448f-88b0-4311a2b349db"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    List.class, option));
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            FirmwareManifestListOptions firmwaremanifestlistoptions1 = new FirmwareManifestListOptions(Integer.valueOf(-90),
                                                                                                       Long.valueOf(-93),
                                                                                                       Order.getDefault(),
                                                                                                       "b4526d25-e3ed-4a8a-bdb9-8521145d46dd",
                                                                                                       null, null);
            FirmwareManifestListOptions firmwaremanifestlistoptions2 = new FirmwareManifestListOptions(Integer.valueOf(-90),
                                                                                                       Long.valueOf(-93),
                                                                                                       Order.getDefault(),
                                                                                                       "b4526d25-e3ed-4a8a-bdb9-8521145d46dd",
                                                                                                       null, null);
            assertNotNull(firmwaremanifestlistoptions1);
            assertNotNull(firmwaremanifestlistoptions2);
            assertNotSame(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2.hashCode(), firmwaremanifestlistoptions1.hashCode());
            int hashCode = firmwaremanifestlistoptions1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, firmwaremanifestlistoptions1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            FirmwareManifestListOptions firmwaremanifestlistoptions1 = new FirmwareManifestListOptions(Integer.valueOf(58),
                                                                                                       Long.valueOf(100),
                                                                                                       Order.getDefault(),
                                                                                                       "f95512f2-763d-464d-989a-1f6dd88adcc6",
                                                                                                       null, null);
            FirmwareManifestListOptions firmwaremanifestlistoptions2 = new FirmwareManifestListOptions(Integer.valueOf(58),
                                                                                                       Long.valueOf(100),
                                                                                                       Order.getDefault(),
                                                                                                       "f95512f2-763d-464d-989a-1f6dd88adcc6",
                                                                                                       null, null);
            FirmwareManifestListOptions firmwaremanifestlistoptions3 = new FirmwareManifestListOptions(Integer.valueOf(108),
                                                                                                       Long.valueOf(-24),
                                                                                                       Order.getDefault(),
                                                                                                       "9e657328-a501-4869-b7ea-4c834f169907",
                                                                                                       null, null);
            assertNotNull(firmwaremanifestlistoptions1);
            assertNotNull(firmwaremanifestlistoptions2);
            assertNotNull(firmwaremanifestlistoptions3);
            assertNotSame(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertNotSame(firmwaremanifestlistoptions3, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions1, firmwaremanifestlistoptions2);
            assertEquals(firmwaremanifestlistoptions1, firmwaremanifestlistoptions1);
            assertFalse(firmwaremanifestlistoptions1.equals(null));
            assertNotEquals(firmwaremanifestlistoptions3, firmwaremanifestlistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
