// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model ParentAccount.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestParentAccount {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("a5bb8076-2fd7-4cca-8ade-4bf5dfe82944",
                                                             "997e3670-0e1e-4bea-9f4b-75799592b097",
                                                             "743c4f1d-9af6-4cde-8c13-b781f84a4b99");
            ParentAccount parentaccount2 = parentaccount1.clone();
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotSame(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("f10be038-9a98-49ca-8639-68aee1a156ff",
                                                             "fd3b04b4-872b-4b16-ad66-6e5a6eeceb47",
                                                             "c1286b43-908b-4eaf-910a-30d5b7340ac9");
            ParentAccount parentaccount2 = new ParentAccount("f10be038-9a98-49ca-8639-68aee1a156ff",
                                                             "fd3b04b4-872b-4b16-ad66-6e5a6eeceb47",
                                                             "c1286b43-908b-4eaf-910a-30d5b7340ac9");
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotSame(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount2.hashCode(), parentaccount1.hashCode());
            int hashCode = parentaccount1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, parentaccount1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ParentAccount parentaccount = new ParentAccount("a21f2536-c4b1-4e13-9b08-cdbe137c3525",
                                                        "e3ffcef9-9e76-45bd-ad48-cfb87580f63f",
                                                        "d3ecc26d-9da7-4247-8b7f-0dbbbbc2c8cd");
        assertTrue(parentaccount.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("eb233bf2-31be-4042-a9c5-11f79595ca9d",
                                                             "e7e221e2-8cb3-46ca-a749-05571ed5db2f",
                                                             "9265130b-600b-4eeb-8a86-0bb410f138e6");
            ParentAccount parentaccount2 = new ParentAccount("eb233bf2-31be-4042-a9c5-11f79595ca9d",
                                                             "e7e221e2-8cb3-46ca-a749-05571ed5db2f",
                                                             "9265130b-600b-4eeb-8a86-0bb410f138e6");
            ParentAccount parentaccount3 = new ParentAccount("6a2e5e0b-b689-4d7d-858a-0945be329234",
                                                             "f329565a-d583-4f6c-a029-7732114a5ad8",
                                                             "44e15393-90ba-4be5-b43c-b6c73158ef9a");
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotNull(parentaccount3);
            assertNotSame(parentaccount2, parentaccount1);
            assertNotSame(parentaccount3, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount1, parentaccount2);
            assertEquals(parentaccount1, parentaccount1);
            assertFalse(parentaccount1.equals(null));
            assertNotEquals(parentaccount3, parentaccount1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
