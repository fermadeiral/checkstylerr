// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model ApiKey.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestApiKey {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ApiKey apikey1 = new ApiKey("e6ebb0cdf5063cdce9dff3ba2923bd83", new Date(1553713216713L), 86,
                                        "af65b9bb-3e16-4401-8222-51e0ba70b80d", "846a5174-c9bd-4c39-b912-cb0b20495df3",
                                        64, "14539d3b-0021-4561-af6a-f2f5c00984e0",
                                        "d4c51ae3-ef12-4f4c-8d1c-0c223f2c5943", ApiKeyStatus.getDefault(),
                                        new Date(1553713213455L));
            ApiKey apikey2 = apikey1.clone();
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotSame(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ApiKey apikey1 = new ApiKey("41acdf7daeb82c3fe97420c9964f96ce", new Date(1553713216294L), 2,
                                        "fbe1abd7-374d-4a85-9b52-4f9d732424ad", "27f62fea-6dc3-4c14-bc11-0918973425ab",
                                        -101, "55df6417-54cc-4088-b251-ebd04eccd336",
                                        "8f27745b-e95c-4e46-9242-5b3b0be6b8b5", ApiKeyStatus.getDefault(),
                                        new Date(1553713212937L));
            ApiKey apikey2 = new ApiKey("41acdf7daeb82c3fe97420c9964f96ce", new Date(1553713216294L), 2,
                                        "fbe1abd7-374d-4a85-9b52-4f9d732424ad", "27f62fea-6dc3-4c14-bc11-0918973425ab",
                                        -101, "55df6417-54cc-4088-b251-ebd04eccd336",
                                        "8f27745b-e95c-4e46-9242-5b3b0be6b8b5", ApiKeyStatus.getDefault(),
                                        new Date(1553713212937L));
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotSame(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey2.hashCode(), apikey1.hashCode());
            int hashCode = apikey1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, apikey1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ApiKey apikey = new ApiKey("af264ded8c0b869bbebbbfca1ef3c8ae", new Date(1553713216529L), -98,
                                   "8be4b875-c4b4-4d83-9571-27ac131a1bc5", "feff755d-86e4-4def-aa48-3e1e4bed33d7", 75,
                                   "fd9abb1e-dba0-4f19-b963-648b005dddcf", "45fc5eda-d41b-4feb-852e-1292d946d3e0",
                                   ApiKeyStatus.getDefault(), new Date(1553713210411L));
        assertTrue(apikey.isValid());
        ApiKey apikeyInvalid = new ApiKey("\u0001I4ç³¯ê¼?\u0006ê¸¥å½›_`å?‡P\u00054á—…4H4\bC],@æ¿?â?€æƒ?Z444>4Î¡=å½„åµ†ê?‹æºº<*\u001eHã›?é•±4?4\u001eë™˜4î—ŸLK^è¨¬ë¬›#ï´ž4ã’›/èº—T",
                                          new Date(1553713216364L), -38, "7649cbcb-01af-438b-8375-73d771261c26",
                                          "1fc6896b-639f-43f3-ba46-8488ce98ca91", -57, null,
                                          "ffb04053-e60c-45d6-8640-f03496c8af99", ApiKeyStatus.getDefault(),
                                          new Date(1553713207788L));
        assertFalse(apikeyInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ApiKey apikey1 = new ApiKey("1f7ccbafac0db46aad0b5f5ad1bde82a", new Date(1553713211751L), -91,
                                        "e8a58e4b-387d-44a9-bb00-ecf085a73808", "e99635e9-3ff3-46d9-be16-beccc4510032",
                                        111, "ddbc5415-9bb3-4e74-9fff-3f2218e451af",
                                        "4870c57b-0313-4623-8778-b1f5cb58384b", ApiKeyStatus.getDefault(),
                                        new Date(1553713211627L));
            ApiKey apikey2 = new ApiKey("1f7ccbafac0db46aad0b5f5ad1bde82a", new Date(1553713211751L), -91,
                                        "e8a58e4b-387d-44a9-bb00-ecf085a73808", "e99635e9-3ff3-46d9-be16-beccc4510032",
                                        111, "ddbc5415-9bb3-4e74-9fff-3f2218e451af",
                                        "4870c57b-0313-4623-8778-b1f5cb58384b", ApiKeyStatus.getDefault(),
                                        new Date(1553713211627L));
            ApiKey apikey3 = new ApiKey("0e95279adfcfbfbbb0cd1cca7fc0bcb2", new Date(1553713209743L), 48,
                                        "37aeaa07-2cfa-4022-93da-7b12e473813b", "a7c6a059-5090-4267-9427-d218dfe66947",
                                        103, "bffd3a9b-603a-4072-9369-a032767fa302",
                                        "ae1003e5-fb06-4467-a79e-9e6d4af4ef4d", ApiKeyStatus.getDefault(),
                                        new Date(1553713211345L));
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotNull(apikey3);
            assertNotSame(apikey2, apikey1);
            assertNotSame(apikey3, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey1, apikey2);
            assertEquals(apikey1, apikey1);
            assertFalse(apikey1.equals(null));
            assertNotEquals(apikey3, apikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
