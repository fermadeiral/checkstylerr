// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.security.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeveloperCertificate.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeveloperCertificate {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("b8108f3e-0ac0-4c2a-a723-bf0262f610c1",
                                                                                  "01d09c87-c977-423e-a1bd-5db4a0e1c4ee",
                                                                                  new Date(1553713214713L),
                                                                                  "892e9e8f-5806-4352-8744-c80d71733b0f",
                                                                                  "ac60558d-8ebb-4e15-b5f5-cc16db9af742",
                                                                                  "6a1d314b-b863-48e8-b03a-6818a36e21eb",
                                                                                  "92e6e6fd-f566-4464-a4e8-4322450740ae");
            DeveloperCertificate developercertificate2 = developercertificate1.clone();
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("6fe8ae04-6e23-447f-95ca-59f1c4bcc024",
                                                                                  "049ca1ea-b2cf-4e4f-9b1a-2b27b3caf5f9",
                                                                                  new Date(1553713208452L),
                                                                                  "cc874889-3228-486f-8b63-02a5ca9393d5",
                                                                                  "1455fb69-55c6-44b8-ae9c-fadffbab9038",
                                                                                  "b0b4b076-39c6-4b26-9dc7-3db78483f141",
                                                                                  "5e07e237-dc09-4cb5-9598-391eb38e1e67");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("6fe8ae04-6e23-447f-95ca-59f1c4bcc024",
                                                                                  "049ca1ea-b2cf-4e4f-9b1a-2b27b3caf5f9",
                                                                                  new Date(1553713208452L),
                                                                                  "cc874889-3228-486f-8b63-02a5ca9393d5",
                                                                                  "1455fb69-55c6-44b8-ae9c-fadffbab9038",
                                                                                  "b0b4b076-39c6-4b26-9dc7-3db78483f141",
                                                                                  "5e07e237-dc09-4cb5-9598-391eb38e1e67");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2.hashCode(), developercertificate1.hashCode());
            int hashCode = developercertificate1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, developercertificate1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeveloperCertificate developercertificate = new DeveloperCertificate("4730e5b9-88e3-4024-8005-3533812e3098",
                                                                             "574dec92-68e9-473f-969e-98f51b214a2c",
                                                                             new Date(1553713207823L),
                                                                             "ad6e87be-131a-4b25-af6e-6c5216f2e130",
                                                                             "7f1f5384-2a8c-4965-ac2b-56309ee0d723",
                                                                             "acb3ecd0-c9d7-4f72-94cf-006628ebc14b",
                                                                             "a7ff4c31-db82-4846-8442-ccefcbc24913");
        assertTrue(developercertificate.isValid());
        DeveloperCertificate developercertificateInvalid = new DeveloperCertificate("8ed02c40-fc1a-45ef-a68d-845dfe1eeacc",
                                                                                    "ffc66282-8f78-4bf6-9435-9b962b29aa5c",
                                                                                    new Date(1553713208532L),
                                                                                    "4a7b6326-06d3-4ed6-8430-7f4cb3092fc0",
                                                                                    "65429c2e-e123-4507-a7b2-c45ba595e967",
                                                                                    null,
                                                                                    "d66c82fe-e49b-4142-8b7e-e6a921c49ada");
        assertFalse(developercertificateInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("eb3c1d79-a025-4fb2-90b8-0af1d4f13ecb",
                                                                                  "7aeda9d3-d878-47ba-9e90-c78623d8147a",
                                                                                  new Date(1553713207804L),
                                                                                  "b0d6f85d-ee5d-4e28-86db-24528f031e2f",
                                                                                  "fc1ea08f-7618-4a9c-a079-49c153937d0d",
                                                                                  "f862d993-9d2d-42c2-96ca-7e63397ba854",
                                                                                  "88b7878f-395e-4864-ae7c-09232b3e650e");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("eb3c1d79-a025-4fb2-90b8-0af1d4f13ecb",
                                                                                  "7aeda9d3-d878-47ba-9e90-c78623d8147a",
                                                                                  new Date(1553713207804L),
                                                                                  "b0d6f85d-ee5d-4e28-86db-24528f031e2f",
                                                                                  "fc1ea08f-7618-4a9c-a079-49c153937d0d",
                                                                                  "f862d993-9d2d-42c2-96ca-7e63397ba854",
                                                                                  "88b7878f-395e-4864-ae7c-09232b3e650e");
            DeveloperCertificate developercertificate3 = new DeveloperCertificate("f6d10251-5040-4b67-89e7-6c286884effe",
                                                                                  "a2df0695-424d-4a8b-8e86-f2a31ee54462",
                                                                                  new Date(1553713211551L),
                                                                                  "a962ac4b-8b6b-4fa8-a5a7-2b72334d2e33",
                                                                                  "c76e20d0-f4da-4202-8a6e-73a065577eed",
                                                                                  "cd666ff9-e1a1-4bfd-a97e-de408fcc593e",
                                                                                  "8a9ef2c3-3a8f-47fc-a665-c6b950d46ec4");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotNull(developercertificate3);
            assertNotSame(developercertificate2, developercertificate1);
            assertNotSame(developercertificate3, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate1, developercertificate2);
            assertEquals(developercertificate1, developercertificate1);
            assertFalse(developercertificate1.equals(null));
            assertNotEquals(developercertificate3, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
