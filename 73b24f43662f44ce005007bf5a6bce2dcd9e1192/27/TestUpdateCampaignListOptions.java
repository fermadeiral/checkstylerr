// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.deviceupdate.model;

import static org.junit.Assert.*;

import com.arm.mbed.cloud.sdk.common.Order;
import com.arm.mbed.cloud.sdk.common.listing.ListOptionsEncoder;
import com.arm.mbed.cloud.sdk.common.listing.filtering.FilterOperator;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import org.junit.Test;

/**
 * Unit tests for Model UpdateCampaignListOptions.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestUpdateCampaignListOptions {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            UpdateCampaignListOptions updatecampaignlistoptions1 = new UpdateCampaignListOptions(Integer.valueOf(57),
                                                                                                 Long.valueOf(-54),
                                                                                                 Order.getDefault(),
                                                                                                 "68f3d10b-0516-4548-b8bb-4ac4cadfd8cc",
                                                                                                 null, null);
            UpdateCampaignListOptions updatecampaignlistoptions2 = updatecampaignlistoptions1.clone();
            assertNotNull(updatecampaignlistoptions1);
            assertNotNull(updatecampaignlistoptions2);
            assertNotSame(updatecampaignlistoptions2, updatecampaignlistoptions1);
            assertEquals(updatecampaignlistoptions2, updatecampaignlistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the filters method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testFilters() {
        try {
            UpdateCampaignListOptions option = new UpdateCampaignListOptions().inCreatedAts(Arrays.asList(new Date(1570127623365L),
                                                                                                          new Date(1570127620813L),
                                                                                                          new Date(1570127628166L),
                                                                                                          new Date(1570127626284L),
                                                                                                          new Date(1570127628334L),
                                                                                                          new Date(1570127623521L)))
                                                                              .notInCreatedAts(Arrays.asList(new Date(1570127629493L),
                                                                                                             new Date(1570127621938L),
                                                                                                             new Date(1570127621324L),
                                                                                                             new Date(1570127627878L),
                                                                                                             new Date(1570127627963L),
                                                                                                             new Date(1570127624077L),
                                                                                                             new Date(1570127627901L),
                                                                                                             new Date(1570127621878L)))
                                                                              .lessThanCreatedAt(new Date(1570127624124L))
                                                                              .greaterThanCreatedAt(new Date(1570127621349L))
                                                                              .equalToName("403405d5-812b-420f-9aa2-1f72d2f180f8")
                                                                              .notEqualToName("e9057836-13b2-4a16-ae48-b4da93873108")
                                                                              .inNames(Arrays.asList("edf12295-ce65-409b-8111-95e718339a04",
                                                                                                     "561a846b-2e54-4618-9a0e-597345741b3c",
                                                                                                     "9b7bcdb8-1e07-492f-906e-4712ba143457",
                                                                                                     "96433d24-e044-4626-8263-1f220af850bf",
                                                                                                     "6da61f6a-aff8-4771-aa96-c634777aec7f"))
                                                                              .notInNames(Arrays.asList("307a646d-c430-4859-b636-3f63ba272b79",
                                                                                                        "12aa01c6-9236-4d96-bc29-0ef70f21a9fd"))
                                                                              .equalToId("ae24b597-5172-4d7a-9603-235a7c383d7c")
                                                                              .notEqualToId("e08c53e2-954a-4d03-a714-1219ccbcc49a")
                                                                              .inIds(Arrays.asList("e8a37f2b-999a-426a-bb97-0135e278aa0c",
                                                                                                   "c663c277-9b79-43ce-840f-67f23feb9626"))
                                                                              .notInIds(Arrays.asList("2c0f7452-a7d5-42d0-a70e-ff6bd6895c9e",
                                                                                                      "fe589a0d-545d-4303-9264-512d9a0c17b3",
                                                                                                      "fc8c0b72-5d18-4829-9df1-10b97492073c",
                                                                                                      "f9fd3bae-0df6-4459-a8f7-1b3704ec1457",
                                                                                                      "d7e1811f-f261-45b2-a2e4-4c4e5343312e"))
                                                                              .equalToDeviceFilter("067f4296-dfef-4e81-93e0-8e66881c6e1c")
                                                                              .notEqualToDeviceFilter("0049f956-8285-46b1-9d88-8eeb8d1c020a")
                                                                              .inDeviceFilters(Arrays.asList("167deeae-d8db-4588-9661-c9d185ef8b87",
                                                                                                             "633f2c84-c4be-4dd9-a504-ad5e29221f5f",
                                                                                                             "4e134f2a-e59d-4325-a6cd-aa584d52bae5",
                                                                                                             "eddb5363-d9c0-4df7-9549-4019bb222b2b"))
                                                                              .notInDeviceFilters(Arrays.asList("82576e6a-6717-4357-8308-6583cb335aa2",
                                                                                                                "e298ef3d-2129-44cb-9ce9-21c99a46daf2",
                                                                                                                "a45c31c8-2f08-4341-8893-6b2d51b75f91",
                                                                                                                "32e0f6c3-bdd6-4de1-b35e-e103801e7115",
                                                                                                                "7929e31a-554d-4bc7-b23c-493c74350171",
                                                                                                                "fa12e760-7a38-4cee-9493-169f465cbf56",
                                                                                                                "2dae39da-db09-4d21-a214-f0d903daa343"))
                                                                              .inFinisheds(Arrays.asList(new Date(1570127620494L),
                                                                                                         new Date(1570127624888L),
                                                                                                         new Date(1570127627009L),
                                                                                                         new Date(1570127624899L),
                                                                                                         new Date(1570127621317L),
                                                                                                         new Date(1570127619727L),
                                                                                                         new Date(1570127624915L),
                                                                                                         new Date(1570127619664L)))
                                                                              .notInFinisheds(Arrays.asList(new Date(1570127625984L),
                                                                                                            new Date(1570127628493L),
                                                                                                            new Date(1570127626851L),
                                                                                                            new Date(1570127629073L)))
                                                                              .lessThanFinished(new Date(1570127624514L))
                                                                              .greaterThanFinished(new Date(1570127622832L))
                                                                              .inStartedAts(Arrays.asList(new Date(1570127620444L),
                                                                                                          new Date(1570127627369L),
                                                                                                          new Date(1570127626370L),
                                                                                                          new Date(1570127627775L),
                                                                                                          new Date(1570127628610L),
                                                                                                          new Date(1570127627488L),
                                                                                                          new Date(1570127628111L),
                                                                                                          new Date(1570127624291L),
                                                                                                          new Date(1570127624264L)))
                                                                              .notInStartedAts(Arrays.asList(new Date(1570127624618L)))
                                                                              .lessThanStartedAt(new Date(1570127620565L))
                                                                              .greaterThanStartedAt(new Date(1570127621725L))
                                                                              .inWhens(Arrays.asList(new Date(1570127625212L),
                                                                                                     new Date(1570127627498L),
                                                                                                     new Date(1570127622406L),
                                                                                                     new Date(1570127629062L),
                                                                                                     new Date(1570127621369L),
                                                                                                     new Date(1570127628169L),
                                                                                                     new Date(1570127628464L),
                                                                                                     new Date(1570127626720L),
                                                                                                     new Date(1570127621597L)))
                                                                              .notInWhens(Arrays.asList(new Date(1570127625357L),
                                                                                                        new Date(1570127627905L),
                                                                                                        new Date(1570127626216L),
                                                                                                        new Date(1570127626500L),
                                                                                                        new Date(1570127622885L),
                                                                                                        new Date(1570127626531L),
                                                                                                        new Date(1570127627429L),
                                                                                                        new Date(1570127628202L),
                                                                                                        new Date(1570127627850L)))
                                                                              .lessThanWhen(new Date(1570127625921L))
                                                                              .greaterThanWhen(new Date(1570127628799L))
                                                                              .inUpdatedAts(Arrays.asList(new Date(1570127627914L),
                                                                                                          new Date(1570127629010L),
                                                                                                          new Date(1570127624855L),
                                                                                                          new Date(1570127624732L),
                                                                                                          new Date(1570127625437L),
                                                                                                          new Date(1570127620917L),
                                                                                                          new Date(1570127625900L),
                                                                                                          new Date(1570127626777L)))
                                                                              .notInUpdatedAts(Arrays.asList(new Date(1570127626391L),
                                                                                                             new Date(1570127625334L),
                                                                                                             new Date(1570127624778L)))
                                                                              .lessThanUpdatedAt(new Date(1570127620379L))
                                                                              .greaterThanUpdatedAt(new Date(1570127629214L))
                                                                              .equalToRootManifestId("08d8dd7f-e184-4c6c-907c-c90da309b2a5")
                                                                              .notEqualToRootManifestId("712e1aa9-0995-423a-8131-703fb100fb94")
                                                                              .inRootManifestIds(Arrays.asList("db8dafd6-cc36-4ca6-ace9-df636b42a042",
                                                                                                               "6c3a3da7-2644-4740-8370-506527af0aee",
                                                                                                               "3af9d128-d3e7-46ed-8f9c-314c55cf5855",
                                                                                                               "2b7941a3-e6f7-421e-a3bc-f21c959c5545",
                                                                                                               "7f77edca-3ff1-4628-a10a-4ad9157fb868",
                                                                                                               "13d2680d-4a6a-4c50-aaf4-b2b0429b3b57",
                                                                                                               "27bd2b4f-4413-484c-9f0c-e90efbf24599"))
                                                                              .notInRootManifestIds(Arrays.asList("b6136b2e-cdc0-48e0-b92f-16324838902e"))
                                                                              .equalToDescription("41cbecaf-99c0-4fb0-9874-4ba82bcc530c")
                                                                              .notEqualToDescription("905d96a6-22df-4333-91e6-dcc6f217820d")
                                                                              .inDescriptions(Arrays.asList("d8685fc1-3ab0-4685-b5ac-12fd61bcedd5",
                                                                                                            "0de076b1-f544-45ed-995d-38aa3deb29ef",
                                                                                                            "d1ccef7f-9ea1-469f-b0c4-f71a5bedd46e",
                                                                                                            "4fccb984-99ba-4529-acef-bf29acda2567"))
                                                                              .notInDescriptions(Arrays.asList("1b876056-4e87-42c7-a59c-e5b9971fe803"));
            assertTrue(option.hasFilters());
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1570127623365L), new Date(1570127620813L), new Date(1570127628166L),
                                       new Date(1570127626284L), new Date(1570127628334L), new Date(1570127623521L)),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1570127629493L), new Date(1570127621938L), new Date(1570127621324L),
                                       new Date(1570127627878L), new Date(1570127627963L), new Date(1570127624077L),
                                       new Date(1570127627901L), new Date(1570127621878L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.LESS_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1570127624124L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1570127621349L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME, FilterOperator.EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("403405d5-812b-420f-9aa2-1f72d2f180f8",
                         ListOptionsEncoder.encodeSingleEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME,
                                                                    String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("e9057836-13b2-4a16-ae48-b4da93873108",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME,
                                                                       String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME, FilterOperator.IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("edf12295-ce65-409b-8111-95e718339a04", "561a846b-2e54-4618-9a0e-597345741b3c",
                                       "9b7bcdb8-1e07-492f-906e-4712ba143457", "96433d24-e044-4626-8263-1f220af850bf",
                                       "6da61f6a-aff8-4771-aa96-c634777aec7f"),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("307a646d-c430-4859-b636-3f63ba272b79", "12aa01c6-9236-4d96-bc29-0ef70f21a9fd"),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID, FilterOperator.EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("ae24b597-5172-4d7a-9603-235a7c383d7c",
                         ListOptionsEncoder.encodeSingleEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("e08c53e2-954a-4d03-a714-1219ccbcc49a",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID, FilterOperator.IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("e8a37f2b-999a-426a-bb97-0135e278aa0c", "c663c277-9b79-43ce-840f-67f23feb9626"),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID, List.class,
                                                                 option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("2c0f7452-a7d5-42d0-a70e-ff6bd6895c9e", "fe589a0d-545d-4303-9264-512d9a0c17b3",
                                       "fc8c0b72-5d18-4829-9df1-10b97492073c", "f9fd3bae-0df6-4459-a8f7-1b3704ec1457",
                                       "d7e1811f-f261-45b2-a2e4-4c4e5343312e"),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER, FilterOperator.EQUAL));
            assertNotNull(option.getDeviceFilterFilters());
            assertEquals("067f4296-dfef-4e81-93e0-8e66881c6e1c",
                         ListOptionsEncoder.encodeSingleEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER,
                                                                    String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDeviceFilterFilters());
            assertEquals("0049f956-8285-46b1-9d88-8eeb8d1c020a",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER,
                                                                       String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER, FilterOperator.IN));
            assertNotNull(option.getDeviceFilterFilters());
            assertEquals(Arrays.asList("167deeae-d8db-4588-9661-c9d185ef8b87", "633f2c84-c4be-4dd9-a504-ad5e29221f5f",
                                       "4e134f2a-e59d-4325-a6cd-aa584d52bae5", "eddb5363-d9c0-4df7-9549-4019bb222b2b"),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER, FilterOperator.NOT_IN));
            assertNotNull(option.getDeviceFilterFilters());
            assertEquals(Arrays.asList("82576e6a-6717-4357-8308-6583cb335aa2", "e298ef3d-2129-44cb-9ce9-21c99a46daf2",
                                       "a45c31c8-2f08-4341-8893-6b2d51b75f91", "32e0f6c3-bdd6-4de1-b35e-e103801e7115",
                                       "7929e31a-554d-4bc7-b23c-493c74350171", "fa12e760-7a38-4cee-9493-169f465cbf56",
                                       "2dae39da-db09-4d21-a214-f0d903daa343"),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED, FilterOperator.IN));
            assertNotNull(option.getFinishedFilters());
            assertEquals(Arrays.asList(new Date(1570127620494L), new Date(1570127624888L), new Date(1570127627009L),
                                       new Date(1570127624899L), new Date(1570127621317L), new Date(1570127619727L),
                                       new Date(1570127624915L), new Date(1570127619664L)),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED, FilterOperator.NOT_IN));
            assertNotNull(option.getFinishedFilters());
            assertEquals(Arrays.asList(new Date(1570127625984L), new Date(1570127628493L), new Date(1570127626851L),
                                       new Date(1570127629073L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED, FilterOperator.LESS_THAN));
            assertNotNull(option.getFinishedFilters());
            assertEquals(new Date(1570127624514L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED, FilterOperator.GREATER_THAN));
            assertNotNull(option.getFinishedFilters());
            assertEquals(new Date(1570127622832L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT, FilterOperator.IN));
            assertNotNull(option.getStartedAtFilters());
            assertEquals(Arrays.asList(new Date(1570127620444L), new Date(1570127627369L), new Date(1570127626370L),
                                       new Date(1570127627775L), new Date(1570127628610L), new Date(1570127627488L),
                                       new Date(1570127628111L), new Date(1570127624291L), new Date(1570127624264L)),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getStartedAtFilters());
            assertEquals(Arrays.asList(new Date(1570127624618L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT, FilterOperator.LESS_THAN));
            assertNotNull(option.getStartedAtFilters());
            assertEquals(new Date(1570127620565L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getStartedAtFilters());
            assertEquals(new Date(1570127621725L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN, FilterOperator.IN));
            assertNotNull(option.getWhenFilters());
            assertEquals(Arrays.asList(new Date(1570127625212L), new Date(1570127627498L), new Date(1570127622406L),
                                       new Date(1570127629062L), new Date(1570127621369L), new Date(1570127628169L),
                                       new Date(1570127628464L), new Date(1570127626720L), new Date(1570127621597L)),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN, FilterOperator.NOT_IN));
            assertNotNull(option.getWhenFilters());
            assertEquals(Arrays.asList(new Date(1570127625357L), new Date(1570127627905L), new Date(1570127626216L),
                                       new Date(1570127626500L), new Date(1570127622885L), new Date(1570127626531L),
                                       new Date(1570127627429L), new Date(1570127628202L), new Date(1570127627850L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN, FilterOperator.LESS_THAN));
            assertNotNull(option.getWhenFilters());
            assertEquals(new Date(1570127625921L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN, FilterOperator.GREATER_THAN));
            assertNotNull(option.getWhenFilters());
            assertEquals(new Date(1570127628799L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1570127627914L), new Date(1570127629010L), new Date(1570127624855L),
                                       new Date(1570127624732L), new Date(1570127625437L), new Date(1570127620917L),
                                       new Date(1570127625900L), new Date(1570127626777L)),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1570127626391L), new Date(1570127625334L), new Date(1570127624778L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.LESS_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1570127620379L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1570127629214L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID,
                                        FilterOperator.EQUAL));
            assertNotNull(option.getRootManifestIdFilters());
            assertEquals("08d8dd7f-e184-4c6c-907c-c90da309b2a5",
                         ListOptionsEncoder.encodeSingleEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getRootManifestIdFilters());
            assertEquals("712e1aa9-0995-423a-8131-703fb100fb94",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID, FilterOperator.IN));
            assertNotNull(option.getRootManifestIdFilters());
            assertEquals(Arrays.asList("db8dafd6-cc36-4ca6-ace9-df636b42a042", "6c3a3da7-2644-4740-8370-506527af0aee",
                                       "3af9d128-d3e7-46ed-8f9c-314c55cf5855", "2b7941a3-e6f7-421e-a3bc-f21c959c5545",
                                       "7f77edca-3ff1-4628-a10a-4ad9157fb868", "13d2680d-4a6a-4c50-aaf4-b2b0429b3b57",
                                       "27bd2b4f-4413-484c-9f0c-e90efbf24599"),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID,
                                        FilterOperator.NOT_IN));
            assertNotNull(option.getRootManifestIdFilters());
            assertEquals(Arrays.asList("b6136b2e-cdc0-48e0-b92f-16324838902e"),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("41cbecaf-99c0-4fb0-9874-4ba82bcc530c",
                         ListOptionsEncoder.encodeSingleEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("905d96a6-22df-4333-91e6-dcc6f217820d",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                       String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("d8685fc1-3ab0-4685-b5ac-12fd61bcedd5", "0de076b1-f544-45ed-995d-38aa3deb29ef",
                                       "d1ccef7f-9ea1-469f-b0c4-f71a5bedd46e", "4fccb984-99ba-4529-acef-bf29acda2567"),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("1b876056-4e87-42c7-a59c-e5b9971fe803"),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    List.class, option));
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            UpdateCampaignListOptions updatecampaignlistoptions1 = new UpdateCampaignListOptions(Integer.valueOf(85),
                                                                                                 Long.valueOf(126),
                                                                                                 Order.getDefault(),
                                                                                                 "3ef5cabb-6a41-45cc-84a4-6a485bc749b1",
                                                                                                 null, null);
            UpdateCampaignListOptions updatecampaignlistoptions2 = new UpdateCampaignListOptions(Integer.valueOf(85),
                                                                                                 Long.valueOf(126),
                                                                                                 Order.getDefault(),
                                                                                                 "3ef5cabb-6a41-45cc-84a4-6a485bc749b1",
                                                                                                 null, null);
            assertNotNull(updatecampaignlistoptions1);
            assertNotNull(updatecampaignlistoptions2);
            assertNotSame(updatecampaignlistoptions2, updatecampaignlistoptions1);
            assertEquals(updatecampaignlistoptions2, updatecampaignlistoptions1);
            assertEquals(updatecampaignlistoptions2.hashCode(), updatecampaignlistoptions1.hashCode());
            int hashCode = updatecampaignlistoptions1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, updatecampaignlistoptions1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            UpdateCampaignListOptions updatecampaignlistoptions1 = new UpdateCampaignListOptions(Integer.valueOf(15),
                                                                                                 Long.valueOf(-5),
                                                                                                 Order.getDefault(),
                                                                                                 "75a0fdd0-923a-4a4d-bbbc-7ab8762bdace",
                                                                                                 null, null);
            UpdateCampaignListOptions updatecampaignlistoptions2 = new UpdateCampaignListOptions(Integer.valueOf(15),
                                                                                                 Long.valueOf(-5),
                                                                                                 Order.getDefault(),
                                                                                                 "75a0fdd0-923a-4a4d-bbbc-7ab8762bdace",
                                                                                                 null, null);
            UpdateCampaignListOptions updatecampaignlistoptions3 = new UpdateCampaignListOptions(Integer.valueOf(20),
                                                                                                 Long.valueOf(-30),
                                                                                                 Order.getDefault(),
                                                                                                 "735aaf0a-a8c7-46ab-8c54-ac781bb54dbe",
                                                                                                 null, null);
            assertNotNull(updatecampaignlistoptions1);
            assertNotNull(updatecampaignlistoptions2);
            assertNotNull(updatecampaignlistoptions3);
            assertNotSame(updatecampaignlistoptions2, updatecampaignlistoptions1);
            assertNotSame(updatecampaignlistoptions3, updatecampaignlistoptions1);
            assertEquals(updatecampaignlistoptions2, updatecampaignlistoptions1);
            assertEquals(updatecampaignlistoptions2, updatecampaignlistoptions1);
            assertEquals(updatecampaignlistoptions1, updatecampaignlistoptions2);
            assertEquals(updatecampaignlistoptions1, updatecampaignlistoptions1);
            assertFalse(updatecampaignlistoptions1.equals(null));
            assertNotEquals(updatecampaignlistoptions3, updatecampaignlistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
