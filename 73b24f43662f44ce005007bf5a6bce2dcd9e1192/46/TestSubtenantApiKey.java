// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantApiKey.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantApiKey {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("bd1f89fbddbde18d4244b748ca1d250b",
                                                                   new Date(1570127626743L), -73,
                                                                   "bd1f89fbddbde18d4244b748ca1d250b",
                                                                   "0bf347ca-da9d-46f2-8be9-f562ee0aca1c", -24,
                                                                   "a11184c2-6c0c-4805-af90-b810ef489e82",
                                                                   "bd1f89fbddbde18d4244b748ca1d250b",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1570127625123L));
            SubtenantApiKey subtenantapikey2 = subtenantapikey1.clone();
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("bd1f89fbddbde18d4244b748ca1d250b",
                                                                   new Date(1570127626653L), -86,
                                                                   "bd1f89fbddbde18d4244b748ca1d250b",
                                                                   "67bb5277-ba1b-476b-b2b4-8c4f3f7c515e", -99,
                                                                   "4ac1bbca-3923-4121-9b5d-0e53c4c9debe",
                                                                   "bd1f89fbddbde18d4244b748ca1d250b",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1570127624635L));
            SubtenantApiKey subtenantapikey2 = new SubtenantApiKey("bd1f89fbddbde18d4244b748ca1d250b",
                                                                   new Date(1570127626653L), -86,
                                                                   "bd1f89fbddbde18d4244b748ca1d250b",
                                                                   "67bb5277-ba1b-476b-b2b4-8c4f3f7c515e", -99,
                                                                   "4ac1bbca-3923-4121-9b5d-0e53c4c9debe",
                                                                   "bd1f89fbddbde18d4244b748ca1d250b",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1570127624635L));
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2.hashCode(), subtenantapikey1.hashCode());
            int hashCode = subtenantapikey1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantapikey1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantApiKey subtenantapikey = new SubtenantApiKey("bd1f89fbddbde18d4244b748ca1d250b",
                                                              new Date(1570127617843L), -73,
                                                              "bd1f89fbddbde18d4244b748ca1d250b",
                                                              "854c660a-b684-4c1b-be40-d332e983c119", 40,
                                                              "37730454-b06a-47bb-8b2b-5e541a96b55b",
                                                              "bd1f89fbddbde18d4244b748ca1d250b",
                                                              SubtenantApiKeyStatus.getDefault(),
                                                              new Date(1570127624443L));
        assertTrue(subtenantapikey.isValid());
        SubtenantApiKey subtenantapikeyInvalid = new SubtenantApiKey(null, new Date(1570127622758L), 48,
                                                                     "33D\u0007663渧3F!\u00003$$?R3Y៲636\u0011짢3㩺33઄6\u0014\u0001\u001cK'+뙽벙\u001c6\u0002\u0004䂅=O3\u00133 X\u0010࡛6_36F᫵\u001736",
                                                                     "9768b289-66bc-461f-8828-fee05f89bb0f", 104, null,
                                                                     "33D\u0007663渧3F!\u00003$$?R3Y៲636\u0011짢3㩺33઄6\u0014\u0001\u001cK'+뙽벙\u001c6\u0002\u0004䂅=O3\u00133 X\u0010࡛6_36F᫵\u001736",
                                                                     SubtenantApiKeyStatus.getDefault(),
                                                                     new Date(1570127620742L));
        assertFalse(subtenantapikeyInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("bd1f89fbddbde18d4244b748ca1d250b",
                                                                   new Date(1570127617614L), -16,
                                                                   "bd1f89fbddbde18d4244b748ca1d250b",
                                                                   "3e1adca6-5cd2-4901-8b3e-eab0fecceb99", -62,
                                                                   "0f507b47-046a-4f96-824a-57a07354d20e",
                                                                   "bd1f89fbddbde18d4244b748ca1d250b",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1570127621102L));
            SubtenantApiKey subtenantapikey2 = new SubtenantApiKey("bd1f89fbddbde18d4244b748ca1d250b",
                                                                   new Date(1570127617614L), -16,
                                                                   "bd1f89fbddbde18d4244b748ca1d250b",
                                                                   "3e1adca6-5cd2-4901-8b3e-eab0fecceb99", -62,
                                                                   "0f507b47-046a-4f96-824a-57a07354d20e",
                                                                   "bd1f89fbddbde18d4244b748ca1d250b",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1570127621102L));
            SubtenantApiKey subtenantapikey3 = new SubtenantApiKey("bd1f89fbddbde18d4244b748ca1d250b",
                                                                   new Date(1570127619916L), 79,
                                                                   "bd1f89fbddbde18d4244b748ca1d250b",
                                                                   "3900f58f-4eaa-44cd-a7a4-1587a1f05f56", -103,
                                                                   "77f06bd8-fa40-4c1f-8b40-8eb003590d34",
                                                                   "bd1f89fbddbde18d4244b748ca1d250b",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1570127626195L));
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotNull(subtenantapikey3);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertNotSame(subtenantapikey3, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey1, subtenantapikey2);
            assertEquals(subtenantapikey1, subtenantapikey1);
            assertFalse(subtenantapikey1.equals(null));
            assertNotEquals(subtenantapikey3, subtenantapikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
