// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model ApiKey.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestApiKey {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ApiKey apikey1 = new ApiKey("bd1f89fbddbde18d4244b748ca1d250b", new Date(1570127625049L), 88,
                                        "bd1f89fbddbde18d4244b748ca1d250b", "18fa817e-9d24-4344-a79a-ab19db23016c", -15,
                                        "7b9ca8ca-2f09-4496-b67e-f3a146e5c741", "bd1f89fbddbde18d4244b748ca1d250b",
                                        ApiKeyStatus.getDefault(), new Date(1570127627362L));
            ApiKey apikey2 = apikey1.clone();
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotSame(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ApiKey apikey1 = new ApiKey("bd1f89fbddbde18d4244b748ca1d250b", new Date(1570127622312L), -54,
                                        "bd1f89fbddbde18d4244b748ca1d250b", "fdf184b3-81d4-449f-ad84-da9d9f4732b2", 73,
                                        "d8fff014-0bf4-46d5-b2da-3391ccc51619", "bd1f89fbddbde18d4244b748ca1d250b",
                                        ApiKeyStatus.getDefault(), new Date(1570127620753L));
            ApiKey apikey2 = new ApiKey("bd1f89fbddbde18d4244b748ca1d250b", new Date(1570127622312L), -54,
                                        "bd1f89fbddbde18d4244b748ca1d250b", "fdf184b3-81d4-449f-ad84-da9d9f4732b2", 73,
                                        "d8fff014-0bf4-46d5-b2da-3391ccc51619", "bd1f89fbddbde18d4244b748ca1d250b",
                                        ApiKeyStatus.getDefault(), new Date(1570127620753L));
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotSame(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey2.hashCode(), apikey1.hashCode());
            int hashCode = apikey1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, apikey1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ApiKey apikey = new ApiKey("bd1f89fbddbde18d4244b748ca1d250b", new Date(1570127619953L), -35,
                                   "bd1f89fbddbde18d4244b748ca1d250b", "fef8a64e-dd4b-4041-81e8-70035de4c5c2", 43,
                                   "0930f49c-4d23-4aca-8ce2-118205451648", "bd1f89fbddbde18d4244b748ca1d250b",
                                   ApiKeyStatus.getDefault(), new Date(1570127622759L));
        assertTrue(apikey.isValid());
        ApiKey apikeyInvalid = new ApiKey("33D\u0007663渧3F!\u00003$$?R3Y៲636\u0011짢3㩺33઄6\u0014\u0001\u001cK'+뙽벙\u001c6\u0002\u0004䂅=O3\u00133 X\u0010࡛6_36F᫵\u001736",
                                          new Date(1570127625757L), 20,
                                          "33D\u0007663渧3F!\u00003$$?R3Y៲636\u0011짢3㩺33઄6\u0014\u0001\u001cK'+뙽벙\u001c6\u0002\u0004䂅=O3\u00133 X\u0010࡛6_36F᫵\u001736",
                                          "240364ce-5376-49ea-8eee-0681151967c4", 77, null,
                                          "33D\u0007663渧3F!\u00003$$?R3Y៲636\u0011짢3㩺33઄6\u0014\u0001\u001cK'+뙽벙\u001c6\u0002\u0004䂅=O3\u00133 X\u0010࡛6_36F᫵\u001736",
                                          ApiKeyStatus.getDefault(), new Date(1570127625488L));
        assertFalse(apikeyInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ApiKey apikey1 = new ApiKey("bd1f89fbddbde18d4244b748ca1d250b", new Date(1570127619232L), 58,
                                        "bd1f89fbddbde18d4244b748ca1d250b", "933738f6-d022-45c8-bc68-d7c6722e913b", -46,
                                        "3cac25f8-fd0d-4e6c-b1dd-e24a49542b75", "bd1f89fbddbde18d4244b748ca1d250b",
                                        ApiKeyStatus.getDefault(), new Date(1570127625184L));
            ApiKey apikey2 = new ApiKey("bd1f89fbddbde18d4244b748ca1d250b", new Date(1570127619232L), 58,
                                        "bd1f89fbddbde18d4244b748ca1d250b", "933738f6-d022-45c8-bc68-d7c6722e913b", -46,
                                        "3cac25f8-fd0d-4e6c-b1dd-e24a49542b75", "bd1f89fbddbde18d4244b748ca1d250b",
                                        ApiKeyStatus.getDefault(), new Date(1570127625184L));
            ApiKey apikey3 = new ApiKey("bd1f89fbddbde18d4244b748ca1d250b", new Date(1570127620542L), 76,
                                        "bd1f89fbddbde18d4244b748ca1d250b", "e31184de-791f-4689-9075-d12706757ba9", -7,
                                        "d34afc91-63f2-42e0-bde5-cfbb131751fd", "bd1f89fbddbde18d4244b748ca1d250b",
                                        ApiKeyStatus.getDefault(), new Date(1570127620923L));
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotNull(apikey3);
            assertNotSame(apikey2, apikey1);
            assertNotSame(apikey3, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey1, apikey2);
            assertEquals(apikey1, apikey1);
            assertFalse(apikey1.equals(null));
            assertNotEquals(apikey3, apikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
