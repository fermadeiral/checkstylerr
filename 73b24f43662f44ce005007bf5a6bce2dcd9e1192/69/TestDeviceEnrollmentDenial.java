// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEnrollmentDenial.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEnrollmentDenial {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("bd1f89fbddbde18d4244b748ca1d250b",
                                                                                        new Date(1570127618622L),
                                                                                        "48b8f691-d26b-4702-8f9f-d96af5e4901c",
                                                                                        "bd1f89fbddbde18d4244b748ca1d250b",
                                                                                        "bd1f89fbddbde18d4244b748ca1d250b");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = deviceenrollmentdenial1.clone();
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("bd1f89fbddbde18d4244b748ca1d250b",
                                                                                        new Date(1570127626159L),
                                                                                        "003854f0-50dc-41a6-ab47-9fca370a46d7",
                                                                                        "bd1f89fbddbde18d4244b748ca1d250b",
                                                                                        "bd1f89fbddbde18d4244b748ca1d250b");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = new DeviceEnrollmentDenial("bd1f89fbddbde18d4244b748ca1d250b",
                                                                                        new Date(1570127626159L),
                                                                                        "003854f0-50dc-41a6-ab47-9fca370a46d7",
                                                                                        "bd1f89fbddbde18d4244b748ca1d250b",
                                                                                        "bd1f89fbddbde18d4244b748ca1d250b");
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2.hashCode(), deviceenrollmentdenial1.hashCode());
            int hashCode = deviceenrollmentdenial1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceenrollmentdenial1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEnrollmentDenial deviceenrollmentdenial = new DeviceEnrollmentDenial("bd1f89fbddbde18d4244b748ca1d250b",
                                                                                   new Date(1570127621009L),
                                                                                   "76c637d7-d746-4145-80ec-e4c9484204a2",
                                                                                   "bd1f89fbddbde18d4244b748ca1d250b",
                                                                                   "bd1f89fbddbde18d4244b748ca1d250b");
        assertTrue(deviceenrollmentdenial.isValid());
        DeviceEnrollmentDenial deviceenrollmentdenialInvalid = new DeviceEnrollmentDenial("33D\u0007663渧3F!\u00003$$?R3Y៲636\u0011짢3㩺33઄6\u0014\u0001\u001cK'+뙽벙\u001c6\u0002\u0004䂅=O3\u00133 X\u0010࡛6_36F᫵\u001736",
                                                                                          new Date(1570127623124L),
                                                                                          "11ebf64d-3f07-44c6-a55e-438e3fc1bbc3",
                                                                                          "33D\u0007663渧3F!\u00003$$?R3Y៲636\u0011짢3㩺33઄6\u0014\u0001\u001cK'+뙽벙\u001c6\u0002\u0004䂅=O3\u00133 X\u0010࡛6_36F᫵\u001736",
                                                                                          "33D\u0007663渧3F!\u00003$$?R3Y៲636\u0011짢3㩺33઄6\u0014\u0001\u001cK'+뙽벙\u001c6\u0002\u0004䂅=O3\u00133 X\u0010࡛6_36F᫵\u001736");
        assertFalse(deviceenrollmentdenialInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("bd1f89fbddbde18d4244b748ca1d250b",
                                                                                        new Date(1570127620090L),
                                                                                        "7721cd51-3f95-4d79-a9aa-24477bdf2337",
                                                                                        "bd1f89fbddbde18d4244b748ca1d250b",
                                                                                        "bd1f89fbddbde18d4244b748ca1d250b");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = new DeviceEnrollmentDenial("bd1f89fbddbde18d4244b748ca1d250b",
                                                                                        new Date(1570127620090L),
                                                                                        "7721cd51-3f95-4d79-a9aa-24477bdf2337",
                                                                                        "bd1f89fbddbde18d4244b748ca1d250b",
                                                                                        "bd1f89fbddbde18d4244b748ca1d250b");
            DeviceEnrollmentDenial deviceenrollmentdenial3 = new DeviceEnrollmentDenial("bd1f89fbddbde18d4244b748ca1d250b",
                                                                                        new Date(1570127624240L),
                                                                                        "2470afbd-5dbf-435a-b4f0-9a2d7dc5f7eb",
                                                                                        "bd1f89fbddbde18d4244b748ca1d250b",
                                                                                        "bd1f89fbddbde18d4244b748ca1d250b");
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotNull(deviceenrollmentdenial3);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertNotSame(deviceenrollmentdenial3, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial1, deviceenrollmentdenial2);
            assertEquals(deviceenrollmentdenial1, deviceenrollmentdenial1);
            assertFalse(deviceenrollmentdenial1.equals(null));
            assertNotEquals(deviceenrollmentdenial3, deviceenrollmentdenial1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
