// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantApiKey.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantApiKey {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("de2068c9e6dbf6d9ee9c45e25da5b3ec",
                                                                   new Date(1561989471625L), -62,
                                                                   "de2068c9e6dbf6d9ee9c45e25da5b3ec",
                                                                   "ee360f5d-7f63-4141-aea3-062c23d69ad7", -45,
                                                                   "8f35b677-4a37-47a9-b9c9-182934bc304a",
                                                                   "de2068c9e6dbf6d9ee9c45e25da5b3ec",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1561989477612L));
            SubtenantApiKey subtenantapikey2 = subtenantapikey1.clone();
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("de2068c9e6dbf6d9ee9c45e25da5b3ec",
                                                                   new Date(1561989468874L), 45,
                                                                   "de2068c9e6dbf6d9ee9c45e25da5b3ec",
                                                                   "3c5e8072-5619-4ad9-8341-88b739763d6a", 80,
                                                                   "96f7c3ef-dc11-41c0-885c-5cb7fc5d7b53",
                                                                   "de2068c9e6dbf6d9ee9c45e25da5b3ec",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1561989469862L));
            SubtenantApiKey subtenantapikey2 = new SubtenantApiKey("de2068c9e6dbf6d9ee9c45e25da5b3ec",
                                                                   new Date(1561989468874L), 45,
                                                                   "de2068c9e6dbf6d9ee9c45e25da5b3ec",
                                                                   "3c5e8072-5619-4ad9-8341-88b739763d6a", 80,
                                                                   "96f7c3ef-dc11-41c0-885c-5cb7fc5d7b53",
                                                                   "de2068c9e6dbf6d9ee9c45e25da5b3ec",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1561989469862L));
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2.hashCode(), subtenantapikey1.hashCode());
            int hashCode = subtenantapikey1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantapikey1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantApiKey subtenantapikey = new SubtenantApiKey("de2068c9e6dbf6d9ee9c45e25da5b3ec",
                                                              new Date(1561989472854L), 91,
                                                              "de2068c9e6dbf6d9ee9c45e25da5b3ec",
                                                              "0f5eb5a5-4232-4481-bcc3-25227556cee2", -101,
                                                              "b7cea97c-1fa4-4cbc-bef3-45f0bc5125b1",
                                                              "de2068c9e6dbf6d9ee9c45e25da5b3ec",
                                                              SubtenantApiKeyStatus.getDefault(),
                                                              new Date(1561989471136L));
        assertTrue(subtenantapikey.isValid());
        SubtenantApiKey subtenantapikeyInvalid = new SubtenantApiKey(null, new Date(1561989473053L), 20,
                                                                     ":7;è½œ11ë¼±77ç¤«A11ìª Säœ‰ïµ¦7\u0000è¸±DD11F1H7M1Gã‡ª\u0000\u000411å£©YR111*71Vé¢¯11Yå©ˆ777ç³?ì§‘+\u0016711.?à±–",
                                                                     "17f6820a-1d2b-4ece-a859-d1e0961cdb79", 67, null,
                                                                     ":7;è½œ11ë¼±77ç¤«A11ìª Säœ‰ïµ¦7\u0000è¸±DD11F1H7M1Gã‡ª\u0000\u000411å£©YR111*71Vé¢¯11Yå©ˆ777ç³?ì§‘+\u0016711.?à±–",
                                                                     SubtenantApiKeyStatus.getDefault(),
                                                                     new Date(1561989470152L));
        assertFalse(subtenantapikeyInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("de2068c9e6dbf6d9ee9c45e25da5b3ec",
                                                                   new Date(1561989469136L), 63,
                                                                   "de2068c9e6dbf6d9ee9c45e25da5b3ec",
                                                                   "6259655a-a218-4c8b-ab2b-37bcd27175fa", 76,
                                                                   "af587b6d-969f-4691-ae1d-2562711d6add",
                                                                   "de2068c9e6dbf6d9ee9c45e25da5b3ec",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1561989471016L));
            SubtenantApiKey subtenantapikey2 = new SubtenantApiKey("de2068c9e6dbf6d9ee9c45e25da5b3ec",
                                                                   new Date(1561989469136L), 63,
                                                                   "de2068c9e6dbf6d9ee9c45e25da5b3ec",
                                                                   "6259655a-a218-4c8b-ab2b-37bcd27175fa", 76,
                                                                   "af587b6d-969f-4691-ae1d-2562711d6add",
                                                                   "de2068c9e6dbf6d9ee9c45e25da5b3ec",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1561989471016L));
            SubtenantApiKey subtenantapikey3 = new SubtenantApiKey("de2068c9e6dbf6d9ee9c45e25da5b3ec",
                                                                   new Date(1561989468878L), -114,
                                                                   "de2068c9e6dbf6d9ee9c45e25da5b3ec",
                                                                   "8308509b-5ca4-4bf6-a223-5061b5de100a", 88,
                                                                   "7c6203f1-e325-4cbe-bc03-c181e33124f0",
                                                                   "de2068c9e6dbf6d9ee9c45e25da5b3ec",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1561989477803L));
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotNull(subtenantapikey3);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertNotSame(subtenantapikey3, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey1, subtenantapikey2);
            assertEquals(subtenantapikey1, subtenantapikey1);
            assertFalse(subtenantapikey1.equals(null));
            assertNotEquals(subtenantapikey3, subtenantapikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
