// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import com.arm.mbed.cloud.sdk.common.Order;
import com.arm.mbed.cloud.sdk.common.listing.ListOptionsEncoder;
import com.arm.mbed.cloud.sdk.common.listing.filtering.FilterOperator;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEventsListOptions.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEventsListOptions {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEventsListOptions deviceeventslistoptions1 = new DeviceEventsListOptions(Integer.valueOf(76),
                                                                                           Long.valueOf(-121),
                                                                                           Order.getDefault(),
                                                                                           "1274d697-62d0-4e39-ac7f-9f3f3cc771bb",
                                                                                           null, null);
            DeviceEventsListOptions deviceeventslistoptions2 = deviceeventslistoptions1.clone();
            assertNotNull(deviceeventslistoptions1);
            assertNotNull(deviceeventslistoptions2);
            assertNotSame(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2, deviceeventslistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the filters method.
     */
    @SuppressWarnings({ "boxing", "resource" })
    @Test
    public void testFilters() {
        try {
            DeviceEventsListOptions option = new DeviceEventsListOptions().equalToDeviceId("ad4df21a-aed2-463c-b3f2-5f1d2c8f9684")
                                                                          .notEqualToDeviceId("ec968fe2-b520-4b17-99be-1e9e8591184f")
                                                                          .inDeviceIds(Arrays.asList("d066343e-1637-42ea-bc49-e80bfe7694ad",
                                                                                                     "a886f95d-b63d-496f-aa50-f3389dcde32b",
                                                                                                     "b2d01ae2-4c61-45dc-a336-1825d55f3d21",
                                                                                                     "2a043882-491a-4b60-9740-6120277f01fd"))
                                                                          .notInDeviceIds(Arrays.asList("0cee0abc-c34d-424d-951b-c9168bee67d0",
                                                                                                        "e6646e90-b3ad-4455-8afa-a0e85dedd473",
                                                                                                        "5934aaa8-3afe-4472-8406-82f0f03badde"))
                                                                          .equalToDescription("8d1f7c65-a393-4837-bd84-16a8c627d154")
                                                                          .notEqualToDescription("13d47de0-e362-49e1-956b-4acad88e5274")
                                                                          .inDescriptions(Arrays.asList("fe0e9ab4-3236-4528-88aa-7633df123dbc",
                                                                                                        "f3a0b592-f29a-4fcc-be8a-31050857b7f8"))
                                                                          .notInDescriptions(Arrays.asList("d6df5bc6-a4b8-43b7-91a6-456d6f6e2060",
                                                                                                           "86b07009-76b5-4093-a995-5e90dbed89cc",
                                                                                                           "761ae1b0-84e5-4497-8860-3de555c44e6d",
                                                                                                           "e99cab1d-90ee-4b5d-8eff-9bfd0499bda1",
                                                                                                           "81b8dc16-4738-4393-9a26-a9fc87456d9a",
                                                                                                           "ed7bddd7-ee53-4c61-ac1c-aa17779fbbc3",
                                                                                                           "90473c5c-7366-401c-8b94-9364e2806bf6"))
                                                                          .inDateTimes(Arrays.asList(new Date(1561989479610L),
                                                                                                     new Date(1561989477359L),
                                                                                                     new Date(1561989474449L),
                                                                                                     new Date(1561989473066L),
                                                                                                     new Date(1561989474295L),
                                                                                                     new Date(1561989479756L)))
                                                                          .notInDateTimes(Arrays.asList(new Date(1561989479896L),
                                                                                                        new Date(1561989479249L)))
                                                                          .lessThanDateTime(new Date(1561989473276L))
                                                                          .greaterThanDateTime(new Date(1561989470764L))
                                                                          .equalToStateChange(Boolean.FALSE)
                                                                          .notEqualToStateChange(Boolean.TRUE)
                                                                          .equalToId("17f1a587-4182-4bf9-90c4-02db0843fefe")
                                                                          .notEqualToId("a2e5c450-7fbe-486d-87a3-df65084df3a2")
                                                                          .inIds(Arrays.asList("4ed21e2f-d9c3-46ce-8033-73a1b5cbf48d",
                                                                                               "9eaf8b28-8875-416c-8974-7ed6b589fd60",
                                                                                               "492c15af-e60e-4f96-b255-54f56b9211b1",
                                                                                               "12ff6ade-3b40-4c99-bfa5-061379b7fb98"))
                                                                          .notInIds(Arrays.asList("e5fcecd7-519e-495e-bd98-cfcc72218bc7",
                                                                                                  "6ed69baa-7e8a-49a1-b7ac-03e116e77956",
                                                                                                  "96406140-96d6-4dcc-981a-ddec06071a3a",
                                                                                                  "804a8fc1-07d3-4cf7-b2b7-f5bd4cd18145",
                                                                                                  "1e50895b-62eb-44ff-8fc8-b7272dd19da2",
                                                                                                  "301b2534-f293-4a92-8686-3c34c079a9eb",
                                                                                                  "b9eb6130-97a6-40a5-bc47-5fb259040776"))
                                                                          .equalToEventType("c863c458-6d36-4d07-878e-750f6f0bcfd3")
                                                                          .notEqualToEventType("983160a5-11ec-4df1-a348-8f34513cb859")
                                                                          .inEventTypes(Arrays.asList("fe2aa135-65f4-4878-9c37-a79a0861afe9",
                                                                                                      "c87b7d64-c3ec-4f9d-bcf7-0e244bff249d",
                                                                                                      "1ab23542-624d-4dfb-af16-28ca6eec71ac",
                                                                                                      "eb05d38d-ccfe-4658-b1bb-2299098bc61c",
                                                                                                      "7f00cefe-cb3a-4d68-89e1-51857c0a0eae",
                                                                                                      "72612e9d-682b-4cfc-9c64-42f2e7f92311",
                                                                                                      "14ec2fbc-6689-428f-8294-a7386a3c4639"))
                                                                          .notInEventTypes(Arrays.asList("d2824ce8-b6af-416a-b388-c011197309b9",
                                                                                                         "38913186-0210-4e12-a15e-be2159ff3416",
                                                                                                         "7fabd5e9-5fdc-4be3-b669-9e564d9a3c6f",
                                                                                                         "f215faa6-998e-441f-9057-521b986b6c35",
                                                                                                         "10dcee4c-68d9-4553-9328-90b52843e8aa",
                                                                                                         "b7ead601-dae1-47e3-bec2-531156a93663"));
            assertTrue(option.hasFilters());
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID, FilterOperator.EQUAL));
            assertNotNull(option.getDeviceIdFilters());
            assertEquals("ad4df21a-aed2-463c-b3f2-5f1d2c8f9684",
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDeviceIdFilters());
            assertEquals("ec968fe2-b520-4b17-99be-1e9e8591184f",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID, FilterOperator.IN));
            assertNotNull(option.getDeviceIdFilters());
            assertEquals(Arrays.asList("d066343e-1637-42ea-bc49-e80bfe7694ad", "a886f95d-b63d-496f-aa50-f3389dcde32b",
                                       "b2d01ae2-4c61-45dc-a336-1825d55f3d21", "2a043882-491a-4b60-9740-6120277f01fd"),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID,
                                                                 List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getDeviceIdFilters());
            assertEquals(Arrays.asList("0cee0abc-c34d-424d-951b-c9168bee67d0", "e6646e90-b3ad-4455-8afa-a0e85dedd473",
                                       "5934aaa8-3afe-4472-8406-82f0f03badde"),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID,
                                                                    List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("8d1f7c65-a393-4837-bd84-16a8c627d154",
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("13d47de0-e362-49e1-956b-4acad88e5274",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                       String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("fe0e9ab4-3236-4528-88aa-7633df123dbc", "f3a0b592-f29a-4fcc-be8a-31050857b7f8"),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                 List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("d6df5bc6-a4b8-43b7-91a6-456d6f6e2060", "86b07009-76b5-4093-a995-5e90dbed89cc",
                                       "761ae1b0-84e5-4497-8860-3de555c44e6d", "e99cab1d-90ee-4b5d-8eff-9bfd0499bda1",
                                       "81b8dc16-4738-4393-9a26-a9fc87456d9a", "ed7bddd7-ee53-4c61-ac1c-aa17779fbbc3",
                                       "90473c5c-7366-401c-8b94-9364e2806bf6"),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME, FilterOperator.IN));
            assertNotNull(option.getDateTimeFilters());
            assertEquals(Arrays.asList(new Date(1561989479610L), new Date(1561989477359L), new Date(1561989474449L),
                                       new Date(1561989473066L), new Date(1561989474295L), new Date(1561989479756L)),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME,
                                                                 List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME, FilterOperator.NOT_IN));
            assertNotNull(option.getDateTimeFilters());
            assertEquals(Arrays.asList(new Date(1561989479896L), new Date(1561989479249L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME,
                                                                    List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME, FilterOperator.LESS_THAN));
            assertNotNull(option.getDateTimeFilters());
            assertEquals(new Date(1561989473276L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME, FilterOperator.GREATER_THAN));
            assertNotNull(option.getDateTimeFilters());
            assertEquals(new Date(1561989470764L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE, FilterOperator.EQUAL));
            assertNotNull(option.getStateChangeFilters());
            assertEquals(Boolean.FALSE,
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE,
                                                                    Boolean.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getStateChangeFilters());
            assertEquals(Boolean.TRUE,
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE,
                                                                       Boolean.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, FilterOperator.EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("17f1a587-4182-4bf9-90c4-02db0843fefe",
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("a2e5c450-7fbe-486d-87a3-df65084df3a2",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, FilterOperator.IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("4ed21e2f-d9c3-46ce-8033-73a1b5cbf48d", "9eaf8b28-8875-416c-8974-7ed6b589fd60",
                                       "492c15af-e60e-4f96-b255-54f56b9211b1", "12ff6ade-3b40-4c99-bfa5-061379b7fb98"),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, List.class,
                                                                 option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("e5fcecd7-519e-495e-bd98-cfcc72218bc7", "6ed69baa-7e8a-49a1-b7ac-03e116e77956",
                                       "96406140-96d6-4dcc-981a-ddec06071a3a", "804a8fc1-07d3-4cf7-b2b7-f5bd4cd18145",
                                       "1e50895b-62eb-44ff-8fc8-b7272dd19da2", "301b2534-f293-4a92-8686-3c34c079a9eb",
                                       "b9eb6130-97a6-40a5-bc47-5fb259040776"),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID,
                                                                    List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE, FilterOperator.EQUAL));
            assertNotNull(option.getEventTypeFilters());
            assertEquals("c863c458-6d36-4d07-878e-750f6f0bcfd3",
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE,
                                                                    String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getEventTypeFilters());
            assertEquals("983160a5-11ec-4df1-a348-8f34513cb859",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE,
                                                                       String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE, FilterOperator.IN));
            assertNotNull(option.getEventTypeFilters());
            assertEquals(Arrays.asList("fe2aa135-65f4-4878-9c37-a79a0861afe9", "c87b7d64-c3ec-4f9d-bcf7-0e244bff249d",
                                       "1ab23542-624d-4dfb-af16-28ca6eec71ac", "eb05d38d-ccfe-4658-b1bb-2299098bc61c",
                                       "7f00cefe-cb3a-4d68-89e1-51857c0a0eae", "72612e9d-682b-4cfc-9c64-42f2e7f92311",
                                       "14ec2fbc-6689-428f-8294-a7386a3c4639"),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE,
                                                                 List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE, FilterOperator.NOT_IN));
            assertNotNull(option.getEventTypeFilters());
            assertEquals(Arrays.asList("d2824ce8-b6af-416a-b388-c011197309b9", "38913186-0210-4e12-a15e-be2159ff3416",
                                       "7fabd5e9-5fdc-4be3-b669-9e564d9a3c6f", "f215faa6-998e-441f-9057-521b986b6c35",
                                       "10dcee4c-68d9-4553-9328-90b52843e8aa", "b7ead601-dae1-47e3-bec2-531156a93663"),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE,
                                                                    List.class, option));
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEventsListOptions deviceeventslistoptions1 = new DeviceEventsListOptions(Integer.valueOf(34),
                                                                                           Long.valueOf(20),
                                                                                           Order.getDefault(),
                                                                                           "348de3e9-2941-44c6-bc93-5518978914a5",
                                                                                           null, null);
            DeviceEventsListOptions deviceeventslistoptions2 = new DeviceEventsListOptions(Integer.valueOf(34),
                                                                                           Long.valueOf(20),
                                                                                           Order.getDefault(),
                                                                                           "348de3e9-2941-44c6-bc93-5518978914a5",
                                                                                           null, null);
            assertNotNull(deviceeventslistoptions1);
            assertNotNull(deviceeventslistoptions2);
            assertNotSame(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2.hashCode(), deviceeventslistoptions1.hashCode());
            int hashCode = deviceeventslistoptions1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceeventslistoptions1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEventsListOptions deviceeventslistoptions1 = new DeviceEventsListOptions(Integer.valueOf(112),
                                                                                           Long.valueOf(17),
                                                                                           Order.getDefault(),
                                                                                           "8c96d774-30bb-49d7-ad57-1b69fde9dd91",
                                                                                           null, null);
            DeviceEventsListOptions deviceeventslistoptions2 = new DeviceEventsListOptions(Integer.valueOf(112),
                                                                                           Long.valueOf(17),
                                                                                           Order.getDefault(),
                                                                                           "8c96d774-30bb-49d7-ad57-1b69fde9dd91",
                                                                                           null, null);
            DeviceEventsListOptions deviceeventslistoptions3 = new DeviceEventsListOptions(Integer.valueOf(-122),
                                                                                           Long.valueOf(-75),
                                                                                           Order.getDefault(),
                                                                                           "f549c996-261f-4154-89d1-dac3d6d8f302",
                                                                                           null, null);
            assertNotNull(deviceeventslistoptions1);
            assertNotNull(deviceeventslistoptions2);
            assertNotNull(deviceeventslistoptions3);
            assertNotSame(deviceeventslistoptions2, deviceeventslistoptions1);
            assertNotSame(deviceeventslistoptions3, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions1, deviceeventslistoptions2);
            assertEquals(deviceeventslistoptions1, deviceeventslistoptions1);
            assertFalse(deviceeventslistoptions1.equals(null));
            assertNotEquals(deviceeventslistoptions3, deviceeventslistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
