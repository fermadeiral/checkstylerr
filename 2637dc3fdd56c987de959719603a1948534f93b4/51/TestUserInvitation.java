// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model UserInvitation.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestUserInvitation {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("de2068c9e6dbf6d9ee9c45e25da5b3ec",
                                                                new Date(1561989474603L), "297db.72adb@3f48b.fr",
                                                                new Date(1561989469988L),
                                                                "de2068c9e6dbf6d9ee9c45e25da5b3ec", null,
                                                                new Date(1561989471332L),
                                                                "de2068c9e6dbf6d9ee9c45e25da5b3ec");
            UserInvitation userinvitation2 = userinvitation1.clone();
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotSame(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("de2068c9e6dbf6d9ee9c45e25da5b3ec",
                                                                new Date(1561989476640L), "01bbe.f31aa@659c5.me",
                                                                new Date(1561989474028L),
                                                                "de2068c9e6dbf6d9ee9c45e25da5b3ec", null,
                                                                new Date(1561989477560L),
                                                                "de2068c9e6dbf6d9ee9c45e25da5b3ec");
            UserInvitation userinvitation2 = new UserInvitation("de2068c9e6dbf6d9ee9c45e25da5b3ec",
                                                                new Date(1561989476640L), "01bbe.f31aa@659c5.me",
                                                                new Date(1561989474028L),
                                                                "de2068c9e6dbf6d9ee9c45e25da5b3ec", null,
                                                                new Date(1561989477560L),
                                                                "de2068c9e6dbf6d9ee9c45e25da5b3ec");
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotSame(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation2.hashCode(), userinvitation1.hashCode());
            int hashCode = userinvitation1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, userinvitation1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        UserInvitation userinvitation = new UserInvitation("de2068c9e6dbf6d9ee9c45e25da5b3ec", new Date(1561989475718L),
                                                           "45f3c.70e37@33836.me", new Date(1561989471731L),
                                                           "de2068c9e6dbf6d9ee9c45e25da5b3ec", null,
                                                           new Date(1561989477710L),
                                                           "de2068c9e6dbf6d9ee9c45e25da5b3ec");
        assertTrue(userinvitation.isValid());
        UserInvitation userinvitationInvalid = new UserInvitation(":7;è½œ11ë¼±77ç¤«A11ìª Säœ‰ïµ¦7\u0000è¸±DD11F1H7M1Gã‡ª\u0000\u000411å£©YR111*71Vé¢¯11Yå©ˆ777ç³?ì§‘+\u0016711.?à±–",
                                                                  new Date(1561989476932L), null,
                                                                  new Date(1561989472958L),
                                                                  ":7;è½œ11ë¼±77ç¤«A11ìª Säœ‰ïµ¦7\u0000è¸±DD11F1H7M1Gã‡ª\u0000\u000411å£©YR111*71Vé¢¯11Yå©ˆ777ç³?ì§‘+\u0016711.?à±–",
                                                                  null, new Date(1561989476946L),
                                                                  ":7;è½œ11ë¼±77ç¤«A11ìª Säœ‰ïµ¦7\u0000è¸±DD11F1H7M1Gã‡ª\u0000\u000411å£©YR111*71Vé¢¯11Yå©ˆ777ç³?ì§‘+\u0016711.?à±–");
        assertFalse(userinvitationInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("de2068c9e6dbf6d9ee9c45e25da5b3ec",
                                                                new Date(1561989471657L), "e0cb2.da579@2e85b.me",
                                                                new Date(1561989472630L),
                                                                "de2068c9e6dbf6d9ee9c45e25da5b3ec", null,
                                                                new Date(1561989469403L),
                                                                "de2068c9e6dbf6d9ee9c45e25da5b3ec");
            UserInvitation userinvitation2 = new UserInvitation("de2068c9e6dbf6d9ee9c45e25da5b3ec",
                                                                new Date(1561989471657L), "e0cb2.da579@2e85b.me",
                                                                new Date(1561989472630L),
                                                                "de2068c9e6dbf6d9ee9c45e25da5b3ec", null,
                                                                new Date(1561989469403L),
                                                                "de2068c9e6dbf6d9ee9c45e25da5b3ec");
            UserInvitation userinvitation3 = new UserInvitation("de2068c9e6dbf6d9ee9c45e25da5b3ec",
                                                                new Date(1561989478248L), "c9c1b.65f63@fb1c3.me",
                                                                new Date(1561989472101L),
                                                                "de2068c9e6dbf6d9ee9c45e25da5b3ec", null,
                                                                new Date(1561989471891L),
                                                                "de2068c9e6dbf6d9ee9c45e25da5b3ec");
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotNull(userinvitation3);
            assertNotSame(userinvitation2, userinvitation1);
            assertNotSame(userinvitation3, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation1, userinvitation2);
            assertEquals(userinvitation1, userinvitation1);
            assertFalse(userinvitation1.equals(null));
            assertNotEquals(userinvitation3, userinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
