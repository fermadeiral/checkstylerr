// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model User.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestUser {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            User user1 = new User("de2068c9e6dbf6d9ee9c45e25da5b3ec", null, "835aa8c7-6406-47e5-b1b5-fa8836f9ef2c",
                                  new Date(1561989475940L), 16, null, "b194e.e3822@ef1fa.fr", false,
                                  "c598ca22-ccf7-4f63-8101-e8d87bc2734a", "de2068c9e6dbf6d9ee9c45e25da5b3ec", true,
                                  false, true, 54, null, null, "8beadff0-5d24-45f5-ba2b-2584a0e62cca", -90,
                                  "21be5532-3397-460f-aecb-a8441278f1b4", UserStatus.getDefault(), null,
                                  new Date(1561989468879L), "8u,-");
            User user2 = user1.clone();
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotSame(user2, user1);
            assertEquals(user2, user1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            User user1 = new User("de2068c9e6dbf6d9ee9c45e25da5b3ec", null, "1e00e01c-2495-4644-86fd-3c60f92bf784",
                                  new Date(1561989475004L), -102, null, "2db2b.b9491@c9878.me", false,
                                  "f793610a-750e-451a-b4fd-e7c058e60a50", "de2068c9e6dbf6d9ee9c45e25da5b3ec", true,
                                  true, false, -91, null, null, "41924eca-c3b1-4222-9048-e59026fba634", -82,
                                  "13b0496b-3607-4783-b83a-267a8de19b78", UserStatus.getDefault(), null,
                                  new Date(1561989470091L), "8u,-");
            User user2 = new User("de2068c9e6dbf6d9ee9c45e25da5b3ec", null, "1e00e01c-2495-4644-86fd-3c60f92bf784",
                                  new Date(1561989475004L), -102, null, "2db2b.b9491@c9878.me", false,
                                  "f793610a-750e-451a-b4fd-e7c058e60a50", "de2068c9e6dbf6d9ee9c45e25da5b3ec", true,
                                  true, false, -91, null, null, "41924eca-c3b1-4222-9048-e59026fba634", -82,
                                  "13b0496b-3607-4783-b83a-267a8de19b78", UserStatus.getDefault(), null,
                                  new Date(1561989470091L), "8u,-");
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotSame(user2, user1);
            assertEquals(user2, user1);
            assertEquals(user2.hashCode(), user1.hashCode());
            int hashCode = user1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, user1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        User user = new User("de2068c9e6dbf6d9ee9c45e25da5b3ec", null, "73c405b5-5e5f-45bd-aed5-e0cecc267c32",
                             new Date(1561989471272L), -49, null, "60c4c.8537f@9a4fe.fr", true,
                             "378c0153-ba83-4cb8-b187-74e9a5f4f45a", "de2068c9e6dbf6d9ee9c45e25da5b3ec", true, false,
                             true, 70, null, null, "4c387f51-0ac5-404c-bed3-efc4d9824002", -54,
                             "03d4e352-5e14-473c-b59e-f9eb1caa2cac", UserStatus.getDefault(), null,
                             new Date(1561989477042L), "8u,-");
        assertTrue(user.isValid());
        User userInvalid = new User(":7;è½œ11ë¼±77ç¤«A11ìª Säœ‰ïµ¦7\u0000è¸±DD11F1H7M1Gã‡ª\u0000\u000411å£©YR111*71Vé¢¯11Yå©ˆ777ç³?ì§‘+\u0016711.?à±–",
                                    null, "27e98439-9712-4738-bd26-e2500c93ba4d", new Date(1561989477864L), 40, null,
                                    null, false,
                                    "cc2aa95d-f27e-4be9-9cc4-aa53edb945d147ee7c47-b138-442c-ab78-f4ba9596e4ec74329903-a64f-4b9e-bd50-3fbaf5d47add",
                                    ":7;è½œ11ë¼±77ç¤«A11ìª Säœ‰ïµ¦7\u0000è¸±DD11F1H7M1Gã‡ª\u0000\u000411å£©YR111*71Vé¢¯11Yå©ˆ777ç³?ì§‘+\u0016711.?à±–",
                                    false, true, false, -47, null, null, "167f7960-97bf-44ca-aae0-e0a4dce509cb", 57,
                                    "e241ca1f-581a-44a8-ba30-30dd7f73131ff1d1a42f-51f1-4bb3-9fdf-423a243672dc6225fff3-3c6f-4377-96fe-b7c99afb16f3",
                                    UserStatus.getDefault(), null, new Date(1561989474815L),
                                    "ë»‹\u0016\u001d\u0004A\u001c4\u0019æ˜?\u000f.5å¯ 6K3Vaêšˆ)1æ»²@\u0004C\b\u0017á‚¸j7Q6-\u0018-ì•®+é¢™ ëŒ«hç¦?.-'\u0000é¦¸'0]B25B*/2å??.í…–è†¢60\u001a");
        assertFalse(userInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            User user1 = new User("de2068c9e6dbf6d9ee9c45e25da5b3ec", null, "4a37cc74-3065-48f6-96bc-84beed88ae07",
                                  new Date(1561989475690L), -72, null, "e0678.aeb7b@bef83.me", true,
                                  "dc0d6b49-f992-47b4-9d80-5ee59dda8938", "de2068c9e6dbf6d9ee9c45e25da5b3ec", false,
                                  true, true, -48, null, null, "2ecfe733-be77-462a-a1b4-4f946b12bd57", -35,
                                  "01c87024-9a98-4fae-b144-8be393ba2aec", UserStatus.getDefault(), null,
                                  new Date(1561989477600L), "8u,-");
            User user2 = new User("de2068c9e6dbf6d9ee9c45e25da5b3ec", null, "4a37cc74-3065-48f6-96bc-84beed88ae07",
                                  new Date(1561989475690L), -72, null, "e0678.aeb7b@bef83.me", true,
                                  "dc0d6b49-f992-47b4-9d80-5ee59dda8938", "de2068c9e6dbf6d9ee9c45e25da5b3ec", false,
                                  true, true, -48, null, null, "2ecfe733-be77-462a-a1b4-4f946b12bd57", -35,
                                  "01c87024-9a98-4fae-b144-8be393ba2aec", UserStatus.getDefault(), null,
                                  new Date(1561989477600L), "8u,-");
            User user3 = new User("de2068c9e6dbf6d9ee9c45e25da5b3ec", null, "000b7298-a1b8-4182-9bc1-059fcb5c0f0c",
                                  new Date(1561989475009L), 88, null, "8b11a.86f3b@6d6a9.fr", true,
                                  "06a7628c-082b-4c58-bc88-39e3fca1c734", "de2068c9e6dbf6d9ee9c45e25da5b3ec", false,
                                  true, true, 32, null, null, "dd377ff1-c5a8-4228-9626-a7f1bfec96dc", 71,
                                  "9ba981bb-1ac2-4706-9a2a-a868b1cb35df", UserStatus.getDefault(), null,
                                  new Date(1561989471482L), "8u,-");
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotNull(user3);
            assertNotSame(user2, user1);
            assertNotSame(user3, user1);
            assertEquals(user2, user1);
            assertEquals(user2, user1);
            assertEquals(user1, user2);
            assertEquals(user1, user1);
            assertFalse(user1.equals(null));
            assertNotEquals(user3, user1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
