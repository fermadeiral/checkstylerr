// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.deviceupdate.model;

import static org.junit.Assert.*;

import com.arm.mbed.cloud.sdk.common.Order;
import com.arm.mbed.cloud.sdk.common.listing.ListOptionsEncoder;
import com.arm.mbed.cloud.sdk.common.listing.filtering.FilterOperator;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import org.junit.Test;

/**
 * Unit tests for Model FirmwareManifestListOptions.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestFirmwareManifestListOptions {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            FirmwareManifestListOptions firmwaremanifestlistoptions1 = new FirmwareManifestListOptions(Integer.valueOf(98),
                                                                                                       Long.valueOf(-29),
                                                                                                       Order.getDefault(),
                                                                                                       "ce8e2a25-4c1f-4a59-aab1-0a7df207d3b0",
                                                                                                       null, null);
            FirmwareManifestListOptions firmwaremanifestlistoptions2 = firmwaremanifestlistoptions1.clone();
            assertNotNull(firmwaremanifestlistoptions1);
            assertNotNull(firmwaremanifestlistoptions2);
            assertNotSame(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the filters method.
     */
    @SuppressWarnings({ "boxing", "resource" })
    @Test
    public void testFilters() {
        try {
            FirmwareManifestListOptions option = new FirmwareManifestListOptions().inCreatedAts(Arrays.asList(new Date(1561989472599L),
                                                                                                              new Date(1561989475386L),
                                                                                                              new Date(1561989473580L)))
                                                                                  .notInCreatedAts(Arrays.asList(new Date(1561989474205L),
                                                                                                                 new Date(1561989479880L),
                                                                                                                 new Date(1561989479893L),
                                                                                                                 new Date(1561989476874L),
                                                                                                                 new Date(1561989476170L)))
                                                                                  .lessThanCreatedAt(new Date(1561989472687L))
                                                                                  .greaterThanCreatedAt(new Date(1561989470915L))
                                                                                  .equalToName("ae0493cb-c328-41d5-ab95-1d21b1c6c475")
                                                                                  .notEqualToName("403608e0-6744-4ddb-9777-b424123f2ba7")
                                                                                  .inNames(Arrays.asList("bf9dcf93-d042-42ac-84e1-84629e0c0077"))
                                                                                  .notInNames(Arrays.asList("b77489b8-f394-49c1-9a78-eb917c3c666e",
                                                                                                            "16c8afd8-3422-4ef0-87dc-5807829b90f5",
                                                                                                            "cb5ecc52-5faa-4ec6-9b98-77557575b00a",
                                                                                                            "5e512ad0-90fd-44cc-8f62-d6059b439c66",
                                                                                                            "07c1d808-f8d2-4947-9574-436f0ce6b447",
                                                                                                            "39e70fc4-ffe4-43d9-8474-9b319c3b71bd",
                                                                                                            "d28feddd-25cd-44cf-a2e4-ae203142b125",
                                                                                                            "0a1ed444-dfbb-47e4-87a2-8925f894cb00"))
                                                                                  .equalToId("0cf316c4-3c27-4f87-b0d1-9e96067ef002")
                                                                                  .notEqualToId("f73dfa87-a1ec-40e9-ab11-2bd7f2ec41de")
                                                                                  .inIds(Arrays.asList("217a553f-c08d-42c2-b30f-3a53e3ef9166",
                                                                                                       "f243776e-7c81-4db4-a2ab-c808a262e16e"))
                                                                                  .notInIds(Arrays.asList("a43c75ed-7d21-410e-97fd-38622c6cac55",
                                                                                                          "936f89c1-070c-4da7-81f2-419445301ca5",
                                                                                                          "947d07a7-6cc2-4cb0-8bee-bed6f9663bf3",
                                                                                                          "a4d8f923-52b7-4f6e-90cc-ca98f2e19399",
                                                                                                          "52c1a260-ccf1-4e3b-84fc-1cbf269fdaa2",
                                                                                                          "c312dff1-8dec-4b26-a708-57238648ccb0",
                                                                                                          "53644e9a-7fd3-4b07-807a-36f185806efc"))
                                                                                  .equalToDatafileUrl("ea94d4bf-ca5a-42c9-aef3-6f073be1aca4")
                                                                                  .notEqualToDatafileUrl("e73d4a7f-c6bb-4ae9-b0bc-5b48a40c99f6")
                                                                                  .inDatafileUrls(Arrays.asList("f8a8372a-3a93-46f8-aa79-87f42c2cbad3",
                                                                                                                "ecf11f2c-dd9a-4252-8f80-4acab9b549b5",
                                                                                                                "4c7d9c19-9408-48d1-a571-d5fcd6c103fb",
                                                                                                                "d44b2f6e-84db-446d-ba9f-b7ede1395366",
                                                                                                                "0a65692f-97d8-4236-ba7a-24d6c1e86835"))
                                                                                  .notInDatafileUrls(Arrays.asList("12de349a-fa4f-4ea1-8d94-73dc5a605134",
                                                                                                                   "e35ffbfe-9386-4fea-93e3-6f6c7885eaab",
                                                                                                                   "902fda78-e9e3-4c51-87e4-634fcb0bfbb9",
                                                                                                                   "a8819f2b-0455-4f1d-b5cc-7a3d49b1e62c",
                                                                                                                   "45534875-ee93-4afb-b8a8-ae6c092565b3",
                                                                                                                   "4a1ad946-ed0e-4c01-a42e-e184d2274d04"))
                                                                                  .equalToDatafileSize(Long.valueOf(92))
                                                                                  .notEqualToDatafileSize(Long.valueOf(-102))
                                                                                  .inDatafileSizes(Arrays.asList(Long.valueOf(-111),
                                                                                                                 Long.valueOf(-22),
                                                                                                                 Long.valueOf(46),
                                                                                                                 Long.valueOf(-38),
                                                                                                                 Long.valueOf(75),
                                                                                                                 Long.valueOf(114),
                                                                                                                 Long.valueOf(53),
                                                                                                                 Long.valueOf(28)))
                                                                                  .notInDatafileSizes(Arrays.asList(Long.valueOf(103),
                                                                                                                    Long.valueOf(-60),
                                                                                                                    Long.valueOf(-118)))
                                                                                  .equalToDeviceClass("f34d3822-2460-4d1a-9ff2-0c24d7017ef1")
                                                                                  .notEqualToDeviceClass("945c15ec-d425-4041-a8c1-083595d51304")
                                                                                  .inDeviceClass(Arrays.asList("ae803eec-ea24-4874-b4c5-e7a86ac10448",
                                                                                                               "8db645e2-e5be-47a5-9473-1c387533d494",
                                                                                                               "626d1df6-eab7-43b1-b9d0-370fb37c0c5e"))
                                                                                  .notInDeviceClass(Arrays.asList("fb744ec1-3078-4be9-a14b-ba55cb6dcaa0",
                                                                                                                  "697bd5af-fbdf-46f6-bb99-e95faa4fe524",
                                                                                                                  "6ffdb2e8-3e6e-4115-9d60-8393ac80f92b",
                                                                                                                  "1d32de22-effc-48f0-a2a0-ba244b3a1dab",
                                                                                                                  "9d5ced05-2272-4ad8-8679-76f44a2e3cb9",
                                                                                                                  "ed4dc81f-5b53-47e6-8305-a1ec0a6e0df6",
                                                                                                                  "b8e58712-4e12-4810-893e-eb4a2f68a675",
                                                                                                                  "2350f5a9-7917-4e08-a081-d439ba2edd13"))
                                                                                  .inTimestamps(Arrays.asList(new Date(1561989475976L),
                                                                                                              new Date(1561989479042L)))
                                                                                  .notInTimestamps(Arrays.asList(new Date(1561989478335L),
                                                                                                                 new Date(1561989474284L),
                                                                                                                 new Date(1561989477194L),
                                                                                                                 new Date(1561989479589L),
                                                                                                                 new Date(1561989479031L),
                                                                                                                 new Date(1561989470661L),
                                                                                                                 new Date(1561989474448L),
                                                                                                                 new Date(1561989471338L),
                                                                                                                 new Date(1561989479628L)))
                                                                                  .lessThanTimestamp(new Date(1561989477958L))
                                                                                  .greaterThanTimestamp(new Date(1561989471399L))
                                                                                  .inUpdatedAts(Arrays.asList(new Date(1561989474931L),
                                                                                                              new Date(1561989480125L),
                                                                                                              new Date(1561989472953L)))
                                                                                  .notInUpdatedAts(Arrays.asList(new Date(1561989475551L),
                                                                                                                 new Date(1561989474254L),
                                                                                                                 new Date(1561989474725L),
                                                                                                                 new Date(1561989474421L),
                                                                                                                 new Date(1561989474269L),
                                                                                                                 new Date(1561989472847L),
                                                                                                                 new Date(1561989471277L),
                                                                                                                 new Date(1561989477751L)))
                                                                                  .lessThanUpdatedAt(new Date(1561989472303L))
                                                                                  .greaterThanUpdatedAt(new Date(1561989474659L))
                                                                                  .equalToDescription("ede18b67-8870-4403-80e2-6bc4835f0e7e")
                                                                                  .notEqualToDescription("d5f3cc5f-01ee-47f7-9a1d-db0b6e1c6130")
                                                                                  .inDescriptions(Arrays.asList("a5a147b0-126b-420a-ac55-0b930c4e3dec",
                                                                                                                "997a4ed0-ecdc-458f-92e4-60495a1979c9",
                                                                                                                "4123b35c-0956-41bd-8920-b84daa353b23"))
                                                                                  .notInDescriptions(Arrays.asList("26e46027-1d98-4200-b65a-d18fec8fe66d",
                                                                                                                   "0de55b76-4deb-4633-ac6d-1819bcff8b13"));
            assertTrue(option.hasFilters());
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1561989472599L), new Date(1561989475386L), new Date(1561989473580L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1561989474205L), new Date(1561989479880L), new Date(1561989479893L),
                                       new Date(1561989476874L), new Date(1561989476170L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                        FilterOperator.LESS_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1561989472687L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1561989470915L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME, FilterOperator.EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("ae0493cb-c328-41d5-ab95-1d21b1c6c475",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("403608e0-6744-4ddb-9777-b424123f2ba7",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME, FilterOperator.IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("bf9dcf93-d042-42ac-84e1-84629e0c0077"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("b77489b8-f394-49c1-9a78-eb917c3c666e", "16c8afd8-3422-4ef0-87dc-5807829b90f5",
                                       "cb5ecc52-5faa-4ec6-9b98-77557575b00a", "5e512ad0-90fd-44cc-8f62-d6059b439c66",
                                       "07c1d808-f8d2-4947-9574-436f0ce6b447", "39e70fc4-ffe4-43d9-8474-9b319c3b71bd",
                                       "d28feddd-25cd-44cf-a2e4-ae203142b125", "0a1ed444-dfbb-47e4-87a2-8925f894cb00"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID, FilterOperator.EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("0cf316c4-3c27-4f87-b0d1-9e96067ef002",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("f73dfa87-a1ec-40e9-ab11-2bd7f2ec41de",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID, FilterOperator.IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("217a553f-c08d-42c2-b30f-3a53e3ef9166", "f243776e-7c81-4db4-a2ab-c808a262e16e"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("a43c75ed-7d21-410e-97fd-38622c6cac55", "936f89c1-070c-4da7-81f2-419445301ca5",
                                       "947d07a7-6cc2-4cb0-8bee-bed6f9663bf3", "a4d8f923-52b7-4f6e-90cc-ca98f2e19399",
                                       "52c1a260-ccf1-4e3b-84fc-1cbf269fdaa2", "c312dff1-8dec-4b26-a708-57238648ccb0",
                                       "53644e9a-7fd3-4b07-807a-36f185806efc"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("ea94d4bf-ca5a-42c9-aef3-6f073be1aca4",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("e73d4a7f-c6bb-4ae9-b0bc-5b48a40c99f6",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("f8a8372a-3a93-46f8-aa79-87f42c2cbad3", "ecf11f2c-dd9a-4252-8f80-4acab9b549b5",
                                       "4c7d9c19-9408-48d1-a571-d5fcd6c103fb", "d44b2f6e-84db-446d-ba9f-b7ede1395366",
                                       "0a65692f-97d8-4236-ba7a-24d6c1e86835"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("12de349a-fa4f-4ea1-8d94-73dc5a605134", "e35ffbfe-9386-4fea-93e3-6f6c7885eaab",
                                       "902fda78-e9e3-4c51-87e4-634fcb0bfbb9", "a8819f2b-0455-4f1d-b5cc-7a3d49b1e62c",
                                       "45534875-ee93-4afb-b8a8-ae6c092565b3", "4a1ad946-ed0e-4c01-a42e-e184d2274d04"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(92),
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    Long.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(-102),
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                       Long.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(-111), Long.valueOf(-22), Long.valueOf(46), Long.valueOf(-38),
                                       Long.valueOf(75), Long.valueOf(114), Long.valueOf(53), Long.valueOf(28)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                        FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(103), Long.valueOf(-60), Long.valueOf(-118)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS, FilterOperator.EQUAL));
            assertNotNull(option.getDeviceClassFilters());
            assertEquals("f34d3822-2460-4d1a-9ff2-0c24d7017ef1",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDeviceClassFilters());
            assertEquals("945c15ec-d425-4041-a8c1-083595d51304",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS, FilterOperator.IN));
            assertNotNull(option.getDeviceClassFilters());
            assertEquals(Arrays.asList("ae803eec-ea24-4874-b4c5-e7a86ac10448", "8db645e2-e5be-47a5-9473-1c387533d494",
                                       "626d1df6-eab7-43b1-b9d0-370fb37c0c5e"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS, FilterOperator.NOT_IN));
            assertNotNull(option.getDeviceClassFilters());
            assertEquals(Arrays.asList("fb744ec1-3078-4be9-a14b-ba55cb6dcaa0", "697bd5af-fbdf-46f6-bb99-e95faa4fe524",
                                       "6ffdb2e8-3e6e-4115-9d60-8393ac80f92b", "1d32de22-effc-48f0-a2a0-ba244b3a1dab",
                                       "9d5ced05-2272-4ad8-8679-76f44a2e3cb9", "ed4dc81f-5b53-47e6-8305-a1ec0a6e0df6",
                                       "b8e58712-4e12-4810-893e-eb4a2f68a675", "2350f5a9-7917-4e08-a081-d439ba2edd13"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP, FilterOperator.IN));
            assertNotNull(option.getTimestampFilters());
            assertEquals(Arrays.asList(new Date(1561989475976L), new Date(1561989479042L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP, FilterOperator.NOT_IN));
            assertNotNull(option.getTimestampFilters());
            assertEquals(Arrays.asList(new Date(1561989478335L), new Date(1561989474284L), new Date(1561989477194L),
                                       new Date(1561989479589L), new Date(1561989479031L), new Date(1561989470661L),
                                       new Date(1561989474448L), new Date(1561989471338L), new Date(1561989479628L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP, FilterOperator.LESS_THAN));
            assertNotNull(option.getTimestampFilters());
            assertEquals(new Date(1561989477958L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getTimestampFilters());
            assertEquals(new Date(1561989471399L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1561989474931L), new Date(1561989480125L), new Date(1561989472953L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1561989475551L), new Date(1561989474254L), new Date(1561989474725L),
                                       new Date(1561989474421L), new Date(1561989474269L), new Date(1561989472847L),
                                       new Date(1561989471277L), new Date(1561989477751L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                        FilterOperator.LESS_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1561989472303L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1561989474659L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("ede18b67-8870-4403-80e2-6bc4835f0e7e",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("d5f3cc5f-01ee-47f7-9a1d-db0b6e1c6130",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("a5a147b0-126b-420a-ac55-0b930c4e3dec", "997a4ed0-ecdc-458f-92e4-60495a1979c9",
                                       "4123b35c-0956-41bd-8920-b84daa353b23"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("26e46027-1d98-4200-b65a-d18fec8fe66d", "0de55b76-4deb-4633-ac6d-1819bcff8b13"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    List.class, option));
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            FirmwareManifestListOptions firmwaremanifestlistoptions1 = new FirmwareManifestListOptions(Integer.valueOf(89),
                                                                                                       Long.valueOf(54),
                                                                                                       Order.getDefault(),
                                                                                                       "21c6b137-1de9-4d36-8d1c-0302fdbf20d2",
                                                                                                       null, null);
            FirmwareManifestListOptions firmwaremanifestlistoptions2 = new FirmwareManifestListOptions(Integer.valueOf(89),
                                                                                                       Long.valueOf(54),
                                                                                                       Order.getDefault(),
                                                                                                       "21c6b137-1de9-4d36-8d1c-0302fdbf20d2",
                                                                                                       null, null);
            assertNotNull(firmwaremanifestlistoptions1);
            assertNotNull(firmwaremanifestlistoptions2);
            assertNotSame(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2.hashCode(), firmwaremanifestlistoptions1.hashCode());
            int hashCode = firmwaremanifestlistoptions1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, firmwaremanifestlistoptions1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            FirmwareManifestListOptions firmwaremanifestlistoptions1 = new FirmwareManifestListOptions(Integer.valueOf(-3),
                                                                                                       Long.valueOf(24),
                                                                                                       Order.getDefault(),
                                                                                                       "b7b5129e-b0eb-4b0f-a15b-4cffa1649de9",
                                                                                                       null, null);
            FirmwareManifestListOptions firmwaremanifestlistoptions2 = new FirmwareManifestListOptions(Integer.valueOf(-3),
                                                                                                       Long.valueOf(24),
                                                                                                       Order.getDefault(),
                                                                                                       "b7b5129e-b0eb-4b0f-a15b-4cffa1649de9",
                                                                                                       null, null);
            FirmwareManifestListOptions firmwaremanifestlistoptions3 = new FirmwareManifestListOptions(Integer.valueOf(26),
                                                                                                       Long.valueOf(34),
                                                                                                       Order.getDefault(),
                                                                                                       "7537656f-838c-4371-9fcc-89585222a5b2",
                                                                                                       null, null);
            assertNotNull(firmwaremanifestlistoptions1);
            assertNotNull(firmwaremanifestlistoptions2);
            assertNotNull(firmwaremanifestlistoptions3);
            assertNotSame(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertNotSame(firmwaremanifestlistoptions3, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions1, firmwaremanifestlistoptions2);
            assertEquals(firmwaremanifestlistoptions1, firmwaremanifestlistoptions1);
            assertFalse(firmwaremanifestlistoptions1.equals(null));
            assertNotEquals(firmwaremanifestlistoptions3, firmwaremanifestlistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
