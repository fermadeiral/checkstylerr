// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model ParentAccount.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestParentAccount {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("3b41e.cc641@543eb.me",
                                                             "db541a71-b813-4f41-8b95-1cc73a073ffb",
                                                             "de2068c9e6dbf6d9ee9c45e25da5b3ec");
            ParentAccount parentaccount2 = parentaccount1.clone();
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotSame(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("2c5e1.b3bca@a092c.fr",
                                                             "e5cc0b87-9444-4898-aa0d-bb2dbd06e281",
                                                             "de2068c9e6dbf6d9ee9c45e25da5b3ec");
            ParentAccount parentaccount2 = new ParentAccount("2c5e1.b3bca@a092c.fr",
                                                             "e5cc0b87-9444-4898-aa0d-bb2dbd06e281",
                                                             "de2068c9e6dbf6d9ee9c45e25da5b3ec");
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotSame(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount2.hashCode(), parentaccount1.hashCode());
            int hashCode = parentaccount1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, parentaccount1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ParentAccount parentaccount = new ParentAccount("35afb.618f5@ea722.me", "24352841-c2be-4e8e-a252-22a1eea82c07",
                                                        "de2068c9e6dbf6d9ee9c45e25da5b3ec");
        assertTrue(parentaccount.isValid());
        ParentAccount parentaccountInvalid = new ParentAccount("çŸ†á¢µå­£&á’•â¹²ï—?êµ¥)>ã²–á£¢ìœ®Ö‚\u0018ß¼\u0001è?£åŒ·ï²ŽÆ™à£‚ê†¯æ†•Ø?\u000f\u0000è¸??Ëƒ\u0017à®¦Ø¢à³? >8àª•ï«¶é­©>\u0000é©Ž/Lä·½ï¾¯ç´…\u0011\u0001ï¨?á¼¥ç ²ï?Šé¯°ï¹–á£„ê—²\u0000ê«°åž?åº¼é‡§îµ˜",
                                                               "7bae65c0-4dcc-4b7b-8bb9-550c8d425c6e673ef4db-bed2-4602-bc79-c9c352cacbf5226fd4d3-5c73-4a89-ac5a-0fab21858fb0",
                                                               ":7;è½œ11ë¼±77ç¤«A11ìª Säœ‰ïµ¦7\u0000è¸±DD11F1H7M1Gã‡ª\u0000\u000411å£©YR111*71Vé¢¯11Yå©ˆ777ç³?ì§‘+\u0016711.?à±–");
        assertFalse(parentaccountInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("1d11c.1d226@e82da.fr",
                                                             "18e199a9-6a2c-49aa-b6bf-2cfdf2ef0854",
                                                             "de2068c9e6dbf6d9ee9c45e25da5b3ec");
            ParentAccount parentaccount2 = new ParentAccount("1d11c.1d226@e82da.fr",
                                                             "18e199a9-6a2c-49aa-b6bf-2cfdf2ef0854",
                                                             "de2068c9e6dbf6d9ee9c45e25da5b3ec");
            ParentAccount parentaccount3 = new ParentAccount("19678.93de2@0ddde.me",
                                                             "1783b09d-883c-46b9-ba08-26c169c15b87",
                                                             "de2068c9e6dbf6d9ee9c45e25da5b3ec");
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotNull(parentaccount3);
            assertNotSame(parentaccount2, parentaccount1);
            assertNotSame(parentaccount3, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount1, parentaccount2);
            assertEquals(parentaccount1, parentaccount1);
            assertFalse(parentaccount1.equals(null));
            assertNotEquals(parentaccount3, parentaccount1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
