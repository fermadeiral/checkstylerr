// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEnrollmentDenial.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEnrollmentDenial {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("de2068c9e6dbf6d9ee9c45e25da5b3ec",
                                                                                        new Date(1561989473766L),
                                                                                        "12621480-2fa4-4852-ac1a-c67527bf0aa9",
                                                                                        "de2068c9e6dbf6d9ee9c45e25da5b3ec",
                                                                                        "de2068c9e6dbf6d9ee9c45e25da5b3ec");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = deviceenrollmentdenial1.clone();
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("de2068c9e6dbf6d9ee9c45e25da5b3ec",
                                                                                        new Date(1561989471603L),
                                                                                        "802ec5d1-afdb-405e-8fe6-fb8a79fac66b",
                                                                                        "de2068c9e6dbf6d9ee9c45e25da5b3ec",
                                                                                        "de2068c9e6dbf6d9ee9c45e25da5b3ec");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = new DeviceEnrollmentDenial("de2068c9e6dbf6d9ee9c45e25da5b3ec",
                                                                                        new Date(1561989471603L),
                                                                                        "802ec5d1-afdb-405e-8fe6-fb8a79fac66b",
                                                                                        "de2068c9e6dbf6d9ee9c45e25da5b3ec",
                                                                                        "de2068c9e6dbf6d9ee9c45e25da5b3ec");
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2.hashCode(), deviceenrollmentdenial1.hashCode());
            int hashCode = deviceenrollmentdenial1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceenrollmentdenial1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEnrollmentDenial deviceenrollmentdenial = new DeviceEnrollmentDenial("de2068c9e6dbf6d9ee9c45e25da5b3ec",
                                                                                   new Date(1561989469305L),
                                                                                   "c6a35f9b-f73f-4c7d-ab03-1b476b7f0c68",
                                                                                   "de2068c9e6dbf6d9ee9c45e25da5b3ec",
                                                                                   "de2068c9e6dbf6d9ee9c45e25da5b3ec");
        assertTrue(deviceenrollmentdenial.isValid());
        DeviceEnrollmentDenial deviceenrollmentdenialInvalid = new DeviceEnrollmentDenial(":7;è½œ11ë¼±77ç¤«A11ìª Säœ‰ïµ¦7\u0000è¸±DD11F1H7M1Gã‡ª\u0000\u000411å£©YR111*71Vé¢¯11Yå©ˆ777ç³?ì§‘+\u0016711.?à±–",
                                                                                          new Date(1561989468993L),
                                                                                          "9cb18a67-3808-44f7-adbd-d86aedf04f92",
                                                                                          ":7;è½œ11ë¼±77ç¤«A11ìª Säœ‰ïµ¦7\u0000è¸±DD11F1H7M1Gã‡ª\u0000\u000411å£©YR111*71Vé¢¯11Yå©ˆ777ç³?ì§‘+\u0016711.?à±–",
                                                                                          ":7;è½œ11ë¼±77ç¤«A11ìª Säœ‰ïµ¦7\u0000è¸±DD11F1H7M1Gã‡ª\u0000\u000411å£©YR111*71Vé¢¯11Yå©ˆ777ç³?ì§‘+\u0016711.?à±–");
        assertFalse(deviceenrollmentdenialInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("de2068c9e6dbf6d9ee9c45e25da5b3ec",
                                                                                        new Date(1561989474002L),
                                                                                        "f7dba314-31ad-4375-bb74-5859888c329d",
                                                                                        "de2068c9e6dbf6d9ee9c45e25da5b3ec",
                                                                                        "de2068c9e6dbf6d9ee9c45e25da5b3ec");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = new DeviceEnrollmentDenial("de2068c9e6dbf6d9ee9c45e25da5b3ec",
                                                                                        new Date(1561989474002L),
                                                                                        "f7dba314-31ad-4375-bb74-5859888c329d",
                                                                                        "de2068c9e6dbf6d9ee9c45e25da5b3ec",
                                                                                        "de2068c9e6dbf6d9ee9c45e25da5b3ec");
            DeviceEnrollmentDenial deviceenrollmentdenial3 = new DeviceEnrollmentDenial("de2068c9e6dbf6d9ee9c45e25da5b3ec",
                                                                                        new Date(1561989475809L),
                                                                                        "4362d921-c14f-4d32-b1ab-3d67beaf0363",
                                                                                        "de2068c9e6dbf6d9ee9c45e25da5b3ec",
                                                                                        "de2068c9e6dbf6d9ee9c45e25da5b3ec");
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotNull(deviceenrollmentdenial3);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertNotSame(deviceenrollmentdenial3, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial1, deviceenrollmentdenial2);
            assertEquals(deviceenrollmentdenial1, deviceenrollmentdenial1);
            assertFalse(deviceenrollmentdenial1.equals(null));
            assertNotEquals(deviceenrollmentdenial3, deviceenrollmentdenial1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
