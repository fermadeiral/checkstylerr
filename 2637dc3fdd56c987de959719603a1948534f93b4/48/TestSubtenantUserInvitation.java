// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantUserInvitation.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantUserInvitation {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantUserInvitation subtenantuserinvitation1 = new SubtenantUserInvitation("de2068c9e6dbf6d9ee9c45e25da5b3ec",
                                                                                           new Date(1561989471204L),
                                                                                           "76a00.57a8a@f02a4.fr",
                                                                                           new Date(1561989470143L),
                                                                                           "de2068c9e6dbf6d9ee9c45e25da5b3ec",
                                                                                           null,
                                                                                           new Date(1561989471664L),
                                                                                           "de2068c9e6dbf6d9ee9c45e25da5b3ec");
            SubtenantUserInvitation subtenantuserinvitation2 = subtenantuserinvitation1.clone();
            assertNotNull(subtenantuserinvitation1);
            assertNotNull(subtenantuserinvitation2);
            assertNotSame(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantUserInvitation subtenantuserinvitation1 = new SubtenantUserInvitation("de2068c9e6dbf6d9ee9c45e25da5b3ec",
                                                                                           new Date(1561989471698L),
                                                                                           "17052.2abef@3da3a.me",
                                                                                           new Date(1561989470803L),
                                                                                           "de2068c9e6dbf6d9ee9c45e25da5b3ec",
                                                                                           null,
                                                                                           new Date(1561989474100L),
                                                                                           "de2068c9e6dbf6d9ee9c45e25da5b3ec");
            SubtenantUserInvitation subtenantuserinvitation2 = new SubtenantUserInvitation("de2068c9e6dbf6d9ee9c45e25da5b3ec",
                                                                                           new Date(1561989471698L),
                                                                                           "17052.2abef@3da3a.me",
                                                                                           new Date(1561989470803L),
                                                                                           "de2068c9e6dbf6d9ee9c45e25da5b3ec",
                                                                                           null,
                                                                                           new Date(1561989474100L),
                                                                                           "de2068c9e6dbf6d9ee9c45e25da5b3ec");
            assertNotNull(subtenantuserinvitation1);
            assertNotNull(subtenantuserinvitation2);
            assertNotSame(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2.hashCode(), subtenantuserinvitation1.hashCode());
            int hashCode = subtenantuserinvitation1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantuserinvitation1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantUserInvitation subtenantuserinvitation = new SubtenantUserInvitation("de2068c9e6dbf6d9ee9c45e25da5b3ec",
                                                                                      new Date(1561989469490L),
                                                                                      "5fab9.e8875@49c96.me",
                                                                                      new Date(1561989470092L),
                                                                                      "de2068c9e6dbf6d9ee9c45e25da5b3ec",
                                                                                      null, new Date(1561989476497L),
                                                                                      "de2068c9e6dbf6d9ee9c45e25da5b3ec");
        assertTrue(subtenantuserinvitation.isValid());
        SubtenantUserInvitation subtenantuserinvitationInvalid = new SubtenantUserInvitation(null,
                                                                                             new Date(1561989477838L),
                                                                                             null,
                                                                                             new Date(1561989473415L),
                                                                                             ":7;è½œ11ë¼±77ç¤«A11ìª Säœ‰ïµ¦7\u0000è¸±DD11F1H7M1Gã‡ª\u0000\u000411å£©YR111*71Vé¢¯11Yå©ˆ777ç³?ì§‘+\u0016711.?à±–",
                                                                                             null,
                                                                                             new Date(1561989471231L),
                                                                                             ":7;è½œ11ë¼±77ç¤«A11ìª Säœ‰ïµ¦7\u0000è¸±DD11F1H7M1Gã‡ª\u0000\u000411å£©YR111*71Vé¢¯11Yå©ˆ777ç³?ì§‘+\u0016711.?à±–");
        assertFalse(subtenantuserinvitationInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantUserInvitation subtenantuserinvitation1 = new SubtenantUserInvitation("de2068c9e6dbf6d9ee9c45e25da5b3ec",
                                                                                           new Date(1561989474455L),
                                                                                           "4bac9.f294a@3c41e.me",
                                                                                           new Date(1561989477990L),
                                                                                           "de2068c9e6dbf6d9ee9c45e25da5b3ec",
                                                                                           null,
                                                                                           new Date(1561989472342L),
                                                                                           "de2068c9e6dbf6d9ee9c45e25da5b3ec");
            SubtenantUserInvitation subtenantuserinvitation2 = new SubtenantUserInvitation("de2068c9e6dbf6d9ee9c45e25da5b3ec",
                                                                                           new Date(1561989474455L),
                                                                                           "4bac9.f294a@3c41e.me",
                                                                                           new Date(1561989477990L),
                                                                                           "de2068c9e6dbf6d9ee9c45e25da5b3ec",
                                                                                           null,
                                                                                           new Date(1561989472342L),
                                                                                           "de2068c9e6dbf6d9ee9c45e25da5b3ec");
            SubtenantUserInvitation subtenantuserinvitation3 = new SubtenantUserInvitation("de2068c9e6dbf6d9ee9c45e25da5b3ec",
                                                                                           new Date(1561989470019L),
                                                                                           "8453b.0fb89@5ce07.me",
                                                                                           new Date(1561989470620L),
                                                                                           "de2068c9e6dbf6d9ee9c45e25da5b3ec",
                                                                                           null,
                                                                                           new Date(1561989475377L),
                                                                                           "de2068c9e6dbf6d9ee9c45e25da5b3ec");
            assertNotNull(subtenantuserinvitation1);
            assertNotNull(subtenantuserinvitation2);
            assertNotNull(subtenantuserinvitation3);
            assertNotSame(subtenantuserinvitation2, subtenantuserinvitation1);
            assertNotSame(subtenantuserinvitation3, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation1, subtenantuserinvitation2);
            assertEquals(subtenantuserinvitation1, subtenantuserinvitation1);
            assertFalse(subtenantuserinvitation1.equals(null));
            assertNotEquals(subtenantuserinvitation3, subtenantuserinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
