// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.deviceupdate.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model FirmwareImage.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestFirmwareImage {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            FirmwareImage firmwareimage1 = new FirmwareImage(new Date(1561989474703L),
                                                             "a9c91367-64ed-46de-a68a-b7910c1755ff", 98,
                                                             "f6bd5ec1-a2e3-4d3d-bb52-3ebe926f2085",
                                                             "aba36921-1be7-446d-b54f-0399cb410d83",
                                                             "e33fdce1-61a3-447b-a0a6-3529ca250bff",
                                                             "9bb69520-d7c8-4951-a68a-31e8b3de461c",
                                                             new Date(1561989472897L));
            FirmwareImage firmwareimage2 = firmwareimage1.clone();
            assertNotNull(firmwareimage1);
            assertNotNull(firmwareimage2);
            assertNotSame(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage2, firmwareimage1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            FirmwareImage firmwareimage1 = new FirmwareImage(new Date(1561989475635L),
                                                             "67632143-7f9d-45a6-be6c-9afbcfd21adb", -22,
                                                             "8cb6ea45-f254-4d03-b7ec-d5804876b853",
                                                             "28f02d87-c6fb-41bc-834f-c71435a2f71c",
                                                             "d64ab162-1a35-44be-a89a-813e27f00966",
                                                             "076ba26b-52d6-4d87-9d00-9b59b8e395db",
                                                             new Date(1561989475716L));
            FirmwareImage firmwareimage2 = new FirmwareImage(new Date(1561989475635L),
                                                             "67632143-7f9d-45a6-be6c-9afbcfd21adb", -22,
                                                             "8cb6ea45-f254-4d03-b7ec-d5804876b853",
                                                             "28f02d87-c6fb-41bc-834f-c71435a2f71c",
                                                             "d64ab162-1a35-44be-a89a-813e27f00966",
                                                             "076ba26b-52d6-4d87-9d00-9b59b8e395db",
                                                             new Date(1561989475716L));
            assertNotNull(firmwareimage1);
            assertNotNull(firmwareimage2);
            assertNotSame(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage2.hashCode(), firmwareimage1.hashCode());
            int hashCode = firmwareimage1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, firmwareimage1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        FirmwareImage firmwareimage = new FirmwareImage(new Date(1561989474948L),
                                                        "da3b3062-00b9-44aa-b37e-0aee2dfa1d41", 3,
                                                        "3cb44ca8-1ed1-4c15-b368-1b47fc54014f",
                                                        "ec60fc23-db08-456f-81de-af2de4d3eceb",
                                                        "07e15146-a846-4c46-9ff3-3247f9a4751b",
                                                        "7a698582-0816-4f32-acf7-87a65199032b",
                                                        new Date(1561989474706L));
        assertTrue(firmwareimage.isValid());
        FirmwareImage firmwareimageInvalid = new FirmwareImage(new Date(1561989471946L),
                                                               "de0c86f5-e148-41e2-a208-ff0acc3fb9b9", 89,
                                                               "b69cf0d4-9054-43cc-aa63-d9c818a4fd07",
                                                               "0807dbae-7039-4744-9c36-1f28f32055bac98137fd-33d3-4d2e-9fbd-5be59e440bb9d364e4ef-3b68-41b6-bcab-cf35ad503dc9fd9758b9-ac5f-4c1c-8eda-b6d88e8cdb6d17237689-1aa6-4e0c-ba4b-149532a13a1018b0bc94-19ce-46c1-a26a-6d6b307f70c2d2fb6203-d93b-4123-b3d2-b7d5252dccb6332c6b70-17f5-4427-a624-65bb3af3b1816c25e9af-aee0-4af7-b1f5-08dbd37937e24be13c6e-b79e-4be1-9de8-197cef61979d99973f63-9672-4742-a048-025e5d90330278133efc-cbe2-45fa-bfb2-96c227a0cd819c4e1614-5b17-45e1-be84-5f63329d6f6f273b28fd-6607-4209-8e7e-0228f98a3d9029256fa7-bce3-467a-8f7f-c5173fef0be00e21dabb-000c-4d88-8b9f-a5291c71a64fc10961ac-4f2f-45df-9326-2d275f2dbd8233b827e6-64e3-43b8-915e-62077b57edf0e7f66a9d-a082-4f1d-8d1b-4f2b236a71ac26e8de95-830c-4e88-9ee7-fe188bad5b336fbcee00-56ee-48b2-a1d6-b0485a70005741276733-9e2f-472a-a7e6-19305aeefc0b03ed188b-d010-496a-8358-059e19ed82d4fd4d5191-cd51-4454-92c0-49e7ace04d8b0851a31b-3445-4e84-a4dd-e261a88ce2e0d2b2c5ce-8469-4c17-b275-ef8866b3da1a4b28ae98-519c-43a0-a251-66e4b0adc86d49568a4c-edb9-463a-b438-3cc0e19f311acb4b300c-ae85-46c4-9dc6-c6048774211918289e69-2bd5-463f-8359-3115481995e82b7e1afc-b122-47dc-8293-9cdfd87ba5589dbed12d-5108-4c3d-ae8a-2e0403ae3d5322cd3470-a110-4e93-bf99-29bc32a9550610a818a3-ff21-4b46-9522-8e84c39d5a9e13451046-f2ce-4a4e-96e0-c5f1d5859e6b4448d371-d609-4481-8290-85fb458bebb55156e130-c5a0-4926-8865-43592e6b3429a9524141-c4ad-421e-82a1-bd98056135220bf20881-000a-44ec-9cb9-f9d42cf0b79935aea5ff-4df9-4047-8fc0-e8621ccafa4955ff0fea-2fac-4fa6-b487-4400fc166828f9886357-ae2b-4446-927c-ffc319c6f31a50e58ba1-5213-45e1-a466-499162519bd5c31353d7-56db-4814-a8d8-308e02fafb8a6af9550c-221c-4a88-a236-7d3e111bd6215cffb1f0-f9c5-4110-97af-54fe0702e47afe566b71-da2d-4052-bb21-d1222aeaa3299c8c27e7-ee24-4290-a4a8-d03dccf1ad1f2a2dc576-a617-430d-b3bf-126d370aebfe0b910f8d-8cbc-4012-b484-8f89cfaf83e06b3b89fc-ae55-4f64-a3b5-477e1defd54433cde487-e551-4f86-b576-50f1602b410926e2ae2b-9dfc-48af-9b95-bd87bb6b22ffb5050535-da84-4924-8299-57fa90c528e7793f16fa-82aa-473d-95c8-743c019ab99a2e457594-8925-4dd1-9f0f-acf30d294c64",
                                                               "3c6dd218-8194-4883-992f-41e75f0aa940",
                                                               "a4f5d166-b435-410f-bf7a-ae716ac5b088a3b6eae8-f721-4a1f-8229-95ba2e57ce93a0c21cc4-8856-4ce5-95e4-4a00bb5a3fac883cd0cd-6967-42ce-bcfc-9f19655d7dc3",
                                                               new Date(1561989470551L));
        assertFalse(firmwareimageInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            FirmwareImage firmwareimage1 = new FirmwareImage(new Date(1561989470459L),
                                                             "952ae587-5618-4a5e-a1cb-d00bf6304a8a", -59,
                                                             "73a9558c-9305-4254-a050-8890d100340b",
                                                             "46d19139-4c53-4c0b-9abf-71889542f44d",
                                                             "cba5f1eb-be13-437d-a328-d3f07fe15af1",
                                                             "371946f0-3235-4b31-b25d-5fdbc042e897",
                                                             new Date(1561989471717L));
            FirmwareImage firmwareimage2 = new FirmwareImage(new Date(1561989470459L),
                                                             "952ae587-5618-4a5e-a1cb-d00bf6304a8a", -59,
                                                             "73a9558c-9305-4254-a050-8890d100340b",
                                                             "46d19139-4c53-4c0b-9abf-71889542f44d",
                                                             "cba5f1eb-be13-437d-a328-d3f07fe15af1",
                                                             "371946f0-3235-4b31-b25d-5fdbc042e897",
                                                             new Date(1561989471717L));
            FirmwareImage firmwareimage3 = new FirmwareImage(new Date(1561989470886L),
                                                             "fcc309b5-37c0-4a0f-86c3-61969e003c98", -75,
                                                             "dd3f8869-811a-436e-8c78-eba389bfa746",
                                                             "fdce757f-6cb0-469b-a84d-b1c97fd27813",
                                                             "a0c185da-bcba-41fc-b4a4-ecf7f0a1df13",
                                                             "1325bf36-e3db-44cc-b5b1-748855bdafe1",
                                                             new Date(1561989473469L));
            assertNotNull(firmwareimage1);
            assertNotNull(firmwareimage2);
            assertNotNull(firmwareimage3);
            assertNotSame(firmwareimage2, firmwareimage1);
            assertNotSame(firmwareimage3, firmwareimage1);
            assertEquals(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage1, firmwareimage2);
            assertEquals(firmwareimage1, firmwareimage1);
            assertFalse(firmwareimage1.equals(null));
            assertNotEquals(firmwareimage3, firmwareimage1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
