// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model ApiKey.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestApiKey {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ApiKey apikey1 = new ApiKey("de2068c9e6dbf6d9ee9c45e25da5b3ec", new Date(1561989476699L), 92,
                                        "de2068c9e6dbf6d9ee9c45e25da5b3ec", "45721438-6ffc-4a19-8b2c-fc9b3ed7f9e6",
                                        -102, "fb70ac38-d288-42c4-b9f9-36938d7173a1",
                                        "de2068c9e6dbf6d9ee9c45e25da5b3ec", ApiKeyStatus.getDefault(),
                                        new Date(1561989468899L));
            ApiKey apikey2 = apikey1.clone();
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotSame(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ApiKey apikey1 = new ApiKey("de2068c9e6dbf6d9ee9c45e25da5b3ec", new Date(1561989474446L), 3,
                                        "de2068c9e6dbf6d9ee9c45e25da5b3ec", "4d692afb-9911-4ccb-9afd-c167f50a1305", -36,
                                        "2d477a4b-14c8-4167-80d0-7018e395b58a", "de2068c9e6dbf6d9ee9c45e25da5b3ec",
                                        ApiKeyStatus.getDefault(), new Date(1561989474789L));
            ApiKey apikey2 = new ApiKey("de2068c9e6dbf6d9ee9c45e25da5b3ec", new Date(1561989474446L), 3,
                                        "de2068c9e6dbf6d9ee9c45e25da5b3ec", "4d692afb-9911-4ccb-9afd-c167f50a1305", -36,
                                        "2d477a4b-14c8-4167-80d0-7018e395b58a", "de2068c9e6dbf6d9ee9c45e25da5b3ec",
                                        ApiKeyStatus.getDefault(), new Date(1561989474789L));
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotSame(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey2.hashCode(), apikey1.hashCode());
            int hashCode = apikey1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, apikey1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ApiKey apikey = new ApiKey("de2068c9e6dbf6d9ee9c45e25da5b3ec", new Date(1561989469077L), -99,
                                   "de2068c9e6dbf6d9ee9c45e25da5b3ec", "869e3392-f4d2-4bad-b9dc-f638bbe83c00", 50,
                                   "68c1465d-609d-4fda-9531-1da09b0bd432", "de2068c9e6dbf6d9ee9c45e25da5b3ec",
                                   ApiKeyStatus.getDefault(), new Date(1561989469138L));
        assertTrue(apikey.isValid());
        ApiKey apikeyInvalid = new ApiKey(":7;è½œ11ë¼±77ç¤«A11ìª Säœ‰ïµ¦7\u0000è¸±DD11F1H7M1Gã‡ª\u0000\u000411å£©YR111*71Vé¢¯11Yå©ˆ777ç³?ì§‘+\u0016711.?à±–",
                                          new Date(1561989472906L), -99,
                                          ":7;è½œ11ë¼±77ç¤«A11ìª Säœ‰ïµ¦7\u0000è¸±DD11F1H7M1Gã‡ª\u0000\u000411å£©YR111*71Vé¢¯11Yå©ˆ777ç³?ì§‘+\u0016711.?à±–",
                                          "ffcb94f2-1656-495f-91df-35d91e3f7c43", -15, null,
                                          ":7;è½œ11ë¼±77ç¤«A11ìª Säœ‰ïµ¦7\u0000è¸±DD11F1H7M1Gã‡ª\u0000\u000411å£©YR111*71Vé¢¯11Yå©ˆ777ç³?ì§‘+\u0016711.?à±–",
                                          ApiKeyStatus.getDefault(), new Date(1561989470715L));
        assertFalse(apikeyInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ApiKey apikey1 = new ApiKey("de2068c9e6dbf6d9ee9c45e25da5b3ec", new Date(1561989471392L), -35,
                                        "de2068c9e6dbf6d9ee9c45e25da5b3ec", "e240a0ef-9aa7-4563-9442-56763104c154", -29,
                                        "f5192e49-f2fb-46e8-be98-7c7283735208", "de2068c9e6dbf6d9ee9c45e25da5b3ec",
                                        ApiKeyStatus.getDefault(), new Date(1561989478085L));
            ApiKey apikey2 = new ApiKey("de2068c9e6dbf6d9ee9c45e25da5b3ec", new Date(1561989471392L), -35,
                                        "de2068c9e6dbf6d9ee9c45e25da5b3ec", "e240a0ef-9aa7-4563-9442-56763104c154", -29,
                                        "f5192e49-f2fb-46e8-be98-7c7283735208", "de2068c9e6dbf6d9ee9c45e25da5b3ec",
                                        ApiKeyStatus.getDefault(), new Date(1561989478085L));
            ApiKey apikey3 = new ApiKey("de2068c9e6dbf6d9ee9c45e25da5b3ec", new Date(1561989471987L), 91,
                                        "de2068c9e6dbf6d9ee9c45e25da5b3ec", "6e4273c9-f84c-4b2d-8fdc-b0242842f221", -84,
                                        "8489e5a8-6c69-4f7b-bcef-53f1572a8355", "de2068c9e6dbf6d9ee9c45e25da5b3ec",
                                        ApiKeyStatus.getDefault(), new Date(1561989476089L));
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotNull(apikey3);
            assertNotSame(apikey2, apikey1);
            assertNotSame(apikey3, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey1, apikey2);
            assertEquals(apikey1, apikey1);
            assertFalse(apikey1.equals(null));
            assertNotEquals(apikey3, apikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
