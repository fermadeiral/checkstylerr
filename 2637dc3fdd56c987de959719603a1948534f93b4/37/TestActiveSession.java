// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model ActiveSession.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestActiveSession {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ActiveSession activesession1 = new ActiveSession("de2068c9e6dbf6d9ee9c45e25da5b3ec",
                                                             "4af91850-4cc2-4379-aeaf-0bf21be9cc31",
                                                             new Date(1561989472260L),
                                                             "57c8d277-4799-4926-8733-5b9688a142e3",
                                                             "0aee7919-a319-4077-998f-1121fd110f07");
            ActiveSession activesession2 = activesession1.clone();
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotSame(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ActiveSession activesession1 = new ActiveSession("de2068c9e6dbf6d9ee9c45e25da5b3ec",
                                                             "201ce9a0-c4da-41f8-8fa9-4b08ff1d0e30",
                                                             new Date(1561989470004L),
                                                             "bce43e05-d90f-46f1-ad4c-5fc69cf77112",
                                                             "ccc76d92-2fd8-40a1-9577-95a0206aaa7f");
            ActiveSession activesession2 = new ActiveSession("de2068c9e6dbf6d9ee9c45e25da5b3ec",
                                                             "201ce9a0-c4da-41f8-8fa9-4b08ff1d0e30",
                                                             new Date(1561989470004L),
                                                             "bce43e05-d90f-46f1-ad4c-5fc69cf77112",
                                                             "ccc76d92-2fd8-40a1-9577-95a0206aaa7f");
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotSame(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession2.hashCode(), activesession1.hashCode());
            int hashCode = activesession1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, activesession1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ActiveSession activesession = new ActiveSession("de2068c9e6dbf6d9ee9c45e25da5b3ec",
                                                        "9dadc8fb-e3c8-466e-80dd-758445b0b198",
                                                        new Date(1561989476413L),
                                                        "31b0d87a-f14c-4b62-81fd-f1070eebee79",
                                                        "05a60011-455e-4a12-b19f-561d4ecf647e");
        assertTrue(activesession.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ActiveSession activesession1 = new ActiveSession("de2068c9e6dbf6d9ee9c45e25da5b3ec",
                                                             "ff030ba0-fce4-402f-bdd2-b52c5016f9df",
                                                             new Date(1561989470407L),
                                                             "cbd6d2eb-aacc-4769-a924-869511cec62e",
                                                             "c0946bb0-2a02-4fc2-9022-dce42f4e1c91");
            ActiveSession activesession2 = new ActiveSession("de2068c9e6dbf6d9ee9c45e25da5b3ec",
                                                             "ff030ba0-fce4-402f-bdd2-b52c5016f9df",
                                                             new Date(1561989470407L),
                                                             "cbd6d2eb-aacc-4769-a924-869511cec62e",
                                                             "c0946bb0-2a02-4fc2-9022-dce42f4e1c91");
            ActiveSession activesession3 = new ActiveSession("de2068c9e6dbf6d9ee9c45e25da5b3ec",
                                                             "e352c8a2-703f-4150-b514-07586d9098c6",
                                                             new Date(1561989477374L),
                                                             "534f3a68-da47-4bc2-bfd0-a03e4229cdf0",
                                                             "7f10cb68-664a-4dc3-bc3c-e1e0cf22c8c9");
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotNull(activesession3);
            assertNotSame(activesession2, activesession1);
            assertNotSame(activesession3, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession1, activesession2);
            assertEquals(activesession1, activesession1);
            assertFalse(activesession1.equals(null));
            assertNotEquals(activesession3, activesession1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
