// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.security.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeveloperCertificate.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeveloperCertificate {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("7b0eab3d-786d-4cac-891e-9411a9983ae9",
                                                                                  "939b448a-6152-4f3b-bb21-c2620bf992e7",
                                                                                  new Date(1561989469846L),
                                                                                  "ff0d4a79-2871-4594-9025-bb45d300d61d",
                                                                                  "dc25adb7-162b-4046-9a84-22180fa03d57",
                                                                                  "fef48f0b-3b93-4133-be96-acdb2607ba74",
                                                                                  "2cf88148-7fb3-4f2f-bd3a-a85c4411f05c",
                                                                                  "bc96479f-d050-4ba6-8e2f-93f0ec3eca95");
            DeveloperCertificate developercertificate2 = developercertificate1.clone();
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("8817aff7-74d8-46bb-9747-08bd0a0234ae",
                                                                                  "929738d1-9391-4561-a668-e939763628e7",
                                                                                  new Date(1561989471035L),
                                                                                  "b87e3d6c-464a-4cd4-b853-822016e299f9",
                                                                                  "99c22b6d-4d76-4dec-b6e4-4d72ec1b70c7",
                                                                                  "03f32221-0d10-4e03-ad8a-658f9da9f6ca",
                                                                                  "d5ce4316-baf9-4f1e-a99b-09d98f1e8d6b",
                                                                                  "8204f424-db44-4423-9476-51c1dd25068c");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("8817aff7-74d8-46bb-9747-08bd0a0234ae",
                                                                                  "929738d1-9391-4561-a668-e939763628e7",
                                                                                  new Date(1561989471035L),
                                                                                  "b87e3d6c-464a-4cd4-b853-822016e299f9",
                                                                                  "99c22b6d-4d76-4dec-b6e4-4d72ec1b70c7",
                                                                                  "03f32221-0d10-4e03-ad8a-658f9da9f6ca",
                                                                                  "d5ce4316-baf9-4f1e-a99b-09d98f1e8d6b",
                                                                                  "8204f424-db44-4423-9476-51c1dd25068c");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2.hashCode(), developercertificate1.hashCode());
            int hashCode = developercertificate1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, developercertificate1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeveloperCertificate developercertificate = new DeveloperCertificate("49da4cf2-d23f-48b2-98f5-8f4bdf12f438",
                                                                             "aec85c91-05f0-48b6-9028-2df6105db078",
                                                                             new Date(1561989469028L),
                                                                             "8a28c2c9-89f8-45fe-9625-46296c1f3e3b",
                                                                             "c48e36f3-f51e-4d5e-bf65-6f83a5fc77a3",
                                                                             "e06ba15a-6212-44d8-a94c-aef3371fb600",
                                                                             "5a11df1d-b20b-48a3-a785-e791bfaede51",
                                                                             "a4ecfb5d-caf3-4cdf-b33c-08a10b212e87");
        assertTrue(developercertificate.isValid());
        DeveloperCertificate developercertificateInvalid = new DeveloperCertificate("576d9387-81aa-4912-8119-72ee493c7028",
                                                                                    "6c0668e5-6c63-4de0-90bf-2974ceb2639f",
                                                                                    new Date(1561989473092L),
                                                                                    "a02d8243-6817-4840-8509-71928eb3b7f6",
                                                                                    "ce5917c6-2a59-4211-bb15-450296927970",
                                                                                    "86ff8ba0-c8ad-4bea-86bf-eca59a9b0987",
                                                                                    null,
                                                                                    "bb6ae1c0-a08d-47c0-b488-76db4e383062");
        assertFalse(developercertificateInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("2aef019a-2bbc-4a7c-ad76-369cb63604da",
                                                                                  "a7e59c70-5f75-4ec6-b5d5-c206c6527660",
                                                                                  new Date(1561989474958L),
                                                                                  "4ac7db65-1698-4c91-8b6f-42b4e27210b0",
                                                                                  "ade8b987-cef6-4ded-ba79-448db1207051",
                                                                                  "4e43e551-0044-42fd-8357-2f2b93e58a02",
                                                                                  "9b01bd63-9e43-4783-922b-92c91b0d37e2",
                                                                                  "36f0a784-dbfc-47b5-b526-9ac92f71e8b3");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("2aef019a-2bbc-4a7c-ad76-369cb63604da",
                                                                                  "a7e59c70-5f75-4ec6-b5d5-c206c6527660",
                                                                                  new Date(1561989474958L),
                                                                                  "4ac7db65-1698-4c91-8b6f-42b4e27210b0",
                                                                                  "ade8b987-cef6-4ded-ba79-448db1207051",
                                                                                  "4e43e551-0044-42fd-8357-2f2b93e58a02",
                                                                                  "9b01bd63-9e43-4783-922b-92c91b0d37e2",
                                                                                  "36f0a784-dbfc-47b5-b526-9ac92f71e8b3");
            DeveloperCertificate developercertificate3 = new DeveloperCertificate("90625887-afd5-4ddb-ba33-e2022a440289",
                                                                                  "e87f3432-41e7-4b1a-ae95-e2530d6ba555",
                                                                                  new Date(1561989469837L),
                                                                                  "085ec5a5-bd35-42d1-8797-b10af4995842",
                                                                                  "66c217c4-b506-4b3b-93e7-1d3ca6f68970",
                                                                                  "e6826b23-377c-4b43-bc8e-63ecdc14e239",
                                                                                  "bbbbc399-d7ff-42a9-9b1f-004e346af4f9",
                                                                                  "81c06b13-d6fb-4406-99b0-4944843f53ba");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotNull(developercertificate3);
            assertNotSame(developercertificate2, developercertificate1);
            assertNotSame(developercertificate3, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate1, developercertificate2);
            assertEquals(developercertificate1, developercertificate1);
            assertFalse(developercertificate1.equals(null));
            assertNotEquals(developercertificate3, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
