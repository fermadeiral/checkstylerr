// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model LoginProfile.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestLoginProfile {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            LoginProfile loginprofile1 = new LoginProfile("ebbccaa6-16c6-4d0a-a63f-b14a3b5b406c",
                                                          "d0421a5b-6cb3-455a-babd-7beab75bf457");
            LoginProfile loginprofile2 = loginprofile1.clone();
            assertNotNull(loginprofile1);
            assertNotNull(loginprofile2);
            assertNotSame(loginprofile2, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            LoginProfile loginprofile1 = new LoginProfile("e955ddfb-de34-4e67-bb40-bce0b5869782",
                                                          "9395cd9d-f01d-4091-8c9a-a32d64514748");
            LoginProfile loginprofile2 = new LoginProfile("e955ddfb-de34-4e67-bb40-bce0b5869782",
                                                          "9395cd9d-f01d-4091-8c9a-a32d64514748");
            assertNotNull(loginprofile1);
            assertNotNull(loginprofile2);
            assertNotSame(loginprofile2, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
            assertEquals(loginprofile2.hashCode(), loginprofile1.hashCode());
            int hashCode = loginprofile1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, loginprofile1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        LoginProfile loginprofile = new LoginProfile("e2818e38-605c-4553-abed-8d4e322746ff",
                                                     "9940c2c6-199f-45e0-9971-1c9292c34485");
        assertTrue(loginprofile.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            LoginProfile loginprofile1 = new LoginProfile("974e3fc3-cfc2-48d2-99c9-fb510d88914f",
                                                          "515f8f69-a945-4031-9aa8-b21ba673ddf9");
            LoginProfile loginprofile2 = new LoginProfile("974e3fc3-cfc2-48d2-99c9-fb510d88914f",
                                                          "515f8f69-a945-4031-9aa8-b21ba673ddf9");
            LoginProfile loginprofile3 = new LoginProfile("1739ea6f-78bc-4fcb-a533-49e68cd34cf7",
                                                          "77664479-a4f4-48ff-9a32-5a85630931e2");
            assertNotNull(loginprofile1);
            assertNotNull(loginprofile2);
            assertNotNull(loginprofile3);
            assertNotSame(loginprofile2, loginprofile1);
            assertNotSame(loginprofile3, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
            assertEquals(loginprofile1, loginprofile2);
            assertEquals(loginprofile1, loginprofile1);
            assertFalse(loginprofile1.equals(null));
            assertNotEquals(loginprofile3, loginprofile1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
