// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.deviceupdate.model;

import static org.junit.Assert.*;

import com.arm.mbed.cloud.sdk.common.Order;
import com.arm.mbed.cloud.sdk.common.listing.ListOptionsEncoder;
import com.arm.mbed.cloud.sdk.common.listing.filtering.FilterOperator;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import org.junit.Test;

/**
 * Unit tests for Model FirmwareImageListOptions.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestFirmwareImageListOptions {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            FirmwareImageListOptions firmwareimagelistoptions1 = new FirmwareImageListOptions(Integer.valueOf(60),
                                                                                              Long.valueOf(-75),
                                                                                              Order.getDefault(),
                                                                                              "390824e9-3ca1-4f75-af3f-5e35b1b0bca2",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions2 = firmwareimagelistoptions1.clone();
            assertNotNull(firmwareimagelistoptions1);
            assertNotNull(firmwareimagelistoptions2);
            assertNotSame(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the filters method.
     */
    @SuppressWarnings({ "boxing", "resource" })
    @Test
    public void testFilters() {
        try {
            FirmwareImageListOptions option = new FirmwareImageListOptions().inUpdatedAts(Arrays.asList(new Date(1561989471600L),
                                                                                                        new Date(1561989474558L),
                                                                                                        new Date(1561989472848L),
                                                                                                        new Date(1561989470735L),
                                                                                                        new Date(1561989473111L),
                                                                                                        new Date(1561989478550L),
                                                                                                        new Date(1561989474718L),
                                                                                                        new Date(1561989472802L),
                                                                                                        new Date(1561989473473L)))
                                                                            .notInUpdatedAts(Arrays.asList(new Date(1561989478699L),
                                                                                                           new Date(1561989472721L),
                                                                                                           new Date(1561989474378L),
                                                                                                           new Date(1561989477477L),
                                                                                                           new Date(1561989477487L),
                                                                                                           new Date(1561989478845L),
                                                                                                           new Date(1561989474010L),
                                                                                                           new Date(1561989478574L)))
                                                                            .lessThanUpdatedAt(new Date(1561989474716L))
                                                                            .greaterThanUpdatedAt(new Date(1561989470787L))
                                                                            .equalToName("12c6cfd4-605b-4f65-a9f9-d78eaa86ec28")
                                                                            .notEqualToName("3e1d69f5-28cc-47da-9ca7-a87d0291eabd")
                                                                            .inNames(Arrays.asList("5678c909-c299-442b-9b71-b7718c392ab7",
                                                                                                   "7c5c8d0c-0ae7-47dd-b79b-4bbc52e1fa4e",
                                                                                                   "8d83599d-b733-4488-b7ad-d986efcc7f4e",
                                                                                                   "c77bc043-68cf-4ed8-8fe1-a3ca1046b158",
                                                                                                   "9d2907d2-118f-4ef0-ba59-582a91321b5f",
                                                                                                   "b6a5d84f-dd15-427a-aa14-4dcaf8ba356e",
                                                                                                   "bd7d19a8-1218-4452-8e38-7b8dd6b45188"))
                                                                            .notInNames(Arrays.asList("bc36a0b7-4c19-49e2-b0ca-c765088f72b1",
                                                                                                      "a80dae2a-721c-45f7-ad5c-b5c05b4a1738",
                                                                                                      "b71c6c2d-afb0-48d2-b655-687ba5c055de",
                                                                                                      "7f888800-e02b-40aa-8755-21ca4c914d66",
                                                                                                      "150e0312-16db-4f9d-8c92-9d1045bbcc3c",
                                                                                                      "d5e407ff-bdd8-4244-85e8-b8817f75cc0c",
                                                                                                      "d80a63a6-0e0c-4db8-8d38-a1a4c1810535",
                                                                                                      "65fbf7c5-0cea-498c-8eda-afaf82b158db",
                                                                                                      "7902a824-a956-4baa-a27c-90e590604bef"))
                                                                            .equalToDescription("92cd133c-d725-46cb-a89e-3e343ea427c0")
                                                                            .notEqualToDescription("af048164-aa7e-41c7-b283-25913b61f6b1")
                                                                            .inDescriptions(Arrays.asList("de18af37-054a-4940-92cf-c9ccb7c5d7d3",
                                                                                                          "3abc02f7-1d96-4fae-82d1-ea9a8c451f41",
                                                                                                          "7c97f286-8fe9-4ea4-86cb-5c7eb35b1554",
                                                                                                          "1807a973-298d-41af-8af4-ef556974d115",
                                                                                                          "b42c4379-161b-4e91-b051-82a53633bbd3",
                                                                                                          "c891ac51-0d11-4635-a4fa-fad11d51d4f0"))
                                                                            .notInDescriptions(Arrays.asList("ee06799b-0e82-4e02-9741-07b077b53b33",
                                                                                                             "6b1f2c1f-6cf4-48e7-9220-b5af0d229003",
                                                                                                             "078a7528-205f-472e-bfea-65ca3f4470b9",
                                                                                                             "cee317fb-9d5f-4a26-873a-b407b6f88d1e"))
                                                                            .inCreatedAts(Arrays.asList(new Date(1561989480050L),
                                                                                                        new Date(1561989478642L),
                                                                                                        new Date(1561989471430L),
                                                                                                        new Date(1561989473652L),
                                                                                                        new Date(1561989480358L),
                                                                                                        new Date(1561989474342L),
                                                                                                        new Date(1561989479133L),
                                                                                                        new Date(1561989474521L)))
                                                                            .notInCreatedAts(Arrays.asList(new Date(1561989477098L),
                                                                                                           new Date(1561989470924L),
                                                                                                           new Date(1561989476766L),
                                                                                                           new Date(1561989472045L),
                                                                                                           new Date(1561989478184L),
                                                                                                           new Date(1561989476289L),
                                                                                                           new Date(1561989473266L),
                                                                                                           new Date(1561989479098L),
                                                                                                           new Date(1561989473639L)))
                                                                            .lessThanCreatedAt(new Date(1561989474527L))
                                                                            .greaterThanCreatedAt(new Date(1561989476520L))
                                                                            .equalToDatafileUrl("743605d7-1c74-4d06-bdbf-24a5c329a1a9")
                                                                            .notEqualToDatafileUrl("471cd5a3-4c1d-4504-b07d-4d9419eb50f0")
                                                                            .inDatafileUrls(Arrays.asList("7074c745-1300-4857-95c4-9ea0136172f7",
                                                                                                          "2ec1cc6b-24ee-4da1-99ee-d7fc13a20859",
                                                                                                          "b4e2b5f8-9eab-443e-a188-2272135e1493",
                                                                                                          "b7926c02-8933-4ba1-87e9-39e0de959cbc",
                                                                                                          "3ab1ff7d-7f88-4838-a043-62160ac07e65",
                                                                                                          "9041ec33-d65c-4a98-8278-3e36b26177c1",
                                                                                                          "85c74c5d-4977-49cb-afcc-50b1ec196b96"))
                                                                            .notInDatafileUrls(Arrays.asList("4a184d3d-d4b6-402a-b622-0d483a1cbf43",
                                                                                                             "fb572e1a-a0db-4ffa-a76a-92f198b10964",
                                                                                                             "9d7cc8e3-4049-4216-a94c-6fa0a785ad86",
                                                                                                             "bf3a39a1-c19f-4b54-94d9-311b2b81c9c6",
                                                                                                             "77e850e9-3cd0-44f4-9392-5caa96a165f8",
                                                                                                             "bb79d0b6-e004-4ad2-bab3-f2a0b8259b6b"))
                                                                            .equalToDatafileSize(Long.valueOf(-31))
                                                                            .notEqualToDatafileSize(Long.valueOf(-85))
                                                                            .inDatafileSizes(Arrays.asList(Long.valueOf(-8),
                                                                                                           Long.valueOf(43),
                                                                                                           Long.valueOf(-72)))
                                                                            .notInDatafileSizes(Arrays.asList(Long.valueOf(44),
                                                                                                              Long.valueOf(38),
                                                                                                              Long.valueOf(-88),
                                                                                                              Long.valueOf(61)))
                                                                            .equalToDatafileChecksum("fd254ace-e5de-47a9-9fd8-1882ecabd978")
                                                                            .notEqualToDatafileChecksum("f02c8dda-fa64-4fe8-910f-576b50e638c6")
                                                                            .inDatafileChecksums(Arrays.asList("7926d259-4baa-46cd-8945-00c88f0dab66",
                                                                                                               "3f9b64ac-d925-440b-8432-766ca6e1ea46"))
                                                                            .notInDatafileChecksums(Arrays.asList("2a93c71d-d91c-4da5-ab12-fd929148b3ca",
                                                                                                                  "15370b33-ddd7-42d6-8c53-a6d592f32188"))
                                                                            .equalToId("c6a38396-8ca4-471a-8cbb-77e548276f8c")
                                                                            .notEqualToId("2bfcf75e-e463-4832-9494-f123acb9dd79")
                                                                            .inIds(Arrays.asList("d6aa68a2-ff10-408a-930e-350c2b9fb9a1",
                                                                                                 "2893f7a9-11b8-4df7-a053-d1a0643d93ce",
                                                                                                 "3be7402e-679d-4ef2-9975-8812e3dc7731",
                                                                                                 "830cb34d-ccea-4c58-9764-5394dddc470f",
                                                                                                 "028a4d25-a9b0-4141-8271-663d25a9f931",
                                                                                                 "f560d1d7-6318-4ce0-bff3-252b0638cea9",
                                                                                                 "69492a7f-73b0-4529-9359-f345cea998f5",
                                                                                                 "afc6953c-e1ea-447d-9d55-01426d6ff437",
                                                                                                 "c4cd740b-51eb-46d8-900f-d45532532ea6"))
                                                                            .notInIds(Arrays.asList("7443368e-dbf2-4829-8071-fef881fd9a92"));
            assertTrue(option.hasFilters());
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1561989471600L), new Date(1561989474558L), new Date(1561989472848L),
                                       new Date(1561989470735L), new Date(1561989473111L), new Date(1561989478550L),
                                       new Date(1561989474718L), new Date(1561989472802L), new Date(1561989473473L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1561989478699L), new Date(1561989472721L), new Date(1561989474378L),
                                       new Date(1561989477477L), new Date(1561989477487L), new Date(1561989478845L),
                                       new Date(1561989474010L), new Date(1561989478574L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.LESS_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1561989474716L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1561989470787L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("12c6cfd4-605b-4f65-a9f9-d78eaa86ec28",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("3e1d69f5-28cc-47da-9ca7-a87d0291eabd",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("5678c909-c299-442b-9b71-b7718c392ab7", "7c5c8d0c-0ae7-47dd-b79b-4bbc52e1fa4e",
                                       "8d83599d-b733-4488-b7ad-d986efcc7f4e", "c77bc043-68cf-4ed8-8fe1-a3ca1046b158",
                                       "9d2907d2-118f-4ef0-ba59-582a91321b5f", "b6a5d84f-dd15-427a-aa14-4dcaf8ba356e",
                                       "bd7d19a8-1218-4452-8e38-7b8dd6b45188"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("bc36a0b7-4c19-49e2-b0ca-c765088f72b1", "a80dae2a-721c-45f7-ad5c-b5c05b4a1738",
                                       "b71c6c2d-afb0-48d2-b655-687ba5c055de", "7f888800-e02b-40aa-8755-21ca4c914d66",
                                       "150e0312-16db-4f9d-8c92-9d1045bbcc3c", "d5e407ff-bdd8-4244-85e8-b8817f75cc0c",
                                       "d80a63a6-0e0c-4db8-8d38-a1a4c1810535", "65fbf7c5-0cea-498c-8eda-afaf82b158db",
                                       "7902a824-a956-4baa-a27c-90e590604bef"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("92cd133c-d725-46cb-a89e-3e343ea427c0",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("af048164-aa7e-41c7-b283-25913b61f6b1",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("de18af37-054a-4940-92cf-c9ccb7c5d7d3", "3abc02f7-1d96-4fae-82d1-ea9a8c451f41",
                                       "7c97f286-8fe9-4ea4-86cb-5c7eb35b1554", "1807a973-298d-41af-8af4-ef556974d115",
                                       "b42c4379-161b-4e91-b051-82a53633bbd3", "c891ac51-0d11-4635-a4fa-fad11d51d4f0"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("ee06799b-0e82-4e02-9741-07b077b53b33", "6b1f2c1f-6cf4-48e7-9220-b5af0d229003",
                                       "078a7528-205f-472e-bfea-65ca3f4470b9", "cee317fb-9d5f-4a26-873a-b407b6f88d1e"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1561989480050L), new Date(1561989478642L), new Date(1561989471430L),
                                       new Date(1561989473652L), new Date(1561989480358L), new Date(1561989474342L),
                                       new Date(1561989479133L), new Date(1561989474521L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1561989477098L), new Date(1561989470924L), new Date(1561989476766L),
                                       new Date(1561989472045L), new Date(1561989478184L), new Date(1561989476289L),
                                       new Date(1561989473266L), new Date(1561989479098L), new Date(1561989473639L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.LESS_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1561989474527L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1561989476520L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("743605d7-1c74-4d06-bdbf-24a5c329a1a9",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("471cd5a3-4c1d-4504-b07d-4d9419eb50f0",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("7074c745-1300-4857-95c4-9ea0136172f7", "2ec1cc6b-24ee-4da1-99ee-d7fc13a20859",
                                       "b4e2b5f8-9eab-443e-a188-2272135e1493", "b7926c02-8933-4ba1-87e9-39e0de959cbc",
                                       "3ab1ff7d-7f88-4838-a043-62160ac07e65", "9041ec33-d65c-4a98-8278-3e36b26177c1",
                                       "85c74c5d-4977-49cb-afcc-50b1ec196b96"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("4a184d3d-d4b6-402a-b622-0d483a1cbf43", "fb572e1a-a0db-4ffa-a76a-92f198b10964",
                                       "9d7cc8e3-4049-4216-a94c-6fa0a785ad86", "bf3a39a1-c19f-4b54-94d9-311b2b81c9c6",
                                       "77e850e9-3cd0-44f4-9392-5caa96a165f8", "bb79d0b6-e004-4ad2-bab3-f2a0b8259b6b"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(-31),
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    Long.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(-85),
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                       Long.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(-8), Long.valueOf(43), Long.valueOf(-72)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(44), Long.valueOf(38), Long.valueOf(-88), Long.valueOf(61)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                        FilterOperator.EQUAL));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals("fd254ace-e5de-47a9-9fd8-1882ecabd978",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals("f02c8dda-fa64-4fe8-910f-576b50e638c6",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM, FilterOperator.IN));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals(Arrays.asList("7926d259-4baa-46cd-8945-00c88f0dab66", "3f9b64ac-d925-440b-8432-766ca6e1ea46"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                        FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals(Arrays.asList("2a93c71d-d91c-4da5-ab12-fd929148b3ca", "15370b33-ddd7-42d6-8c53-a6d592f32188"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("c6a38396-8ca4-471a-8cbb-77e548276f8c",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("2bfcf75e-e463-4832-9494-f123acb9dd79",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("d6aa68a2-ff10-408a-930e-350c2b9fb9a1", "2893f7a9-11b8-4df7-a053-d1a0643d93ce",
                                       "3be7402e-679d-4ef2-9975-8812e3dc7731", "830cb34d-ccea-4c58-9764-5394dddc470f",
                                       "028a4d25-a9b0-4141-8271-663d25a9f931", "f560d1d7-6318-4ce0-bff3-252b0638cea9",
                                       "69492a7f-73b0-4529-9359-f345cea998f5", "afc6953c-e1ea-447d-9d55-01426d6ff437",
                                       "c4cd740b-51eb-46d8-900f-d45532532ea6"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, List.class,
                                                                 option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("7443368e-dbf2-4829-8071-fef881fd9a92"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID,
                                                                    List.class, option));
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            FirmwareImageListOptions firmwareimagelistoptions1 = new FirmwareImageListOptions(Integer.valueOf(-34),
                                                                                              Long.valueOf(-123),
                                                                                              Order.getDefault(),
                                                                                              "f530eb43-daf1-4e88-9a59-2b919c621a32",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions2 = new FirmwareImageListOptions(Integer.valueOf(-34),
                                                                                              Long.valueOf(-123),
                                                                                              Order.getDefault(),
                                                                                              "f530eb43-daf1-4e88-9a59-2b919c621a32",
                                                                                              null, null);
            assertNotNull(firmwareimagelistoptions1);
            assertNotNull(firmwareimagelistoptions2);
            assertNotSame(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2.hashCode(), firmwareimagelistoptions1.hashCode());
            int hashCode = firmwareimagelistoptions1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, firmwareimagelistoptions1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            FirmwareImageListOptions firmwareimagelistoptions1 = new FirmwareImageListOptions(Integer.valueOf(-65),
                                                                                              Long.valueOf(23),
                                                                                              Order.getDefault(),
                                                                                              "f4d88007-ea5c-4b0b-ab65-fcf66555ca84",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions2 = new FirmwareImageListOptions(Integer.valueOf(-65),
                                                                                              Long.valueOf(23),
                                                                                              Order.getDefault(),
                                                                                              "f4d88007-ea5c-4b0b-ab65-fcf66555ca84",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions3 = new FirmwareImageListOptions(Integer.valueOf(28),
                                                                                              Long.valueOf(-40),
                                                                                              Order.getDefault(),
                                                                                              "2af12121-7dbe-4ab4-b68c-efbdfc47383f",
                                                                                              null, null);
            assertNotNull(firmwareimagelistoptions1);
            assertNotNull(firmwareimagelistoptions2);
            assertNotNull(firmwareimagelistoptions3);
            assertNotSame(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertNotSame(firmwareimagelistoptions3, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions1, firmwareimagelistoptions2);
            assertEquals(firmwareimagelistoptions1, firmwareimagelistoptions1);
            assertFalse(firmwareimagelistoptions1.equals(null));
            assertNotEquals(firmwareimagelistoptions3, firmwareimagelistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
