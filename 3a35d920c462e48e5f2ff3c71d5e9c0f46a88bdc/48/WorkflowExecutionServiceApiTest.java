///*
// * workflow_execution.proto
// * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
// *
// * OpenAPI spec version: version not set
// *
// *
// * NOTE: This class is auto generated by the swagger code generator program.
// * https://github.com/swagger-api/swagger-codegen.git
// * Do not edit the class manually.
// */
//
//
//package io.swagger.client.api;
//
//import io.swagger.client.ApiException;
//import io.swagger.client.model.Ga4ghWesServiceInfo;
//import io.swagger.client.model.Ga4ghWesWorkflowListResponse;
//import io.swagger.client.model.Ga4ghWesWorkflowLog;
//import io.swagger.client.model.Ga4ghWesWorkflowRequest;
//import io.swagger.client.model.Ga4ghWesWorkflowRunId;
//import io.swagger.client.model.Ga4ghWesWorkflowStatus;
//
//import org.junit.Test;
//import org.junit.Ignore;
//
//import java.io.File;
//import java.io.IOException;
//import java.util.concurrent.TimeoutException;
//
///**
// * API tests for WorkflowExecutionServiceApi
// */
//@Ignore
//public class WorkflowExecutionServiceApiTest {
//    private final WorkflowExecutionServiceApi api = new WorkflowExecutionServiceApi();
//
//    /**
//     * Cancel a running workflow
//     *
//     *
//     *
//     * @throws ApiException
//     *          if the Api call fails
//     */
//    @Test
//    public void cancelJobTest() throws ApiException {
//        String workflowId = null;
//        Ga4ghWesWorkflowRunId response = api.cancelJob(workflowId);
//
//        // TODO: test validations
//    }
//
//    /**
//     * Get information about Workflow Execution Service.  May include information related (but not limited to) the workflow descriptor formats, versions supported, the WES API versions supported, and information about general the service availability.
//     *
//     *
//     *
//     * @throws ApiException
//     *          if the Api call fails
//     */
//    @Test
//    public void getServiceInfoTest() throws ApiException, IOException, TimeoutException {
//
//        Ga4ghWesServiceInfo response = api.getServiceInfo();
//
//        System.out.println(response.toString());
//        // TODO: test validations
//    }
//
//    /**
//     * Get detailed info about a running workflow
//     *
//     *
//     *
//     * @throws ApiException
//     *          if the Api call fails
//     */
//    @Test
//    public void getWorkflowLogTest() throws ApiException {
//        String workflowId = null;
//        Ga4ghWesWorkflowLog response = api.getWorkflowLog(workflowId);
//
//        // TODO: test validations
//    }
//
//    /**
//     * Get quick status info about a running workflow
//     *
//     *
//     *
//     * @throws ApiException
//     *          if the Api call fails
//     */
//    @Test
//    public void getWorkflowStatusTest() throws ApiException {
//        String workflowId = null;
//        Ga4ghWesWorkflowStatus response = api.getWorkflowStatus(workflowId);
//
//        // TODO: test validations
//    }
//
//    /**
//     * List the workflows, this endpoint will list the workflows in order of oldest to newest.  There is no guarantee of live updates as the user traverses the pages, the behavior should be decided (and documented) by each implementation.
//     *
//     *
//     *
//     * @throws ApiException
//     *          if the Api call fails
//     */
//    @Test
//    public void listWorkflowsTest() throws ApiException {
//        Long pageSize = null;
//        String pageToken = null;
//        String keyValueSearch = null;
//        Ga4ghWesWorkflowListResponse response = api.listWorkflows(pageSize, pageToken, keyValueSearch);
//
//        // TODO: test validations
//    }
//
//    /**
//     * Run a workflow, this endpoint will allow you to create a new workflow request and retrieve its tracking ID to monitor its progress.  An important assumption in this endpoint is that the workflow_params JSON will include parameterizations along with input and output files.  The latter two may be on S3, Google object storage, local filesystems, etc.  This specification makes no distinction.  However, it is assumed that the submitter is using URLs that this system both understands and can access. For Amazon S3, this could be accomplished by given the credentials associated with a WES service access to a particular bucket.  The details are important for a production system and user on-boarding but outside the scope of this spec.
//     *
//     *
//     *
//     * @throws ApiException
//     *          if the Api call fails
//     */
//    @Test
//    public void runWorkflowTest() throws ApiException {
//        Ga4ghWesWorkflowRequest body = null;
//        Ga4ghWesWorkflowRunId response = api.runWorkflow(body);
//
//        // TODO: test validations
//    }
//
//}
