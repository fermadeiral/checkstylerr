// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model User.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestUser {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            User user1 = new User("88dd64bea93cce83aebac0d84813ec71", null, "74a42042-5975-4f39-acae-858bcf02eb7f",
                                  new Date(1558093222304L), 101, null, "e053b.e6280@c473d.fr", true,
                                  "445403f3-0660-4f89-8795-5ad0a81bf85f", "88dd64bea93cce83aebac0d84813ec71", false,
                                  true, false, 54, null, null, "2992d847-a227-41ee-96bc-42b352687a20", -9,
                                  "8579930c-f82b-442f-9c75-af135dab6773", UserStatus.getDefault(), null,
                                  new Date(1558093228327L), "__=9=8");
            User user2 = user1.clone();
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotSame(user2, user1);
            assertEquals(user2, user1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            User user1 = new User("88dd64bea93cce83aebac0d84813ec71", null, "310d7f91-d06e-4341-9635-139ff0037730",
                                  new Date(1558093227451L), 114, null, "b4001.11889@1d862.fr", true,
                                  "6ea21910-1a02-4489-bb84-24061395aedc", "88dd64bea93cce83aebac0d84813ec71", true,
                                  true, false, -92, null, null, "86d1f232-61f0-4ab6-ae51-cf54a4fabb56", -47,
                                  "f76668cf-e0e8-4341-949b-7ec18491a744", UserStatus.getDefault(), null,
                                  new Date(1558093227422L), "__=9=8");
            User user2 = new User("88dd64bea93cce83aebac0d84813ec71", null, "310d7f91-d06e-4341-9635-139ff0037730",
                                  new Date(1558093227451L), 114, null, "b4001.11889@1d862.fr", true,
                                  "6ea21910-1a02-4489-bb84-24061395aedc", "88dd64bea93cce83aebac0d84813ec71", true,
                                  true, false, -92, null, null, "86d1f232-61f0-4ab6-ae51-cf54a4fabb56", -47,
                                  "f76668cf-e0e8-4341-949b-7ec18491a744", UserStatus.getDefault(), null,
                                  new Date(1558093227422L), "__=9=8");
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotSame(user2, user1);
            assertEquals(user2, user1);
            assertEquals(user2.hashCode(), user1.hashCode());
            int hashCode = user1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, user1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        User user = new User("88dd64bea93cce83aebac0d84813ec71", null, "f186222f-1888-436b-824e-ab649baaf11c",
                             new Date(1558093220762L), 13, null, "1f802.c546d@df2bc.me", false,
                             "2a5e7b87-b3f2-4e67-aef7-ee73c4be77eb", "88dd64bea93cce83aebac0d84813ec71", false, false,
                             false, 35, null, null, "97e18fea-cc35-446e-bcf3-ae698fae1815", -43,
                             "3acdad30-d7f3-41f3-b5b3-22b7d7e5ef8b", UserStatus.getDefault(), null,
                             new Date(1558093226855L), "__=9=8");
        assertTrue(user.isValid());
        User userInvalid = new User("255V\u0011\u001aî‚¶è¥¸25N2\u00062:55?ç¨µ25W2GTá‘?X2ë §Fá¤™2#æ°º5L2!ê«°H5G2\u0002Yêœ“(?+5â¤²U/Q5â‡ª^è©Š22!2ë ¹'",
                                    null, "a1f01514-469c-4ff1-826d-9e73c16726a1", new Date(1558093224980L), 121, null,
                                    null, true,
                                    "e4d11a96-cc00-40ca-90ff-bbcb48edcf604e1a8646-a852-4df4-9a31-21af14dbf01f2484a765-c28e-4b43-9dbb-36ae2a536340",
                                    "255V\u0011\u001aî‚¶è¥¸25N2\u00062:55?ç¨µ25W2GTá‘?X2ë §Fá¤™2#æ°º5L2!ê«°H5G2\u0002Yêœ“(?+5â¤²U/Q5â‡ª^è©Š22!2ë ¹'",
                                    false, true, true, -127, null, null, "47b1f3c7-cdbc-419d-803a-44e9fdbac26e", 50,
                                    "b3fdca12-b172-4a91-9fb4-bfe457e70427a3f82037-eb5c-48c7-b263-d4641e96f227c2d2f7f5-a741-4b7c-b1ff-0957d40ecba2",
                                    UserStatus.getDefault(), null, new Date(1558093221643L),
                                    "ì?ˆï·£@;åº–åŠ¬;äˆ¼?;ë˜ª;VCå•Šçš‡/+ç® O:O;ä ŒNUê£?Yãµ‰<í?€Y<FMâœ?:Ië§‘<CSî»•ç‡”:\u0006ë¤®4'\u0013O:Xèº…1íŒŽ:Gëžœ\tHãª˜ê›ƒ");
        assertFalse(userInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            User user1 = new User("88dd64bea93cce83aebac0d84813ec71", null, "f6e7fe0a-c9f8-45f4-8308-c53d34bdecd7",
                                  new Date(1558093224301L), -74, null, "bffdc.20355@a26f0.me", false,
                                  "f145a3d3-d54f-43ae-9123-73a265917f43", "88dd64bea93cce83aebac0d84813ec71", false,
                                  false, true, -33, null, null, "7e3c12dd-c9c1-4f3b-8b1a-9be8c375d789", 21,
                                  "38d28a9c-c4b2-46c3-9ed0-bc1fcc25c872", UserStatus.getDefault(), null,
                                  new Date(1558093224630L), "__=9=8");
            User user2 = new User("88dd64bea93cce83aebac0d84813ec71", null, "f6e7fe0a-c9f8-45f4-8308-c53d34bdecd7",
                                  new Date(1558093224301L), -74, null, "bffdc.20355@a26f0.me", false,
                                  "f145a3d3-d54f-43ae-9123-73a265917f43", "88dd64bea93cce83aebac0d84813ec71", false,
                                  false, true, -33, null, null, "7e3c12dd-c9c1-4f3b-8b1a-9be8c375d789", 21,
                                  "38d28a9c-c4b2-46c3-9ed0-bc1fcc25c872", UserStatus.getDefault(), null,
                                  new Date(1558093224630L), "__=9=8");
            User user3 = new User("88dd64bea93cce83aebac0d84813ec71", null, "dd5cadb3-86af-4914-aa6d-eb889aef1d6a",
                                  new Date(1558093228666L), 6, null, "ef8a8.beeaa@06b76.fr", false,
                                  "c9ed4e95-f83f-49af-bc17-4350a30db717", "88dd64bea93cce83aebac0d84813ec71", false,
                                  false, true, -21, null, null, "ab465b0b-505b-4748-b63a-af8ea9aaba8b", -94,
                                  "240dd8b8-2f16-4c41-8f6c-deaed708d52c", UserStatus.getDefault(), null,
                                  new Date(1558093222266L), "__=9=8");
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotNull(user3);
            assertNotSame(user2, user1);
            assertNotSame(user3, user1);
            assertEquals(user2, user1);
            assertEquals(user2, user1);
            assertEquals(user1, user2);
            assertEquals(user1, user1);
            assertFalse(user1.equals(null));
            assertNotEquals(user3, user1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
