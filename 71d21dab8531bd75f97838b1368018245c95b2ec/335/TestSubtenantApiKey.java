// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantApiKey.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantApiKey {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("88dd64bea93cce83aebac0d84813ec71",
                                                                   new Date(1558093228250L), 11,
                                                                   "88dd64bea93cce83aebac0d84813ec71",
                                                                   "16ae79e3-fdf9-4ad4-b92a-c820ef242019", 90,
                                                                   "3c26405c-bd3b-47b5-ba24-b02facbfdde7",
                                                                   "88dd64bea93cce83aebac0d84813ec71",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1558093226156L));
            SubtenantApiKey subtenantapikey2 = subtenantapikey1.clone();
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("88dd64bea93cce83aebac0d84813ec71",
                                                                   new Date(1558093225858L), 31,
                                                                   "88dd64bea93cce83aebac0d84813ec71",
                                                                   "4e77b558-e01d-4613-8caf-7919b92564ba", -12,
                                                                   "b0703add-46aa-4931-9bc7-ff6d2584ec3b",
                                                                   "88dd64bea93cce83aebac0d84813ec71",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1558093228237L));
            SubtenantApiKey subtenantapikey2 = new SubtenantApiKey("88dd64bea93cce83aebac0d84813ec71",
                                                                   new Date(1558093225858L), 31,
                                                                   "88dd64bea93cce83aebac0d84813ec71",
                                                                   "4e77b558-e01d-4613-8caf-7919b92564ba", -12,
                                                                   "b0703add-46aa-4931-9bc7-ff6d2584ec3b",
                                                                   "88dd64bea93cce83aebac0d84813ec71",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1558093228237L));
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2.hashCode(), subtenantapikey1.hashCode());
            int hashCode = subtenantapikey1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantapikey1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantApiKey subtenantapikey = new SubtenantApiKey("88dd64bea93cce83aebac0d84813ec71",
                                                              new Date(1558093227186L), 37,
                                                              "88dd64bea93cce83aebac0d84813ec71",
                                                              "06ff9ae0-9996-4ead-aeda-79badd48bddd", 18,
                                                              "79fe8d9c-451b-474e-b2ab-dcd13870bcfe",
                                                              "88dd64bea93cce83aebac0d84813ec71",
                                                              SubtenantApiKeyStatus.getDefault(),
                                                              new Date(1558093224955L));
        assertTrue(subtenantapikey.isValid());
        SubtenantApiKey subtenantapikeyInvalid = new SubtenantApiKey(null, new Date(1558093227975L), -99,
                                                                     "255V\u0011\u001aî‚¶è¥¸25N2\u00062:55?ç¨µ25W2GTá‘?X2ë §Fá¤™2#æ°º5L2!ê«°H5G2\u0002Yêœ“(?+5â¤²U/Q5â‡ª^è©Š22!2ë ¹'",
                                                                     "681e1d45-40de-4235-85ff-4c0f05d24f68", -98, null,
                                                                     "255V\u0011\u001aî‚¶è¥¸25N2\u00062:55?ç¨µ25W2GTá‘?X2ë §Fá¤™2#æ°º5L2!ê«°H5G2\u0002Yêœ“(?+5â¤²U/Q5â‡ª^è©Š22!2ë ¹'",
                                                                     SubtenantApiKeyStatus.getDefault(),
                                                                     new Date(1558093223422L));
        assertFalse(subtenantapikeyInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("88dd64bea93cce83aebac0d84813ec71",
                                                                   new Date(1558093225452L), 19,
                                                                   "88dd64bea93cce83aebac0d84813ec71",
                                                                   "877850f9-c94e-41dd-aa10-47e66f0b977b", 49,
                                                                   "fce22e6d-e5d1-4e8d-9b7d-f379d1dd7305",
                                                                   "88dd64bea93cce83aebac0d84813ec71",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1558093228678L));
            SubtenantApiKey subtenantapikey2 = new SubtenantApiKey("88dd64bea93cce83aebac0d84813ec71",
                                                                   new Date(1558093225452L), 19,
                                                                   "88dd64bea93cce83aebac0d84813ec71",
                                                                   "877850f9-c94e-41dd-aa10-47e66f0b977b", 49,
                                                                   "fce22e6d-e5d1-4e8d-9b7d-f379d1dd7305",
                                                                   "88dd64bea93cce83aebac0d84813ec71",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1558093228678L));
            SubtenantApiKey subtenantapikey3 = new SubtenantApiKey("88dd64bea93cce83aebac0d84813ec71",
                                                                   new Date(1558093222998L), -6,
                                                                   "88dd64bea93cce83aebac0d84813ec71",
                                                                   "d5ab8666-fd89-44d9-a3c5-7475b81a5bc0", -118,
                                                                   "c2652feb-f71e-4bcf-8f52-03b8701b91af",
                                                                   "88dd64bea93cce83aebac0d84813ec71",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1558093224385L));
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotNull(subtenantapikey3);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertNotSame(subtenantapikey3, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey1, subtenantapikey2);
            assertEquals(subtenantapikey1, subtenantapikey1);
            assertFalse(subtenantapikey1.equals(null));
            assertNotEquals(subtenantapikey3, subtenantapikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
