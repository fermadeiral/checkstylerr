// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model ApiKey.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestApiKey {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ApiKey apikey1 = new ApiKey("88dd64bea93cce83aebac0d84813ec71", new Date(1558093225770L), -59,
                                        "88dd64bea93cce83aebac0d84813ec71", "dfd0576e-8047-4521-908b-1794760b3926", 101,
                                        "f7f9004c-1bb6-451b-9a63-0cf54a762267", "88dd64bea93cce83aebac0d84813ec71",
                                        ApiKeyStatus.getDefault(), new Date(1558093220033L));
            ApiKey apikey2 = apikey1.clone();
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotSame(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ApiKey apikey1 = new ApiKey("88dd64bea93cce83aebac0d84813ec71", new Date(1558093221980L), -75,
                                        "88dd64bea93cce83aebac0d84813ec71", "cba2d628-ab37-4d19-9088-321263037164", -28,
                                        "611110d2-db86-4eff-8187-5539dd7012c7", "88dd64bea93cce83aebac0d84813ec71",
                                        ApiKeyStatus.getDefault(), new Date(1558093226028L));
            ApiKey apikey2 = new ApiKey("88dd64bea93cce83aebac0d84813ec71", new Date(1558093221980L), -75,
                                        "88dd64bea93cce83aebac0d84813ec71", "cba2d628-ab37-4d19-9088-321263037164", -28,
                                        "611110d2-db86-4eff-8187-5539dd7012c7", "88dd64bea93cce83aebac0d84813ec71",
                                        ApiKeyStatus.getDefault(), new Date(1558093226028L));
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotSame(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey2.hashCode(), apikey1.hashCode());
            int hashCode = apikey1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, apikey1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ApiKey apikey = new ApiKey("88dd64bea93cce83aebac0d84813ec71", new Date(1558093228041L), -40,
                                   "88dd64bea93cce83aebac0d84813ec71", "89655597-0992-4ee0-9771-02bf5bf7940c", -110,
                                   "d8e98874-9e03-410c-a23c-5128d98e6a14", "88dd64bea93cce83aebac0d84813ec71",
                                   ApiKeyStatus.getDefault(), new Date(1558093226960L));
        assertTrue(apikey.isValid());
        ApiKey apikeyInvalid = new ApiKey("255V\u0011\u001aî‚¶è¥¸25N2\u00062:55?ç¨µ25W2GTá‘?X2ë §Fá¤™2#æ°º5L2!ê«°H5G2\u0002Yêœ“(?+5â¤²U/Q5â‡ª^è©Š22!2ë ¹'",
                                          new Date(1558093226238L), 89,
                                          "255V\u0011\u001aî‚¶è¥¸25N2\u00062:55?ç¨µ25W2GTá‘?X2ë §Fá¤™2#æ°º5L2!ê«°H5G2\u0002Yêœ“(?+5â¤²U/Q5â‡ª^è©Š22!2ë ¹'",
                                          "06b2a5c9-0798-4574-9c9a-386e8cd521bb", 114, null,
                                          "255V\u0011\u001aî‚¶è¥¸25N2\u00062:55?ç¨µ25W2GTá‘?X2ë §Fá¤™2#æ°º5L2!ê«°H5G2\u0002Yêœ“(?+5â¤²U/Q5â‡ª^è©Š22!2ë ¹'",
                                          ApiKeyStatus.getDefault(), new Date(1558093228507L));
        assertFalse(apikeyInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ApiKey apikey1 = new ApiKey("88dd64bea93cce83aebac0d84813ec71", new Date(1558093228658L), 114,
                                        "88dd64bea93cce83aebac0d84813ec71", "348cc561-7fb0-4b86-a4dc-858305a8c9a5", -45,
                                        "5f7093a4-5ae0-4a5a-8f36-943765b2de5c", "88dd64bea93cce83aebac0d84813ec71",
                                        ApiKeyStatus.getDefault(), new Date(1558093220079L));
            ApiKey apikey2 = new ApiKey("88dd64bea93cce83aebac0d84813ec71", new Date(1558093228658L), 114,
                                        "88dd64bea93cce83aebac0d84813ec71", "348cc561-7fb0-4b86-a4dc-858305a8c9a5", -45,
                                        "5f7093a4-5ae0-4a5a-8f36-943765b2de5c", "88dd64bea93cce83aebac0d84813ec71",
                                        ApiKeyStatus.getDefault(), new Date(1558093220079L));
            ApiKey apikey3 = new ApiKey("88dd64bea93cce83aebac0d84813ec71", new Date(1558093228167L), 20,
                                        "88dd64bea93cce83aebac0d84813ec71", "99cd63b1-8d83-40fa-87ff-07404d915b3e", 5,
                                        "2f445d44-a95e-4366-b96f-8facd082aa88", "88dd64bea93cce83aebac0d84813ec71",
                                        ApiKeyStatus.getDefault(), new Date(1558093219033L));
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotNull(apikey3);
            assertNotSame(apikey2, apikey1);
            assertNotSame(apikey3, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey1, apikey2);
            assertEquals(apikey1, apikey1);
            assertFalse(apikey1.equals(null));
            assertNotEquals(apikey3, apikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
