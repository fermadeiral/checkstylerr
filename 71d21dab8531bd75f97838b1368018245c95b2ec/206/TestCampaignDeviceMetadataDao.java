// This file was generated by the Pelion SDK foundation code generator.
// This unit test suite was autogenerated on Fri Apr 05 12:05:28 BST 2019. Feel free to change its contents as you wish.
package com.arm.mbed.cloud.sdk.deviceupdate.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model CampaignDeviceMetadataDao.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestCampaignDeviceMetadataDao {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            CampaignDeviceMetadataDao campaigndevicemetadatadao1 = new CampaignDeviceMetadataDao();
            CampaignDeviceMetadataDao campaigndevicemetadatadao2 = campaigndevicemetadatadao1.clone();
            assertNotNull(campaigndevicemetadatadao1);
            assertNotNull(campaigndevicemetadatadao2);
            assertNotSame(campaigndevicemetadatadao2, campaigndevicemetadatadao1);
            assertEquals(campaigndevicemetadatadao2, campaigndevicemetadatadao1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            CampaignDeviceMetadataDao campaigndevicemetadatadao1 = new CampaignDeviceMetadataDao();
            CampaignDeviceMetadataDao campaigndevicemetadatadao2 = new CampaignDeviceMetadataDao();
            assertNotNull(campaigndevicemetadatadao1);
            assertNotNull(campaigndevicemetadatadao2);
            assertNotSame(campaigndevicemetadatadao2, campaigndevicemetadatadao1);
            assertEquals(campaigndevicemetadatadao2, campaigndevicemetadatadao1);
            assertEquals(campaigndevicemetadatadao2.hashCode(), campaigndevicemetadatadao1.hashCode());
            int hashCode = campaigndevicemetadatadao1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, campaigndevicemetadatadao1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            CampaignDeviceMetadataDao campaigndevicemetadatadao1 = new CampaignDeviceMetadataDao();
            CampaignDeviceMetadataDao campaigndevicemetadatadao2 = new CampaignDeviceMetadataDao();
            assertNotNull(campaigndevicemetadatadao1);
            assertNotNull(campaigndevicemetadatadao2);
            assertNotSame(campaigndevicemetadatadao2, campaigndevicemetadatadao1);
            assertEquals(campaigndevicemetadatadao2, campaigndevicemetadatadao1);
            assertEquals(campaigndevicemetadatadao2, campaigndevicemetadatadao1);
            assertEquals(campaigndevicemetadatadao1, campaigndevicemetadatadao2);
            assertEquals(campaigndevicemetadatadao1, campaigndevicemetadatadao1);
            assertFalse(campaigndevicemetadatadao1.equals(null));
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
