// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.deviceupdate.model;

import static org.junit.Assert.*;

import com.arm.mbed.cloud.sdk.common.Order;
import com.arm.mbed.cloud.sdk.common.listing.ListOptionsEncoder;
import com.arm.mbed.cloud.sdk.common.listing.filtering.FilterOperator;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import org.junit.Test;

/**
 * Unit tests for Model FirmwareImageListOptions.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestFirmwareImageListOptions {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            FirmwareImageListOptions firmwareimagelistoptions1 = new FirmwareImageListOptions(Integer.valueOf(-104),
                                                                                              Long.valueOf(-38),
                                                                                              Order.getDefault(),
                                                                                              "39ec9745-8ced-48e0-8ff9-2f72402627a0",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions2 = firmwareimagelistoptions1.clone();
            assertNotNull(firmwareimagelistoptions1);
            assertNotNull(firmwareimagelistoptions2);
            assertNotSame(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the filters method.
     */
    @SuppressWarnings({ "boxing", "resource" })
    @Test
    public void testFilters() {
        try {
            FirmwareImageListOptions option = new FirmwareImageListOptions().inUpdatedAts(Arrays.asList(new Date(1558093221300L)))
                                                                            .notInUpdatedAts(Arrays.asList(new Date(1558093223771L),
                                                                                                           new Date(1558093226395L),
                                                                                                           new Date(1558093223592L),
                                                                                                           new Date(1558093225682L),
                                                                                                           new Date(1558093229542L),
                                                                                                           new Date(1558093224458L),
                                                                                                           new Date(1558093226056L),
                                                                                                           new Date(1558093222510L),
                                                                                                           new Date(1558093225598L)))
                                                                            .lessThanUpdatedAt(new Date(1558093227640L))
                                                                            .greaterThanUpdatedAt(new Date(1558093221117L))
                                                                            .equalToName("6179b15a-c09b-4b4c-9198-562158fdf764")
                                                                            .notEqualToName("73e3f602-eea4-4422-aff4-e8f8384b0460")
                                                                            .inNames(Arrays.asList("a700d924-caff-49f8-9843-f0f71d5aac87",
                                                                                                   "f6397f9c-a06e-447d-b9be-0be79070d008",
                                                                                                   "8501e929-58ff-4f5e-a2c8-e1eeb5f9492a"))
                                                                            .notInNames(Arrays.asList("9397aa15-301c-4cb6-aecc-f3a33dd28600",
                                                                                                      "3acfac4b-f5c3-4ef2-8269-6b124d57026b"))
                                                                            .equalToDescription("278b2909-7671-403d-891e-f68d543ba5b2")
                                                                            .notEqualToDescription("3fdf03be-0dc0-4f3a-b979-c09c18435357")
                                                                            .inDescriptions(Arrays.asList("95f31f97-a9d2-45f1-9ef5-857134ec054c",
                                                                                                          "e2315668-e4bd-4360-a3a2-3afdeb0c5a61",
                                                                                                          "f6fb5818-0804-49ee-a1dd-35c9f0286c61",
                                                                                                          "82f69267-3dad-4bae-bbb0-769ebe9c521e",
                                                                                                          "5a0e7b7b-f6f3-4827-bdcb-6bd766c61f5b",
                                                                                                          "9cf340be-ac01-4936-b78f-9b3ba6773e64"))
                                                                            .notInDescriptions(Arrays.asList("f75d17aa-e96e-49a7-8917-32d86ea5c6e8",
                                                                                                             "fd049d84-f98d-4682-b2bd-8ad620ca4cfd",
                                                                                                             "a11265d5-1827-4b93-bb8f-6d621282ddb6"))
                                                                            .inCreatedAts(Arrays.asList(new Date(1558093224225L),
                                                                                                        new Date(1558093225091L)))
                                                                            .notInCreatedAts(Arrays.asList(new Date(1558093224705L),
                                                                                                           new Date(1558093227845L),
                                                                                                           new Date(1558093222455L),
                                                                                                           new Date(1558093222644L),
                                                                                                           new Date(1558093223107L),
                                                                                                           new Date(1558093221067L),
                                                                                                           new Date(1558093222600L),
                                                                                                           new Date(1558093230927L)))
                                                                            .lessThanCreatedAt(new Date(1558093224945L))
                                                                            .greaterThanCreatedAt(new Date(1558093230292L))
                                                                            .equalToDatafileUrl("0a1aac0c-aec9-4803-9854-2cf18a2ceaf6")
                                                                            .notEqualToDatafileUrl("8b7a5bd3-d2c8-4f23-88fd-658570dc7ce5")
                                                                            .inDatafileUrls(Arrays.asList("dd02ca83-3de6-4436-9ddc-4476bb4c6f6e",
                                                                                                          "f702727f-2b23-4963-969f-70dc5b881883",
                                                                                                          "c7ba19b3-910b-41c7-b03c-cf189de25ef3",
                                                                                                          "b10b178c-9a51-4534-a9a0-4a00c59aff28",
                                                                                                          "02360126-46e0-4013-b7f3-84fd4d5189bc",
                                                                                                          "b65e4f14-c97a-46b2-b500-4584c4161222",
                                                                                                          "3ff27934-571a-4553-829a-68da1813cf5a",
                                                                                                          "f500ee01-7429-4189-a7e4-cde9d4bc8634"))
                                                                            .notInDatafileUrls(Arrays.asList("af27b50d-4f55-4c1c-8e8d-c72e438a3eb5",
                                                                                                             "d2cefc73-c35a-478c-affc-d8804b43f04d",
                                                                                                             "42555bc1-0fba-4813-9aae-507ad57da732",
                                                                                                             "9c420b17-950a-4b47-8969-e132ed6cf0c9",
                                                                                                             "92ca07c4-798f-4491-b863-a31e016e2859",
                                                                                                             "9d2a6ca0-272c-4031-838b-b867264aa03e"))
                                                                            .equalToDatafileSize(Long.valueOf(-105))
                                                                            .notEqualToDatafileSize(Long.valueOf(54))
                                                                            .inDatafileSizes(Arrays.asList(Long.valueOf(-74),
                                                                                                           Long.valueOf(-112),
                                                                                                           Long.valueOf(-77),
                                                                                                           Long.valueOf(-72)))
                                                                            .notInDatafileSizes(Arrays.asList(Long.valueOf(79),
                                                                                                              Long.valueOf(26),
                                                                                                              Long.valueOf(-100),
                                                                                                              Long.valueOf(-83),
                                                                                                              Long.valueOf(3)))
                                                                            .equalToDatafileChecksum("036cb031-27b7-4e0d-9fdd-542a6bde7638")
                                                                            .notEqualToDatafileChecksum("f36eef79-eb11-425d-82a9-3dafa84200c2")
                                                                            .inDatafileChecksums(Arrays.asList("74d93afe-c164-49cf-bda3-1f9c2027e768",
                                                                                                               "be31a7db-7e98-4f67-91b9-6a3320a35a05"))
                                                                            .notInDatafileChecksums(Arrays.asList("aeee31f2-3375-4056-9002-7712d34cdc1f",
                                                                                                                  "ff81a952-3acf-4b77-a846-d2ed77909773",
                                                                                                                  "c89d0d61-7feb-4a5f-8c58-1d298f227af2",
                                                                                                                  "1a1356de-899b-4c24-b963-914e3511fced",
                                                                                                                  "1d6c9c56-e004-4c47-bd6c-d3e02062f9f3"))
                                                                            .equalToId("8b4ad567-7cd8-4657-910d-5bc13c68290e")
                                                                            .notEqualToId("f0af4b35-7763-4f19-8d20-77f51c4eda82")
                                                                            .inIds(Arrays.asList("48d3f3e0-c87c-4dab-9b4f-c2af2d664fbd",
                                                                                                 "d3bf5387-5c36-43e4-9619-e1c96885965c",
                                                                                                 "12dfd838-ce01-4000-9195-079fad91934d",
                                                                                                 "572e6388-817e-42b7-a667-a3bb9fd834b7",
                                                                                                 "6dbf51a8-1441-42b9-94bf-10282488d6b4",
                                                                                                 "321d58d1-67f4-4640-882e-73cf2a1af147",
                                                                                                 "0cd18047-2702-4fb5-853a-2915ccf4e70b",
                                                                                                 "25b5b22b-6326-406f-a65f-3309ef79d59f"))
                                                                            .notInIds(Arrays.asList("2299595d-ad7e-4501-b24d-f7ea60110cc1",
                                                                                                    "52a57cfc-8830-4f3e-89df-9513c2b0fd33",
                                                                                                    "d390bd16-8b27-4c35-b76c-e91cebfd362f",
                                                                                                    "464c38c9-3e11-44b0-9663-b7f6412515cc"));
            assertTrue(option.hasFilters());
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1558093221300L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1558093223771L), new Date(1558093226395L), new Date(1558093223592L),
                                       new Date(1558093225682L), new Date(1558093229542L), new Date(1558093224458L),
                                       new Date(1558093226056L), new Date(1558093222510L), new Date(1558093225598L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.LESS_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1558093227640L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1558093221117L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("6179b15a-c09b-4b4c-9198-562158fdf764",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("73e3f602-eea4-4422-aff4-e8f8384b0460",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("a700d924-caff-49f8-9843-f0f71d5aac87", "f6397f9c-a06e-447d-b9be-0be79070d008",
                                       "8501e929-58ff-4f5e-a2c8-e1eeb5f9492a"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("9397aa15-301c-4cb6-aecc-f3a33dd28600", "3acfac4b-f5c3-4ef2-8269-6b124d57026b"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("278b2909-7671-403d-891e-f68d543ba5b2",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("3fdf03be-0dc0-4f3a-b979-c09c18435357",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("95f31f97-a9d2-45f1-9ef5-857134ec054c", "e2315668-e4bd-4360-a3a2-3afdeb0c5a61",
                                       "f6fb5818-0804-49ee-a1dd-35c9f0286c61", "82f69267-3dad-4bae-bbb0-769ebe9c521e",
                                       "5a0e7b7b-f6f3-4827-bdcb-6bd766c61f5b", "9cf340be-ac01-4936-b78f-9b3ba6773e64"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("f75d17aa-e96e-49a7-8917-32d86ea5c6e8", "fd049d84-f98d-4682-b2bd-8ad620ca4cfd",
                                       "a11265d5-1827-4b93-bb8f-6d621282ddb6"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1558093224225L), new Date(1558093225091L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1558093224705L), new Date(1558093227845L), new Date(1558093222455L),
                                       new Date(1558093222644L), new Date(1558093223107L), new Date(1558093221067L),
                                       new Date(1558093222600L), new Date(1558093230927L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.LESS_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1558093224945L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1558093230292L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("0a1aac0c-aec9-4803-9854-2cf18a2ceaf6",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("8b7a5bd3-d2c8-4f23-88fd-658570dc7ce5",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("dd02ca83-3de6-4436-9ddc-4476bb4c6f6e", "f702727f-2b23-4963-969f-70dc5b881883",
                                       "c7ba19b3-910b-41c7-b03c-cf189de25ef3", "b10b178c-9a51-4534-a9a0-4a00c59aff28",
                                       "02360126-46e0-4013-b7f3-84fd4d5189bc", "b65e4f14-c97a-46b2-b500-4584c4161222",
                                       "3ff27934-571a-4553-829a-68da1813cf5a", "f500ee01-7429-4189-a7e4-cde9d4bc8634"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("af27b50d-4f55-4c1c-8e8d-c72e438a3eb5", "d2cefc73-c35a-478c-affc-d8804b43f04d",
                                       "42555bc1-0fba-4813-9aae-507ad57da732", "9c420b17-950a-4b47-8969-e132ed6cf0c9",
                                       "92ca07c4-798f-4491-b863-a31e016e2859", "9d2a6ca0-272c-4031-838b-b867264aa03e"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(-105),
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    Long.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(54),
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                       Long.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(-74), Long.valueOf(-112), Long.valueOf(-77), Long.valueOf(-72)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(79), Long.valueOf(26), Long.valueOf(-100), Long.valueOf(-83),
                                       Long.valueOf(3)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                        FilterOperator.EQUAL));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals("036cb031-27b7-4e0d-9fdd-542a6bde7638",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals("f36eef79-eb11-425d-82a9-3dafa84200c2",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM, FilterOperator.IN));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals(Arrays.asList("74d93afe-c164-49cf-bda3-1f9c2027e768", "be31a7db-7e98-4f67-91b9-6a3320a35a05"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                        FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals(Arrays.asList("aeee31f2-3375-4056-9002-7712d34cdc1f", "ff81a952-3acf-4b77-a846-d2ed77909773",
                                       "c89d0d61-7feb-4a5f-8c58-1d298f227af2", "1a1356de-899b-4c24-b963-914e3511fced",
                                       "1d6c9c56-e004-4c47-bd6c-d3e02062f9f3"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("8b4ad567-7cd8-4657-910d-5bc13c68290e",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("f0af4b35-7763-4f19-8d20-77f51c4eda82",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("48d3f3e0-c87c-4dab-9b4f-c2af2d664fbd", "d3bf5387-5c36-43e4-9619-e1c96885965c",
                                       "12dfd838-ce01-4000-9195-079fad91934d", "572e6388-817e-42b7-a667-a3bb9fd834b7",
                                       "6dbf51a8-1441-42b9-94bf-10282488d6b4", "321d58d1-67f4-4640-882e-73cf2a1af147",
                                       "0cd18047-2702-4fb5-853a-2915ccf4e70b", "25b5b22b-6326-406f-a65f-3309ef79d59f"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, List.class,
                                                                 option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("2299595d-ad7e-4501-b24d-f7ea60110cc1", "52a57cfc-8830-4f3e-89df-9513c2b0fd33",
                                       "d390bd16-8b27-4c35-b76c-e91cebfd362f", "464c38c9-3e11-44b0-9663-b7f6412515cc"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID,
                                                                    List.class, option));
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            FirmwareImageListOptions firmwareimagelistoptions1 = new FirmwareImageListOptions(Integer.valueOf(-69),
                                                                                              Long.valueOf(32),
                                                                                              Order.getDefault(),
                                                                                              "e5f5836c-9d7d-465b-9f9f-8e240ee099cf",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions2 = new FirmwareImageListOptions(Integer.valueOf(-69),
                                                                                              Long.valueOf(32),
                                                                                              Order.getDefault(),
                                                                                              "e5f5836c-9d7d-465b-9f9f-8e240ee099cf",
                                                                                              null, null);
            assertNotNull(firmwareimagelistoptions1);
            assertNotNull(firmwareimagelistoptions2);
            assertNotSame(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2.hashCode(), firmwareimagelistoptions1.hashCode());
            int hashCode = firmwareimagelistoptions1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, firmwareimagelistoptions1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            FirmwareImageListOptions firmwareimagelistoptions1 = new FirmwareImageListOptions(Integer.valueOf(-34),
                                                                                              Long.valueOf(79),
                                                                                              Order.getDefault(),
                                                                                              "f8e315cd-d3ec-427d-b3e5-8ed8b0133acf",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions2 = new FirmwareImageListOptions(Integer.valueOf(-34),
                                                                                              Long.valueOf(79),
                                                                                              Order.getDefault(),
                                                                                              "f8e315cd-d3ec-427d-b3e5-8ed8b0133acf",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions3 = new FirmwareImageListOptions(Integer.valueOf(-78),
                                                                                              Long.valueOf(97),
                                                                                              Order.getDefault(),
                                                                                              "d113b098-26a5-4f21-94c4-bb8cfa2d102e",
                                                                                              null, null);
            assertNotNull(firmwareimagelistoptions1);
            assertNotNull(firmwareimagelistoptions2);
            assertNotNull(firmwareimagelistoptions3);
            assertNotSame(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertNotSame(firmwareimagelistoptions3, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions1, firmwareimagelistoptions2);
            assertEquals(firmwareimagelistoptions1, firmwareimagelistoptions1);
            assertFalse(firmwareimagelistoptions1.equals(null));
            assertNotEquals(firmwareimagelistoptions3, firmwareimagelistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
