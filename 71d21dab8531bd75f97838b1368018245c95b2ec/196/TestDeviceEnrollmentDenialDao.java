// This file was generated by the Pelion SDK foundation code generator.
// This unit test suite was autogenerated on Mon Mar 25 14:36:47 GMT 2019. Feel free to change its contents as you wish.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model DeviceEnrollmentDenialDao.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEnrollmentDenialDao {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEnrollmentDenialDao deviceenrollmentdenialdao1 = new DeviceEnrollmentDenialDao();
            DeviceEnrollmentDenialDao deviceenrollmentdenialdao2 = deviceenrollmentdenialdao1.clone();
            assertNotNull(deviceenrollmentdenialdao1);
            assertNotNull(deviceenrollmentdenialdao2);
            assertNotSame(deviceenrollmentdenialdao2, deviceenrollmentdenialdao1);
            assertEquals(deviceenrollmentdenialdao2, deviceenrollmentdenialdao1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEnrollmentDenialDao deviceenrollmentdenialdao1 = new DeviceEnrollmentDenialDao();
            DeviceEnrollmentDenialDao deviceenrollmentdenialdao2 = new DeviceEnrollmentDenialDao();
            assertNotNull(deviceenrollmentdenialdao1);
            assertNotNull(deviceenrollmentdenialdao2);
            assertNotSame(deviceenrollmentdenialdao2, deviceenrollmentdenialdao1);
            assertEquals(deviceenrollmentdenialdao2, deviceenrollmentdenialdao1);
            assertEquals(deviceenrollmentdenialdao2.hashCode(), deviceenrollmentdenialdao1.hashCode());
            int hashCode = deviceenrollmentdenialdao1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceenrollmentdenialdao1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEnrollmentDenialDao deviceenrollmentdenialdao1 = new DeviceEnrollmentDenialDao();
            DeviceEnrollmentDenialDao deviceenrollmentdenialdao2 = new DeviceEnrollmentDenialDao();
            assertNotNull(deviceenrollmentdenialdao1);
            assertNotNull(deviceenrollmentdenialdao2);
            assertNotSame(deviceenrollmentdenialdao2, deviceenrollmentdenialdao1);
            assertEquals(deviceenrollmentdenialdao2, deviceenrollmentdenialdao1);
            assertEquals(deviceenrollmentdenialdao2, deviceenrollmentdenialdao1);
            assertEquals(deviceenrollmentdenialdao1, deviceenrollmentdenialdao2);
            assertEquals(deviceenrollmentdenialdao1, deviceenrollmentdenialdao1);
            assertFalse(deviceenrollmentdenialdao1.equals(null));
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
