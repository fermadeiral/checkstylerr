// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.deviceupdate.model;

import static org.junit.Assert.*;

import com.arm.mbed.cloud.sdk.common.Order;
import com.arm.mbed.cloud.sdk.common.listing.ListOptionsEncoder;
import com.arm.mbed.cloud.sdk.common.listing.filtering.FilterOperator;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import org.junit.Test;

/**
 * Unit tests for Model FirmwareManifestListOptions.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestFirmwareManifestListOptions {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            FirmwareManifestListOptions firmwaremanifestlistoptions1 = new FirmwareManifestListOptions(Integer.valueOf(-80),
                                                                                                       Long.valueOf(82),
                                                                                                       Order.getDefault(),
                                                                                                       "b3c8a6bc-670d-414b-8ccc-0a32ad6252b5",
                                                                                                       null, null);
            FirmwareManifestListOptions firmwaremanifestlistoptions2 = firmwaremanifestlistoptions1.clone();
            assertNotNull(firmwaremanifestlistoptions1);
            assertNotNull(firmwaremanifestlistoptions2);
            assertNotSame(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the filters method.
     */
    @SuppressWarnings({ "boxing", "resource" })
    @Test
    public void testFilters() {
        try {
            FirmwareManifestListOptions option = new FirmwareManifestListOptions().inCreatedAts(Arrays.asList(new Date(1558093225161L),
                                                                                                              new Date(1558093222974L),
                                                                                                              new Date(1558093224479L),
                                                                                                              new Date(1558093227618L),
                                                                                                              new Date(1558093229246L),
                                                                                                              new Date(1558093230072L),
                                                                                                              new Date(1558093229855L)))
                                                                                  .notInCreatedAts(Arrays.asList(new Date(1558093225363L),
                                                                                                                 new Date(1558093228486L),
                                                                                                                 new Date(1558093229733L),
                                                                                                                 new Date(1558093228794L),
                                                                                                                 new Date(1558093225079L),
                                                                                                                 new Date(1558093224818L),
                                                                                                                 new Date(1558093228253L),
                                                                                                                 new Date(1558093222659L),
                                                                                                                 new Date(1558093221453L)))
                                                                                  .lessThanCreatedAt(new Date(1558093225030L))
                                                                                  .greaterThanCreatedAt(new Date(1558093228048L))
                                                                                  .equalToName("a70d090c-92f2-422e-9354-ca97ac02df98")
                                                                                  .notEqualToName("085ca93b-be23-481b-b19b-9d3476adfe24")
                                                                                  .inNames(Arrays.asList("5b32bf12-d4d2-47e8-a297-dd4ca24774fe",
                                                                                                         "23813b88-e7ca-47d8-9807-77004bd71cbc",
                                                                                                         "30e3cdc5-c43f-4846-90a4-fcedc29b0edd"))
                                                                                  .notInNames(Arrays.asList("5468615f-36fc-48ef-a1a7-ce87088eb014",
                                                                                                            "f42c369e-cb7c-4e05-871b-84527c332018",
                                                                                                            "2c668377-fac3-4bf2-aa9e-8dbbbb747839"))
                                                                                  .equalToId("c5240e74-ad47-4737-b92b-41762594a556")
                                                                                  .notEqualToId("c168f501-1086-4647-8922-3d6f2e4715a7")
                                                                                  .inIds(Arrays.asList("8806064f-442b-4b85-baaa-f1ed17dcdb74",
                                                                                                       "0ea5d4fa-dd0e-4981-963e-9402ec010d00",
                                                                                                       "ee4ecf55-deeb-4c0d-aa74-4f9924672507",
                                                                                                       "420c7d9f-c649-454b-865a-a1437acb52e5",
                                                                                                       "eae1a03b-18ab-47ce-bdf7-04740d584e99",
                                                                                                       "33b09b4f-9f06-47dd-91db-d7e67a1f544f"))
                                                                                  .notInIds(Arrays.asList("8a0a11c8-b7fc-43db-b46a-ed00b40379ec",
                                                                                                          "aee01a34-5bd2-4904-b60c-5da1246b9d2c",
                                                                                                          "722230af-f362-4700-817a-c9b246eced27"))
                                                                                  .equalToDatafileUrl("b155d5bf-fe49-4239-bc26-b3c43ac78f57")
                                                                                  .notEqualToDatafileUrl("03c1bf0f-8ae7-4fc5-afd1-af6a63deaadc")
                                                                                  .inDatafileUrls(Arrays.asList("4cc3725c-b171-4587-93a9-6146c7d3bafb",
                                                                                                                "2f572959-e1f2-44aa-bb62-d916a165ef98",
                                                                                                                "3996e7d0-d260-4521-8435-602c5c80dbb6"))
                                                                                  .notInDatafileUrls(Arrays.asList("5e15662f-3250-4323-9de8-af62d45c64dd",
                                                                                                                   "10b3b807-2c00-46f7-bd70-caae976dd150",
                                                                                                                   "dff43fc9-dc7c-4e26-9b60-6181cf0f33f8",
                                                                                                                   "26167122-0e64-4d53-bf6d-252a6e70abba",
                                                                                                                   "f61ffc8c-ad7b-4410-bf61-ad481cbc186a",
                                                                                                                   "4bfbc473-c942-4518-a903-9312c7bea1d6",
                                                                                                                   "7f24954b-36a6-4a89-941d-eadf07c32fad",
                                                                                                                   "eb692400-cb16-4f49-b040-ad1db5823ff2"))
                                                                                  .equalToDatafileSize(Long.valueOf(75))
                                                                                  .notEqualToDatafileSize(Long.valueOf(28))
                                                                                  .inDatafileSizes(Arrays.asList(Long.valueOf(-111),
                                                                                                                 Long.valueOf(71),
                                                                                                                 Long.valueOf(-65),
                                                                                                                 Long.valueOf(39),
                                                                                                                 Long.valueOf(-88),
                                                                                                                 Long.valueOf(-15),
                                                                                                                 Long.valueOf(2),
                                                                                                                 Long.valueOf(-121),
                                                                                                                 Long.valueOf(-46)))
                                                                                  .notInDatafileSizes(Arrays.asList(Long.valueOf(50),
                                                                                                                    Long.valueOf(-98),
                                                                                                                    Long.valueOf(-11),
                                                                                                                    Long.valueOf(67),
                                                                                                                    Long.valueOf(51),
                                                                                                                    Long.valueOf(72),
                                                                                                                    Long.valueOf(-31),
                                                                                                                    Long.valueOf(99),
                                                                                                                    Long.valueOf(-64)))
                                                                                  .equalToDeviceClass("dfb5a1ef-7897-4344-aa06-4a35553e4c05")
                                                                                  .notEqualToDeviceClass("f87914be-cf40-4a9f-9272-ed265b048704")
                                                                                  .inDeviceClass(Arrays.asList("ee29e3a0-dbb8-48b6-9d72-fe24f03813bc",
                                                                                                               "72b88880-4150-42c5-b60c-ea2cbc660061",
                                                                                                               "d8138985-fa1f-44f6-87e0-87367113a78e",
                                                                                                               "d5cd67e0-c0f8-47ac-bfde-03f6c0eb64a5",
                                                                                                               "7917240d-e92d-413c-a7fb-2c4ee3d827ba",
                                                                                                               "9dda5f3f-98e7-4811-9bf3-eb182bc3162f",
                                                                                                               "ae9a18f8-1e7c-45a7-a0af-d36c6ffec45d",
                                                                                                               "988ba894-b6a5-43d1-a46c-9a24807180bb"))
                                                                                  .notInDeviceClass(Arrays.asList("815a3faa-f99b-441c-9f89-3ce9e1abfda8",
                                                                                                                  "a9e447ea-87d1-4cf0-9c22-d71a2f11d756",
                                                                                                                  "df3c7840-34ba-4c39-b47b-bb991d48690a"))
                                                                                  .inTimestamps(Arrays.asList(new Date(1558093226072L),
                                                                                                              new Date(1558093225767L),
                                                                                                              new Date(1558093230017L),
                                                                                                              new Date(1558093224671L),
                                                                                                              new Date(1558093221318L),
                                                                                                              new Date(1558093229404L)))
                                                                                  .notInTimestamps(Arrays.asList(new Date(1558093229203L),
                                                                                                                 new Date(1558093224985L),
                                                                                                                 new Date(1558093222902L),
                                                                                                                 new Date(1558093221590L),
                                                                                                                 new Date(1558093224971L),
                                                                                                                 new Date(1558093223748L),
                                                                                                                 new Date(1558093226814L),
                                                                                                                 new Date(1558093229796L),
                                                                                                                 new Date(1558093222094L)))
                                                                                  .lessThanTimestamp(new Date(1558093221717L))
                                                                                  .greaterThanTimestamp(new Date(1558093222418L))
                                                                                  .inUpdatedAts(Arrays.asList(new Date(1558093230133L),
                                                                                                              new Date(1558093228749L),
                                                                                                              new Date(1558093229439L)))
                                                                                  .notInUpdatedAts(Arrays.asList(new Date(1558093221733L),
                                                                                                                 new Date(1558093221302L)))
                                                                                  .lessThanUpdatedAt(new Date(1558093229941L))
                                                                                  .greaterThanUpdatedAt(new Date(1558093224376L))
                                                                                  .equalToDescription("b3306dd0-7204-490f-8b8e-754db64a40f2")
                                                                                  .notEqualToDescription("75d2e948-1611-4593-9655-dc177658c165")
                                                                                  .inDescriptions(Arrays.asList("9c9f5be5-b3bc-4920-b703-07205418ff85",
                                                                                                                "f1dfd556-7088-4d58-a307-713176929e2f",
                                                                                                                "e6342325-07a3-463d-bfd1-8b1b2ee2b72e"))
                                                                                  .notInDescriptions(Arrays.asList("9f02ef57-f805-4c02-b311-df535c5bdc70"));
            assertTrue(option.hasFilters());
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1558093225161L), new Date(1558093222974L), new Date(1558093224479L),
                                       new Date(1558093227618L), new Date(1558093229246L), new Date(1558093230072L),
                                       new Date(1558093229855L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1558093225363L), new Date(1558093228486L), new Date(1558093229733L),
                                       new Date(1558093228794L), new Date(1558093225079L), new Date(1558093224818L),
                                       new Date(1558093228253L), new Date(1558093222659L), new Date(1558093221453L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                        FilterOperator.LESS_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1558093225030L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1558093228048L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME, FilterOperator.EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("a70d090c-92f2-422e-9354-ca97ac02df98",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("085ca93b-be23-481b-b19b-9d3476adfe24",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME, FilterOperator.IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("5b32bf12-d4d2-47e8-a297-dd4ca24774fe", "23813b88-e7ca-47d8-9807-77004bd71cbc",
                                       "30e3cdc5-c43f-4846-90a4-fcedc29b0edd"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("5468615f-36fc-48ef-a1a7-ce87088eb014", "f42c369e-cb7c-4e05-871b-84527c332018",
                                       "2c668377-fac3-4bf2-aa9e-8dbbbb747839"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID, FilterOperator.EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("c5240e74-ad47-4737-b92b-41762594a556",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("c168f501-1086-4647-8922-3d6f2e4715a7",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID, FilterOperator.IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("8806064f-442b-4b85-baaa-f1ed17dcdb74", "0ea5d4fa-dd0e-4981-963e-9402ec010d00",
                                       "ee4ecf55-deeb-4c0d-aa74-4f9924672507", "420c7d9f-c649-454b-865a-a1437acb52e5",
                                       "eae1a03b-18ab-47ce-bdf7-04740d584e99", "33b09b4f-9f06-47dd-91db-d7e67a1f544f"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("8a0a11c8-b7fc-43db-b46a-ed00b40379ec", "aee01a34-5bd2-4904-b60c-5da1246b9d2c",
                                       "722230af-f362-4700-817a-c9b246eced27"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("b155d5bf-fe49-4239-bc26-b3c43ac78f57",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("03c1bf0f-8ae7-4fc5-afd1-af6a63deaadc",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("4cc3725c-b171-4587-93a9-6146c7d3bafb", "2f572959-e1f2-44aa-bb62-d916a165ef98",
                                       "3996e7d0-d260-4521-8435-602c5c80dbb6"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("5e15662f-3250-4323-9de8-af62d45c64dd", "10b3b807-2c00-46f7-bd70-caae976dd150",
                                       "dff43fc9-dc7c-4e26-9b60-6181cf0f33f8", "26167122-0e64-4d53-bf6d-252a6e70abba",
                                       "f61ffc8c-ad7b-4410-bf61-ad481cbc186a", "4bfbc473-c942-4518-a903-9312c7bea1d6",
                                       "7f24954b-36a6-4a89-941d-eadf07c32fad", "eb692400-cb16-4f49-b040-ad1db5823ff2"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(75),
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    Long.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(28),
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                       Long.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(-111), Long.valueOf(71), Long.valueOf(-65), Long.valueOf(39),
                                       Long.valueOf(-88), Long.valueOf(-15), Long.valueOf(2), Long.valueOf(-121),
                                       Long.valueOf(-46)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                        FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(50), Long.valueOf(-98), Long.valueOf(-11), Long.valueOf(67),
                                       Long.valueOf(51), Long.valueOf(72), Long.valueOf(-31), Long.valueOf(99),
                                       Long.valueOf(-64)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS, FilterOperator.EQUAL));
            assertNotNull(option.getDeviceClassFilters());
            assertEquals("dfb5a1ef-7897-4344-aa06-4a35553e4c05",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDeviceClassFilters());
            assertEquals("f87914be-cf40-4a9f-9272-ed265b048704",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS, FilterOperator.IN));
            assertNotNull(option.getDeviceClassFilters());
            assertEquals(Arrays.asList("ee29e3a0-dbb8-48b6-9d72-fe24f03813bc", "72b88880-4150-42c5-b60c-ea2cbc660061",
                                       "d8138985-fa1f-44f6-87e0-87367113a78e", "d5cd67e0-c0f8-47ac-bfde-03f6c0eb64a5",
                                       "7917240d-e92d-413c-a7fb-2c4ee3d827ba", "9dda5f3f-98e7-4811-9bf3-eb182bc3162f",
                                       "ae9a18f8-1e7c-45a7-a0af-d36c6ffec45d", "988ba894-b6a5-43d1-a46c-9a24807180bb"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS, FilterOperator.NOT_IN));
            assertNotNull(option.getDeviceClassFilters());
            assertEquals(Arrays.asList("815a3faa-f99b-441c-9f89-3ce9e1abfda8", "a9e447ea-87d1-4cf0-9c22-d71a2f11d756",
                                       "df3c7840-34ba-4c39-b47b-bb991d48690a"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP, FilterOperator.IN));
            assertNotNull(option.getTimestampFilters());
            assertEquals(Arrays.asList(new Date(1558093226072L), new Date(1558093225767L), new Date(1558093230017L),
                                       new Date(1558093224671L), new Date(1558093221318L), new Date(1558093229404L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP, FilterOperator.NOT_IN));
            assertNotNull(option.getTimestampFilters());
            assertEquals(Arrays.asList(new Date(1558093229203L), new Date(1558093224985L), new Date(1558093222902L),
                                       new Date(1558093221590L), new Date(1558093224971L), new Date(1558093223748L),
                                       new Date(1558093226814L), new Date(1558093229796L), new Date(1558093222094L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP, FilterOperator.LESS_THAN));
            assertNotNull(option.getTimestampFilters());
            assertEquals(new Date(1558093221717L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getTimestampFilters());
            assertEquals(new Date(1558093222418L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1558093230133L), new Date(1558093228749L), new Date(1558093229439L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1558093221733L), new Date(1558093221302L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                        FilterOperator.LESS_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1558093229941L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1558093224376L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("b3306dd0-7204-490f-8b8e-754db64a40f2",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("75d2e948-1611-4593-9655-dc177658c165",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("9c9f5be5-b3bc-4920-b703-07205418ff85", "f1dfd556-7088-4d58-a307-713176929e2f",
                                       "e6342325-07a3-463d-bfd1-8b1b2ee2b72e"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("9f02ef57-f805-4c02-b311-df535c5bdc70"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    List.class, option));
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            FirmwareManifestListOptions firmwaremanifestlistoptions1 = new FirmwareManifestListOptions(Integer.valueOf(56),
                                                                                                       Long.valueOf(105),
                                                                                                       Order.getDefault(),
                                                                                                       "dc65e132-747e-4f1d-be87-805ee14a629d",
                                                                                                       null, null);
            FirmwareManifestListOptions firmwaremanifestlistoptions2 = new FirmwareManifestListOptions(Integer.valueOf(56),
                                                                                                       Long.valueOf(105),
                                                                                                       Order.getDefault(),
                                                                                                       "dc65e132-747e-4f1d-be87-805ee14a629d",
                                                                                                       null, null);
            assertNotNull(firmwaremanifestlistoptions1);
            assertNotNull(firmwaremanifestlistoptions2);
            assertNotSame(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2.hashCode(), firmwaremanifestlistoptions1.hashCode());
            int hashCode = firmwaremanifestlistoptions1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, firmwaremanifestlistoptions1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            FirmwareManifestListOptions firmwaremanifestlistoptions1 = new FirmwareManifestListOptions(Integer.valueOf(28),
                                                                                                       Long.valueOf(76),
                                                                                                       Order.getDefault(),
                                                                                                       "6a3f87d1-46ef-46f7-92ea-7716d034beb2",
                                                                                                       null, null);
            FirmwareManifestListOptions firmwaremanifestlistoptions2 = new FirmwareManifestListOptions(Integer.valueOf(28),
                                                                                                       Long.valueOf(76),
                                                                                                       Order.getDefault(),
                                                                                                       "6a3f87d1-46ef-46f7-92ea-7716d034beb2",
                                                                                                       null, null);
            FirmwareManifestListOptions firmwaremanifestlistoptions3 = new FirmwareManifestListOptions(Integer.valueOf(-123),
                                                                                                       Long.valueOf(75),
                                                                                                       Order.getDefault(),
                                                                                                       "7941ce7c-17d6-4d7a-ae62-a5563758afd5",
                                                                                                       null, null);
            assertNotNull(firmwaremanifestlistoptions1);
            assertNotNull(firmwaremanifestlistoptions2);
            assertNotNull(firmwaremanifestlistoptions3);
            assertNotSame(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertNotSame(firmwaremanifestlistoptions3, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions1, firmwaremanifestlistoptions2);
            assertEquals(firmwaremanifestlistoptions1, firmwaremanifestlistoptions1);
            assertFalse(firmwaremanifestlistoptions1.equals(null));
            assertNotEquals(firmwaremanifestlistoptions3, firmwaremanifestlistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
