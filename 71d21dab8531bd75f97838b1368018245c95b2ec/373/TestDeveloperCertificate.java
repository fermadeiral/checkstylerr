// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.security.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeveloperCertificate.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeveloperCertificate {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("d6cfcc31-c459-4a20-a459-cf3552e16097",
                                                                                  "97dc10ca-8b6e-4788-8807-376b52b01d52",
                                                                                  new Date(1558093222237L),
                                                                                  "993cca06-b355-444c-b190-e0dc41b6330b",
                                                                                  "ce3c3571-4d1d-46b4-bda5-82ff84abd4d5",
                                                                                  "ad2491e3-97a9-455b-a813-02cd42b3bdd5",
                                                                                  "4854e98a-cb92-4d04-8a8c-68b70d5cf8f8",
                                                                                  "1ddf7473-8590-4e6f-beb6-ca076c48e427");
            DeveloperCertificate developercertificate2 = developercertificate1.clone();
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("44f29017-96bf-4af8-98e5-a70a7cb93b9e",
                                                                                  "00cd82ff-9e7e-437d-918d-c096ec7c8271",
                                                                                  new Date(1558093222308L),
                                                                                  "28bc30c9-2382-4a47-a6f7-e717f2677c67",
                                                                                  "a5caf074-8489-4992-9520-55bba24e371d",
                                                                                  "1712b82a-dad1-4837-b88d-6fe9a24b87ae",
                                                                                  "2ab4a862-47fc-4895-a3a0-002f67abf76c",
                                                                                  "63cf3e4a-eea1-4071-8b65-4a5e8a88f77c");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("44f29017-96bf-4af8-98e5-a70a7cb93b9e",
                                                                                  "00cd82ff-9e7e-437d-918d-c096ec7c8271",
                                                                                  new Date(1558093222308L),
                                                                                  "28bc30c9-2382-4a47-a6f7-e717f2677c67",
                                                                                  "a5caf074-8489-4992-9520-55bba24e371d",
                                                                                  "1712b82a-dad1-4837-b88d-6fe9a24b87ae",
                                                                                  "2ab4a862-47fc-4895-a3a0-002f67abf76c",
                                                                                  "63cf3e4a-eea1-4071-8b65-4a5e8a88f77c");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2.hashCode(), developercertificate1.hashCode());
            int hashCode = developercertificate1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, developercertificate1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeveloperCertificate developercertificate = new DeveloperCertificate("4777ce56-8e87-489b-afb0-502da20735ed",
                                                                             "f10d2eba-675d-44f8-9dbf-0a515762c780",
                                                                             new Date(1558093219979L),
                                                                             "12c6f280-01f7-433b-99ce-9602aee141ec",
                                                                             "6d144f3f-ebbd-4e5f-b818-8dd209425062",
                                                                             "051eec93-3748-4f15-a8e0-fd2e8869b84c",
                                                                             "31be3e3a-d078-4cbe-a984-7a9a6690a1c7",
                                                                             "85844789-60bc-489a-99c0-899f8b49723f");
        assertTrue(developercertificate.isValid());
        DeveloperCertificate developercertificateInvalid = new DeveloperCertificate("c9bda94b-0051-49e2-a405-66744b039738",
                                                                                    "6023f3e5-a3d3-4810-8ee8-2aaae86e55b8",
                                                                                    new Date(1558093221695L),
                                                                                    "2b870aa6-0942-450a-b908-86db79d130be",
                                                                                    "116c4948-af92-47fd-8046-85f25c1d848c",
                                                                                    "173870f2-abdc-4fbe-8528-91e167e65310",
                                                                                    null,
                                                                                    "366b96a3-cb84-4303-a89e-b685739796a9");
        assertFalse(developercertificateInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("caa2c36d-aa4c-4006-a9ae-d8ac37dfcc2f",
                                                                                  "74ef3af9-0beb-4c2b-a629-90226fbc247e",
                                                                                  new Date(1558093226739L),
                                                                                  "216aa3dd-034b-4c27-8224-f8ba370c1fd3",
                                                                                  "2b00567b-0c00-4d4b-9091-0f52bf119abf",
                                                                                  "93b3317a-2158-46d3-9ca5-68435da0a1ab",
                                                                                  "96602a18-a0fe-4c0f-8564-108b47ba6906",
                                                                                  "1fee1ac4-5570-40d2-a428-c7abe2f9c2f2");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("caa2c36d-aa4c-4006-a9ae-d8ac37dfcc2f",
                                                                                  "74ef3af9-0beb-4c2b-a629-90226fbc247e",
                                                                                  new Date(1558093226739L),
                                                                                  "216aa3dd-034b-4c27-8224-f8ba370c1fd3",
                                                                                  "2b00567b-0c00-4d4b-9091-0f52bf119abf",
                                                                                  "93b3317a-2158-46d3-9ca5-68435da0a1ab",
                                                                                  "96602a18-a0fe-4c0f-8564-108b47ba6906",
                                                                                  "1fee1ac4-5570-40d2-a428-c7abe2f9c2f2");
            DeveloperCertificate developercertificate3 = new DeveloperCertificate("706de437-69ed-4234-9334-96ad8890a671",
                                                                                  "753ed82e-657a-468f-96f7-5192f3cfa8bc",
                                                                                  new Date(1558093225043L),
                                                                                  "5c71884a-a1d0-4d43-8639-e4a5c1043c33",
                                                                                  "539e92f8-7e69-4fc6-bb5c-b84cd2e712b6",
                                                                                  "dc19e4ae-5ecc-4e27-beca-3f0625b35007",
                                                                                  "fff5ebfb-c5d9-4323-a1fd-f5ca78fbb8db",
                                                                                  "4c206ee3-3477-4c85-aab2-ee0e87f594a9");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotNull(developercertificate3);
            assertNotSame(developercertificate2, developercertificate1);
            assertNotSame(developercertificate3, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate1, developercertificate2);
            assertEquals(developercertificate1, developercertificate1);
            assertFalse(developercertificate1.equals(null));
            assertNotEquals(developercertificate3, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
