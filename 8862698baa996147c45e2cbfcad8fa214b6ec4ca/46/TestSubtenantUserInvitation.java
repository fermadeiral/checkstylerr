// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantUserInvitation.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantUserInvitation {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantUserInvitation subtenantuserinvitation1 = new SubtenantUserInvitation("c34cec003db8abf16d4cdeddb5aa7f88",
                                                                                           new Date(1560172165400L),
                                                                                           "15633.6be99@0a2d1.me",
                                                                                           new Date(1560172161652L),
                                                                                           "c34cec003db8abf16d4cdeddb5aa7f88",
                                                                                           null,
                                                                                           new Date(1560172163597L),
                                                                                           "c34cec003db8abf16d4cdeddb5aa7f88");
            SubtenantUserInvitation subtenantuserinvitation2 = subtenantuserinvitation1.clone();
            assertNotNull(subtenantuserinvitation1);
            assertNotNull(subtenantuserinvitation2);
            assertNotSame(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantUserInvitation subtenantuserinvitation1 = new SubtenantUserInvitation("c34cec003db8abf16d4cdeddb5aa7f88",
                                                                                           new Date(1560172164608L),
                                                                                           "bbe83.63350@22d99.fr",
                                                                                           new Date(1560172165619L),
                                                                                           "c34cec003db8abf16d4cdeddb5aa7f88",
                                                                                           null,
                                                                                           new Date(1560172162274L),
                                                                                           "c34cec003db8abf16d4cdeddb5aa7f88");
            SubtenantUserInvitation subtenantuserinvitation2 = new SubtenantUserInvitation("c34cec003db8abf16d4cdeddb5aa7f88",
                                                                                           new Date(1560172164608L),
                                                                                           "bbe83.63350@22d99.fr",
                                                                                           new Date(1560172165619L),
                                                                                           "c34cec003db8abf16d4cdeddb5aa7f88",
                                                                                           null,
                                                                                           new Date(1560172162274L),
                                                                                           "c34cec003db8abf16d4cdeddb5aa7f88");
            assertNotNull(subtenantuserinvitation1);
            assertNotNull(subtenantuserinvitation2);
            assertNotSame(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2.hashCode(), subtenantuserinvitation1.hashCode());
            int hashCode = subtenantuserinvitation1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantuserinvitation1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantUserInvitation subtenantuserinvitation = new SubtenantUserInvitation("c34cec003db8abf16d4cdeddb5aa7f88",
                                                                                      new Date(1560172170530L),
                                                                                      "8741c.78a42@0fc73.fr",
                                                                                      new Date(1560172162264L),
                                                                                      "c34cec003db8abf16d4cdeddb5aa7f88",
                                                                                      null, new Date(1560172168445L),
                                                                                      "c34cec003db8abf16d4cdeddb5aa7f88");
        assertTrue(subtenantuserinvitation.isValid());
        SubtenantUserInvitation subtenantuserinvitationInvalid = new SubtenantUserInvitation(null,
                                                                                             new Date(1560172168268L),
                                                                                             null,
                                                                                             new Date(1560172165952L),
                                                                                             "W\u0010ç”›2å¥¾W.\u001b/2\u0013\u001c\u0010292â¸ª\u0019\u0018î˜ 2Kã£©ä¢Š-(?æ·«2â ®#Q\\\\A2ã®ª\\\\Ná¥ª,2\u0004ì­?ã•¢ã‹ P22S2Wî–‰MV\u0007>,J2îžƒï‡‡Já?ˆ",
                                                                                             null,
                                                                                             new Date(1560172166870L),
                                                                                             "W\u0010ç”›2å¥¾W.\u001b/2\u0013\u001c\u0010292â¸ª\u0019\u0018î˜ 2Kã£©ä¢Š-(?æ·«2â ®#Q\\\\A2ã®ª\\\\Ná¥ª,2\u0004ì­?ã•¢ã‹ P22S2Wî–‰MV\u0007>,J2îžƒï‡‡Já?ˆ");
        assertFalse(subtenantuserinvitationInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantUserInvitation subtenantuserinvitation1 = new SubtenantUserInvitation("c34cec003db8abf16d4cdeddb5aa7f88",
                                                                                           new Date(1560172168053L),
                                                                                           "f7a27.2f314@200d2.me",
                                                                                           new Date(1560172164091L),
                                                                                           "c34cec003db8abf16d4cdeddb5aa7f88",
                                                                                           null,
                                                                                           new Date(1560172162972L),
                                                                                           "c34cec003db8abf16d4cdeddb5aa7f88");
            SubtenantUserInvitation subtenantuserinvitation2 = new SubtenantUserInvitation("c34cec003db8abf16d4cdeddb5aa7f88",
                                                                                           new Date(1560172168053L),
                                                                                           "f7a27.2f314@200d2.me",
                                                                                           new Date(1560172164091L),
                                                                                           "c34cec003db8abf16d4cdeddb5aa7f88",
                                                                                           null,
                                                                                           new Date(1560172162972L),
                                                                                           "c34cec003db8abf16d4cdeddb5aa7f88");
            SubtenantUserInvitation subtenantuserinvitation3 = new SubtenantUserInvitation("c34cec003db8abf16d4cdeddb5aa7f88",
                                                                                           new Date(1560172170657L),
                                                                                           "07e21.9fa33@0c272.me",
                                                                                           new Date(1560172168747L),
                                                                                           "c34cec003db8abf16d4cdeddb5aa7f88",
                                                                                           null,
                                                                                           new Date(1560172170590L),
                                                                                           "c34cec003db8abf16d4cdeddb5aa7f88");
            assertNotNull(subtenantuserinvitation1);
            assertNotNull(subtenantuserinvitation2);
            assertNotNull(subtenantuserinvitation3);
            assertNotSame(subtenantuserinvitation2, subtenantuserinvitation1);
            assertNotSame(subtenantuserinvitation3, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation1, subtenantuserinvitation2);
            assertEquals(subtenantuserinvitation1, subtenantuserinvitation1);
            assertFalse(subtenantuserinvitation1.equals(null));
            assertNotEquals(subtenantuserinvitation3, subtenantuserinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
