// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceGroup.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceGroup {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceGroup devicegroup1 = new DeviceGroup(new Date(1560172170468L), null,
                                                       "2df47dca-7aa8-4345-9703-e893df917285", 88,
                                                       "7cd3d58b-e0fe-434d-86aa-82d2b7092040",
                                                       "a4705f00-528e-4771-8590-47a98fe84e58",
                                                       new Date(1560172167905L));
            DeviceGroup devicegroup2 = devicegroup1.clone();
            assertNotNull(devicegroup1);
            assertNotNull(devicegroup2);
            assertNotSame(devicegroup2, devicegroup1);
            assertEquals(devicegroup2, devicegroup1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceGroup devicegroup1 = new DeviceGroup(new Date(1560172170827L), null,
                                                       "fefc4c0f-90ca-4136-b737-42589f8c4a62", -87,
                                                       "92824196-b886-403e-a771-9059ba00ca54",
                                                       "0a54a242-d769-4c43-a6f9-d935c3c276f1",
                                                       new Date(1560172168696L));
            DeviceGroup devicegroup2 = new DeviceGroup(new Date(1560172170827L), null,
                                                       "fefc4c0f-90ca-4136-b737-42589f8c4a62", -87,
                                                       "92824196-b886-403e-a771-9059ba00ca54",
                                                       "0a54a242-d769-4c43-a6f9-d935c3c276f1",
                                                       new Date(1560172168696L));
            assertNotNull(devicegroup1);
            assertNotNull(devicegroup2);
            assertNotSame(devicegroup2, devicegroup1);
            assertEquals(devicegroup2, devicegroup1);
            assertEquals(devicegroup2.hashCode(), devicegroup1.hashCode());
            int hashCode = devicegroup1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, devicegroup1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceGroup devicegroup = new DeviceGroup(new Date(1560172168392L), null,
                                                  "0cd5c718-9251-40cf-9360-526c6e2b5774", -18,
                                                  "76b03c61-1586-420d-883f-15369f210247",
                                                  "2ea68220-cc4b-4626-bdd5-a5023308f507", new Date(1560172169106L));
        assertTrue(devicegroup.isValid());
        DeviceGroup devicegroupInvalid = new DeviceGroup(new Date(1560172169213L), null,
                                                         "d09c7812-67d2-41c4-aaf9-a493e3becad9d974d3db-8fba-432f-a6c1-3d54d397565ffe4894ec-cabe-4452-8e8d-d2ee9d7cd6908cab0d3f-1c3a-4f83-91a9-52f6764a253bedb139a3-c8ef-409f-ad2f-717eb2695d13c4d154f6-ac41-4dfa-8ad5-d7ad648dea5f50772e02-29e8-4afe-ac6a-99168f9105095613fb07-19ec-489d-a7ea-4c7e58d1ab4466b5be3d-e571-49d9-b981-4c6f64c5749fe381d26a-b92a-4fec-bbfc-0f0b0c124a5b85afb1f8-e7f6-4276-8ccb-baa69bf57018fd7ae4ae-8fd7-4fc1-bde0-bf6389f083fb5e06f234-1430-4e69-aeb4-2010d028a9efdea9a252-4386-43d5-8a65-8f8f893350c9a5815c03-bf58-42a2-ba82-fbf738e8cdbb4749ff44-01e4-459b-b30c-d9a27779df6caba4e424-47c4-44db-aa77-e4c8f6129462f6f4f637-efb8-4aba-9e32-7622677473252df4e0b4-47b0-47fb-9469-e4ed7bd7f462dea08935-981e-4a21-bede-245df99dbeddb93c3b12-dcdd-462e-9b12-0cf0a4cc5931bad0d7dd-ec57-448e-aa08-161122dc3ecc191d73ed-ca30-4e62-af98-063295702a758e008c5a-70fd-43e4-8ae7-18a8ffb26d26a4dcb271-bd61-4241-9479-7b93377ed4f76f324ea0-d3fb-461e-bbfc-cc18e5c204a21dd9a11c-ef22-4c7f-a47d-e652a9bfefaf004bbeaf-8e08-45cb-a449-b461b33fec332d264ad8-8e4d-4202-8563-5fb271fcbf4fa3c0e545-0659-44ae-95cd-bc4f97a994ac11425f91-bfc7-448f-af42-5ec8bbeaaaf1c359ec1e-a93b-42e3-b96c-0c8eea03602216d666c1-e9cd-45d6-b703-8db84d0954d98acacaf0-0d94-4928-8b13-c1b3d5b504738e0c717d-0610-42e1-965e-d399626c60a4f6102b68-3383-4b0e-b19f-622b706587baaad0d80c-73a8-4e4c-aaa3-f5573bf1bfc357e968ef-03c5-413e-b871-5df2c3d022ecab43656f-0290-4ad9-a93e-a26bba08298ecbd29fdc-75ae-4609-bed4-d4896fe3b703f4301bed-768e-499f-a0e1-c539952cccfb4105b150-6710-4e6b-958c-a012f3e82c9868b7df73-eb77-400d-97c3-3edec84edd7cb979f083-417c-44fc-a35e-aa63777f02b7506a29cb-c25b-4257-8c97-485acf29ae61bfe8e0fb-205e-460c-8d5e-3d35af82d209902ee9e2-81d7-4f85-9e36-adc39dfc441fb3d9b2ff-2003-438e-900a-4da3d63b070994d99ddb-fe35-4684-836c-059f4d5fcf87f1600453-e1c6-456b-80e2-0558d6a240b2817d7323-1f10-4df9-8755-8dd0c116776486c3ad0b-6bdc-41c6-b247-2b46121e04e765b71391-37d1-49e1-8da7-7302d31e42728b7fb2bb-681b-4a19-a8b9-1b53b513cd0c401b8805-bd88-4b20-a1b1-05c73f0ff665686ca539-becf-4f03-8745-9901280e39a3",
                                                         -126, "31117661-0e90-4b92-a1ff-5adae1225382",
                                                         "3ecb2ff0-d099-404c-880f-0d22bab30f57f30d7e0d-ea8d-4052-af86-c77235653e1bf236bbf9-1d78-435f-a7c8-1679b6831bc0520ac2f5-3e89-4848-b8ad-fd26b3677936",
                                                         new Date(1560172161094L));
        assertFalse(devicegroupInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceGroup devicegroup1 = new DeviceGroup(new Date(1560172166718L), null,
                                                       "4a5f8143-3455-4438-8ddc-4087317cc3d2", 35,
                                                       "1f92efbf-587e-4740-b36d-72f6092b6696",
                                                       "b0bff40b-549e-401c-b91d-4cf7515e05c3",
                                                       new Date(1560172162186L));
            DeviceGroup devicegroup2 = new DeviceGroup(new Date(1560172166718L), null,
                                                       "4a5f8143-3455-4438-8ddc-4087317cc3d2", 35,
                                                       "1f92efbf-587e-4740-b36d-72f6092b6696",
                                                       "b0bff40b-549e-401c-b91d-4cf7515e05c3",
                                                       new Date(1560172162186L));
            DeviceGroup devicegroup3 = new DeviceGroup(new Date(1560172163027L), null,
                                                       "06fc4d0e-8840-4592-9c12-7d8062781fb5", 35,
                                                       "a94bda38-e57c-4e02-8171-f34bf5680985",
                                                       "7098d8e3-03bb-4ec1-af8b-d707e713e108",
                                                       new Date(1560172160992L));
            assertNotNull(devicegroup1);
            assertNotNull(devicegroup2);
            assertNotNull(devicegroup3);
            assertNotSame(devicegroup2, devicegroup1);
            assertNotSame(devicegroup3, devicegroup1);
            assertEquals(devicegroup2, devicegroup1);
            assertEquals(devicegroup2, devicegroup1);
            assertEquals(devicegroup1, devicegroup2);
            assertEquals(devicegroup1, devicegroup1);
            assertFalse(devicegroup1.equals(null));
            assertNotEquals(devicegroup3, devicegroup1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
