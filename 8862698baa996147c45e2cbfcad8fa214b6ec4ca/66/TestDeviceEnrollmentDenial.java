// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEnrollmentDenial.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEnrollmentDenial {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("c34cec003db8abf16d4cdeddb5aa7f88",
                                                                                        new Date(1560172162875L),
                                                                                        "a682d8a0-2663-467f-bb66-c64e068d9820",
                                                                                        "c34cec003db8abf16d4cdeddb5aa7f88",
                                                                                        "c34cec003db8abf16d4cdeddb5aa7f88");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = deviceenrollmentdenial1.clone();
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("c34cec003db8abf16d4cdeddb5aa7f88",
                                                                                        new Date(1560172167071L),
                                                                                        "1e935783-66c1-4c63-9797-3b4ff5049c3e",
                                                                                        "c34cec003db8abf16d4cdeddb5aa7f88",
                                                                                        "c34cec003db8abf16d4cdeddb5aa7f88");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = new DeviceEnrollmentDenial("c34cec003db8abf16d4cdeddb5aa7f88",
                                                                                        new Date(1560172167071L),
                                                                                        "1e935783-66c1-4c63-9797-3b4ff5049c3e",
                                                                                        "c34cec003db8abf16d4cdeddb5aa7f88",
                                                                                        "c34cec003db8abf16d4cdeddb5aa7f88");
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2.hashCode(), deviceenrollmentdenial1.hashCode());
            int hashCode = deviceenrollmentdenial1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceenrollmentdenial1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEnrollmentDenial deviceenrollmentdenial = new DeviceEnrollmentDenial("c34cec003db8abf16d4cdeddb5aa7f88",
                                                                                   new Date(1560172165362L),
                                                                                   "2e06ce41-4199-4398-bf5d-3dd60d74295d",
                                                                                   "c34cec003db8abf16d4cdeddb5aa7f88",
                                                                                   "c34cec003db8abf16d4cdeddb5aa7f88");
        assertTrue(deviceenrollmentdenial.isValid());
        DeviceEnrollmentDenial deviceenrollmentdenialInvalid = new DeviceEnrollmentDenial("W\u0010ç”›2å¥¾W.\u001b/2\u0013\u001c\u0010292â¸ª\u0019\u0018î˜ 2Kã£©ä¢Š-(?æ·«2â ®#Q\\\\A2ã®ª\\\\Ná¥ª,2\u0004ì­?ã•¢ã‹ P22S2Wî–‰MV\u0007>,J2îžƒï‡‡Já?ˆ",
                                                                                          new Date(1560172162246L),
                                                                                          "559c57ce-9c0d-4eb0-868f-82642beaab09",
                                                                                          "W\u0010ç”›2å¥¾W.\u001b/2\u0013\u001c\u0010292â¸ª\u0019\u0018î˜ 2Kã£©ä¢Š-(?æ·«2â ®#Q\\\\A2ã®ª\\\\Ná¥ª,2\u0004ì­?ã•¢ã‹ P22S2Wî–‰MV\u0007>,J2îžƒï‡‡Já?ˆ",
                                                                                          "W\u0010ç”›2å¥¾W.\u001b/2\u0013\u001c\u0010292â¸ª\u0019\u0018î˜ 2Kã£©ä¢Š-(?æ·«2â ®#Q\\\\A2ã®ª\\\\Ná¥ª,2\u0004ì­?ã•¢ã‹ P22S2Wî–‰MV\u0007>,J2îžƒï‡‡Já?ˆ");
        assertFalse(deviceenrollmentdenialInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("c34cec003db8abf16d4cdeddb5aa7f88",
                                                                                        new Date(1560172166655L),
                                                                                        "06f6ff34-f8c2-4256-9dc7-26db5f7c08b5",
                                                                                        "c34cec003db8abf16d4cdeddb5aa7f88",
                                                                                        "c34cec003db8abf16d4cdeddb5aa7f88");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = new DeviceEnrollmentDenial("c34cec003db8abf16d4cdeddb5aa7f88",
                                                                                        new Date(1560172166655L),
                                                                                        "06f6ff34-f8c2-4256-9dc7-26db5f7c08b5",
                                                                                        "c34cec003db8abf16d4cdeddb5aa7f88",
                                                                                        "c34cec003db8abf16d4cdeddb5aa7f88");
            DeviceEnrollmentDenial deviceenrollmentdenial3 = new DeviceEnrollmentDenial("c34cec003db8abf16d4cdeddb5aa7f88",
                                                                                        new Date(1560172165087L),
                                                                                        "e1baa3d3-bf8f-440f-a3ab-b85e4c6cba27",
                                                                                        "c34cec003db8abf16d4cdeddb5aa7f88",
                                                                                        "c34cec003db8abf16d4cdeddb5aa7f88");
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotNull(deviceenrollmentdenial3);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertNotSame(deviceenrollmentdenial3, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial1, deviceenrollmentdenial2);
            assertEquals(deviceenrollmentdenial1, deviceenrollmentdenial1);
            assertFalse(deviceenrollmentdenial1.equals(null));
            assertNotEquals(deviceenrollmentdenial3, deviceenrollmentdenial1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
