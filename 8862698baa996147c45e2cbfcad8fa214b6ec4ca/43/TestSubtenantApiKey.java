// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantApiKey.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantApiKey {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("c34cec003db8abf16d4cdeddb5aa7f88",
                                                                   new Date(1560172163393L), 104,
                                                                   "c34cec003db8abf16d4cdeddb5aa7f88",
                                                                   "5b27cf7a-5de3-435e-9af2-0f1c670b8514", -102,
                                                                   "fc1e6e42-3f62-493a-a3dd-0afa95eda988",
                                                                   "c34cec003db8abf16d4cdeddb5aa7f88",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1560172167956L));
            SubtenantApiKey subtenantapikey2 = subtenantapikey1.clone();
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("c34cec003db8abf16d4cdeddb5aa7f88",
                                                                   new Date(1560172169021L), 51,
                                                                   "c34cec003db8abf16d4cdeddb5aa7f88",
                                                                   "f530efb0-0463-4bcd-8270-abe3467928be", 51,
                                                                   "e9c005e2-19f1-4472-8f94-7f69cf533ae9",
                                                                   "c34cec003db8abf16d4cdeddb5aa7f88",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1560172161288L));
            SubtenantApiKey subtenantapikey2 = new SubtenantApiKey("c34cec003db8abf16d4cdeddb5aa7f88",
                                                                   new Date(1560172169021L), 51,
                                                                   "c34cec003db8abf16d4cdeddb5aa7f88",
                                                                   "f530efb0-0463-4bcd-8270-abe3467928be", 51,
                                                                   "e9c005e2-19f1-4472-8f94-7f69cf533ae9",
                                                                   "c34cec003db8abf16d4cdeddb5aa7f88",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1560172161288L));
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2.hashCode(), subtenantapikey1.hashCode());
            int hashCode = subtenantapikey1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantapikey1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantApiKey subtenantapikey = new SubtenantApiKey("c34cec003db8abf16d4cdeddb5aa7f88",
                                                              new Date(1560172170465L), -66,
                                                              "c34cec003db8abf16d4cdeddb5aa7f88",
                                                              "4785ac80-861d-4a03-be45-aaabbeb01f6f", 76,
                                                              "ba28d83d-13a0-4fc8-ad24-7e76f200ddd1",
                                                              "c34cec003db8abf16d4cdeddb5aa7f88",
                                                              SubtenantApiKeyStatus.getDefault(),
                                                              new Date(1560172168731L));
        assertTrue(subtenantapikey.isValid());
        SubtenantApiKey subtenantapikeyInvalid = new SubtenantApiKey(null, new Date(1560172162826L), 95,
                                                                     "W\u0010ç”›2å¥¾W.\u001b/2\u0013\u001c\u0010292â¸ª\u0019\u0018î˜ 2Kã£©ä¢Š-(?æ·«2â ®#Q\\\\A2ã®ª\\\\Ná¥ª,2\u0004ì­?ã•¢ã‹ P22S2Wî–‰MV\u0007>,J2îžƒï‡‡Já?ˆ",
                                                                     "bc77a2b2-9c99-45b3-88f5-2e26ec69c70a", 51, null,
                                                                     "W\u0010ç”›2å¥¾W.\u001b/2\u0013\u001c\u0010292â¸ª\u0019\u0018î˜ 2Kã£©ä¢Š-(?æ·«2â ®#Q\\\\A2ã®ª\\\\Ná¥ª,2\u0004ì­?ã•¢ã‹ P22S2Wî–‰MV\u0007>,J2îžƒï‡‡Já?ˆ",
                                                                     SubtenantApiKeyStatus.getDefault(),
                                                                     new Date(1560172163100L));
        assertFalse(subtenantapikeyInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("c34cec003db8abf16d4cdeddb5aa7f88",
                                                                   new Date(1560172161059L), -88,
                                                                   "c34cec003db8abf16d4cdeddb5aa7f88",
                                                                   "50700291-1b35-43a5-aa5f-0222ad4619e1", 118,
                                                                   "f34701d3-57f9-4ad0-9f63-75955dabf236",
                                                                   "c34cec003db8abf16d4cdeddb5aa7f88",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1560172169323L));
            SubtenantApiKey subtenantapikey2 = new SubtenantApiKey("c34cec003db8abf16d4cdeddb5aa7f88",
                                                                   new Date(1560172161059L), -88,
                                                                   "c34cec003db8abf16d4cdeddb5aa7f88",
                                                                   "50700291-1b35-43a5-aa5f-0222ad4619e1", 118,
                                                                   "f34701d3-57f9-4ad0-9f63-75955dabf236",
                                                                   "c34cec003db8abf16d4cdeddb5aa7f88",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1560172169323L));
            SubtenantApiKey subtenantapikey3 = new SubtenantApiKey("c34cec003db8abf16d4cdeddb5aa7f88",
                                                                   new Date(1560172164782L), 2,
                                                                   "c34cec003db8abf16d4cdeddb5aa7f88",
                                                                   "d070ad56-c184-47e6-8fc4-6f989469a71d", -11,
                                                                   "cc1d740c-ac27-4827-ad29-e34e37e552ee",
                                                                   "c34cec003db8abf16d4cdeddb5aa7f88",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1560172162944L));
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotNull(subtenantapikey3);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertNotSame(subtenantapikey3, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey1, subtenantapikey2);
            assertEquals(subtenantapikey1, subtenantapikey1);
            assertFalse(subtenantapikey1.equals(null));
            assertNotEquals(subtenantapikey3, subtenantapikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
