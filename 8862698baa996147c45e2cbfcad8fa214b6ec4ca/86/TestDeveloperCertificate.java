// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.security.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeveloperCertificate.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeveloperCertificate {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("adcb2e6a-a994-4958-b57e-409e2c6d8379",
                                                                                  "eadbfb50-c1d9-4a99-8c14-7af59b534858",
                                                                                  new Date(1560172168249L),
                                                                                  "a8e3f770-63f9-49e9-a745-f7299b0972b0",
                                                                                  "114da091-ffa5-4b04-bfae-47f101baa0a9",
                                                                                  "fc17020f-52c0-4a89-ac30-befb99b571f9",
                                                                                  "0092e88c-8d3e-4253-ab8c-87e5827366af",
                                                                                  "4f4b366b-bef0-4d5c-bb86-0caff6815fc6");
            DeveloperCertificate developercertificate2 = developercertificate1.clone();
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("83ad1863-af37-4319-a59b-8f9d12656c2b",
                                                                                  "23fe5e92-a416-4d69-96e1-240c02ccba75",
                                                                                  new Date(1560172164703L),
                                                                                  "8aa2d37c-7384-487a-8939-fc430b01368d",
                                                                                  "c3a1188b-ece6-4274-a01a-859010a40b2b",
                                                                                  "c22d711c-4fcc-4fa9-b483-1b747f66282c",
                                                                                  "d3a75bcb-6d13-4a8e-b8d4-8402d6eaf4c0",
                                                                                  "089507cf-6789-4007-adab-0df394f32122");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("83ad1863-af37-4319-a59b-8f9d12656c2b",
                                                                                  "23fe5e92-a416-4d69-96e1-240c02ccba75",
                                                                                  new Date(1560172164703L),
                                                                                  "8aa2d37c-7384-487a-8939-fc430b01368d",
                                                                                  "c3a1188b-ece6-4274-a01a-859010a40b2b",
                                                                                  "c22d711c-4fcc-4fa9-b483-1b747f66282c",
                                                                                  "d3a75bcb-6d13-4a8e-b8d4-8402d6eaf4c0",
                                                                                  "089507cf-6789-4007-adab-0df394f32122");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2.hashCode(), developercertificate1.hashCode());
            int hashCode = developercertificate1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, developercertificate1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeveloperCertificate developercertificate = new DeveloperCertificate("2d1fc5be-2d06-4c6e-8e7c-e4f8636c800f",
                                                                             "c4e9bc05-1aaa-4b89-a87c-73ac9bfb6a3f",
                                                                             new Date(1560172169890L),
                                                                             "fe82b3ad-d687-4f60-be97-926a559291c5",
                                                                             "3ad20c89-baa0-43e7-b8d2-00eba9dd116d",
                                                                             "64a4b218-bb3d-49a3-8a9b-7e80de550e06",
                                                                             "e7115fb0-5513-4fb4-9dee-dcefdb0fdf20",
                                                                             "73efa0f1-cb26-4794-a6a3-de2ea2fc65e0");
        assertTrue(developercertificate.isValid());
        DeveloperCertificate developercertificateInvalid = new DeveloperCertificate("27f463e9-b738-4eb7-aa3b-11b7973a46ed",
                                                                                    "580ca7df-d65c-42ec-beca-42c9658b98c1",
                                                                                    new Date(1560172160816L),
                                                                                    "51a8a80c-4d47-4706-b31e-59d5c891dc3c",
                                                                                    "379de02a-0ec6-461c-8aa8-8a10153331c0",
                                                                                    "173c1c56-2067-43ab-91e7-2862869f99bd",
                                                                                    null,
                                                                                    "3badfb68-b186-480a-8138-121450754f25");
        assertFalse(developercertificateInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("7fab908b-bcdf-4425-8f22-a2529a278492",
                                                                                  "f756b646-8c23-46b1-9671-f362cb4a79a7",
                                                                                  new Date(1560172167191L),
                                                                                  "00d0dc0f-30e9-421f-9e61-0ef3adf61a23",
                                                                                  "e6a672ca-177f-45a5-8335-9d371ad670bd",
                                                                                  "3b7646f7-3ec8-42f9-b284-1b01d91a1cd3",
                                                                                  "37173af1-b02f-4de1-accb-ba7a7b8ecc33",
                                                                                  "09f043e1-4f6d-4d60-9af0-cdd5ebb41a34");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("7fab908b-bcdf-4425-8f22-a2529a278492",
                                                                                  "f756b646-8c23-46b1-9671-f362cb4a79a7",
                                                                                  new Date(1560172167191L),
                                                                                  "00d0dc0f-30e9-421f-9e61-0ef3adf61a23",
                                                                                  "e6a672ca-177f-45a5-8335-9d371ad670bd",
                                                                                  "3b7646f7-3ec8-42f9-b284-1b01d91a1cd3",
                                                                                  "37173af1-b02f-4de1-accb-ba7a7b8ecc33",
                                                                                  "09f043e1-4f6d-4d60-9af0-cdd5ebb41a34");
            DeveloperCertificate developercertificate3 = new DeveloperCertificate("07b53da1-1306-434e-87a6-1bdb4c6eccad",
                                                                                  "9648380c-5497-40e2-ba39-7fc45b45453d",
                                                                                  new Date(1560172165353L),
                                                                                  "08511bf5-02e7-4e1d-b9c4-2edd50597d66",
                                                                                  "929be4e4-49c1-4af1-b87a-6633784f4bde",
                                                                                  "927db13d-363e-48c3-8b47-d3e845fcba44",
                                                                                  "74e1e7bd-9775-4eb2-91f3-dbc653f06529",
                                                                                  "9a0a9cf7-3709-4d67-a84f-6694ed87ca7e");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotNull(developercertificate3);
            assertNotSame(developercertificate2, developercertificate1);
            assertNotSame(developercertificate3, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate1, developercertificate2);
            assertEquals(developercertificate1, developercertificate1);
            assertFalse(developercertificate1.equals(null));
            assertNotEquals(developercertificate3, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
