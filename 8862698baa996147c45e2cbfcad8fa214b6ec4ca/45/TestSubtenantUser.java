// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantUser.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantUser {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("c34cec003db8abf16d4cdeddb5aa7f88", null,
                                                             "29bc526d-e007-46df-8d64-fb888594a227",
                                                             new Date(1560172167702L), -128, null,
                                                             "b3539.569fc@5f6f4.fr", false,
                                                             "083c78e0-9546-4c79-903a-f374feeea4e9",
                                                             "c34cec003db8abf16d4cdeddb5aa7f88", true, false, false,
                                                             -87, null, null, "b68f0814-21ec-4fb9-a6f0-c120c341ffd2",
                                                             -45, "bcb7a27c-b13d-4760-9170-a0b0ffb4c022",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1560172166697L), "5==__7iE=");
            SubtenantUser subtenantuser2 = subtenantuser1.clone();
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("c34cec003db8abf16d4cdeddb5aa7f88", null,
                                                             "0a4e16b5-db27-4933-9992-0d5e6ddf9e47",
                                                             new Date(1560172168526L), 80, null, "7e9df.8ecd2@2afe3.me",
                                                             false, "53b98fb9-913e-40b5-b297-e2f1d7a8fc9c",
                                                             "c34cec003db8abf16d4cdeddb5aa7f88", true, false, false,
                                                             -71, null, null, "abc0cf31-5b61-436a-b9f1-7128736c7b57",
                                                             118, "0b8a8e75-7e03-472c-94b8-0d9a6652361b",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1560172169878L), "5==__7iE=");
            SubtenantUser subtenantuser2 = new SubtenantUser("c34cec003db8abf16d4cdeddb5aa7f88", null,
                                                             "0a4e16b5-db27-4933-9992-0d5e6ddf9e47",
                                                             new Date(1560172168526L), 80, null, "7e9df.8ecd2@2afe3.me",
                                                             false, "53b98fb9-913e-40b5-b297-e2f1d7a8fc9c",
                                                             "c34cec003db8abf16d4cdeddb5aa7f88", true, false, false,
                                                             -71, null, null, "abc0cf31-5b61-436a-b9f1-7128736c7b57",
                                                             118, "0b8a8e75-7e03-472c-94b8-0d9a6652361b",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1560172169878L), "5==__7iE=");
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2.hashCode(), subtenantuser1.hashCode());
            int hashCode = subtenantuser1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantuser1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantUser subtenantuser = new SubtenantUser("c34cec003db8abf16d4cdeddb5aa7f88", null,
                                                        "d6d06eae-2aeb-473c-90b2-78d75d8cfe8c",
                                                        new Date(1560172162091L), -8, null, "ad8bd.4c689@1f404.me",
                                                        false, "5abce931-baba-4600-b89b-fa1b25a0dc71",
                                                        "c34cec003db8abf16d4cdeddb5aa7f88", false, false, false, 39,
                                                        null, null, "8b46bdb4-1287-4e18-8474-cc79d308371c", -10,
                                                        "67db5891-5c49-42e7-9fa0-deccaa9073bd",
                                                        SubtenantUserStatus.getDefault(), null,
                                                        new Date(1560172163956L), "5==__7iE=");
        assertTrue(subtenantuser.isValid());
        SubtenantUser subtenantuserInvalid = new SubtenantUser(null, null, "6b0f4d17-577a-43bb-b5c5-f1aa8bb224b2",
                                                               new Date(1560172163961L), -67, null, null, false,
                                                               "65812e66-da62-498b-9ca9-f5322a7698ebaf9720a0-64b5-40bc-878d-9aab571af46657002ae8-ce85-4d6d-a0ab-4aa754cbd612",
                                                               "W\u0010ç”›2å¥¾W.\u001b/2\u0013\u001c\u0010292â¸ª\u0019\u0018î˜ 2Kã£©ä¢Š-(?æ·«2â ®#Q\\\\A2ã®ª\\\\Ná¥ª,2\u0004ì­?ã•¢ã‹ P22S2Wî–‰MV\u0007>,J2îžƒï‡‡Já?ˆ",
                                                               true, true, true, 112, null, null,
                                                               "0240edd1-0099-4369-8f12-1d2827093449", 114,
                                                               "5ef7a6c9-03ab-4639-98e1-2553f9a0456c7985f89b-24fe-4549-8114-be87d896736dbe2dfaf8-b1bb-48f1-aef9-63f06b85c4bc",
                                                               SubtenantUserStatus.getDefault(), null,
                                                               new Date(1560172166517L),
                                                               "U?6\u0010a6e\u0017R\tD6C##@:9æ¡”8@6\\\\D6é£¯Cæ˜ƒaS6`hè¸Š6N`6]ê…¦6h8@;PO66\u0017Z;\u0015CA<89eã„‡6[6d");
        assertFalse(subtenantuserInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("c34cec003db8abf16d4cdeddb5aa7f88", null,
                                                             "3749f828-c6f0-4849-94d2-8847f280bc69",
                                                             new Date(1560172166806L), 6, null, "2c29e.3f3f1@7ffe2.fr",
                                                             false, "fcc75323-fd26-415b-babd-ec66814b3a3a",
                                                             "c34cec003db8abf16d4cdeddb5aa7f88", true, true, true, -97,
                                                             null, null, "2c27e1ce-eeda-4d63-b527-412b6385d77e", -17,
                                                             "d9f19115-6c6d-4509-91b7-750c64d29987",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1560172161666L), "5==__7iE=");
            SubtenantUser subtenantuser2 = new SubtenantUser("c34cec003db8abf16d4cdeddb5aa7f88", null,
                                                             "3749f828-c6f0-4849-94d2-8847f280bc69",
                                                             new Date(1560172166806L), 6, null, "2c29e.3f3f1@7ffe2.fr",
                                                             false, "fcc75323-fd26-415b-babd-ec66814b3a3a",
                                                             "c34cec003db8abf16d4cdeddb5aa7f88", true, true, true, -97,
                                                             null, null, "2c27e1ce-eeda-4d63-b527-412b6385d77e", -17,
                                                             "d9f19115-6c6d-4509-91b7-750c64d29987",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1560172161666L), "5==__7iE=");
            SubtenantUser subtenantuser3 = new SubtenantUser("c34cec003db8abf16d4cdeddb5aa7f88", null,
                                                             "a4d64a03-3feb-4e99-81d6-6fe10636fc9b",
                                                             new Date(1560172169611L), -19, null,
                                                             "2a9ff.fd3cc@e8c52.me", false,
                                                             "4cdab5f5-719c-439a-acec-43e79d84d472",
                                                             "c34cec003db8abf16d4cdeddb5aa7f88", true, true, true, 115,
                                                             null, null, "d9c1f11e-3a6c-43e3-ac75-af8b9f4df9b8", -86,
                                                             "58b3da4b-d6ae-42fd-a0fe-3d6dfdde42ab",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1560172162718L), "5==__7iE=");
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotNull(subtenantuser3);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertNotSame(subtenantuser3, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser1, subtenantuser2);
            assertEquals(subtenantuser1, subtenantuser1);
            assertFalse(subtenantuser1.equals(null));
            assertNotEquals(subtenantuser3, subtenantuser1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
