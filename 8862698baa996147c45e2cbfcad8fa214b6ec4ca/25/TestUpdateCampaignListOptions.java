// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.deviceupdate.model;

import static org.junit.Assert.*;

import com.arm.mbed.cloud.sdk.common.Order;
import com.arm.mbed.cloud.sdk.common.listing.ListOptionsEncoder;
import com.arm.mbed.cloud.sdk.common.listing.filtering.FilterOperator;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import org.junit.Test;

/**
 * Unit tests for Model UpdateCampaignListOptions.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestUpdateCampaignListOptions {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            UpdateCampaignListOptions updatecampaignlistoptions1 = new UpdateCampaignListOptions(Integer.valueOf(-100),
                                                                                                 Long.valueOf(0),
                                                                                                 Order.getDefault(),
                                                                                                 "9c2fa8d4-9697-4da0-895b-f534bca6622c",
                                                                                                 null, null);
            UpdateCampaignListOptions updatecampaignlistoptions2 = updatecampaignlistoptions1.clone();
            assertNotNull(updatecampaignlistoptions1);
            assertNotNull(updatecampaignlistoptions2);
            assertNotSame(updatecampaignlistoptions2, updatecampaignlistoptions1);
            assertEquals(updatecampaignlistoptions2, updatecampaignlistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the filters method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testFilters() {
        try {
            UpdateCampaignListOptions option = new UpdateCampaignListOptions().inCreatedAts(Arrays.asList(new Date(1560172166900L),
                                                                                                          new Date(1560172165896L),
                                                                                                          new Date(1560172169979L),
                                                                                                          new Date(1560172164263L),
                                                                                                          new Date(1560172168952L),
                                                                                                          new Date(1560172165612L)))
                                                                              .notInCreatedAts(Arrays.asList(new Date(1560172169693L),
                                                                                                             new Date(1560172168470L)))
                                                                              .lessThanCreatedAt(new Date(1560172170386L))
                                                                              .greaterThanCreatedAt(new Date(1560172164181L))
                                                                              .equalToName("d4ac0561-7d45-4442-b0ff-942830f9502d")
                                                                              .notEqualToName("ceff9261-b8d4-460b-a63c-5c6f73eace2c")
                                                                              .inNames(Arrays.asList("7e7280bf-18a4-4b5b-be67-50e295afb443",
                                                                                                     "ada6c744-dbc3-48c7-8a3b-9e71025067ff",
                                                                                                     "0c4dd83c-162a-4ae1-aff2-276655a64956",
                                                                                                     "342f0b33-c404-43e4-9afc-483941601d12",
                                                                                                     "eb57cb08-4260-4d5b-93fb-d5265b32c8de",
                                                                                                     "d3745249-cf2f-46ee-a8e3-12be2bd574f8"))
                                                                              .notInNames(Arrays.asList("54d503e1-4cf5-4fca-907b-44d2b546d4ca",
                                                                                                        "b0f435e6-6dc5-4cf1-8125-2276c6112bd0",
                                                                                                        "182c2643-1035-4079-8c51-da70eddafc11",
                                                                                                        "72c14c06-140a-4d83-b41a-33e81519573d",
                                                                                                        "e5b8fb39-5da7-4a10-9af2-1c099400608b",
                                                                                                        "ddf125f3-31b7-4681-a0f4-7dbaaf9e071b",
                                                                                                        "ec0fe6c6-d9e4-407f-ab69-e485139f7089",
                                                                                                        "3732d6fd-1c8b-4ef5-8f44-d6df9c7a1670",
                                                                                                        "9a6cecc7-542f-4de0-9e39-9a2de558ce9b"))
                                                                              .equalToId("451777f4-4a51-40d3-927b-d71bd0e6253d")
                                                                              .notEqualToId("7e6314ee-f1cd-407d-b95a-a86ca24c6c99")
                                                                              .inIds(Arrays.asList("26b18b91-14ec-49ca-8da7-c8d412086c23"))
                                                                              .notInIds(Arrays.asList("c6496e13-6bd5-4336-9991-394a172b7cc5",
                                                                                                      "f49258aa-5e2b-47e9-8b54-90ae059ecd97",
                                                                                                      "7fa3499d-c270-4b92-9e9d-263048e6f4e8"))
                                                                              .equalToDeviceFilter("ed9c5300-b71d-42a4-87a2-0099ad23f9cb")
                                                                              .notEqualToDeviceFilter("2ca4b225-ef0d-4808-847a-f9e3af3d2867")
                                                                              .inDeviceFilters(Arrays.asList("17899d02-f440-4b59-94b3-ca0d59a4afed",
                                                                                                             "bc1392d8-aaca-4ab6-8497-afe57aa6dfcb",
                                                                                                             "40b9c8cb-ddec-48c8-a42b-8a2f39ace289",
                                                                                                             "245a5d13-4630-434f-b78e-2a85a0448e44"))
                                                                              .notInDeviceFilters(Arrays.asList("83ec54d6-d59d-4f42-b6a9-450b4692a12c",
                                                                                                                "2819fd38-d3d8-44eb-a518-60b09138a958",
                                                                                                                "5a5e4fb1-407f-4116-8abf-f449bd23ab90",
                                                                                                                "0b04fbc3-a798-4812-a6d1-fef30dbde0ac",
                                                                                                                "da846918-d6f5-4e8a-ba55-4a39bd4c9078",
                                                                                                                "90d20ff4-3038-4fad-9fe7-12200f044206",
                                                                                                                "8bb6a3b5-c4aa-46d0-8582-5ad24eb9f554"))
                                                                              .inFinisheds(Arrays.asList(new Date(1560172165512L),
                                                                                                         new Date(1560172163314L)))
                                                                              .notInFinisheds(Arrays.asList(new Date(1560172172778L),
                                                                                                            new Date(1560172166304L),
                                                                                                            new Date(1560172169494L)))
                                                                              .lessThanFinished(new Date(1560172164269L))
                                                                              .greaterThanFinished(new Date(1560172168062L))
                                                                              .inStartedAts(Arrays.asList(new Date(1560172171457L)))
                                                                              .notInStartedAts(Arrays.asList(new Date(1560172164202L),
                                                                                                             new Date(1560172163301L),
                                                                                                             new Date(1560172167289L),
                                                                                                             new Date(1560172171832L),
                                                                                                             new Date(1560172165982L),
                                                                                                             new Date(1560172168652L),
                                                                                                             new Date(1560172165019L)))
                                                                              .lessThanStartedAt(new Date(1560172166367L))
                                                                              .greaterThanStartedAt(new Date(1560172171811L))
                                                                              .inWhens(Arrays.asList(new Date(1560172167066L),
                                                                                                     new Date(1560172166394L),
                                                                                                     new Date(1560172165646L),
                                                                                                     new Date(1560172167767L)))
                                                                              .notInWhens(Arrays.asList(new Date(1560172173010L)))
                                                                              .lessThanWhen(new Date(1560172165058L))
                                                                              .greaterThanWhen(new Date(1560172170530L))
                                                                              .inUpdatedAts(Arrays.asList(new Date(1560172171116L),
                                                                                                          new Date(1560172167086L),
                                                                                                          new Date(1560172171785L),
                                                                                                          new Date(1560172167859L),
                                                                                                          new Date(1560172164845L),
                                                                                                          new Date(1560172168686L),
                                                                                                          new Date(1560172171387L),
                                                                                                          new Date(1560172166434L),
                                                                                                          new Date(1560172169306L)))
                                                                              .notInUpdatedAts(Arrays.asList(new Date(1560172165191L)))
                                                                              .lessThanUpdatedAt(new Date(1560172165859L))
                                                                              .greaterThanUpdatedAt(new Date(1560172166573L))
                                                                              .equalToRootManifestId("53b0d9d4-d3ba-408b-9019-38ae9ce2270a")
                                                                              .notEqualToRootManifestId("44aca05a-7318-4bd1-96e5-d8f6bc331c84")
                                                                              .inRootManifestIds(Arrays.asList("fe870f25-0e19-48e4-af92-50e00b5d7ed2",
                                                                                                               "b549d0f4-a752-4c10-bdd5-2fef36f18e7d",
                                                                                                               "677d9294-083a-4c32-9d96-14f141343d74"))
                                                                              .notInRootManifestIds(Arrays.asList("19f06a44-e0dd-4934-a66d-d8cfc7716061",
                                                                                                                  "3d858ce8-f256-4932-88c3-699b68bf2824",
                                                                                                                  "c7ae7ffd-cb3d-4420-bfcf-63ebd9237096",
                                                                                                                  "bbb17e13-b9bb-4dcc-97d1-10337e96cbf9",
                                                                                                                  "9070267c-bb13-43e4-8774-2415db64bdb9"))
                                                                              .equalToDescription("aa5a3aea-f79a-428f-a91c-a57cc5431d97")
                                                                              .notEqualToDescription("cdc6bd97-21a7-4596-91e5-b321d584e1b6")
                                                                              .inDescriptions(Arrays.asList("a336d352-54cb-4252-b9e1-daeb740cd894",
                                                                                                            "df699382-3843-4144-8136-0c1375872c8e",
                                                                                                            "67f83323-fbb4-48d8-b386-46624de42d6e",
                                                                                                            "26c530fc-6cbe-494b-93ee-649d4cd54925",
                                                                                                            "2589ef1f-2da8-463b-84f8-c94d60b5b0ea"))
                                                                              .notInDescriptions(Arrays.asList("f605e01e-290d-4ce5-b6bc-81b401a6a4cf"));
            assertTrue(option.hasFilters());
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1560172166900L), new Date(1560172165896L), new Date(1560172169979L),
                                       new Date(1560172164263L), new Date(1560172168952L), new Date(1560172165612L)),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1560172169693L), new Date(1560172168470L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.LESS_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1560172170386L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1560172164181L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME, FilterOperator.EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("d4ac0561-7d45-4442-b0ff-942830f9502d",
                         ListOptionsEncoder.encodeSingleEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME,
                                                                    String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("ceff9261-b8d4-460b-a63c-5c6f73eace2c",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME,
                                                                       String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME, FilterOperator.IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("7e7280bf-18a4-4b5b-be67-50e295afb443", "ada6c744-dbc3-48c7-8a3b-9e71025067ff",
                                       "0c4dd83c-162a-4ae1-aff2-276655a64956", "342f0b33-c404-43e4-9afc-483941601d12",
                                       "eb57cb08-4260-4d5b-93fb-d5265b32c8de", "d3745249-cf2f-46ee-a8e3-12be2bd574f8"),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("54d503e1-4cf5-4fca-907b-44d2b546d4ca", "b0f435e6-6dc5-4cf1-8125-2276c6112bd0",
                                       "182c2643-1035-4079-8c51-da70eddafc11", "72c14c06-140a-4d83-b41a-33e81519573d",
                                       "e5b8fb39-5da7-4a10-9af2-1c099400608b", "ddf125f3-31b7-4681-a0f4-7dbaaf9e071b",
                                       "ec0fe6c6-d9e4-407f-ab69-e485139f7089", "3732d6fd-1c8b-4ef5-8f44-d6df9c7a1670",
                                       "9a6cecc7-542f-4de0-9e39-9a2de558ce9b"),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID, FilterOperator.EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("451777f4-4a51-40d3-927b-d71bd0e6253d",
                         ListOptionsEncoder.encodeSingleEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("7e6314ee-f1cd-407d-b95a-a86ca24c6c99",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID, FilterOperator.IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("26b18b91-14ec-49ca-8da7-c8d412086c23"),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID, List.class,
                                                                 option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("c6496e13-6bd5-4336-9991-394a172b7cc5", "f49258aa-5e2b-47e9-8b54-90ae059ecd97",
                                       "7fa3499d-c270-4b92-9e9d-263048e6f4e8"),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER, FilterOperator.EQUAL));
            assertNotNull(option.getDeviceFilterFilters());
            assertEquals("ed9c5300-b71d-42a4-87a2-0099ad23f9cb",
                         ListOptionsEncoder.encodeSingleEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER,
                                                                    String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDeviceFilterFilters());
            assertEquals("2ca4b225-ef0d-4808-847a-f9e3af3d2867",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER,
                                                                       String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER, FilterOperator.IN));
            assertNotNull(option.getDeviceFilterFilters());
            assertEquals(Arrays.asList("17899d02-f440-4b59-94b3-ca0d59a4afed", "bc1392d8-aaca-4ab6-8497-afe57aa6dfcb",
                                       "40b9c8cb-ddec-48c8-a42b-8a2f39ace289", "245a5d13-4630-434f-b78e-2a85a0448e44"),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER, FilterOperator.NOT_IN));
            assertNotNull(option.getDeviceFilterFilters());
            assertEquals(Arrays.asList("83ec54d6-d59d-4f42-b6a9-450b4692a12c", "2819fd38-d3d8-44eb-a518-60b09138a958",
                                       "5a5e4fb1-407f-4116-8abf-f449bd23ab90", "0b04fbc3-a798-4812-a6d1-fef30dbde0ac",
                                       "da846918-d6f5-4e8a-ba55-4a39bd4c9078", "90d20ff4-3038-4fad-9fe7-12200f044206",
                                       "8bb6a3b5-c4aa-46d0-8582-5ad24eb9f554"),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED, FilterOperator.IN));
            assertNotNull(option.getFinishedFilters());
            assertEquals(Arrays.asList(new Date(1560172165512L), new Date(1560172163314L)),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED, FilterOperator.NOT_IN));
            assertNotNull(option.getFinishedFilters());
            assertEquals(Arrays.asList(new Date(1560172172778L), new Date(1560172166304L), new Date(1560172169494L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED, FilterOperator.LESS_THAN));
            assertNotNull(option.getFinishedFilters());
            assertEquals(new Date(1560172164269L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED, FilterOperator.GREATER_THAN));
            assertNotNull(option.getFinishedFilters());
            assertEquals(new Date(1560172168062L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT, FilterOperator.IN));
            assertNotNull(option.getStartedAtFilters());
            assertEquals(Arrays.asList(new Date(1560172171457L)),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getStartedAtFilters());
            assertEquals(Arrays.asList(new Date(1560172164202L), new Date(1560172163301L), new Date(1560172167289L),
                                       new Date(1560172171832L), new Date(1560172165982L), new Date(1560172168652L),
                                       new Date(1560172165019L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT, FilterOperator.LESS_THAN));
            assertNotNull(option.getStartedAtFilters());
            assertEquals(new Date(1560172166367L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getStartedAtFilters());
            assertEquals(new Date(1560172171811L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN, FilterOperator.IN));
            assertNotNull(option.getWhenFilters());
            assertEquals(Arrays.asList(new Date(1560172167066L), new Date(1560172166394L), new Date(1560172165646L),
                                       new Date(1560172167767L)),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN, FilterOperator.NOT_IN));
            assertNotNull(option.getWhenFilters());
            assertEquals(Arrays.asList(new Date(1560172173010L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN, FilterOperator.LESS_THAN));
            assertNotNull(option.getWhenFilters());
            assertEquals(new Date(1560172165058L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN, FilterOperator.GREATER_THAN));
            assertNotNull(option.getWhenFilters());
            assertEquals(new Date(1560172170530L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1560172171116L), new Date(1560172167086L), new Date(1560172171785L),
                                       new Date(1560172167859L), new Date(1560172164845L), new Date(1560172168686L),
                                       new Date(1560172171387L), new Date(1560172166434L), new Date(1560172169306L)),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1560172165191L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.LESS_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1560172165859L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1560172166573L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID,
                                        FilterOperator.EQUAL));
            assertNotNull(option.getRootManifestIdFilters());
            assertEquals("53b0d9d4-d3ba-408b-9019-38ae9ce2270a",
                         ListOptionsEncoder.encodeSingleEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getRootManifestIdFilters());
            assertEquals("44aca05a-7318-4bd1-96e5-d8f6bc331c84",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID, FilterOperator.IN));
            assertNotNull(option.getRootManifestIdFilters());
            assertEquals(Arrays.asList("fe870f25-0e19-48e4-af92-50e00b5d7ed2", "b549d0f4-a752-4c10-bdd5-2fef36f18e7d",
                                       "677d9294-083a-4c32-9d96-14f141343d74"),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID,
                                        FilterOperator.NOT_IN));
            assertNotNull(option.getRootManifestIdFilters());
            assertEquals(Arrays.asList("19f06a44-e0dd-4934-a66d-d8cfc7716061", "3d858ce8-f256-4932-88c3-699b68bf2824",
                                       "c7ae7ffd-cb3d-4420-bfcf-63ebd9237096", "bbb17e13-b9bb-4dcc-97d1-10337e96cbf9",
                                       "9070267c-bb13-43e4-8774-2415db64bdb9"),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("aa5a3aea-f79a-428f-a91c-a57cc5431d97",
                         ListOptionsEncoder.encodeSingleEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("cdc6bd97-21a7-4596-91e5-b321d584e1b6",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                       String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("a336d352-54cb-4252-b9e1-daeb740cd894", "df699382-3843-4144-8136-0c1375872c8e",
                                       "67f83323-fbb4-48d8-b386-46624de42d6e", "26c530fc-6cbe-494b-93ee-649d4cd54925",
                                       "2589ef1f-2da8-463b-84f8-c94d60b5b0ea"),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("f605e01e-290d-4ce5-b6bc-81b401a6a4cf"),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    List.class, option));
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            UpdateCampaignListOptions updatecampaignlistoptions1 = new UpdateCampaignListOptions(Integer.valueOf(-60),
                                                                                                 Long.valueOf(-8),
                                                                                                 Order.getDefault(),
                                                                                                 "94c4c9f1-2ac4-4657-9e66-72babf941722",
                                                                                                 null, null);
            UpdateCampaignListOptions updatecampaignlistoptions2 = new UpdateCampaignListOptions(Integer.valueOf(-60),
                                                                                                 Long.valueOf(-8),
                                                                                                 Order.getDefault(),
                                                                                                 "94c4c9f1-2ac4-4657-9e66-72babf941722",
                                                                                                 null, null);
            assertNotNull(updatecampaignlistoptions1);
            assertNotNull(updatecampaignlistoptions2);
            assertNotSame(updatecampaignlistoptions2, updatecampaignlistoptions1);
            assertEquals(updatecampaignlistoptions2, updatecampaignlistoptions1);
            assertEquals(updatecampaignlistoptions2.hashCode(), updatecampaignlistoptions1.hashCode());
            int hashCode = updatecampaignlistoptions1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, updatecampaignlistoptions1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            UpdateCampaignListOptions updatecampaignlistoptions1 = new UpdateCampaignListOptions(Integer.valueOf(-105),
                                                                                                 Long.valueOf(-19),
                                                                                                 Order.getDefault(),
                                                                                                 "f0111986-9270-4b06-a871-1593928a26ff",
                                                                                                 null, null);
            UpdateCampaignListOptions updatecampaignlistoptions2 = new UpdateCampaignListOptions(Integer.valueOf(-105),
                                                                                                 Long.valueOf(-19),
                                                                                                 Order.getDefault(),
                                                                                                 "f0111986-9270-4b06-a871-1593928a26ff",
                                                                                                 null, null);
            UpdateCampaignListOptions updatecampaignlistoptions3 = new UpdateCampaignListOptions(Integer.valueOf(-15),
                                                                                                 Long.valueOf(42),
                                                                                                 Order.getDefault(),
                                                                                                 "743b2177-4fba-4f18-823d-7f95169bd0b3",
                                                                                                 null, null);
            assertNotNull(updatecampaignlistoptions1);
            assertNotNull(updatecampaignlistoptions2);
            assertNotNull(updatecampaignlistoptions3);
            assertNotSame(updatecampaignlistoptions2, updatecampaignlistoptions1);
            assertNotSame(updatecampaignlistoptions3, updatecampaignlistoptions1);
            assertEquals(updatecampaignlistoptions2, updatecampaignlistoptions1);
            assertEquals(updatecampaignlistoptions2, updatecampaignlistoptions1);
            assertEquals(updatecampaignlistoptions1, updatecampaignlistoptions2);
            assertEquals(updatecampaignlistoptions1, updatecampaignlistoptions1);
            assertFalse(updatecampaignlistoptions1.equals(null));
            assertNotEquals(updatecampaignlistoptions3, updatecampaignlistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
