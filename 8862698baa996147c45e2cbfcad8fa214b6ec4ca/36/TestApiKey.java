// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model ApiKey.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestApiKey {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ApiKey apikey1 = new ApiKey("c34cec003db8abf16d4cdeddb5aa7f88", new Date(1560172163321L), -115,
                                        "c34cec003db8abf16d4cdeddb5aa7f88", "ca9bafeb-dcb3-4310-9df0-7f9c16ef527f", -43,
                                        "232c9c73-19ee-4896-a92e-272da144ad96", "c34cec003db8abf16d4cdeddb5aa7f88",
                                        ApiKeyStatus.getDefault(), new Date(1560172166281L));
            ApiKey apikey2 = apikey1.clone();
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotSame(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ApiKey apikey1 = new ApiKey("c34cec003db8abf16d4cdeddb5aa7f88", new Date(1560172165378L), -102,
                                        "c34cec003db8abf16d4cdeddb5aa7f88", "49571dd6-3f84-4856-babe-907a83bda630", 3,
                                        "e69b968f-09e7-4ee0-8548-5583f9fb2a41", "c34cec003db8abf16d4cdeddb5aa7f88",
                                        ApiKeyStatus.getDefault(), new Date(1560172167589L));
            ApiKey apikey2 = new ApiKey("c34cec003db8abf16d4cdeddb5aa7f88", new Date(1560172165378L), -102,
                                        "c34cec003db8abf16d4cdeddb5aa7f88", "49571dd6-3f84-4856-babe-907a83bda630", 3,
                                        "e69b968f-09e7-4ee0-8548-5583f9fb2a41", "c34cec003db8abf16d4cdeddb5aa7f88",
                                        ApiKeyStatus.getDefault(), new Date(1560172167589L));
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotSame(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey2.hashCode(), apikey1.hashCode());
            int hashCode = apikey1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, apikey1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ApiKey apikey = new ApiKey("c34cec003db8abf16d4cdeddb5aa7f88", new Date(1560172168473L), 90,
                                   "c34cec003db8abf16d4cdeddb5aa7f88", "33cc357c-b2c0-44aa-8733-facfc981f08d", 41,
                                   "a448106e-c951-401e-95c9-aea32b4c3837", "c34cec003db8abf16d4cdeddb5aa7f88",
                                   ApiKeyStatus.getDefault(), new Date(1560172164851L));
        assertTrue(apikey.isValid());
        ApiKey apikeyInvalid = new ApiKey("W\u0010ç”›2å¥¾W.\u001b/2\u0013\u001c\u0010292â¸ª\u0019\u0018î˜ 2Kã£©ä¢Š-(?æ·«2â ®#Q\\\\A2ã®ª\\\\Ná¥ª,2\u0004ì­?ã•¢ã‹ P22S2Wî–‰MV\u0007>,J2îžƒï‡‡Já?ˆ",
                                          new Date(1560172167593L), -121,
                                          "W\u0010ç”›2å¥¾W.\u001b/2\u0013\u001c\u0010292â¸ª\u0019\u0018î˜ 2Kã£©ä¢Š-(?æ·«2â ®#Q\\\\A2ã®ª\\\\Ná¥ª,2\u0004ì­?ã•¢ã‹ P22S2Wî–‰MV\u0007>,J2îžƒï‡‡Já?ˆ",
                                          "af2c190e-7037-432c-8a10-73ad338b3e6e", 51, null,
                                          "W\u0010ç”›2å¥¾W.\u001b/2\u0013\u001c\u0010292â¸ª\u0019\u0018î˜ 2Kã£©ä¢Š-(?æ·«2â ®#Q\\\\A2ã®ª\\\\Ná¥ª,2\u0004ì­?ã•¢ã‹ P22S2Wî–‰MV\u0007>,J2îžƒï‡‡Já?ˆ",
                                          ApiKeyStatus.getDefault(), new Date(1560172170259L));
        assertFalse(apikeyInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ApiKey apikey1 = new ApiKey("c34cec003db8abf16d4cdeddb5aa7f88", new Date(1560172161144L), 89,
                                        "c34cec003db8abf16d4cdeddb5aa7f88", "3b12aa2e-ec16-416c-aac7-93d6512e026d", -38,
                                        "1e518c86-5173-48e7-8860-1dd71c9bed2a", "c34cec003db8abf16d4cdeddb5aa7f88",
                                        ApiKeyStatus.getDefault(), new Date(1560172165861L));
            ApiKey apikey2 = new ApiKey("c34cec003db8abf16d4cdeddb5aa7f88", new Date(1560172161144L), 89,
                                        "c34cec003db8abf16d4cdeddb5aa7f88", "3b12aa2e-ec16-416c-aac7-93d6512e026d", -38,
                                        "1e518c86-5173-48e7-8860-1dd71c9bed2a", "c34cec003db8abf16d4cdeddb5aa7f88",
                                        ApiKeyStatus.getDefault(), new Date(1560172165861L));
            ApiKey apikey3 = new ApiKey("c34cec003db8abf16d4cdeddb5aa7f88", new Date(1560172170571L), 40,
                                        "c34cec003db8abf16d4cdeddb5aa7f88", "18e94a29-6876-41b6-a367-1911b5b93f50", 15,
                                        "885cbec4-58f7-4532-97b8-bda12ae73785", "c34cec003db8abf16d4cdeddb5aa7f88",
                                        ApiKeyStatus.getDefault(), new Date(1560172170694L));
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotNull(apikey3);
            assertNotSame(apikey2, apikey1);
            assertNotSame(apikey3, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey1, apikey2);
            assertEquals(apikey1, apikey1);
            assertFalse(apikey1.equals(null));
            assertNotEquals(apikey3, apikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
