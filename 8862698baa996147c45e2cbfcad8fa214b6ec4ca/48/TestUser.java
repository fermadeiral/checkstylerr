// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model User.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestUser {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            User user1 = new User("c34cec003db8abf16d4cdeddb5aa7f88", null, "821cc013-86c5-443c-b148-43d58bb17f77",
                                  new Date(1560172167694L), 52, null, "be14e.c9c39@f3020.fr", false,
                                  "f174c339-c902-4527-8117-742d8945a08f", "c34cec003db8abf16d4cdeddb5aa7f88", true,
                                  true, false, -36, null, null, "20d2d04b-5a23-45c7-850c-0a495eb04c3c", 81,
                                  "5d46cd34-b5da-4bee-a533-64d17dd7c92e", UserStatus.getDefault(), null,
                                  new Date(1560172166758L), "5==__7iE=");
            User user2 = user1.clone();
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotSame(user2, user1);
            assertEquals(user2, user1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            User user1 = new User("c34cec003db8abf16d4cdeddb5aa7f88", null, "ee60d8cf-c922-43b2-8631-3783cf378de0",
                                  new Date(1560172162475L), 88, null, "5d5a5.afba9@98653.me", true,
                                  "d8c0d4eb-c0d3-4d31-bfd4-d41b77ffa96f", "c34cec003db8abf16d4cdeddb5aa7f88", false,
                                  true, false, 28, null, null, "e3cc1601-5878-47fe-bc4f-da07630e6a24", -106,
                                  "0763b4eb-fab3-4b30-80d8-d76080f125c7", UserStatus.getDefault(), null,
                                  new Date(1560172163402L), "5==__7iE=");
            User user2 = new User("c34cec003db8abf16d4cdeddb5aa7f88", null, "ee60d8cf-c922-43b2-8631-3783cf378de0",
                                  new Date(1560172162475L), 88, null, "5d5a5.afba9@98653.me", true,
                                  "d8c0d4eb-c0d3-4d31-bfd4-d41b77ffa96f", "c34cec003db8abf16d4cdeddb5aa7f88", false,
                                  true, false, 28, null, null, "e3cc1601-5878-47fe-bc4f-da07630e6a24", -106,
                                  "0763b4eb-fab3-4b30-80d8-d76080f125c7", UserStatus.getDefault(), null,
                                  new Date(1560172163402L), "5==__7iE=");
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotSame(user2, user1);
            assertEquals(user2, user1);
            assertEquals(user2.hashCode(), user1.hashCode());
            int hashCode = user1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, user1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        User user = new User("c34cec003db8abf16d4cdeddb5aa7f88", null, "8e5edb9c-54c8-405b-bab9-230f821d7ca5",
                             new Date(1560172167082L), -48, null, "7fdc8.927a5@12f1e.fr", true,
                             "b92a3015-6416-428a-8bc7-fa2c66a32ad7", "c34cec003db8abf16d4cdeddb5aa7f88", false, true,
                             false, 51, null, null, "fadbbe41-2b32-4686-8ec0-fb8b4dd75581", -126,
                             "15005ca7-dcbf-47e2-b162-f3c077065739", UserStatus.getDefault(), null,
                             new Date(1560172169218L), "5==__7iE=");
        assertTrue(user.isValid());
        User userInvalid = new User("W\u0010ç”›2å¥¾W.\u001b/2\u0013\u001c\u0010292â¸ª\u0019\u0018î˜ 2Kã£©ä¢Š-(?æ·«2â ®#Q\\\\A2ã®ª\\\\Ná¥ª,2\u0004ì­?ã•¢ã‹ P22S2Wî–‰MV\u0007>,J2îžƒï‡‡Já?ˆ",
                                    null, "a5cb7f2e-4c51-4049-87a9-a695b67725ea", new Date(1560172167611L), 98, null,
                                    null, true,
                                    "00d70351-199e-44c6-b519-7f4a05775d76ca900442-3c71-4fb3-a4ae-76a09cd3c013e90ce19c-1a1f-4426-ad89-1f913f417ff9",
                                    "W\u0010ç”›2å¥¾W.\u001b/2\u0013\u001c\u0010292â¸ª\u0019\u0018î˜ 2Kã£©ä¢Š-(?æ·«2â ®#Q\\\\A2ã®ª\\\\Ná¥ª,2\u0004ì­?ã•¢ã‹ P22S2Wî–‰MV\u0007>,J2îžƒï‡‡Já?ˆ",
                                    true, true, false, 117, null, null, "1ef5be38-1acf-4688-bd1d-afb6b89c259e", 79,
                                    "e25d342b-8a0a-42a6-8444-63bf933ef79400f2b291-1c7f-49d8-bac5-0b1b3b74b2acaad0b3f8-29ec-43ff-8fd7-c3d2b1dde95d",
                                    UserStatus.getDefault(), null, new Date(1560172164992L),
                                    "U?6\u0010a6e\u0017R\tD6C##@:9æ¡”8@6\\\\D6é£¯Cæ˜ƒaS6`hè¸Š6N`6]ê…¦6h8@;PO66\u0017Z;\u0015CA<89eã„‡6[6d");
        assertFalse(userInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            User user1 = new User("c34cec003db8abf16d4cdeddb5aa7f88", null, "c2a881e2-7da4-47a6-9ed7-ebfee7003e8c",
                                  new Date(1560172164825L), 30, null, "ac12e.33d91@5b2d1.fr", false,
                                  "241b15f2-0046-4969-8345-2ff26ce04776", "c34cec003db8abf16d4cdeddb5aa7f88", false,
                                  false, true, 84, null, null, "f7de528a-0288-4769-80b7-2d5d17115443", -50,
                                  "8970db6c-4696-436b-ac0c-db34dd7ce4e3", UserStatus.getDefault(), null,
                                  new Date(1560172168785L), "5==__7iE=");
            User user2 = new User("c34cec003db8abf16d4cdeddb5aa7f88", null, "c2a881e2-7da4-47a6-9ed7-ebfee7003e8c",
                                  new Date(1560172164825L), 30, null, "ac12e.33d91@5b2d1.fr", false,
                                  "241b15f2-0046-4969-8345-2ff26ce04776", "c34cec003db8abf16d4cdeddb5aa7f88", false,
                                  false, true, 84, null, null, "f7de528a-0288-4769-80b7-2d5d17115443", -50,
                                  "8970db6c-4696-436b-ac0c-db34dd7ce4e3", UserStatus.getDefault(), null,
                                  new Date(1560172168785L), "5==__7iE=");
            User user3 = new User("c34cec003db8abf16d4cdeddb5aa7f88", null, "767f6810-e670-40e1-a5a2-4ceadb68d667",
                                  new Date(1560172169149L), -109, null, "9d9da.afc2e@1cea6.fr", false,
                                  "f728577b-6e43-42e7-a635-c188872f96a5", "c34cec003db8abf16d4cdeddb5aa7f88", false,
                                  false, true, 104, null, null, "bd85026e-15a3-4bf4-8b73-4a0ff2198cf7", 31,
                                  "800abc39-7d64-4c84-9821-ae0193b9ee24", UserStatus.getDefault(), null,
                                  new Date(1560172168743L), "5==__7iE=");
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotNull(user3);
            assertNotSame(user2, user1);
            assertNotSame(user3, user1);
            assertEquals(user2, user1);
            assertEquals(user2, user1);
            assertEquals(user1, user2);
            assertEquals(user1, user1);
            assertFalse(user1.equals(null));
            assertNotEquals(user3, user1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
