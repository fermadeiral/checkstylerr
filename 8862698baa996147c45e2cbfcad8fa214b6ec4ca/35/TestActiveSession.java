// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model ActiveSession.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestActiveSession {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ActiveSession activesession1 = new ActiveSession("c34cec003db8abf16d4cdeddb5aa7f88",
                                                             "a7df75ad-19bf-4b92-9157-26ccf018b577",
                                                             new Date(1560172167086L),
                                                             "65186b70-dbb6-4b14-9c04-b78e85e46a8e",
                                                             "2aa585c2-e024-431d-b706-9bec2f6cb6d9");
            ActiveSession activesession2 = activesession1.clone();
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotSame(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ActiveSession activesession1 = new ActiveSession("c34cec003db8abf16d4cdeddb5aa7f88",
                                                             "2e41e717-bfe1-4330-b21c-da6fad3825de",
                                                             new Date(1560172163835L),
                                                             "bef8e16c-06f4-4024-b64d-fa134223901f",
                                                             "377441b3-3cf0-4ff1-a73e-dbc9e7ecb81b");
            ActiveSession activesession2 = new ActiveSession("c34cec003db8abf16d4cdeddb5aa7f88",
                                                             "2e41e717-bfe1-4330-b21c-da6fad3825de",
                                                             new Date(1560172163835L),
                                                             "bef8e16c-06f4-4024-b64d-fa134223901f",
                                                             "377441b3-3cf0-4ff1-a73e-dbc9e7ecb81b");
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotSame(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession2.hashCode(), activesession1.hashCode());
            int hashCode = activesession1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, activesession1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ActiveSession activesession = new ActiveSession("c34cec003db8abf16d4cdeddb5aa7f88",
                                                        "c92cf746-e3c7-4be6-a6d2-081e9ccf5319",
                                                        new Date(1560172164017L),
                                                        "d9dded4f-bb08-421e-b6ce-dcdf29dca989",
                                                        "bc9f9872-5cba-470a-b514-f5df96db9431");
        assertTrue(activesession.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ActiveSession activesession1 = new ActiveSession("c34cec003db8abf16d4cdeddb5aa7f88",
                                                             "55b67b26-5a49-48a3-acc6-b6c9d89ea6ec",
                                                             new Date(1560172167939L),
                                                             "5bccd733-4493-4181-910a-2a76eea58837",
                                                             "c9a41474-e24c-4bb5-b8c4-5f70b93bb4fc");
            ActiveSession activesession2 = new ActiveSession("c34cec003db8abf16d4cdeddb5aa7f88",
                                                             "55b67b26-5a49-48a3-acc6-b6c9d89ea6ec",
                                                             new Date(1560172167939L),
                                                             "5bccd733-4493-4181-910a-2a76eea58837",
                                                             "c9a41474-e24c-4bb5-b8c4-5f70b93bb4fc");
            ActiveSession activesession3 = new ActiveSession("c34cec003db8abf16d4cdeddb5aa7f88",
                                                             "04d4de93-22df-4097-aa5a-78a66a1b663f",
                                                             new Date(1560172168444L),
                                                             "7d21cc10-2df3-4115-bdd7-38c976a0a807",
                                                             "f32e944a-7293-436a-818a-ccb28a8b2f1f");
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotNull(activesession3);
            assertNotSame(activesession2, activesession1);
            assertNotSame(activesession3, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession1, activesession2);
            assertEquals(activesession1, activesession1);
            assertFalse(activesession1.equals(null));
            assertNotEquals(activesession3, activesession1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
