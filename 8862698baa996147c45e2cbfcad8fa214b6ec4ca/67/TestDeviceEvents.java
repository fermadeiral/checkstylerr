// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEvents.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEvents {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1560172168543L), null,
                                                          new Date(1560172167672L),
                                                          "f2bcefe2-2378-4353-b004-ea272d4f7832",
                                                          "9f804057-eb47-4533-8e02-40c01a3da22e",
                                                          "317d26de-e9c9-4b56-bc83-ce1856b965c3",
                                                          "51bf52c2-5d7f-4817-981d-79650e04e798",
                                                          "ac875338-c70b-4eee-be4f-52d0656c8826",
                                                          "c0173ad1-316a-44e7-b828-97464093e98a", false);
            DeviceEvents deviceevents2 = deviceevents1.clone();
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1560172165012L), null,
                                                          new Date(1560172162998L),
                                                          "45323a2b-3098-45b4-83b7-42b34f84e9cd",
                                                          "9b86a4ad-cabe-42bf-ad52-33a3939e79d2",
                                                          "b92d2c9e-0a44-4d8c-a8c9-54454209e53f",
                                                          "ee41f784-8577-4ba6-a93f-44e7a7a9e19c",
                                                          "65c0232a-f226-4ead-8b10-ae7fed1b2ab0",
                                                          "0ef429f0-8027-4429-a61f-5251a7d958d2", false);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1560172165012L), null,
                                                          new Date(1560172162998L),
                                                          "45323a2b-3098-45b4-83b7-42b34f84e9cd",
                                                          "9b86a4ad-cabe-42bf-ad52-33a3939e79d2",
                                                          "b92d2c9e-0a44-4d8c-a8c9-54454209e53f",
                                                          "ee41f784-8577-4ba6-a93f-44e7a7a9e19c",
                                                          "65c0232a-f226-4ead-8b10-ae7fed1b2ab0",
                                                          "0ef429f0-8027-4429-a61f-5251a7d958d2", false);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2.hashCode(), deviceevents1.hashCode());
            int hashCode = deviceevents1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceevents1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEvents deviceevents = new DeviceEvents(null, new Date(1560172170594L), null, new Date(1560172169952L),
                                                     "2777bd59-77b9-4e42-9a92-34dfb9180dd0",
                                                     "b1c1b2d6-05bc-4b86-9639-4e81cca0e72e",
                                                     "cb4e3afa-e98a-4473-afba-ea28bb199714",
                                                     "7e3af942-1cf5-4c50-aec6-5bd79b0b86d4",
                                                     "44ca6500-56ed-4220-8da1-5d2b75d2db8e",
                                                     "8dc1a503-a42b-452d-a040-fb1a6b535332", true);
        assertTrue(deviceevents.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1560172165193L), null,
                                                          new Date(1560172170222L),
                                                          "0609a85d-a822-4e96-99ff-be0732b0529e",
                                                          "7f31daac-b88d-472a-a8d8-b08aa1c51951",
                                                          "dc1645a6-c5a5-4d48-ad2a-fcbd6504a1b8",
                                                          "e1268435-c0e2-4abe-ba83-716ef7f94d5e",
                                                          "9daa37b0-3003-4015-aca4-9e25604f5a54",
                                                          "d0e0142d-c2db-41f5-b547-468a7a27a448", false);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1560172165193L), null,
                                                          new Date(1560172170222L),
                                                          "0609a85d-a822-4e96-99ff-be0732b0529e",
                                                          "7f31daac-b88d-472a-a8d8-b08aa1c51951",
                                                          "dc1645a6-c5a5-4d48-ad2a-fcbd6504a1b8",
                                                          "e1268435-c0e2-4abe-ba83-716ef7f94d5e",
                                                          "9daa37b0-3003-4015-aca4-9e25604f5a54",
                                                          "d0e0142d-c2db-41f5-b547-468a7a27a448", false);
            DeviceEvents deviceevents3 = new DeviceEvents(null, new Date(1560172163855L), null,
                                                          new Date(1560172165534L),
                                                          "d78d35cd-ae09-44d1-9537-b91da40a0c68",
                                                          "06c8ba7a-9a60-47c0-99f7-30186c7bbc72",
                                                          "dbed1048-d24c-4133-a30f-81336122de5a",
                                                          "0dd420e9-0e7a-491c-bb85-e9c5a580c06e",
                                                          "20b6c377-5b85-4300-ae8c-d8814846656b",
                                                          "84ee606f-b5c4-42e7-8c08-bb4e54e978e2", false);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotNull(deviceevents3);
            assertNotSame(deviceevents2, deviceevents1);
            assertNotSame(deviceevents3, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents1, deviceevents2);
            assertEquals(deviceevents1, deviceevents1);
            assertFalse(deviceevents1.equals(null));
            assertNotEquals(deviceevents3, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
