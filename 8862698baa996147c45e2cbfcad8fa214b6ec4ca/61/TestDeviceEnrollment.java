// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEnrollment.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEnrollment {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEnrollment deviceenrollment1 = new DeviceEnrollment("8c0a86df-6970-4832-bc00-470d47bee872",
                                                                      new Date(1560172170060L),
                                                                      new Date(1560172169802L),
                                                                      "s08ndZtfoPJYh434s0zE5i6525f08MX6",
                                                                      "A-pz8GM9:3Kb3TRYpqov39i5r5fmL610C0n0uXL5:tOiBIu7bpLoX622I08DGOK75gs2nO:ag7elJE3r50P88RBEfX143s8Dj",
                                                                      new Date(1560172164325L),
                                                                      "s08ndZtfoPJYh434s0zE5i6525f08MX6");
            DeviceEnrollment deviceenrollment2 = deviceenrollment1.clone();
            assertNotNull(deviceenrollment1);
            assertNotNull(deviceenrollment2);
            assertNotSame(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEnrollment deviceenrollment1 = new DeviceEnrollment("c606b843-6ac7-4058-ad9c-0c0f13e4a32a",
                                                                      new Date(1560172170352L),
                                                                      new Date(1560172170407L),
                                                                      "s08ndZtfoPJYh434s0zE5i6525f08MX6",
                                                                      "A-pz8GM9:3Kb3TRYpqov39i5r5fmL610C0n0uXL5:tOiBIu7bpLoX622I08DGOK75gs2nO:ag7elJE3r50P88RBEfX143s8Dj",
                                                                      new Date(1560172168291L),
                                                                      "s08ndZtfoPJYh434s0zE5i6525f08MX6");
            DeviceEnrollment deviceenrollment2 = new DeviceEnrollment("c606b843-6ac7-4058-ad9c-0c0f13e4a32a",
                                                                      new Date(1560172170352L),
                                                                      new Date(1560172170407L),
                                                                      "s08ndZtfoPJYh434s0zE5i6525f08MX6",
                                                                      "A-pz8GM9:3Kb3TRYpqov39i5r5fmL610C0n0uXL5:tOiBIu7bpLoX622I08DGOK75gs2nO:ag7elJE3r50P88RBEfX143s8Dj",
                                                                      new Date(1560172168291L),
                                                                      "s08ndZtfoPJYh434s0zE5i6525f08MX6");
            assertNotNull(deviceenrollment1);
            assertNotNull(deviceenrollment2);
            assertNotSame(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2.hashCode(), deviceenrollment1.hashCode());
            int hashCode = deviceenrollment1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceenrollment1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEnrollment deviceenrollment = new DeviceEnrollment("f06b0ca8-2a21-48c9-8943-d7297a73974e",
                                                                 new Date(1560172170649L), new Date(1560172163734L),
                                                                 "s08ndZtfoPJYh434s0zE5i6525f08MX6",
                                                                 "A-pz8GM9:3Kb3TRYpqov39i5r5fmL610C0n0uXL5:tOiBIu7bpLoX622I08DGOK75gs2nO:ag7elJE3r50P88RBEfX143s8Dj",
                                                                 new Date(1560172165749L),
                                                                 "s08ndZtfoPJYh434s0zE5i6525f08MX6");
        assertTrue(deviceenrollment.isValid());
        DeviceEnrollment deviceenrollmentInvalid = new DeviceEnrollment("f964708a-8e19-4819-97ab-0b21dd8a995f",
                                                                        new Date(1560172164752L),
                                                                        new Date(1560172168489L),
                                                                        "\u0007eK1Rꆪx1\u001cS7Hvku\\\\L㙿b71OOgeGOlSHLN\u0007Ie7[1W\u001cgl1WNw\u001d@lGFkbN1g℺Oee?RH",
                                                                        null, new Date(1560172165637L),
                                                                        "\u0007eK1Rꆪx1\u001cS7Hvku\\\\L㙿b71OOgeGOlSHLN\u0007Ie7[1W\u001cgl1WNw\u001d@lGFkbN1g℺Oee?RH");
        assertFalse(deviceenrollmentInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEnrollment deviceenrollment1 = new DeviceEnrollment("e700a062-b59a-4b23-8b67-de4f8364da80",
                                                                      new Date(1560172161495L),
                                                                      new Date(1560172165210L),
                                                                      "s08ndZtfoPJYh434s0zE5i6525f08MX6",
                                                                      "A-pz8GM9:3Kb3TRYpqov39i5r5fmL610C0n0uXL5:tOiBIu7bpLoX622I08DGOK75gs2nO:ag7elJE3r50P88RBEfX143s8Dj",
                                                                      new Date(1560172162871L),
                                                                      "s08ndZtfoPJYh434s0zE5i6525f08MX6");
            DeviceEnrollment deviceenrollment2 = new DeviceEnrollment("e700a062-b59a-4b23-8b67-de4f8364da80",
                                                                      new Date(1560172161495L),
                                                                      new Date(1560172165210L),
                                                                      "s08ndZtfoPJYh434s0zE5i6525f08MX6",
                                                                      "A-pz8GM9:3Kb3TRYpqov39i5r5fmL610C0n0uXL5:tOiBIu7bpLoX622I08DGOK75gs2nO:ag7elJE3r50P88RBEfX143s8Dj",
                                                                      new Date(1560172162871L),
                                                                      "s08ndZtfoPJYh434s0zE5i6525f08MX6");
            DeviceEnrollment deviceenrollment3 = new DeviceEnrollment("4af2a950-4fa3-4b1d-8c82-aa81e984630c",
                                                                      new Date(1560172167657L),
                                                                      new Date(1560172162192L),
                                                                      "s08ndZtfoPJYh434s0zE5i6525f08MX6",
                                                                      "A-pz8GM9:3Kb3TRYpqov39i5r5fmL610C0n0uXL5:tOiBIu7bpLoX622I08DGOK75gs2nO:ag7elJE3r50P88RBEfX143s8Dj",
                                                                      new Date(1560172165048L),
                                                                      "s08ndZtfoPJYh434s0zE5i6525f08MX6");
            assertNotNull(deviceenrollment1);
            assertNotNull(deviceenrollment2);
            assertNotNull(deviceenrollment3);
            assertNotSame(deviceenrollment2, deviceenrollment1);
            assertNotSame(deviceenrollment3, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment1, deviceenrollment2);
            assertEquals(deviceenrollment1, deviceenrollment1);
            assertFalse(deviceenrollment1.equals(null));
            assertNotEquals(deviceenrollment3, deviceenrollment1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
