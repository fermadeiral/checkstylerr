// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model ParentAccount.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestParentAccount {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("5766f.47643@36894.fr",
                                                             "38d9200b-31bc-4586-86cd-2d00a06dc88d",
                                                             "c34cec003db8abf16d4cdeddb5aa7f88");
            ParentAccount parentaccount2 = parentaccount1.clone();
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotSame(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("83139.a8828@a2972.fr",
                                                             "7e3a433a-2710-4d9c-8471-00f07fb3a2de",
                                                             "c34cec003db8abf16d4cdeddb5aa7f88");
            ParentAccount parentaccount2 = new ParentAccount("83139.a8828@a2972.fr",
                                                             "7e3a433a-2710-4d9c-8471-00f07fb3a2de",
                                                             "c34cec003db8abf16d4cdeddb5aa7f88");
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotSame(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount2.hashCode(), parentaccount1.hashCode());
            int hashCode = parentaccount1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, parentaccount1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ParentAccount parentaccount = new ParentAccount("fe10a.24e3d@3bfff.fr", "b92c90e7-c8f7-4b7b-8dac-8b6459e27036",
                                                        "c34cec003db8abf16d4cdeddb5aa7f88");
        assertTrue(parentaccount.isValid());
        ParentAccount parentaccountInvalid = new ParentAccount("íŽ?ã³“ê™‚\u001cã¯€?ì¯·Ñ?\u0011ê?²\u0018!à¨´>\u0017ê¿´á•‰æ—‹ëŠ?\u0006ä‚‘ïž»ãœ¹ä‘ºá”²êŽ§æš \u0012>ä¸¼å°»ì˜˜êž·\u001båª¾ï¼²êž˜\u0003ã?µã§½ê†¡ã—ƒã—?é??>\u00144?\u0016ã?´ç„³ä¡®ï»?ë ·ä¤–ã?©>ä±ž\u0018èª«è …æ¡‡>",
                                                               "db10bc63-3f44-4c3a-b056-936af24fafce09ed2f11-7006-44b4-a0d0-f1005a7077364782903b-d51e-4855-9215-8d92a428fe0a",
                                                               "W\u0010ç”›2å¥¾W.\u001b/2\u0013\u001c\u0010292â¸ª\u0019\u0018î˜ 2Kã£©ä¢Š-(?æ·«2â ®#Q\\\\A2ã®ª\\\\Ná¥ª,2\u0004ì­?ã•¢ã‹ P22S2Wî–‰MV\u0007>,J2îžƒï‡‡Já?ˆ");
        assertFalse(parentaccountInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("fef3d.6a346@6e74e.fr",
                                                             "096a9fcc-3c51-4873-a003-2cf24e0e9a02",
                                                             "c34cec003db8abf16d4cdeddb5aa7f88");
            ParentAccount parentaccount2 = new ParentAccount("fef3d.6a346@6e74e.fr",
                                                             "096a9fcc-3c51-4873-a003-2cf24e0e9a02",
                                                             "c34cec003db8abf16d4cdeddb5aa7f88");
            ParentAccount parentaccount3 = new ParentAccount("bd392.02bff@a5fb5.me",
                                                             "0f45cddf-5caf-49b3-8d00-c15fdcf1ecde",
                                                             "c34cec003db8abf16d4cdeddb5aa7f88");
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotNull(parentaccount3);
            assertNotSame(parentaccount2, parentaccount1);
            assertNotSame(parentaccount3, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount1, parentaccount2);
            assertEquals(parentaccount1, parentaccount1);
            assertFalse(parentaccount1.equals(null));
            assertNotEquals(parentaccount3, parentaccount1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
