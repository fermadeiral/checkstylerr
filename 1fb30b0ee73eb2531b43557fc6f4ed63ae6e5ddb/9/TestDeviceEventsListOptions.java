// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import com.arm.mbed.cloud.sdk.common.Order;
import com.arm.mbed.cloud.sdk.common.listing.ListOptionsEncoder;
import com.arm.mbed.cloud.sdk.common.listing.filtering.FilterOperator;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEventsListOptions.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEventsListOptions {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEventsListOptions deviceeventslistoptions1 = new DeviceEventsListOptions(Integer.valueOf(56),
                                                                                           Long.valueOf(-50),
                                                                                           Order.getDefault(),
                                                                                           "d2b7e3c0-0f90-41c7-9866-e02e418ba56e",
                                                                                           null, null);
            DeviceEventsListOptions deviceeventslistoptions2 = deviceeventslistoptions1.clone();
            assertNotNull(deviceeventslistoptions1);
            assertNotNull(deviceeventslistoptions2);
            assertNotSame(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2, deviceeventslistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the filters method.
     */
    @SuppressWarnings({ "boxing", "resource" })
    @Test
    public void testFilters() {
        try {
            DeviceEventsListOptions option = new DeviceEventsListOptions().equalToDeviceId("12cf3a9e-f5e8-48d5-a43b-425eedfc0832")
                                                                          .notEqualToDeviceId("ae301e17-caed-4a6f-877d-c569260a5491")
                                                                          .inDeviceIds(Arrays.asList("fd92ec83-d89f-4c62-82c3-8f55febe1cb2",
                                                                                                     "0d41401c-c266-4653-9234-4e03bf5f18ea",
                                                                                                     "50ec72df-fe91-4c17-87fd-a0673c68d1bb"))
                                                                          .notInDeviceIds(Arrays.asList("1594ff1c-e44e-4960-a6f4-72751650972d",
                                                                                                        "328b6e91-0c67-401c-84aa-5953a577c4dd",
                                                                                                        "8c6d81b0-8f80-42ae-8bfe-9d89a8ff463a"))
                                                                          .equalToDescription("8e29e3ca-3837-4caa-afc0-c01b92bfed8a")
                                                                          .notEqualToDescription("a01df40d-52d5-4bf2-9065-1b34abc44dca")
                                                                          .inDescriptions(Arrays.asList("a5c902ef-dd73-49da-ac93-e71785a3861f",
                                                                                                        "00c23e22-1412-4415-99fe-9af0b411d2ed"))
                                                                          .notInDescriptions(Arrays.asList("ac338930-db0e-4431-83cf-80d3ec482761",
                                                                                                           "734ea2b7-1ae1-43d2-9df4-f03da988b8cc",
                                                                                                           "717a5f35-46e2-4998-9940-c0e72f0c9253",
                                                                                                           "c592f87d-4890-4f28-a75e-830de1acad60",
                                                                                                           "40b8c9f1-45c1-4e28-acb2-6358034b783d",
                                                                                                           "090e3550-be2b-43fc-8484-b7d5c1a67827",
                                                                                                           "4f186a8c-32d6-40b3-8853-dfebf137f734",
                                                                                                           "5726949d-ecf2-4966-b309-ce0aa128fbeb",
                                                                                                           "f40c1ad7-fbd8-4189-9ab2-0ff8f3e66534"))
                                                                          .inDateTimes(Arrays.asList(new Date(1558096107017L),
                                                                                                     new Date(1558096106229L),
                                                                                                     new Date(1558096108164L),
                                                                                                     new Date(1558096110652L),
                                                                                                     new Date(1558096108688L),
                                                                                                     new Date(1558096106965L),
                                                                                                     new Date(1558096106533L)))
                                                                          .notInDateTimes(Arrays.asList(new Date(1558096106505L),
                                                                                                        new Date(1558096107945L),
                                                                                                        new Date(1558096103374L),
                                                                                                        new Date(1558096107591L),
                                                                                                        new Date(1558096107264L),
                                                                                                        new Date(1558096105970L),
                                                                                                        new Date(1558096102731L),
                                                                                                        new Date(1558096109018L),
                                                                                                        new Date(1558096103107L)))
                                                                          .lessThanDateTime(new Date(1558096102909L))
                                                                          .greaterThanDateTime(new Date(1558096106764L))
                                                                          .equalToStateChange(Boolean.TRUE)
                                                                          .notEqualToStateChange(Boolean.TRUE)
                                                                          .equalToId("e14c8ab0-0805-44f8-b978-983432bcb18e")
                                                                          .notEqualToId("eccd6dd8-bc82-44ff-8cd7-635ca3538d7d")
                                                                          .inIds(Arrays.asList("79fd268d-a00a-42ce-a675-0af264f3a990"))
                                                                          .notInIds(Arrays.asList("81b87912-4583-4080-b211-75614648c5b1",
                                                                                                  "3b0870c5-fa6c-4994-9b32-501105f54ae1",
                                                                                                  "b7b5671b-3bea-49c9-af5c-ee3752eb1ae7",
                                                                                                  "a8456ca1-ec73-4c09-9908-34055ff9486e",
                                                                                                  "ca290bd7-aa6f-4f73-b3cd-7d8efe71b60e",
                                                                                                  "707ac248-3cd0-4354-b6d4-eee12a0d4759",
                                                                                                  "103950fd-3fa1-4eee-8a75-f284542fcf82",
                                                                                                  "b25732eb-d2a4-4c9b-88b4-1df7adb12e8b"))
                                                                          .equalToEventType("fb64f649-df0c-4708-81d1-1c1c37b65955")
                                                                          .notEqualToEventType("38a87c94-b272-4647-99b8-375ff2a28acd")
                                                                          .inEventTypes(Arrays.asList("7da531e4-df78-4321-8c9a-ae26915c7f4f",
                                                                                                      "96c887c0-3624-487f-9b7d-c1898a3dd3a9"))
                                                                          .notInEventTypes(Arrays.asList("5fc05896-1ad4-4ab5-a0e9-f86634b1935c",
                                                                                                         "e5d99d8d-59f5-4d61-8264-3dad1f120010",
                                                                                                         "44517a52-6bf2-4190-bed1-5e7ac7f4b57a",
                                                                                                         "d478648f-6059-4a78-b052-57b8b84cd77d",
                                                                                                         "7f90866e-a5cb-46ef-907e-f958c640f715",
                                                                                                         "a8c6952c-3b30-416f-83b0-dfd4d2f0d0f2"));
            assertTrue(option.hasFilters());
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID, FilterOperator.EQUAL));
            assertNotNull(option.getDeviceIdFilters());
            assertEquals("12cf3a9e-f5e8-48d5-a43b-425eedfc0832",
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDeviceIdFilters());
            assertEquals("ae301e17-caed-4a6f-877d-c569260a5491",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID, FilterOperator.IN));
            assertNotNull(option.getDeviceIdFilters());
            assertEquals(Arrays.asList("fd92ec83-d89f-4c62-82c3-8f55febe1cb2", "0d41401c-c266-4653-9234-4e03bf5f18ea",
                                       "50ec72df-fe91-4c17-87fd-a0673c68d1bb"),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID,
                                                                 List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getDeviceIdFilters());
            assertEquals(Arrays.asList("1594ff1c-e44e-4960-a6f4-72751650972d", "328b6e91-0c67-401c-84aa-5953a577c4dd",
                                       "8c6d81b0-8f80-42ae-8bfe-9d89a8ff463a"),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID,
                                                                    List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("8e29e3ca-3837-4caa-afc0-c01b92bfed8a",
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("a01df40d-52d5-4bf2-9065-1b34abc44dca",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                       String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("a5c902ef-dd73-49da-ac93-e71785a3861f", "00c23e22-1412-4415-99fe-9af0b411d2ed"),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                 List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("ac338930-db0e-4431-83cf-80d3ec482761", "734ea2b7-1ae1-43d2-9df4-f03da988b8cc",
                                       "717a5f35-46e2-4998-9940-c0e72f0c9253", "c592f87d-4890-4f28-a75e-830de1acad60",
                                       "40b8c9f1-45c1-4e28-acb2-6358034b783d", "090e3550-be2b-43fc-8484-b7d5c1a67827",
                                       "4f186a8c-32d6-40b3-8853-dfebf137f734", "5726949d-ecf2-4966-b309-ce0aa128fbeb",
                                       "f40c1ad7-fbd8-4189-9ab2-0ff8f3e66534"),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME, FilterOperator.IN));
            assertNotNull(option.getDateTimeFilters());
            assertEquals(Arrays.asList(new Date(1558096107017L), new Date(1558096106229L), new Date(1558096108164L),
                                       new Date(1558096110652L), new Date(1558096108688L), new Date(1558096106965L),
                                       new Date(1558096106533L)),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME,
                                                                 List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME, FilterOperator.NOT_IN));
            assertNotNull(option.getDateTimeFilters());
            assertEquals(Arrays.asList(new Date(1558096106505L), new Date(1558096107945L), new Date(1558096103374L),
                                       new Date(1558096107591L), new Date(1558096107264L), new Date(1558096105970L),
                                       new Date(1558096102731L), new Date(1558096109018L), new Date(1558096103107L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME,
                                                                    List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME, FilterOperator.LESS_THAN));
            assertNotNull(option.getDateTimeFilters());
            assertEquals(new Date(1558096102909L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME, FilterOperator.GREATER_THAN));
            assertNotNull(option.getDateTimeFilters());
            assertEquals(new Date(1558096106764L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE, FilterOperator.EQUAL));
            assertNotNull(option.getStateChangeFilters());
            assertEquals(Boolean.TRUE,
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE,
                                                                    Boolean.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getStateChangeFilters());
            assertEquals(Boolean.TRUE,
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE,
                                                                       Boolean.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, FilterOperator.EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("e14c8ab0-0805-44f8-b978-983432bcb18e",
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("eccd6dd8-bc82-44ff-8cd7-635ca3538d7d",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, FilterOperator.IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("79fd268d-a00a-42ce-a675-0af264f3a990"),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, List.class,
                                                                 option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("81b87912-4583-4080-b211-75614648c5b1", "3b0870c5-fa6c-4994-9b32-501105f54ae1",
                                       "b7b5671b-3bea-49c9-af5c-ee3752eb1ae7", "a8456ca1-ec73-4c09-9908-34055ff9486e",
                                       "ca290bd7-aa6f-4f73-b3cd-7d8efe71b60e", "707ac248-3cd0-4354-b6d4-eee12a0d4759",
                                       "103950fd-3fa1-4eee-8a75-f284542fcf82", "b25732eb-d2a4-4c9b-88b4-1df7adb12e8b"),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID,
                                                                    List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE, FilterOperator.EQUAL));
            assertNotNull(option.getEventTypeFilters());
            assertEquals("fb64f649-df0c-4708-81d1-1c1c37b65955",
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE,
                                                                    String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getEventTypeFilters());
            assertEquals("38a87c94-b272-4647-99b8-375ff2a28acd",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE,
                                                                       String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE, FilterOperator.IN));
            assertNotNull(option.getEventTypeFilters());
            assertEquals(Arrays.asList("7da531e4-df78-4321-8c9a-ae26915c7f4f", "96c887c0-3624-487f-9b7d-c1898a3dd3a9"),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE,
                                                                 List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE, FilterOperator.NOT_IN));
            assertNotNull(option.getEventTypeFilters());
            assertEquals(Arrays.asList("5fc05896-1ad4-4ab5-a0e9-f86634b1935c", "e5d99d8d-59f5-4d61-8264-3dad1f120010",
                                       "44517a52-6bf2-4190-bed1-5e7ac7f4b57a", "d478648f-6059-4a78-b052-57b8b84cd77d",
                                       "7f90866e-a5cb-46ef-907e-f958c640f715", "a8c6952c-3b30-416f-83b0-dfd4d2f0d0f2"),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE,
                                                                    List.class, option));
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEventsListOptions deviceeventslistoptions1 = new DeviceEventsListOptions(Integer.valueOf(-39),
                                                                                           Long.valueOf(72),
                                                                                           Order.getDefault(),
                                                                                           "ca3f93a5-3c32-40bd-a519-33326ba2df8a",
                                                                                           null, null);
            DeviceEventsListOptions deviceeventslistoptions2 = new DeviceEventsListOptions(Integer.valueOf(-39),
                                                                                           Long.valueOf(72),
                                                                                           Order.getDefault(),
                                                                                           "ca3f93a5-3c32-40bd-a519-33326ba2df8a",
                                                                                           null, null);
            assertNotNull(deviceeventslistoptions1);
            assertNotNull(deviceeventslistoptions2);
            assertNotSame(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2.hashCode(), deviceeventslistoptions1.hashCode());
            int hashCode = deviceeventslistoptions1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceeventslistoptions1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEventsListOptions deviceeventslistoptions1 = new DeviceEventsListOptions(Integer.valueOf(29),
                                                                                           Long.valueOf(63),
                                                                                           Order.getDefault(),
                                                                                           "350a8033-749e-4755-935e-a201747e51ca",
                                                                                           null, null);
            DeviceEventsListOptions deviceeventslistoptions2 = new DeviceEventsListOptions(Integer.valueOf(29),
                                                                                           Long.valueOf(63),
                                                                                           Order.getDefault(),
                                                                                           "350a8033-749e-4755-935e-a201747e51ca",
                                                                                           null, null);
            DeviceEventsListOptions deviceeventslistoptions3 = new DeviceEventsListOptions(Integer.valueOf(-123),
                                                                                           Long.valueOf(84),
                                                                                           Order.getDefault(),
                                                                                           "d544ebee-8bbf-46d2-95eb-e070a643d9be",
                                                                                           null, null);
            assertNotNull(deviceeventslistoptions1);
            assertNotNull(deviceeventslistoptions2);
            assertNotNull(deviceeventslistoptions3);
            assertNotSame(deviceeventslistoptions2, deviceeventslistoptions1);
            assertNotSame(deviceeventslistoptions3, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions1, deviceeventslistoptions2);
            assertEquals(deviceeventslistoptions1, deviceeventslistoptions1);
            assertFalse(deviceeventslistoptions1.equals(null));
            assertNotEquals(deviceeventslistoptions3, deviceeventslistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
