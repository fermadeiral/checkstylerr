// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model UserInvitation.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestUserInvitation {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("bf46f5afa631cc54fbbfd0f5b5ecdbe9",
                                                                new Date(1558096106119L), "fb272.5d0a4@e9cc1.me",
                                                                new Date(1558096106112L),
                                                                "bf46f5afa631cc54fbbfd0f5b5ecdbe9", null,
                                                                new Date(1558096106892L),
                                                                "bf46f5afa631cc54fbbfd0f5b5ecdbe9");
            UserInvitation userinvitation2 = userinvitation1.clone();
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotSame(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("bf46f5afa631cc54fbbfd0f5b5ecdbe9",
                                                                new Date(1558096109452L), "daec9.a338f@5de7e.fr",
                                                                new Date(1558096106282L),
                                                                "bf46f5afa631cc54fbbfd0f5b5ecdbe9", null,
                                                                new Date(1558096110068L),
                                                                "bf46f5afa631cc54fbbfd0f5b5ecdbe9");
            UserInvitation userinvitation2 = new UserInvitation("bf46f5afa631cc54fbbfd0f5b5ecdbe9",
                                                                new Date(1558096109452L), "daec9.a338f@5de7e.fr",
                                                                new Date(1558096106282L),
                                                                "bf46f5afa631cc54fbbfd0f5b5ecdbe9", null,
                                                                new Date(1558096110068L),
                                                                "bf46f5afa631cc54fbbfd0f5b5ecdbe9");
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotSame(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation2.hashCode(), userinvitation1.hashCode());
            int hashCode = userinvitation1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, userinvitation1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        UserInvitation userinvitation = new UserInvitation("bf46f5afa631cc54fbbfd0f5b5ecdbe9", new Date(1558096108051L),
                                                           "89306.a8c4a@7fa33.fr", new Date(1558096109604L),
                                                           "bf46f5afa631cc54fbbfd0f5b5ecdbe9", null,
                                                           new Date(1558096102683L),
                                                           "bf46f5afa631cc54fbbfd0f5b5ecdbe9");
        assertTrue(userinvitation.isValid());
        UserInvitation userinvitationInvalid = new UserInvitation("2@T^&72V2î‘£\u00112_8ã™?@7Mí›†C7#\u000e728N822?288=7æ‘ž\u0000*E8\u0005\u0014î†‰ì½´TK22Vï’ˆÓŸT@\u0001$$Y+\f87é¾§7å·­",
                                                                  new Date(1558096100557L), null,
                                                                  new Date(1558096104367L),
                                                                  "2@T^&72V2î‘£\u00112_8ã™?@7Mí›†C7#\u000e728N822?288=7æ‘ž\u0000*E8\u0005\u0014î†‰ì½´TK22Vï’ˆÓŸT@\u0001$$Y+\f87é¾§7å·­",
                                                                  null, new Date(1558096102047L),
                                                                  "2@T^&72V2î‘£\u00112_8ã™?@7Mí›†C7#\u000e728N822?288=7æ‘ž\u0000*E8\u0005\u0014î†‰ì½´TK22Vï’ˆÓŸT@\u0001$$Y+\f87é¾§7å·­");
        assertFalse(userinvitationInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("bf46f5afa631cc54fbbfd0f5b5ecdbe9",
                                                                new Date(1558096109984L), "cd060.f509b@7423b.me",
                                                                new Date(1558096107457L),
                                                                "bf46f5afa631cc54fbbfd0f5b5ecdbe9", null,
                                                                new Date(1558096108172L),
                                                                "bf46f5afa631cc54fbbfd0f5b5ecdbe9");
            UserInvitation userinvitation2 = new UserInvitation("bf46f5afa631cc54fbbfd0f5b5ecdbe9",
                                                                new Date(1558096109984L), "cd060.f509b@7423b.me",
                                                                new Date(1558096107457L),
                                                                "bf46f5afa631cc54fbbfd0f5b5ecdbe9", null,
                                                                new Date(1558096108172L),
                                                                "bf46f5afa631cc54fbbfd0f5b5ecdbe9");
            UserInvitation userinvitation3 = new UserInvitation("bf46f5afa631cc54fbbfd0f5b5ecdbe9",
                                                                new Date(1558096102531L), "accf5.02972@0feb6.me",
                                                                new Date(1558096108929L),
                                                                "bf46f5afa631cc54fbbfd0f5b5ecdbe9", null,
                                                                new Date(1558096107206L),
                                                                "bf46f5afa631cc54fbbfd0f5b5ecdbe9");
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotNull(userinvitation3);
            assertNotSame(userinvitation2, userinvitation1);
            assertNotSame(userinvitation3, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation1, userinvitation2);
            assertEquals(userinvitation1, userinvitation1);
            assertFalse(userinvitation1.equals(null));
            assertNotEquals(userinvitation3, userinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
