// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model ParentAccount.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestParentAccount {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("ed0ff.77eeb@1a913.fr",
                                                             "9f87a553-5266-4552-87fc-41fbee11ec45",
                                                             "bf46f5afa631cc54fbbfd0f5b5ecdbe9");
            ParentAccount parentaccount2 = parentaccount1.clone();
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotSame(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("054f4.bcac6@b5a78.me",
                                                             "9f45466b-7cb7-478d-be45-dbd65ecf95e1",
                                                             "bf46f5afa631cc54fbbfd0f5b5ecdbe9");
            ParentAccount parentaccount2 = new ParentAccount("054f4.bcac6@b5a78.me",
                                                             "9f45466b-7cb7-478d-be45-dbd65ecf95e1",
                                                             "bf46f5afa631cc54fbbfd0f5b5ecdbe9");
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotSame(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount2.hashCode(), parentaccount1.hashCode());
            int hashCode = parentaccount1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, parentaccount1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ParentAccount parentaccount = new ParentAccount("85a05.42e83@47320.fr", "fcf18afc-3ed6-4d48-80d8-2509a31e7cea",
                                                        "bf46f5afa631cc54fbbfd0f5b5ecdbe9");
        assertTrue(parentaccount.isValid());
        ParentAccount parentaccountInvalid = new ParentAccount(">ï¥?\u0003à¦†%îŸ°>>\u000eâ½˜á£—áˆ¬>ïº†â™§ã¤»9äŠ?\u0019â´‘åš¾á€‡>å§·>è“‰î±³î´§á¡ î²ž>à´ºÜ’à» á?Ž\u0016âž–0\tà¦?â„žë?”ä“¹\u0001Ò®Ùª\u0010è£¸ïª–î¨º>\u0014\u0007ïº¼;\u000f>\u001a\u000bã’‹4",
                                                               "797cd9e1-992f-49d3-94e4-2e5e162a83fb2dd1ba45-8bce-4a05-baa4-54d169bfce2560f1732f-22a5-44f8-bcda-a9ed8bf0a58a",
                                                               "2@T^&72V2î‘£\u00112_8ã™?@7Mí›†C7#\u000e728N822?288=7æ‘ž\u0000*E8\u0005\u0014î†‰ì½´TK22Vï’ˆÓŸT@\u0001$$Y+\f87é¾§7å·­");
        assertFalse(parentaccountInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("861d6.8456d@91cab.me",
                                                             "4ed7f3e0-cb22-42a1-9079-ff856e6eac69",
                                                             "bf46f5afa631cc54fbbfd0f5b5ecdbe9");
            ParentAccount parentaccount2 = new ParentAccount("861d6.8456d@91cab.me",
                                                             "4ed7f3e0-cb22-42a1-9079-ff856e6eac69",
                                                             "bf46f5afa631cc54fbbfd0f5b5ecdbe9");
            ParentAccount parentaccount3 = new ParentAccount("a6527.b0b99@11382.fr",
                                                             "d5e8b704-d718-4615-b553-1fb8846a95d3",
                                                             "bf46f5afa631cc54fbbfd0f5b5ecdbe9");
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotNull(parentaccount3);
            assertNotSame(parentaccount2, parentaccount1);
            assertNotSame(parentaccount3, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount1, parentaccount2);
            assertEquals(parentaccount1, parentaccount1);
            assertFalse(parentaccount1.equals(null));
            assertNotEquals(parentaccount3, parentaccount1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
