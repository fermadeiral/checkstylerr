// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model ParentAccount.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestParentAccount {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("c3beb.bb529@6e5e5.fr",
                                                             "3bb8ccce-df29-4749-9280-b268e00ecec2",
                                                             "2ab93f7f4ac933ce8ac763c9e4ddcf32");
            ParentAccount parentaccount2 = parentaccount1.clone();
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotSame(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("3d3fa.3d0ef@efed4.fr",
                                                             "e157353c-deae-441f-826f-29b382d6412b",
                                                             "2ab93f7f4ac933ce8ac763c9e4ddcf32");
            ParentAccount parentaccount2 = new ParentAccount("3d3fa.3d0ef@efed4.fr",
                                                             "e157353c-deae-441f-826f-29b382d6412b",
                                                             "2ab93f7f4ac933ce8ac763c9e4ddcf32");
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotSame(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount2.hashCode(), parentaccount1.hashCode());
            int hashCode = parentaccount1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, parentaccount1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ParentAccount parentaccount = new ParentAccount("a4326.19f09@20a46.me", "dfcb4c37-11b3-44f8-98a4-fc605325e39f",
                                                        "2ab93f7f4ac933ce8ac763c9e4ddcf32");
        assertTrue(parentaccount.isValid());
        ParentAccount parentaccountInvalid = new ParentAccount("èš©>î–œî´žé‘¼>,à«®ï˜?>ï–”î–šä—Ÿ æ²‡éŽ©ê‘›é…´é”?,>-é¾¨ìš˜\bç‘„æ¡™è­ƒ(ç½†é˜¬èˆ‡ê?—é‰?áŸ»á¼˜ç“µé‰™>â²?\u00048è­?à¯²è‹Ÿé€†é‰ \u0018é†¨éœ…>å©¹ì¢ºä˜‹*\u001cï•–ê¹«åƒ£é• #ê±œá·´æº“",
                                                               "edcf7d13-7ad3-45e3-89b0-337e1586724e5d3e1692-17b6-4272-96ce-f1dbac3eb1037766f5bf-15cf-43c8-b1ea-c2768c91e83e",
                                                               "5)@55\f5Zå ’I5Bç³Ž%ç›˜Cëµ•5Në­¹T\u001cïŒ²\u0018å¸†é€§5â?Žï‘¢Aê†…`æ®¿K#[555ç²›55R55á¹—è›‘å´–,5?VYæ´„`?\\\\På­¹\u0005ïµŠ\u000e5");
        assertFalse(parentaccountInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("7d95c.647e5@0cb4b.fr",
                                                             "34d00be1-ba0a-4518-af39-db101be15544",
                                                             "2ab93f7f4ac933ce8ac763c9e4ddcf32");
            ParentAccount parentaccount2 = new ParentAccount("7d95c.647e5@0cb4b.fr",
                                                             "34d00be1-ba0a-4518-af39-db101be15544",
                                                             "2ab93f7f4ac933ce8ac763c9e4ddcf32");
            ParentAccount parentaccount3 = new ParentAccount("1550a.1ca75@ee376.me",
                                                             "f3c747d6-a3ae-462b-9a3d-14865257dde8",
                                                             "2ab93f7f4ac933ce8ac763c9e4ddcf32");
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotNull(parentaccount3);
            assertNotSame(parentaccount2, parentaccount1);
            assertNotSame(parentaccount3, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount1, parentaccount2);
            assertEquals(parentaccount1, parentaccount1);
            assertFalse(parentaccount1.equals(null));
            assertNotEquals(parentaccount3, parentaccount1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
