// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.security.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeveloperCertificate.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeveloperCertificate {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("ace53819-a5a2-44f1-a13d-3710db41dab6",
                                                                                  "54bb4438-4eed-49c2-bf18-66ac88537010",
                                                                                  new Date(1558086963168L),
                                                                                  "70d1dec2-e4df-4976-9f38-78a114dd0eaa",
                                                                                  "fa736518-99f0-4bcb-9267-79e106219f8c",
                                                                                  "47117560-0184-40be-b05b-0a810dff28dc",
                                                                                  "9819b120-b8a1-4927-9d27-7e9b769ae0a4",
                                                                                  "e4868122-229d-4dbc-851b-18ab9454c21a");
            DeveloperCertificate developercertificate2 = developercertificate1.clone();
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("e95b0feb-6c77-445f-aa13-4e90b549006d",
                                                                                  "4bdfd7eb-fd82-4a98-8d2d-8d413f498922",
                                                                                  new Date(1558086960104L),
                                                                                  "ca8a88c1-17cc-464e-be39-92759a38ad04",
                                                                                  "cf174cf0-d906-4e4e-8eda-cb62dff29480",
                                                                                  "026ebc5a-0231-446f-ba69-355f60009556",
                                                                                  "60b57393-a2e1-4151-afd1-edaf4bb56962",
                                                                                  "299afe84-344e-4668-addf-8c5cd81ff5e6");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("e95b0feb-6c77-445f-aa13-4e90b549006d",
                                                                                  "4bdfd7eb-fd82-4a98-8d2d-8d413f498922",
                                                                                  new Date(1558086960104L),
                                                                                  "ca8a88c1-17cc-464e-be39-92759a38ad04",
                                                                                  "cf174cf0-d906-4e4e-8eda-cb62dff29480",
                                                                                  "026ebc5a-0231-446f-ba69-355f60009556",
                                                                                  "60b57393-a2e1-4151-afd1-edaf4bb56962",
                                                                                  "299afe84-344e-4668-addf-8c5cd81ff5e6");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2.hashCode(), developercertificate1.hashCode());
            int hashCode = developercertificate1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, developercertificate1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeveloperCertificate developercertificate = new DeveloperCertificate("a5ad01ff-d52e-4059-93af-0a79b10b60f6",
                                                                             "6ef487de-b2ce-497f-82c3-3e1561d0ca1c",
                                                                             new Date(1558086966868L),
                                                                             "e4d8e705-24dd-49f6-b580-630e91170097",
                                                                             "70edb69c-251b-4a36-a384-73dd2c87139f",
                                                                             "60c3b0a3-2583-438e-a340-6060e891b2da",
                                                                             "b7795ced-6170-402d-b1e1-827e5e9fe074",
                                                                             "c4f1eb4e-016f-4dd2-b2e6-117edd3f7782");
        assertTrue(developercertificate.isValid());
        DeveloperCertificate developercertificateInvalid = new DeveloperCertificate("8d20174a-d6f5-471f-9f16-74f3cbffd8ac",
                                                                                    "968c95f7-d981-47d4-af0a-baa2b244ec60",
                                                                                    new Date(1558086965140L),
                                                                                    "9553000d-cb1c-4e1f-b711-3ef6861f9df1",
                                                                                    "3227cbc5-6995-462c-80c9-cae5703895a5",
                                                                                    "f1571e12-9f9b-49f8-bffb-4b62ee078452",
                                                                                    null,
                                                                                    "9d5cc240-5126-44ef-9765-b92a3092f74a");
        assertFalse(developercertificateInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("ac3bca16-8cae-4207-b675-cde74da98aad",
                                                                                  "486366b2-b335-4348-bd6f-a28e488ee69b",
                                                                                  new Date(1558086968312L),
                                                                                  "f3ba4d17-ad7c-44e7-a40a-031a4ed62321",
                                                                                  "9a1334cd-393e-4ac9-b981-46a72ec15efb",
                                                                                  "1034038f-3a55-4a6e-a324-62008842cfdf",
                                                                                  "1aae6665-78e3-4361-8608-708b27ee3efd",
                                                                                  "d9897a8f-7a0d-4eb0-a64f-6e8e9d3afaac");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("ac3bca16-8cae-4207-b675-cde74da98aad",
                                                                                  "486366b2-b335-4348-bd6f-a28e488ee69b",
                                                                                  new Date(1558086968312L),
                                                                                  "f3ba4d17-ad7c-44e7-a40a-031a4ed62321",
                                                                                  "9a1334cd-393e-4ac9-b981-46a72ec15efb",
                                                                                  "1034038f-3a55-4a6e-a324-62008842cfdf",
                                                                                  "1aae6665-78e3-4361-8608-708b27ee3efd",
                                                                                  "d9897a8f-7a0d-4eb0-a64f-6e8e9d3afaac");
            DeveloperCertificate developercertificate3 = new DeveloperCertificate("5dbfb894-401e-49e6-8fc2-8f7e6a84454a",
                                                                                  "e5559838-7555-46aa-ab5e-286dfeb8f4e1",
                                                                                  new Date(1558086966384L),
                                                                                  "9f42fdc4-f0ef-48ae-997b-6b746d9da255",
                                                                                  "a86e7bb6-475e-430d-a922-057796c161c5",
                                                                                  "ebc81668-70ce-44dd-8164-225c62cf5219",
                                                                                  "d33b28c1-3108-4e91-b761-f356d86394ca",
                                                                                  "12f1955a-9a7d-4bcf-a9e5-68c3bc7ad333");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotNull(developercertificate3);
            assertNotSame(developercertificate2, developercertificate1);
            assertNotSame(developercertificate3, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate1, developercertificate2);
            assertEquals(developercertificate1, developercertificate1);
            assertFalse(developercertificate1.equals(null));
            assertNotEquals(developercertificate3, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
