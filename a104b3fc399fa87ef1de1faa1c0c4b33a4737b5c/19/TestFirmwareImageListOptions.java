// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.deviceupdate.model;

import static org.junit.Assert.*;

import com.arm.mbed.cloud.sdk.common.Order;
import com.arm.mbed.cloud.sdk.common.listing.ListOptionsEncoder;
import com.arm.mbed.cloud.sdk.common.listing.filtering.FilterOperator;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import org.junit.Test;

/**
 * Unit tests for Model FirmwareImageListOptions.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestFirmwareImageListOptions {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            FirmwareImageListOptions firmwareimagelistoptions1 = new FirmwareImageListOptions(Integer.valueOf(115),
                                                                                              Long.valueOf(-38),
                                                                                              Order.getDefault(),
                                                                                              "9cc6c184-7946-4c18-9115-c4cc49dbf1cf",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions2 = firmwareimagelistoptions1.clone();
            assertNotNull(firmwareimagelistoptions1);
            assertNotNull(firmwareimagelistoptions2);
            assertNotSame(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the filters method.
     */
    @SuppressWarnings({ "boxing", "resource" })
    @Test
    public void testFilters() {
        try {
            FirmwareImageListOptions option = new FirmwareImageListOptions().inUpdatedAts(Arrays.asList(new Date(1558086968112L),
                                                                                                        new Date(1558086965750L),
                                                                                                        new Date(1558086963493L),
                                                                                                        new Date(1558086965720L),
                                                                                                        new Date(1558086962672L),
                                                                                                        new Date(1558086968361L),
                                                                                                        new Date(1558086968645L),
                                                                                                        new Date(1558086960467L),
                                                                                                        new Date(1558086961057L)))
                                                                            .notInUpdatedAts(Arrays.asList(new Date(1558086964219L)))
                                                                            .lessThanUpdatedAt(new Date(1558086968575L))
                                                                            .greaterThanUpdatedAt(new Date(1558086964065L))
                                                                            .equalToName("c368eb13-c0e4-41d1-81cb-421174b33380")
                                                                            .notEqualToName("5ff7a92f-cf56-4ea2-ade1-575d0a7696f8")
                                                                            .inNames(Arrays.asList("69437cc2-d212-4f2d-bf64-424170b6ff15",
                                                                                                   "87b463b4-abc3-41ef-b72e-15bc65482bf7",
                                                                                                   "3e40edba-e8f8-42c0-b539-5cc5cff648cf",
                                                                                                   "c360e844-3a93-4dc0-881b-99cac0322646",
                                                                                                   "c8bc32bc-ca78-4800-a930-bb67baece0d5",
                                                                                                   "800d5072-b92c-479f-aadd-e24dc48da797"))
                                                                            .notInNames(Arrays.asList("c62d2c2c-dfcd-4b13-81fe-bde44d83474c",
                                                                                                      "5c5f081c-d891-4ea6-9681-d7af0a5c8ea9",
                                                                                                      "9429a958-8c65-4446-a03c-fd1b03db517c",
                                                                                                      "dddee942-a287-45e5-824b-cc2854704fdc",
                                                                                                      "78125993-067c-4cf6-a03d-20b83b3ce7ef"))
                                                                            .equalToDescription("f37933f5-8b1e-45dd-871a-3c5a6eaaab8d")
                                                                            .notEqualToDescription("0def5f0d-53b7-4517-b06f-f7412d57c0cb")
                                                                            .inDescriptions(Arrays.asList("ecf00998-2e00-4b10-a56f-bf7deb1dacea",
                                                                                                          "be62f467-01f5-49e6-8a1b-db44833e7fab",
                                                                                                          "a348b205-772e-47f1-8a3a-0dec26faa655",
                                                                                                          "c070cd44-b7c5-4b99-96f3-3a2294ad5c68",
                                                                                                          "4fc0ce34-12ea-44e1-975e-5e7ab9d48df3"))
                                                                            .notInDescriptions(Arrays.asList("17441c79-30d1-4290-9522-50d96df133f0"))
                                                                            .inCreatedAts(Arrays.asList(new Date(1558086960797L),
                                                                                                        new Date(1558086963555L),
                                                                                                        new Date(1558086968418L),
                                                                                                        new Date(1558086966310L)))
                                                                            .notInCreatedAts(Arrays.asList(new Date(1558086960634L),
                                                                                                           new Date(1558086965278L)))
                                                                            .lessThanCreatedAt(new Date(1558086962945L))
                                                                            .greaterThanCreatedAt(new Date(1558086962209L))
                                                                            .equalToDatafileUrl("1b9ed816-4f63-4b9a-a3fb-381188ed86c3")
                                                                            .notEqualToDatafileUrl("867accdb-b9da-4842-9bf8-092a05a6bb57")
                                                                            .inDatafileUrls(Arrays.asList("e7a5fdaf-5b9e-4a05-94c0-e784425d4528",
                                                                                                          "91d00bf0-6998-441c-9054-81e9896b8b8e",
                                                                                                          "cb6bbce9-1618-4c57-bb8b-c72452d6e191",
                                                                                                          "98f903b6-0ce2-4e14-8c3a-177021ab8962",
                                                                                                          "5109dcbd-bc10-4756-b4eb-83849d673451",
                                                                                                          "4ec6aea9-ca55-403e-a753-c1be92877038",
                                                                                                          "6c153900-d747-419d-b496-f227bfa8403b"))
                                                                            .notInDatafileUrls(Arrays.asList("6177e5ea-817a-45c1-a111-299d06a19ddb",
                                                                                                             "42b47b38-efa5-495a-b218-b89a711545b1",
                                                                                                             "0f2da805-1546-49f7-b4b9-efa5dd9541a9",
                                                                                                             "cff2bcf2-b346-4d82-9d6d-894a644e50a4"))
                                                                            .equalToDatafileSize(Long.valueOf(-79))
                                                                            .notEqualToDatafileSize(Long.valueOf(-116))
                                                                            .inDatafileSizes(Arrays.asList(Long.valueOf(-108),
                                                                                                           Long.valueOf(-24),
                                                                                                           Long.valueOf(-39),
                                                                                                           Long.valueOf(-73),
                                                                                                           Long.valueOf(110)))
                                                                            .notInDatafileSizes(Arrays.asList(Long.valueOf(-73),
                                                                                                              Long.valueOf(63),
                                                                                                              Long.valueOf(109),
                                                                                                              Long.valueOf(6),
                                                                                                              Long.valueOf(72),
                                                                                                              Long.valueOf(-120),
                                                                                                              Long.valueOf(4),
                                                                                                              Long.valueOf(60),
                                                                                                              Long.valueOf(32)))
                                                                            .equalToDatafileChecksum("ccf27846-80d2-46e6-9e24-31c126f438c0")
                                                                            .notEqualToDatafileChecksum("1c2f01d4-9cd5-495d-b49d-ddbd7950ecf5")
                                                                            .inDatafileChecksums(Arrays.asList("0cb0a77c-e27d-4203-b100-7f0c7d3556e4",
                                                                                                               "2238e1df-7fe3-485b-8472-b20de7614803"))
                                                                            .notInDatafileChecksums(Arrays.asList("79f302c3-f8f7-4dbc-bede-52991df5bb51",
                                                                                                                  "5ac67cd6-9ee3-4ca9-b2f0-0c0b3c42b685",
                                                                                                                  "15a7848a-a92b-4eeb-8a7d-31044da5eac6",
                                                                                                                  "b41ec2e1-616b-450e-ae1d-f6799611d689",
                                                                                                                  "dd0c207b-008e-482a-93c7-e4c2b31b0a0d",
                                                                                                                  "ec27fd15-0b58-423b-9fc3-b19600079a10",
                                                                                                                  "983ba58b-eaf0-4653-acaa-71fb6cc6c9fd",
                                                                                                                  "a54000e3-bbf9-4e23-b3f4-fb1f520656b6",
                                                                                                                  "f5395103-e88e-4dba-98f2-020b8c5491dc"))
                                                                            .equalToId("af7a5a78-6502-4a97-be39-a0677ba548ec")
                                                                            .notEqualToId("33ab7612-35d4-477b-8e0f-55d70a72c8e1")
                                                                            .inIds(Arrays.asList("4b3336ba-b25d-4545-9f89-47b4618a1622",
                                                                                                 "4a163b69-422b-4157-8db4-413be68f4e79"))
                                                                            .notInIds(Arrays.asList("b4f11b27-57d5-4d24-b74b-5f1476b9be94",
                                                                                                    "a0ebd3a2-871b-4534-9bd1-ee748f784f8d",
                                                                                                    "86e32a01-87f6-4caf-a334-8ff3dfd17a9d",
                                                                                                    "349e43ff-6e2b-45da-8ec7-b59caaa22a8f",
                                                                                                    "7574be1b-957a-478c-a71c-9fcbc4633d87"));
            assertTrue(option.hasFilters());
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1558086968112L), new Date(1558086965750L), new Date(1558086963493L),
                                       new Date(1558086965720L), new Date(1558086962672L), new Date(1558086968361L),
                                       new Date(1558086968645L), new Date(1558086960467L), new Date(1558086961057L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1558086964219L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.LESS_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1558086968575L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1558086964065L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("c368eb13-c0e4-41d1-81cb-421174b33380",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("5ff7a92f-cf56-4ea2-ade1-575d0a7696f8",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("69437cc2-d212-4f2d-bf64-424170b6ff15", "87b463b4-abc3-41ef-b72e-15bc65482bf7",
                                       "3e40edba-e8f8-42c0-b539-5cc5cff648cf", "c360e844-3a93-4dc0-881b-99cac0322646",
                                       "c8bc32bc-ca78-4800-a930-bb67baece0d5", "800d5072-b92c-479f-aadd-e24dc48da797"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("c62d2c2c-dfcd-4b13-81fe-bde44d83474c", "5c5f081c-d891-4ea6-9681-d7af0a5c8ea9",
                                       "9429a958-8c65-4446-a03c-fd1b03db517c", "dddee942-a287-45e5-824b-cc2854704fdc",
                                       "78125993-067c-4cf6-a03d-20b83b3ce7ef"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("f37933f5-8b1e-45dd-871a-3c5a6eaaab8d",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("0def5f0d-53b7-4517-b06f-f7412d57c0cb",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("ecf00998-2e00-4b10-a56f-bf7deb1dacea", "be62f467-01f5-49e6-8a1b-db44833e7fab",
                                       "a348b205-772e-47f1-8a3a-0dec26faa655", "c070cd44-b7c5-4b99-96f3-3a2294ad5c68",
                                       "4fc0ce34-12ea-44e1-975e-5e7ab9d48df3"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("17441c79-30d1-4290-9522-50d96df133f0"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1558086960797L), new Date(1558086963555L), new Date(1558086968418L),
                                       new Date(1558086966310L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1558086960634L), new Date(1558086965278L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.LESS_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1558086962945L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1558086962209L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("1b9ed816-4f63-4b9a-a3fb-381188ed86c3",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("867accdb-b9da-4842-9bf8-092a05a6bb57",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("e7a5fdaf-5b9e-4a05-94c0-e784425d4528", "91d00bf0-6998-441c-9054-81e9896b8b8e",
                                       "cb6bbce9-1618-4c57-bb8b-c72452d6e191", "98f903b6-0ce2-4e14-8c3a-177021ab8962",
                                       "5109dcbd-bc10-4756-b4eb-83849d673451", "4ec6aea9-ca55-403e-a753-c1be92877038",
                                       "6c153900-d747-419d-b496-f227bfa8403b"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("6177e5ea-817a-45c1-a111-299d06a19ddb", "42b47b38-efa5-495a-b218-b89a711545b1",
                                       "0f2da805-1546-49f7-b4b9-efa5dd9541a9", "cff2bcf2-b346-4d82-9d6d-894a644e50a4"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(-79),
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    Long.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(-116),
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                       Long.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(-108), Long.valueOf(-24), Long.valueOf(-39), Long.valueOf(-73),
                                       Long.valueOf(110)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(-73), Long.valueOf(63), Long.valueOf(109), Long.valueOf(6),
                                       Long.valueOf(72), Long.valueOf(-120), Long.valueOf(4), Long.valueOf(60),
                                       Long.valueOf(32)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                        FilterOperator.EQUAL));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals("ccf27846-80d2-46e6-9e24-31c126f438c0",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals("1c2f01d4-9cd5-495d-b49d-ddbd7950ecf5",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM, FilterOperator.IN));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals(Arrays.asList("0cb0a77c-e27d-4203-b100-7f0c7d3556e4", "2238e1df-7fe3-485b-8472-b20de7614803"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                        FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals(Arrays.asList("79f302c3-f8f7-4dbc-bede-52991df5bb51", "5ac67cd6-9ee3-4ca9-b2f0-0c0b3c42b685",
                                       "15a7848a-a92b-4eeb-8a7d-31044da5eac6", "b41ec2e1-616b-450e-ae1d-f6799611d689",
                                       "dd0c207b-008e-482a-93c7-e4c2b31b0a0d", "ec27fd15-0b58-423b-9fc3-b19600079a10",
                                       "983ba58b-eaf0-4653-acaa-71fb6cc6c9fd", "a54000e3-bbf9-4e23-b3f4-fb1f520656b6",
                                       "f5395103-e88e-4dba-98f2-020b8c5491dc"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("af7a5a78-6502-4a97-be39-a0677ba548ec",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("33ab7612-35d4-477b-8e0f-55d70a72c8e1",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("4b3336ba-b25d-4545-9f89-47b4618a1622", "4a163b69-422b-4157-8db4-413be68f4e79"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, List.class,
                                                                 option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("b4f11b27-57d5-4d24-b74b-5f1476b9be94", "a0ebd3a2-871b-4534-9bd1-ee748f784f8d",
                                       "86e32a01-87f6-4caf-a334-8ff3dfd17a9d", "349e43ff-6e2b-45da-8ec7-b59caaa22a8f",
                                       "7574be1b-957a-478c-a71c-9fcbc4633d87"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID,
                                                                    List.class, option));
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            FirmwareImageListOptions firmwareimagelistoptions1 = new FirmwareImageListOptions(Integer.valueOf(-61),
                                                                                              Long.valueOf(-40),
                                                                                              Order.getDefault(),
                                                                                              "44cb23ba-1682-4760-8543-044830c80563",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions2 = new FirmwareImageListOptions(Integer.valueOf(-61),
                                                                                              Long.valueOf(-40),
                                                                                              Order.getDefault(),
                                                                                              "44cb23ba-1682-4760-8543-044830c80563",
                                                                                              null, null);
            assertNotNull(firmwareimagelistoptions1);
            assertNotNull(firmwareimagelistoptions2);
            assertNotSame(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2.hashCode(), firmwareimagelistoptions1.hashCode());
            int hashCode = firmwareimagelistoptions1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, firmwareimagelistoptions1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            FirmwareImageListOptions firmwareimagelistoptions1 = new FirmwareImageListOptions(Integer.valueOf(57),
                                                                                              Long.valueOf(110),
                                                                                              Order.getDefault(),
                                                                                              "0456e35b-143d-4fbd-8c49-2291956a6e93",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions2 = new FirmwareImageListOptions(Integer.valueOf(57),
                                                                                              Long.valueOf(110),
                                                                                              Order.getDefault(),
                                                                                              "0456e35b-143d-4fbd-8c49-2291956a6e93",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions3 = new FirmwareImageListOptions(Integer.valueOf(105),
                                                                                              Long.valueOf(-35),
                                                                                              Order.getDefault(),
                                                                                              "81ef618d-e4e6-42bc-8e84-67b6c0e56419",
                                                                                              null, null);
            assertNotNull(firmwareimagelistoptions1);
            assertNotNull(firmwareimagelistoptions2);
            assertNotNull(firmwareimagelistoptions3);
            assertNotSame(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertNotSame(firmwareimagelistoptions3, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions1, firmwareimagelistoptions2);
            assertEquals(firmwareimagelistoptions1, firmwareimagelistoptions1);
            assertFalse(firmwareimagelistoptions1.equals(null));
            assertNotEquals(firmwareimagelistoptions3, firmwareimagelistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
