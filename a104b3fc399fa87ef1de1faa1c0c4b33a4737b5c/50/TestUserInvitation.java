// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model UserInvitation.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestUserInvitation {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("2ab93f7f4ac933ce8ac763c9e4ddcf32",
                                                                new Date(1558086961709L), "4e565.5c114@ed57b.fr",
                                                                new Date(1558086961411L),
                                                                "2ab93f7f4ac933ce8ac763c9e4ddcf32", null,
                                                                new Date(1558086960358L),
                                                                "2ab93f7f4ac933ce8ac763c9e4ddcf32");
            UserInvitation userinvitation2 = userinvitation1.clone();
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotSame(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("2ab93f7f4ac933ce8ac763c9e4ddcf32",
                                                                new Date(1558086964520L), "9c6df.5fb23@c4460.me",
                                                                new Date(1558086962704L),
                                                                "2ab93f7f4ac933ce8ac763c9e4ddcf32", null,
                                                                new Date(1558086959824L),
                                                                "2ab93f7f4ac933ce8ac763c9e4ddcf32");
            UserInvitation userinvitation2 = new UserInvitation("2ab93f7f4ac933ce8ac763c9e4ddcf32",
                                                                new Date(1558086964520L), "9c6df.5fb23@c4460.me",
                                                                new Date(1558086962704L),
                                                                "2ab93f7f4ac933ce8ac763c9e4ddcf32", null,
                                                                new Date(1558086959824L),
                                                                "2ab93f7f4ac933ce8ac763c9e4ddcf32");
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotSame(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation2.hashCode(), userinvitation1.hashCode());
            int hashCode = userinvitation1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, userinvitation1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        UserInvitation userinvitation = new UserInvitation("2ab93f7f4ac933ce8ac763c9e4ddcf32", new Date(1558086964657L),
                                                           "5ece0.d98c5@12fec.fr", new Date(1558086962311L),
                                                           "2ab93f7f4ac933ce8ac763c9e4ddcf32", null,
                                                           new Date(1558086964546L),
                                                           "2ab93f7f4ac933ce8ac763c9e4ddcf32");
        assertTrue(userinvitation.isValid());
        UserInvitation userinvitationInvalid = new UserInvitation("5)@55\f5Zå ’I5Bç³Ž%ç›˜Cëµ•5Në­¹T\u001cïŒ²\u0018å¸†é€§5â?Žï‘¢Aê†…`æ®¿K#[555ç²›55R55á¹—è›‘å´–,5?VYæ´„`?\\\\På­¹\u0005ïµŠ\u000e5",
                                                                  new Date(1558086961321L), null,
                                                                  new Date(1558086962835L),
                                                                  "5)@55\f5Zå ’I5Bç³Ž%ç›˜Cëµ•5Në­¹T\u001cïŒ²\u0018å¸†é€§5â?Žï‘¢Aê†…`æ®¿K#[555ç²›55R55á¹—è›‘å´–,5?VYæ´„`?\\\\På­¹\u0005ïµŠ\u000e5",
                                                                  null, new Date(1558086967243L),
                                                                  "5)@55\f5Zå ’I5Bç³Ž%ç›˜Cëµ•5Në­¹T\u001cïŒ²\u0018å¸†é€§5â?Žï‘¢Aê†…`æ®¿K#[555ç²›55R55á¹—è›‘å´–,5?VYæ´„`?\\\\På­¹\u0005ïµŠ\u000e5");
        assertFalse(userinvitationInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("2ab93f7f4ac933ce8ac763c9e4ddcf32",
                                                                new Date(1558086968443L), "e385f.27fe3@00538.me",
                                                                new Date(1558086963530L),
                                                                "2ab93f7f4ac933ce8ac763c9e4ddcf32", null,
                                                                new Date(1558086968198L),
                                                                "2ab93f7f4ac933ce8ac763c9e4ddcf32");
            UserInvitation userinvitation2 = new UserInvitation("2ab93f7f4ac933ce8ac763c9e4ddcf32",
                                                                new Date(1558086968443L), "e385f.27fe3@00538.me",
                                                                new Date(1558086963530L),
                                                                "2ab93f7f4ac933ce8ac763c9e4ddcf32", null,
                                                                new Date(1558086968198L),
                                                                "2ab93f7f4ac933ce8ac763c9e4ddcf32");
            UserInvitation userinvitation3 = new UserInvitation("2ab93f7f4ac933ce8ac763c9e4ddcf32",
                                                                new Date(1558086962366L), "377e9.be88a@87a56.me",
                                                                new Date(1558086967206L),
                                                                "2ab93f7f4ac933ce8ac763c9e4ddcf32", null,
                                                                new Date(1558086969022L),
                                                                "2ab93f7f4ac933ce8ac763c9e4ddcf32");
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotNull(userinvitation3);
            assertNotSame(userinvitation2, userinvitation1);
            assertNotSame(userinvitation3, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation1, userinvitation2);
            assertEquals(userinvitation1, userinvitation1);
            assertFalse(userinvitation1.equals(null));
            assertNotEquals(userinvitation3, userinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
