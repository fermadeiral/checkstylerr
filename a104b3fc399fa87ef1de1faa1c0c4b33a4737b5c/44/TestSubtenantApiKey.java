// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantApiKey.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantApiKey {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("2ab93f7f4ac933ce8ac763c9e4ddcf32",
                                                                   new Date(1558086965051L), -127,
                                                                   "2ab93f7f4ac933ce8ac763c9e4ddcf32",
                                                                   "fcbb7bc2-9230-4a48-b7a5-83b5582e8869", -23,
                                                                   "3c4fbcf4-b523-4d12-90bd-f06c426ea7a6",
                                                                   "2ab93f7f4ac933ce8ac763c9e4ddcf32",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1558086959948L));
            SubtenantApiKey subtenantapikey2 = subtenantapikey1.clone();
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("2ab93f7f4ac933ce8ac763c9e4ddcf32",
                                                                   new Date(1558086959378L), 36,
                                                                   "2ab93f7f4ac933ce8ac763c9e4ddcf32",
                                                                   "042e6117-e158-499f-872c-777e82d0c87c", -122,
                                                                   "2503a39b-39c1-4c05-982a-6ca9bec038ca",
                                                                   "2ab93f7f4ac933ce8ac763c9e4ddcf32",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1558086961290L));
            SubtenantApiKey subtenantapikey2 = new SubtenantApiKey("2ab93f7f4ac933ce8ac763c9e4ddcf32",
                                                                   new Date(1558086959378L), 36,
                                                                   "2ab93f7f4ac933ce8ac763c9e4ddcf32",
                                                                   "042e6117-e158-499f-872c-777e82d0c87c", -122,
                                                                   "2503a39b-39c1-4c05-982a-6ca9bec038ca",
                                                                   "2ab93f7f4ac933ce8ac763c9e4ddcf32",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1558086961290L));
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2.hashCode(), subtenantapikey1.hashCode());
            int hashCode = subtenantapikey1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantapikey1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantApiKey subtenantapikey = new SubtenantApiKey("2ab93f7f4ac933ce8ac763c9e4ddcf32",
                                                              new Date(1558086966338L), -29,
                                                              "2ab93f7f4ac933ce8ac763c9e4ddcf32",
                                                              "01085bf3-aa93-4a21-9786-fb8fa0723daf", 14,
                                                              "b84daaa8-4881-4a67-909f-874c915d92de",
                                                              "2ab93f7f4ac933ce8ac763c9e4ddcf32",
                                                              SubtenantApiKeyStatus.getDefault(),
                                                              new Date(1558086961654L));
        assertTrue(subtenantapikey.isValid());
        SubtenantApiKey subtenantapikeyInvalid = new SubtenantApiKey(null, new Date(1558086968779L), -119,
                                                                     "5)@55\f5Zå ’I5Bç³Ž%ç›˜Cëµ•5Në­¹T\u001cïŒ²\u0018å¸†é€§5â?Žï‘¢Aê†…`æ®¿K#[555ç²›55R55á¹—è›‘å´–,5?VYæ´„`?\\\\På­¹\u0005ïµŠ\u000e5",
                                                                     "60f67d40-e1ab-4bb8-8d48-dc8d105a6bbb", 93, null,
                                                                     "5)@55\f5Zå ’I5Bç³Ž%ç›˜Cëµ•5Në­¹T\u001cïŒ²\u0018å¸†é€§5â?Žï‘¢Aê†…`æ®¿K#[555ç²›55R55á¹—è›‘å´–,5?VYæ´„`?\\\\På­¹\u0005ïµŠ\u000e5",
                                                                     SubtenantApiKeyStatus.getDefault(),
                                                                     new Date(1558086960168L));
        assertFalse(subtenantapikeyInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("2ab93f7f4ac933ce8ac763c9e4ddcf32",
                                                                   new Date(1558086968451L), -12,
                                                                   "2ab93f7f4ac933ce8ac763c9e4ddcf32",
                                                                   "c59b1bef-f717-4819-8f5b-17229c131d43", 21,
                                                                   "d7db99fa-e3a1-48d3-8faa-25a1358bbd9e",
                                                                   "2ab93f7f4ac933ce8ac763c9e4ddcf32",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1558086966027L));
            SubtenantApiKey subtenantapikey2 = new SubtenantApiKey("2ab93f7f4ac933ce8ac763c9e4ddcf32",
                                                                   new Date(1558086968451L), -12,
                                                                   "2ab93f7f4ac933ce8ac763c9e4ddcf32",
                                                                   "c59b1bef-f717-4819-8f5b-17229c131d43", 21,
                                                                   "d7db99fa-e3a1-48d3-8faa-25a1358bbd9e",
                                                                   "2ab93f7f4ac933ce8ac763c9e4ddcf32",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1558086966027L));
            SubtenantApiKey subtenantapikey3 = new SubtenantApiKey("2ab93f7f4ac933ce8ac763c9e4ddcf32",
                                                                   new Date(1558086966722L), 53,
                                                                   "2ab93f7f4ac933ce8ac763c9e4ddcf32",
                                                                   "dda7a80c-6e59-4c7e-9289-cf20d12fe80d", -46,
                                                                   "59cac737-ae79-4e66-9018-78f1aa2112cc",
                                                                   "2ab93f7f4ac933ce8ac763c9e4ddcf32",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1558086959703L));
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotNull(subtenantapikey3);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertNotSame(subtenantapikey3, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey1, subtenantapikey2);
            assertEquals(subtenantapikey1, subtenantapikey1);
            assertFalse(subtenantapikey1.equals(null));
            assertNotEquals(subtenantapikey3, subtenantapikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
