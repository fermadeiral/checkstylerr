// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEnrollmentDenial.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEnrollmentDenial {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("2ab93f7f4ac933ce8ac763c9e4ddcf32",
                                                                                        new Date(1558086959516L),
                                                                                        "7c150448-64e8-4a00-b32a-88dbc23774fb",
                                                                                        "2ab93f7f4ac933ce8ac763c9e4ddcf32",
                                                                                        "2ab93f7f4ac933ce8ac763c9e4ddcf32");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = deviceenrollmentdenial1.clone();
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("2ab93f7f4ac933ce8ac763c9e4ddcf32",
                                                                                        new Date(1558086969011L),
                                                                                        "81098639-7665-47c1-8360-c31ef9a19666",
                                                                                        "2ab93f7f4ac933ce8ac763c9e4ddcf32",
                                                                                        "2ab93f7f4ac933ce8ac763c9e4ddcf32");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = new DeviceEnrollmentDenial("2ab93f7f4ac933ce8ac763c9e4ddcf32",
                                                                                        new Date(1558086969011L),
                                                                                        "81098639-7665-47c1-8360-c31ef9a19666",
                                                                                        "2ab93f7f4ac933ce8ac763c9e4ddcf32",
                                                                                        "2ab93f7f4ac933ce8ac763c9e4ddcf32");
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2.hashCode(), deviceenrollmentdenial1.hashCode());
            int hashCode = deviceenrollmentdenial1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceenrollmentdenial1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEnrollmentDenial deviceenrollmentdenial = new DeviceEnrollmentDenial("2ab93f7f4ac933ce8ac763c9e4ddcf32",
                                                                                   new Date(1558086962987L),
                                                                                   "bfa51676-c134-4fa0-9c2a-5420c11f3b0b",
                                                                                   "2ab93f7f4ac933ce8ac763c9e4ddcf32",
                                                                                   "2ab93f7f4ac933ce8ac763c9e4ddcf32");
        assertTrue(deviceenrollmentdenial.isValid());
        DeviceEnrollmentDenial deviceenrollmentdenialInvalid = new DeviceEnrollmentDenial("5)@55\f5Zå ’I5Bç³Ž%ç›˜Cëµ•5Në­¹T\u001cïŒ²\u0018å¸†é€§5â?Žï‘¢Aê†…`æ®¿K#[555ç²›55R55á¹—è›‘å´–,5?VYæ´„`?\\\\På­¹\u0005ïµŠ\u000e5",
                                                                                          new Date(1558086965417L),
                                                                                          "6e17119b-7318-40a2-9bff-2983e0855fa5",
                                                                                          "5)@55\f5Zå ’I5Bç³Ž%ç›˜Cëµ•5Në­¹T\u001cïŒ²\u0018å¸†é€§5â?Žï‘¢Aê†…`æ®¿K#[555ç²›55R55á¹—è›‘å´–,5?VYæ´„`?\\\\På­¹\u0005ïµŠ\u000e5",
                                                                                          "5)@55\f5Zå ’I5Bç³Ž%ç›˜Cëµ•5Në­¹T\u001cïŒ²\u0018å¸†é€§5â?Žï‘¢Aê†…`æ®¿K#[555ç²›55R55á¹—è›‘å´–,5?VYæ´„`?\\\\På­¹\u0005ïµŠ\u000e5");
        assertFalse(deviceenrollmentdenialInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("2ab93f7f4ac933ce8ac763c9e4ddcf32",
                                                                                        new Date(1558086961011L),
                                                                                        "5b54d548-4d76-4767-9420-551995292ada",
                                                                                        "2ab93f7f4ac933ce8ac763c9e4ddcf32",
                                                                                        "2ab93f7f4ac933ce8ac763c9e4ddcf32");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = new DeviceEnrollmentDenial("2ab93f7f4ac933ce8ac763c9e4ddcf32",
                                                                                        new Date(1558086961011L),
                                                                                        "5b54d548-4d76-4767-9420-551995292ada",
                                                                                        "2ab93f7f4ac933ce8ac763c9e4ddcf32",
                                                                                        "2ab93f7f4ac933ce8ac763c9e4ddcf32");
            DeviceEnrollmentDenial deviceenrollmentdenial3 = new DeviceEnrollmentDenial("2ab93f7f4ac933ce8ac763c9e4ddcf32",
                                                                                        new Date(1558086962449L),
                                                                                        "1aee00d0-0efb-4418-8fd4-905a03996e0c",
                                                                                        "2ab93f7f4ac933ce8ac763c9e4ddcf32",
                                                                                        "2ab93f7f4ac933ce8ac763c9e4ddcf32");
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotNull(deviceenrollmentdenial3);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertNotSame(deviceenrollmentdenial3, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial1, deviceenrollmentdenial2);
            assertEquals(deviceenrollmentdenial1, deviceenrollmentdenial1);
            assertFalse(deviceenrollmentdenial1.equals(null));
            assertNotEquals(deviceenrollmentdenial3, deviceenrollmentdenial1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
