// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.security.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model CertificateIssuer.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestCertificateIssuer {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            CertificateIssuer certificateissuer1 = new CertificateIssuer(new Date(1558086968970L),
                                                                         "413d96ea-23c0-4c00-8201-b7a6ea9e7e4d",
                                                                         "95517b86-b570-4097-abca-b1daf2d2a62d", null,
                                                                         CertificateIssuerType.getDefault(),
                                                                         "855875a6-6784-436a-b64a-cf6687d82b8e");
            CertificateIssuer certificateissuer2 = certificateissuer1.clone();
            assertNotNull(certificateissuer1);
            assertNotNull(certificateissuer2);
            assertNotSame(certificateissuer2, certificateissuer1);
            assertEquals(certificateissuer2, certificateissuer1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            CertificateIssuer certificateissuer1 = new CertificateIssuer(new Date(1558086967555L),
                                                                         "a3ddf69e-c418-405f-b8a2-67798f60213e",
                                                                         "936c70c5-354f-4d91-b53a-54ddbca64e44", null,
                                                                         CertificateIssuerType.getDefault(),
                                                                         "6ea8185f-0efe-4d03-9410-e7c20d7e6fd1");
            CertificateIssuer certificateissuer2 = new CertificateIssuer(new Date(1558086967555L),
                                                                         "a3ddf69e-c418-405f-b8a2-67798f60213e",
                                                                         "936c70c5-354f-4d91-b53a-54ddbca64e44", null,
                                                                         CertificateIssuerType.getDefault(),
                                                                         "6ea8185f-0efe-4d03-9410-e7c20d7e6fd1");
            assertNotNull(certificateissuer1);
            assertNotNull(certificateissuer2);
            assertNotSame(certificateissuer2, certificateissuer1);
            assertEquals(certificateissuer2, certificateissuer1);
            assertEquals(certificateissuer2.hashCode(), certificateissuer1.hashCode());
            int hashCode = certificateissuer1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, certificateissuer1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        CertificateIssuer certificateissuer = new CertificateIssuer(new Date(1558086963310L),
                                                                    "3e3b799e-ee2b-4b54-bcb1-d88b10539f13",
                                                                    "82985365-96b4-4ee9-9e31-045b49c05e63", null,
                                                                    CertificateIssuerType.getDefault(),
                                                                    "f3617cf6-ccc2-4be4-a366-e1ca4dd56d96");
        assertTrue(certificateissuer.isValid());
        CertificateIssuer certificateissuerInvalid = new CertificateIssuer(new Date(1558086962660L),
                                                                           "84ee3add-bd73-479c-b510-b293aed969dca5fe335b-d2c1-4be0-93d1-cd6fa3cde6d6e594b89f-8bde-43cc-962f-f773c87b300e",
                                                                           "007eb4ae-3156-468f-a025-7569c18b9f06", null,
                                                                           CertificateIssuerType.getDefault(), null);
        assertFalse(certificateissuerInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            CertificateIssuer certificateissuer1 = new CertificateIssuer(new Date(1558086964050L),
                                                                         "a34038d8-f421-4f26-96c8-acc41ef9a394",
                                                                         "9fa32527-b4bf-4574-8c98-7daf861bcb9c", null,
                                                                         CertificateIssuerType.getDefault(),
                                                                         "f8a337b1-add3-4a9c-84bb-beb01493370b");
            CertificateIssuer certificateissuer2 = new CertificateIssuer(new Date(1558086964050L),
                                                                         "a34038d8-f421-4f26-96c8-acc41ef9a394",
                                                                         "9fa32527-b4bf-4574-8c98-7daf861bcb9c", null,
                                                                         CertificateIssuerType.getDefault(),
                                                                         "f8a337b1-add3-4a9c-84bb-beb01493370b");
            CertificateIssuer certificateissuer3 = new CertificateIssuer(new Date(1558086965044L),
                                                                         "6c7b3c6d-d31d-47aa-8c1e-431f38ba05d3",
                                                                         "113fa43d-619e-4257-adac-b5f3acb33650", null,
                                                                         CertificateIssuerType.getDefault(),
                                                                         "5aff111e-5f8b-4a7c-a065-bdeaa2c1c411");
            assertNotNull(certificateissuer1);
            assertNotNull(certificateissuer2);
            assertNotNull(certificateissuer3);
            assertNotSame(certificateissuer2, certificateissuer1);
            assertNotSame(certificateissuer3, certificateissuer1);
            assertEquals(certificateissuer2, certificateissuer1);
            assertEquals(certificateissuer2, certificateissuer1);
            assertEquals(certificateissuer1, certificateissuer2);
            assertEquals(certificateissuer1, certificateissuer1);
            assertFalse(certificateissuer1.equals(null));
            assertNotEquals(certificateissuer3, certificateissuer1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
