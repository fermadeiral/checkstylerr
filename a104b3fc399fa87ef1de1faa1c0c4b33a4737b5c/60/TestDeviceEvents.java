// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEvents.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEvents {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1558086962109L), null,
                                                          new Date(1558086963114L),
                                                          "80a86408-64f9-45e9-becd-4a51bc26bb1e",
                                                          "5c22566e-db54-43db-b6e8-2a60b1836200",
                                                          "c076391b-b6be-4331-bae5-5ad5abf0bfd0",
                                                          "dd71c748-c65f-4ce5-b6ef-9fd1061fc73a",
                                                          "00c96f85-4f7d-44ba-8b36-6a4d2fd41be7",
                                                          "69aa8691-efe1-4075-af1e-ae4f9abd7eec", true);
            DeviceEvents deviceevents2 = deviceevents1.clone();
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1558086960242L), null,
                                                          new Date(1558086962908L),
                                                          "357c7a9c-3db2-47ba-9eb5-7bc0df407594",
                                                          "fd5cbe62-4f54-425d-8393-4b8eac73dc52",
                                                          "7b615e2a-ee17-46bb-9d0e-16344863d9e0",
                                                          "daaa418a-b958-4941-af28-3005a596e6f8",
                                                          "01579aad-4a15-4d57-9a37-c3161acf9963",
                                                          "2647e75d-5e8c-4d2f-81c9-a25d13fec1c6", false);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1558086960242L), null,
                                                          new Date(1558086962908L),
                                                          "357c7a9c-3db2-47ba-9eb5-7bc0df407594",
                                                          "fd5cbe62-4f54-425d-8393-4b8eac73dc52",
                                                          "7b615e2a-ee17-46bb-9d0e-16344863d9e0",
                                                          "daaa418a-b958-4941-af28-3005a596e6f8",
                                                          "01579aad-4a15-4d57-9a37-c3161acf9963",
                                                          "2647e75d-5e8c-4d2f-81c9-a25d13fec1c6", false);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2.hashCode(), deviceevents1.hashCode());
            int hashCode = deviceevents1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceevents1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEvents deviceevents = new DeviceEvents(null, new Date(1558086959285L), null, new Date(1558086959881L),
                                                     "6d8eb3ad-50fc-4fe3-b499-637a2587b87d",
                                                     "add1ccb9-2b3b-4811-bd53-67930d086f30",
                                                     "8df137af-2ea9-41d9-aec3-93d6f32d63f4",
                                                     "3c663f17-1a30-4a96-bb56-eb644bfc45b7",
                                                     "1fe167c6-9c19-4cf5-ad78-2a12b4586656",
                                                     "ec7914c5-55a9-4994-b587-4147c25abebc", true);
        assertTrue(deviceevents.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1558086968899L), null,
                                                          new Date(1558086961185L),
                                                          "5585427f-cdb8-4e60-8220-10ade3c6c255",
                                                          "c0a7b62b-46bb-4575-a6db-ef78b3227668",
                                                          "9d054f38-9bdf-49ef-a38a-bed709fbf0e8",
                                                          "f66041be-4327-4346-8cf0-d874f94b447e",
                                                          "19ac7528-6120-4e1c-b782-319dab7a441f",
                                                          "2cfd02e4-4d84-4623-b1c9-e84c0eef9b60", true);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1558086968899L), null,
                                                          new Date(1558086961185L),
                                                          "5585427f-cdb8-4e60-8220-10ade3c6c255",
                                                          "c0a7b62b-46bb-4575-a6db-ef78b3227668",
                                                          "9d054f38-9bdf-49ef-a38a-bed709fbf0e8",
                                                          "f66041be-4327-4346-8cf0-d874f94b447e",
                                                          "19ac7528-6120-4e1c-b782-319dab7a441f",
                                                          "2cfd02e4-4d84-4623-b1c9-e84c0eef9b60", true);
            DeviceEvents deviceevents3 = new DeviceEvents(null, new Date(1558086965996L), null,
                                                          new Date(1558086962781L),
                                                          "65ff1a96-e0b7-4188-90ca-b70ed0c7b95e",
                                                          "ec92885c-663c-45b5-bdcd-168d0ebd4a74",
                                                          "57726cc0-59b3-40bb-843c-41307581c216",
                                                          "33927aa4-ec9e-4312-ab85-8e396cc9bec0",
                                                          "b96f9008-6b06-4c91-881e-61157f490472",
                                                          "48197639-7c95-4b2a-88db-92ac93a2bd3e", true);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotNull(deviceevents3);
            assertNotSame(deviceevents2, deviceevents1);
            assertNotSame(deviceevents3, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents1, deviceevents2);
            assertEquals(deviceevents1, deviceevents1);
            assertFalse(deviceevents1.equals(null));
            assertNotEquals(deviceevents3, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
