// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEnrollment.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEnrollment {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEnrollment deviceenrollment1 = new DeviceEnrollment("c9c9230c-481c-4a6e-a127-df3ef38e7887",
                                                                      new Date(1558086961440L),
                                                                      new Date(1558086963155L),
                                                                      "0GApGpvmjCfJrivVj1046dl5oZB6A02Y",
                                                                      "A-1AvwqVDeDz3:L939IXn35TFW28Kv16u4Yn4V1ufDBw8Q:J5Rc08xy8L39pW4tD33O:Z23bOmW4Dl3LaIWcsk:Sx8oXQprnG",
                                                                      new Date(1558086959257L),
                                                                      "0GApGpvmjCfJrivVj1046dl5oZB6A02Y");
            DeviceEnrollment deviceenrollment2 = deviceenrollment1.clone();
            assertNotNull(deviceenrollment1);
            assertNotNull(deviceenrollment2);
            assertNotSame(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEnrollment deviceenrollment1 = new DeviceEnrollment("5d3db3b1-4d62-46dc-a90e-9cf71b21c58d",
                                                                      new Date(1558086961901L),
                                                                      new Date(1558086965692L),
                                                                      "0GApGpvmjCfJrivVj1046dl5oZB6A02Y",
                                                                      "A-1AvwqVDeDz3:L939IXn35TFW28Kv16u4Yn4V1ufDBw8Q:J5Rc08xy8L39pW4tD33O:Z23bOmW4Dl3LaIWcsk:Sx8oXQprnG",
                                                                      new Date(1558086967010L),
                                                                      "0GApGpvmjCfJrivVj1046dl5oZB6A02Y");
            DeviceEnrollment deviceenrollment2 = new DeviceEnrollment("5d3db3b1-4d62-46dc-a90e-9cf71b21c58d",
                                                                      new Date(1558086961901L),
                                                                      new Date(1558086965692L),
                                                                      "0GApGpvmjCfJrivVj1046dl5oZB6A02Y",
                                                                      "A-1AvwqVDeDz3:L939IXn35TFW28Kv16u4Yn4V1ufDBw8Q:J5Rc08xy8L39pW4tD33O:Z23bOmW4Dl3LaIWcsk:Sx8oXQprnG",
                                                                      new Date(1558086967010L),
                                                                      "0GApGpvmjCfJrivVj1046dl5oZB6A02Y");
            assertNotNull(deviceenrollment1);
            assertNotNull(deviceenrollment2);
            assertNotSame(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2.hashCode(), deviceenrollment1.hashCode());
            int hashCode = deviceenrollment1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceenrollment1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEnrollment deviceenrollment = new DeviceEnrollment("7e7f1ea9-da7f-4455-8e33-b33d2b28a912",
                                                                 new Date(1558086964310L), new Date(1558086968058L),
                                                                 "0GApGpvmjCfJrivVj1046dl5oZB6A02Y",
                                                                 "A-1AvwqVDeDz3:L939IXn35TFW28Kv16u4Yn4V1ufDBw8Q:J5Rc08xy8L39pW4tD33O:Z23bOmW4Dl3LaIWcsk:Sx8oXQprnG",
                                                                 new Date(1558086960935L),
                                                                 "0GApGpvmjCfJrivVj1046dl5oZB6A02Y");
        assertTrue(deviceenrollment.isValid());
        DeviceEnrollment deviceenrollmentInvalid = new DeviceEnrollment("0ec7d1fc-7ec6-42b4-b65c-ae5a0716d392",
                                                                        new Date(1558086966837L),
                                                                        new Date(1558086965012L),
                                                                        "\u0006T뿨Eg?^khgHaFn]W@FkuHWqkk^8hckq\u0019M>3\u000fktQn3;EI铯7L3⽯D7D?3tWOeehn[:",
                                                                        null, new Date(1558086960437L),
                                                                        "\u0006T뿨Eg?^khgHaFn]W@FkuHWqkk^8hckq\u0019M>3\u000fktQn3;EI铯7L3⽯D7D?3tWOeehn[:");
        assertFalse(deviceenrollmentInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEnrollment deviceenrollment1 = new DeviceEnrollment("981280ab-43db-4ebf-938f-cb78dce81d45",
                                                                      new Date(1558086966386L),
                                                                      new Date(1558086960858L),
                                                                      "0GApGpvmjCfJrivVj1046dl5oZB6A02Y",
                                                                      "A-1AvwqVDeDz3:L939IXn35TFW28Kv16u4Yn4V1ufDBw8Q:J5Rc08xy8L39pW4tD33O:Z23bOmW4Dl3LaIWcsk:Sx8oXQprnG",
                                                                      new Date(1558086966799L),
                                                                      "0GApGpvmjCfJrivVj1046dl5oZB6A02Y");
            DeviceEnrollment deviceenrollment2 = new DeviceEnrollment("981280ab-43db-4ebf-938f-cb78dce81d45",
                                                                      new Date(1558086966386L),
                                                                      new Date(1558086960858L),
                                                                      "0GApGpvmjCfJrivVj1046dl5oZB6A02Y",
                                                                      "A-1AvwqVDeDz3:L939IXn35TFW28Kv16u4Yn4V1ufDBw8Q:J5Rc08xy8L39pW4tD33O:Z23bOmW4Dl3LaIWcsk:Sx8oXQprnG",
                                                                      new Date(1558086966799L),
                                                                      "0GApGpvmjCfJrivVj1046dl5oZB6A02Y");
            DeviceEnrollment deviceenrollment3 = new DeviceEnrollment("a8f9be51-58fa-4489-9431-229fc61a5193",
                                                                      new Date(1558086962899L),
                                                                      new Date(1558086966366L),
                                                                      "0GApGpvmjCfJrivVj1046dl5oZB6A02Y",
                                                                      "A-1AvwqVDeDz3:L939IXn35TFW28Kv16u4Yn4V1ufDBw8Q:J5Rc08xy8L39pW4tD33O:Z23bOmW4Dl3LaIWcsk:Sx8oXQprnG",
                                                                      new Date(1558086964641L),
                                                                      "0GApGpvmjCfJrivVj1046dl5oZB6A02Y");
            assertNotNull(deviceenrollment1);
            assertNotNull(deviceenrollment2);
            assertNotNull(deviceenrollment3);
            assertNotSame(deviceenrollment2, deviceenrollment1);
            assertNotSame(deviceenrollment3, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment1, deviceenrollment2);
            assertEquals(deviceenrollment1, deviceenrollment1);
            assertFalse(deviceenrollment1.equals(null));
            assertNotEquals(deviceenrollment3, deviceenrollment1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
