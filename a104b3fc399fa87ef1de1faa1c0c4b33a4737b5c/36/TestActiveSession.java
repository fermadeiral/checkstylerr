// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model ActiveSession.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestActiveSession {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ActiveSession activesession1 = new ActiveSession("2ab93f7f4ac933ce8ac763c9e4ddcf32",
                                                             "ec33dff5-a46d-4cb0-bff9-87fe3dc42c42",
                                                             new Date(1558086967963L),
                                                             "4da0d39b-e1c2-4ded-b4f2-799b7ff63a4f",
                                                             "c7d88266-ba2b-4fd2-b3cf-ad5af957fd50");
            ActiveSession activesession2 = activesession1.clone();
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotSame(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ActiveSession activesession1 = new ActiveSession("2ab93f7f4ac933ce8ac763c9e4ddcf32",
                                                             "aea731d8-170f-4a99-9123-e84049d1e4c1",
                                                             new Date(1558086964040L),
                                                             "637db0ef-4c99-495c-a00d-eb257fe9ce92",
                                                             "3349450a-4fcf-4460-90d6-b6d79e563662");
            ActiveSession activesession2 = new ActiveSession("2ab93f7f4ac933ce8ac763c9e4ddcf32",
                                                             "aea731d8-170f-4a99-9123-e84049d1e4c1",
                                                             new Date(1558086964040L),
                                                             "637db0ef-4c99-495c-a00d-eb257fe9ce92",
                                                             "3349450a-4fcf-4460-90d6-b6d79e563662");
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotSame(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession2.hashCode(), activesession1.hashCode());
            int hashCode = activesession1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, activesession1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ActiveSession activesession = new ActiveSession("2ab93f7f4ac933ce8ac763c9e4ddcf32",
                                                        "04e923f4-59e6-41f1-960b-f7d10174b0ec",
                                                        new Date(1558086959786L),
                                                        "09dab379-283f-4d5f-9feb-d831e0ee9a87",
                                                        "814f518d-991b-41ca-bb7c-0497a8a463f4");
        assertTrue(activesession.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ActiveSession activesession1 = new ActiveSession("2ab93f7f4ac933ce8ac763c9e4ddcf32",
                                                             "9bc454cc-a3ce-4c49-8b10-f90f3a518dc6",
                                                             new Date(1558086963505L),
                                                             "593974a4-4e4a-47f6-aca3-e8cddeae4754",
                                                             "2da5c973-4085-458e-bf02-240503db8792");
            ActiveSession activesession2 = new ActiveSession("2ab93f7f4ac933ce8ac763c9e4ddcf32",
                                                             "9bc454cc-a3ce-4c49-8b10-f90f3a518dc6",
                                                             new Date(1558086963505L),
                                                             "593974a4-4e4a-47f6-aca3-e8cddeae4754",
                                                             "2da5c973-4085-458e-bf02-240503db8792");
            ActiveSession activesession3 = new ActiveSession("2ab93f7f4ac933ce8ac763c9e4ddcf32",
                                                             "75ab92ad-c1ea-42b3-978b-6785e6d80831",
                                                             new Date(1558086968209L),
                                                             "dcc5eca6-3f6d-4cbd-bccc-c56575e99b43",
                                                             "565a3836-56ce-49db-a617-fde816a7a1f7");
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotNull(activesession3);
            assertNotSame(activesession2, activesession1);
            assertNotSame(activesession3, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession1, activesession2);
            assertEquals(activesession1, activesession1);
            assertFalse(activesession1.equals(null));
            assertNotEquals(activesession3, activesession1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
