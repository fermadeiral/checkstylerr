// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantUser.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantUser {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("2ab93f7f4ac933ce8ac763c9e4ddcf32", null,
                                                             "c6c9db2b-afa3-4bb1-9a7d-e1dad1b2f112",
                                                             new Date(1558086963464L), 16, null, "a9a1d.bdab3@f7338.fr",
                                                             false, "b6b6c2d8-ec23-44b6-ad74-d82dc0a5561b",
                                                             "2ab93f7f4ac933ce8ac763c9e4ddcf32", false, true, false,
                                                             -61, null, null, "a63b89c4-211d-4260-8ad7-f437e97d39f9",
                                                             -32, "2f80d431-91d3-4027-b954-26d7b980e968",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1558086963108L), "4=-a");
            SubtenantUser subtenantuser2 = subtenantuser1.clone();
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("2ab93f7f4ac933ce8ac763c9e4ddcf32", null,
                                                             "f1fe58e3-ad2e-4570-b441-af035f7bfcf5",
                                                             new Date(1558086962853L), -65, null,
                                                             "393cd.3afd9@086dd.fr", false,
                                                             "17f1c542-960c-448f-a3be-a07e7fa3d0e5",
                                                             "2ab93f7f4ac933ce8ac763c9e4ddcf32", false, true, true, -87,
                                                             null, null, "253073dd-21b6-4022-881c-26236ab50577", -41,
                                                             "a0bf9f93-efa9-4915-aa6a-8783a2a7206c",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1558086967648L), "4=-a");
            SubtenantUser subtenantuser2 = new SubtenantUser("2ab93f7f4ac933ce8ac763c9e4ddcf32", null,
                                                             "f1fe58e3-ad2e-4570-b441-af035f7bfcf5",
                                                             new Date(1558086962853L), -65, null,
                                                             "393cd.3afd9@086dd.fr", false,
                                                             "17f1c542-960c-448f-a3be-a07e7fa3d0e5",
                                                             "2ab93f7f4ac933ce8ac763c9e4ddcf32", false, true, true, -87,
                                                             null, null, "253073dd-21b6-4022-881c-26236ab50577", -41,
                                                             "a0bf9f93-efa9-4915-aa6a-8783a2a7206c",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1558086967648L), "4=-a");
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2.hashCode(), subtenantuser1.hashCode());
            int hashCode = subtenantuser1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantuser1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantUser subtenantuser = new SubtenantUser("2ab93f7f4ac933ce8ac763c9e4ddcf32", null,
                                                        "b360ee81-a34a-40c7-8913-ce3e050ba75a",
                                                        new Date(1558086967510L), -118, null, "1d828.7f6de@9f786.me",
                                                        false, "648e6e37-a90e-4423-8ed6-a26e2d813c99",
                                                        "2ab93f7f4ac933ce8ac763c9e4ddcf32", false, false, false, -53,
                                                        null, null, "7cb657ea-c575-484e-9a8e-718edf1a65a2", -121,
                                                        "16946a77-8c34-4a15-97bb-c53954830ef1",
                                                        SubtenantUserStatus.getDefault(), null,
                                                        new Date(1558086969009L), "4=-a");
        assertTrue(subtenantuser.isValid());
        SubtenantUser subtenantuserInvalid = new SubtenantUser(null, null, "1f6639fc-c055-451c-86b9-9b29cea2774c",
                                                               new Date(1558086959722L), 81, null, null, true,
                                                               "7217d134-1047-4d49-8b43-5701e2642ee074efdfcf-3b4b-4e57-b434-32f54e8126d652048740-9ab1-45a5-bda2-a1a5b88b1b46",
                                                               "5)@55\f5Zå ’I5Bç³Ž%ç›˜Cëµ•5Në­¹T\u001cïŒ²\u0018å¸†é€§5â?Žï‘¢Aê†…`æ®¿K#[555ç²›55R55á¹—è›‘å´–,5?VYæ´„`?\\\\På­¹\u0005ïµŠ\u000e5",
                                                               true, true, true, 111, null, null,
                                                               "0813d9be-4533-4311-9873-c797cd5b8328", -97,
                                                               "9906214e-3b2d-4b9d-ade0-c7e9ca010ac179b26d96-cc8b-4329-922d-af89be62d1db459af311-5734-4906-ad2a-8a28d365627f",
                                                               SubtenantUserStatus.getDefault(), null,
                                                               new Date(1558086968761L),
                                                               "â¸³5ç?¼Uâ¥ŒêŒŒ\u00079>ê?²;79à´ˆ:æ©?: æ?±8ZE6\u0010_ê ¯;â£†@è€¾\u001a:ì¸¾R8\\\\6èš¬ä«…N,;!RE;\u0007\u001f_O\\\\ íŠ¸1<\u0019î—¤57:>\u000789");
        assertFalse(subtenantuserInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("2ab93f7f4ac933ce8ac763c9e4ddcf32", null,
                                                             "231e21fb-435b-4db4-b041-19ac48b8f112",
                                                             new Date(1558086967924L), -34, null,
                                                             "600a4.59e3b@a2827.me", false,
                                                             "42e53391-f2ea-4c68-b5bf-450b50adabcc",
                                                             "2ab93f7f4ac933ce8ac763c9e4ddcf32", true, true, false, -20,
                                                             null, null, "89be6553-9c16-44d1-83d7-6e29610608d7", 33,
                                                             "3dc99cb6-f180-4df7-8a52-74a2563da694",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1558086962874L), "4=-a");
            SubtenantUser subtenantuser2 = new SubtenantUser("2ab93f7f4ac933ce8ac763c9e4ddcf32", null,
                                                             "231e21fb-435b-4db4-b041-19ac48b8f112",
                                                             new Date(1558086967924L), -34, null,
                                                             "600a4.59e3b@a2827.me", false,
                                                             "42e53391-f2ea-4c68-b5bf-450b50adabcc",
                                                             "2ab93f7f4ac933ce8ac763c9e4ddcf32", true, true, false, -20,
                                                             null, null, "89be6553-9c16-44d1-83d7-6e29610608d7", 33,
                                                             "3dc99cb6-f180-4df7-8a52-74a2563da694",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1558086962874L), "4=-a");
            SubtenantUser subtenantuser3 = new SubtenantUser("2ab93f7f4ac933ce8ac763c9e4ddcf32", null,
                                                             "dade1eda-67c4-4cd8-9470-2e13dcdb7069",
                                                             new Date(1558086963346L), 59, null, "9d771.69bbe@9bcd5.fr",
                                                             false, "3925d100-3e85-4227-aabb-a85eea8e7c6e",
                                                             "2ab93f7f4ac933ce8ac763c9e4ddcf32", true, true, false, -96,
                                                             null, null, "f9b19469-83e4-4e23-a8f8-17163f4a5dc1", -46,
                                                             "9a83690b-8fd7-48d0-98e3-f89c48a7c7e9",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1558086967332L), "4=-a");
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotNull(subtenantuser3);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertNotSame(subtenantuser3, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser1, subtenantuser2);
            assertEquals(subtenantuser1, subtenantuser1);
            assertFalse(subtenantuser1.equals(null));
            assertNotEquals(subtenantuser3, subtenantuser1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
