// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import com.arm.mbed.cloud.sdk.common.Order;
import com.arm.mbed.cloud.sdk.common.listing.ListOptionsEncoder;
import com.arm.mbed.cloud.sdk.common.listing.filtering.FilterOperator;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEventsListOptions.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEventsListOptions {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEventsListOptions deviceeventslistoptions1 = new DeviceEventsListOptions(Integer.valueOf(-53),
                                                                                           Long.valueOf(30),
                                                                                           Order.getDefault(),
                                                                                           "4c2337fd-c6b1-41b3-81db-43a5c85e24bd",
                                                                                           null, null);
            DeviceEventsListOptions deviceeventslistoptions2 = deviceeventslistoptions1.clone();
            assertNotNull(deviceeventslistoptions1);
            assertNotNull(deviceeventslistoptions2);
            assertNotSame(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2, deviceeventslistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the filters method.
     */
    @SuppressWarnings({ "boxing", "resource" })
    @Test
    public void testFilters() {
        try {
            DeviceEventsListOptions option = new DeviceEventsListOptions().equalToDeviceId("1090b887-ea98-4bd9-98b4-b855acb7af09")
                                                                          .notEqualToDeviceId("9c445722-067a-476a-9fcb-6348be98f9bd")
                                                                          .inDeviceIds(Arrays.asList("b6cdf199-a51f-4b41-bd49-81fa32490418",
                                                                                                     "d50ee03e-81a8-4ef2-9769-9a03bca31765",
                                                                                                     "4ffa69ff-b0cf-49ec-a6a2-eb3303af71d4",
                                                                                                     "b8830d22-9151-482a-98a3-2e28043aec25",
                                                                                                     "d7c21d47-43fc-4f0e-8cd9-7d4700cf2592",
                                                                                                     "7c581d3b-15fb-4c5c-8c30-d5122bf8223e",
                                                                                                     "a53919bc-16e2-41e2-bd02-be0365c50c14",
                                                                                                     "b6e127b4-5c9f-4dce-aa67-0ef5e0368cd4",
                                                                                                     "969bb466-3bc9-498a-a6ae-1def0cc21191"))
                                                                          .notInDeviceIds(Arrays.asList("c8eb6c3a-7372-410a-b733-3758be80cd67",
                                                                                                        "b0580db7-4649-4fcb-98dc-4abba2bd94f8",
                                                                                                        "57e61fd0-dd4f-4923-8eb9-1f6c9d30fd50",
                                                                                                        "a72af95f-6c3e-4446-b74b-bd2f30c99aee",
                                                                                                        "2bd4a060-24f0-426f-b100-38a7ae7fbc24",
                                                                                                        "cabab5c1-5a03-42e6-86a5-3e9f002d790b",
                                                                                                        "d95822db-cef8-48e5-a72e-34f580aa0798",
                                                                                                        "18a89551-7193-4c7a-ab41-dd46544c8df5",
                                                                                                        "acdbf18e-db90-4919-9790-69b0933a071f"))
                                                                          .equalToDescription("b8f3ee69-2d8c-4faf-95cb-ad555ce31c22")
                                                                          .notEqualToDescription("066daa27-31bd-444e-abe5-00ef1fc5f49b")
                                                                          .inDescriptions(Arrays.asList("5675c47e-b390-4ceb-bbfd-f5828e2e41f8",
                                                                                                        "75ad1e95-5c3c-4b27-8dde-178cc2708e08",
                                                                                                        "d66ddd9e-baf1-4831-b13e-6c3e07d15987",
                                                                                                        "1a9fa4dd-4203-45b6-a5b2-adeac26702be",
                                                                                                        "dd4c4a70-2333-4f61-818c-bb5e280ce03b",
                                                                                                        "62e501e7-d411-4aef-ae95-c92ddf8d930f",
                                                                                                        "63bd3d53-0027-4175-8d5a-ada2f89cb0bc",
                                                                                                        "335a57b3-eb41-442b-a730-a156a4d73e7f"))
                                                                          .notInDescriptions(Arrays.asList("3945067d-252f-4180-abe9-67339ba5c4f8",
                                                                                                           "8c413ea5-476e-4915-a9fb-fe66cfe89282",
                                                                                                           "a0bedf1e-df07-4a85-a3fe-10ce1ad0e5a0",
                                                                                                           "2bd559ba-273a-4bd7-afbc-950b0d8dd5e5",
                                                                                                           "62e98cb0-eb8d-497d-9f75-1ed333803164",
                                                                                                           "04c444d3-cb2c-4281-aa4b-3c6c1f5ac14e",
                                                                                                           "fa5b778f-598e-47ee-b0e4-4c50a9a0a2ac",
                                                                                                           "8abc2494-eb5c-4116-bf3c-d6212732410a",
                                                                                                           "443a9041-2166-4bf8-b7c7-97436b0d1182"))
                                                                          .inDateTimes(Arrays.asList(new Date(1558086964985L)))
                                                                          .notInDateTimes(Arrays.asList(new Date(1558086961202L)))
                                                                          .lessThanDateTime(new Date(1558086961734L))
                                                                          .greaterThanDateTime(new Date(1558086960992L))
                                                                          .equalToStateChange(Boolean.TRUE)
                                                                          .notEqualToStateChange(Boolean.FALSE)
                                                                          .equalToId("0e8e1d84-7cfc-4465-90c3-ec13df7a3b0e")
                                                                          .notEqualToId("5c13a5da-7681-465d-9d62-a45e71dea394")
                                                                          .inIds(Arrays.asList("f91ac212-3b20-43df-9e86-73d90dce2cd1",
                                                                                               "3b12964f-d652-4083-9d0c-2ac1de9fab94"))
                                                                          .notInIds(Arrays.asList("807cca76-73fb-44cc-bbdc-bf8e94ed6434"))
                                                                          .equalToEventType("4069bd57-2c5b-4f53-b396-54f656f7451b")
                                                                          .notEqualToEventType("a1f0833b-29b0-4b48-ae79-882b30bd0962")
                                                                          .inEventTypes(Arrays.asList("e6e40689-f04c-4af1-98c1-9c41e45dd3d2"))
                                                                          .notInEventTypes(Arrays.asList("9a213556-de19-42a6-9c54-9298c695a6f2",
                                                                                                         "f78b26f1-02c1-401c-834e-69a15200dde5",
                                                                                                         "f78ca479-12e1-42ab-8e8c-c1430c5b5b47",
                                                                                                         "3f899ee7-439e-4aa4-8052-a04983f4bea9",
                                                                                                         "3c04c55b-e1d3-47cd-8584-0ccf4f8fdea1",
                                                                                                         "6c6b4b95-0eaa-42b3-ac7a-7305bff270ce",
                                                                                                         "31c06e90-bb3d-481e-9730-5eb05afbfff9",
                                                                                                         "0084dec5-f7f1-4e42-879f-433c5dea74b8",
                                                                                                         "1147a687-d5b3-4a62-af57-93f5026d4209"));
            assertTrue(option.hasFilters());
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID, FilterOperator.EQUAL));
            assertNotNull(option.getDeviceIdFilters());
            assertEquals("1090b887-ea98-4bd9-98b4-b855acb7af09",
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDeviceIdFilters());
            assertEquals("9c445722-067a-476a-9fcb-6348be98f9bd",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID, FilterOperator.IN));
            assertNotNull(option.getDeviceIdFilters());
            assertEquals(Arrays.asList("b6cdf199-a51f-4b41-bd49-81fa32490418", "d50ee03e-81a8-4ef2-9769-9a03bca31765",
                                       "4ffa69ff-b0cf-49ec-a6a2-eb3303af71d4", "b8830d22-9151-482a-98a3-2e28043aec25",
                                       "d7c21d47-43fc-4f0e-8cd9-7d4700cf2592", "7c581d3b-15fb-4c5c-8c30-d5122bf8223e",
                                       "a53919bc-16e2-41e2-bd02-be0365c50c14", "b6e127b4-5c9f-4dce-aa67-0ef5e0368cd4",
                                       "969bb466-3bc9-498a-a6ae-1def0cc21191"),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID,
                                                                 List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getDeviceIdFilters());
            assertEquals(Arrays.asList("c8eb6c3a-7372-410a-b733-3758be80cd67", "b0580db7-4649-4fcb-98dc-4abba2bd94f8",
                                       "57e61fd0-dd4f-4923-8eb9-1f6c9d30fd50", "a72af95f-6c3e-4446-b74b-bd2f30c99aee",
                                       "2bd4a060-24f0-426f-b100-38a7ae7fbc24", "cabab5c1-5a03-42e6-86a5-3e9f002d790b",
                                       "d95822db-cef8-48e5-a72e-34f580aa0798", "18a89551-7193-4c7a-ab41-dd46544c8df5",
                                       "acdbf18e-db90-4919-9790-69b0933a071f"),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID,
                                                                    List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("b8f3ee69-2d8c-4faf-95cb-ad555ce31c22",
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("066daa27-31bd-444e-abe5-00ef1fc5f49b",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                       String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("5675c47e-b390-4ceb-bbfd-f5828e2e41f8", "75ad1e95-5c3c-4b27-8dde-178cc2708e08",
                                       "d66ddd9e-baf1-4831-b13e-6c3e07d15987", "1a9fa4dd-4203-45b6-a5b2-adeac26702be",
                                       "dd4c4a70-2333-4f61-818c-bb5e280ce03b", "62e501e7-d411-4aef-ae95-c92ddf8d930f",
                                       "63bd3d53-0027-4175-8d5a-ada2f89cb0bc", "335a57b3-eb41-442b-a730-a156a4d73e7f"),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                 List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("3945067d-252f-4180-abe9-67339ba5c4f8", "8c413ea5-476e-4915-a9fb-fe66cfe89282",
                                       "a0bedf1e-df07-4a85-a3fe-10ce1ad0e5a0", "2bd559ba-273a-4bd7-afbc-950b0d8dd5e5",
                                       "62e98cb0-eb8d-497d-9f75-1ed333803164", "04c444d3-cb2c-4281-aa4b-3c6c1f5ac14e",
                                       "fa5b778f-598e-47ee-b0e4-4c50a9a0a2ac", "8abc2494-eb5c-4116-bf3c-d6212732410a",
                                       "443a9041-2166-4bf8-b7c7-97436b0d1182"),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME, FilterOperator.IN));
            assertNotNull(option.getDateTimeFilters());
            assertEquals(Arrays.asList(new Date(1558086964985L)),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME,
                                                                 List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME, FilterOperator.NOT_IN));
            assertNotNull(option.getDateTimeFilters());
            assertEquals(Arrays.asList(new Date(1558086961202L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME,
                                                                    List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME, FilterOperator.LESS_THAN));
            assertNotNull(option.getDateTimeFilters());
            assertEquals(new Date(1558086961734L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME, FilterOperator.GREATER_THAN));
            assertNotNull(option.getDateTimeFilters());
            assertEquals(new Date(1558086960992L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE, FilterOperator.EQUAL));
            assertNotNull(option.getStateChangeFilters());
            assertEquals(Boolean.TRUE,
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE,
                                                                    Boolean.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getStateChangeFilters());
            assertEquals(Boolean.FALSE,
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE,
                                                                       Boolean.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, FilterOperator.EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("0e8e1d84-7cfc-4465-90c3-ec13df7a3b0e",
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("5c13a5da-7681-465d-9d62-a45e71dea394",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, FilterOperator.IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("f91ac212-3b20-43df-9e86-73d90dce2cd1", "3b12964f-d652-4083-9d0c-2ac1de9fab94"),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, List.class,
                                                                 option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("807cca76-73fb-44cc-bbdc-bf8e94ed6434"),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID,
                                                                    List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE, FilterOperator.EQUAL));
            assertNotNull(option.getEventTypeFilters());
            assertEquals("4069bd57-2c5b-4f53-b396-54f656f7451b",
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE,
                                                                    String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getEventTypeFilters());
            assertEquals("a1f0833b-29b0-4b48-ae79-882b30bd0962",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE,
                                                                       String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE, FilterOperator.IN));
            assertNotNull(option.getEventTypeFilters());
            assertEquals(Arrays.asList("e6e40689-f04c-4af1-98c1-9c41e45dd3d2"),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE,
                                                                 List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE, FilterOperator.NOT_IN));
            assertNotNull(option.getEventTypeFilters());
            assertEquals(Arrays.asList("9a213556-de19-42a6-9c54-9298c695a6f2", "f78b26f1-02c1-401c-834e-69a15200dde5",
                                       "f78ca479-12e1-42ab-8e8c-c1430c5b5b47", "3f899ee7-439e-4aa4-8052-a04983f4bea9",
                                       "3c04c55b-e1d3-47cd-8584-0ccf4f8fdea1", "6c6b4b95-0eaa-42b3-ac7a-7305bff270ce",
                                       "31c06e90-bb3d-481e-9730-5eb05afbfff9", "0084dec5-f7f1-4e42-879f-433c5dea74b8",
                                       "1147a687-d5b3-4a62-af57-93f5026d4209"),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE,
                                                                    List.class, option));
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEventsListOptions deviceeventslistoptions1 = new DeviceEventsListOptions(Integer.valueOf(32),
                                                                                           Long.valueOf(-28),
                                                                                           Order.getDefault(),
                                                                                           "c76bfa6b-0414-436e-8005-2fb8c067ac31",
                                                                                           null, null);
            DeviceEventsListOptions deviceeventslistoptions2 = new DeviceEventsListOptions(Integer.valueOf(32),
                                                                                           Long.valueOf(-28),
                                                                                           Order.getDefault(),
                                                                                           "c76bfa6b-0414-436e-8005-2fb8c067ac31",
                                                                                           null, null);
            assertNotNull(deviceeventslistoptions1);
            assertNotNull(deviceeventslistoptions2);
            assertNotSame(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2.hashCode(), deviceeventslistoptions1.hashCode());
            int hashCode = deviceeventslistoptions1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceeventslistoptions1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEventsListOptions deviceeventslistoptions1 = new DeviceEventsListOptions(Integer.valueOf(-20),
                                                                                           Long.valueOf(119),
                                                                                           Order.getDefault(),
                                                                                           "48c2723c-ec5a-44b0-80d1-c176ce4b4312",
                                                                                           null, null);
            DeviceEventsListOptions deviceeventslistoptions2 = new DeviceEventsListOptions(Integer.valueOf(-20),
                                                                                           Long.valueOf(119),
                                                                                           Order.getDefault(),
                                                                                           "48c2723c-ec5a-44b0-80d1-c176ce4b4312",
                                                                                           null, null);
            DeviceEventsListOptions deviceeventslistoptions3 = new DeviceEventsListOptions(Integer.valueOf(59),
                                                                                           Long.valueOf(109),
                                                                                           Order.getDefault(),
                                                                                           "158ac837-4061-4f57-a1f2-2f0fcbe0fd79",
                                                                                           null, null);
            assertNotNull(deviceeventslistoptions1);
            assertNotNull(deviceeventslistoptions2);
            assertNotNull(deviceeventslistoptions3);
            assertNotSame(deviceeventslistoptions2, deviceeventslistoptions1);
            assertNotSame(deviceeventslistoptions3, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions1, deviceeventslistoptions2);
            assertEquals(deviceeventslistoptions1, deviceeventslistoptions1);
            assertFalse(deviceeventslistoptions1.equals(null));
            assertNotEquals(deviceeventslistoptions3, deviceeventslistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
