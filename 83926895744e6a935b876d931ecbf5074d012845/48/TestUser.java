// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model User.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestUser {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            User user1 = new User("50c4d27a9ffc08ee2efd6a9c2bd4a4d8", null, "98134937-3733-4eee-bff4-dd961081b8df",
                                  new Date(1559833507012L), 81, null, "5d7f0.ac590@676aa.fr", false,
                                  "b67113f9-8e60-49c4-8595-62b54af1a68c", "50c4d27a9ffc08ee2efd6a9c2bd4a4d8", false,
                                  true, true, 122, null, null, "03b6dbb9-c8e1-46b4-aa1b-60c861d7eb11", 99,
                                  "26cd0110-05cf-4e76-9093-b9204d9e07ba", UserStatus.getDefault(), null,
                                  new Date(1559833507326L), "H_5F76n");
            User user2 = user1.clone();
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotSame(user2, user1);
            assertEquals(user2, user1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            User user1 = new User("50c4d27a9ffc08ee2efd6a9c2bd4a4d8", null, "c549bcca-91d4-42f4-a5dc-b60c80f12877",
                                  new Date(1559833508469L), -10, null, "ed94c.b0cf1@a8026.fr", true,
                                  "62b87de5-ee5d-472e-894d-21c2ea443b24", "50c4d27a9ffc08ee2efd6a9c2bd4a4d8", true,
                                  true, true, 92, null, null, "fdf85286-433d-41ed-a68a-81d4a169ebcb", 84,
                                  "5d73386a-1867-4d22-9a1e-4ef3034ba62e", UserStatus.getDefault(), null,
                                  new Date(1559833506128L), "H_5F76n");
            User user2 = new User("50c4d27a9ffc08ee2efd6a9c2bd4a4d8", null, "c549bcca-91d4-42f4-a5dc-b60c80f12877",
                                  new Date(1559833508469L), -10, null, "ed94c.b0cf1@a8026.fr", true,
                                  "62b87de5-ee5d-472e-894d-21c2ea443b24", "50c4d27a9ffc08ee2efd6a9c2bd4a4d8", true,
                                  true, true, 92, null, null, "fdf85286-433d-41ed-a68a-81d4a169ebcb", 84,
                                  "5d73386a-1867-4d22-9a1e-4ef3034ba62e", UserStatus.getDefault(), null,
                                  new Date(1559833506128L), "H_5F76n");
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotSame(user2, user1);
            assertEquals(user2, user1);
            assertEquals(user2.hashCode(), user1.hashCode());
            int hashCode = user1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, user1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        User user = new User("50c4d27a9ffc08ee2efd6a9c2bd4a4d8", null, "08ad7b1b-ce59-4d0c-87b2-4b202329967d",
                             new Date(1559833506180L), 33, null, "8606b.49a59@6b1df.me", true,
                             "2663637a-769e-4ccf-811e-c14ecde48f1f", "50c4d27a9ffc08ee2efd6a9c2bd4a4d8", false, true,
                             true, -1, null, null, "72e1bc77-60bb-4703-be57-0bb03607be5b", 19,
                             "5f1b7da5-16bf-4756-951b-4f368362bd52", UserStatus.getDefault(), null,
                             new Date(1559833506423L), "H_5F76n");
        assertTrue(user.isValid());
        User userInvalid = new User("13Z3@ëœ¼D,Rá¸ª3ä¼°ç¾™P3ë¢?-è™?31%à²ªDç—ªí—?_\u0003êª¯\u001fà«½1Wåª‰ç»¥[3<\u0007ì? æµ™11\u00061313#\u0016113_ä¤?C3é…©31æ¿˜U111",
                                    null, "dba05499-43bd-41eb-89e0-aea79ef3b5ca", new Date(1559833513417L), 95, null,
                                    null, false,
                                    "1788de66-b432-4556-97e1-e66c503d3979b1c52c23-78b3-4207-a675-4fbbe044f1129ce377fb-ac45-4a7e-9d99-150b7e119bd9",
                                    "13Z3@ëœ¼D,Rá¸ª3ä¼°ç¾™P3ë¢?-è™?31%à²ªDç—ªí—?_\u0003êª¯\u001fà«½1Wåª‰ç»¥[3<\u0007ì? æµ™11\u00061313#\u0016113_ä¤?C3é…©31æ¿˜U111",
                                    true, false, true, -47, null, null, "58b71c14-c11e-400a-98ce-56ea909d481e", -121,
                                    "f45715db-6b7b-4653-97f4-3d314d8309bea6ca3fe4-fea1-49a0-b8a3-74c5bdc1d5e15fa74a76-b5e7-4c0f-8a17-aea85b54cebc",
                                    UserStatus.getDefault(), null, new Date(1559833514349L),
                                    "@\u001eEç’œG\fGGC'\fSGe\u0006>\u0012[é­„e\u000bVä¥ª/YTä€“GbkG`DXel8Q\u001câ?‹h8g^ì¿„G0EGä´?è£¯è°•ìˆ ë´¶GaCí•Ž8Gg\fai");
        assertFalse(userInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            User user1 = new User("50c4d27a9ffc08ee2efd6a9c2bd4a4d8", null, "f11a4f15-fa58-4819-ae8a-b12ee1f77ad9",
                                  new Date(1559833509157L), -96, null, "ee536.4a630@e6cb6.me", false,
                                  "3e8db34c-207c-4bf6-8032-4d1ef040e840", "50c4d27a9ffc08ee2efd6a9c2bd4a4d8", false,
                                  false, true, -82, null, null, "bd3d5435-27f8-4a47-bd9c-535ee6f7d0d0", -89,
                                  "0d71ac00-d96e-4162-9457-ec7718e91155", UserStatus.getDefault(), null,
                                  new Date(1559833508209L), "H_5F76n");
            User user2 = new User("50c4d27a9ffc08ee2efd6a9c2bd4a4d8", null, "f11a4f15-fa58-4819-ae8a-b12ee1f77ad9",
                                  new Date(1559833509157L), -96, null, "ee536.4a630@e6cb6.me", false,
                                  "3e8db34c-207c-4bf6-8032-4d1ef040e840", "50c4d27a9ffc08ee2efd6a9c2bd4a4d8", false,
                                  false, true, -82, null, null, "bd3d5435-27f8-4a47-bd9c-535ee6f7d0d0", -89,
                                  "0d71ac00-d96e-4162-9457-ec7718e91155", UserStatus.getDefault(), null,
                                  new Date(1559833508209L), "H_5F76n");
            User user3 = new User("50c4d27a9ffc08ee2efd6a9c2bd4a4d8", null, "e5f03877-9426-4a07-b0fd-a757ccbff315",
                                  new Date(1559833511165L), -122, null, "3edfa.6d0c4@b1732.fr", false,
                                  "042f5ed5-1fa4-40bf-b0ee-74e14011798e", "50c4d27a9ffc08ee2efd6a9c2bd4a4d8", false,
                                  false, true, 1, null, null, "8dde895a-a120-492b-a08a-805f73ca3588", -106,
                                  "0c1428a4-491d-44fb-80b3-b565986c5204", UserStatus.getDefault(), null,
                                  new Date(1559833510673L), "H_5F76n");
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotNull(user3);
            assertNotSame(user2, user1);
            assertNotSame(user3, user1);
            assertEquals(user2, user1);
            assertEquals(user2, user1);
            assertEquals(user1, user2);
            assertEquals(user1, user1);
            assertFalse(user1.equals(null));
            assertNotEquals(user3, user1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
