// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEnrollmentDenial.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEnrollmentDenial {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("50c4d27a9ffc08ee2efd6a9c2bd4a4d8",
                                                                                        new Date(1559833512879L),
                                                                                        "f4106e03-c329-4a2c-97ec-b1cc10df2d4a",
                                                                                        "50c4d27a9ffc08ee2efd6a9c2bd4a4d8",
                                                                                        "50c4d27a9ffc08ee2efd6a9c2bd4a4d8");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = deviceenrollmentdenial1.clone();
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("50c4d27a9ffc08ee2efd6a9c2bd4a4d8",
                                                                                        new Date(1559833509966L),
                                                                                        "aabf1105-7b35-4fd4-91d9-f621ad2841f1",
                                                                                        "50c4d27a9ffc08ee2efd6a9c2bd4a4d8",
                                                                                        "50c4d27a9ffc08ee2efd6a9c2bd4a4d8");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = new DeviceEnrollmentDenial("50c4d27a9ffc08ee2efd6a9c2bd4a4d8",
                                                                                        new Date(1559833509966L),
                                                                                        "aabf1105-7b35-4fd4-91d9-f621ad2841f1",
                                                                                        "50c4d27a9ffc08ee2efd6a9c2bd4a4d8",
                                                                                        "50c4d27a9ffc08ee2efd6a9c2bd4a4d8");
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2.hashCode(), deviceenrollmentdenial1.hashCode());
            int hashCode = deviceenrollmentdenial1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceenrollmentdenial1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEnrollmentDenial deviceenrollmentdenial = new DeviceEnrollmentDenial("50c4d27a9ffc08ee2efd6a9c2bd4a4d8",
                                                                                   new Date(1559833506974L),
                                                                                   "b5baec7f-75dc-4ecd-83e8-07c4f55abf1c",
                                                                                   "50c4d27a9ffc08ee2efd6a9c2bd4a4d8",
                                                                                   "50c4d27a9ffc08ee2efd6a9c2bd4a4d8");
        assertTrue(deviceenrollmentdenial.isValid());
        DeviceEnrollmentDenial deviceenrollmentdenialInvalid = new DeviceEnrollmentDenial("13Z3@ëœ¼D,Rá¸ª3ä¼°ç¾™P3ë¢?-è™?31%à²ªDç—ªí—?_\u0003êª¯\u001fà«½1Wåª‰ç»¥[3<\u0007ì? æµ™11\u00061313#\u0016113_ä¤?C3é…©31æ¿˜U111",
                                                                                          new Date(1559833510794L),
                                                                                          "5d11c630-92f0-4ef1-bafa-7ae15ad123b6",
                                                                                          "13Z3@ëœ¼D,Rá¸ª3ä¼°ç¾™P3ë¢?-è™?31%à²ªDç—ªí—?_\u0003êª¯\u001fà«½1Wåª‰ç»¥[3<\u0007ì? æµ™11\u00061313#\u0016113_ä¤?C3é…©31æ¿˜U111",
                                                                                          "13Z3@ëœ¼D,Rá¸ª3ä¼°ç¾™P3ë¢?-è™?31%à²ªDç—ªí—?_\u0003êª¯\u001fà«½1Wåª‰ç»¥[3<\u0007ì? æµ™11\u00061313#\u0016113_ä¤?C3é…©31æ¿˜U111");
        assertFalse(deviceenrollmentdenialInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("50c4d27a9ffc08ee2efd6a9c2bd4a4d8",
                                                                                        new Date(1559833505852L),
                                                                                        "f26393fc-1be1-4fa2-93fc-e3a62c46a6a0",
                                                                                        "50c4d27a9ffc08ee2efd6a9c2bd4a4d8",
                                                                                        "50c4d27a9ffc08ee2efd6a9c2bd4a4d8");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = new DeviceEnrollmentDenial("50c4d27a9ffc08ee2efd6a9c2bd4a4d8",
                                                                                        new Date(1559833505852L),
                                                                                        "f26393fc-1be1-4fa2-93fc-e3a62c46a6a0",
                                                                                        "50c4d27a9ffc08ee2efd6a9c2bd4a4d8",
                                                                                        "50c4d27a9ffc08ee2efd6a9c2bd4a4d8");
            DeviceEnrollmentDenial deviceenrollmentdenial3 = new DeviceEnrollmentDenial("50c4d27a9ffc08ee2efd6a9c2bd4a4d8",
                                                                                        new Date(1559833509390L),
                                                                                        "ce92e17f-67b3-4d8b-9280-5ab0674f763f",
                                                                                        "50c4d27a9ffc08ee2efd6a9c2bd4a4d8",
                                                                                        "50c4d27a9ffc08ee2efd6a9c2bd4a4d8");
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotNull(deviceenrollmentdenial3);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertNotSame(deviceenrollmentdenial3, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial1, deviceenrollmentdenial2);
            assertEquals(deviceenrollmentdenial1, deviceenrollmentdenial1);
            assertFalse(deviceenrollmentdenial1.equals(null));
            assertNotEquals(deviceenrollmentdenial3, deviceenrollmentdenial1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
