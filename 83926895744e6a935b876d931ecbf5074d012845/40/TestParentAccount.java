// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model ParentAccount.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestParentAccount {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("403bc.a2e2e@e0aaa.me",
                                                             "6010b716-2ce4-4473-900d-514014877b26",
                                                             "50c4d27a9ffc08ee2efd6a9c2bd4a4d8");
            ParentAccount parentaccount2 = parentaccount1.clone();
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotSame(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("b8e50.633a2@f607a.fr",
                                                             "948cdba7-c187-4f27-b5d0-51f94c3e76bb",
                                                             "50c4d27a9ffc08ee2efd6a9c2bd4a4d8");
            ParentAccount parentaccount2 = new ParentAccount("b8e50.633a2@f607a.fr",
                                                             "948cdba7-c187-4f27-b5d0-51f94c3e76bb",
                                                             "50c4d27a9ffc08ee2efd6a9c2bd4a4d8");
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotSame(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount2.hashCode(), parentaccount1.hashCode());
            int hashCode = parentaccount1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, parentaccount1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ParentAccount parentaccount = new ParentAccount("65e26.420b3@75746.fr", "97a4846f-6101-4533-8eec-f31342257dff",
                                                        "50c4d27a9ffc08ee2efd6a9c2bd4a4d8");
        assertTrue(parentaccount.isValid());
        ParentAccount parentaccountInvalid = new ParentAccount(" ïŒ²ïš‡ìµœGéŒŠ&\u000b)\u0002\u0013*ï…‚ï¿§Ôšï¿±ï—¸>ï¿³\u001bä§ª\u000fEï¿ª>ï¿«J\u001eî¦žHÆ¿æž¹à§±8\u0017Há·?ï­œáº±\u000eîƒ­ï’¤ä”¤à¶¼çº¬Eï¿¹è’¡ï’ªIï¼€BAAï¥™Î„\u0010à±œë±±â—žæ¥“ë…¬>:",
                                                               "b2591615-efa1-48c1-8fdc-0d7d30626e0005c38487-7cc0-41ac-ba05-98b36eeea8cb992b11e4-e86c-435f-b303-f14bb062e931",
                                                               "13Z3@ëœ¼D,Rá¸ª3ä¼°ç¾™P3ë¢?-è™?31%à²ªDç—ªí—?_\u0003êª¯\u001fà«½1Wåª‰ç»¥[3<\u0007ì? æµ™11\u00061313#\u0016113_ä¤?C3é…©31æ¿˜U111");
        assertFalse(parentaccountInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("1580f.f7be6@b4819.me",
                                                             "ce5d4cc1-847f-4a20-ac6b-5380844a0714",
                                                             "50c4d27a9ffc08ee2efd6a9c2bd4a4d8");
            ParentAccount parentaccount2 = new ParentAccount("1580f.f7be6@b4819.me",
                                                             "ce5d4cc1-847f-4a20-ac6b-5380844a0714",
                                                             "50c4d27a9ffc08ee2efd6a9c2bd4a4d8");
            ParentAccount parentaccount3 = new ParentAccount("db692.73bf3@54faf.me",
                                                             "debc7476-0652-44c2-90cf-f900df9a9e7c",
                                                             "50c4d27a9ffc08ee2efd6a9c2bd4a4d8");
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotNull(parentaccount3);
            assertNotSame(parentaccount2, parentaccount1);
            assertNotSame(parentaccount3, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount1, parentaccount2);
            assertEquals(parentaccount1, parentaccount1);
            assertFalse(parentaccount1.equals(null));
            assertNotEquals(parentaccount3, parentaccount1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
