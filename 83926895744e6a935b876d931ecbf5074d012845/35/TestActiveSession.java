// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model ActiveSession.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestActiveSession {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ActiveSession activesession1 = new ActiveSession("50c4d27a9ffc08ee2efd6a9c2bd4a4d8",
                                                             "9948c3c1-f407-409a-9d4b-76d2708ff3a3",
                                                             new Date(1559833509819L),
                                                             "3e96d4df-bf42-4cbd-bc05-239f500ed7ab",
                                                             "1a3cd60f-80e6-4299-8149-ec63d4280303");
            ActiveSession activesession2 = activesession1.clone();
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotSame(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ActiveSession activesession1 = new ActiveSession("50c4d27a9ffc08ee2efd6a9c2bd4a4d8",
                                                             "7323eca9-8ec5-4bb5-b35f-6f81f2ca1aa9",
                                                             new Date(1559833511834L),
                                                             "7a1ec73c-1493-4c1d-aabe-e5b74b5f4d59",
                                                             "a6e30514-bb7e-46d2-930a-59ffade2af85");
            ActiveSession activesession2 = new ActiveSession("50c4d27a9ffc08ee2efd6a9c2bd4a4d8",
                                                             "7323eca9-8ec5-4bb5-b35f-6f81f2ca1aa9",
                                                             new Date(1559833511834L),
                                                             "7a1ec73c-1493-4c1d-aabe-e5b74b5f4d59",
                                                             "a6e30514-bb7e-46d2-930a-59ffade2af85");
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotSame(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession2.hashCode(), activesession1.hashCode());
            int hashCode = activesession1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, activesession1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ActiveSession activesession = new ActiveSession("50c4d27a9ffc08ee2efd6a9c2bd4a4d8",
                                                        "61299f58-11cc-41c0-bb57-fe64774dcc54",
                                                        new Date(1559833507020L),
                                                        "54e9cf0d-4c15-466a-8cbd-b429eb96e61d",
                                                        "ed88e898-bee2-4429-adaa-d55ddd38a9d6");
        assertTrue(activesession.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ActiveSession activesession1 = new ActiveSession("50c4d27a9ffc08ee2efd6a9c2bd4a4d8",
                                                             "7440cc09-148d-4cea-a8b2-b8b628b7e505",
                                                             new Date(1559833507692L),
                                                             "8f7009a4-9cb9-47f3-9fb7-9b9a4ee0ff88",
                                                             "11f9eed8-7a1b-4f00-85e2-8d2bad39ef53");
            ActiveSession activesession2 = new ActiveSession("50c4d27a9ffc08ee2efd6a9c2bd4a4d8",
                                                             "7440cc09-148d-4cea-a8b2-b8b628b7e505",
                                                             new Date(1559833507692L),
                                                             "8f7009a4-9cb9-47f3-9fb7-9b9a4ee0ff88",
                                                             "11f9eed8-7a1b-4f00-85e2-8d2bad39ef53");
            ActiveSession activesession3 = new ActiveSession("50c4d27a9ffc08ee2efd6a9c2bd4a4d8",
                                                             "c702fa15-6e6c-4c41-a32a-d365dcc17fb9",
                                                             new Date(1559833508030L),
                                                             "dc2d35e5-1467-4dab-bf42-3294df8c4392",
                                                             "27d81d4a-a041-4fd3-959d-bb1148220fef");
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotNull(activesession3);
            assertNotSame(activesession2, activesession1);
            assertNotSame(activesession3, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession1, activesession2);
            assertEquals(activesession1, activesession1);
            assertFalse(activesession1.equals(null));
            assertNotEquals(activesession3, activesession1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
