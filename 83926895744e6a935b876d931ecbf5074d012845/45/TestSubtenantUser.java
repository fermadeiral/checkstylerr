// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantUser.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantUser {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("50c4d27a9ffc08ee2efd6a9c2bd4a4d8", null,
                                                             "bdd3e24c-3037-4d46-a326-c9c7a5fe3e16",
                                                             new Date(1559833513842L), -127, null,
                                                             "d1c9e.67508@ddee3.me", false,
                                                             "3780dee9-fc5a-4113-b478-14c7fbce67b6",
                                                             "50c4d27a9ffc08ee2efd6a9c2bd4a4d8", false, true, true, 58,
                                                             null, null, "e04603cb-376b-4f9c-9494-0deb1e7d72df", 5,
                                                             "70579f56-2206-40ec-8c8f-05e86031f515",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1559833512901L), "H_5F76n");
            SubtenantUser subtenantuser2 = subtenantuser1.clone();
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("50c4d27a9ffc08ee2efd6a9c2bd4a4d8", null,
                                                             "35366bc6-2154-4039-963c-fe0b7c165a5c",
                                                             new Date(1559833511952L), -85, null,
                                                             "65baa.eed02@824bc.fr", true,
                                                             "6ad03c3f-6e8a-4e3d-93e6-0d2aa832809d",
                                                             "50c4d27a9ffc08ee2efd6a9c2bd4a4d8", false, false, false,
                                                             -101, null, null, "147e9871-7fd7-4477-9c5a-a1aac3dc6079",
                                                             -55, "a2c84872-7038-47d3-ae77-02857f7bcc37",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1559833514510L), "H_5F76n");
            SubtenantUser subtenantuser2 = new SubtenantUser("50c4d27a9ffc08ee2efd6a9c2bd4a4d8", null,
                                                             "35366bc6-2154-4039-963c-fe0b7c165a5c",
                                                             new Date(1559833511952L), -85, null,
                                                             "65baa.eed02@824bc.fr", true,
                                                             "6ad03c3f-6e8a-4e3d-93e6-0d2aa832809d",
                                                             "50c4d27a9ffc08ee2efd6a9c2bd4a4d8", false, false, false,
                                                             -101, null, null, "147e9871-7fd7-4477-9c5a-a1aac3dc6079",
                                                             -55, "a2c84872-7038-47d3-ae77-02857f7bcc37",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1559833514510L), "H_5F76n");
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2.hashCode(), subtenantuser1.hashCode());
            int hashCode = subtenantuser1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantuser1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantUser subtenantuser = new SubtenantUser("50c4d27a9ffc08ee2efd6a9c2bd4a4d8", null,
                                                        "b3b57624-14ab-4df1-bcd4-2a510d5cc019",
                                                        new Date(1559833508792L), 74, null, "6151a.a703e@eedde.me",
                                                        false, "6950bab1-f26e-43ab-91c3-4956d981dbe6",
                                                        "50c4d27a9ffc08ee2efd6a9c2bd4a4d8", false, false, true, -125,
                                                        null, null, "cb6688e6-64f8-43d7-9888-8bebb04aa031", -7,
                                                        "848a7eae-f6a8-45bf-88d4-be0a1acaa63c",
                                                        SubtenantUserStatus.getDefault(), null,
                                                        new Date(1559833507696L), "H_5F76n");
        assertTrue(subtenantuser.isValid());
        SubtenantUser subtenantuserInvalid = new SubtenantUser(null, null, "e042910e-59d2-4c4f-85b4-56791376c724",
                                                               new Date(1559833510277L), 3, null, null, false,
                                                               "0cb71b25-de90-4dbc-b3a5-50b53d78fcd24f5285f0-84e6-41a4-833a-28849f400454a4e72202-b4f6-41fb-9cc6-13a287a2c748",
                                                               "13Z3@ëœ¼D,Rá¸ª3ä¼°ç¾™P3ë¢?-è™?31%à²ªDç—ªí—?_\u0003êª¯\u001fà«½1Wåª‰ç»¥[3<\u0007ì? æµ™11\u00061313#\u0016113_ä¤?C3é…©31æ¿˜U111",
                                                               true, false, true, -50, null, null,
                                                               "362e0d85-e45f-46a9-a556-d8303e79f6a2", 117,
                                                               "2b28debb-f30c-4a55-8a50-4cb0bdf5d652847eb055-b95a-40fe-9e9f-b173bf1eaa2d1147729a-d681-43b9-ba51-5498bcb87a3e",
                                                               SubtenantUserStatus.getDefault(), null,
                                                               new Date(1559833508479L),
                                                               "@\u001eEç’œG\fGGC'\fSGe\u0006>\u0012[é­„e\u000bVä¥ª/YTä€“GbkG`DXel8Q\u001câ?‹h8g^ì¿„G0EGä´?è£¯è°•ìˆ ë´¶GaCí•Ž8Gg\fai");
        assertFalse(subtenantuserInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("50c4d27a9ffc08ee2efd6a9c2bd4a4d8", null,
                                                             "4174c105-8fb6-4b2f-94d9-5f2bfa66db21",
                                                             new Date(1559833514181L), -1, null, "52fcb.f1b09@ecf9f.me",
                                                             true, "f8798982-f7c3-4f9a-990c-dc425dcf65a7",
                                                             "50c4d27a9ffc08ee2efd6a9c2bd4a4d8", true, false, true, 60,
                                                             null, null, "549214f8-e950-49d0-ae62-9df3fdea549e", 81,
                                                             "aa3bf430-93d8-4e50-a0f4-8c20f6aaff8b",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1559833512786L), "H_5F76n");
            SubtenantUser subtenantuser2 = new SubtenantUser("50c4d27a9ffc08ee2efd6a9c2bd4a4d8", null,
                                                             "4174c105-8fb6-4b2f-94d9-5f2bfa66db21",
                                                             new Date(1559833514181L), -1, null, "52fcb.f1b09@ecf9f.me",
                                                             true, "f8798982-f7c3-4f9a-990c-dc425dcf65a7",
                                                             "50c4d27a9ffc08ee2efd6a9c2bd4a4d8", true, false, true, 60,
                                                             null, null, "549214f8-e950-49d0-ae62-9df3fdea549e", 81,
                                                             "aa3bf430-93d8-4e50-a0f4-8c20f6aaff8b",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1559833512786L), "H_5F76n");
            SubtenantUser subtenantuser3 = new SubtenantUser("50c4d27a9ffc08ee2efd6a9c2bd4a4d8", null,
                                                             "b6df54a8-1070-4078-9e75-d09d2a456e70",
                                                             new Date(1559833510678L), 6, null, "4707c.66c37@5ef81.fr",
                                                             true, "22a48ce5-ceba-4972-a129-6b1047e09b7c",
                                                             "50c4d27a9ffc08ee2efd6a9c2bd4a4d8", true, false, true, 115,
                                                             null, null, "9a7d53a4-d3c6-47ec-b917-732f4116bcb1", -12,
                                                             "1b3ebc5c-ad2d-4848-93e0-a9a16c149def",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1559833507509L), "H_5F76n");
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotNull(subtenantuser3);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertNotSame(subtenantuser3, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser1, subtenantuser2);
            assertEquals(subtenantuser1, subtenantuser1);
            assertFalse(subtenantuser1.equals(null));
            assertNotEquals(subtenantuser3, subtenantuser1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
