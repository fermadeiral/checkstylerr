// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model ApiKey.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestApiKey {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ApiKey apikey1 = new ApiKey("50c4d27a9ffc08ee2efd6a9c2bd4a4d8", new Date(1559833512344L), -117,
                                        "50c4d27a9ffc08ee2efd6a9c2bd4a4d8", "2a78e750-fa1c-4623-a415-5c13e1cfbf88",
                                        -113, "479e7e3a-75ca-47be-8ffd-05f6c211c3e8",
                                        "50c4d27a9ffc08ee2efd6a9c2bd4a4d8", ApiKeyStatus.getDefault(),
                                        new Date(1559833505871L));
            ApiKey apikey2 = apikey1.clone();
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotSame(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ApiKey apikey1 = new ApiKey("50c4d27a9ffc08ee2efd6a9c2bd4a4d8", new Date(1559833513645L), 73,
                                        "50c4d27a9ffc08ee2efd6a9c2bd4a4d8", "4ba3972d-5f7e-429b-a726-87688ab5f100", -50,
                                        "cc9fb194-6ca9-4ed3-8599-77818090e580", "50c4d27a9ffc08ee2efd6a9c2bd4a4d8",
                                        ApiKeyStatus.getDefault(), new Date(1559833514253L));
            ApiKey apikey2 = new ApiKey("50c4d27a9ffc08ee2efd6a9c2bd4a4d8", new Date(1559833513645L), 73,
                                        "50c4d27a9ffc08ee2efd6a9c2bd4a4d8", "4ba3972d-5f7e-429b-a726-87688ab5f100", -50,
                                        "cc9fb194-6ca9-4ed3-8599-77818090e580", "50c4d27a9ffc08ee2efd6a9c2bd4a4d8",
                                        ApiKeyStatus.getDefault(), new Date(1559833514253L));
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotSame(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey2.hashCode(), apikey1.hashCode());
            int hashCode = apikey1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, apikey1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ApiKey apikey = new ApiKey("50c4d27a9ffc08ee2efd6a9c2bd4a4d8", new Date(1559833512779L), -90,
                                   "50c4d27a9ffc08ee2efd6a9c2bd4a4d8", "4b4b8c79-5ad2-4506-b834-d4d6c5478be5", -10,
                                   "8082fd08-8040-46c1-9de0-739533f76fa2", "50c4d27a9ffc08ee2efd6a9c2bd4a4d8",
                                   ApiKeyStatus.getDefault(), new Date(1559833509793L));
        assertTrue(apikey.isValid());
        ApiKey apikeyInvalid = new ApiKey("13Z3@ëœ¼D,Rá¸ª3ä¼°ç¾™P3ë¢?-è™?31%à²ªDç—ªí—?_\u0003êª¯\u001fà«½1Wåª‰ç»¥[3<\u0007ì? æµ™11\u00061313#\u0016113_ä¤?C3é…©31æ¿˜U111",
                                          new Date(1559833511795L), -36,
                                          "13Z3@ëœ¼D,Rá¸ª3ä¼°ç¾™P3ë¢?-è™?31%à²ªDç—ªí—?_\u0003êª¯\u001fà«½1Wåª‰ç»¥[3<\u0007ì? æµ™11\u00061313#\u0016113_ä¤?C3é…©31æ¿˜U111",
                                          "86e5330e-614c-49a0-a1b6-b339016f652f", -60, null,
                                          "13Z3@ëœ¼D,Rá¸ª3ä¼°ç¾™P3ë¢?-è™?31%à²ªDç—ªí—?_\u0003êª¯\u001fà«½1Wåª‰ç»¥[3<\u0007ì? æµ™11\u00061313#\u0016113_ä¤?C3é…©31æ¿˜U111",
                                          ApiKeyStatus.getDefault(), new Date(1559833510730L));
        assertFalse(apikeyInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ApiKey apikey1 = new ApiKey("50c4d27a9ffc08ee2efd6a9c2bd4a4d8", new Date(1559833514432L), 110,
                                        "50c4d27a9ffc08ee2efd6a9c2bd4a4d8", "3565fe9e-9211-4e94-8a1f-c6fe8925a323", 112,
                                        "0e7e6b52-4215-448a-a67a-b55b9aaacb20", "50c4d27a9ffc08ee2efd6a9c2bd4a4d8",
                                        ApiKeyStatus.getDefault(), new Date(1559833514435L));
            ApiKey apikey2 = new ApiKey("50c4d27a9ffc08ee2efd6a9c2bd4a4d8", new Date(1559833514432L), 110,
                                        "50c4d27a9ffc08ee2efd6a9c2bd4a4d8", "3565fe9e-9211-4e94-8a1f-c6fe8925a323", 112,
                                        "0e7e6b52-4215-448a-a67a-b55b9aaacb20", "50c4d27a9ffc08ee2efd6a9c2bd4a4d8",
                                        ApiKeyStatus.getDefault(), new Date(1559833514435L));
            ApiKey apikey3 = new ApiKey("50c4d27a9ffc08ee2efd6a9c2bd4a4d8", new Date(1559833510785L), 113,
                                        "50c4d27a9ffc08ee2efd6a9c2bd4a4d8", "7b7a9e5f-b289-49f7-8472-a8438e25b94a", -62,
                                        "f3a10597-30fb-41a5-9c19-660a0294ca19", "50c4d27a9ffc08ee2efd6a9c2bd4a4d8",
                                        ApiKeyStatus.getDefault(), new Date(1559833509793L));
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotNull(apikey3);
            assertNotSame(apikey2, apikey1);
            assertNotSame(apikey3, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey1, apikey2);
            assertEquals(apikey1, apikey1);
            assertFalse(apikey1.equals(null));
            assertNotEquals(apikey3, apikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
