// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.branding.model;

import static org.junit.Assert.*;

import com.arm.mbed.cloud.sdk.common.Order;
import org.junit.Test;

/**
 * Unit tests for Model DarkThemeImageListOptions.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDarkThemeImageListOptions {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DarkThemeImageListOptions darkthemeimagelistoptions1 = new DarkThemeImageListOptions(Integer.valueOf(61),
                                                                                                 Long.valueOf(23),
                                                                                                 Order.getDefault(),
                                                                                                 "12f97122-3498-4cdc-b4b4-33d85f66983d",
                                                                                                 null, null);
            DarkThemeImageListOptions darkthemeimagelistoptions2 = darkthemeimagelistoptions1.clone();
            assertNotNull(darkthemeimagelistoptions1);
            assertNotNull(darkthemeimagelistoptions2);
            assertNotSame(darkthemeimagelistoptions2, darkthemeimagelistoptions1);
            assertEquals(darkthemeimagelistoptions2, darkthemeimagelistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DarkThemeImageListOptions darkthemeimagelistoptions1 = new DarkThemeImageListOptions(Integer.valueOf(-24),
                                                                                                 Long.valueOf(-64),
                                                                                                 Order.getDefault(),
                                                                                                 "29050501-7709-44ab-a791-5a2b6dd7b57a",
                                                                                                 null, null);
            DarkThemeImageListOptions darkthemeimagelistoptions2 = new DarkThemeImageListOptions(Integer.valueOf(-24),
                                                                                                 Long.valueOf(-64),
                                                                                                 Order.getDefault(),
                                                                                                 "29050501-7709-44ab-a791-5a2b6dd7b57a",
                                                                                                 null, null);
            assertNotNull(darkthemeimagelistoptions1);
            assertNotNull(darkthemeimagelistoptions2);
            assertNotSame(darkthemeimagelistoptions2, darkthemeimagelistoptions1);
            assertEquals(darkthemeimagelistoptions2, darkthemeimagelistoptions1);
            assertEquals(darkthemeimagelistoptions2.hashCode(), darkthemeimagelistoptions1.hashCode());
            int hashCode = darkthemeimagelistoptions1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, darkthemeimagelistoptions1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DarkThemeImageListOptions darkthemeimagelistoptions1 = new DarkThemeImageListOptions(Integer.valueOf(-49),
                                                                                                 Long.valueOf(14),
                                                                                                 Order.getDefault(),
                                                                                                 "6fe56607-b933-45a7-b6b2-f3c97c200f91",
                                                                                                 null, null);
            DarkThemeImageListOptions darkthemeimagelistoptions2 = new DarkThemeImageListOptions(Integer.valueOf(-49),
                                                                                                 Long.valueOf(14),
                                                                                                 Order.getDefault(),
                                                                                                 "6fe56607-b933-45a7-b6b2-f3c97c200f91",
                                                                                                 null, null);
            DarkThemeImageListOptions darkthemeimagelistoptions3 = new DarkThemeImageListOptions(Integer.valueOf(-81),
                                                                                                 Long.valueOf(-75),
                                                                                                 Order.getDefault(),
                                                                                                 "fcf3e889-4c01-4ff4-aa5c-d121c4f83608",
                                                                                                 null, null);
            assertNotNull(darkthemeimagelistoptions1);
            assertNotNull(darkthemeimagelistoptions2);
            assertNotNull(darkthemeimagelistoptions3);
            assertNotSame(darkthemeimagelistoptions2, darkthemeimagelistoptions1);
            assertNotSame(darkthemeimagelistoptions3, darkthemeimagelistoptions1);
            assertEquals(darkthemeimagelistoptions2, darkthemeimagelistoptions1);
            assertEquals(darkthemeimagelistoptions2, darkthemeimagelistoptions1);
            assertEquals(darkthemeimagelistoptions1, darkthemeimagelistoptions2);
            assertEquals(darkthemeimagelistoptions1, darkthemeimagelistoptions1);
            assertFalse(darkthemeimagelistoptions1.equals(null));
            assertNotEquals(darkthemeimagelistoptions3, darkthemeimagelistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
