// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEnrollment.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEnrollment {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEnrollment deviceenrollment1 = new DeviceEnrollment("0f67c508-db50-42bc-8f81-0d2859a73ea1",
                                                                      new Date(1559833508429L),
                                                                      new Date(1559833514953L),
                                                                      "1al4c2SBl9E1yPuf8fGIKfqhFKfJ1w6M",
                                                                      "A-g8joco:4sZhTU8A33L0indi:Z3zN57O:10LhtVM2Eu1kG8g91U14k::FKP17L1z2zEe21MydHe:97:7LGt9Hlw337v83ReG",
                                                                      new Date(1559833510672L),
                                                                      "1al4c2SBl9E1yPuf8fGIKfqhFKfJ1w6M");
            DeviceEnrollment deviceenrollment2 = deviceenrollment1.clone();
            assertNotNull(deviceenrollment1);
            assertNotNull(deviceenrollment2);
            assertNotSame(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEnrollment deviceenrollment1 = new DeviceEnrollment("8b9b8c2f-de13-42c2-8263-bc5ea93a53b9",
                                                                      new Date(1559833506118L),
                                                                      new Date(1559833512210L),
                                                                      "1al4c2SBl9E1yPuf8fGIKfqhFKfJ1w6M",
                                                                      "A-g8joco:4sZhTU8A33L0indi:Z3zN57O:10LhtVM2Eu1kG8g91U14k::FKP17L1z2zEe21MydHe:97:7LGt9Hlw337v83ReG",
                                                                      new Date(1559833513698L),
                                                                      "1al4c2SBl9E1yPuf8fGIKfqhFKfJ1w6M");
            DeviceEnrollment deviceenrollment2 = new DeviceEnrollment("8b9b8c2f-de13-42c2-8263-bc5ea93a53b9",
                                                                      new Date(1559833506118L),
                                                                      new Date(1559833512210L),
                                                                      "1al4c2SBl9E1yPuf8fGIKfqhFKfJ1w6M",
                                                                      "A-g8joco:4sZhTU8A33L0indi:Z3zN57O:10LhtVM2Eu1kG8g91U14k::FKP17L1z2zEe21MydHe:97:7LGt9Hlw337v83ReG",
                                                                      new Date(1559833513698L),
                                                                      "1al4c2SBl9E1yPuf8fGIKfqhFKfJ1w6M");
            assertNotNull(deviceenrollment1);
            assertNotNull(deviceenrollment2);
            assertNotSame(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2.hashCode(), deviceenrollment1.hashCode());
            int hashCode = deviceenrollment1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceenrollment1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEnrollment deviceenrollment = new DeviceEnrollment("f340af44-95f0-4ccf-8284-21716f696a53",
                                                                 new Date(1559833509706L), new Date(1559833510672L),
                                                                 "1al4c2SBl9E1yPuf8fGIKfqhFKfJ1w6M",
                                                                 "A-g8joco:4sZhTU8A33L0indi:Z3zN57O:10LhtVM2Eu1kG8g91U14k::FKP17L1z2zEe21MydHe:97:7LGt9Hlw337v83ReG",
                                                                 new Date(1559833506037L),
                                                                 "1al4c2SBl9E1yPuf8fGIKfqhFKfJ1w6M");
        assertTrue(deviceenrollment.isValid());
        DeviceEnrollment deviceenrollmentInvalid = new DeviceEnrollment("6bf46a0a-e7e3-4ee3-b926-e7f378619f6e",
                                                                        new Date(1559833505607L),
                                                                        new Date(1559833515249L),
                                                                        "H'7g3\u001aⳗi]LLjHo諰L3exmQH<75n;\u0017gOexჅ5Tg3ᄜkHbteCxHQ5\u001ebH3Lt5p\u001bxbO>HCC",
                                                                        null, new Date(1559833509888L),
                                                                        "H'7g3\u001aⳗi]LLjHo諰L3exmQH<75n;\u0017gOexჅ5Tg3ᄜkHbteCxHQ5\u001ebH3Lt5p\u001bxbO>HCC");
        assertFalse(deviceenrollmentInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEnrollment deviceenrollment1 = new DeviceEnrollment("a7652b51-3a26-4e1e-8777-9267a877de85",
                                                                      new Date(1559833514160L),
                                                                      new Date(1559833508235L),
                                                                      "1al4c2SBl9E1yPuf8fGIKfqhFKfJ1w6M",
                                                                      "A-g8joco:4sZhTU8A33L0indi:Z3zN57O:10LhtVM2Eu1kG8g91U14k::FKP17L1z2zEe21MydHe:97:7LGt9Hlw337v83ReG",
                                                                      new Date(1559833514350L),
                                                                      "1al4c2SBl9E1yPuf8fGIKfqhFKfJ1w6M");
            DeviceEnrollment deviceenrollment2 = new DeviceEnrollment("a7652b51-3a26-4e1e-8777-9267a877de85",
                                                                      new Date(1559833514160L),
                                                                      new Date(1559833508235L),
                                                                      "1al4c2SBl9E1yPuf8fGIKfqhFKfJ1w6M",
                                                                      "A-g8joco:4sZhTU8A33L0indi:Z3zN57O:10LhtVM2Eu1kG8g91U14k::FKP17L1z2zEe21MydHe:97:7LGt9Hlw337v83ReG",
                                                                      new Date(1559833514350L),
                                                                      "1al4c2SBl9E1yPuf8fGIKfqhFKfJ1w6M");
            DeviceEnrollment deviceenrollment3 = new DeviceEnrollment("ad65e908-3ee4-4ba7-b3a6-cfd93e5785ac",
                                                                      new Date(1559833513395L),
                                                                      new Date(1559833506645L),
                                                                      "1al4c2SBl9E1yPuf8fGIKfqhFKfJ1w6M",
                                                                      "A-g8joco:4sZhTU8A33L0indi:Z3zN57O:10LhtVM2Eu1kG8g91U14k::FKP17L1z2zEe21MydHe:97:7LGt9Hlw337v83ReG",
                                                                      new Date(1559833514697L),
                                                                      "1al4c2SBl9E1yPuf8fGIKfqhFKfJ1w6M");
            assertNotNull(deviceenrollment1);
            assertNotNull(deviceenrollment2);
            assertNotNull(deviceenrollment3);
            assertNotSame(deviceenrollment2, deviceenrollment1);
            assertNotSame(deviceenrollment3, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment1, deviceenrollment2);
            assertEquals(deviceenrollment1, deviceenrollment1);
            assertFalse(deviceenrollment1.equals(null));
            assertNotEquals(deviceenrollment3, deviceenrollment1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
