// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantApiKey.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantApiKey {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("50c4d27a9ffc08ee2efd6a9c2bd4a4d8",
                                                                   new Date(1559833507698L), 67,
                                                                   "50c4d27a9ffc08ee2efd6a9c2bd4a4d8",
                                                                   "7d483668-33b8-4d2a-918c-76564b17f5ef", -101,
                                                                   "1796b710-c414-425a-8c7c-a64ce60f32cb",
                                                                   "50c4d27a9ffc08ee2efd6a9c2bd4a4d8",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1559833513515L));
            SubtenantApiKey subtenantapikey2 = subtenantapikey1.clone();
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("50c4d27a9ffc08ee2efd6a9c2bd4a4d8",
                                                                   new Date(1559833506961L), -36,
                                                                   "50c4d27a9ffc08ee2efd6a9c2bd4a4d8",
                                                                   "831b4223-d841-4da6-91c9-274020c0ba44", -5,
                                                                   "ace9fc85-ad35-49b7-bbdf-b1a59e04f3c5",
                                                                   "50c4d27a9ffc08ee2efd6a9c2bd4a4d8",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1559833505595L));
            SubtenantApiKey subtenantapikey2 = new SubtenantApiKey("50c4d27a9ffc08ee2efd6a9c2bd4a4d8",
                                                                   new Date(1559833506961L), -36,
                                                                   "50c4d27a9ffc08ee2efd6a9c2bd4a4d8",
                                                                   "831b4223-d841-4da6-91c9-274020c0ba44", -5,
                                                                   "ace9fc85-ad35-49b7-bbdf-b1a59e04f3c5",
                                                                   "50c4d27a9ffc08ee2efd6a9c2bd4a4d8",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1559833505595L));
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2.hashCode(), subtenantapikey1.hashCode());
            int hashCode = subtenantapikey1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantapikey1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantApiKey subtenantapikey = new SubtenantApiKey("50c4d27a9ffc08ee2efd6a9c2bd4a4d8",
                                                              new Date(1559833505566L), -121,
                                                              "50c4d27a9ffc08ee2efd6a9c2bd4a4d8",
                                                              "2937d739-0650-4c5c-b577-11cee6342898", -40,
                                                              "0e6e62a7-b930-4759-9641-5cffbbbd7a10",
                                                              "50c4d27a9ffc08ee2efd6a9c2bd4a4d8",
                                                              SubtenantApiKeyStatus.getDefault(),
                                                              new Date(1559833512153L));
        assertTrue(subtenantapikey.isValid());
        SubtenantApiKey subtenantapikeyInvalid = new SubtenantApiKey(null, new Date(1559833505651L), 91,
                                                                     "13Z3@ëœ¼D,Rá¸ª3ä¼°ç¾™P3ë¢?-è™?31%à²ªDç—ªí—?_\u0003êª¯\u001fà«½1Wåª‰ç»¥[3<\u0007ì? æµ™11\u00061313#\u0016113_ä¤?C3é…©31æ¿˜U111",
                                                                     "fce93ef7-9784-46d6-bc4e-d1b40d16a991", 36, null,
                                                                     "13Z3@ëœ¼D,Rá¸ª3ä¼°ç¾™P3ë¢?-è™?31%à²ªDç—ªí—?_\u0003êª¯\u001fà«½1Wåª‰ç»¥[3<\u0007ì? æµ™11\u00061313#\u0016113_ä¤?C3é…©31æ¿˜U111",
                                                                     SubtenantApiKeyStatus.getDefault(),
                                                                     new Date(1559833507811L));
        assertFalse(subtenantapikeyInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("50c4d27a9ffc08ee2efd6a9c2bd4a4d8",
                                                                   new Date(1559833507029L), 97,
                                                                   "50c4d27a9ffc08ee2efd6a9c2bd4a4d8",
                                                                   "9968dea5-7037-4459-ac67-44828f35f6f4", 74,
                                                                   "39f24ce3-dbd6-4d9d-aa6c-cf82e7481c6c",
                                                                   "50c4d27a9ffc08ee2efd6a9c2bd4a4d8",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1559833509097L));
            SubtenantApiKey subtenantapikey2 = new SubtenantApiKey("50c4d27a9ffc08ee2efd6a9c2bd4a4d8",
                                                                   new Date(1559833507029L), 97,
                                                                   "50c4d27a9ffc08ee2efd6a9c2bd4a4d8",
                                                                   "9968dea5-7037-4459-ac67-44828f35f6f4", 74,
                                                                   "39f24ce3-dbd6-4d9d-aa6c-cf82e7481c6c",
                                                                   "50c4d27a9ffc08ee2efd6a9c2bd4a4d8",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1559833509097L));
            SubtenantApiKey subtenantapikey3 = new SubtenantApiKey("50c4d27a9ffc08ee2efd6a9c2bd4a4d8",
                                                                   new Date(1559833514720L), 125,
                                                                   "50c4d27a9ffc08ee2efd6a9c2bd4a4d8",
                                                                   "794e5242-d07c-4ac1-9a50-42c2663493d4", -84,
                                                                   "35fef4a2-3c07-481b-8940-72e7dd0de862",
                                                                   "50c4d27a9ffc08ee2efd6a9c2bd4a4d8",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1559833505710L));
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotNull(subtenantapikey3);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertNotSame(subtenantapikey3, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey1, subtenantapikey2);
            assertEquals(subtenantapikey1, subtenantapikey1);
            assertFalse(subtenantapikey1.equals(null));
            assertNotEquals(subtenantapikey3, subtenantapikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
