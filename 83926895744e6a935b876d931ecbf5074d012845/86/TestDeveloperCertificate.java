// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.security.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeveloperCertificate.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeveloperCertificate {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("40ebf1de-9323-4a2a-8697-a130c4a26197",
                                                                                  "87b0ff16-0001-4280-b99c-119e0e8aa3e3",
                                                                                  new Date(1559833513580L),
                                                                                  "d18489b8-0ca0-41b6-820a-f1826b14c914",
                                                                                  "0f1dc8ac-33a3-4949-83da-b0da368de2a1",
                                                                                  "84e425da-ebb4-4f8f-a6c9-61a08516727e",
                                                                                  "1a8b2522-e17c-4da2-be8d-11605e9b6d45",
                                                                                  "70f5a920-2af0-40b9-9896-7a81d78596ea");
            DeveloperCertificate developercertificate2 = developercertificate1.clone();
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("79034d51-6a6c-4c94-9834-5dec666f1b88",
                                                                                  "d7d0b617-f862-436c-a82b-7daa0ddfb624",
                                                                                  new Date(1559833513948L),
                                                                                  "55a00274-5770-437e-9272-08555bd88baa",
                                                                                  "7c51eae0-0383-44eb-93bf-2d0d70a241fd",
                                                                                  "f88bb146-cd06-4bd0-8eac-85edff1d7193",
                                                                                  "ee41bf63-d190-4272-913e-6f57012e4062",
                                                                                  "9eb9d2c2-420f-4996-8afc-0e869ac783df");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("79034d51-6a6c-4c94-9834-5dec666f1b88",
                                                                                  "d7d0b617-f862-436c-a82b-7daa0ddfb624",
                                                                                  new Date(1559833513948L),
                                                                                  "55a00274-5770-437e-9272-08555bd88baa",
                                                                                  "7c51eae0-0383-44eb-93bf-2d0d70a241fd",
                                                                                  "f88bb146-cd06-4bd0-8eac-85edff1d7193",
                                                                                  "ee41bf63-d190-4272-913e-6f57012e4062",
                                                                                  "9eb9d2c2-420f-4996-8afc-0e869ac783df");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2.hashCode(), developercertificate1.hashCode());
            int hashCode = developercertificate1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, developercertificate1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeveloperCertificate developercertificate = new DeveloperCertificate("d6730b30-532a-442f-ae80-49fc250efad5",
                                                                             "08c7ac11-5eff-4a32-a217-a1c2bf361147",
                                                                             new Date(1559833509865L),
                                                                             "9dfaf8be-4d65-40b3-b6c1-679efd29725d",
                                                                             "52b4d519-12af-4b82-9694-2da24e27862f",
                                                                             "39209b9f-9aad-44e6-9482-5309b8fbc8c6",
                                                                             "6decdd1a-59ce-479f-85cd-1cd06fa2a56d",
                                                                             "4158ceaf-1978-47b4-8c66-7ec7802a3235");
        assertTrue(developercertificate.isValid());
        DeveloperCertificate developercertificateInvalid = new DeveloperCertificate("cb44a752-dfca-47c9-879b-d2fef81b0e6c",
                                                                                    "76ad6970-b2ac-45ab-8863-157053d99c1b",
                                                                                    new Date(1559833505920L),
                                                                                    "0c70defe-43cf-4264-9da9-9f6f28b61b4e",
                                                                                    "acbb4e03-5456-4c49-9027-67936a49b605",
                                                                                    "dc12ea4f-04d1-41eb-938d-de01475e63c3",
                                                                                    null,
                                                                                    "501bb2a9-d664-4093-8d94-df7167fcfc26");
        assertFalse(developercertificateInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("e8fc2179-cbd2-404b-bf7a-73464ba939ce",
                                                                                  "5d3b90ee-24b8-47ac-8949-2a85467dd23a",
                                                                                  new Date(1559833506131L),
                                                                                  "2551f711-54ad-4af2-9ffc-e68b248d63d5",
                                                                                  "e21f7e3f-3e18-43ee-8b26-3ad9307b8047",
                                                                                  "9011e93a-f191-45a5-b2b6-1dcf10ac3a27",
                                                                                  "6d2faea1-ed64-4ecb-9388-ff0b7d8821b8",
                                                                                  "0f4f76ad-34d1-43cd-98e5-22fdd2998b59");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("e8fc2179-cbd2-404b-bf7a-73464ba939ce",
                                                                                  "5d3b90ee-24b8-47ac-8949-2a85467dd23a",
                                                                                  new Date(1559833506131L),
                                                                                  "2551f711-54ad-4af2-9ffc-e68b248d63d5",
                                                                                  "e21f7e3f-3e18-43ee-8b26-3ad9307b8047",
                                                                                  "9011e93a-f191-45a5-b2b6-1dcf10ac3a27",
                                                                                  "6d2faea1-ed64-4ecb-9388-ff0b7d8821b8",
                                                                                  "0f4f76ad-34d1-43cd-98e5-22fdd2998b59");
            DeveloperCertificate developercertificate3 = new DeveloperCertificate("14b28df0-3613-4af8-88e4-c2670131e77b",
                                                                                  "f78b9f81-ab69-4a86-87f1-678cef051df0",
                                                                                  new Date(1559833505962L),
                                                                                  "604cf71a-3534-4496-932c-078a5fc2811b",
                                                                                  "64629042-28d0-4488-ba4a-024c83c61772",
                                                                                  "b1eb7d8a-8051-4aef-b8f4-94597a7424fa",
                                                                                  "fe897d1a-2c87-453a-a388-068da8c613e1",
                                                                                  "d25c7891-855e-44b9-9dc7-49c26ac1a3df");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotNull(developercertificate3);
            assertNotSame(developercertificate2, developercertificate1);
            assertNotSame(developercertificate3, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate1, developercertificate2);
            assertEquals(developercertificate1, developercertificate1);
            assertFalse(developercertificate1.equals(null));
            assertNotEquals(developercertificate3, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
