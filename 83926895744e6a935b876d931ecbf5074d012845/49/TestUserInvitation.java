// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model UserInvitation.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestUserInvitation {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("50c4d27a9ffc08ee2efd6a9c2bd4a4d8",
                                                                new Date(1559833505940L), "9d7af.c9bad@9be9d.me",
                                                                new Date(1559833506246L),
                                                                "50c4d27a9ffc08ee2efd6a9c2bd4a4d8", null,
                                                                new Date(1559833513803L),
                                                                "50c4d27a9ffc08ee2efd6a9c2bd4a4d8");
            UserInvitation userinvitation2 = userinvitation1.clone();
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotSame(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("50c4d27a9ffc08ee2efd6a9c2bd4a4d8",
                                                                new Date(1559833505592L), "9bf9b.40bbe@7a4d1.fr",
                                                                new Date(1559833509551L),
                                                                "50c4d27a9ffc08ee2efd6a9c2bd4a4d8", null,
                                                                new Date(1559833512328L),
                                                                "50c4d27a9ffc08ee2efd6a9c2bd4a4d8");
            UserInvitation userinvitation2 = new UserInvitation("50c4d27a9ffc08ee2efd6a9c2bd4a4d8",
                                                                new Date(1559833505592L), "9bf9b.40bbe@7a4d1.fr",
                                                                new Date(1559833509551L),
                                                                "50c4d27a9ffc08ee2efd6a9c2bd4a4d8", null,
                                                                new Date(1559833512328L),
                                                                "50c4d27a9ffc08ee2efd6a9c2bd4a4d8");
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotSame(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation2.hashCode(), userinvitation1.hashCode());
            int hashCode = userinvitation1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, userinvitation1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        UserInvitation userinvitation = new UserInvitation("50c4d27a9ffc08ee2efd6a9c2bd4a4d8", new Date(1559833510558L),
                                                           "a1df4.6bb69@1fcf2.me", new Date(1559833509708L),
                                                           "50c4d27a9ffc08ee2efd6a9c2bd4a4d8", null,
                                                           new Date(1559833515109L),
                                                           "50c4d27a9ffc08ee2efd6a9c2bd4a4d8");
        assertTrue(userinvitation.isValid());
        UserInvitation userinvitationInvalid = new UserInvitation("13Z3@ëœ¼D,Rá¸ª3ä¼°ç¾™P3ë¢?-è™?31%à²ªDç—ªí—?_\u0003êª¯\u001fà«½1Wåª‰ç»¥[3<\u0007ì? æµ™11\u00061313#\u0016113_ä¤?C3é…©31æ¿˜U111",
                                                                  new Date(1559833514112L), null,
                                                                  new Date(1559833512347L),
                                                                  "13Z3@ëœ¼D,Rá¸ª3ä¼°ç¾™P3ë¢?-è™?31%à²ªDç—ªí—?_\u0003êª¯\u001fà«½1Wåª‰ç»¥[3<\u0007ì? æµ™11\u00061313#\u0016113_ä¤?C3é…©31æ¿˜U111",
                                                                  null, new Date(1559833510605L),
                                                                  "13Z3@ëœ¼D,Rá¸ª3ä¼°ç¾™P3ë¢?-è™?31%à²ªDç—ªí—?_\u0003êª¯\u001fà«½1Wåª‰ç»¥[3<\u0007ì? æµ™11\u00061313#\u0016113_ä¤?C3é…©31æ¿˜U111");
        assertFalse(userinvitationInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("50c4d27a9ffc08ee2efd6a9c2bd4a4d8",
                                                                new Date(1559833512130L), "7a933.7f9ac@8a4f5.fr",
                                                                new Date(1559833507172L),
                                                                "50c4d27a9ffc08ee2efd6a9c2bd4a4d8", null,
                                                                new Date(1559833509874L),
                                                                "50c4d27a9ffc08ee2efd6a9c2bd4a4d8");
            UserInvitation userinvitation2 = new UserInvitation("50c4d27a9ffc08ee2efd6a9c2bd4a4d8",
                                                                new Date(1559833512130L), "7a933.7f9ac@8a4f5.fr",
                                                                new Date(1559833507172L),
                                                                "50c4d27a9ffc08ee2efd6a9c2bd4a4d8", null,
                                                                new Date(1559833509874L),
                                                                "50c4d27a9ffc08ee2efd6a9c2bd4a4d8");
            UserInvitation userinvitation3 = new UserInvitation("50c4d27a9ffc08ee2efd6a9c2bd4a4d8",
                                                                new Date(1559833511166L), "98708.7a9e2@b35af.me",
                                                                new Date(1559833512921L),
                                                                "50c4d27a9ffc08ee2efd6a9c2bd4a4d8", null,
                                                                new Date(1559833513962L),
                                                                "50c4d27a9ffc08ee2efd6a9c2bd4a4d8");
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotNull(userinvitation3);
            assertNotSame(userinvitation2, userinvitation1);
            assertNotSame(userinvitation3, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation1, userinvitation2);
            assertEquals(userinvitation1, userinvitation1);
            assertFalse(userinvitation1.equals(null));
            assertNotEquals(userinvitation3, userinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
