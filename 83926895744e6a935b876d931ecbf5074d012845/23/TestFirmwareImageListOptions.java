// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.deviceupdate.model;

import static org.junit.Assert.*;

import com.arm.mbed.cloud.sdk.common.Order;
import com.arm.mbed.cloud.sdk.common.listing.ListOptionsEncoder;
import com.arm.mbed.cloud.sdk.common.listing.filtering.FilterOperator;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import org.junit.Test;

/**
 * Unit tests for Model FirmwareImageListOptions.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestFirmwareImageListOptions {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            FirmwareImageListOptions firmwareimagelistoptions1 = new FirmwareImageListOptions(Integer.valueOf(-45),
                                                                                              Long.valueOf(13),
                                                                                              Order.getDefault(),
                                                                                              "4f8d52f6-068e-4562-a9c6-2fd17c60d461",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions2 = firmwareimagelistoptions1.clone();
            assertNotNull(firmwareimagelistoptions1);
            assertNotNull(firmwareimagelistoptions2);
            assertNotSame(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the filters method.
     */
    @SuppressWarnings({ "boxing", "resource" })
    @Test
    public void testFilters() {
        try {
            FirmwareImageListOptions option = new FirmwareImageListOptions().inUpdatedAts(Arrays.asList(new Date(1559833518567L),
                                                                                                        new Date(1559833515010L),
                                                                                                        new Date(1559833510188L),
                                                                                                        new Date(1559833515191L),
                                                                                                        new Date(1559833519173L),
                                                                                                        new Date(1559833519213L)))
                                                                            .notInUpdatedAts(Arrays.asList(new Date(1559833516989L),
                                                                                                           new Date(1559833512226L),
                                                                                                           new Date(1559833516063L),
                                                                                                           new Date(1559833514298L),
                                                                                                           new Date(1559833515136L),
                                                                                                           new Date(1559833515978L)))
                                                                            .lessThanUpdatedAt(new Date(1559833515243L))
                                                                            .greaterThanUpdatedAt(new Date(1559833514281L))
                                                                            .equalToName("80ca70f8-5967-41a2-8660-3d45a86daa74")
                                                                            .notEqualToName("20c53511-22a4-4dae-968a-90936ab24085")
                                                                            .inNames(Arrays.asList("e2dcf04c-abd4-4087-913f-e79bd9b40b9f",
                                                                                                   "a3d7fc23-ecb6-474d-a8b5-d7f21f5597d9",
                                                                                                   "9f8f8629-f720-49c6-8adc-a9cfc82137db",
                                                                                                   "6e7d7ccc-ad48-4fc6-9fcf-7c47e2b04b70",
                                                                                                   "ba67e481-d1e3-4f85-97e0-ef85ade7b61c",
                                                                                                   "8171d5c8-3108-41e4-a16c-c1d5a11f7114",
                                                                                                   "d7e53536-4287-4eee-8487-0ef0ccd1b021",
                                                                                                   "15c9ec6e-4072-4ba2-a36b-03a0edf27baf",
                                                                                                   "38c58932-36fd-486a-8ff3-b0da8bd58cab"))
                                                                            .notInNames(Arrays.asList("d8350ac8-80a9-406a-8da8-d3ba4b1e3d53",
                                                                                                      "fc59a433-b197-49c4-8830-88e3d34ebe86",
                                                                                                      "705ee04a-3d06-4877-897f-75c7c68fa560",
                                                                                                      "8c4065f8-d443-450d-a55d-a028ebcb3c62",
                                                                                                      "227fba31-0782-412f-8096-9195b8a64ef8"))
                                                                            .equalToDescription("2f46eed3-61f1-4d9b-ab10-757f468dcb29")
                                                                            .notEqualToDescription("6bf48664-3e4d-4abc-8dce-4937892816b5")
                                                                            .inDescriptions(Arrays.asList("c7b5b757-e54e-448b-8689-fc575049c773",
                                                                                                          "8b474025-5028-470b-b932-056a2b5c8042",
                                                                                                          "5626358a-4d72-4743-8b93-1c5fa9633267",
                                                                                                          "078878c9-c4e8-4bff-a0d0-3d7f85cb337b"))
                                                                            .notInDescriptions(Arrays.asList("349adc52-5146-40db-b3d2-778ad1c6d687",
                                                                                                             "84b91db1-db76-4956-a47c-01f5b2e2cb62",
                                                                                                             "55375707-53e3-4d86-8eb9-e2ea9b511d29",
                                                                                                             "deeb4055-1ad0-4c28-b361-15d284334c55"))
                                                                            .inCreatedAts(Arrays.asList(new Date(1559833511546L),
                                                                                                        new Date(1559833519166L),
                                                                                                        new Date(1559833516896L),
                                                                                                        new Date(1559833519646L)))
                                                                            .notInCreatedAts(Arrays.asList(new Date(1559833512642L),
                                                                                                           new Date(1559833513165L),
                                                                                                           new Date(1559833517147L),
                                                                                                           new Date(1559833510074L),
                                                                                                           new Date(1559833516623L),
                                                                                                           new Date(1559833516587L),
                                                                                                           new Date(1559833515362L),
                                                                                                           new Date(1559833517580L),
                                                                                                           new Date(1559833519476L)))
                                                                            .lessThanCreatedAt(new Date(1559833517320L))
                                                                            .greaterThanCreatedAt(new Date(1559833511418L))
                                                                            .equalToDatafileUrl("1a161f04-9c66-42e4-840f-883d62c17096")
                                                                            .notEqualToDatafileUrl("f7e446da-058c-44e9-bbfc-628e452bfa84")
                                                                            .inDatafileUrls(Arrays.asList("b16f43eb-5221-4a8e-b239-0e78e54c6d6f",
                                                                                                          "ddf2b49e-5bdb-45bb-908b-b99b14045688",
                                                                                                          "2ede13bb-da0f-4b67-a581-cae57e8ad23c",
                                                                                                          "6bb089ed-6c05-4eba-9dd6-a8360ee8a8c6",
                                                                                                          "dedbaa29-6acd-4259-986b-d10a2c2cc3ac",
                                                                                                          "f547eca2-5127-495e-a87d-c3934fa63751",
                                                                                                          "3742bbc9-479b-4aed-a726-0b341bdc1a72",
                                                                                                          "9dec687a-5930-4024-9d23-fa1e0d301db0",
                                                                                                          "a1be7f1c-d0c6-4015-ab02-65e1bf6e940d"))
                                                                            .notInDatafileUrls(Arrays.asList("fe22987a-d261-4367-ba20-1e6c8269f383",
                                                                                                             "2ae7f133-8f2a-4f3e-9981-46629eeb23b8",
                                                                                                             "5833c1fb-e4f6-4416-80f0-c9980a0180da",
                                                                                                             "41f80539-ad23-45f9-9834-427cdab03c46",
                                                                                                             "00054d7b-656c-408f-bb6c-fe454922319c",
                                                                                                             "942ac6a1-41b0-45e1-a400-da513a49ddab",
                                                                                                             "1fb4ff54-7879-4256-93c1-0cbc050c1b94"))
                                                                            .equalToDatafileSize(Long.valueOf(-74))
                                                                            .notEqualToDatafileSize(Long.valueOf(28))
                                                                            .inDatafileSizes(Arrays.asList(Long.valueOf(-84),
                                                                                                           Long.valueOf(-73),
                                                                                                           Long.valueOf(114),
                                                                                                           Long.valueOf(22),
                                                                                                           Long.valueOf(66),
                                                                                                           Long.valueOf(69),
                                                                                                           Long.valueOf(-69),
                                                                                                           Long.valueOf(12),
                                                                                                           Long.valueOf(-39)))
                                                                            .notInDatafileSizes(Arrays.asList(Long.valueOf(41),
                                                                                                              Long.valueOf(-3),
                                                                                                              Long.valueOf(-71),
                                                                                                              Long.valueOf(71),
                                                                                                              Long.valueOf(-87)))
                                                                            .equalToDatafileChecksum("63a1aa79-3ebc-4bda-a5e7-a980dcf36a5c")
                                                                            .notEqualToDatafileChecksum("02ed9371-afde-4b4a-bc34-82101a59692f")
                                                                            .inDatafileChecksums(Arrays.asList("7e59e057-57a8-413a-9e01-3b06245e732b",
                                                                                                               "6b831cc5-cb24-45ca-b083-3ccb3acd9aea"))
                                                                            .notInDatafileChecksums(Arrays.asList("065b2da6-3c3f-4ed5-90e8-6d3cfb983c7c",
                                                                                                                  "42f5986a-b398-4dc0-ad6f-b48ddde235d6"))
                                                                            .equalToId("f028af62-3234-4a39-8b23-ebebcbb8c103")
                                                                            .notEqualToId("49381cc5-694a-47d3-b85a-a7b112860b07")
                                                                            .inIds(Arrays.asList("2b3ba220-d227-4d65-b464-92fde6168eed",
                                                                                                 "248f025c-ce14-461d-a0be-eb233d41f886",
                                                                                                 "354f80af-cde0-4cd1-9e4e-036b0539fee8",
                                                                                                 "9657a462-037d-4af4-b65c-ead2d450eef8",
                                                                                                 "d1a81bfd-9e10-4fa1-b730-9a11a91a8a17",
                                                                                                 "582e7dde-cac7-4b9f-973f-1625c35a3a3b",
                                                                                                 "fec8c65e-bbc7-4220-a667-c4f7f0f8cfbc",
                                                                                                 "c97c53cd-72fb-44ca-8040-e47305838655",
                                                                                                 "e8596381-de80-415c-93b6-5fa219b08333"))
                                                                            .notInIds(Arrays.asList("c32c060a-6a42-4eff-a3d0-e3c6c634e353",
                                                                                                    "b4161b3a-4650-4cc7-826b-ed439884e263"));
            assertTrue(option.hasFilters());
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559833518567L), new Date(1559833515010L), new Date(1559833510188L),
                                       new Date(1559833515191L), new Date(1559833519173L), new Date(1559833519213L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559833516989L), new Date(1559833512226L), new Date(1559833516063L),
                                       new Date(1559833514298L), new Date(1559833515136L), new Date(1559833515978L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.LESS_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1559833515243L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1559833514281L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("80ca70f8-5967-41a2-8660-3d45a86daa74",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("20c53511-22a4-4dae-968a-90936ab24085",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("e2dcf04c-abd4-4087-913f-e79bd9b40b9f", "a3d7fc23-ecb6-474d-a8b5-d7f21f5597d9",
                                       "9f8f8629-f720-49c6-8adc-a9cfc82137db", "6e7d7ccc-ad48-4fc6-9fcf-7c47e2b04b70",
                                       "ba67e481-d1e3-4f85-97e0-ef85ade7b61c", "8171d5c8-3108-41e4-a16c-c1d5a11f7114",
                                       "d7e53536-4287-4eee-8487-0ef0ccd1b021", "15c9ec6e-4072-4ba2-a36b-03a0edf27baf",
                                       "38c58932-36fd-486a-8ff3-b0da8bd58cab"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("d8350ac8-80a9-406a-8da8-d3ba4b1e3d53", "fc59a433-b197-49c4-8830-88e3d34ebe86",
                                       "705ee04a-3d06-4877-897f-75c7c68fa560", "8c4065f8-d443-450d-a55d-a028ebcb3c62",
                                       "227fba31-0782-412f-8096-9195b8a64ef8"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("2f46eed3-61f1-4d9b-ab10-757f468dcb29",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("6bf48664-3e4d-4abc-8dce-4937892816b5",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("c7b5b757-e54e-448b-8689-fc575049c773", "8b474025-5028-470b-b932-056a2b5c8042",
                                       "5626358a-4d72-4743-8b93-1c5fa9633267", "078878c9-c4e8-4bff-a0d0-3d7f85cb337b"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("349adc52-5146-40db-b3d2-778ad1c6d687", "84b91db1-db76-4956-a47c-01f5b2e2cb62",
                                       "55375707-53e3-4d86-8eb9-e2ea9b511d29", "deeb4055-1ad0-4c28-b361-15d284334c55"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559833511546L), new Date(1559833519166L), new Date(1559833516896L),
                                       new Date(1559833519646L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559833512642L), new Date(1559833513165L), new Date(1559833517147L),
                                       new Date(1559833510074L), new Date(1559833516623L), new Date(1559833516587L),
                                       new Date(1559833515362L), new Date(1559833517580L), new Date(1559833519476L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.LESS_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1559833517320L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1559833511418L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("1a161f04-9c66-42e4-840f-883d62c17096",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("f7e446da-058c-44e9-bbfc-628e452bfa84",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("b16f43eb-5221-4a8e-b239-0e78e54c6d6f", "ddf2b49e-5bdb-45bb-908b-b99b14045688",
                                       "2ede13bb-da0f-4b67-a581-cae57e8ad23c", "6bb089ed-6c05-4eba-9dd6-a8360ee8a8c6",
                                       "dedbaa29-6acd-4259-986b-d10a2c2cc3ac", "f547eca2-5127-495e-a87d-c3934fa63751",
                                       "3742bbc9-479b-4aed-a726-0b341bdc1a72", "9dec687a-5930-4024-9d23-fa1e0d301db0",
                                       "a1be7f1c-d0c6-4015-ab02-65e1bf6e940d"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("fe22987a-d261-4367-ba20-1e6c8269f383", "2ae7f133-8f2a-4f3e-9981-46629eeb23b8",
                                       "5833c1fb-e4f6-4416-80f0-c9980a0180da", "41f80539-ad23-45f9-9834-427cdab03c46",
                                       "00054d7b-656c-408f-bb6c-fe454922319c", "942ac6a1-41b0-45e1-a400-da513a49ddab",
                                       "1fb4ff54-7879-4256-93c1-0cbc050c1b94"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(-74),
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    Long.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(28),
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                       Long.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(-84), Long.valueOf(-73), Long.valueOf(114), Long.valueOf(22),
                                       Long.valueOf(66), Long.valueOf(69), Long.valueOf(-69), Long.valueOf(12),
                                       Long.valueOf(-39)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(41), Long.valueOf(-3), Long.valueOf(-71), Long.valueOf(71),
                                       Long.valueOf(-87)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                        FilterOperator.EQUAL));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals("63a1aa79-3ebc-4bda-a5e7-a980dcf36a5c",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals("02ed9371-afde-4b4a-bc34-82101a59692f",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM, FilterOperator.IN));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals(Arrays.asList("7e59e057-57a8-413a-9e01-3b06245e732b", "6b831cc5-cb24-45ca-b083-3ccb3acd9aea"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                        FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals(Arrays.asList("065b2da6-3c3f-4ed5-90e8-6d3cfb983c7c", "42f5986a-b398-4dc0-ad6f-b48ddde235d6"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("f028af62-3234-4a39-8b23-ebebcbb8c103",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("49381cc5-694a-47d3-b85a-a7b112860b07",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("2b3ba220-d227-4d65-b464-92fde6168eed", "248f025c-ce14-461d-a0be-eb233d41f886",
                                       "354f80af-cde0-4cd1-9e4e-036b0539fee8", "9657a462-037d-4af4-b65c-ead2d450eef8",
                                       "d1a81bfd-9e10-4fa1-b730-9a11a91a8a17", "582e7dde-cac7-4b9f-973f-1625c35a3a3b",
                                       "fec8c65e-bbc7-4220-a667-c4f7f0f8cfbc", "c97c53cd-72fb-44ca-8040-e47305838655",
                                       "e8596381-de80-415c-93b6-5fa219b08333"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, List.class,
                                                                 option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("c32c060a-6a42-4eff-a3d0-e3c6c634e353", "b4161b3a-4650-4cc7-826b-ed439884e263"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID,
                                                                    List.class, option));
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            FirmwareImageListOptions firmwareimagelistoptions1 = new FirmwareImageListOptions(Integer.valueOf(69),
                                                                                              Long.valueOf(113),
                                                                                              Order.getDefault(),
                                                                                              "0481f1f9-ccb8-4546-a9ee-268008788bd5",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions2 = new FirmwareImageListOptions(Integer.valueOf(69),
                                                                                              Long.valueOf(113),
                                                                                              Order.getDefault(),
                                                                                              "0481f1f9-ccb8-4546-a9ee-268008788bd5",
                                                                                              null, null);
            assertNotNull(firmwareimagelistoptions1);
            assertNotNull(firmwareimagelistoptions2);
            assertNotSame(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2.hashCode(), firmwareimagelistoptions1.hashCode());
            int hashCode = firmwareimagelistoptions1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, firmwareimagelistoptions1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            FirmwareImageListOptions firmwareimagelistoptions1 = new FirmwareImageListOptions(Integer.valueOf(-58),
                                                                                              Long.valueOf(-45),
                                                                                              Order.getDefault(),
                                                                                              "5152cd8f-8092-4839-b5d8-660b834e9972",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions2 = new FirmwareImageListOptions(Integer.valueOf(-58),
                                                                                              Long.valueOf(-45),
                                                                                              Order.getDefault(),
                                                                                              "5152cd8f-8092-4839-b5d8-660b834e9972",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions3 = new FirmwareImageListOptions(Integer.valueOf(86),
                                                                                              Long.valueOf(50),
                                                                                              Order.getDefault(),
                                                                                              "35be884f-107b-4785-8651-536d79e05ea7",
                                                                                              null, null);
            assertNotNull(firmwareimagelistoptions1);
            assertNotNull(firmwareimagelistoptions2);
            assertNotNull(firmwareimagelistoptions3);
            assertNotSame(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertNotSame(firmwareimagelistoptions3, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions1, firmwareimagelistoptions2);
            assertEquals(firmwareimagelistoptions1, firmwareimagelistoptions1);
            assertFalse(firmwareimagelistoptions1.equals(null));
            assertNotEquals(firmwareimagelistoptions3, firmwareimagelistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
