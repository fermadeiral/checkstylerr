[
    {
        "line": "27",
        "severity": "error",
        "message": "'package' should be separated from previous statement.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
    },
    {
        "line": "35",
        "severity": "error",
        "message": "Wrong lexicographical order for 'oasis.names.tc.xacml._2_0.context.schema.os.DecisionType' import. Should be before 'oasis.names.tc.xacml._2_0.context.schema.os.ResponseType'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.CustomImportOrderCheck"
    },
    {
        "line": "38",
        "severity": "error",
        "message": "Wrong lexicographical order for 'org.jmock.Expectations' import. Should be before 'org.jmock.Mockery'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.CustomImportOrderCheck"
    },
    {
        "line": "42",
        "severity": "error",
        "message": "'import' should be separated from previous statement.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
    },
    {
        "line": "42",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - org.junit.Assert.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "42",
        "severity": "error",
        "message": "Wrong lexicographical order for 'org.junit.Assert.*' import. Should be before 'org.junit.Test'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.CustomImportOrderCheck"
    },
    {
        "line": "50",
        "column": "13",
        "severity": "error",
        "message": "Variable 'mockery' must be private and have accessor methods.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck"
    },
    {
        "line": "52",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "66",
        "column": "17",
        "severity": "error",
        "message": "Name 'testValidatePolicyResponse_null_PolicyResponse_returns_false' must match pattern '^[a-z][a-zA-Z0-9]*$'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.naming.MethodNameCheck"
    },
    {
        "line": "87",
        "column": "17",
        "severity": "error",
        "message": "Name 'testValidatePolicyResponse_null_Result_returns_false' must match pattern '^[a-z][a-zA-Z0-9]*$'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.naming.MethodNameCheck"
    },
    {
        "line": "111",
        "column": "17",
        "severity": "error",
        "message": "Name 'testValidatePolicyResponse_DecisionType_not_PERMIT_returns_false' must match pattern '^[a-z][a-zA-Z0-9]*$'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.naming.MethodNameCheck"
    },
    {
        "line": "140",
        "column": "17",
        "severity": "error",
        "message": "Name 'testValidatePolicyResponse_DecisionType_PERMIT_returns_true' must match pattern '^[a-z][a-zA-Z0-9]*$'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.naming.MethodNameCheck"
    }
]