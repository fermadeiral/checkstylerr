[
    {
        "line": "27",
        "severity": "error",
        "message": "'package' should be separated from previous statement.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
    },
    {
        "line": "36",
        "severity": "error",
        "message": "Wrong lexicographical order for 'gov.hhs.fha.nhinc.callback.SamlConstants' import. Should be before 'org.mockito.Mockito.when'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.CustomImportOrderCheck"
    },
    {
        "line": "37",
        "severity": "error",
        "message": "Wrong lexicographical order for 'gov.hhs.fha.nhinc.nhinclib.NhincConstants.GATEWAY_API_LEVEL' import. Should be before 'org.mockito.Mockito.when'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.CustomImportOrderCheck"
    },
    {
        "line": "38",
        "severity": "error",
        "message": "Wrong lexicographical order for 'gov.hhs.fha.nhinc.properties.PropertyAccessException' import. Should be before 'org.mockito.Mockito.when'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.CustomImportOrderCheck"
    },
    {
        "line": "39",
        "severity": "error",
        "message": "Wrong lexicographical order for 'gov.hhs.fha.nhinc.properties.PropertyAccessor' import. Should be before 'org.mockito.Mockito.when'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.CustomImportOrderCheck"
    },
    {
        "line": "40",
        "severity": "error",
        "message": "Wrong lexicographical order for 'java.math.BigInteger' import. Should be before 'org.mockito.Mockito.when'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.CustomImportOrderCheck"
    },
    {
        "line": "41",
        "severity": "error",
        "message": "Wrong lexicographical order for 'java.security.InvalidKeyException' import. Should be before 'org.mockito.Mockito.when'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.CustomImportOrderCheck"
    },
    {
        "line": "42",
        "severity": "error",
        "message": "Wrong lexicographical order for 'java.security.KeyPairGenerator' import. Should be before 'org.mockito.Mockito.when'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.CustomImportOrderCheck"
    },
    {
        "line": "43",
        "severity": "error",
        "message": "Wrong lexicographical order for 'java.security.KeyStore' import. Should be before 'org.mockito.Mockito.when'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.CustomImportOrderCheck"
    },
    {
        "line": "44",
        "severity": "error",
        "message": "Wrong lexicographical order for 'java.security.NoSuchAlgorithmException' import. Should be before 'org.mockito.Mockito.when'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.CustomImportOrderCheck"
    },
    {
        "line": "45",
        "severity": "error",
        "message": "Wrong lexicographical order for 'java.security.NoSuchProviderException' import. Should be before 'org.mockito.Mockito.when'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.CustomImportOrderCheck"
    },
    {
        "line": "46",
        "severity": "error",
        "message": "Wrong lexicographical order for 'java.security.Principal' import. Should be before 'org.mockito.Mockito.when'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.CustomImportOrderCheck"
    },
    {
        "line": "47",
        "severity": "error",
        "message": "Wrong lexicographical order for 'java.security.PrivateKey' import. Should be before 'org.mockito.Mockito.when'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.CustomImportOrderCheck"
    },
    {
        "line": "48",
        "severity": "error",
        "message": "Wrong lexicographical order for 'java.security.PublicKey' import. Should be before 'org.mockito.Mockito.when'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.CustomImportOrderCheck"
    },
    {
        "line": "49",
        "severity": "error",
        "message": "Wrong lexicographical order for 'java.security.SignatureException' import. Should be before 'org.mockito.Mockito.when'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.CustomImportOrderCheck"
    },
    {
        "line": "50",
        "severity": "error",
        "message": "Wrong lexicographical order for 'java.security.cert.CertificateEncodingException' import. Should be before 'org.mockito.Mockito.when'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.CustomImportOrderCheck"
    },
    {
        "line": "51",
        "severity": "error",
        "message": "Wrong lexicographical order for 'java.security.cert.CertificateException' import. Should be before 'org.mockito.Mockito.when'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.CustomImportOrderCheck"
    },
    {
        "line": "52",
        "severity": "error",
        "message": "Wrong lexicographical order for 'java.security.cert.CertificateExpiredException' import. Should be before 'org.mockito.Mockito.when'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.CustomImportOrderCheck"
    },
    {
        "line": "53",
        "severity": "error",
        "message": "Wrong lexicographical order for 'java.security.cert.CertificateNotYetValidException' import. Should be before 'org.mockito.Mockito.when'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.CustomImportOrderCheck"
    },
    {
        "line": "54",
        "severity": "error",
        "message": "Wrong lexicographical order for 'java.security.cert.X509Certificate' import. Should be before 'org.mockito.Mockito.when'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.CustomImportOrderCheck"
    },
    {
        "line": "55",
        "severity": "error",
        "message": "Wrong lexicographical order for 'java.security.interfaces.RSAPublicKey' import. Should be before 'org.mockito.Mockito.when'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.CustomImportOrderCheck"
    },
    {
        "line": "56",
        "severity": "error",
        "message": "Wrong lexicographical order for 'java.util.ArrayList' import. Should be before 'org.mockito.Mockito.when'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.CustomImportOrderCheck"
    },
    {
        "line": "57",
        "severity": "error",
        "message": "Wrong lexicographical order for 'java.util.Collections' import. Should be before 'org.mockito.Mockito.when'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.CustomImportOrderCheck"
    },
    {
        "line": "58",
        "severity": "error",
        "message": "Wrong lexicographical order for 'java.util.Date' import. Should be before 'org.mockito.Mockito.when'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.CustomImportOrderCheck"
    },
    {
        "line": "59",
        "severity": "error",
        "message": "Wrong lexicographical order for 'java.util.HashMap' import. Should be before 'org.mockito.Mockito.when'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.CustomImportOrderCheck"
    },
    {
        "line": "60",
        "severity": "error",
        "message": "Wrong lexicographical order for 'java.util.List' import. Should be before 'org.mockito.Mockito.when'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.CustomImportOrderCheck"
    },
    {
        "line": "61",
        "severity": "error",
        "message": "Wrong lexicographical order for 'java.util.Map' import. Should be before 'org.mockito.Mockito.when'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.CustomImportOrderCheck"
    },
    {
        "line": "62",
        "severity": "error",
        "message": "Wrong lexicographical order for 'java.util.Set' import. Should be before 'org.mockito.Mockito.when'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.CustomImportOrderCheck"
    },
    {
        "line": "63",
        "severity": "error",
        "message": "Wrong lexicographical order for 'org.joda.time.DateTime' import. Should be before 'org.mockito.Mockito.when'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.CustomImportOrderCheck"
    },
    {
        "line": "64",
        "severity": "error",
        "message": "Wrong lexicographical order for 'org.joda.time.DateTimeZone' import. Should be before 'org.mockito.Mockito.when'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.CustomImportOrderCheck"
    },
    {
        "line": "65",
        "severity": "error",
        "message": "Wrong lexicographical order for 'org.junit.BeforeClass' import. Should be before 'org.mockito.Mockito.when'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.CustomImportOrderCheck"
    },
    {
        "line": "66",
        "severity": "error",
        "message": "Wrong lexicographical order for 'org.junit.Test' import. Should be before 'org.mockito.Mockito.when'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.CustomImportOrderCheck"
    },
    {
        "line": "90",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "91",
        "column": "12",
        "severity": "error",
        "message": "'public' modifier out of order with the JLS suggestions.",
        "source": "com.puppycrawl.tools.checkstyle.checks.modifier.ModifierOrderCheck"
    },
    {
        "line": "95",
        "column": "27",
        "severity": "error",
        "message": "'512' is a magic number.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck"
    },
    {
        "line": "103",
        "severity": "error",
        "message": "At-clause should have a non-empty description.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.NonEmptyAtclauseDescriptionCheck"
    },
    {
        "line": "105",
        "column": "5",
        "severity": "error",
        "message": "Method length is 160 lines (max allowed is 150).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.MethodLengthCheck"
    },
    {
        "line": "106",
        "column": "36",
        "severity": "error",
        "message": "Expected @throws tag for 'Exception'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "267",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "276",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "296",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "313",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "330",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "344",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "386",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "414",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "439",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "475",
        "column": "5",
        "severity": "error",
        "message": "Method length is 203 lines (max allowed is 150).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.MethodLengthCheck"
    }
]