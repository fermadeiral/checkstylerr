// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model ApiKey.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestApiKey {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ApiKey apikey1 = new ApiKey("5aac302d4dc51de8d52d8348d01b06c5", new Date(1567417607162L), 34, null,
                                        "5aac302d4dc51de8d52d8348d01b06c5", "0689c94f-ca4e-448e-aa38-ea94dd333c30", 19,
                                        "8eb0fef4-6372-45a9-8541-cfff8d9d511f", "5aac302d4dc51de8d52d8348d01b06c5",
                                        ApiKeyStatus.getDefault(), new Date(1567417606788L));
            ApiKey apikey2 = apikey1.clone();
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotSame(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ApiKey apikey1 = new ApiKey("5aac302d4dc51de8d52d8348d01b06c5", new Date(1567417606506L), -121, null,
                                        "5aac302d4dc51de8d52d8348d01b06c5", "2e6e938b-402b-4564-ba5a-6c74d7daca51", 64,
                                        "27475f2f-bacf-4ec8-86ff-4c619bc73801", "5aac302d4dc51de8d52d8348d01b06c5",
                                        ApiKeyStatus.getDefault(), new Date(1567417602784L));
            ApiKey apikey2 = new ApiKey("5aac302d4dc51de8d52d8348d01b06c5", new Date(1567417606506L), -121, null,
                                        "5aac302d4dc51de8d52d8348d01b06c5", "2e6e938b-402b-4564-ba5a-6c74d7daca51", 64,
                                        "27475f2f-bacf-4ec8-86ff-4c619bc73801", "5aac302d4dc51de8d52d8348d01b06c5",
                                        ApiKeyStatus.getDefault(), new Date(1567417602784L));
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotSame(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey2.hashCode(), apikey1.hashCode());
            int hashCode = apikey1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, apikey1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ApiKey apikey = new ApiKey("5aac302d4dc51de8d52d8348d01b06c5", new Date(1567417603281L), -102, null,
                                   "5aac302d4dc51de8d52d8348d01b06c5", "73527541-ac63-45db-a81a-0f70b5f5b11c", 68,
                                   "41601d3f-9458-49c4-bf23-1f3d3347362c", "5aac302d4dc51de8d52d8348d01b06c5",
                                   ApiKeyStatus.getDefault(), new Date(1567417607934L));
        assertTrue(apikey.isValid());
        ApiKey apikeyInvalid = new ApiKey("@77_7\u0015�?�\u00037\u0002A⚻7\u000e_Z7LT7-;\u000377!<\u0004+Fﭸ7?\u000f_9B\u001b拨\u0011\u0014\u0014ᬾV\b7]>:7㚧졎\f\u0001\u0011`R)7滹\u0019",
                                          new Date(1567417606100L), -68, null,
                                          "@77_7\u0015�?�\u00037\u0002A⚻7\u000e_Z7LT7-;\u000377!<\u0004+Fﭸ7?\u000f_9B\u001b拨\u0011\u0014\u0014ᬾV\b7]>:7㚧졎\f\u0001\u0011`R)7滹\u0019",
                                          "8e478814-5694-467f-8f17-082f690b228d", 104, null,
                                          "@77_7\u0015�?�\u00037\u0002A⚻7\u000e_Z7LT7-;\u000377!<\u0004+Fﭸ7?\u000f_9B\u001b拨\u0011\u0014\u0014ᬾV\b7]>:7㚧졎\f\u0001\u0011`R)7滹\u0019",
                                          ApiKeyStatus.getDefault(), new Date(1567417605368L));
        assertFalse(apikeyInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ApiKey apikey1 = new ApiKey("5aac302d4dc51de8d52d8348d01b06c5", new Date(1567417606160L), 50, null,
                                        "5aac302d4dc51de8d52d8348d01b06c5", "a1a4fa72-258b-4b6e-8b92-b5122286bf70", 96,
                                        "4336c898-263e-477c-8bfb-18fcea4c8dc0", "5aac302d4dc51de8d52d8348d01b06c5",
                                        ApiKeyStatus.getDefault(), new Date(1567417605556L));
            ApiKey apikey2 = new ApiKey("5aac302d4dc51de8d52d8348d01b06c5", new Date(1567417606160L), 50, null,
                                        "5aac302d4dc51de8d52d8348d01b06c5", "a1a4fa72-258b-4b6e-8b92-b5122286bf70", 96,
                                        "4336c898-263e-477c-8bfb-18fcea4c8dc0", "5aac302d4dc51de8d52d8348d01b06c5",
                                        ApiKeyStatus.getDefault(), new Date(1567417605556L));
            ApiKey apikey3 = new ApiKey("5aac302d4dc51de8d52d8348d01b06c5", new Date(1567417603235L), -49, null,
                                        "5aac302d4dc51de8d52d8348d01b06c5", "1416a04f-07b7-49e8-8e36-9ac7c4af35aa", 94,
                                        "508f2d59-d49b-4aea-bc73-ae6fe393e561", "5aac302d4dc51de8d52d8348d01b06c5",
                                        ApiKeyStatus.getDefault(), new Date(1567417603452L));
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotNull(apikey3);
            assertNotSame(apikey2, apikey1);
            assertNotSame(apikey3, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey1, apikey2);
            assertEquals(apikey1, apikey1);
            assertFalse(apikey1.equals(null));
            assertNotEquals(apikey3, apikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
