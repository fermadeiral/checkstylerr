// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantUser.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantUser {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("5aac302d4dc51de8d52d8348d01b06c5", null,
                                                             "15bcdb9a-f757-4aaa-9e6d-83e3f5057c10",
                                                             new Date(1567417600777L), -88, null,
                                                             "260f0.c8a4d@a03e1.fr", true,
                                                             "92536425-d7e3-497e-a495-ab17bbf065bf", null,
                                                             "5aac302d4dc51de8d52d8348d01b06c5", true, true, false,
                                                             -120, null, null, "08ade45d-8a84-4125-88c3-50c568b965b0",
                                                             -54, "e95e7b68-7b32-4e69-96d7-66593a225892",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1567417604693L), "R,_Bz_=a._8");
            SubtenantUser subtenantuser2 = subtenantuser1.clone();
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("5aac302d4dc51de8d52d8348d01b06c5", null,
                                                             "e8836b48-d784-4523-8d90-8aa4da3d3265",
                                                             new Date(1567417605759L), -16, null,
                                                             "8613b.9ec5d@eab53.me", true,
                                                             "bee15160-c5ce-4258-bc8a-fcf6a2b38440", null,
                                                             "5aac302d4dc51de8d52d8348d01b06c5", true, true, false,
                                                             -127, null, null, "9548c382-a680-4a9e-a6ca-e519c1b39958",
                                                             10, "d3c30592-7078-4836-8006-6091091ded06",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1567417609536L), "R,_Bz_=a._8");
            SubtenantUser subtenantuser2 = new SubtenantUser("5aac302d4dc51de8d52d8348d01b06c5", null,
                                                             "e8836b48-d784-4523-8d90-8aa4da3d3265",
                                                             new Date(1567417605759L), -16, null,
                                                             "8613b.9ec5d@eab53.me", true,
                                                             "bee15160-c5ce-4258-bc8a-fcf6a2b38440", null,
                                                             "5aac302d4dc51de8d52d8348d01b06c5", true, true, false,
                                                             -127, null, null, "9548c382-a680-4a9e-a6ca-e519c1b39958",
                                                             10, "d3c30592-7078-4836-8006-6091091ded06",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1567417609536L), "R,_Bz_=a._8");
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2.hashCode(), subtenantuser1.hashCode());
            int hashCode = subtenantuser1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantuser1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantUser subtenantuser = new SubtenantUser("5aac302d4dc51de8d52d8348d01b06c5", null,
                                                        "52689d44-57d6-4531-b841-07442f42c5c6",
                                                        new Date(1567417604806L), -32, null, "cc31e.8a363@c344e.me",
                                                        true, "f105baae-4fe4-4400-b803-6a396695590b", null,
                                                        "5aac302d4dc51de8d52d8348d01b06c5", false, false, true, -24,
                                                        null, null, "be353c76-39a4-4b48-b1c1-869f935432bc", -102,
                                                        "49f87221-e1e9-4f2b-9b64-14400b150b40",
                                                        SubtenantUserStatus.getDefault(), null,
                                                        new Date(1567417608143L), "R,_Bz_=a._8");
        assertTrue(subtenantuser.isValid());
        SubtenantUser subtenantuserInvalid = new SubtenantUser(null, null, "6e21eeba-2502-4e2b-b5f7-227518d5a841",
                                                               new Date(1567417609256L), -105, null, null, false,
                                                               "76947ad6-a3dd-42e3-9cce-c49d54103ea62cc5250f-0e73-4fd5-80c6-20bca9c5c4a729fd37f2-ac1d-4e50-bf19-cafc97e10862",
                                                               null,
                                                               "@77_7\u0015�?�\u00037\u0002A⚻7\u000e_Z7LT7-;\u000377!<\u0004+Fﭸ7?\u000f_9B\u001b拨\u0011\u0014\u0014ᬾV\b7]>:7㚧졎\f\u0001\u0011`R)7滹\u0019",
                                                               false, false, false, -30, null, null,
                                                               "d2fb0006-bb41-4757-95c8-b8c87e810fb3", 21,
                                                               "00c0d133-28ff-4f40-a90e-32be61745ca0ae9c11fa-408b-4a85-824d-d0fe56d2be6fb2822d6a-c3dc-43f6-91a9-08a4674f0a44",
                                                               SubtenantUserStatus.getDefault(), null,
                                                               new Date(1567417609892L),
                                                               "N:-\u000b2?I6鋻`7`ﰵ?Zbᰨ;鯽\b%ﮢ`9Uﾓf䥘D<2-?�?䘴-`5IJ>/AC`>-A-25\u001eSLO㋴SP<Q+忪];");
        assertFalse(subtenantuserInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("5aac302d4dc51de8d52d8348d01b06c5", null,
                                                             "0618dbe7-2653-4ef7-9c7c-99da08e1e484",
                                                             new Date(1567417600831L), -122, null,
                                                             "f68b8.827b9@d20c5.me", false,
                                                             "f713cf5d-608d-4dc2-b865-023bfa9caa58", null,
                                                             "5aac302d4dc51de8d52d8348d01b06c5", true, false, true, 93,
                                                             null, null, "9f91e123-035d-4ec5-bfbb-f4fd1685f5c1", -9,
                                                             "8e0cc2ef-4ab7-49de-be14-1cb73c84710f",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1567417606257L), "R,_Bz_=a._8");
            SubtenantUser subtenantuser2 = new SubtenantUser("5aac302d4dc51de8d52d8348d01b06c5", null,
                                                             "0618dbe7-2653-4ef7-9c7c-99da08e1e484",
                                                             new Date(1567417600831L), -122, null,
                                                             "f68b8.827b9@d20c5.me", false,
                                                             "f713cf5d-608d-4dc2-b865-023bfa9caa58", null,
                                                             "5aac302d4dc51de8d52d8348d01b06c5", true, false, true, 93,
                                                             null, null, "9f91e123-035d-4ec5-bfbb-f4fd1685f5c1", -9,
                                                             "8e0cc2ef-4ab7-49de-be14-1cb73c84710f",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1567417606257L), "R,_Bz_=a._8");
            SubtenantUser subtenantuser3 = new SubtenantUser("5aac302d4dc51de8d52d8348d01b06c5", null,
                                                             "5c265d99-819c-4a38-880b-bcb4b9c0e850",
                                                             new Date(1567417602930L), 68, null, "693e4.0128b@190a2.me",
                                                             false, "37ae4dee-7106-4f71-bfb5-b83a7215e15a", null,
                                                             "5aac302d4dc51de8d52d8348d01b06c5", true, false, true, 3,
                                                             null, null, "e55561ac-5eec-4555-925c-10432bc5df4b", -71,
                                                             "9b56b853-7865-42b7-a51b-9385502a2582",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1567417604206L), "R,_Bz_=a._8");
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotNull(subtenantuser3);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertNotSame(subtenantuser3, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser1, subtenantuser2);
            assertEquals(subtenantuser1, subtenantuser1);
            assertFalse(subtenantuser1.equals(null));
            assertNotEquals(subtenantuser3, subtenantuser1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
