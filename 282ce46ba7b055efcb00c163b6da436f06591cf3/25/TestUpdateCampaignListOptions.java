// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.deviceupdate.model;

import static org.junit.Assert.*;

import com.arm.mbed.cloud.sdk.common.Order;
import com.arm.mbed.cloud.sdk.common.listing.ListOptionsEncoder;
import com.arm.mbed.cloud.sdk.common.listing.filtering.FilterOperator;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import org.junit.Test;

/**
 * Unit tests for Model UpdateCampaignListOptions.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestUpdateCampaignListOptions {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            UpdateCampaignListOptions updatecampaignlistoptions1 = new UpdateCampaignListOptions(Integer.valueOf(-43),
                                                                                                 Long.valueOf(-113),
                                                                                                 Order.getDefault(),
                                                                                                 "4bb0984d-75e9-47e5-a285-b7bfddc0bdd4",
                                                                                                 null, null);
            UpdateCampaignListOptions updatecampaignlistoptions2 = updatecampaignlistoptions1.clone();
            assertNotNull(updatecampaignlistoptions1);
            assertNotNull(updatecampaignlistoptions2);
            assertNotSame(updatecampaignlistoptions2, updatecampaignlistoptions1);
            assertEquals(updatecampaignlistoptions2, updatecampaignlistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the filters method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testFilters() {
        try {
            UpdateCampaignListOptions option = new UpdateCampaignListOptions().inCreatedAts(Arrays.asList(new Date(1571831496472L),
                                                                                                          new Date(1571831494873L),
                                                                                                          new Date(1571831494598L)))
                                                                              .notInCreatedAts(Arrays.asList(new Date(1571831497585L),
                                                                                                             new Date(1571831495271L),
                                                                                                             new Date(1571831493135L),
                                                                                                             new Date(1571831494195L),
                                                                                                             new Date(1571831497423L)))
                                                                              .lessThanCreatedAt(new Date(1571831493842L))
                                                                              .greaterThanCreatedAt(new Date(1571831490808L))
                                                                              .equalToName("f05d5a18-eb60-48aa-9229-1ceb33d57dfd")
                                                                              .notEqualToName("458641e0-ae41-458a-9609-44b1ba734359")
                                                                              .inNames(Arrays.asList("b11b45b4-c221-4a3a-a29f-4438898350d3",
                                                                                                     "be763db6-25f6-428a-aa2a-f3c18128cb79"))
                                                                              .notInNames(Arrays.asList("12da8966-289c-48d7-a828-9197381592b0",
                                                                                                        "ac53080d-0367-4894-8466-24e9a53c35b7"))
                                                                              .equalToId("3934422c-9461-478b-994c-f817f2355d14")
                                                                              .notEqualToId("a5eded10-627c-4275-8242-2608b0f766c7")
                                                                              .inIds(Arrays.asList("cf511daf-3d0f-462d-8412-5e02689cb370",
                                                                                                   "b4737b1e-70f6-4548-9039-f913052e0a8b",
                                                                                                   "1081e9ca-4ea3-4967-97f6-304b876ef856"))
                                                                              .notInIds(Arrays.asList("580b76d2-85b5-4535-a245-471a0a055e96",
                                                                                                      "3fc35468-8148-46ad-b306-782fbbdef05f",
                                                                                                      "9862d7b9-e3ee-4693-97fc-df26d9d43630",
                                                                                                      "02aabb5d-7b38-4f28-ae43-e9d3216ed907",
                                                                                                      "357d876f-dff3-4a30-bde2-d7b63a28b139",
                                                                                                      "5af25271-88fe-49f3-b1a3-887bc0a226cd"))
                                                                              .equalToDeviceFilter("2025046e-ae8f-4ace-b099-e462f59881d5")
                                                                              .notEqualToDeviceFilter("d85b5265-a63c-4aaf-9594-3ed74585efca")
                                                                              .inDeviceFilters(Arrays.asList("9c01efba-7170-4609-b984-c35c791d55ef",
                                                                                                             "72ae03c6-be50-4c59-b78d-4923e5802d02",
                                                                                                             "1c57af08-087e-4e82-9932-9daf44890d49",
                                                                                                             "92ae3dbc-d538-4a9e-aade-8c5c0c969e13"))
                                                                              .notInDeviceFilters(Arrays.asList("24246f10-cd53-4269-b210-18cfaf8d3ca1",
                                                                                                                "715a23fe-a6cc-4f84-98d7-e33f291d271f",
                                                                                                                "aac7f8cd-e498-471f-9951-c37ca6f1b2b4",
                                                                                                                "ae200a02-1c37-4c47-bdd7-a0163df3b9e4",
                                                                                                                "82d284e0-ac12-45a4-8885-0c02b89689cd",
                                                                                                                "933c29ef-434b-43db-b9b5-8cf259da4912"))
                                                                              .inFinisheds(Arrays.asList(new Date(1571831498128L),
                                                                                                         new Date(1571831493717L),
                                                                                                         new Date(1571831495248L),
                                                                                                         new Date(1571831496593L)))
                                                                              .notInFinisheds(Arrays.asList(new Date(1571831495470L),
                                                                                                            new Date(1571831498514L),
                                                                                                            new Date(1571831491011L),
                                                                                                            new Date(1571831489674L)))
                                                                              .lessThanFinished(new Date(1571831496338L))
                                                                              .greaterThanFinished(new Date(1571831491986L))
                                                                              .inStartedAts(Arrays.asList(new Date(1571831493426L),
                                                                                                          new Date(1571831498153L)))
                                                                              .notInStartedAts(Arrays.asList(new Date(1571831494412L),
                                                                                                             new Date(1571831490847L)))
                                                                              .lessThanStartedAt(new Date(1571831493626L))
                                                                              .greaterThanStartedAt(new Date(1571831494288L))
                                                                              .inWhens(Arrays.asList(new Date(1571831496509L),
                                                                                                     new Date(1571831496158L),
                                                                                                     new Date(1571831490588L),
                                                                                                     new Date(1571831497989L),
                                                                                                     new Date(1571831497884L),
                                                                                                     new Date(1571831494728L)))
                                                                              .notInWhens(Arrays.asList(new Date(1571831492934L),
                                                                                                        new Date(1571831499180L),
                                                                                                        new Date(1571831495551L),
                                                                                                        new Date(1571831494926L),
                                                                                                        new Date(1571831496787L),
                                                                                                        new Date(1571831490687L),
                                                                                                        new Date(1571831494559L)))
                                                                              .lessThanWhen(new Date(1571831495365L))
                                                                              .greaterThanWhen(new Date(1571831490364L))
                                                                              .inUpdatedAts(Arrays.asList(new Date(1571831489923L),
                                                                                                          new Date(1571831498873L),
                                                                                                          new Date(1571831493873L),
                                                                                                          new Date(1571831492496L)))
                                                                              .notInUpdatedAts(Arrays.asList(new Date(1571831493335L),
                                                                                                             new Date(1571831495575L),
                                                                                                             new Date(1571831497538L)))
                                                                              .lessThanUpdatedAt(new Date(1571831497349L))
                                                                              .greaterThanUpdatedAt(new Date(1571831491632L))
                                                                              .equalToRootManifestId("63882820-81ec-4827-8bc1-3300a356b1ac")
                                                                              .notEqualToRootManifestId("de3a8919-23bf-4f47-a43f-9db14290f589")
                                                                              .inRootManifestIds(Arrays.asList("911d1c8c-c10f-4602-9634-b10d5bd00b5b",
                                                                                                               "d41aa931-73dc-4e25-a512-c84b037d943c",
                                                                                                               "1b1e7651-404b-4b60-97d1-0b593c078449",
                                                                                                               "80b99ac0-4aa2-4dae-b1bf-a8c85cd0b491"))
                                                                              .notInRootManifestIds(Arrays.asList("c605a629-4aa3-41de-bbba-f84aee1db1d4",
                                                                                                                  "0fe3fc3d-e935-4847-a29d-c793ea46ad00"))
                                                                              .equalToDescription("7e9b740a-1849-4643-a582-9b8b8ee8aa5b")
                                                                              .notEqualToDescription("fc5a360e-ae95-4470-94ec-252f65437370")
                                                                              .inDescriptions(Arrays.asList("a01ff597-b47a-4164-9bfa-f5ab42c5e1f2",
                                                                                                            "c9d2c728-deef-4586-83b7-17d1ac6e58ea",
                                                                                                            "c4eb8eec-8731-43a1-9dff-76eff704387f"))
                                                                              .notInDescriptions(Arrays.asList("ad448f3f-6c5f-4335-80b9-2893564487ef"));
            assertTrue(option.hasFilters());
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1571831496472L), new Date(1571831494873L), new Date(1571831494598L)),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1571831497585L), new Date(1571831495271L), new Date(1571831493135L),
                                       new Date(1571831494195L), new Date(1571831497423L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.LESS_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1571831493842L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1571831490808L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME, FilterOperator.EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("f05d5a18-eb60-48aa-9229-1ceb33d57dfd",
                         ListOptionsEncoder.encodeSingleEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME,
                                                                    String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("458641e0-ae41-458a-9609-44b1ba734359",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME,
                                                                       String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME, FilterOperator.IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("b11b45b4-c221-4a3a-a29f-4438898350d3", "be763db6-25f6-428a-aa2a-f3c18128cb79"),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("12da8966-289c-48d7-a828-9197381592b0", "ac53080d-0367-4894-8466-24e9a53c35b7"),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID, FilterOperator.EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("3934422c-9461-478b-994c-f817f2355d14",
                         ListOptionsEncoder.encodeSingleEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("a5eded10-627c-4275-8242-2608b0f766c7",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID, FilterOperator.IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("cf511daf-3d0f-462d-8412-5e02689cb370", "b4737b1e-70f6-4548-9039-f913052e0a8b",
                                       "1081e9ca-4ea3-4967-97f6-304b876ef856"),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID, List.class,
                                                                 option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("580b76d2-85b5-4535-a245-471a0a055e96", "3fc35468-8148-46ad-b306-782fbbdef05f",
                                       "9862d7b9-e3ee-4693-97fc-df26d9d43630", "02aabb5d-7b38-4f28-ae43-e9d3216ed907",
                                       "357d876f-dff3-4a30-bde2-d7b63a28b139", "5af25271-88fe-49f3-b1a3-887bc0a226cd"),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER, FilterOperator.EQUAL));
            assertNotNull(option.getDeviceFilterFilters());
            assertEquals("2025046e-ae8f-4ace-b099-e462f59881d5",
                         ListOptionsEncoder.encodeSingleEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER,
                                                                    String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDeviceFilterFilters());
            assertEquals("d85b5265-a63c-4aaf-9594-3ed74585efca",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER,
                                                                       String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER, FilterOperator.IN));
            assertNotNull(option.getDeviceFilterFilters());
            assertEquals(Arrays.asList("9c01efba-7170-4609-b984-c35c791d55ef", "72ae03c6-be50-4c59-b78d-4923e5802d02",
                                       "1c57af08-087e-4e82-9932-9daf44890d49", "92ae3dbc-d538-4a9e-aade-8c5c0c969e13"),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER, FilterOperator.NOT_IN));
            assertNotNull(option.getDeviceFilterFilters());
            assertEquals(Arrays.asList("24246f10-cd53-4269-b210-18cfaf8d3ca1", "715a23fe-a6cc-4f84-98d7-e33f291d271f",
                                       "aac7f8cd-e498-471f-9951-c37ca6f1b2b4", "ae200a02-1c37-4c47-bdd7-a0163df3b9e4",
                                       "82d284e0-ac12-45a4-8885-0c02b89689cd", "933c29ef-434b-43db-b9b5-8cf259da4912"),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED, FilterOperator.IN));
            assertNotNull(option.getFinishedFilters());
            assertEquals(Arrays.asList(new Date(1571831498128L), new Date(1571831493717L), new Date(1571831495248L),
                                       new Date(1571831496593L)),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED, FilterOperator.NOT_IN));
            assertNotNull(option.getFinishedFilters());
            assertEquals(Arrays.asList(new Date(1571831495470L), new Date(1571831498514L), new Date(1571831491011L),
                                       new Date(1571831489674L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED, FilterOperator.LESS_THAN));
            assertNotNull(option.getFinishedFilters());
            assertEquals(new Date(1571831496338L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED, FilterOperator.GREATER_THAN));
            assertNotNull(option.getFinishedFilters());
            assertEquals(new Date(1571831491986L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT, FilterOperator.IN));
            assertNotNull(option.getStartedAtFilters());
            assertEquals(Arrays.asList(new Date(1571831493426L), new Date(1571831498153L)),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getStartedAtFilters());
            assertEquals(Arrays.asList(new Date(1571831494412L), new Date(1571831490847L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT, FilterOperator.LESS_THAN));
            assertNotNull(option.getStartedAtFilters());
            assertEquals(new Date(1571831493626L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getStartedAtFilters());
            assertEquals(new Date(1571831494288L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN, FilterOperator.IN));
            assertNotNull(option.getWhenFilters());
            assertEquals(Arrays.asList(new Date(1571831496509L), new Date(1571831496158L), new Date(1571831490588L),
                                       new Date(1571831497989L), new Date(1571831497884L), new Date(1571831494728L)),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN, FilterOperator.NOT_IN));
            assertNotNull(option.getWhenFilters());
            assertEquals(Arrays.asList(new Date(1571831492934L), new Date(1571831499180L), new Date(1571831495551L),
                                       new Date(1571831494926L), new Date(1571831496787L), new Date(1571831490687L),
                                       new Date(1571831494559L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN, FilterOperator.LESS_THAN));
            assertNotNull(option.getWhenFilters());
            assertEquals(new Date(1571831495365L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN, FilterOperator.GREATER_THAN));
            assertNotNull(option.getWhenFilters());
            assertEquals(new Date(1571831490364L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1571831489923L), new Date(1571831498873L), new Date(1571831493873L),
                                       new Date(1571831492496L)),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1571831493335L), new Date(1571831495575L), new Date(1571831497538L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.LESS_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1571831497349L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1571831491632L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID,
                                        FilterOperator.EQUAL));
            assertNotNull(option.getRootManifestIdFilters());
            assertEquals("63882820-81ec-4827-8bc1-3300a356b1ac",
                         ListOptionsEncoder.encodeSingleEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getRootManifestIdFilters());
            assertEquals("de3a8919-23bf-4f47-a43f-9db14290f589",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID, FilterOperator.IN));
            assertNotNull(option.getRootManifestIdFilters());
            assertEquals(Arrays.asList("911d1c8c-c10f-4602-9634-b10d5bd00b5b", "d41aa931-73dc-4e25-a512-c84b037d943c",
                                       "1b1e7651-404b-4b60-97d1-0b593c078449", "80b99ac0-4aa2-4dae-b1bf-a8c85cd0b491"),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID,
                                        FilterOperator.NOT_IN));
            assertNotNull(option.getRootManifestIdFilters());
            assertEquals(Arrays.asList("c605a629-4aa3-41de-bbba-f84aee1db1d4", "0fe3fc3d-e935-4847-a29d-c793ea46ad00"),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("7e9b740a-1849-4643-a582-9b8b8ee8aa5b",
                         ListOptionsEncoder.encodeSingleEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("fc5a360e-ae95-4470-94ec-252f65437370",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                       String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("a01ff597-b47a-4164-9bfa-f5ab42c5e1f2", "c9d2c728-deef-4586-83b7-17d1ac6e58ea",
                                       "c4eb8eec-8731-43a1-9dff-76eff704387f"),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("ad448f3f-6c5f-4335-80b9-2893564487ef"),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    List.class, option));
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            UpdateCampaignListOptions updatecampaignlistoptions1 = new UpdateCampaignListOptions(Integer.valueOf(-37),
                                                                                                 Long.valueOf(102),
                                                                                                 Order.getDefault(),
                                                                                                 "33f1f8d8-4c28-4837-8769-e13cc10623e0",
                                                                                                 null, null);
            UpdateCampaignListOptions updatecampaignlistoptions2 = new UpdateCampaignListOptions(Integer.valueOf(-37),
                                                                                                 Long.valueOf(102),
                                                                                                 Order.getDefault(),
                                                                                                 "33f1f8d8-4c28-4837-8769-e13cc10623e0",
                                                                                                 null, null);
            assertNotNull(updatecampaignlistoptions1);
            assertNotNull(updatecampaignlistoptions2);
            assertNotSame(updatecampaignlistoptions2, updatecampaignlistoptions1);
            assertEquals(updatecampaignlistoptions2, updatecampaignlistoptions1);
            assertEquals(updatecampaignlistoptions2.hashCode(), updatecampaignlistoptions1.hashCode());
            int hashCode = updatecampaignlistoptions1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, updatecampaignlistoptions1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            UpdateCampaignListOptions updatecampaignlistoptions1 = new UpdateCampaignListOptions(Integer.valueOf(-110),
                                                                                                 Long.valueOf(1),
                                                                                                 Order.getDefault(),
                                                                                                 "673a750b-ab06-4a23-a456-e5141cca7fd0",
                                                                                                 null, null);
            UpdateCampaignListOptions updatecampaignlistoptions2 = new UpdateCampaignListOptions(Integer.valueOf(-110),
                                                                                                 Long.valueOf(1),
                                                                                                 Order.getDefault(),
                                                                                                 "673a750b-ab06-4a23-a456-e5141cca7fd0",
                                                                                                 null, null);
            UpdateCampaignListOptions updatecampaignlistoptions3 = new UpdateCampaignListOptions(Integer.valueOf(124),
                                                                                                 Long.valueOf(80),
                                                                                                 Order.getDefault(),
                                                                                                 "23ccdd97-dc4a-410b-a0f5-76150533c92b",
                                                                                                 null, null);
            assertNotNull(updatecampaignlistoptions1);
            assertNotNull(updatecampaignlistoptions2);
            assertNotNull(updatecampaignlistoptions3);
            assertNotSame(updatecampaignlistoptions2, updatecampaignlistoptions1);
            assertNotSame(updatecampaignlistoptions3, updatecampaignlistoptions1);
            assertEquals(updatecampaignlistoptions2, updatecampaignlistoptions1);
            assertEquals(updatecampaignlistoptions2, updatecampaignlistoptions1);
            assertEquals(updatecampaignlistoptions1, updatecampaignlistoptions2);
            assertEquals(updatecampaignlistoptions1, updatecampaignlistoptions1);
            assertFalse(updatecampaignlistoptions1.equals(null));
            assertNotEquals(updatecampaignlistoptions3, updatecampaignlistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
