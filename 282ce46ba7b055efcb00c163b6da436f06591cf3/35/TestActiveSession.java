// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model ActiveSession.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestActiveSession {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ActiveSession activesession1 = new ActiveSession("4fe3ed46883d07edae68d4aee4a2a477",
                                                             "e2d7c10b-df85-4b71-aa3c-d36d77d80899",
                                                             new Date(1571831488229L),
                                                             "059e46dd-1bcc-445d-95f5-63c870c8696c",
                                                             "49c26aa3-a647-4b2d-8d48-e476e352df91");
            ActiveSession activesession2 = activesession1.clone();
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotSame(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ActiveSession activesession1 = new ActiveSession("4fe3ed46883d07edae68d4aee4a2a477",
                                                             "cd56cb94-cc4c-46f6-9ccc-9e186d10a9ba",
                                                             new Date(1571831491579L),
                                                             "2440d1ab-3611-4c89-a4ab-c8778332659f",
                                                             "eaf27610-4305-4a0d-824c-832210475cc3");
            ActiveSession activesession2 = new ActiveSession("4fe3ed46883d07edae68d4aee4a2a477",
                                                             "cd56cb94-cc4c-46f6-9ccc-9e186d10a9ba",
                                                             new Date(1571831491579L),
                                                             "2440d1ab-3611-4c89-a4ab-c8778332659f",
                                                             "eaf27610-4305-4a0d-824c-832210475cc3");
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotSame(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession2.hashCode(), activesession1.hashCode());
            int hashCode = activesession1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, activesession1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ActiveSession activesession = new ActiveSession("4fe3ed46883d07edae68d4aee4a2a477",
                                                        "9e1449ca-0a70-42df-96e6-550b5c7e4700",
                                                        new Date(1571831487964L),
                                                        "16ad912a-7b66-4844-a282-57c5f7f0328d",
                                                        "519ac443-ed2e-4e24-83dd-4c6534e8a9e4");
        assertTrue(activesession.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ActiveSession activesession1 = new ActiveSession("4fe3ed46883d07edae68d4aee4a2a477",
                                                             "1240dd68-1df5-4f8e-aac7-5a6d1844a355",
                                                             new Date(1571831491925L),
                                                             "4d66e0e8-a33a-4ee5-814f-39d3742458d1",
                                                             "4f605429-fb7d-4983-9cfa-1925b5d67d4b");
            ActiveSession activesession2 = new ActiveSession("4fe3ed46883d07edae68d4aee4a2a477",
                                                             "1240dd68-1df5-4f8e-aac7-5a6d1844a355",
                                                             new Date(1571831491925L),
                                                             "4d66e0e8-a33a-4ee5-814f-39d3742458d1",
                                                             "4f605429-fb7d-4983-9cfa-1925b5d67d4b");
            ActiveSession activesession3 = new ActiveSession("4fe3ed46883d07edae68d4aee4a2a477",
                                                             "a67eb380-9232-40e1-8466-c66ad4e6b4bc",
                                                             new Date(1571831491929L),
                                                             "83e4c878-c255-4f4c-864c-0d0bb6169f6c",
                                                             "a89e5d17-f3b6-4af6-ab4c-20ab752befcd");
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotNull(activesession3);
            assertNotSame(activesession2, activesession1);
            assertNotSame(activesession3, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession1, activesession2);
            assertEquals(activesession1, activesession1);
            assertFalse(activesession1.equals(null));
            assertNotEquals(activesession3, activesession1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
