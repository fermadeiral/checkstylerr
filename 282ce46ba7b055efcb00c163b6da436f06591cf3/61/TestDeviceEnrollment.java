// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEnrollment.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEnrollment {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEnrollment deviceenrollment1 = new DeviceEnrollment("fb2b9bae-c5bf-4e32-a745-39eb17891417",
                                                                      new Date(1571831488442L),
                                                                      new Date(1571831493801L),
                                                                      "la6PidTT34308MHYcSskON13zL4rxyaS",
                                                                      "A-:5QP3n0S11ITo78OZs9BjApfHo8q9lNy2ayCqk2gdvUD3gNqjjCi9Lr8Y584qj95X96hsMM600TbE3fX2WNBvm9:AfXCXFL",
                                                                      new Date(1571831491859L),
                                                                      "la6PidTT34308MHYcSskON13zL4rxyaS");
            DeviceEnrollment deviceenrollment2 = deviceenrollment1.clone();
            assertNotNull(deviceenrollment1);
            assertNotNull(deviceenrollment2);
            assertNotSame(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEnrollment deviceenrollment1 = new DeviceEnrollment("ec8f7c02-b047-4381-a279-c72c22c67562",
                                                                      new Date(1571831492089L),
                                                                      new Date(1571831489389L),
                                                                      "la6PidTT34308MHYcSskON13zL4rxyaS",
                                                                      "A-:5QP3n0S11ITo78OZs9BjApfHo8q9lNy2ayCqk2gdvUD3gNqjjCi9Lr8Y584qj95X96hsMM600TbE3fX2WNBvm9:AfXCXFL",
                                                                      new Date(1571831491783L),
                                                                      "la6PidTT34308MHYcSskON13zL4rxyaS");
            DeviceEnrollment deviceenrollment2 = new DeviceEnrollment("ec8f7c02-b047-4381-a279-c72c22c67562",
                                                                      new Date(1571831492089L),
                                                                      new Date(1571831489389L),
                                                                      "la6PidTT34308MHYcSskON13zL4rxyaS",
                                                                      "A-:5QP3n0S11ITo78OZs9BjApfHo8q9lNy2ayCqk2gdvUD3gNqjjCi9Lr8Y584qj95X96hsMM600TbE3fX2WNBvm9:AfXCXFL",
                                                                      new Date(1571831491783L),
                                                                      "la6PidTT34308MHYcSskON13zL4rxyaS");
            assertNotNull(deviceenrollment1);
            assertNotNull(deviceenrollment2);
            assertNotSame(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2.hashCode(), deviceenrollment1.hashCode());
            int hashCode = deviceenrollment1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceenrollment1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEnrollment deviceenrollment = new DeviceEnrollment("15f7ebee-fcb5-43aa-b1e9-49708477de38",
                                                                 new Date(1571831494462L), new Date(1571831494079L),
                                                                 "la6PidTT34308MHYcSskON13zL4rxyaS",
                                                                 "A-:5QP3n0S11ITo78OZs9BjApfHo8q9lNy2ayCqk2gdvUD3gNqjjCi9Lr8Y584qj95X96hsMM600TbE3fX2WNBvm9:AfXCXFL",
                                                                 new Date(1571831494961L),
                                                                 "la6PidTT34308MHYcSskON13zL4rxyaS");
        assertTrue(deviceenrollment.isValid());
        DeviceEnrollment deviceenrollmentInvalid = new DeviceEnrollment("40b8c219-95c2-458c-8f34-98651b7db936",
                                                                        new Date(1571831486874L),
                                                                        new Date(1571831493710L),
                                                                        "苗`v72/XR2IfUj7\u0010o5pvt>QbI2KmQvvb\u000e5>Jhh77vb7\u0003UGQZwQ;X7bjqXQmEwWhB\u0017",
                                                                        null, new Date(1571831493318L),
                                                                        "苗`v72/XR2IfUj7\u0010o5pvt>QbI2KmQvvb\u000e5>Jhh77vb7\u0003UGQZwQ;X7bjqXQmEwWhB\u0017");
        assertFalse(deviceenrollmentInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEnrollment deviceenrollment1 = new DeviceEnrollment("e5fdf597-dced-4326-8ce5-5ac9b9868fa4",
                                                                      new Date(1571831496654L),
                                                                      new Date(1571831491764L),
                                                                      "la6PidTT34308MHYcSskON13zL4rxyaS",
                                                                      "A-:5QP3n0S11ITo78OZs9BjApfHo8q9lNy2ayCqk2gdvUD3gNqjjCi9Lr8Y584qj95X96hsMM600TbE3fX2WNBvm9:AfXCXFL",
                                                                      new Date(1571831487048L),
                                                                      "la6PidTT34308MHYcSskON13zL4rxyaS");
            DeviceEnrollment deviceenrollment2 = new DeviceEnrollment("e5fdf597-dced-4326-8ce5-5ac9b9868fa4",
                                                                      new Date(1571831496654L),
                                                                      new Date(1571831491764L),
                                                                      "la6PidTT34308MHYcSskON13zL4rxyaS",
                                                                      "A-:5QP3n0S11ITo78OZs9BjApfHo8q9lNy2ayCqk2gdvUD3gNqjjCi9Lr8Y584qj95X96hsMM600TbE3fX2WNBvm9:AfXCXFL",
                                                                      new Date(1571831487048L),
                                                                      "la6PidTT34308MHYcSskON13zL4rxyaS");
            DeviceEnrollment deviceenrollment3 = new DeviceEnrollment("375628a0-7de0-4823-a784-7c345e48c137",
                                                                      new Date(1571831495010L),
                                                                      new Date(1571831487607L),
                                                                      "la6PidTT34308MHYcSskON13zL4rxyaS",
                                                                      "A-:5QP3n0S11ITo78OZs9BjApfHo8q9lNy2ayCqk2gdvUD3gNqjjCi9Lr8Y584qj95X96hsMM600TbE3fX2WNBvm9:AfXCXFL",
                                                                      new Date(1571831495750L),
                                                                      "la6PidTT34308MHYcSskON13zL4rxyaS");
            assertNotNull(deviceenrollment1);
            assertNotNull(deviceenrollment2);
            assertNotNull(deviceenrollment3);
            assertNotSame(deviceenrollment2, deviceenrollment1);
            assertNotSame(deviceenrollment3, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment1, deviceenrollment2);
            assertEquals(deviceenrollment1, deviceenrollment1);
            assertFalse(deviceenrollment1.equals(null));
            assertNotEquals(deviceenrollment3, deviceenrollment1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
