// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEvents.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEvents {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1571831487446L), null,
                                                          new Date(1571831488843L),
                                                          "31a61878-ad5f-4b5f-ae87-ff8d90abd229",
                                                          "135beed0-3605-4723-81d4-a254ebb6cce8",
                                                          "dbc9edfb-82df-4a62-b16f-95b6f933197e",
                                                          "a84fa8e5-da58-4333-b6c8-7554a50aeb66",
                                                          "b7cf01e9-f741-43c6-a542-a45a2951d759",
                                                          "1b6b0cc1-0bfb-4704-9022-b405a68acd38", false);
            DeviceEvents deviceevents2 = deviceevents1.clone();
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1571831490969L), null,
                                                          new Date(1571831491082L),
                                                          "853128ff-1b07-4f00-9ba5-7dbccdfd08c0",
                                                          "1135f3b7-1399-4fbf-9857-ad9a43c3f902",
                                                          "a71b747c-89d4-4172-b2b8-7f0cc6ff17aa",
                                                          "c9656447-6fa6-469a-ba0e-3e8bf0f7a9aa",
                                                          "4aec846c-9433-486b-8fa6-5f5e5ec6e034",
                                                          "fe1f4351-4212-4945-8c86-269122dcb7b9", false);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1571831490969L), null,
                                                          new Date(1571831491082L),
                                                          "853128ff-1b07-4f00-9ba5-7dbccdfd08c0",
                                                          "1135f3b7-1399-4fbf-9857-ad9a43c3f902",
                                                          "a71b747c-89d4-4172-b2b8-7f0cc6ff17aa",
                                                          "c9656447-6fa6-469a-ba0e-3e8bf0f7a9aa",
                                                          "4aec846c-9433-486b-8fa6-5f5e5ec6e034",
                                                          "fe1f4351-4212-4945-8c86-269122dcb7b9", false);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2.hashCode(), deviceevents1.hashCode());
            int hashCode = deviceevents1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceevents1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEvents deviceevents = new DeviceEvents(null, new Date(1571831487142L), null, new Date(1571831487183L),
                                                     "146652e3-5fd0-4d09-b000-7c6ed626a8ec",
                                                     "bd970217-13e1-4d13-ba2c-083991d795be",
                                                     "06a62023-3866-47e4-b8a9-ec6a25d0fabd",
                                                     "02237f38-7448-4834-9061-a3cb57f4b0ed",
                                                     "c0d73463-aa47-4aac-9713-24ec72f7d3b1",
                                                     "42d049f8-be18-4515-ad90-ae59ef649432", false);
        assertTrue(deviceevents.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1571831489051L), null,
                                                          new Date(1571831488311L),
                                                          "d5099965-aaf8-4bfe-9a7f-1cb94aeb5d27",
                                                          "b3c9d348-e470-40c3-9b8d-8f616784f116",
                                                          "84fd3a15-2a28-4a81-ae3f-423c4303561e",
                                                          "9e2eafe7-c2ec-47a2-aaac-d60adf3a8d14",
                                                          "5a4afb0c-1af1-4016-abc1-52f62f4f12ef",
                                                          "17389bad-4b9c-4ce3-a5ae-0640df18e62c", false);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1571831489051L), null,
                                                          new Date(1571831488311L),
                                                          "d5099965-aaf8-4bfe-9a7f-1cb94aeb5d27",
                                                          "b3c9d348-e470-40c3-9b8d-8f616784f116",
                                                          "84fd3a15-2a28-4a81-ae3f-423c4303561e",
                                                          "9e2eafe7-c2ec-47a2-aaac-d60adf3a8d14",
                                                          "5a4afb0c-1af1-4016-abc1-52f62f4f12ef",
                                                          "17389bad-4b9c-4ce3-a5ae-0640df18e62c", false);
            DeviceEvents deviceevents3 = new DeviceEvents(null, new Date(1571831491249L), null,
                                                          new Date(1571831491061L),
                                                          "ee3c83d8-98b3-4914-b6d5-520fd07f7472",
                                                          "b384fbfd-a5a0-4e22-884b-5bf34f77c392",
                                                          "e756e8fa-28dc-46f7-b2a8-7000739466f7",
                                                          "6068f26f-9c00-474f-854d-60b1961f7d46",
                                                          "c2a3e789-3fe5-4f14-8c72-a1b7bce3e75b",
                                                          "5b9ff81e-2bd6-4bdb-9ac6-519e5e2a485a", false);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotNull(deviceevents3);
            assertNotSame(deviceevents2, deviceevents1);
            assertNotSame(deviceevents3, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents1, deviceevents2);
            assertEquals(deviceevents1, deviceevents1);
            assertFalse(deviceevents1.equals(null));
            assertNotEquals(deviceevents3, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
