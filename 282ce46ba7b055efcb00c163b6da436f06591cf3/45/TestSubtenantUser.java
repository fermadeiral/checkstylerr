// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantUser.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantUser {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("4fe3ed46883d07edae68d4aee4a2a477", null,
                                                             "8bf3358d-b39e-4d81-9a7f-6877c3584eaf",
                                                             new Date(1571831493292L), -16, null,
                                                             "be7d8.809d4@a3447.me", false,
                                                             "019611dc-e83c-4f16-96c0-60bd46a79019",
                                                             "4fe3ed46883d07edae68d4aee4a2a477", true, false, true, 41,
                                                             null, null, "b925804e-adf8-4ded-b336-c62ae293e5a2", -82,
                                                             "9a785f28-ec9e-4b36-ac67-ec4c4385448b",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1571831488408L), "=_Do-Z=");
            SubtenantUser subtenantuser2 = subtenantuser1.clone();
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("4fe3ed46883d07edae68d4aee4a2a477", null,
                                                             "571e31c0-ed0b-4377-9e1e-f11ca0490511",
                                                             new Date(1571831493728L), -23, null,
                                                             "2aeaf.a3ce7@05608.fr", true,
                                                             "e4e8d849-5bde-43f5-b9e6-7c99c0dfc006",
                                                             "4fe3ed46883d07edae68d4aee4a2a477", true, true, false, 113,
                                                             null, null, "e593a6f5-38bf-44f3-870f-3f7ac5510fd1", 37,
                                                             "3550e123-e056-4f24-824d-7419bd7b5a56",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1571831489403L), "=_Do-Z=");
            SubtenantUser subtenantuser2 = new SubtenantUser("4fe3ed46883d07edae68d4aee4a2a477", null,
                                                             "571e31c0-ed0b-4377-9e1e-f11ca0490511",
                                                             new Date(1571831493728L), -23, null,
                                                             "2aeaf.a3ce7@05608.fr", true,
                                                             "e4e8d849-5bde-43f5-b9e6-7c99c0dfc006",
                                                             "4fe3ed46883d07edae68d4aee4a2a477", true, true, false, 113,
                                                             null, null, "e593a6f5-38bf-44f3-870f-3f7ac5510fd1", 37,
                                                             "3550e123-e056-4f24-824d-7419bd7b5a56",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1571831489403L), "=_Do-Z=");
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2.hashCode(), subtenantuser1.hashCode());
            int hashCode = subtenantuser1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantuser1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantUser subtenantuser = new SubtenantUser("4fe3ed46883d07edae68d4aee4a2a477", null,
                                                        "60f56d16-461e-4438-be89-381c4899f682",
                                                        new Date(1571831488120L), 46, null, "1ded4.f525a@89cf5.me",
                                                        true, "06872581-6cd6-4183-9d71-55ee3f6d885b",
                                                        "4fe3ed46883d07edae68d4aee4a2a477", false, true, false, -31,
                                                        null, null, "b9387716-49aa-4304-948d-141c96fb66a1", -70,
                                                        "3c5f0d35-fd1d-4452-b1c8-879b1ed9f1f9",
                                                        SubtenantUserStatus.getDefault(), null,
                                                        new Date(1571831487424L), "=_Do-Z=");
        assertTrue(subtenantuser.isValid());
        SubtenantUser subtenantuserInvalid = new SubtenantUser(null, null, "107444aa-07bf-4dc2-889b-e602546cc2ad",
                                                               new Date(1571831495855L), -97, null, null, true,
                                                               "571d1aee-de97-4ffc-98a7-ff4d8c805417702dcfb1-d6dc-4f6a-b3e7-9d412e1d2a41be44d826-6e56-47b1-b5b7-b1dbc8d6580b",
                                                               "111bb155cà³…51?15â¦’15ZJcbbQc#é ·1\u0010\u001fFC55?O5á«¢D5\u0001å³°5*â‡´=c15cB5cDbá°²5?5ã¼ºèˆ¦1b1",
                                                               false, true, false, -17, null, null,
                                                               "6b87240b-fae6-4db4-8d3e-05d58776e5e1", 21,
                                                               "4fcc204b-f151-457d-a878-beaf2b6b32791e032812-6338-4878-9a28-0cf58ac27e457581692a-9061-4ade-aca8-36b745195729",
                                                               SubtenantUserStatus.getDefault(), null,
                                                               new Date(1571831488605L),
                                                               "äž”ië?—A\u001b8\u0006]hdMK[^AaSLà³¢IT\u0007OO^ëº«)5â‰?:fmè‚?\\\\\u000eKK[@á˜„6ä™•`3@&Vl?(ç?›?^`ì¸”[I\u0010âŒ‰`6næ“?h");
        assertFalse(subtenantuserInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("4fe3ed46883d07edae68d4aee4a2a477", null,
                                                             "cba97d4a-a723-4654-bdf6-0dbbb630d84d",
                                                             new Date(1571831492308L), 102, null,
                                                             "3272e.f29ea@a9903.me", true,
                                                             "ac9735e1-6149-4bc0-87f4-d55982fda7ef",
                                                             "4fe3ed46883d07edae68d4aee4a2a477", false, true, false,
                                                             110, null, null, "c2253815-026c-407c-ac17-8b89a135e5bd",
                                                             -125, "1acab7f5-4f98-4a6d-ac32-eca210213c4a",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1571831490121L), "=_Do-Z=");
            SubtenantUser subtenantuser2 = new SubtenantUser("4fe3ed46883d07edae68d4aee4a2a477", null,
                                                             "cba97d4a-a723-4654-bdf6-0dbbb630d84d",
                                                             new Date(1571831492308L), 102, null,
                                                             "3272e.f29ea@a9903.me", true,
                                                             "ac9735e1-6149-4bc0-87f4-d55982fda7ef",
                                                             "4fe3ed46883d07edae68d4aee4a2a477", false, true, false,
                                                             110, null, null, "c2253815-026c-407c-ac17-8b89a135e5bd",
                                                             -125, "1acab7f5-4f98-4a6d-ac32-eca210213c4a",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1571831490121L), "=_Do-Z=");
            SubtenantUser subtenantuser3 = new SubtenantUser("4fe3ed46883d07edae68d4aee4a2a477", null,
                                                             "a1e067bb-45cd-4b6e-b94d-85c80e307639",
                                                             new Date(1571831488415L), -94, null,
                                                             "8cae6.13857@30eb4.fr", true,
                                                             "2860de05-f7a5-42ea-a679-3e1c7ff1cb9f",
                                                             "4fe3ed46883d07edae68d4aee4a2a477", false, true, false,
                                                             -122, null, null, "0f33a67d-2332-4865-a09c-d8bd3d67806f",
                                                             -71, "27d09277-34fa-404b-b17b-ea2b80bdd4bb",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1571831490415L), "=_Do-Z=");
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotNull(subtenantuser3);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertNotSame(subtenantuser3, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser1, subtenantuser2);
            assertEquals(subtenantuser1, subtenantuser1);
            assertFalse(subtenantuser1.equals(null));
            assertNotEquals(subtenantuser3, subtenantuser1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
