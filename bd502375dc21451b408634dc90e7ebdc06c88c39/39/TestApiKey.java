// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model ApiKey.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestApiKey {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ApiKey apikey1 = new ApiKey("723f897cf94d230cfbfdd860cbab94ac", new Date(1561572707143L), 68,
                                        "723f897cf94d230cfbfdd860cbab94ac", "18ee0663-cad8-4ae7-b43f-ee4d12870f49", -44,
                                        "08cbe528-cf21-451a-81ae-d998cae98e5c", "723f897cf94d230cfbfdd860cbab94ac",
                                        ApiKeyStatus.getDefault(), new Date(1561572708544L));
            ApiKey apikey2 = apikey1.clone();
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotSame(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ApiKey apikey1 = new ApiKey("723f897cf94d230cfbfdd860cbab94ac", new Date(1561572700597L), -79,
                                        "723f897cf94d230cfbfdd860cbab94ac", "f159d750-b468-4b2b-8a02-b9f2595e7474", -68,
                                        "e9340d67-8bd3-43ce-a1f3-7bc755353002", "723f897cf94d230cfbfdd860cbab94ac",
                                        ApiKeyStatus.getDefault(), new Date(1561572700927L));
            ApiKey apikey2 = new ApiKey("723f897cf94d230cfbfdd860cbab94ac", new Date(1561572700597L), -79,
                                        "723f897cf94d230cfbfdd860cbab94ac", "f159d750-b468-4b2b-8a02-b9f2595e7474", -68,
                                        "e9340d67-8bd3-43ce-a1f3-7bc755353002", "723f897cf94d230cfbfdd860cbab94ac",
                                        ApiKeyStatus.getDefault(), new Date(1561572700927L));
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotSame(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey2.hashCode(), apikey1.hashCode());
            int hashCode = apikey1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, apikey1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ApiKey apikey = new ApiKey("723f897cf94d230cfbfdd860cbab94ac", new Date(1561572708242L), -120,
                                   "723f897cf94d230cfbfdd860cbab94ac", "7d647aaf-3b94-4dd5-889e-6cc9c4d82ac2", 43,
                                   "454bf6b2-c84d-431a-a23c-59f3f3619985", "723f897cf94d230cfbfdd860cbab94ac",
                                   ApiKeyStatus.getDefault(), new Date(1561572705420L));
        assertTrue(apikey.isValid());
        ApiKey apikeyInvalid = new ApiKey("VeH䔾e\u001611^eﳤ\u00055Z5E\u0019115MNe15䫽e硣ZB%5\u00191哞\u001c1X\u00105#X1e1e5ꡫ?⻃周e%녫\u001a;5ꣀ퓮5e",
                                          new Date(1561572707339L), -13,
                                          "VeH䔾e\u001611^eﳤ\u00055Z5E\u0019115MNe15䫽e硣ZB%5\u00191哞\u001c1X\u00105#X1e1e5ꡫ?⻃周e%녫\u001a;5ꣀ퓮5e",
                                          "dcbd5fbd-a03d-402b-b746-cec3df1da738", -66, null,
                                          "VeH䔾e\u001611^eﳤ\u00055Z5E\u0019115MNe15䫽e硣ZB%5\u00191哞\u001c1X\u00105#X1e1e5ꡫ?⻃周e%녫\u001a;5ꣀ퓮5e",
                                          ApiKeyStatus.getDefault(), new Date(1561572700236L));
        assertFalse(apikeyInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ApiKey apikey1 = new ApiKey("723f897cf94d230cfbfdd860cbab94ac", new Date(1561572701237L), 48,
                                        "723f897cf94d230cfbfdd860cbab94ac", "227472b2-c017-402a-92c4-a9172f2a372c",
                                        -117, "e9b701e3-4f6a-4d77-ab2c-4a4f41662c49",
                                        "723f897cf94d230cfbfdd860cbab94ac", ApiKeyStatus.getDefault(),
                                        new Date(1561572699967L));
            ApiKey apikey2 = new ApiKey("723f897cf94d230cfbfdd860cbab94ac", new Date(1561572701237L), 48,
                                        "723f897cf94d230cfbfdd860cbab94ac", "227472b2-c017-402a-92c4-a9172f2a372c",
                                        -117, "e9b701e3-4f6a-4d77-ab2c-4a4f41662c49",
                                        "723f897cf94d230cfbfdd860cbab94ac", ApiKeyStatus.getDefault(),
                                        new Date(1561572699967L));
            ApiKey apikey3 = new ApiKey("723f897cf94d230cfbfdd860cbab94ac", new Date(1561572700404L), -39,
                                        "723f897cf94d230cfbfdd860cbab94ac", "72acfbc2-cd18-439e-afc4-f0efeddacd9d",
                                        -104, "620bc0eb-5a1d-48d8-9ce9-0e17da762c5c",
                                        "723f897cf94d230cfbfdd860cbab94ac", ApiKeyStatus.getDefault(),
                                        new Date(1561572701688L));
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotNull(apikey3);
            assertNotSame(apikey2, apikey1);
            assertNotSame(apikey3, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey1, apikey2);
            assertEquals(apikey1, apikey1);
            assertFalse(apikey1.equals(null));
            assertNotEquals(apikey3, apikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
