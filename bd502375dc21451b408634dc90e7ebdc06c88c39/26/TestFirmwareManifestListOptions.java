// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.deviceupdate.model;

import static org.junit.Assert.*;

import com.arm.mbed.cloud.sdk.common.Order;
import com.arm.mbed.cloud.sdk.common.listing.ListOptionsEncoder;
import com.arm.mbed.cloud.sdk.common.listing.filtering.FilterOperator;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import org.junit.Test;

/**
 * Unit tests for Model FirmwareManifestListOptions.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestFirmwareManifestListOptions {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            FirmwareManifestListOptions firmwaremanifestlistoptions1 = new FirmwareManifestListOptions(Integer.valueOf(-57),
                                                                                                       Long.valueOf(-125),
                                                                                                       Order.getDefault(),
                                                                                                       "8b9c233f-32aa-49ba-b87c-15615e637f2c",
                                                                                                       null, null);
            FirmwareManifestListOptions firmwaremanifestlistoptions2 = firmwaremanifestlistoptions1.clone();
            assertNotNull(firmwaremanifestlistoptions1);
            assertNotNull(firmwaremanifestlistoptions2);
            assertNotSame(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the filters method.
     */
    @SuppressWarnings({ "boxing", "resource" })
    @Test
    public void testFilters() {
        try {
            FirmwareManifestListOptions option = new FirmwareManifestListOptions().inCreatedAts(Arrays.asList(new Date(1561572709136L),
                                                                                                              new Date(1561572702478L),
                                                                                                              new Date(1561572710577L),
                                                                                                              new Date(1561572702562L)))
                                                                                  .notInCreatedAts(Arrays.asList(new Date(1561572705330L)))
                                                                                  .lessThanCreatedAt(new Date(1561572710555L))
                                                                                  .greaterThanCreatedAt(new Date(1561572701373L))
                                                                                  .equalToName("f08c77b0-05a2-4ad6-ae95-cf2d1f05a152")
                                                                                  .notEqualToName("10b48e51-ea2f-4a5f-92e9-eb7471487e69")
                                                                                  .inNames(Arrays.asList("9a5aa6ac-9196-4bbc-a6d1-19b54be1e9a0",
                                                                                                         "2d24feff-9851-4f94-8362-e58cb3581b3f",
                                                                                                         "ce4dd621-899b-4bc8-bd66-266f5c0445eb",
                                                                                                         "23b63532-e9f3-407e-9b42-935acd8e6827",
                                                                                                         "6a6e7621-1905-46a4-a303-a89f66f01a4b",
                                                                                                         "2a80984f-0033-427b-8624-12cbf20452c0"))
                                                                                  .notInNames(Arrays.asList("919d67d4-b8c2-4207-a902-523ec2dbd33d"))
                                                                                  .equalToId("e3ae69c6-d860-4692-a2ed-2f3e4c862083")
                                                                                  .notEqualToId("fd251211-25d8-43a8-9c87-4650683273ec")
                                                                                  .inIds(Arrays.asList("a2379a50-3ded-476a-9b5e-92ec87ea02df",
                                                                                                       "e79013c3-8fca-4679-b495-37aac352a4f6"))
                                                                                  .notInIds(Arrays.asList("4f5bc210-1c0c-42bd-9196-fd552027cc2a",
                                                                                                          "53df6b76-38b1-4580-969a-a7b1a3188757",
                                                                                                          "9cd0a1a3-d6a6-425c-a52f-c8ce27d5118d",
                                                                                                          "bc93b6fa-8314-4313-8f36-5ba1ca3e4847",
                                                                                                          "6604a74c-c78b-4962-a408-efe1b8036098",
                                                                                                          "233c5eb1-b006-49a3-ae2e-848afcf6e04a",
                                                                                                          "b04e8618-de15-41e5-bed5-262bbc32a729",
                                                                                                          "389dcad4-027e-4c79-8a96-fd11fc04ecba"))
                                                                                  .equalToDatafileUrl("abf60977-4cd5-486d-92f2-ed3ad38c6cc3")
                                                                                  .notEqualToDatafileUrl("987089b7-ab3e-40d3-ae9e-efaad6c50180")
                                                                                  .inDatafileUrls(Arrays.asList("06329c89-0ebd-4397-bc8e-0ffe71218137",
                                                                                                                "529a2140-8aae-455a-a2d6-c9c7416f3246",
                                                                                                                "20900e10-defe-463d-9a31-ee3f83d33d29",
                                                                                                                "356d1e9c-6717-4e21-9fbc-40d52f497e00",
                                                                                                                "639920d8-2438-4461-8cd5-12c98d30f3de",
                                                                                                                "440e15a2-6ac0-48c8-944c-f747c13dc541"))
                                                                                  .notInDatafileUrls(Arrays.asList("01518b64-5a9b-48f1-ba5d-bc82cc6d45bd",
                                                                                                                   "520508f6-80af-44f2-bed6-0a1145c001eb"))
                                                                                  .equalToDatafileSize(Long.valueOf(-120))
                                                                                  .notEqualToDatafileSize(Long.valueOf(-84))
                                                                                  .inDatafileSizes(Arrays.asList(Long.valueOf(-84),
                                                                                                                 Long.valueOf(-95),
                                                                                                                 Long.valueOf(34),
                                                                                                                 Long.valueOf(-95),
                                                                                                                 Long.valueOf(65)))
                                                                                  .notInDatafileSizes(Arrays.asList(Long.valueOf(60),
                                                                                                                    Long.valueOf(-67),
                                                                                                                    Long.valueOf(-31),
                                                                                                                    Long.valueOf(77),
                                                                                                                    Long.valueOf(-64),
                                                                                                                    Long.valueOf(91),
                                                                                                                    Long.valueOf(-66)))
                                                                                  .equalToDeviceClass("d503739c-cd5e-4f5e-93f9-bceddada847d")
                                                                                  .notEqualToDeviceClass("81d821bf-6df1-4a00-b269-f5f5934c7ef7")
                                                                                  .inDeviceClass(Arrays.asList("afb04bbd-9067-4f3b-80bf-df8a3c508f0e",
                                                                                                               "a37805c0-95e7-4db1-aa10-5cc3f019bd0d",
                                                                                                               "cf3eba82-0353-4f1e-9827-46dfcce765d6",
                                                                                                               "b1467e22-0190-4b85-8d17-b541782c8fc3",
                                                                                                               "3ca97863-0be6-4c0f-a4fb-d35619af642a"))
                                                                                  .notInDeviceClass(Arrays.asList("eccb0eba-7bf9-4a55-8746-e056a1234066",
                                                                                                                  "d4ac6e7c-e399-4e16-bb69-48efb2d6d560",
                                                                                                                  "4808c2d8-7ebe-4c75-b52a-85b39d98f2ea",
                                                                                                                  "0cf0fb88-be0f-4faf-8b1c-4c46c3f304a1",
                                                                                                                  "f9f4d2c3-68f0-4e62-8609-551c4d2a6534",
                                                                                                                  "85d8ba63-cd48-4073-ae86-d1abcd576f26",
                                                                                                                  "a26f776c-0374-401f-95f3-b8eebe9bbbf7",
                                                                                                                  "bcacab7c-8797-4383-acc1-fab499abb4aa",
                                                                                                                  "23db091f-e0ca-4a4b-9723-d0d09ad50620"))
                                                                                  .inTimestamps(Arrays.asList(new Date(1561572706814L),
                                                                                                              new Date(1561572707676L),
                                                                                                              new Date(1561572710800L),
                                                                                                              new Date(1561572702472L),
                                                                                                              new Date(1561572706141L),
                                                                                                              new Date(1561572709861L),
                                                                                                              new Date(1561572707354L),
                                                                                                              new Date(1561572708020L)))
                                                                                  .notInTimestamps(Arrays.asList(new Date(1561572703199L),
                                                                                                                 new Date(1561572710650L),
                                                                                                                 new Date(1561572705039L)))
                                                                                  .lessThanTimestamp(new Date(1561572704933L))
                                                                                  .greaterThanTimestamp(new Date(1561572707620L))
                                                                                  .inUpdatedAts(Arrays.asList(new Date(1561572707997L),
                                                                                                              new Date(1561572709941L),
                                                                                                              new Date(1561572709417L),
                                                                                                              new Date(1561572705527L),
                                                                                                              new Date(1561572710690L),
                                                                                                              new Date(1561572707534L),
                                                                                                              new Date(1561572705301L),
                                                                                                              new Date(1561572702829L)))
                                                                                  .notInUpdatedAts(Arrays.asList(new Date(1561572703309L),
                                                                                                                 new Date(1561572707169L),
                                                                                                                 new Date(1561572709759L),
                                                                                                                 new Date(1561572701396L)))
                                                                                  .lessThanUpdatedAt(new Date(1561572710667L))
                                                                                  .greaterThanUpdatedAt(new Date(1561572705747L))
                                                                                  .equalToDescription("cf093492-8282-4255-9e84-ac86052f2aaa")
                                                                                  .notEqualToDescription("78d2e7b4-36ec-4f87-9f02-e429f5cdc594")
                                                                                  .inDescriptions(Arrays.asList("bb868f46-f651-4265-a28d-151211bc9af9",
                                                                                                                "e19718a8-d230-4397-9919-2b18d2a1c583",
                                                                                                                "118b7997-1c5c-4e94-b627-bdc4cf448955",
                                                                                                                "77520667-0456-499e-a909-df174f5b7e6c",
                                                                                                                "5201b0df-25f2-47be-b168-ee102c14b076"))
                                                                                  .notInDescriptions(Arrays.asList("c11ee2b9-863c-4df8-9fcf-88fd9576a659",
                                                                                                                   "d40e5f57-a8f7-42d0-9674-fb696ec4e0b3",
                                                                                                                   "1515c0c7-a182-44c0-ab55-dd9d084c1b26",
                                                                                                                   "90c087e3-5814-4892-8bfb-311ed800f93b",
                                                                                                                   "52416d7c-56ca-4170-bb2a-b7194c34c7c3",
                                                                                                                   "e7ed3664-fda1-4f68-a6f9-5e4f7af2f7cf"));
            assertTrue(option.hasFilters());
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1561572709136L), new Date(1561572702478L), new Date(1561572710577L),
                                       new Date(1561572702562L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1561572705330L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                        FilterOperator.LESS_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1561572710555L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1561572701373L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME, FilterOperator.EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("f08c77b0-05a2-4ad6-ae95-cf2d1f05a152",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("10b48e51-ea2f-4a5f-92e9-eb7471487e69",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME, FilterOperator.IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("9a5aa6ac-9196-4bbc-a6d1-19b54be1e9a0", "2d24feff-9851-4f94-8362-e58cb3581b3f",
                                       "ce4dd621-899b-4bc8-bd66-266f5c0445eb", "23b63532-e9f3-407e-9b42-935acd8e6827",
                                       "6a6e7621-1905-46a4-a303-a89f66f01a4b", "2a80984f-0033-427b-8624-12cbf20452c0"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("919d67d4-b8c2-4207-a902-523ec2dbd33d"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID, FilterOperator.EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("e3ae69c6-d860-4692-a2ed-2f3e4c862083",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("fd251211-25d8-43a8-9c87-4650683273ec",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID, FilterOperator.IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("a2379a50-3ded-476a-9b5e-92ec87ea02df", "e79013c3-8fca-4679-b495-37aac352a4f6"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("4f5bc210-1c0c-42bd-9196-fd552027cc2a", "53df6b76-38b1-4580-969a-a7b1a3188757",
                                       "9cd0a1a3-d6a6-425c-a52f-c8ce27d5118d", "bc93b6fa-8314-4313-8f36-5ba1ca3e4847",
                                       "6604a74c-c78b-4962-a408-efe1b8036098", "233c5eb1-b006-49a3-ae2e-848afcf6e04a",
                                       "b04e8618-de15-41e5-bed5-262bbc32a729", "389dcad4-027e-4c79-8a96-fd11fc04ecba"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("abf60977-4cd5-486d-92f2-ed3ad38c6cc3",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("987089b7-ab3e-40d3-ae9e-efaad6c50180",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("06329c89-0ebd-4397-bc8e-0ffe71218137", "529a2140-8aae-455a-a2d6-c9c7416f3246",
                                       "20900e10-defe-463d-9a31-ee3f83d33d29", "356d1e9c-6717-4e21-9fbc-40d52f497e00",
                                       "639920d8-2438-4461-8cd5-12c98d30f3de", "440e15a2-6ac0-48c8-944c-f747c13dc541"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("01518b64-5a9b-48f1-ba5d-bc82cc6d45bd", "520508f6-80af-44f2-bed6-0a1145c001eb"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(-120),
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    Long.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(-84),
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                       Long.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(-84), Long.valueOf(-95), Long.valueOf(34), Long.valueOf(-95),
                                       Long.valueOf(65)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                        FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(60), Long.valueOf(-67), Long.valueOf(-31), Long.valueOf(77),
                                       Long.valueOf(-64), Long.valueOf(91), Long.valueOf(-66)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS, FilterOperator.EQUAL));
            assertNotNull(option.getDeviceClassFilters());
            assertEquals("d503739c-cd5e-4f5e-93f9-bceddada847d",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDeviceClassFilters());
            assertEquals("81d821bf-6df1-4a00-b269-f5f5934c7ef7",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS, FilterOperator.IN));
            assertNotNull(option.getDeviceClassFilters());
            assertEquals(Arrays.asList("afb04bbd-9067-4f3b-80bf-df8a3c508f0e", "a37805c0-95e7-4db1-aa10-5cc3f019bd0d",
                                       "cf3eba82-0353-4f1e-9827-46dfcce765d6", "b1467e22-0190-4b85-8d17-b541782c8fc3",
                                       "3ca97863-0be6-4c0f-a4fb-d35619af642a"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS, FilterOperator.NOT_IN));
            assertNotNull(option.getDeviceClassFilters());
            assertEquals(Arrays.asList("eccb0eba-7bf9-4a55-8746-e056a1234066", "d4ac6e7c-e399-4e16-bb69-48efb2d6d560",
                                       "4808c2d8-7ebe-4c75-b52a-85b39d98f2ea", "0cf0fb88-be0f-4faf-8b1c-4c46c3f304a1",
                                       "f9f4d2c3-68f0-4e62-8609-551c4d2a6534", "85d8ba63-cd48-4073-ae86-d1abcd576f26",
                                       "a26f776c-0374-401f-95f3-b8eebe9bbbf7", "bcacab7c-8797-4383-acc1-fab499abb4aa",
                                       "23db091f-e0ca-4a4b-9723-d0d09ad50620"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP, FilterOperator.IN));
            assertNotNull(option.getTimestampFilters());
            assertEquals(Arrays.asList(new Date(1561572706814L), new Date(1561572707676L), new Date(1561572710800L),
                                       new Date(1561572702472L), new Date(1561572706141L), new Date(1561572709861L),
                                       new Date(1561572707354L), new Date(1561572708020L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP, FilterOperator.NOT_IN));
            assertNotNull(option.getTimestampFilters());
            assertEquals(Arrays.asList(new Date(1561572703199L), new Date(1561572710650L), new Date(1561572705039L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP, FilterOperator.LESS_THAN));
            assertNotNull(option.getTimestampFilters());
            assertEquals(new Date(1561572704933L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getTimestampFilters());
            assertEquals(new Date(1561572707620L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1561572707997L), new Date(1561572709941L), new Date(1561572709417L),
                                       new Date(1561572705527L), new Date(1561572710690L), new Date(1561572707534L),
                                       new Date(1561572705301L), new Date(1561572702829L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1561572703309L), new Date(1561572707169L), new Date(1561572709759L),
                                       new Date(1561572701396L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                        FilterOperator.LESS_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1561572710667L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1561572705747L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("cf093492-8282-4255-9e84-ac86052f2aaa",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("78d2e7b4-36ec-4f87-9f02-e429f5cdc594",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("bb868f46-f651-4265-a28d-151211bc9af9", "e19718a8-d230-4397-9919-2b18d2a1c583",
                                       "118b7997-1c5c-4e94-b627-bdc4cf448955", "77520667-0456-499e-a909-df174f5b7e6c",
                                       "5201b0df-25f2-47be-b168-ee102c14b076"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("c11ee2b9-863c-4df8-9fcf-88fd9576a659", "d40e5f57-a8f7-42d0-9674-fb696ec4e0b3",
                                       "1515c0c7-a182-44c0-ab55-dd9d084c1b26", "90c087e3-5814-4892-8bfb-311ed800f93b",
                                       "52416d7c-56ca-4170-bb2a-b7194c34c7c3", "e7ed3664-fda1-4f68-a6f9-5e4f7af2f7cf"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    List.class, option));
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            FirmwareManifestListOptions firmwaremanifestlistoptions1 = new FirmwareManifestListOptions(Integer.valueOf(-118),
                                                                                                       Long.valueOf(115),
                                                                                                       Order.getDefault(),
                                                                                                       "6b66c9e6-d60e-420d-8596-26e4a42c862d",
                                                                                                       null, null);
            FirmwareManifestListOptions firmwaremanifestlistoptions2 = new FirmwareManifestListOptions(Integer.valueOf(-118),
                                                                                                       Long.valueOf(115),
                                                                                                       Order.getDefault(),
                                                                                                       "6b66c9e6-d60e-420d-8596-26e4a42c862d",
                                                                                                       null, null);
            assertNotNull(firmwaremanifestlistoptions1);
            assertNotNull(firmwaremanifestlistoptions2);
            assertNotSame(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2.hashCode(), firmwaremanifestlistoptions1.hashCode());
            int hashCode = firmwaremanifestlistoptions1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, firmwaremanifestlistoptions1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            FirmwareManifestListOptions firmwaremanifestlistoptions1 = new FirmwareManifestListOptions(Integer.valueOf(-29),
                                                                                                       Long.valueOf(81),
                                                                                                       Order.getDefault(),
                                                                                                       "b17156b7-95be-44bf-bc5d-7fe45238d110",
                                                                                                       null, null);
            FirmwareManifestListOptions firmwaremanifestlistoptions2 = new FirmwareManifestListOptions(Integer.valueOf(-29),
                                                                                                       Long.valueOf(81),
                                                                                                       Order.getDefault(),
                                                                                                       "b17156b7-95be-44bf-bc5d-7fe45238d110",
                                                                                                       null, null);
            FirmwareManifestListOptions firmwaremanifestlistoptions3 = new FirmwareManifestListOptions(Integer.valueOf(103),
                                                                                                       Long.valueOf(82),
                                                                                                       Order.getDefault(),
                                                                                                       "04ef1b00-647b-481e-910d-f9bf6047afaf",
                                                                                                       null, null);
            assertNotNull(firmwaremanifestlistoptions1);
            assertNotNull(firmwaremanifestlistoptions2);
            assertNotNull(firmwaremanifestlistoptions3);
            assertNotSame(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertNotSame(firmwaremanifestlistoptions3, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions1, firmwaremanifestlistoptions2);
            assertEquals(firmwaremanifestlistoptions1, firmwaremanifestlistoptions1);
            assertFalse(firmwaremanifestlistoptions1.equals(null));
            assertNotEquals(firmwaremanifestlistoptions3, firmwaremanifestlistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
