// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.security.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeveloperCertificate.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeveloperCertificate {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("934a55d2-c859-49e8-bd10-1f5bd806d1fd",
                                                                                  "ed02c038-1d7e-43a0-b16e-e1e70a72ca57",
                                                                                  new Date(1561572706761L),
                                                                                  "a5f8cac0-14bc-4a6f-a26f-03856115c19f",
                                                                                  "739584da-c89b-40b6-8041-fcd8edf2834e",
                                                                                  "19eb24bc-46b3-4b0c-b0f0-03f09e10b8ba",
                                                                                  "0a4e20c5-33f1-4fc4-8c06-e19821525816",
                                                                                  "586f1059-aa98-4e6f-8a9f-90d903d6adef");
            DeveloperCertificate developercertificate2 = developercertificate1.clone();
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("c090c468-c883-47a8-b2c1-dd0cd8283c99",
                                                                                  "4b92c6a1-ba6b-4303-b52d-2e0bc1db8a30",
                                                                                  new Date(1561572703966L),
                                                                                  "37db9f78-daa4-4db1-8bb7-8a4df0f87a16",
                                                                                  "7be4421c-669b-4896-8593-718e89e78c4a",
                                                                                  "d74f40fd-15d7-4110-91e6-66fced17e94b",
                                                                                  "4c9f4e6f-d0e7-4e44-be12-c89526878a58",
                                                                                  "52968304-44b0-4994-9359-eb3b9679cb22");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("c090c468-c883-47a8-b2c1-dd0cd8283c99",
                                                                                  "4b92c6a1-ba6b-4303-b52d-2e0bc1db8a30",
                                                                                  new Date(1561572703966L),
                                                                                  "37db9f78-daa4-4db1-8bb7-8a4df0f87a16",
                                                                                  "7be4421c-669b-4896-8593-718e89e78c4a",
                                                                                  "d74f40fd-15d7-4110-91e6-66fced17e94b",
                                                                                  "4c9f4e6f-d0e7-4e44-be12-c89526878a58",
                                                                                  "52968304-44b0-4994-9359-eb3b9679cb22");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2.hashCode(), developercertificate1.hashCode());
            int hashCode = developercertificate1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, developercertificate1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeveloperCertificate developercertificate = new DeveloperCertificate("01c9ebf7-1c92-44d2-bd9d-c2ab71586908",
                                                                             "f49e219b-4b84-4c30-8a71-7aef62d0feb4",
                                                                             new Date(1561572704939L),
                                                                             "fe271576-64e4-4d04-9d0f-e678ce0a4df6",
                                                                             "bbb5615c-e278-4a44-9c91-1cfbe6cd5749",
                                                                             "fde2b646-e1fb-4f0a-a5d2-e9074bad2e26",
                                                                             "2eb3e2ba-68a0-4b5a-84e0-efaa5b7651d1",
                                                                             "ff0e9301-ad7a-4edd-9c5a-eca866d5c6e9");
        assertTrue(developercertificate.isValid());
        DeveloperCertificate developercertificateInvalid = new DeveloperCertificate("a690b571-dddd-4a03-810d-699233e1ec4c",
                                                                                    "c7fd5150-6385-4286-99b5-72bd3a225a56",
                                                                                    new Date(1561572700161L),
                                                                                    "6fa696ce-701c-4cd4-83da-93c478edc83c",
                                                                                    "431e8a46-7e2e-4f06-8a59-c0af467d5f34",
                                                                                    "bc5dba23-801d-4b31-b238-1d7d78491dd4",
                                                                                    null,
                                                                                    "dfbb585a-4101-4685-acf1-4ed2ed5769f0");
        assertFalse(developercertificateInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("ac27d0e1-605e-4dde-bdc1-9f1c1142b5c5",
                                                                                  "1dd6b28a-2062-46f0-ba5a-0a755242bc75",
                                                                                  new Date(1561572707056L),
                                                                                  "00df1248-5f7a-42de-95af-2f2c644bcd4c",
                                                                                  "6ffaa8cc-1510-44c8-9d5a-88befafb5207",
                                                                                  "892659e8-2d45-4880-a283-30079d2382a7",
                                                                                  "2d461cf7-6f27-4bf7-b0a6-6eea6d55e2b9",
                                                                                  "f374aa11-3d3e-43b1-9be4-048aba1a9bf4");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("ac27d0e1-605e-4dde-bdc1-9f1c1142b5c5",
                                                                                  "1dd6b28a-2062-46f0-ba5a-0a755242bc75",
                                                                                  new Date(1561572707056L),
                                                                                  "00df1248-5f7a-42de-95af-2f2c644bcd4c",
                                                                                  "6ffaa8cc-1510-44c8-9d5a-88befafb5207",
                                                                                  "892659e8-2d45-4880-a283-30079d2382a7",
                                                                                  "2d461cf7-6f27-4bf7-b0a6-6eea6d55e2b9",
                                                                                  "f374aa11-3d3e-43b1-9be4-048aba1a9bf4");
            DeveloperCertificate developercertificate3 = new DeveloperCertificate("9551b364-790f-405d-a200-2f80f2b092e8",
                                                                                  "302e6507-be6b-4acd-89a2-ca038705a121",
                                                                                  new Date(1561572701477L),
                                                                                  "001369b6-80c5-49a9-84e2-d56b4f414bf7",
                                                                                  "243e6e1d-1134-46d8-8ef3-84a05683668e",
                                                                                  "c1d5cf18-c8c0-43c8-9d7f-89a2abbd4ac5",
                                                                                  "19406856-140f-4ab9-bf67-6933a71dbb63",
                                                                                  "79fdf28e-f95a-4757-aea3-1f23f8bd13c8");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotNull(developercertificate3);
            assertNotSame(developercertificate2, developercertificate1);
            assertNotSame(developercertificate3, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate1, developercertificate2);
            assertEquals(developercertificate1, developercertificate1);
            assertFalse(developercertificate1.equals(null));
            assertNotEquals(developercertificate3, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
