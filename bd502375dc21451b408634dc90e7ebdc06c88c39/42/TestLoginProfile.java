// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model LoginProfile.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestLoginProfile {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            LoginProfile loginprofile1 = new LoginProfile("6746caec-532e-43a4-b89e-acf9c3014ab3",
                                                          "a08a0ba4-76b8-4e21-9edd-510bb628a43b");
            LoginProfile loginprofile2 = loginprofile1.clone();
            assertNotNull(loginprofile1);
            assertNotNull(loginprofile2);
            assertNotSame(loginprofile2, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            LoginProfile loginprofile1 = new LoginProfile("72519178-171f-4874-aec2-0d98e347b614",
                                                          "3bf10044-b2b9-43d4-a248-fb5aefac8dbf");
            LoginProfile loginprofile2 = new LoginProfile("72519178-171f-4874-aec2-0d98e347b614",
                                                          "3bf10044-b2b9-43d4-a248-fb5aefac8dbf");
            assertNotNull(loginprofile1);
            assertNotNull(loginprofile2);
            assertNotSame(loginprofile2, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
            assertEquals(loginprofile2.hashCode(), loginprofile1.hashCode());
            int hashCode = loginprofile1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, loginprofile1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        LoginProfile loginprofile = new LoginProfile("065ceb96-296b-4a45-ace4-96654a12ff8b",
                                                     "1e227cb2-fc64-4a4b-bd3a-6b77942c8eae");
        assertTrue(loginprofile.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            LoginProfile loginprofile1 = new LoginProfile("670b4286-f060-43e3-97b8-46c8b1cc4d77",
                                                          "516ebb1f-08f0-4efa-a591-4d37ef02bd44");
            LoginProfile loginprofile2 = new LoginProfile("670b4286-f060-43e3-97b8-46c8b1cc4d77",
                                                          "516ebb1f-08f0-4efa-a591-4d37ef02bd44");
            LoginProfile loginprofile3 = new LoginProfile("587d95c5-b638-4120-9b27-34e0f28d33a2",
                                                          "864edd88-8007-462c-b42c-4c950343b749");
            assertNotNull(loginprofile1);
            assertNotNull(loginprofile2);
            assertNotNull(loginprofile3);
            assertNotSame(loginprofile2, loginprofile1);
            assertNotSame(loginprofile3, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
            assertEquals(loginprofile1, loginprofile2);
            assertEquals(loginprofile1, loginprofile1);
            assertFalse(loginprofile1.equals(null));
            assertNotEquals(loginprofile3, loginprofile1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
