// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.deviceupdate.model;

import static org.junit.Assert.*;

import com.arm.mbed.cloud.sdk.common.Order;
import com.arm.mbed.cloud.sdk.common.listing.ListOptionsEncoder;
import com.arm.mbed.cloud.sdk.common.listing.filtering.FilterOperator;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import org.junit.Test;

/**
 * Unit tests for Model FirmwareImageListOptions.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestFirmwareImageListOptions {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            FirmwareImageListOptions firmwareimagelistoptions1 = new FirmwareImageListOptions(Integer.valueOf(-24),
                                                                                              Long.valueOf(50),
                                                                                              Order.getDefault(),
                                                                                              "124c52db-426d-4d47-82b7-964897f3d9a5",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions2 = firmwareimagelistoptions1.clone();
            assertNotNull(firmwareimagelistoptions1);
            assertNotNull(firmwareimagelistoptions2);
            assertNotSame(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the filters method.
     */
    @SuppressWarnings({ "boxing", "resource" })
    @Test
    public void testFilters() {
        try {
            FirmwareImageListOptions option = new FirmwareImageListOptions().inUpdatedAts(Arrays.asList(new Date(1561572710074L),
                                                                                                        new Date(1561572707753L),
                                                                                                        new Date(1561572708615L),
                                                                                                        new Date(1561572703787L),
                                                                                                        new Date(1561572704733L),
                                                                                                        new Date(1561572705217L),
                                                                                                        new Date(1561572709914L),
                                                                                                        new Date(1561572701684L),
                                                                                                        new Date(1561572708697L)))
                                                                            .notInUpdatedAts(Arrays.asList(new Date(1561572702928L),
                                                                                                           new Date(1561572705100L),
                                                                                                           new Date(1561572704838L),
                                                                                                           new Date(1561572702727L),
                                                                                                           new Date(1561572705847L),
                                                                                                           new Date(1561572710230L),
                                                                                                           new Date(1561572710805L),
                                                                                                           new Date(1561572711173L)))
                                                                            .lessThanUpdatedAt(new Date(1561572704166L))
                                                                            .greaterThanUpdatedAt(new Date(1561572701310L))
                                                                            .equalToName("707bf8b5-8527-48a8-ad0e-b1fd0144c88e")
                                                                            .notEqualToName("66486ef6-11e5-40d9-b147-c24ffe3200b8")
                                                                            .inNames(Arrays.asList("d4a068e5-d4db-4c3f-a050-91c7f49829d6",
                                                                                                   "7c84585f-69f8-4ec5-b827-e0c052921b70",
                                                                                                   "c136db9b-89b8-4eeb-aa5f-9a8a609b38b4",
                                                                                                   "ae09bc7c-b5e4-47b0-8475-03efa2b67185",
                                                                                                   "ce6b5c07-e8cf-464e-a400-da22c7c7dc07",
                                                                                                   "387e2ecd-0867-41d4-95e5-5c7e3fc1ad47"))
                                                                            .notInNames(Arrays.asList("7f03219f-fefd-429b-ac8d-63cb31a1aeab",
                                                                                                      "f4db2290-ce33-45f0-853d-e525a402ae48",
                                                                                                      "62505fa3-67be-4ee0-9518-66295250e72a",
                                                                                                      "7bffc444-0027-4a89-868e-4930a2b1006b"))
                                                                            .equalToDescription("3c8f715d-fc30-4158-8d6d-19f522932db7")
                                                                            .notEqualToDescription("60c0fb7b-9466-464a-ba9e-84d1fb7b986c")
                                                                            .inDescriptions(Arrays.asList("691a1523-8812-4b46-adda-3fcd3b58947b",
                                                                                                          "5293ac88-5eba-4fce-9440-7cb409ba08a0",
                                                                                                          "1b8a1902-5065-4667-b38e-3f3e3c99aee2"))
                                                                            .notInDescriptions(Arrays.asList("97d519d8-887c-48f0-934c-da57515493d9",
                                                                                                             "b84dc694-93ca-4818-835c-de2c5cd3a20b",
                                                                                                             "dbc5b181-623e-44cf-869d-6cb9ef050146",
                                                                                                             "f930c7a6-c02f-4811-86dd-fa7ee37de19e",
                                                                                                             "be704dad-41bf-4e81-ab5c-1c49fd88b021"))
                                                                            .inCreatedAts(Arrays.asList(new Date(1561572704891L)))
                                                                            .notInCreatedAts(Arrays.asList(new Date(1561572708603L),
                                                                                                           new Date(1561572705369L),
                                                                                                           new Date(1561572707903L)))
                                                                            .lessThanCreatedAt(new Date(1561572704716L))
                                                                            .greaterThanCreatedAt(new Date(1561572706979L))
                                                                            .equalToDatafileUrl("3104ee05-8952-4902-9a88-41a667a12f00")
                                                                            .notEqualToDatafileUrl("fd57f312-3d15-4d0e-b390-ec2a25e57c1b")
                                                                            .inDatafileUrls(Arrays.asList("322f6941-2bdb-4dfa-be55-890ad0807070",
                                                                                                          "665f5486-45b1-4e6f-8cbb-21023f75be32",
                                                                                                          "df022ce4-7795-4b47-bb10-eb2acbfe9cef",
                                                                                                          "4874d11f-bcdf-4df2-a245-be03adcfeb46",
                                                                                                          "3148ffd7-a6ce-48a9-869e-79e161d2ce6a"))
                                                                            .notInDatafileUrls(Arrays.asList("9698ed61-7943-42b5-b43b-86e0ec42dbb3",
                                                                                                             "76feff88-4810-474d-9df9-7e070bc34545",
                                                                                                             "e8ed7211-7faa-4c2e-81d9-4433d52c8987",
                                                                                                             "2d499197-c2b5-47b0-920d-231eb2465a96",
                                                                                                             "71617703-c956-4871-95b5-bda9ace12330"))
                                                                            .equalToDatafileSize(Long.valueOf(43))
                                                                            .notEqualToDatafileSize(Long.valueOf(92))
                                                                            .inDatafileSizes(Arrays.asList(Long.valueOf(126),
                                                                                                           Long.valueOf(-67),
                                                                                                           Long.valueOf(61),
                                                                                                           Long.valueOf(72),
                                                                                                           Long.valueOf(-60),
                                                                                                           Long.valueOf(-27),
                                                                                                           Long.valueOf(-28),
                                                                                                           Long.valueOf(0),
                                                                                                           Long.valueOf(-105)))
                                                                            .notInDatafileSizes(Arrays.asList(Long.valueOf(22),
                                                                                                              Long.valueOf(124)))
                                                                            .equalToDatafileChecksum("7107af17-5074-4e95-9631-7428dc1675ac")
                                                                            .notEqualToDatafileChecksum("29c2d4f2-4547-4d86-b930-dafbecb8f741")
                                                                            .inDatafileChecksums(Arrays.asList("055efdde-f6da-4702-a670-0f4331090fb8",
                                                                                                               "fd3c0a2d-fafc-482c-8a18-5c30560a192f",
                                                                                                               "ed4773f5-cd3e-4d36-b1ed-ea6e063d5739",
                                                                                                               "3d2bdd81-827f-4dbb-8ab4-c730ce508051",
                                                                                                               "a6c08e47-a265-4907-8db1-c9f21b1dca13",
                                                                                                               "7b7094ba-9b9d-4ec8-8e77-3ced6954c921"))
                                                                            .notInDatafileChecksums(Arrays.asList("23039085-f482-460b-a652-401bb74985a1",
                                                                                                                  "bf698727-f686-4bbd-a6f0-36e67e7b5d41",
                                                                                                                  "fa58eae4-0f33-44d3-b9c1-16f797e9d39d"))
                                                                            .equalToId("44381741-d951-4eb3-b4da-c013f1e40a29")
                                                                            .notEqualToId("5a39c9ac-6b70-4871-9f00-0eb0fdc2cfdf")
                                                                            .inIds(Arrays.asList("5c3870b8-fdc0-47d3-bf96-49cf1696421e",
                                                                                                 "547410a2-5f86-4d7e-b8f4-9cee86547fa4"))
                                                                            .notInIds(Arrays.asList("3a0b4357-03df-490b-a474-2e813f62b26a",
                                                                                                    "f793877f-e926-4897-8bf1-885386f09f4a",
                                                                                                    "aff17974-48de-4346-919b-672269f93937",
                                                                                                    "f3abd8e8-ab08-4ac0-984f-f055b844c2ed",
                                                                                                    "7b1d6214-7ccc-4695-8673-1eef2725067c",
                                                                                                    "3fc6e46a-8b1c-4982-83cb-0fc6cd625178",
                                                                                                    "8d93accf-e345-4e3d-b1d6-a2ce56fecf2d",
                                                                                                    "cf2202de-a417-4a84-82f3-e48c84e0dd22"));
            assertTrue(option.hasFilters());
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1561572710074L), new Date(1561572707753L), new Date(1561572708615L),
                                       new Date(1561572703787L), new Date(1561572704733L), new Date(1561572705217L),
                                       new Date(1561572709914L), new Date(1561572701684L), new Date(1561572708697L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1561572702928L), new Date(1561572705100L), new Date(1561572704838L),
                                       new Date(1561572702727L), new Date(1561572705847L), new Date(1561572710230L),
                                       new Date(1561572710805L), new Date(1561572711173L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.LESS_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1561572704166L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1561572701310L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("707bf8b5-8527-48a8-ad0e-b1fd0144c88e",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("66486ef6-11e5-40d9-b147-c24ffe3200b8",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("d4a068e5-d4db-4c3f-a050-91c7f49829d6", "7c84585f-69f8-4ec5-b827-e0c052921b70",
                                       "c136db9b-89b8-4eeb-aa5f-9a8a609b38b4", "ae09bc7c-b5e4-47b0-8475-03efa2b67185",
                                       "ce6b5c07-e8cf-464e-a400-da22c7c7dc07", "387e2ecd-0867-41d4-95e5-5c7e3fc1ad47"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("7f03219f-fefd-429b-ac8d-63cb31a1aeab", "f4db2290-ce33-45f0-853d-e525a402ae48",
                                       "62505fa3-67be-4ee0-9518-66295250e72a", "7bffc444-0027-4a89-868e-4930a2b1006b"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("3c8f715d-fc30-4158-8d6d-19f522932db7",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("60c0fb7b-9466-464a-ba9e-84d1fb7b986c",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("691a1523-8812-4b46-adda-3fcd3b58947b", "5293ac88-5eba-4fce-9440-7cb409ba08a0",
                                       "1b8a1902-5065-4667-b38e-3f3e3c99aee2"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("97d519d8-887c-48f0-934c-da57515493d9", "b84dc694-93ca-4818-835c-de2c5cd3a20b",
                                       "dbc5b181-623e-44cf-869d-6cb9ef050146", "f930c7a6-c02f-4811-86dd-fa7ee37de19e",
                                       "be704dad-41bf-4e81-ab5c-1c49fd88b021"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1561572704891L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1561572708603L), new Date(1561572705369L), new Date(1561572707903L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.LESS_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1561572704716L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1561572706979L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("3104ee05-8952-4902-9a88-41a667a12f00",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("fd57f312-3d15-4d0e-b390-ec2a25e57c1b",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("322f6941-2bdb-4dfa-be55-890ad0807070", "665f5486-45b1-4e6f-8cbb-21023f75be32",
                                       "df022ce4-7795-4b47-bb10-eb2acbfe9cef", "4874d11f-bcdf-4df2-a245-be03adcfeb46",
                                       "3148ffd7-a6ce-48a9-869e-79e161d2ce6a"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("9698ed61-7943-42b5-b43b-86e0ec42dbb3", "76feff88-4810-474d-9df9-7e070bc34545",
                                       "e8ed7211-7faa-4c2e-81d9-4433d52c8987", "2d499197-c2b5-47b0-920d-231eb2465a96",
                                       "71617703-c956-4871-95b5-bda9ace12330"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(43),
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    Long.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(92),
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                       Long.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(126), Long.valueOf(-67), Long.valueOf(61), Long.valueOf(72),
                                       Long.valueOf(-60), Long.valueOf(-27), Long.valueOf(-28), Long.valueOf(0),
                                       Long.valueOf(-105)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(22), Long.valueOf(124)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                        FilterOperator.EQUAL));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals("7107af17-5074-4e95-9631-7428dc1675ac",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals("29c2d4f2-4547-4d86-b930-dafbecb8f741",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM, FilterOperator.IN));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals(Arrays.asList("055efdde-f6da-4702-a670-0f4331090fb8", "fd3c0a2d-fafc-482c-8a18-5c30560a192f",
                                       "ed4773f5-cd3e-4d36-b1ed-ea6e063d5739", "3d2bdd81-827f-4dbb-8ab4-c730ce508051",
                                       "a6c08e47-a265-4907-8db1-c9f21b1dca13", "7b7094ba-9b9d-4ec8-8e77-3ced6954c921"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                        FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals(Arrays.asList("23039085-f482-460b-a652-401bb74985a1", "bf698727-f686-4bbd-a6f0-36e67e7b5d41",
                                       "fa58eae4-0f33-44d3-b9c1-16f797e9d39d"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("44381741-d951-4eb3-b4da-c013f1e40a29",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("5a39c9ac-6b70-4871-9f00-0eb0fdc2cfdf",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("5c3870b8-fdc0-47d3-bf96-49cf1696421e", "547410a2-5f86-4d7e-b8f4-9cee86547fa4"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, List.class,
                                                                 option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("3a0b4357-03df-490b-a474-2e813f62b26a", "f793877f-e926-4897-8bf1-885386f09f4a",
                                       "aff17974-48de-4346-919b-672269f93937", "f3abd8e8-ab08-4ac0-984f-f055b844c2ed",
                                       "7b1d6214-7ccc-4695-8673-1eef2725067c", "3fc6e46a-8b1c-4982-83cb-0fc6cd625178",
                                       "8d93accf-e345-4e3d-b1d6-a2ce56fecf2d", "cf2202de-a417-4a84-82f3-e48c84e0dd22"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID,
                                                                    List.class, option));
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            FirmwareImageListOptions firmwareimagelistoptions1 = new FirmwareImageListOptions(Integer.valueOf(-19),
                                                                                              Long.valueOf(72),
                                                                                              Order.getDefault(),
                                                                                              "38d76396-77c3-44ac-b965-1514d13299ad",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions2 = new FirmwareImageListOptions(Integer.valueOf(-19),
                                                                                              Long.valueOf(72),
                                                                                              Order.getDefault(),
                                                                                              "38d76396-77c3-44ac-b965-1514d13299ad",
                                                                                              null, null);
            assertNotNull(firmwareimagelistoptions1);
            assertNotNull(firmwareimagelistoptions2);
            assertNotSame(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2.hashCode(), firmwareimagelistoptions1.hashCode());
            int hashCode = firmwareimagelistoptions1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, firmwareimagelistoptions1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            FirmwareImageListOptions firmwareimagelistoptions1 = new FirmwareImageListOptions(Integer.valueOf(85),
                                                                                              Long.valueOf(39),
                                                                                              Order.getDefault(),
                                                                                              "b9c0194c-b478-4b1f-bf15-8f3869906891",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions2 = new FirmwareImageListOptions(Integer.valueOf(85),
                                                                                              Long.valueOf(39),
                                                                                              Order.getDefault(),
                                                                                              "b9c0194c-b478-4b1f-bf15-8f3869906891",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions3 = new FirmwareImageListOptions(Integer.valueOf(-30),
                                                                                              Long.valueOf(5),
                                                                                              Order.getDefault(),
                                                                                              "f8b824c5-f0b1-4087-9bad-37a07f4c78eb",
                                                                                              null, null);
            assertNotNull(firmwareimagelistoptions1);
            assertNotNull(firmwareimagelistoptions2);
            assertNotNull(firmwareimagelistoptions3);
            assertNotSame(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertNotSame(firmwareimagelistoptions3, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions1, firmwareimagelistoptions2);
            assertEquals(firmwareimagelistoptions1, firmwareimagelistoptions1);
            assertFalse(firmwareimagelistoptions1.equals(null));
            assertNotEquals(firmwareimagelistoptions3, firmwareimagelistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
