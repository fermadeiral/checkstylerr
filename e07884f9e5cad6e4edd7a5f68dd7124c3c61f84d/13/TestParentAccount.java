// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model ParentAccount.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestParentAccount {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("48737.97cc2@799de.fr",
                                                             "5a0fa2c3-6a70-49ea-a882-233cc4c45e99",
                                                             "ebb6e571ba299e09d8e8859accae6efa");
            ParentAccount parentaccount2 = parentaccount1.clone();
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotSame(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("71fce.2205d@b7143.fr",
                                                             "94cef4fd-de15-4d64-8970-1cc9cc1094a6",
                                                             "ebb6e571ba299e09d8e8859accae6efa");
            ParentAccount parentaccount2 = new ParentAccount("71fce.2205d@b7143.fr",
                                                             "94cef4fd-de15-4d64-8970-1cc9cc1094a6",
                                                             "ebb6e571ba299e09d8e8859accae6efa");
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotSame(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount2.hashCode(), parentaccount1.hashCode());
            int hashCode = parentaccount1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, parentaccount1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ParentAccount parentaccount = new ParentAccount("2be01.abffd@b2302.me", "8d0bfeb0-2a90-4b37-8ab9-3588180e2390",
                                                        "ebb6e571ba299e09d8e8859accae6efa");
        assertTrue(parentaccount.isValid());
        ParentAccount parentaccountInvalid = new ParentAccount("箪<Ⲣ￴摠쑕Ẻ专>ﾢ쿛￤ἹŴ껜!秫㨓艈稞\u0019￩৭✋Ɖ�?\u001b\b斴竒粥#\u0015\u001c-�?嶖脪籦ꬾጫ放\u001e�?±简筴>ቅ￦#ƕﾞȎ듛>�?!玸8\u0010�?Ⅶ",
                                                               "07c10c3f-e834-41c5-8201-62741b9d16b4d226a7ef-73d8-4c89-a7dd-8512efdb271ad24c54ec-6af0-4510-9b78-15799be33c52",
                                                               "\u000143兲ᥢ3& ][[枠34P\u0006[43=44V44覠뺔ຫ&\b㘒\u001e\u001f餆S.4:F\t333!?3,!4Wᰓ(3O\u0004綱骾B3\u0012");
        assertFalse(parentaccountInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("da6a1.2e374@22be9.me",
                                                             "5a0c904e-fdf8-4f6c-9c01-7bcb036ca1cc",
                                                             "ebb6e571ba299e09d8e8859accae6efa");
            ParentAccount parentaccount2 = new ParentAccount("da6a1.2e374@22be9.me",
                                                             "5a0c904e-fdf8-4f6c-9c01-7bcb036ca1cc",
                                                             "ebb6e571ba299e09d8e8859accae6efa");
            ParentAccount parentaccount3 = new ParentAccount("58a29.a7ab5@a36f5.fr",
                                                             "34ef000c-a391-4774-b928-94f425c0fc37",
                                                             "ebb6e571ba299e09d8e8859accae6efa");
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotNull(parentaccount3);
            assertNotSame(parentaccount2, parentaccount1);
            assertNotSame(parentaccount3, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount1, parentaccount2);
            assertEquals(parentaccount1, parentaccount1);
            assertFalse(parentaccount1.equals(null));
            assertNotEquals(parentaccount3, parentaccount1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
