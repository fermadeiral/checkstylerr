// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model ActiveSession.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestActiveSession {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ActiveSession activesession1 = new ActiveSession("fe0cdebdf4aaf1b7e7a0ef94984be8bf",
                                                             "eac8aba5-fce8-424a-a772-0e963bbb2afa",
                                                             new Date(1565778996985L),
                                                             "49ba874a-cb64-4ce4-b1ee-9844d451f468",
                                                             "0164c326-7d12-4d67-a7ef-ceea87336f3d");
            ActiveSession activesession2 = activesession1.clone();
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotSame(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ActiveSession activesession1 = new ActiveSession("fe0cdebdf4aaf1b7e7a0ef94984be8bf",
                                                             "da2a3adb-500d-4539-8edf-11d19c6c3e1b",
                                                             new Date(1565779005531L),
                                                             "acc2a071-f2f4-497b-9ef0-adbbf846d51c",
                                                             "69746d74-085c-4332-ab54-55251da967b4");
            ActiveSession activesession2 = new ActiveSession("fe0cdebdf4aaf1b7e7a0ef94984be8bf",
                                                             "da2a3adb-500d-4539-8edf-11d19c6c3e1b",
                                                             new Date(1565779005531L),
                                                             "acc2a071-f2f4-497b-9ef0-adbbf846d51c",
                                                             "69746d74-085c-4332-ab54-55251da967b4");
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotSame(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession2.hashCode(), activesession1.hashCode());
            int hashCode = activesession1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, activesession1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ActiveSession activesession = new ActiveSession("fe0cdebdf4aaf1b7e7a0ef94984be8bf",
                                                        "ebfb7b7e-3de5-492d-97f0-f5ec3467f148",
                                                        new Date(1565779004090L),
                                                        "507685c6-7913-4d51-a5cb-bb490871526d",
                                                        "09e70b46-0475-4a72-ab8e-7ff48a134fd4");
        assertTrue(activesession.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ActiveSession activesession1 = new ActiveSession("fe0cdebdf4aaf1b7e7a0ef94984be8bf",
                                                             "865fcde0-b565-4db1-a75b-6e9ee9255b9b",
                                                             new Date(1565778999160L),
                                                             "57a9ce5b-eef1-4c7a-ba46-50677e47f444",
                                                             "0cfacf69-fd28-4ea0-8bbb-d2fe79d657f2");
            ActiveSession activesession2 = new ActiveSession("fe0cdebdf4aaf1b7e7a0ef94984be8bf",
                                                             "865fcde0-b565-4db1-a75b-6e9ee9255b9b",
                                                             new Date(1565778999160L),
                                                             "57a9ce5b-eef1-4c7a-ba46-50677e47f444",
                                                             "0cfacf69-fd28-4ea0-8bbb-d2fe79d657f2");
            ActiveSession activesession3 = new ActiveSession("fe0cdebdf4aaf1b7e7a0ef94984be8bf",
                                                             "12b969ef-7e90-4335-a5c8-32f6a0ffddb8",
                                                             new Date(1565779002008L),
                                                             "56a68208-2c05-475d-942a-9d540304dfff",
                                                             "067a445e-5f13-411d-813b-f2308f9b73ae");
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotNull(activesession3);
            assertNotSame(activesession2, activesession1);
            assertNotSame(activesession3, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession1, activesession2);
            assertEquals(activesession1, activesession1);
            assertFalse(activesession1.equals(null));
            assertNotEquals(activesession3, activesession1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
