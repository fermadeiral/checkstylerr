// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEvents.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEvents {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1565779003732L), null,
                                                          new Date(1565778998309L),
                                                          "4483f205-5947-496b-b224-d62048a48acb",
                                                          "7e279f18-91e3-434f-ab5e-6942a2a39c58",
                                                          "87ebd436-9737-4997-b2c5-60e09ee435e6",
                                                          "f7599fab-89fb-4887-8d87-9fb1f5c6ece7",
                                                          "42ff538c-6717-4047-a071-421351af44ad",
                                                          "e25f4eb4-57a0-4498-90c2-2e19649b5a16", true);
            DeviceEvents deviceevents2 = deviceevents1.clone();
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1565778999988L), null,
                                                          new Date(1565778999166L),
                                                          "8065ecbf-ff59-4e60-b56f-870cd86a9bb4",
                                                          "d77d49f5-ad45-4b1f-b10c-0512d2aa18a9",
                                                          "f82ddd4d-8521-4d89-b1b7-b8047a3675ee",
                                                          "0695b057-ff02-45e2-bf82-2b57b0d02084",
                                                          "03e5b528-1ede-43d9-99c8-8aaca59711c4",
                                                          "4470571f-b346-46f2-a680-c7f716f8d67b", false);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1565778999988L), null,
                                                          new Date(1565778999166L),
                                                          "8065ecbf-ff59-4e60-b56f-870cd86a9bb4",
                                                          "d77d49f5-ad45-4b1f-b10c-0512d2aa18a9",
                                                          "f82ddd4d-8521-4d89-b1b7-b8047a3675ee",
                                                          "0695b057-ff02-45e2-bf82-2b57b0d02084",
                                                          "03e5b528-1ede-43d9-99c8-8aaca59711c4",
                                                          "4470571f-b346-46f2-a680-c7f716f8d67b", false);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2.hashCode(), deviceevents1.hashCode());
            int hashCode = deviceevents1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceevents1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEvents deviceevents = new DeviceEvents(null, new Date(1565778999378L), null, new Date(1565779002083L),
                                                     "faf23a39-e1ca-4eef-9ce0-7da23877d1cc",
                                                     "8187bfcf-be9d-4c91-a2a3-9d5afd1a562a",
                                                     "af5e5278-d832-45dd-b8c2-5987b1ae7b9f",
                                                     "d21fdfa6-2207-4ed6-b9d6-051bd3e8a15c",
                                                     "92a4e200-929d-4618-9684-eb9d6ada1ea3",
                                                     "05a7feba-084b-449c-a843-0bf7e2d6c508", false);
        assertTrue(deviceevents.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1565779000980L), null,
                                                          new Date(1565778996841L),
                                                          "7491589d-16f1-460f-b431-c1399971fa6e",
                                                          "4d2b559f-316a-4fb1-87b3-81cae2b2a740",
                                                          "f1fa1c55-d150-44f1-8b81-6287b5a4c00d",
                                                          "b22bdad5-1054-4bd0-818c-004d4012aa53",
                                                          "3d6ad78a-94bc-4309-8720-46140331f454",
                                                          "008ea5b3-9c4e-4f44-b775-5385ede50a7e", false);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1565779000980L), null,
                                                          new Date(1565778996841L),
                                                          "7491589d-16f1-460f-b431-c1399971fa6e",
                                                          "4d2b559f-316a-4fb1-87b3-81cae2b2a740",
                                                          "f1fa1c55-d150-44f1-8b81-6287b5a4c00d",
                                                          "b22bdad5-1054-4bd0-818c-004d4012aa53",
                                                          "3d6ad78a-94bc-4309-8720-46140331f454",
                                                          "008ea5b3-9c4e-4f44-b775-5385ede50a7e", false);
            DeviceEvents deviceevents3 = new DeviceEvents(null, new Date(1565779000737L), null,
                                                          new Date(1565778999954L),
                                                          "5bb15a43-de92-453b-989b-1ad027927116",
                                                          "639179a2-4c9d-4a5b-9e2f-afbcb51ce3e2",
                                                          "e383703c-3e81-4245-aa68-fda901c82f8b",
                                                          "578546ae-2f77-4aa3-aeb2-5a44843f46bb",
                                                          "95bcaa93-4301-4ba8-ac43-c3a86dc1f5a7",
                                                          "1b39d745-e021-48db-9615-248127407635", false);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotNull(deviceevents3);
            assertNotSame(deviceevents2, deviceevents1);
            assertNotSame(deviceevents3, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents1, deviceevents2);
            assertEquals(deviceevents1, deviceevents1);
            assertFalse(deviceevents1.equals(null));
            assertNotEquals(deviceevents3, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
