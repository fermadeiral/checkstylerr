// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantUser.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantUser {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("fe0cdebdf4aaf1b7e7a0ef94984be8bf", null,
                                                             "044f49f7-1ccc-4b5d-8a51-99de84c7cae0",
                                                             new Date(1565778999446L), -126, null,
                                                             "ad7b3.3848d@97f2e.fr", true,
                                                             "c2a6e542-992f-4d8a-9473-a245d3c02b5a", null,
                                                             "fe0cdebdf4aaf1b7e7a0ef94984be8bf", false, false, false,
                                                             -4, null, null, "41f3d7f1-335d-4d8e-a84f-4f02745137e4", 99,
                                                             "65332e1d-eb23-4dbf-8245-eff586d18692",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1565779003389L), "7_._-.");
            SubtenantUser subtenantuser2 = subtenantuser1.clone();
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("fe0cdebdf4aaf1b7e7a0ef94984be8bf", null,
                                                             "0a31defa-e9ad-4b83-9c82-d765f96a1f5d",
                                                             new Date(1565779004696L), -76, null,
                                                             "931c3.232a7@04c07.me", true,
                                                             "75fd5603-7e4f-4926-aae6-0d3c423cfcd3", null,
                                                             "fe0cdebdf4aaf1b7e7a0ef94984be8bf", false, false, true,
                                                             118, null, null, "44c889a8-f747-4474-be21-b5b6aeb8af85",
                                                             32, "0aa8e7e4-7503-4a2b-a7cc-0ef7b3f83756",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1565779002885L), "7_._-.");
            SubtenantUser subtenantuser2 = new SubtenantUser("fe0cdebdf4aaf1b7e7a0ef94984be8bf", null,
                                                             "0a31defa-e9ad-4b83-9c82-d765f96a1f5d",
                                                             new Date(1565779004696L), -76, null,
                                                             "931c3.232a7@04c07.me", true,
                                                             "75fd5603-7e4f-4926-aae6-0d3c423cfcd3", null,
                                                             "fe0cdebdf4aaf1b7e7a0ef94984be8bf", false, false, true,
                                                             118, null, null, "44c889a8-f747-4474-be21-b5b6aeb8af85",
                                                             32, "0aa8e7e4-7503-4a2b-a7cc-0ef7b3f83756",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1565779002885L), "7_._-.");
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2.hashCode(), subtenantuser1.hashCode());
            int hashCode = subtenantuser1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantuser1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantUser subtenantuser = new SubtenantUser("fe0cdebdf4aaf1b7e7a0ef94984be8bf", null,
                                                        "51d6dd01-03e3-4ffa-b5cc-f4822d0ae9b3",
                                                        new Date(1565779000639L), 57, null, "1da3d.04355@94862.me",
                                                        true, "8f286cf9-d346-44cb-91ba-e396f3c6281b", null,
                                                        "fe0cdebdf4aaf1b7e7a0ef94984be8bf", true, true, true, -74, null,
                                                        null, "985bd0ed-cce5-423b-9683-4bc13ea9f83b", 109,
                                                        "27c68bac-0f75-4ca2-ade0-69fc976d0aca",
                                                        SubtenantUserStatus.getDefault(), null,
                                                        new Date(1565779004598L), "7_._-.");
        assertTrue(subtenantuser.isValid());
        SubtenantUser subtenantuserInvalid = new SubtenantUser(null, null, "032a7ab9-8a47-44d2-bfd2-3d7b27203a4e",
                                                               new Date(1565779000495L), 45, null, null, true,
                                                               "4cee953d-39fd-4874-b41d-69732524e90a381a17c2-3c11-463c-864e-5b5443045c0afa265eb5-932d-4b41-bfeb-621135b1e0ac",
                                                               null,
                                                               "5\u001c2\\\\áŸ¿:363A*ì¬½X5à¦¦ï¬‹\u001bæƒ¼56Q53?^265\u001026 2\u0014663\u001a\u001852î¸£N$$Y555\u0011é—Š525X6ã¢¬2æŠ¤2/\u00036?]",
                                                               false, true, true, 3, null, null,
                                                               "9af079d7-c122-4c25-b2b0-6186fd0e4e7e", 6,
                                                               "7683a162-4a6f-4dd3-8326-17754ed3d121f5c8c620-8717-4d7e-b12a-7d43ae12846e55258fcf-3b6f-4da3-ba76-ae55dd4a2984",
                                                               SubtenantUserStatus.getDefault(), null,
                                                               new Date(1565779006172L),
                                                               "\u0015L\u000b\\\\\u0010éŽ¸ç…¤6æ’Š\u00118ã…®ì©‡I\t6Aè—»35/ê¢ªè•¨^3D6á³šë··1?\u0016ã ?ç£ˆ44Så?¥ç§Ž$$\tQ\u0018220AWä½œTï®’-Aã©¼/\u0006-\tá¶¶3\u0006^44");
        assertFalse(subtenantuserInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("fe0cdebdf4aaf1b7e7a0ef94984be8bf", null,
                                                             "d0ee3832-95be-4ee1-a653-0c19d33d7f16",
                                                             new Date(1565779004013L), -83, null,
                                                             "05819.7160a@e7a91.fr", false,
                                                             "96b5eba6-dcbd-4ee0-b7a0-752efe020c96", null,
                                                             "fe0cdebdf4aaf1b7e7a0ef94984be8bf", false, true, false,
                                                             -18, null, null, "5e1d7062-c895-4077-a118-88530d71adcb", 8,
                                                             "ec1badca-0e5e-4483-9861-0cd9c844949c",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1565779004853L), "7_._-.");
            SubtenantUser subtenantuser2 = new SubtenantUser("fe0cdebdf4aaf1b7e7a0ef94984be8bf", null,
                                                             "d0ee3832-95be-4ee1-a653-0c19d33d7f16",
                                                             new Date(1565779004013L), -83, null,
                                                             "05819.7160a@e7a91.fr", false,
                                                             "96b5eba6-dcbd-4ee0-b7a0-752efe020c96", null,
                                                             "fe0cdebdf4aaf1b7e7a0ef94984be8bf", false, true, false,
                                                             -18, null, null, "5e1d7062-c895-4077-a118-88530d71adcb", 8,
                                                             "ec1badca-0e5e-4483-9861-0cd9c844949c",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1565779004853L), "7_._-.");
            SubtenantUser subtenantuser3 = new SubtenantUser("fe0cdebdf4aaf1b7e7a0ef94984be8bf", null,
                                                             "28357cea-431c-497e-b64a-0604d111de42",
                                                             new Date(1565779004857L), -3, null, "88529.bc79b@a0751.me",
                                                             false, "8a884cee-7c44-4b7a-845a-5605d7b9460a", null,
                                                             "fe0cdebdf4aaf1b7e7a0ef94984be8bf", false, true, false, 20,
                                                             null, null, "8ee3a0fe-acde-4210-9a3f-1b354a56d87d", -57,
                                                             "61d03188-0f2f-4e19-ab2d-5c76a3e1da6b",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1565778999786L), "7_._-.");
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotNull(subtenantuser3);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertNotSame(subtenantuser3, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser1, subtenantuser2);
            assertEquals(subtenantuser1, subtenantuser1);
            assertFalse(subtenantuser1.equals(null));
            assertNotEquals(subtenantuser3, subtenantuser1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
