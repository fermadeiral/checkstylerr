// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.deviceupdate.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model FirmwareImage.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestFirmwareImage {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            FirmwareImage firmwareimage1 = new FirmwareImage(new Date(1565778999934L),
                                                             "79604045-42b9-4fbd-a524-9acd22a46078", -16,
                                                             "be0b19e4-5ccf-4443-9bf3-5ef039260995",
                                                             "ad92b64e-cf75-4626-a8c9-a1e9c8037acd",
                                                             "08b28b2f-6ded-4a33-9ca6-78e39e407fe1",
                                                             "a6adb8b4-32ed-4f70-b5e6-1ab8a97705a6",
                                                             new Date(1565778997926L));
            FirmwareImage firmwareimage2 = firmwareimage1.clone();
            assertNotNull(firmwareimage1);
            assertNotNull(firmwareimage2);
            assertNotSame(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage2, firmwareimage1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            FirmwareImage firmwareimage1 = new FirmwareImage(new Date(1565779005063L),
                                                             "66540be2-dbf0-4b69-88e3-e478d32c6b7a", 5,
                                                             "77f83234-c82a-40f6-ac7c-3f32d79e2574",
                                                             "3e2e8621-d255-412d-9398-e776ab0c1a00",
                                                             "5f2072e2-48ee-49d7-a848-68543f03ccb9",
                                                             "06d8d488-492d-4541-9da7-f9a11e3dd9c6",
                                                             new Date(1565778997573L));
            FirmwareImage firmwareimage2 = new FirmwareImage(new Date(1565779005063L),
                                                             "66540be2-dbf0-4b69-88e3-e478d32c6b7a", 5,
                                                             "77f83234-c82a-40f6-ac7c-3f32d79e2574",
                                                             "3e2e8621-d255-412d-9398-e776ab0c1a00",
                                                             "5f2072e2-48ee-49d7-a848-68543f03ccb9",
                                                             "06d8d488-492d-4541-9da7-f9a11e3dd9c6",
                                                             new Date(1565778997573L));
            assertNotNull(firmwareimage1);
            assertNotNull(firmwareimage2);
            assertNotSame(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage2.hashCode(), firmwareimage1.hashCode());
            int hashCode = firmwareimage1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, firmwareimage1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        FirmwareImage firmwareimage = new FirmwareImage(new Date(1565779003758L),
                                                        "c82e9d1f-347d-491e-b5aa-ca56dae1c6bf", -7,
                                                        "f2ebfa4f-3c4b-4d2a-8151-03dc7c779197",
                                                        "c60b4931-b2b4-4c0e-882f-bf575854cb63",
                                                        "3010bb09-4e70-4925-9f5a-d9ce91ea1c36",
                                                        "a71c7601-6023-4391-8aea-c84d8f80e54e",
                                                        new Date(1565778998492L));
        assertTrue(firmwareimage.isValid());
        FirmwareImage firmwareimageInvalid = new FirmwareImage(new Date(1565779000444L),
                                                               "951cdc86-fdf6-4342-87a9-60b8c4586471", 90,
                                                               "37a38487-679e-4119-8f45-04d01058af87",
                                                               "1e622165-860f-4044-a2dd-297f2775ba12126a58b7-94b4-4ca2-8c34-5d27995f99102fad114d-0afd-48f1-abd0-b134c6e1e0bb3adcc0fe-1a97-4ee3-9d87-7fa77fb26578f735b9f3-f1a1-462a-9d27-b45d2b3f5af9e5544f1f-deb8-4cc6-b79a-d042788fd8120c7958d7-5381-4d38-bcd3-0fb55e92cf03b8e1f8b9-e5ee-4225-9ec7-4a8c9f7e27a6414aedcf-dc0f-4cd3-b61f-08fa5b2c5b859257787f-9ad1-4c89-87cb-c2a64e9c37d872e20150-682f-4e22-afd6-5e83f4bb54efaca1bc0c-5929-4a59-b9cf-db48d96a43d4f997a6ac-6d8c-425b-a66f-1f2164d8a54265c73838-5f01-47a0-a7b3-4ff579820128c10240ab-5057-49d4-9e49-8d616adc57dc9689a193-1c4e-4188-ad5e-06ba4c9b621ecc5042e1-3eff-414a-afc0-3aa50905ccf5194b8558-f160-497a-ab44-a7507bfa37c8ce9eca66-a308-4401-b132-5798c788f22820f0e5da-f07a-4407-97b1-23b5d015dcf8074b8c92-4cd6-416f-984f-dbf5d9559a0322522f9b-c228-4908-aeeb-56ed34a2317c7558cc3c-b476-4a35-a530-af6cd6f5d27bdcd84d5e-f40b-498f-a6d7-07bd41e0227a19c7464e-1e2a-4edb-b0e5-ca4e3abb426541c76be0-cb59-444b-9ce7-76324f35b075f6a3dd48-6ee4-4e22-874b-ec69b3f6671c47901692-9023-4153-b076-a99bf869bec97390e5e8-9a8b-4ed8-9e73-6f60132500d5e58ad20f-66d2-460e-9249-22e7005f39dac637a2d6-6bf0-4423-a275-1333be7f8f4fbbabbbd1-e6f3-453f-9457-57703e1822149271b8b7-edd1-4706-9f8f-938b202fc874d302cf0e-c0ed-4fcb-ad51-775bd4d89856fc42f6a4-b530-4068-b414-33bcee60879dbe7b08a9-e95d-482a-9860-6aefd01a4f0e89f10975-e815-46eb-bd83-25fa3b3650efa4f487b7-97c8-4eb4-b742-83dec9fec4a278255ade-3437-4146-834c-e08a1863f10dc5fada42-3512-4859-897b-3fc003bde3c855100064-69e8-4f18-afff-c9fcae144328d29df557-f656-47bd-8882-4cb752ccb157d2afda9b-7a15-40ec-815f-32e35c6b8986ecdd63d2-5b48-4997-ae38-3ee04c4503b7ba6f77f0-fe84-4f7f-94e6-e4e0cd5b0f8347d9808c-6651-45da-b47f-1cfef0f4267efc1b64ba-bd51-45be-b4b6-389a8986c1be986ddf4e-fb83-4589-978c-698c17268e2fb86399e6-611d-4578-bfd3-642d6f0726fa2ac3655a-80ca-4bf9-a303-199b1f3a5e780aa8e4c2-0d97-42e7-8c5d-925826c3e12d39d5065a-720a-42d6-8573-184ef1a7e8ae59c38918-644b-4ed8-b381-5c1365565b4e5c333dff-041d-4ab1-a1e7-6866ee8ef4d9f72c4227-7cfa-4dcf-8425-f7c9c3561872b02ee554-5b5e-46bb-8c2e-c3979ad09c7b",
                                                               "ffeb4260-810a-40da-8918-02358f7ccb42",
                                                               "3c780178-2a9a-4e5a-9940-12706c147f2ca6d1b90d-67b6-4d69-afde-91cf55d51d97c8187172-38bf-4b80-b8c1-32aa81d26d655b9360c4-9b5b-4823-821c-64d4d0adc4a5",
                                                               new Date(1565779002203L));
        assertFalse(firmwareimageInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            FirmwareImage firmwareimage1 = new FirmwareImage(new Date(1565778998191L),
                                                             "e51c45e7-4823-4473-bdbc-3e19a6a23830", 38,
                                                             "e74d2155-65fe-4711-867d-5fa8868aae9e",
                                                             "c9d70e8f-8605-4fa2-8a32-03f2104cf7c3",
                                                             "2f0b3df8-61f2-4be9-85f8-af48659a3c7a",
                                                             "07f48585-a733-48ba-960d-fb603f409892",
                                                             new Date(1565779001132L));
            FirmwareImage firmwareimage2 = new FirmwareImage(new Date(1565778998191L),
                                                             "e51c45e7-4823-4473-bdbc-3e19a6a23830", 38,
                                                             "e74d2155-65fe-4711-867d-5fa8868aae9e",
                                                             "c9d70e8f-8605-4fa2-8a32-03f2104cf7c3",
                                                             "2f0b3df8-61f2-4be9-85f8-af48659a3c7a",
                                                             "07f48585-a733-48ba-960d-fb603f409892",
                                                             new Date(1565779001132L));
            FirmwareImage firmwareimage3 = new FirmwareImage(new Date(1565779006723L),
                                                             "f42e8ff0-9ace-4f15-bf1c-091bccca6a30", -105,
                                                             "2262e715-79d4-48da-bd2c-1dd51dae7c1e",
                                                             "771ad381-823b-4c9a-beb5-9002e323c193",
                                                             "81b9f59a-912a-455d-89de-333b3465b28b",
                                                             "c6e37dec-ff06-4738-9712-1cbb1b3b7ecf",
                                                             new Date(1565779006673L));
            assertNotNull(firmwareimage1);
            assertNotNull(firmwareimage2);
            assertNotNull(firmwareimage3);
            assertNotSame(firmwareimage2, firmwareimage1);
            assertNotSame(firmwareimage3, firmwareimage1);
            assertEquals(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage1, firmwareimage2);
            assertEquals(firmwareimage1, firmwareimage1);
            assertFalse(firmwareimage1.equals(null));
            assertNotEquals(firmwareimage3, firmwareimage1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
