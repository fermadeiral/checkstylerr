// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model ParentAccount.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestParentAccount {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("020ec.194b5@a003b.fr",
                                                             "205d90f4-c350-4d20-996c-6ca913891910",
                                                             "fe0cdebdf4aaf1b7e7a0ef94984be8bf");
            ParentAccount parentaccount2 = parentaccount1.clone();
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotSame(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("f9494.6e9b9@e38f0.fr",
                                                             "1269c7e5-d3c4-405c-ba0c-949c619fffea",
                                                             "fe0cdebdf4aaf1b7e7a0ef94984be8bf");
            ParentAccount parentaccount2 = new ParentAccount("f9494.6e9b9@e38f0.fr",
                                                             "1269c7e5-d3c4-405c-ba0c-949c619fffea",
                                                             "fe0cdebdf4aaf1b7e7a0ef94984be8bf");
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotSame(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount2.hashCode(), parentaccount1.hashCode());
            int hashCode = parentaccount1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, parentaccount1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ParentAccount parentaccount = new ParentAccount("8aa5e.1d7c0@7000c.me", "98876773-ca03-4126-af94-92ade22d6a46",
                                                        "fe0cdebdf4aaf1b7e7a0ef94984be8bf");
        assertTrue(parentaccount.isValid());
        ParentAccount parentaccountInvalid = new ParentAccount(">\fï§‘î”ºçª‰â¯²æ¨‘>ï”˜æœ‡ã©“\u0017ï­¸åˆºæ¾œ>\b>æ²”æ£™á„¹>\u0000>âž¦Ë«+í”¸ç?•8å©¡â­š>Â°ì?¶ê‰¬à¨¡#>>ç³£ä¶ªä?‹ç‚‡\u001eà¸›æ¯Šï‘˜ï²²é¤´ç¬šï“³âŠ–ä¹£â ¬\u0017>è¦“î†§\u0002ä?´îŽ¨â ‹äµ–",
                                                               "d3204e8d-bdfd-44af-8d83-05790fbe45d16f6a865a-5304-4854-9e59-f3c9cf945150880b75e8-f40d-4c78-b222-598c99c75ea1",
                                                               "5\u001c2\\\\áŸ¿:363A*ì¬½X5à¦¦ï¬‹\u001bæƒ¼56Q53?^265\u001026 2\u0014663\u001a\u001852î¸£N$$Y555\u0011é—Š525X6ã¢¬2æŠ¤2/\u00036?]");
        assertFalse(parentaccountInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("87790.0f717@9f7ba.fr",
                                                             "a53390c3-558e-48a9-98db-0716ca3c639f",
                                                             "fe0cdebdf4aaf1b7e7a0ef94984be8bf");
            ParentAccount parentaccount2 = new ParentAccount("87790.0f717@9f7ba.fr",
                                                             "a53390c3-558e-48a9-98db-0716ca3c639f",
                                                             "fe0cdebdf4aaf1b7e7a0ef94984be8bf");
            ParentAccount parentaccount3 = new ParentAccount("d025e.44e68@970e7.me",
                                                             "f1db279b-2cdd-4d94-86b6-6e28ada7586f",
                                                             "fe0cdebdf4aaf1b7e7a0ef94984be8bf");
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotNull(parentaccount3);
            assertNotSame(parentaccount2, parentaccount1);
            assertNotSame(parentaccount3, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount1, parentaccount2);
            assertEquals(parentaccount1, parentaccount1);
            assertFalse(parentaccount1.equals(null));
            assertNotEquals(parentaccount3, parentaccount1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
