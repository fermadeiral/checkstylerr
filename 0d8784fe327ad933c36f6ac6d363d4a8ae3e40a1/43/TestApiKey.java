// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model ApiKey.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestApiKey {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ApiKey apikey1 = new ApiKey("fe0cdebdf4aaf1b7e7a0ef94984be8bf", new Date(1565778998779L), 20, null,
                                        "fe0cdebdf4aaf1b7e7a0ef94984be8bf", "57ab441e-4e91-4cc3-b8fd-4247735c248d", 91,
                                        "4c3918ca-18b3-4c0f-98d2-e00fd737fc89", "fe0cdebdf4aaf1b7e7a0ef94984be8bf",
                                        ApiKeyStatus.getDefault(), new Date(1565779005392L));
            ApiKey apikey2 = apikey1.clone();
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotSame(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ApiKey apikey1 = new ApiKey("fe0cdebdf4aaf1b7e7a0ef94984be8bf", new Date(1565778996953L), 100, null,
                                        "fe0cdebdf4aaf1b7e7a0ef94984be8bf", "3aa33742-73f9-40f8-8513-a5ac225a5a34",
                                        -104, "4cc7791d-d643-4e96-bd97-eaf6d2e55310",
                                        "fe0cdebdf4aaf1b7e7a0ef94984be8bf", ApiKeyStatus.getDefault(),
                                        new Date(1565779003109L));
            ApiKey apikey2 = new ApiKey("fe0cdebdf4aaf1b7e7a0ef94984be8bf", new Date(1565778996953L), 100, null,
                                        "fe0cdebdf4aaf1b7e7a0ef94984be8bf", "3aa33742-73f9-40f8-8513-a5ac225a5a34",
                                        -104, "4cc7791d-d643-4e96-bd97-eaf6d2e55310",
                                        "fe0cdebdf4aaf1b7e7a0ef94984be8bf", ApiKeyStatus.getDefault(),
                                        new Date(1565779003109L));
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotSame(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey2.hashCode(), apikey1.hashCode());
            int hashCode = apikey1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, apikey1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ApiKey apikey = new ApiKey("fe0cdebdf4aaf1b7e7a0ef94984be8bf", new Date(1565779003352L), -127, null,
                                   "fe0cdebdf4aaf1b7e7a0ef94984be8bf", "2dbfc910-0615-471e-b21c-55003ed3df60", 19,
                                   "6335dfe3-9fd1-4eb5-b1b2-03ea06002dc8", "fe0cdebdf4aaf1b7e7a0ef94984be8bf",
                                   ApiKeyStatus.getDefault(), new Date(1565778998764L));
        assertTrue(apikey.isValid());
        ApiKey apikeyInvalid = new ApiKey("5\u001c2\\\\៿:363A*쬽X5দ﬋\u001b惼56Q53?^265\u001026 2\u0014663\u001a\u001852N$$Y555\u0011闊525X6㢬2护2/\u00036?]",
                                          new Date(1565779000435L), 69, null,
                                          "5\u001c2\\\\៿:363A*쬽X5দ﬋\u001b惼56Q53?^265\u001026 2\u0014663\u001a\u001852N$$Y555\u0011闊525X6㢬2护2/\u00036?]",
                                          "4b3586e8-b95f-4610-8822-749ffebdce32", 103, null,
                                          "5\u001c2\\\\៿:363A*쬽X5দ﬋\u001b惼56Q53?^265\u001026 2\u0014663\u001a\u001852N$$Y555\u0011闊525X6㢬2护2/\u00036?]",
                                          ApiKeyStatus.getDefault(), new Date(1565778999122L));
        assertFalse(apikeyInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ApiKey apikey1 = new ApiKey("fe0cdebdf4aaf1b7e7a0ef94984be8bf", new Date(1565779004563L), 8, null,
                                        "fe0cdebdf4aaf1b7e7a0ef94984be8bf", "99519cf4-a85f-4e34-a0a0-a00c44a5818a", -41,
                                        "e4e87d45-941e-423d-94fe-d381f546ef00", "fe0cdebdf4aaf1b7e7a0ef94984be8bf",
                                        ApiKeyStatus.getDefault(), new Date(1565779004223L));
            ApiKey apikey2 = new ApiKey("fe0cdebdf4aaf1b7e7a0ef94984be8bf", new Date(1565779004563L), 8, null,
                                        "fe0cdebdf4aaf1b7e7a0ef94984be8bf", "99519cf4-a85f-4e34-a0a0-a00c44a5818a", -41,
                                        "e4e87d45-941e-423d-94fe-d381f546ef00", "fe0cdebdf4aaf1b7e7a0ef94984be8bf",
                                        ApiKeyStatus.getDefault(), new Date(1565779004223L));
            ApiKey apikey3 = new ApiKey("fe0cdebdf4aaf1b7e7a0ef94984be8bf", new Date(1565778998712L), -30, null,
                                        "fe0cdebdf4aaf1b7e7a0ef94984be8bf", "3aa5670e-0694-4e51-b11c-a13f29814709",
                                        -116, "5bb08b5f-2324-40eb-a10f-fba3ef19958a",
                                        "fe0cdebdf4aaf1b7e7a0ef94984be8bf", ApiKeyStatus.getDefault(),
                                        new Date(1565779006660L));
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotNull(apikey3);
            assertNotSame(apikey2, apikey1);
            assertNotSame(apikey3, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey1, apikey2);
            assertEquals(apikey1, apikey1);
            assertFalse(apikey1.equals(null));
            assertNotEquals(apikey3, apikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
