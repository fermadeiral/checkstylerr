// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantApiKey.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantApiKey {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("fe0cdebdf4aaf1b7e7a0ef94984be8bf",
                                                                   new Date(1565779003576L), -61, null,
                                                                   "fe0cdebdf4aaf1b7e7a0ef94984be8bf",
                                                                   "b12f2768-a789-4fee-9ddb-94a7de0baee8", 46,
                                                                   "4852d81a-9394-4bbf-a96e-63bdf3a57d6f",
                                                                   "fe0cdebdf4aaf1b7e7a0ef94984be8bf",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1565779005968L));
            SubtenantApiKey subtenantapikey2 = subtenantapikey1.clone();
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("fe0cdebdf4aaf1b7e7a0ef94984be8bf",
                                                                   new Date(1565779005692L), -108, null,
                                                                   "fe0cdebdf4aaf1b7e7a0ef94984be8bf",
                                                                   "8d1894a5-a506-481b-be75-6f5ff7a7343a", -46,
                                                                   "6f683e16-a132-4670-905d-f2208ec3108b",
                                                                   "fe0cdebdf4aaf1b7e7a0ef94984be8bf",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1565779002317L));
            SubtenantApiKey subtenantapikey2 = new SubtenantApiKey("fe0cdebdf4aaf1b7e7a0ef94984be8bf",
                                                                   new Date(1565779005692L), -108, null,
                                                                   "fe0cdebdf4aaf1b7e7a0ef94984be8bf",
                                                                   "8d1894a5-a506-481b-be75-6f5ff7a7343a", -46,
                                                                   "6f683e16-a132-4670-905d-f2208ec3108b",
                                                                   "fe0cdebdf4aaf1b7e7a0ef94984be8bf",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1565779002317L));
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2.hashCode(), subtenantapikey1.hashCode());
            int hashCode = subtenantapikey1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantapikey1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantApiKey subtenantapikey = new SubtenantApiKey("fe0cdebdf4aaf1b7e7a0ef94984be8bf",
                                                              new Date(1565779006741L), 20, null,
                                                              "fe0cdebdf4aaf1b7e7a0ef94984be8bf",
                                                              "bb70f15b-18d0-41be-9f4e-cd7068b371d0", 75,
                                                              "6ed9a26c-e3ab-4fee-9c76-734dae0b736a",
                                                              "fe0cdebdf4aaf1b7e7a0ef94984be8bf",
                                                              SubtenantApiKeyStatus.getDefault(),
                                                              new Date(1565778999721L));
        assertTrue(subtenantapikey.isValid());
        SubtenantApiKey subtenantapikeyInvalid = new SubtenantApiKey(null, new Date(1565779005055L), 37, null,
                                                                     "5\u001c2\\\\៿:363A*쬽X5দ﬋\u001b惼56Q53?^265\u001026 2\u0014663\u001a\u001852N$$Y555\u0011闊525X6㢬2护2/\u00036?]",
                                                                     "db203617-65cc-4bb9-92db-88c64e8f180d", 58, null,
                                                                     "5\u001c2\\\\៿:363A*쬽X5দ﬋\u001b惼56Q53?^265\u001026 2\u0014663\u001a\u001852N$$Y555\u0011闊525X6㢬2护2/\u00036?]",
                                                                     SubtenantApiKeyStatus.getDefault(),
                                                                     new Date(1565778999121L));
        assertFalse(subtenantapikeyInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("fe0cdebdf4aaf1b7e7a0ef94984be8bf",
                                                                   new Date(1565778998882L), 112, null,
                                                                   "fe0cdebdf4aaf1b7e7a0ef94984be8bf",
                                                                   "84cce1eb-ccf2-469a-bff2-1c8b3a9b1931", -114,
                                                                   "ea830fef-2b0b-436f-bbc8-d2c9d63a0118",
                                                                   "fe0cdebdf4aaf1b7e7a0ef94984be8bf",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1565778999025L));
            SubtenantApiKey subtenantapikey2 = new SubtenantApiKey("fe0cdebdf4aaf1b7e7a0ef94984be8bf",
                                                                   new Date(1565778998882L), 112, null,
                                                                   "fe0cdebdf4aaf1b7e7a0ef94984be8bf",
                                                                   "84cce1eb-ccf2-469a-bff2-1c8b3a9b1931", -114,
                                                                   "ea830fef-2b0b-436f-bbc8-d2c9d63a0118",
                                                                   "fe0cdebdf4aaf1b7e7a0ef94984be8bf",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1565778999025L));
            SubtenantApiKey subtenantapikey3 = new SubtenantApiKey("fe0cdebdf4aaf1b7e7a0ef94984be8bf",
                                                                   new Date(1565779005451L), 55, null,
                                                                   "fe0cdebdf4aaf1b7e7a0ef94984be8bf",
                                                                   "865a1a3d-2cb5-4447-901c-f01c65a59989", -45,
                                                                   "7b6b51d3-9e45-4305-9b75-3d7b0478988a",
                                                                   "fe0cdebdf4aaf1b7e7a0ef94984be8bf",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1565779005916L));
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotNull(subtenantapikey3);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertNotSame(subtenantapikey3, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey1, subtenantapikey2);
            assertEquals(subtenantapikey1, subtenantapikey1);
            assertFalse(subtenantapikey1.equals(null));
            assertNotEquals(subtenantapikey3, subtenantapikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
