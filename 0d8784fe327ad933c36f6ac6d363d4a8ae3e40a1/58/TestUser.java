// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model User.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestUser {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            User user1 = new User("fe0cdebdf4aaf1b7e7a0ef94984be8bf", null, "d963edfe-d4a4-4356-bd5a-9ce53703f1cc",
                                  new Date(1565779003745L), 71, null, "59bec.0c873@2b6f8.fr", true,
                                  "57bd7774-e3bf-47bc-bd80-bb1bdfa85723", null, "fe0cdebdf4aaf1b7e7a0ef94984be8bf",
                                  true, false, false, -112, null, null, "ccc71b99-a7f1-4acd-b063-1aed705129a1", -101,
                                  "33d4cd88-648b-4165-90b8-d197320a2967", UserStatus.getDefault(), null,
                                  new Date(1565778997906L), "7_._-.");
            User user2 = user1.clone();
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotSame(user2, user1);
            assertEquals(user2, user1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            User user1 = new User("fe0cdebdf4aaf1b7e7a0ef94984be8bf", null, "26553ab5-aacf-49d0-a77b-c3932904bf5b",
                                  new Date(1565779005056L), -63, null, "2c2dc.adfbe@242bf.me", true,
                                  "374c892e-d2c1-4061-92a8-627cf7200c0d", null, "fe0cdebdf4aaf1b7e7a0ef94984be8bf",
                                  true, true, false, -22, null, null, "5065db16-6645-4e71-9412-8fa1cc4f765c", 50,
                                  "78ca4168-71c6-4d28-a940-2c1b33d159b3", UserStatus.getDefault(), null,
                                  new Date(1565779006233L), "7_._-.");
            User user2 = new User("fe0cdebdf4aaf1b7e7a0ef94984be8bf", null, "26553ab5-aacf-49d0-a77b-c3932904bf5b",
                                  new Date(1565779005056L), -63, null, "2c2dc.adfbe@242bf.me", true,
                                  "374c892e-d2c1-4061-92a8-627cf7200c0d", null, "fe0cdebdf4aaf1b7e7a0ef94984be8bf",
                                  true, true, false, -22, null, null, "5065db16-6645-4e71-9412-8fa1cc4f765c", 50,
                                  "78ca4168-71c6-4d28-a940-2c1b33d159b3", UserStatus.getDefault(), null,
                                  new Date(1565779006233L), "7_._-.");
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotSame(user2, user1);
            assertEquals(user2, user1);
            assertEquals(user2.hashCode(), user1.hashCode());
            int hashCode = user1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, user1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        User user = new User("fe0cdebdf4aaf1b7e7a0ef94984be8bf", null, "4ba119b2-d3c7-46d7-92ec-a600e71ea4e9",
                             new Date(1565779002213L), -58, null, "85b8b.6df84@f550b.me", true,
                             "f025a9a2-ee3a-4494-8653-5cc6667a1b5e", null, "fe0cdebdf4aaf1b7e7a0ef94984be8bf", true,
                             true, true, 24, null, null, "f8a8b4a5-4da1-4121-9a17-1772b98d322e", -35,
                             "ad970426-dc2f-4630-92f0-b989972136c4", UserStatus.getDefault(), null,
                             new Date(1565779006489L), "7_._-.");
        assertTrue(user.isValid());
        User userInvalid = new User("5\u001c2\\\\áŸ¿:363A*ì¬½X5à¦¦ï¬‹\u001bæƒ¼56Q53?^265\u001026 2\u0014663\u001a\u001852î¸£N$$Y555\u0011é—Š525X6ã¢¬2æŠ¤2/\u00036?]",
                                    null, "d7a4477c-aaf4-49a6-b732-84df5477d364", new Date(1565779002989L), 48, null,
                                    null, false,
                                    "ffadeacf-07c1-4700-a55e-738f0364a57f0853363d-9cd9-46ac-a6f1-9d17877e05ee2ed56e9e-50c3-4302-bdae-673c3ff8bdb5",
                                    null,
                                    "5\u001c2\\\\áŸ¿:363A*ì¬½X5à¦¦ï¬‹\u001bæƒ¼56Q53?^265\u001026 2\u0014663\u001a\u001852î¸£N$$Y555\u0011é—Š525X6ã¢¬2æŠ¤2/\u00036?]",
                                    true, false, false, -107, null, null, "44860037-71c5-4aea-9273-f4aba3225339", -123,
                                    "521dc0a9-c3cc-46bf-99c4-809ed72dbf4903900b81-30f5-4efc-9bdc-9d0d7b6c76cb841f6abd-b954-4d7e-a552-2ec8b28e4666",
                                    UserStatus.getDefault(), null, new Date(1565779005234L),
                                    "\u0015L\u000b\\\\\u0010éŽ¸ç…¤6æ’Š\u00118ã…®ì©‡I\t6Aè—»35/ê¢ªè•¨^3D6á³šë··1?\u0016ã ?ç£ˆ44Så?¥ç§Ž$$\tQ\u0018220AWä½œTï®’-Aã©¼/\u0006-\tá¶¶3\u0006^44");
        assertFalse(userInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            User user1 = new User("fe0cdebdf4aaf1b7e7a0ef94984be8bf", null, "68854b53-64ff-4c38-9582-f8e32de40716",
                                  new Date(1565779004191L), -6, null, "14b64.a125a@45e60.me", false,
                                  "0a172dcf-9bfe-4b9c-ad9a-bc3929b229f3", null, "fe0cdebdf4aaf1b7e7a0ef94984be8bf",
                                  true, false, true, -60, null, null, "325945a2-282d-4bc5-9353-b02874d06916", 86,
                                  "88bd42a1-8796-4b88-88a6-e1d4326a8169", UserStatus.getDefault(), null,
                                  new Date(1565779003272L), "7_._-.");
            User user2 = new User("fe0cdebdf4aaf1b7e7a0ef94984be8bf", null, "68854b53-64ff-4c38-9582-f8e32de40716",
                                  new Date(1565779004191L), -6, null, "14b64.a125a@45e60.me", false,
                                  "0a172dcf-9bfe-4b9c-ad9a-bc3929b229f3", null, "fe0cdebdf4aaf1b7e7a0ef94984be8bf",
                                  true, false, true, -60, null, null, "325945a2-282d-4bc5-9353-b02874d06916", 86,
                                  "88bd42a1-8796-4b88-88a6-e1d4326a8169", UserStatus.getDefault(), null,
                                  new Date(1565779003272L), "7_._-.");
            User user3 = new User("fe0cdebdf4aaf1b7e7a0ef94984be8bf", null, "693d35df-920c-4d9c-b06d-39b30c27c645",
                                  new Date(1565779003005L), -26, null, "46187.2f5c8@35c7f.fr", false,
                                  "c59152c3-36e9-40b8-8e74-b658d07d8369", null, "fe0cdebdf4aaf1b7e7a0ef94984be8bf",
                                  true, false, true, -101, null, null, "c42f3d4b-1cfc-48a6-aad2-81e54ec00fed", -1,
                                  "bc9ebee7-11d7-4530-b76f-80dbea311f1e", UserStatus.getDefault(), null,
                                  new Date(1565779005333L), "7_._-.");
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotNull(user3);
            assertNotSame(user2, user1);
            assertNotSame(user3, user1);
            assertEquals(user2, user1);
            assertEquals(user2, user1);
            assertEquals(user1, user2);
            assertEquals(user1, user1);
            assertFalse(user1.equals(null));
            assertNotEquals(user3, user1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
