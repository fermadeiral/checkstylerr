// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.deviceupdate.model;

import static org.junit.Assert.*;

import com.arm.mbed.cloud.sdk.common.Order;
import com.arm.mbed.cloud.sdk.common.listing.ListOptionsEncoder;
import com.arm.mbed.cloud.sdk.common.listing.filtering.FilterOperator;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import org.junit.Test;

/**
 * Unit tests for Model FirmwareImageListOptions.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestFirmwareImageListOptions {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            FirmwareImageListOptions firmwareimagelistoptions1 = new FirmwareImageListOptions(Integer.valueOf(95),
                                                                                              Long.valueOf(122),
                                                                                              Order.getDefault(),
                                                                                              "2f1a4c06-1897-4b94-9642-475e9001795a",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions2 = firmwareimagelistoptions1.clone();
            assertNotNull(firmwareimagelistoptions1);
            assertNotNull(firmwareimagelistoptions2);
            assertNotSame(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the filters method.
     */
    @SuppressWarnings({ "boxing", "resource" })
    @Test
    public void testFilters() {
        try {
            FirmwareImageListOptions option = new FirmwareImageListOptions().inUpdatedAts(Arrays.asList(new Date(1565779007825L)))
                                                                            .notInUpdatedAts(Arrays.asList(new Date(1565779007754L),
                                                                                                           new Date(1565779006775L),
                                                                                                           new Date(1565778999110L)))
                                                                            .lessThanUpdatedAt(new Date(1565779003461L))
                                                                            .greaterThanUpdatedAt(new Date(1565779002627L))
                                                                            .equalToName("98e5654e-fd65-4802-87a4-5f81b4289fb6")
                                                                            .notEqualToName("06b34b2e-91fe-4693-9141-0b9aa765730e")
                                                                            .inNames(Arrays.asList("927e891a-11dd-4ade-a008-ed0a88445f4f"))
                                                                            .notInNames(Arrays.asList("1b78be77-b606-46be-bccb-257f6014ccab",
                                                                                                      "1d7ca3be-0b1f-4836-b999-494305b4bc7c",
                                                                                                      "f614ba88-3cbb-4fa4-96c3-3a61ce1b891a",
                                                                                                      "99868b0e-c3a5-431f-99e1-73a6eb2f489f"))
                                                                            .equalToDescription("48e945f6-849e-4f9e-b25a-e10739457278")
                                                                            .notEqualToDescription("1862a043-cf4d-4f49-ba45-d65def50194a")
                                                                            .inDescriptions(Arrays.asList("3e612e31-08f1-49c9-858c-fb6ac8627f3a",
                                                                                                          "49d3aa2d-3403-4ba7-86b6-9228ed69f247",
                                                                                                          "267b88dc-b533-4899-9c23-a38247e73b2c",
                                                                                                          "a3aed98d-f4f5-453e-8018-de56b49b147b",
                                                                                                          "de0a6d1e-585c-4e33-aeb6-95f5046a0ec8",
                                                                                                          "fb1530d2-7e8e-4523-b245-fe4faa603cdc",
                                                                                                          "6bc6c9d7-c75b-45a1-9811-bca9ccf293ad",
                                                                                                          "69ff8a37-8641-4886-915c-aaf338115d69",
                                                                                                          "9f58ea11-1491-460b-b13f-714e9ec51126"))
                                                                            .notInDescriptions(Arrays.asList("0844df69-5ae6-429b-baf1-5725e2b71b80",
                                                                                                             "44cfd871-7ab0-48c3-b19a-f30ed8bf1f1a",
                                                                                                             "859975dd-e1f7-47ea-bf55-6e54ff5540cd",
                                                                                                             "bfa5aa1f-64e9-42e6-8bb5-5a18ffef9d9f",
                                                                                                             "4c8b025f-749f-439d-ab22-75d929d0b62f",
                                                                                                             "37818f06-89fc-4526-8195-414ac5c8cb51"))
                                                                            .inCreatedAts(Arrays.asList(new Date(1565779006458L),
                                                                                                        new Date(1565778998601L),
                                                                                                        new Date(1565779006957L),
                                                                                                        new Date(1565779004370L),
                                                                                                        new Date(1565779004001L),
                                                                                                        new Date(1565779004644L),
                                                                                                        new Date(1565779003029L),
                                                                                                        new Date(1565779003184L)))
                                                                            .notInCreatedAts(Arrays.asList(new Date(1565779006737L),
                                                                                                           new Date(1565779003056L),
                                                                                                           new Date(1565779005731L),
                                                                                                           new Date(1565778998866L),
                                                                                                           new Date(1565779007630L)))
                                                                            .lessThanCreatedAt(new Date(1565779002703L))
                                                                            .greaterThanCreatedAt(new Date(1565779005548L))
                                                                            .equalToDatafileUrl("44e783b7-4299-4422-b50c-a998caf85757")
                                                                            .notEqualToDatafileUrl("19ca06a3-c2ed-46bf-8bf4-c55edd00fe2c")
                                                                            .inDatafileUrls(Arrays.asList("7699ea6b-f3ed-483e-9072-9d3973a138d0",
                                                                                                          "5c08e194-dc0e-4a4b-81a2-05b1d1415cbe",
                                                                                                          "e74d85de-30d9-4dbe-906a-14b9c4a604e9",
                                                                                                          "a6b7ac02-a25c-4a5d-9ef6-47ae8279f76b",
                                                                                                          "9e2080b4-527b-4b7b-8fa8-a762daa54bef",
                                                                                                          "dda32376-cabb-4436-a685-97bdc21f8a06",
                                                                                                          "facfb5cd-9d4b-43f3-b48f-e6b409ef8e5a",
                                                                                                          "152cb432-9468-48a8-91da-d2ba4f000a78"))
                                                                            .notInDatafileUrls(Arrays.asList("f4b13ef0-c6c2-44e2-aa89-a8b6cac0ae65",
                                                                                                             "9c1e3c49-7ae4-4167-834a-b449f9c043f2"))
                                                                            .equalToDatafileSize(Long.valueOf(92))
                                                                            .notEqualToDatafileSize(Long.valueOf(123))
                                                                            .inDatafileSizes(Arrays.asList(Long.valueOf(88),
                                                                                                           Long.valueOf(108),
                                                                                                           Long.valueOf(-59)))
                                                                            .notInDatafileSizes(Arrays.asList(Long.valueOf(72),
                                                                                                              Long.valueOf(-108)))
                                                                            .equalToDatafileChecksum("2fef871d-786d-4612-b60a-0f3c92562fa5")
                                                                            .notEqualToDatafileChecksum("a4a04557-d2e2-49f8-8158-ec2cf89db2db")
                                                                            .inDatafileChecksums(Arrays.asList("45758957-03a7-4f22-8f76-046a85232c58",
                                                                                                               "95ae4ff3-67b8-4186-bdd3-b15abe6a298b"))
                                                                            .notInDatafileChecksums(Arrays.asList("cdbbd6f1-3d63-4ea6-b990-563fc8e81568",
                                                                                                                  "0f3df518-2205-4cff-92a6-cd67974b158e",
                                                                                                                  "f29e664e-7c5d-4b92-a696-64069d3e63b3",
                                                                                                                  "d80ff77c-e594-47d6-9d0d-d2ed700fccb6"))
                                                                            .equalToId("b3e2c29f-8c0d-4ff2-9cc0-9b04a0bbc8d1")
                                                                            .notEqualToId("aeb536aa-d8f5-42b2-b61a-c4036647d675")
                                                                            .inIds(Arrays.asList("40c087d9-d2f3-44ad-8d8b-2b5677f08667",
                                                                                                 "b32a18b7-67b6-46c3-8219-0640921dc8e1"))
                                                                            .notInIds(Arrays.asList("dfe82389-4f52-44da-a178-f0398e70d428",
                                                                                                    "88fb7f91-88fe-4749-b2fc-23af2f35c35f",
                                                                                                    "e9d71ec1-0226-4c14-bb19-b21513a1a951",
                                                                                                    "95414fc5-b057-4ed6-8338-9c4c778c12f5",
                                                                                                    "a226a909-b4d0-4e92-a56b-67ea562adb27",
                                                                                                    "df77ce22-0c7f-467c-a893-6bd992fa3ae6",
                                                                                                    "32cac5de-5b5b-41bc-91b1-96b2838678b6",
                                                                                                    "150a497e-1dde-4327-bc6e-6f793e382828"));
            assertTrue(option.hasFilters());
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1565779007825L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1565779007754L), new Date(1565779006775L), new Date(1565778999110L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.LESS_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1565779003461L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1565779002627L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("98e5654e-fd65-4802-87a4-5f81b4289fb6",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("06b34b2e-91fe-4693-9141-0b9aa765730e",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("927e891a-11dd-4ade-a008-ed0a88445f4f"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("1b78be77-b606-46be-bccb-257f6014ccab", "1d7ca3be-0b1f-4836-b999-494305b4bc7c",
                                       "f614ba88-3cbb-4fa4-96c3-3a61ce1b891a", "99868b0e-c3a5-431f-99e1-73a6eb2f489f"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("48e945f6-849e-4f9e-b25a-e10739457278",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("1862a043-cf4d-4f49-ba45-d65def50194a",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("3e612e31-08f1-49c9-858c-fb6ac8627f3a", "49d3aa2d-3403-4ba7-86b6-9228ed69f247",
                                       "267b88dc-b533-4899-9c23-a38247e73b2c", "a3aed98d-f4f5-453e-8018-de56b49b147b",
                                       "de0a6d1e-585c-4e33-aeb6-95f5046a0ec8", "fb1530d2-7e8e-4523-b245-fe4faa603cdc",
                                       "6bc6c9d7-c75b-45a1-9811-bca9ccf293ad", "69ff8a37-8641-4886-915c-aaf338115d69",
                                       "9f58ea11-1491-460b-b13f-714e9ec51126"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("0844df69-5ae6-429b-baf1-5725e2b71b80", "44cfd871-7ab0-48c3-b19a-f30ed8bf1f1a",
                                       "859975dd-e1f7-47ea-bf55-6e54ff5540cd", "bfa5aa1f-64e9-42e6-8bb5-5a18ffef9d9f",
                                       "4c8b025f-749f-439d-ab22-75d929d0b62f", "37818f06-89fc-4526-8195-414ac5c8cb51"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1565779006458L), new Date(1565778998601L), new Date(1565779006957L),
                                       new Date(1565779004370L), new Date(1565779004001L), new Date(1565779004644L),
                                       new Date(1565779003029L), new Date(1565779003184L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1565779006737L), new Date(1565779003056L), new Date(1565779005731L),
                                       new Date(1565778998866L), new Date(1565779007630L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.LESS_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1565779002703L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1565779005548L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("44e783b7-4299-4422-b50c-a998caf85757",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("19ca06a3-c2ed-46bf-8bf4-c55edd00fe2c",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("7699ea6b-f3ed-483e-9072-9d3973a138d0", "5c08e194-dc0e-4a4b-81a2-05b1d1415cbe",
                                       "e74d85de-30d9-4dbe-906a-14b9c4a604e9", "a6b7ac02-a25c-4a5d-9ef6-47ae8279f76b",
                                       "9e2080b4-527b-4b7b-8fa8-a762daa54bef", "dda32376-cabb-4436-a685-97bdc21f8a06",
                                       "facfb5cd-9d4b-43f3-b48f-e6b409ef8e5a", "152cb432-9468-48a8-91da-d2ba4f000a78"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("f4b13ef0-c6c2-44e2-aa89-a8b6cac0ae65", "9c1e3c49-7ae4-4167-834a-b449f9c043f2"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(92),
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    Long.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(123),
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                       Long.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(88), Long.valueOf(108), Long.valueOf(-59)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(72), Long.valueOf(-108)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                        FilterOperator.EQUAL));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals("2fef871d-786d-4612-b60a-0f3c92562fa5",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals("a4a04557-d2e2-49f8-8158-ec2cf89db2db",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM, FilterOperator.IN));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals(Arrays.asList("45758957-03a7-4f22-8f76-046a85232c58", "95ae4ff3-67b8-4186-bdd3-b15abe6a298b"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                        FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals(Arrays.asList("cdbbd6f1-3d63-4ea6-b990-563fc8e81568", "0f3df518-2205-4cff-92a6-cd67974b158e",
                                       "f29e664e-7c5d-4b92-a696-64069d3e63b3", "d80ff77c-e594-47d6-9d0d-d2ed700fccb6"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("b3e2c29f-8c0d-4ff2-9cc0-9b04a0bbc8d1",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("aeb536aa-d8f5-42b2-b61a-c4036647d675",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("40c087d9-d2f3-44ad-8d8b-2b5677f08667", "b32a18b7-67b6-46c3-8219-0640921dc8e1"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, List.class,
                                                                 option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("dfe82389-4f52-44da-a178-f0398e70d428", "88fb7f91-88fe-4749-b2fc-23af2f35c35f",
                                       "e9d71ec1-0226-4c14-bb19-b21513a1a951", "95414fc5-b057-4ed6-8338-9c4c778c12f5",
                                       "a226a909-b4d0-4e92-a56b-67ea562adb27", "df77ce22-0c7f-467c-a893-6bd992fa3ae6",
                                       "32cac5de-5b5b-41bc-91b1-96b2838678b6", "150a497e-1dde-4327-bc6e-6f793e382828"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID,
                                                                    List.class, option));
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            FirmwareImageListOptions firmwareimagelistoptions1 = new FirmwareImageListOptions(Integer.valueOf(-18),
                                                                                              Long.valueOf(-57),
                                                                                              Order.getDefault(),
                                                                                              "ea4bdef3-aed8-48b6-acee-92467df0de33",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions2 = new FirmwareImageListOptions(Integer.valueOf(-18),
                                                                                              Long.valueOf(-57),
                                                                                              Order.getDefault(),
                                                                                              "ea4bdef3-aed8-48b6-acee-92467df0de33",
                                                                                              null, null);
            assertNotNull(firmwareimagelistoptions1);
            assertNotNull(firmwareimagelistoptions2);
            assertNotSame(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2.hashCode(), firmwareimagelistoptions1.hashCode());
            int hashCode = firmwareimagelistoptions1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, firmwareimagelistoptions1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            FirmwareImageListOptions firmwareimagelistoptions1 = new FirmwareImageListOptions(Integer.valueOf(66),
                                                                                              Long.valueOf(105),
                                                                                              Order.getDefault(),
                                                                                              "0301b2de-3399-4c1a-a7a1-6e296ab05c48",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions2 = new FirmwareImageListOptions(Integer.valueOf(66),
                                                                                              Long.valueOf(105),
                                                                                              Order.getDefault(),
                                                                                              "0301b2de-3399-4c1a-a7a1-6e296ab05c48",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions3 = new FirmwareImageListOptions(Integer.valueOf(-120),
                                                                                              Long.valueOf(10),
                                                                                              Order.getDefault(),
                                                                                              "750b2f23-31f4-47bb-ba5c-1712a7b2117c",
                                                                                              null, null);
            assertNotNull(firmwareimagelistoptions1);
            assertNotNull(firmwareimagelistoptions2);
            assertNotNull(firmwareimagelistoptions3);
            assertNotSame(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertNotSame(firmwareimagelistoptions3, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions1, firmwareimagelistoptions2);
            assertEquals(firmwareimagelistoptions1, firmwareimagelistoptions1);
            assertFalse(firmwareimagelistoptions1.equals(null));
            assertNotEquals(firmwareimagelistoptions3, firmwareimagelistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
