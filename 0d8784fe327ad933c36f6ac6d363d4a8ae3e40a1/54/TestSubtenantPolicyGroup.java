// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantPolicyGroup.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantPolicyGroup {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantPolicyGroup subtenantpolicygroup1 = new SubtenantPolicyGroup("fe0cdebdf4aaf1b7e7a0ef94984be8bf",
                                                                                  -9, new Date(1565779006858L),
                                                                                  "fe0cdebdf4aaf1b7e7a0ef94984be8bf",
                                                                                  "5b700684-5dbd-4310-8ecd-021e039e8fb1",
                                                                                  new Date(1565779002488L), -24);
            SubtenantPolicyGroup subtenantpolicygroup2 = subtenantpolicygroup1.clone();
            assertNotNull(subtenantpolicygroup1);
            assertNotNull(subtenantpolicygroup2);
            assertNotSame(subtenantpolicygroup2, subtenantpolicygroup1);
            assertEquals(subtenantpolicygroup2, subtenantpolicygroup1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantPolicyGroup subtenantpolicygroup1 = new SubtenantPolicyGroup("fe0cdebdf4aaf1b7e7a0ef94984be8bf", 0,
                                                                                  new Date(1565779006011L),
                                                                                  "fe0cdebdf4aaf1b7e7a0ef94984be8bf",
                                                                                  "2ed20561-9e8d-4d75-bbce-25b8261d2533",
                                                                                  new Date(1565778998337L), -23);
            SubtenantPolicyGroup subtenantpolicygroup2 = new SubtenantPolicyGroup("fe0cdebdf4aaf1b7e7a0ef94984be8bf", 0,
                                                                                  new Date(1565779006011L),
                                                                                  "fe0cdebdf4aaf1b7e7a0ef94984be8bf",
                                                                                  "2ed20561-9e8d-4d75-bbce-25b8261d2533",
                                                                                  new Date(1565778998337L), -23);
            assertNotNull(subtenantpolicygroup1);
            assertNotNull(subtenantpolicygroup2);
            assertNotSame(subtenantpolicygroup2, subtenantpolicygroup1);
            assertEquals(subtenantpolicygroup2, subtenantpolicygroup1);
            assertEquals(subtenantpolicygroup2.hashCode(), subtenantpolicygroup1.hashCode());
            int hashCode = subtenantpolicygroup1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantpolicygroup1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantPolicyGroup subtenantpolicygroup = new SubtenantPolicyGroup("fe0cdebdf4aaf1b7e7a0ef94984be8bf", -66,
                                                                             new Date(1565779001661L),
                                                                             "fe0cdebdf4aaf1b7e7a0ef94984be8bf",
                                                                             "4ba90c48-e8ed-4d96-b565-a294ab5a82b1",
                                                                             new Date(1565779005038L), 97);
        assertTrue(subtenantpolicygroup.isValid());
        SubtenantPolicyGroup subtenantpolicygroupInvalid = new SubtenantPolicyGroup(null, -36, new Date(1565779003100L),
                                                                                    "5\u001c2\\\\៿:363A*쬽X5দ﬋\u001b惼56Q53?^265\u001026 2\u0014663\u001a\u001852N$$Y555\u0011闊525X6㢬2护2/\u00036?]",
                                                                                    "b9d10a3b-cc3b-4a74-a004-05ff4c21340b85037718-50c2-425a-bdb4-9960531d73d234747c4f-7284-4ed0-a6ff-bcfbcfdadac0",
                                                                                    new Date(1565779006857L), -31);
        assertFalse(subtenantpolicygroupInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantPolicyGroup subtenantpolicygroup1 = new SubtenantPolicyGroup("fe0cdebdf4aaf1b7e7a0ef94984be8bf",
                                                                                  32, new Date(1565778996865L),
                                                                                  "fe0cdebdf4aaf1b7e7a0ef94984be8bf",
                                                                                  "f79df1ba-23dd-4f69-92cd-0b432abf135a",
                                                                                  new Date(1565779004880L), 40);
            SubtenantPolicyGroup subtenantpolicygroup2 = new SubtenantPolicyGroup("fe0cdebdf4aaf1b7e7a0ef94984be8bf",
                                                                                  32, new Date(1565778996865L),
                                                                                  "fe0cdebdf4aaf1b7e7a0ef94984be8bf",
                                                                                  "f79df1ba-23dd-4f69-92cd-0b432abf135a",
                                                                                  new Date(1565779004880L), 40);
            SubtenantPolicyGroup subtenantpolicygroup3 = new SubtenantPolicyGroup("fe0cdebdf4aaf1b7e7a0ef94984be8bf",
                                                                                  15, new Date(1565779004435L),
                                                                                  "fe0cdebdf4aaf1b7e7a0ef94984be8bf",
                                                                                  "aba3f7e4-3a7f-4639-ad89-cf8edcb53d66",
                                                                                  new Date(1565779005602L), -77);
            assertNotNull(subtenantpolicygroup1);
            assertNotNull(subtenantpolicygroup2);
            assertNotNull(subtenantpolicygroup3);
            assertNotSame(subtenantpolicygroup2, subtenantpolicygroup1);
            assertNotSame(subtenantpolicygroup3, subtenantpolicygroup1);
            assertEquals(subtenantpolicygroup2, subtenantpolicygroup1);
            assertEquals(subtenantpolicygroup2, subtenantpolicygroup1);
            assertEquals(subtenantpolicygroup1, subtenantpolicygroup2);
            assertEquals(subtenantpolicygroup1, subtenantpolicygroup1);
            assertFalse(subtenantpolicygroup1.equals(null));
            assertNotEquals(subtenantpolicygroup3, subtenantpolicygroup1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
