// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEvents.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEvents {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1553713211585L), null,
                                                          new Date(1553713215278L),
                                                          "2dd44c85-4616-4c12-a8df-12adf7098d13",
                                                          "c9e03d98-86a3-40eb-9bfb-b8368b887830",
                                                          "dafbaa84-1710-46ef-8943-e08675cb35bd",
                                                          "a445bbe6-7a92-4b3b-925f-fd7ec84bf2b3",
                                                          "bbc21c7f-bf38-498b-9606-b91862a24f3f",
                                                          "c07b8c6a-3968-4cde-9a3d-ec87bd440c02", false);
            DeviceEvents deviceevents2 = deviceevents1.clone();
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1553713211597L), null,
                                                          new Date(1553713211269L),
                                                          "0dd14b4d-3d71-4984-9531-73fc6c906356",
                                                          "eac277fc-a472-4931-940e-7c1915cba6b0",
                                                          "edb9d041-0650-4a9a-ad73-7a51dfafb83e",
                                                          "3f9c3c1f-e7d6-4d33-8762-d48863d2e0ff",
                                                          "e63299fb-955d-4fa8-a095-41a870165c7f",
                                                          "63173ec4-5061-49a8-91d7-718f273c6691", false);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1553713211597L), null,
                                                          new Date(1553713211269L),
                                                          "0dd14b4d-3d71-4984-9531-73fc6c906356",
                                                          "eac277fc-a472-4931-940e-7c1915cba6b0",
                                                          "edb9d041-0650-4a9a-ad73-7a51dfafb83e",
                                                          "3f9c3c1f-e7d6-4d33-8762-d48863d2e0ff",
                                                          "e63299fb-955d-4fa8-a095-41a870165c7f",
                                                          "63173ec4-5061-49a8-91d7-718f273c6691", false);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2.hashCode(), deviceevents1.hashCode());
            int hashCode = deviceevents1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceevents1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEvents deviceevents = new DeviceEvents(null, new Date(1553713207940L), null, new Date(1553713217350L),
                                                     "75a09a1d-77a0-4d4d-a1f0-c14b36c4db34",
                                                     "b7a92ff1-c3fd-4da0-900d-a837ca7478a2",
                                                     "aba2ec75-6518-492d-9b46-9cd04f99c345",
                                                     "05c85bd9-0b19-443b-b73d-1bdad54690c6",
                                                     "57cc333a-fc72-4495-ac36-d7efd60a6dd8",
                                                     "c45f473c-1398-41ef-a5be-2901d8fee25e", false);
        assertTrue(deviceevents.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1553713212013L), null,
                                                          new Date(1553713208707L),
                                                          "2ef94366-8eaa-44fc-9dd9-cea11a72cdbf",
                                                          "9fd3c4d2-254b-42b5-b651-0bb7ed5bef82",
                                                          "e39d1af2-d83a-493f-9a74-a101f3892dae",
                                                          "4d08a8b4-c1ed-493d-88bb-32623e37b870",
                                                          "1ca03ae2-5a07-417a-819f-3b99e079adc0",
                                                          "6e9feb72-a0d7-4275-8cd0-5c6570d28dc6", false);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1553713212013L), null,
                                                          new Date(1553713208707L),
                                                          "2ef94366-8eaa-44fc-9dd9-cea11a72cdbf",
                                                          "9fd3c4d2-254b-42b5-b651-0bb7ed5bef82",
                                                          "e39d1af2-d83a-493f-9a74-a101f3892dae",
                                                          "4d08a8b4-c1ed-493d-88bb-32623e37b870",
                                                          "1ca03ae2-5a07-417a-819f-3b99e079adc0",
                                                          "6e9feb72-a0d7-4275-8cd0-5c6570d28dc6", false);
            DeviceEvents deviceevents3 = new DeviceEvents(null, new Date(1553713214968L), null,
                                                          new Date(1553713217251L),
                                                          "c8f88762-bda1-4e62-8273-ab87fa96e521",
                                                          "795f0395-6ffe-4601-ac19-3d5d7649ee34",
                                                          "ed33aae5-0e28-4289-9aaa-094335cc794d",
                                                          "6beaf0b0-03ad-4c6d-b496-07d976fcf59d",
                                                          "7c366e00-7ec3-4527-a297-6a2b5558d81a",
                                                          "a31ecbd2-aee9-4ec2-b4c6-71e9c4be8ec2", false);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotNull(deviceevents3);
            assertNotSame(deviceevents2, deviceevents1);
            assertNotSame(deviceevents3, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents1, deviceevents2);
            assertEquals(deviceevents1, deviceevents1);
            assertFalse(deviceevents1.equals(null));
            assertNotEquals(deviceevents3, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
