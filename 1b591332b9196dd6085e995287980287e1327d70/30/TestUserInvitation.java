// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model UserInvitation.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestUserInvitation {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("d1864121-a22f-4f16-982c-8ab4b3a273af",
                                                                new Date(1553713209640L),
                                                                "d88ab21c-f804-4ad2-98b7-72844dbce509",
                                                                new Date(1553713213550L),
                                                                "671a4e9e-3a6f-4b9b-9cf1-dcff200c81f2", null,
                                                                new Date(1553713217821L),
                                                                "795bbb94-c9d9-4d57-ae14-66361f005d69");
            UserInvitation userinvitation2 = userinvitation1.clone();
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotSame(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("290fb25c-7c97-463a-a284-eda62d5cff63",
                                                                new Date(1553713212165L),
                                                                "38ef5701-94d1-4751-a09e-bdf783266907",
                                                                new Date(1553713210636L),
                                                                "f3f0de56-c457-418f-ab88-668262a0d51d", null,
                                                                new Date(1553713210103L),
                                                                "477060d3-813b-421f-bb21-04cb65011d75");
            UserInvitation userinvitation2 = new UserInvitation("290fb25c-7c97-463a-a284-eda62d5cff63",
                                                                new Date(1553713212165L),
                                                                "38ef5701-94d1-4751-a09e-bdf783266907",
                                                                new Date(1553713210636L),
                                                                "f3f0de56-c457-418f-ab88-668262a0d51d", null,
                                                                new Date(1553713210103L),
                                                                "477060d3-813b-421f-bb21-04cb65011d75");
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotSame(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation2.hashCode(), userinvitation1.hashCode());
            int hashCode = userinvitation1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, userinvitation1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        UserInvitation userinvitation = new UserInvitation("41a88792-872a-4a89-82b6-b5f4bb10ba38",
                                                           new Date(1553713213290L),
                                                           "00affa8a-04fa-4de6-b291-cff7d53de07d",
                                                           new Date(1553713216171L),
                                                           "f3b8f1f7-0ff9-4aae-8ec0-8dd758ab8b5c", null,
                                                           new Date(1553713216392L),
                                                           "d8221d76-1a8a-4cfb-a626-07d73cccacc4");
        assertTrue(userinvitation.isValid());
        UserInvitation userinvitationInvalid = new UserInvitation("7ef998c5-9c2f-4a44-8875-b2c655bb8877",
                                                                  new Date(1553713213896L), null,
                                                                  new Date(1553713208991L),
                                                                  "36191b91-5a5a-4d27-8781-06f60f78351a", null,
                                                                  new Date(1553713209929L),
                                                                  "8f4bf61c-34c1-4737-bcdb-511909d27c37");
        assertFalse(userinvitationInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("ef13051f-cfc0-4394-b2ef-731ef2b07916",
                                                                new Date(1553713215700L),
                                                                "e2ff48a3-03ec-43fb-ac48-dc6fef2df658",
                                                                new Date(1553713216333L),
                                                                "a3bd9879-f112-4037-8242-3172df92bc76", null,
                                                                new Date(1553713215843L),
                                                                "9f602047-07fa-4f9c-9b70-4ca986f6ba18");
            UserInvitation userinvitation2 = new UserInvitation("ef13051f-cfc0-4394-b2ef-731ef2b07916",
                                                                new Date(1553713215700L),
                                                                "e2ff48a3-03ec-43fb-ac48-dc6fef2df658",
                                                                new Date(1553713216333L),
                                                                "a3bd9879-f112-4037-8242-3172df92bc76", null,
                                                                new Date(1553713215843L),
                                                                "9f602047-07fa-4f9c-9b70-4ca986f6ba18");
            UserInvitation userinvitation3 = new UserInvitation("90870506-7abc-47ec-8494-7dc05226d7d3",
                                                                new Date(1553713214735L),
                                                                "4ca17077-78a2-4bf9-8dac-d071e47cb033",
                                                                new Date(1553713215533L),
                                                                "06a31c60-b8aa-465f-95c0-0229266fe46f", null,
                                                                new Date(1553713208403L),
                                                                "8f7da31b-5501-46a5-bdbe-9f3ad5ed1fe4");
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotNull(userinvitation3);
            assertNotSame(userinvitation2, userinvitation1);
            assertNotSame(userinvitation3, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation1, userinvitation2);
            assertEquals(userinvitation1, userinvitation1);
            assertFalse(userinvitation1.equals(null));
            assertNotEquals(userinvitation3, userinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
