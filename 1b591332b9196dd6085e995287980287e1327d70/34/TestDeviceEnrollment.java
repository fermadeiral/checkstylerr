// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEnrollment.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEnrollment {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEnrollment deviceenrollment1 = new DeviceEnrollment("173aae88-36bf-491f-b4de-ddc732a7c6a9",
                                                                      new Date(1553713210383L),
                                                                      new Date(1553713217004L),
                                                                      "68MqPj5u59nz2fmNE1cTmbDB1xF2709D",
                                                                      "A-grLjzT7PnJ47b3CkuZ4n9SDryy0bWhT75mP2TwXAVEY4:tRZYSn869:mQlb99i9n61558vHC7Z5tpmJ0WNGp2U31F:mR22S",
                                                                      new Date(1553713215160L),
                                                                      "56hw3d4yt1f90P5xgeLOD0m0zVYdm4xf");
            DeviceEnrollment deviceenrollment2 = deviceenrollment1.clone();
            assertNotNull(deviceenrollment1);
            assertNotNull(deviceenrollment2);
            assertNotSame(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEnrollment deviceenrollment1 = new DeviceEnrollment("a0458686-d7b0-43bf-b8c3-305621dbc9e7",
                                                                      new Date(1553713212751L),
                                                                      new Date(1553713209260L),
                                                                      "ot3EcZ356694s8O49754nDC1cDBM8dC7",
                                                                      "A-4H63LJ46za0CgqvmlaQIDy4OvQ3K864h6Nn7TcJk:uYTh8uXO6LF9x5R0PW96AkM23J3aK7M43KgO1:Vwcebf:nPyMxMmZ2",
                                                                      new Date(1553713210220L),
                                                                      "2P5u0Q85eClgYG381LSYJl1HqpKOR903");
            DeviceEnrollment deviceenrollment2 = new DeviceEnrollment("a0458686-d7b0-43bf-b8c3-305621dbc9e7",
                                                                      new Date(1553713212751L),
                                                                      new Date(1553713209260L),
                                                                      "ot3EcZ356694s8O49754nDC1cDBM8dC7",
                                                                      "A-4H63LJ46za0CgqvmlaQIDy4OvQ3K864h6Nn7TcJk:uYTh8uXO6LF9x5R0PW96AkM23J3aK7M43KgO1:Vwcebf:nPyMxMmZ2",
                                                                      new Date(1553713210220L),
                                                                      "2P5u0Q85eClgYG381LSYJl1HqpKOR903");
            assertNotNull(deviceenrollment1);
            assertNotNull(deviceenrollment2);
            assertNotSame(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2.hashCode(), deviceenrollment1.hashCode());
            int hashCode = deviceenrollment1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceenrollment1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEnrollment deviceenrollment = new DeviceEnrollment("0e8fabad-ac78-49b3-835c-6c3171dd13da",
                                                                 new Date(1553713217439L), new Date(1553713211024L),
                                                                 "h1j3h61rfe7VQ8z1lpWn7Mq5F74IQ1B7",
                                                                 "A-O13OdrDrBnVVLwME44H6Ix:L2C6:08HyAyC7U14hJRzolAx9Nm3J6QRih8yR3WFjT8GPw:4G94TJ44:m0T0nv8E:Z9ewLai",
                                                                 new Date(1553713208691L),
                                                                 "35y5NXjsEF0eu66Dn5CsOrkz7c0J0I0e");
        assertTrue(deviceenrollment.isValid());
        DeviceEnrollment deviceenrollmentInvalid = new DeviceEnrollment("df17a28e-0126-4da9-8e04-e212e8d72b47",
                                                                        new Date(1553713214507L),
                                                                        new Date(1553713207882L),
                                                                        "G7iXM7XYjG\u0012@iL;7m@rr_D=lâ¥˜DD]dl=\u0002rG\\\\7>f7b@jâ´‘D7iGKDL`\u00047mm:L7X7rf=;",
                                                                        null, new Date(1553713212624L),
                                                                        "S\u001a2nn/gmssLhU>cixQDSyLLnDDU1>1sBã?™$$\u0014kn(ADmQ12PQS_nLsD6Wnï’¬Sm1SsB6G");
        assertFalse(deviceenrollmentInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEnrollment deviceenrollment1 = new DeviceEnrollment("c81b125e-5f70-42d2-9645-a76604061e6b",
                                                                      new Date(1553713213112L),
                                                                      new Date(1553713212091L),
                                                                      "2N79jOW9587s07aHPYvVgk2253Q1BSPp",
                                                                      "A-9QczXMwut7MFDHpCf8YANFHJb2uS7vtewXN1A4s86X9fXwoTLCAI0MqaM4x1kSol:ilJd3za5M9VvnZn:3OaUv43401g0VJ",
                                                                      new Date(1553713208603L),
                                                                      "08bpzUTQH7zU0r50Qy0n9Ua9CFH12hFs");
            DeviceEnrollment deviceenrollment2 = new DeviceEnrollment("c81b125e-5f70-42d2-9645-a76604061e6b",
                                                                      new Date(1553713213112L),
                                                                      new Date(1553713212091L),
                                                                      "2N79jOW9587s07aHPYvVgk2253Q1BSPp",
                                                                      "A-9QczXMwut7MFDHpCf8YANFHJb2uS7vtewXN1A4s86X9fXwoTLCAI0MqaM4x1kSol:ilJd3za5M9VvnZn:3OaUv43401g0VJ",
                                                                      new Date(1553713208603L),
                                                                      "08bpzUTQH7zU0r50Qy0n9Ua9CFH12hFs");
            DeviceEnrollment deviceenrollment3 = new DeviceEnrollment("cf2db011-4e2a-43d0-9e01-79ea97ba3487",
                                                                      new Date(1553713216053L),
                                                                      new Date(1553713212033L),
                                                                      "01anTtEu4j0Ucb52JRJSUMdooWFUOL5X",
                                                                      "A-uS3Ae0VE9LtvLCM33i2Ow486JOhTr37QVa7PJk5z5ttJVO9PJs:8C8CgUvug05hS3e1E5iQKOM:N8iq0:pyQNn26Yw30YHn",
                                                                      new Date(1553713210640L),
                                                                      "rphagckm6rChs6h7odOspsWTeK9sCD7a");
            assertNotNull(deviceenrollment1);
            assertNotNull(deviceenrollment2);
            assertNotNull(deviceenrollment3);
            assertNotSame(deviceenrollment2, deviceenrollment1);
            assertNotSame(deviceenrollment3, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment1, deviceenrollment2);
            assertEquals(deviceenrollment1, deviceenrollment1);
            assertFalse(deviceenrollment1.equals(null));
            assertNotEquals(deviceenrollment3, deviceenrollment1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
