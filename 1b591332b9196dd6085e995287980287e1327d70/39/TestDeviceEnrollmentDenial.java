// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEnrollmentDenial.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEnrollmentDenial {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("a03fefeabac0fdb4dedffbaa0fb5dea0",
                                                                                        new Date(1553713209632L),
                                                                                        "b6d44353-5196-4c93-ae59-0b03507509f8",
                                                                                        "275cbacae49b8bb20d6de42b86c6bf94",
                                                                                        "0bac14b9fe558a417cff7c49d90668dd");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = deviceenrollmentdenial1.clone();
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("78fc5be67f26d91241acbb07aab72bac",
                                                                                        new Date(1553713210302L),
                                                                                        "cbcac152-f7cb-4998-91ec-010c80c0a42d",
                                                                                        "8fea357b87623aeb831b462980aa9cf5",
                                                                                        "3aae12e0f19bf25ca922fefa7c4a3df8");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = new DeviceEnrollmentDenial("78fc5be67f26d91241acbb07aab72bac",
                                                                                        new Date(1553713210302L),
                                                                                        "cbcac152-f7cb-4998-91ec-010c80c0a42d",
                                                                                        "8fea357b87623aeb831b462980aa9cf5",
                                                                                        "3aae12e0f19bf25ca922fefa7c4a3df8");
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2.hashCode(), deviceenrollmentdenial1.hashCode());
            int hashCode = deviceenrollmentdenial1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceenrollmentdenial1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEnrollmentDenial deviceenrollmentdenial = new DeviceEnrollmentDenial("5eaa1c7a185e3919c969590ebee1aa1a",
                                                                                   new Date(1553713214657L),
                                                                                   "d6d4f0bd-def1-4349-9f32-c2e39e67a2f9",
                                                                                   "ee0c073a6f30e32d1bf5ba70abeb9c6e",
                                                                                   "6cda5f3c1255b8c6dbbbf70ef46a23aa");
        assertTrue(deviceenrollmentdenial.isValid());
        DeviceEnrollmentDenial deviceenrollmentdenialInvalid = new DeviceEnrollmentDenial("0ã°…?$$\u00015+3H3J5Gæ³”åª“Bì “\u000f\u0010$$;ë›¬\f5è”‰Iå®£/\u0016ä†¹4\u0012\u0006Y3554\u001953ìˆ?\u001cB[éŒ‹3ç¹¶\u00073ì¹˜*PT53\u0010 Ó \u0016\b",
                                                                                          new Date(1553713210173L),
                                                                                          "8801094a-db1f-4f58-80d5-30c3ef132ec6",
                                                                                          "\tEâ–’]\u00015Hæ²¥ìˆ“\u001d55\u000f5V55è›‹5ê“§á™¥@\u0003\u001c5í†ŒA5^%5ê¿ž]ë”¶Uç§¨Q\\\\é“¼8555<\u0013ë¾¹55Q5ì·¬\u0004äµ·ê ž555æ‰Ÿ5\u0001áª§äœ¿U\\\\",
                                                                                          "`Oã«£6\\\\Eï‡“\fà¯†!é§†6+6&@\\\\/6666Y:éª·ãª²`6F6OìŸ‡6é¬—66[\u000fã„«ê¯”â“?é‘ˆï††H\u0001!6\u0013'66\u0003:ì‹¢[^MD\f-.Bâ« ");
        assertFalse(deviceenrollmentdenialInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("da1a5cbececbbd24ebcdecb3e7e66985",
                                                                                        new Date(1553713212022L),
                                                                                        "91cbd3d1-109e-4713-b8e4-1dda04e20853",
                                                                                        "8dcede015d0d6f662edf8ac2ffef7682",
                                                                                        "37bdd173f27be0a7a54ae80c063f2ad0");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = new DeviceEnrollmentDenial("da1a5cbececbbd24ebcdecb3e7e66985",
                                                                                        new Date(1553713212022L),
                                                                                        "91cbd3d1-109e-4713-b8e4-1dda04e20853",
                                                                                        "8dcede015d0d6f662edf8ac2ffef7682",
                                                                                        "37bdd173f27be0a7a54ae80c063f2ad0");
            DeviceEnrollmentDenial deviceenrollmentdenial3 = new DeviceEnrollmentDenial("acdbf60c1313f768785aff529cebf7bd",
                                                                                        new Date(1553713217693L),
                                                                                        "16eba1d7-e5d2-4339-aee9-1d1f75711bdd",
                                                                                        "5e3cc8fdadeb4d4181b6d6eb57ae8dbd",
                                                                                        "fbccdc7f7edcb2e458b4618ebec83aa1");
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotNull(deviceenrollmentdenial3);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertNotSame(deviceenrollmentdenial3, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial1, deviceenrollmentdenial2);
            assertEquals(deviceenrollmentdenial1, deviceenrollmentdenial1);
            assertFalse(deviceenrollmentdenial1.equals(null));
            assertNotEquals(deviceenrollmentdenial3, deviceenrollmentdenial1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
