// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model ActiveSession.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestActiveSession {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ActiveSession activesession1 = new ActiveSession("723f897cf94d230cfbfdd860cbab94ac",
                                                             "98173f36-649b-4794-89f4-3169e6c175f5",
                                                             new Date(1561572700178L),
                                                             "50c44f06-2d74-4b79-ae28-f1425156627e",
                                                             "79046bc6-0b80-4f4d-9ea4-3de3df7e497c");
            ActiveSession activesession2 = activesession1.clone();
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotSame(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ActiveSession activesession1 = new ActiveSession("723f897cf94d230cfbfdd860cbab94ac",
                                                             "a517817e-5de2-4bd5-b26d-3122290ab70e",
                                                             new Date(1561572707610L),
                                                             "a3fe8bbf-1790-4f55-9f65-13ddfe9e0c93",
                                                             "7532ecab-08eb-4bd9-b909-617d1e100d68");
            ActiveSession activesession2 = new ActiveSession("723f897cf94d230cfbfdd860cbab94ac",
                                                             "a517817e-5de2-4bd5-b26d-3122290ab70e",
                                                             new Date(1561572707610L),
                                                             "a3fe8bbf-1790-4f55-9f65-13ddfe9e0c93",
                                                             "7532ecab-08eb-4bd9-b909-617d1e100d68");
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotSame(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession2.hashCode(), activesession1.hashCode());
            int hashCode = activesession1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, activesession1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ActiveSession activesession = new ActiveSession("723f897cf94d230cfbfdd860cbab94ac",
                                                        "87493cc9-fd5a-4521-a45e-6016738109de",
                                                        new Date(1561572702939L),
                                                        "f1af92ba-9a0e-4d2a-bcdb-e34f085dc75b",
                                                        "6a93f236-7dc5-4c4f-9d8f-44bcd32bab52");
        assertTrue(activesession.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ActiveSession activesession1 = new ActiveSession("723f897cf94d230cfbfdd860cbab94ac",
                                                             "e3dc2f35-d6bc-4429-9f81-7813beba19cb",
                                                             new Date(1561572708651L),
                                                             "0e790f20-169e-4f8d-8e22-f5ba01635b17",
                                                             "bc2f1ed6-5917-4a22-a432-9046067f7197");
            ActiveSession activesession2 = new ActiveSession("723f897cf94d230cfbfdd860cbab94ac",
                                                             "e3dc2f35-d6bc-4429-9f81-7813beba19cb",
                                                             new Date(1561572708651L),
                                                             "0e790f20-169e-4f8d-8e22-f5ba01635b17",
                                                             "bc2f1ed6-5917-4a22-a432-9046067f7197");
            ActiveSession activesession3 = new ActiveSession("723f897cf94d230cfbfdd860cbab94ac",
                                                             "a0eebf1f-aa4f-430d-b50a-052e66752d14",
                                                             new Date(1561572707140L),
                                                             "cdb6b01d-3e89-4347-883a-874d3c0edd72",
                                                             "4c6004ef-23f6-4b6b-b0e8-c8736d3f519f");
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotNull(activesession3);
            assertNotSame(activesession2, activesession1);
            assertNotSame(activesession3, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession1, activesession2);
            assertEquals(activesession1, activesession1);
            assertFalse(activesession1.equals(null));
            assertNotEquals(activesession3, activesession1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
