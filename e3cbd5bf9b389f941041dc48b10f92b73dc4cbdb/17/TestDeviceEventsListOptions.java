// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import com.arm.mbed.cloud.sdk.common.Order;
import com.arm.mbed.cloud.sdk.common.listing.ListOptionsEncoder;
import com.arm.mbed.cloud.sdk.common.listing.filtering.FilterOperator;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEventsListOptions.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEventsListOptions {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEventsListOptions deviceeventslistoptions1 = new DeviceEventsListOptions(Integer.valueOf(51),
                                                                                           Long.valueOf(-25),
                                                                                           Order.getDefault(),
                                                                                           "8f77ce5e-425a-403a-88ce-26f00200d35f",
                                                                                           null, null);
            DeviceEventsListOptions deviceeventslistoptions2 = deviceeventslistoptions1.clone();
            assertNotNull(deviceeventslistoptions1);
            assertNotNull(deviceeventslistoptions2);
            assertNotSame(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2, deviceeventslistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the filters method.
     */
    @SuppressWarnings({ "boxing", "resource" })
    @Test
    public void testFilters() {
        try {
            DeviceEventsListOptions option = new DeviceEventsListOptions().equalToDeviceId("571804c6-21b6-4a16-8669-bd80165a15b1")
                                                                          .notEqualToDeviceId("c11486fa-c0f1-40aa-ab4a-bee8c84efef2")
                                                                          .inDeviceIds(Arrays.asList("e95d53d7-3c94-4ae9-a577-49cf6ed6f6fb",
                                                                                                     "c90026e5-a630-4c81-ae45-04be493e18a0"))
                                                                          .notInDeviceIds(Arrays.asList("9d907690-1bf3-4ed4-aed9-fd1ac2ee8199",
                                                                                                        "3621354c-49c5-4e6e-9cfc-b058a07d66fb",
                                                                                                        "8b7502b2-80eb-47d7-8e56-63a8d4480374",
                                                                                                        "eac716be-0a77-436e-921b-a7b70b523b67",
                                                                                                        "d753edcc-3268-400d-9359-9a3a1f2683dc",
                                                                                                        "35e56557-8c44-4167-8118-4bf79fda3853"))
                                                                          .equalToDescription("c5cd1d6d-993d-4845-a6fd-d85dc0c6787f")
                                                                          .notEqualToDescription("d9e7acd3-de76-477b-b2ac-bfe17031d25f")
                                                                          .inDescriptions(Arrays.asList("cee7257c-5226-4a22-b3e6-422c11dd4ec1",
                                                                                                        "bc07cbd4-9555-45ae-bb41-a0fba95e291d",
                                                                                                        "cba9a74a-b89e-44fd-b1b8-165ae2b77132",
                                                                                                        "29eb38e6-bcff-4b9f-a056-109b9d53df6a",
                                                                                                        "59ce9696-82d4-4520-8775-6885df023474"))
                                                                          .notInDescriptions(Arrays.asList("6a38c471-b2d6-4367-825e-99251d3f8049",
                                                                                                           "b363dacf-ab47-4ac7-a6ab-6b3b1a2a85dc"))
                                                                          .inDateTimes(Arrays.asList(new Date(1561572706484L),
                                                                                                     new Date(1561572707384L)))
                                                                          .notInDateTimes(Arrays.asList(new Date(1561572710005L),
                                                                                                        new Date(1561572706214L),
                                                                                                        new Date(1561572704815L),
                                                                                                        new Date(1561572708780L),
                                                                                                        new Date(1561572705308L),
                                                                                                        new Date(1561572706030L),
                                                                                                        new Date(1561572702522L)))
                                                                          .lessThanDateTime(new Date(1561572701390L))
                                                                          .greaterThanDateTime(new Date(1561572709694L))
                                                                          .equalToStateChange(Boolean.FALSE)
                                                                          .notEqualToStateChange(Boolean.TRUE)
                                                                          .equalToId("1ae28bcb-040c-45fa-9fc8-86b9923a0d7e")
                                                                          .notEqualToId("2b3c2855-f783-4508-a00a-58ef7fa00ab6")
                                                                          .inIds(Arrays.asList("b196a3b2-46a5-4080-8afd-6a149072444c",
                                                                                               "ebe23cc3-e260-4a53-a6c2-1d4083a44090",
                                                                                               "ac933bdb-bda6-400c-8b40-aa433faf9bf3"))
                                                                          .notInIds(Arrays.asList("88d3f3bc-569b-4e51-bf0c-4efbfa09ef6a"))
                                                                          .equalToEventType("ddcb1653-0fc0-4332-89d1-07a3f356113c")
                                                                          .notEqualToEventType("8320c38b-309a-4d06-9e04-213655ce2a8a")
                                                                          .inEventTypes(Arrays.asList("1ce6627c-4e4a-4d9b-bd41-019cec2723a9",
                                                                                                      "5e0efba6-614f-428f-829a-825df19f5855",
                                                                                                      "a8a287a3-9cd1-4bce-a144-5687590651b6",
                                                                                                      "833d793f-699a-4414-8b2a-634e108dceb2",
                                                                                                      "441f47b4-da90-4722-ad7c-bf9cbaa62555",
                                                                                                      "a5c6d14a-570a-4b9c-b752-df4fe98ba713",
                                                                                                      "dc4815d9-34c9-4933-bc44-82d288dbda45"))
                                                                          .notInEventTypes(Arrays.asList("98e4e34d-a10f-4f77-8279-ca48ec078b8e",
                                                                                                         "d781e6f1-9002-4376-81aa-9282eafba561",
                                                                                                         "bcce96ef-9b4c-4784-ae60-70365815090e",
                                                                                                         "41022b0c-a0b7-4a38-a2c7-f9f2890520e2",
                                                                                                         "35ce38e5-7ad1-4671-96a5-88324c2d7789",
                                                                                                         "9a8f9d0a-0d7a-4b69-94c2-aaab62ce77fd",
                                                                                                         "d1c7bfb1-766d-4f04-9153-5dfcc7b7db12"));
            assertTrue(option.hasFilters());
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID, FilterOperator.EQUAL));
            assertNotNull(option.getDeviceIdFilters());
            assertEquals("571804c6-21b6-4a16-8669-bd80165a15b1",
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDeviceIdFilters());
            assertEquals("c11486fa-c0f1-40aa-ab4a-bee8c84efef2",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID, FilterOperator.IN));
            assertNotNull(option.getDeviceIdFilters());
            assertEquals(Arrays.asList("e95d53d7-3c94-4ae9-a577-49cf6ed6f6fb", "c90026e5-a630-4c81-ae45-04be493e18a0"),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID,
                                                                 List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getDeviceIdFilters());
            assertEquals(Arrays.asList("9d907690-1bf3-4ed4-aed9-fd1ac2ee8199", "3621354c-49c5-4e6e-9cfc-b058a07d66fb",
                                       "8b7502b2-80eb-47d7-8e56-63a8d4480374", "eac716be-0a77-436e-921b-a7b70b523b67",
                                       "d753edcc-3268-400d-9359-9a3a1f2683dc", "35e56557-8c44-4167-8118-4bf79fda3853"),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID,
                                                                    List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("c5cd1d6d-993d-4845-a6fd-d85dc0c6787f",
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("d9e7acd3-de76-477b-b2ac-bfe17031d25f",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                       String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("cee7257c-5226-4a22-b3e6-422c11dd4ec1", "bc07cbd4-9555-45ae-bb41-a0fba95e291d",
                                       "cba9a74a-b89e-44fd-b1b8-165ae2b77132", "29eb38e6-bcff-4b9f-a056-109b9d53df6a",
                                       "59ce9696-82d4-4520-8775-6885df023474"),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                 List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("6a38c471-b2d6-4367-825e-99251d3f8049", "b363dacf-ab47-4ac7-a6ab-6b3b1a2a85dc"),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME, FilterOperator.IN));
            assertNotNull(option.getDateTimeFilters());
            assertEquals(Arrays.asList(new Date(1561572706484L), new Date(1561572707384L)),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME,
                                                                 List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME, FilterOperator.NOT_IN));
            assertNotNull(option.getDateTimeFilters());
            assertEquals(Arrays.asList(new Date(1561572710005L), new Date(1561572706214L), new Date(1561572704815L),
                                       new Date(1561572708780L), new Date(1561572705308L), new Date(1561572706030L),
                                       new Date(1561572702522L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME,
                                                                    List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME, FilterOperator.LESS_THAN));
            assertNotNull(option.getDateTimeFilters());
            assertEquals(new Date(1561572701390L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME, FilterOperator.GREATER_THAN));
            assertNotNull(option.getDateTimeFilters());
            assertEquals(new Date(1561572709694L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE, FilterOperator.EQUAL));
            assertNotNull(option.getStateChangeFilters());
            assertEquals(Boolean.FALSE,
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE,
                                                                    Boolean.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getStateChangeFilters());
            assertEquals(Boolean.TRUE,
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE,
                                                                       Boolean.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, FilterOperator.EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("1ae28bcb-040c-45fa-9fc8-86b9923a0d7e",
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("2b3c2855-f783-4508-a00a-58ef7fa00ab6",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, FilterOperator.IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("b196a3b2-46a5-4080-8afd-6a149072444c", "ebe23cc3-e260-4a53-a6c2-1d4083a44090",
                                       "ac933bdb-bda6-400c-8b40-aa433faf9bf3"),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, List.class,
                                                                 option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("88d3f3bc-569b-4e51-bf0c-4efbfa09ef6a"),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID,
                                                                    List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE, FilterOperator.EQUAL));
            assertNotNull(option.getEventTypeFilters());
            assertEquals("ddcb1653-0fc0-4332-89d1-07a3f356113c",
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE,
                                                                    String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getEventTypeFilters());
            assertEquals("8320c38b-309a-4d06-9e04-213655ce2a8a",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE,
                                                                       String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE, FilterOperator.IN));
            assertNotNull(option.getEventTypeFilters());
            assertEquals(Arrays.asList("1ce6627c-4e4a-4d9b-bd41-019cec2723a9", "5e0efba6-614f-428f-829a-825df19f5855",
                                       "a8a287a3-9cd1-4bce-a144-5687590651b6", "833d793f-699a-4414-8b2a-634e108dceb2",
                                       "441f47b4-da90-4722-ad7c-bf9cbaa62555", "a5c6d14a-570a-4b9c-b752-df4fe98ba713",
                                       "dc4815d9-34c9-4933-bc44-82d288dbda45"),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE,
                                                                 List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE, FilterOperator.NOT_IN));
            assertNotNull(option.getEventTypeFilters());
            assertEquals(Arrays.asList("98e4e34d-a10f-4f77-8279-ca48ec078b8e", "d781e6f1-9002-4376-81aa-9282eafba561",
                                       "bcce96ef-9b4c-4784-ae60-70365815090e", "41022b0c-a0b7-4a38-a2c7-f9f2890520e2",
                                       "35ce38e5-7ad1-4671-96a5-88324c2d7789", "9a8f9d0a-0d7a-4b69-94c2-aaab62ce77fd",
                                       "d1c7bfb1-766d-4f04-9153-5dfcc7b7db12"),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE,
                                                                    List.class, option));
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEventsListOptions deviceeventslistoptions1 = new DeviceEventsListOptions(Integer.valueOf(101),
                                                                                           Long.valueOf(67),
                                                                                           Order.getDefault(),
                                                                                           "9c9e90ad-3019-4dfa-9f2d-09a699ad62aa",
                                                                                           null, null);
            DeviceEventsListOptions deviceeventslistoptions2 = new DeviceEventsListOptions(Integer.valueOf(101),
                                                                                           Long.valueOf(67),
                                                                                           Order.getDefault(),
                                                                                           "9c9e90ad-3019-4dfa-9f2d-09a699ad62aa",
                                                                                           null, null);
            assertNotNull(deviceeventslistoptions1);
            assertNotNull(deviceeventslistoptions2);
            assertNotSame(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2.hashCode(), deviceeventslistoptions1.hashCode());
            int hashCode = deviceeventslistoptions1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceeventslistoptions1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEventsListOptions deviceeventslistoptions1 = new DeviceEventsListOptions(Integer.valueOf(36),
                                                                                           Long.valueOf(43),
                                                                                           Order.getDefault(),
                                                                                           "c1e9ebfb-1170-46a9-b770-f4e94c47c742",
                                                                                           null, null);
            DeviceEventsListOptions deviceeventslistoptions2 = new DeviceEventsListOptions(Integer.valueOf(36),
                                                                                           Long.valueOf(43),
                                                                                           Order.getDefault(),
                                                                                           "c1e9ebfb-1170-46a9-b770-f4e94c47c742",
                                                                                           null, null);
            DeviceEventsListOptions deviceeventslistoptions3 = new DeviceEventsListOptions(Integer.valueOf(88),
                                                                                           Long.valueOf(-72),
                                                                                           Order.getDefault(),
                                                                                           "7041361a-913b-494c-adea-d21a965f5c44",
                                                                                           null, null);
            assertNotNull(deviceeventslistoptions1);
            assertNotNull(deviceeventslistoptions2);
            assertNotNull(deviceeventslistoptions3);
            assertNotSame(deviceeventslistoptions2, deviceeventslistoptions1);
            assertNotSame(deviceeventslistoptions3, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions1, deviceeventslistoptions2);
            assertEquals(deviceeventslistoptions1, deviceeventslistoptions1);
            assertFalse(deviceeventslistoptions1.equals(null));
            assertNotEquals(deviceeventslistoptions3, deviceeventslistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
