// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model User.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestUser {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            User user1 = new User("723f897cf94d230cfbfdd860cbab94ac", null, "6f51d130-7a84-4c3d-b3b4-d5888e14bba6",
                                  new Date(1561572704559L), -30, null, "d9345.008a9@5d97f.fr", true,
                                  "29898007-9979-4145-bd8e-c300795c2d7b", "723f897cf94d230cfbfdd860cbab94ac", false,
                                  false, false, 6, null, null, "cdcce1da-f682-4668-b249-10503ba99861", 34,
                                  "a5e53425-913e-4a74-978f-acad3c4d5e49", UserStatus.getDefault(), null,
                                  new Date(1561572709218L), "cth6");
            User user2 = user1.clone();
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotSame(user2, user1);
            assertEquals(user2, user1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            User user1 = new User("723f897cf94d230cfbfdd860cbab94ac", null, "65e8eb59-6183-4880-83f3-237d407aaf48",
                                  new Date(1561572708852L), -65, null, "97107.9f571@38071.fr", false,
                                  "8ec1d030-4406-4363-ae75-36f542b1bfb1", "723f897cf94d230cfbfdd860cbab94ac", false,
                                  true, true, -38, null, null, "00e0e450-3487-47f6-a36e-aac6fe023c64", -37,
                                  "f0cc4436-6185-48bd-9f44-dad74b4c3b6d", UserStatus.getDefault(), null,
                                  new Date(1561572705529L), "cth6");
            User user2 = new User("723f897cf94d230cfbfdd860cbab94ac", null, "65e8eb59-6183-4880-83f3-237d407aaf48",
                                  new Date(1561572708852L), -65, null, "97107.9f571@38071.fr", false,
                                  "8ec1d030-4406-4363-ae75-36f542b1bfb1", "723f897cf94d230cfbfdd860cbab94ac", false,
                                  true, true, -38, null, null, "00e0e450-3487-47f6-a36e-aac6fe023c64", -37,
                                  "f0cc4436-6185-48bd-9f44-dad74b4c3b6d", UserStatus.getDefault(), null,
                                  new Date(1561572705529L), "cth6");
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotSame(user2, user1);
            assertEquals(user2, user1);
            assertEquals(user2.hashCode(), user1.hashCode());
            int hashCode = user1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, user1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        User user = new User("723f897cf94d230cfbfdd860cbab94ac", null, "08be2d3a-dc90-41ab-a099-af577f764015",
                             new Date(1561572703399L), -127, null, "5e7f8.a119b@86540.me", true,
                             "a7951412-97da-4fdb-a2e1-4cd2e4fe2109", "723f897cf94d230cfbfdd860cbab94ac", true, false,
                             true, -96, null, null, "f1a822c5-1fb9-4891-9ea7-0d331f7d6e32", -127,
                             "ead09aca-d8af-4d4a-a432-c5e8b9285693", UserStatus.getDefault(), null,
                             new Date(1561572708085L), "cth6");
        assertTrue(user.isValid());
        User userInvalid = new User("VeHä”¾e\u001611^eï³¤\u00055Z5E\u0019115MNe15ä«½eç¡£ZB%5\u00191å“ž\u001c1X\u00105#Xî–”1e1e5ê¡«?â»ƒå‘¨e%ë…«\u001a;5ê£€í“®5e",
                                    null, "e2e5feb4-7aa9-4f32-b8ed-bf3778574dc8", new Date(1561572701604L), 9, null,
                                    null, true,
                                    "0c51022e-5c26-4631-99e0-88cfbf999f929d6fd89d-e304-40ae-b1c3-b204a3df1d55fab86fe2-9d22-4087-bac5-e052b4639cae",
                                    "VeHä”¾e\u001611^eï³¤\u00055Z5E\u0019115MNe15ä«½eç¡£ZB%5\u00191å“ž\u001c1X\u00105#Xî–”1e1e5ê¡«?â»ƒå‘¨e%ë…«\u001a;5ê£€í“®5e",
                                    true, true, false, -68, null, null, "7f079ad5-0706-4479-a080-643a1f1b10f5", 108,
                                    "2a62f8ef-711f-4808-8d21-6abaf78ec54d26427b60-7ae1-4f7f-aced-d33b34aac0ecc59a273e-4be3-48b5-be79-00a8909f8bc7",
                                    UserStatus.getDefault(), null, new Date(1561572705512L),
                                    "näŒ?,89e\u0000qå®‡ï¾¨<\u0017gdgå„¬æƒ…i1iE<eS<#éš€m\u0013jOdffddeeá­˜ä¶²Tj9keeî¹œâ??P@ï¶?ik\u0011ï­•ã¨¡ê­«îŸ‘'igg7");
        assertFalse(userInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            User user1 = new User("723f897cf94d230cfbfdd860cbab94ac", null, "14e66a30-9b25-43ee-9185-3514d505d99d",
                                  new Date(1561572703644L), -95, null, "fdeb6.aa3d3@ed765.me", true,
                                  "fcd31283-8fd1-464c-9bee-d22298eb3eff", "723f897cf94d230cfbfdd860cbab94ac", false,
                                  true, false, -100, null, null, "893b0518-e1a8-4c54-9c14-aaaab0f4971c", -103,
                                  "8621b075-cba5-4f37-ab30-427466025338", UserStatus.getDefault(), null,
                                  new Date(1561572703553L), "cth6");
            User user2 = new User("723f897cf94d230cfbfdd860cbab94ac", null, "14e66a30-9b25-43ee-9185-3514d505d99d",
                                  new Date(1561572703644L), -95, null, "fdeb6.aa3d3@ed765.me", true,
                                  "fcd31283-8fd1-464c-9bee-d22298eb3eff", "723f897cf94d230cfbfdd860cbab94ac", false,
                                  true, false, -100, null, null, "893b0518-e1a8-4c54-9c14-aaaab0f4971c", -103,
                                  "8621b075-cba5-4f37-ab30-427466025338", UserStatus.getDefault(), null,
                                  new Date(1561572703553L), "cth6");
            User user3 = new User("723f897cf94d230cfbfdd860cbab94ac", null, "29674bcd-e4ff-45fb-904a-ab72c449730d",
                                  new Date(1561572709169L), -39, null, "442c6.c12f8@16459.me", true,
                                  "4b982927-82b1-422d-8293-a5e6f087920a", "723f897cf94d230cfbfdd860cbab94ac", false,
                                  true, false, 80, null, null, "7401fda5-b770-49fb-b9af-9d35208818fb", 84,
                                  "f38fe67d-d6a7-4955-a43e-89a5e1ccb796", UserStatus.getDefault(), null,
                                  new Date(1561572703377L), "cth6");
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotNull(user3);
            assertNotSame(user2, user1);
            assertNotSame(user3, user1);
            assertEquals(user2, user1);
            assertEquals(user2, user1);
            assertEquals(user1, user2);
            assertEquals(user1, user1);
            assertFalse(user1.equals(null));
            assertNotEquals(user3, user1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
