// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceGroup.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceGroup {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceGroup devicegroup1 = new DeviceGroup(new Date(1561572704567L), null,
                                                       "e2ef48d9-a9a7-44f5-bcf7-b1ca967897f1", 6,
                                                       "4a398bef-aede-45ca-a662-98b076d10ed7",
                                                       "a3ba1eca-3647-4e0f-a328-ce10bec693ef",
                                                       new Date(1561572703968L));
            DeviceGroup devicegroup2 = devicegroup1.clone();
            assertNotNull(devicegroup1);
            assertNotNull(devicegroup2);
            assertNotSame(devicegroup2, devicegroup1);
            assertEquals(devicegroup2, devicegroup1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceGroup devicegroup1 = new DeviceGroup(new Date(1561572704358L), null,
                                                       "2276eda5-1add-415d-b8e7-6ff2c5e77537", 33,
                                                       "0ba42cdb-02ec-464a-9b73-47c73d16b725",
                                                       "8c2ae4c3-2c0f-41f6-9c73-e031f86018f9",
                                                       new Date(1561572709511L));
            DeviceGroup devicegroup2 = new DeviceGroup(new Date(1561572704358L), null,
                                                       "2276eda5-1add-415d-b8e7-6ff2c5e77537", 33,
                                                       "0ba42cdb-02ec-464a-9b73-47c73d16b725",
                                                       "8c2ae4c3-2c0f-41f6-9c73-e031f86018f9",
                                                       new Date(1561572709511L));
            assertNotNull(devicegroup1);
            assertNotNull(devicegroup2);
            assertNotSame(devicegroup2, devicegroup1);
            assertEquals(devicegroup2, devicegroup1);
            assertEquals(devicegroup2.hashCode(), devicegroup1.hashCode());
            int hashCode = devicegroup1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, devicegroup1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceGroup devicegroup = new DeviceGroup(new Date(1561572707758L), null,
                                                  "dcb8058c-7f33-4c40-926c-1a48b50d1470", 104,
                                                  "5e944eb0-a40f-4e59-9b3c-5722347c1a27",
                                                  "a0973728-0413-4138-a507-4ad10e79dc3c", new Date(1561572706957L));
        assertTrue(devicegroup.isValid());
        DeviceGroup devicegroupInvalid = new DeviceGroup(new Date(1561572707388L), null,
                                                         "9a3f56f0-61b1-4e49-82a3-53dbef7e95df38162054-7a38-45ba-ab15-7a1ed258dd64cfdec69c-fae0-411b-a563-51fcdb0cb546a05ce343-006b-4173-87c6-aa08f25e315c6b67448b-56e9-44eb-911f-d06e055529ab0f6699da-5e49-4c43-8f36-3fc6f26151967b0d5875-4eec-4479-91de-d691b7ed6814aaed4aca-131c-419d-9bd7-9b561be79f0b01a74fb9-773b-4ad6-9559-d6d6074a498055f11082-ec14-4d84-97e4-0b39ee17ff9ec9d9bd19-a084-4c46-ac6f-ff3328be36df0364ea04-8af4-4b9d-9584-fea996baca771f6fdc02-2db9-4431-8b0e-fb54284a3b505ef86d70-323b-4c69-bf21-bf90db2965cae0c740dd-f12e-4c98-8144-981ebc04f51c8e526471-9af6-4f94-b899-feb5ea2523f7c6ad4f22-8662-43fd-9106-08a5f089c73fa94873a5-2668-4d64-9466-b5c2475251bf24c3647b-962e-41bc-8495-0af95ad1459e57f4fe8b-2036-496b-89b9-bd9ad5661c49c82d1398-9575-4229-8bed-2dc2fd714628fbd9eb08-f3c3-4b88-90b8-017dfbf4e2a36171e797-c382-477e-8675-a82b9f43146ed719ee9f-f903-4e54-9467-1369ebc6457e0dbe94c3-1462-4c83-9ab1-eca59ea4d22d2e41b41f-6d15-46fd-a6b6-98633eb4367141b323c1-363f-4a08-8561-dd6e19a026fd880d69f7-6269-4e2a-834f-86aad217a82c9dcdc8ac-c573-4aa7-b625-d609531d777209c8723a-467d-45cc-8e10-83072d73180661db04c3-980c-4cc1-b8fd-80cf70c9ca09d0395086-26e4-4284-a7d4-5fb0277b9ff6a3e5da2a-5b88-4003-8319-7d50fea8b40ff29a184e-e380-483e-b82b-34c31263fecc3f755a75-9973-432f-a38b-9749ee24c75c7eaaa42c-8773-4c99-8ba7-2057859e201f8bd84230-8719-48fa-9001-8e6ebbb0ad6fc1c9dd82-e735-43c7-9a8b-ef8faa263de1c3cce941-4ebc-48ea-8692-fa623af46c1a6f4c0490-69bb-405f-8817-7bd589386e73cd4df315-0ed7-44be-a9b1-c46564d0937accced554-8c5b-4adc-a65e-145d8157e9c3739694ad-06c7-4f03-a2f3-d8628a0d3865b623eb2f-59cf-47a4-a1b8-b85cd55880986420820c-f493-49c9-96cc-ba37379a65dffcc2387f-18dc-475f-a82a-139f8330a76a0ce32852-a4a1-462e-ac84-000e13ebd191ff641ec9-a145-4c1f-94e3-f207fab4fc3e1a72c050-da69-4137-8f9c-5867e0d4e11eab9cf86d-2cbd-4748-b43e-2e2a511b3d9cf90b8fe2-a52f-4302-bcba-88920e6dba2ea75bdfb4-e127-49d0-ae1e-8f3b6afb650cbf0db03c-d14c-4a2e-a504-3b43eb048c2d83729eda-98bf-47cd-92d7-312bb483c975a03077b1-9cba-4fff-8e12-11902fb0d0933d05feb5-331a-454d-a3d1-1f09ffeb24f6",
                                                         -16, "6e167c32-0357-4b8c-814b-4bad8f1d1516",
                                                         "7d2cb955-0203-4c6f-a822-11bc49231b630916cfeb-cb25-4770-b13c-d2db3b4a809c0ec6e3a7-4a59-4e4d-bb1f-d5321754d8603923c97d-246f-48b6-abe7-fc7d7c1d6b7a",
                                                         new Date(1561572700301L));
        assertFalse(devicegroupInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceGroup devicegroup1 = new DeviceGroup(new Date(1561572702703L), null,
                                                       "9c342284-cee5-40c4-a3ba-f2b1a001a8af", 91,
                                                       "69bbfdda-77f7-4554-a112-2f0681e3201a",
                                                       "f29cb396-dd4a-4a93-8139-e9f49e1661d6",
                                                       new Date(1561572705659L));
            DeviceGroup devicegroup2 = new DeviceGroup(new Date(1561572702703L), null,
                                                       "9c342284-cee5-40c4-a3ba-f2b1a001a8af", 91,
                                                       "69bbfdda-77f7-4554-a112-2f0681e3201a",
                                                       "f29cb396-dd4a-4a93-8139-e9f49e1661d6",
                                                       new Date(1561572705659L));
            DeviceGroup devicegroup3 = new DeviceGroup(new Date(1561572707997L), null,
                                                       "caeb6d0c-dc90-4195-852f-15fb765db68e", -15,
                                                       "a1e2a0ac-2a8b-4cf0-a454-dc60604679ca",
                                                       "5d53d6c6-11f7-4c41-8af1-5a9a7e1c5cad",
                                                       new Date(1561572701131L));
            assertNotNull(devicegroup1);
            assertNotNull(devicegroup2);
            assertNotNull(devicegroup3);
            assertNotSame(devicegroup2, devicegroup1);
            assertNotSame(devicegroup3, devicegroup1);
            assertEquals(devicegroup2, devicegroup1);
            assertEquals(devicegroup2, devicegroup1);
            assertEquals(devicegroup1, devicegroup2);
            assertEquals(devicegroup1, devicegroup1);
            assertFalse(devicegroup1.equals(null));
            assertNotEquals(devicegroup3, devicegroup1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
