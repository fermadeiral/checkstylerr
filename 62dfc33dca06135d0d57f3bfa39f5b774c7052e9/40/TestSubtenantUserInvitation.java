// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantUserInvitation.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantUserInvitation {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantUserInvitation subtenantuserinvitation1 = new SubtenantUserInvitation("dbffc04464ee5d492da2ca1837b00ec4",
                                                                                           new Date(1559147596980L),
                                                                                           "ea9b5.3d086@c39d2.fr",
                                                                                           new Date(1559147601268L),
                                                                                           "dbffc04464ee5d492da2ca1837b00ec4",
                                                                                           null,
                                                                                           new Date(1559147597846L),
                                                                                           "dbffc04464ee5d492da2ca1837b00ec4");
            SubtenantUserInvitation subtenantuserinvitation2 = subtenantuserinvitation1.clone();
            assertNotNull(subtenantuserinvitation1);
            assertNotNull(subtenantuserinvitation2);
            assertNotSame(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantUserInvitation subtenantuserinvitation1 = new SubtenantUserInvitation("dbffc04464ee5d492da2ca1837b00ec4",
                                                                                           new Date(1559147596278L),
                                                                                           "8c882.91dd7@c5449.me",
                                                                                           new Date(1559147594074L),
                                                                                           "dbffc04464ee5d492da2ca1837b00ec4",
                                                                                           null,
                                                                                           new Date(1559147597881L),
                                                                                           "dbffc04464ee5d492da2ca1837b00ec4");
            SubtenantUserInvitation subtenantuserinvitation2 = new SubtenantUserInvitation("dbffc04464ee5d492da2ca1837b00ec4",
                                                                                           new Date(1559147596278L),
                                                                                           "8c882.91dd7@c5449.me",
                                                                                           new Date(1559147594074L),
                                                                                           "dbffc04464ee5d492da2ca1837b00ec4",
                                                                                           null,
                                                                                           new Date(1559147597881L),
                                                                                           "dbffc04464ee5d492da2ca1837b00ec4");
            assertNotNull(subtenantuserinvitation1);
            assertNotNull(subtenantuserinvitation2);
            assertNotSame(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2.hashCode(), subtenantuserinvitation1.hashCode());
            int hashCode = subtenantuserinvitation1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantuserinvitation1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantUserInvitation subtenantuserinvitation = new SubtenantUserInvitation("dbffc04464ee5d492da2ca1837b00ec4",
                                                                                      new Date(1559147597800L),
                                                                                      "0e9f4.71bd1@b9286.fr",
                                                                                      new Date(1559147600855L),
                                                                                      "dbffc04464ee5d492da2ca1837b00ec4",
                                                                                      null, new Date(1559147598199L),
                                                                                      "dbffc04464ee5d492da2ca1837b00ec4");
        assertTrue(subtenantuserinvitation.isValid());
        SubtenantUserInvitation subtenantuserinvitationInvalid = new SubtenantUserInvitation(null,
                                                                                             new Date(1559147593847L),
                                                                                             null,
                                                                                             new Date(1559147592205L),
                                                                                             "ï§?ç–£U\tæ†’é¸?é¼˜Yã«?\u0002á¶£\u000e\u0015é«ƒ\u0004Yã¨ƒQá“’TNX)â€–]ì²œ:\u0000í„?\u0013å®‡î¡µ/á“—Læª™C\u0005L^X.æ¢?ç¾Ž\u0014â¦Œé¸¬\u0005ë‹«ê§®ã€¢ë§•\u0011î?ž%Aîœ’H\u0014à±„",
                                                                                             null,
                                                                                             new Date(1559147597669L),
                                                                                             "ï§?ç–£U\tæ†’é¸?é¼˜Yã«?\u0002á¶£\u000e\u0015é«ƒ\u0004Yã¨ƒQá“’TNX)â€–]ì²œ:\u0000í„?\u0013å®‡î¡µ/á“—Læª™C\u0005L^X.æ¢?ç¾Ž\u0014â¦Œé¸¬\u0005ë‹«ê§®ã€¢ë§•\u0011î?ž%Aîœ’H\u0014à±„");
        assertFalse(subtenantuserinvitationInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantUserInvitation subtenantuserinvitation1 = new SubtenantUserInvitation("dbffc04464ee5d492da2ca1837b00ec4",
                                                                                           new Date(1559147593161L),
                                                                                           "3ea39.69a61@8963b.fr",
                                                                                           new Date(1559147596459L),
                                                                                           "dbffc04464ee5d492da2ca1837b00ec4",
                                                                                           null,
                                                                                           new Date(1559147593817L),
                                                                                           "dbffc04464ee5d492da2ca1837b00ec4");
            SubtenantUserInvitation subtenantuserinvitation2 = new SubtenantUserInvitation("dbffc04464ee5d492da2ca1837b00ec4",
                                                                                           new Date(1559147593161L),
                                                                                           "3ea39.69a61@8963b.fr",
                                                                                           new Date(1559147596459L),
                                                                                           "dbffc04464ee5d492da2ca1837b00ec4",
                                                                                           null,
                                                                                           new Date(1559147593817L),
                                                                                           "dbffc04464ee5d492da2ca1837b00ec4");
            SubtenantUserInvitation subtenantuserinvitation3 = new SubtenantUserInvitation("dbffc04464ee5d492da2ca1837b00ec4",
                                                                                           new Date(1559147592981L),
                                                                                           "a2a06.9b2d1@7ca9a.fr",
                                                                                           new Date(1559147596510L),
                                                                                           "dbffc04464ee5d492da2ca1837b00ec4",
                                                                                           null,
                                                                                           new Date(1559147599679L),
                                                                                           "dbffc04464ee5d492da2ca1837b00ec4");
            assertNotNull(subtenantuserinvitation1);
            assertNotNull(subtenantuserinvitation2);
            assertNotNull(subtenantuserinvitation3);
            assertNotSame(subtenantuserinvitation2, subtenantuserinvitation1);
            assertNotSame(subtenantuserinvitation3, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation1, subtenantuserinvitation2);
            assertEquals(subtenantuserinvitation1, subtenantuserinvitation1);
            assertFalse(subtenantuserinvitation1.equals(null));
            assertNotEquals(subtenantuserinvitation3, subtenantuserinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
