// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.deviceupdate.model;

import static org.junit.Assert.*;

import com.arm.mbed.cloud.sdk.common.Order;
import com.arm.mbed.cloud.sdk.common.listing.ListOptionsEncoder;
import com.arm.mbed.cloud.sdk.common.listing.filtering.FilterOperator;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import org.junit.Test;

/**
 * Unit tests for Model FirmwareManifestListOptions.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestFirmwareManifestListOptions {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            FirmwareManifestListOptions firmwaremanifestlistoptions1 = new FirmwareManifestListOptions(Integer.valueOf(26),
                                                                                                       Long.valueOf(-43),
                                                                                                       Order.getDefault(),
                                                                                                       "b1f3d09c-e1be-4725-bde7-77d5cc628a1f",
                                                                                                       null, null);
            FirmwareManifestListOptions firmwaremanifestlistoptions2 = firmwaremanifestlistoptions1.clone();
            assertNotNull(firmwaremanifestlistoptions1);
            assertNotNull(firmwaremanifestlistoptions2);
            assertNotSame(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the filters method.
     */
    @SuppressWarnings({ "boxing", "resource" })
    @Test
    public void testFilters() {
        try {
            FirmwareManifestListOptions option = new FirmwareManifestListOptions().inCreatedAts(Arrays.asList(new Date(1559147603644L),
                                                                                                              new Date(1559147594422L),
                                                                                                              new Date(1559147599429L),
                                                                                                              new Date(1559147594898L),
                                                                                                              new Date(1559147598381L),
                                                                                                              new Date(1559147601339L),
                                                                                                              new Date(1559147597548L)))
                                                                                  .notInCreatedAts(Arrays.asList(new Date(1559147600870L),
                                                                                                                 new Date(1559147597899L),
                                                                                                                 new Date(1559147596881L),
                                                                                                                 new Date(1559147597456L)))
                                                                                  .lessThanCreatedAt(new Date(1559147593842L))
                                                                                  .greaterThanCreatedAt(new Date(1559147597986L))
                                                                                  .equalToName("a44db6c5-6b7e-4d23-970d-bce89362efbe")
                                                                                  .notEqualToName("ddf0eb15-67db-4ae8-b128-75fb209ea8f8")
                                                                                  .inNames(Arrays.asList("d1098bfc-76eb-4239-8845-3dd0f9fcec12"))
                                                                                  .notInNames(Arrays.asList("b46832d8-759f-4417-9b78-cbe02a8e43ed",
                                                                                                            "5b0ed15a-1540-4013-b360-5bb0987920b7",
                                                                                                            "f6eb3202-7f1b-434f-8787-63435c52b091",
                                                                                                            "d908aa7b-1fc4-4711-b9d2-7adec91ecb4c",
                                                                                                            "3405fac5-007e-4541-85e6-864f14c6c5f9",
                                                                                                            "4a2a3d51-f8ce-473e-9fd9-a58eed6c0bbc",
                                                                                                            "f5e026c3-80c6-4d4b-b96e-816d6157426c"))
                                                                                  .equalToId("898ced64-649d-406e-9e77-4c11cb3144bb")
                                                                                  .notEqualToId("cdba6ec9-8290-412d-b44d-5fc2df844197")
                                                                                  .inIds(Arrays.asList("6468353e-5559-427b-8235-61d7a45b5f46",
                                                                                                       "deaf6382-63d0-4712-b733-406225860136",
                                                                                                       "5e7b6688-562a-4a77-b453-7822c4f42f38",
                                                                                                       "6730fa8b-550d-47e1-aeda-2865b4b348c7",
                                                                                                       "9ec346ba-bff2-486c-b98b-fd0650cdf53a",
                                                                                                       "307d97fd-9316-4a75-b1d5-07ff3d7fcecb",
                                                                                                       "be2f5745-948a-489e-a9a0-a0c81c5da627",
                                                                                                       "a3d4e940-b6be-4462-adcf-9db763603785",
                                                                                                       "b3b1eb5c-098c-45c9-b71c-45f757f41cea"))
                                                                                  .notInIds(Arrays.asList("c93685bf-f8bb-4a03-9752-970e2ea6bda1",
                                                                                                          "4327f313-a3d0-4dd2-a0fd-481eece6919c",
                                                                                                          "89d097ae-4244-4c41-b930-8fb88ac1344c",
                                                                                                          "0c7ded4f-b51a-4d29-a2a0-58bf92b76642",
                                                                                                          "c72b0bf0-9991-483a-9be3-c18701b51fa3",
                                                                                                          "0f9ea83d-d6e5-47f2-b0bd-b3e9bad8068d",
                                                                                                          "4aa144ac-2fe7-45e5-8ff5-fc9bf38296a9",
                                                                                                          "2e53a665-7e67-45ed-8142-a8f9f38c8b83"))
                                                                                  .equalToDatafileUrl("3cea8f15-a39e-4cb9-b341-3edafe079946")
                                                                                  .notEqualToDatafileUrl("c1fb7ce5-7b6c-49f9-bda5-fb8aa579e8a4")
                                                                                  .inDatafileUrls(Arrays.asList("b38c04c4-313a-43dc-93b6-edada5ae7d54",
                                                                                                                "d13e3a3f-e750-4f3e-9f0b-3c7311bdb1f5"))
                                                                                  .notInDatafileUrls(Arrays.asList("4ac7bb0e-a8ec-4b3a-a492-72534ca5ea41",
                                                                                                                   "4199e3fe-1505-4b04-aab4-f576e7f52a18",
                                                                                                                   "8ff2035a-363f-45b2-982f-3f7ae0a8569e",
                                                                                                                   "2d6aeb98-8592-416c-9cdc-207ff1262ab4"))
                                                                                  .equalToDatafileSize(Long.valueOf(-107))
                                                                                  .notEqualToDatafileSize(Long.valueOf(-72))
                                                                                  .inDatafileSizes(Arrays.asList(Long.valueOf(-118),
                                                                                                                 Long.valueOf(-97),
                                                                                                                 Long.valueOf(36),
                                                                                                                 Long.valueOf(-127)))
                                                                                  .notInDatafileSizes(Arrays.asList(Long.valueOf(-120),
                                                                                                                    Long.valueOf(-82),
                                                                                                                    Long.valueOf(-12),
                                                                                                                    Long.valueOf(-55)))
                                                                                  .equalToDeviceClass("b1c8e445-d4f9-4155-8cec-8068bfca8069")
                                                                                  .notEqualToDeviceClass("48f56b2f-2cb0-42ea-9604-ad9fcf86a4cf")
                                                                                  .inDeviceClass(Arrays.asList("570918e6-df9a-4faa-ba49-d48dd9e792a7",
                                                                                                               "a84ece0e-90aa-4295-8b91-2add89a62aa3",
                                                                                                               "81512d99-04f4-41a6-8e0a-526f24eca798",
                                                                                                               "a10611c3-744c-4894-8f8d-56a068d47af3",
                                                                                                               "36ae28f6-4856-4f33-84bf-4b2e2f2beed4",
                                                                                                               "e6a08855-aecd-442e-a93e-196b0d518b28",
                                                                                                               "ebe9a458-50a4-460d-80bb-8f0937f35eec",
                                                                                                               "9cbd95e3-cc0c-45b9-9339-50d36c6abc63",
                                                                                                               "d93fea66-236d-4771-99a7-837bb3389f0f"))
                                                                                  .notInDeviceClass(Arrays.asList("51d91dde-a661-44f0-86f0-6c4035bbc492"))
                                                                                  .inTimestamps(Arrays.asList(new Date(1559147602794L)))
                                                                                  .notInTimestamps(Arrays.asList(new Date(1559147602732L),
                                                                                                                 new Date(1559147596402L),
                                                                                                                 new Date(1559147603680L),
                                                                                                                 new Date(1559147602844L),
                                                                                                                 new Date(1559147596448L),
                                                                                                                 new Date(1559147600582L),
                                                                                                                 new Date(1559147596762L),
                                                                                                                 new Date(1559147595200L),
                                                                                                                 new Date(1559147595708L)))
                                                                                  .lessThanTimestamp(new Date(1559147600678L))
                                                                                  .greaterThanTimestamp(new Date(1559147598958L))
                                                                                  .inUpdatedAts(Arrays.asList(new Date(1559147599173L),
                                                                                                              new Date(1559147601285L),
                                                                                                              new Date(1559147599116L),
                                                                                                              new Date(1559147599423L),
                                                                                                              new Date(1559147597102L),
                                                                                                              new Date(1559147594163L)))
                                                                                  .notInUpdatedAts(Arrays.asList(new Date(1559147602833L),
                                                                                                                 new Date(1559147595992L),
                                                                                                                 new Date(1559147597469L)))
                                                                                  .lessThanUpdatedAt(new Date(1559147600078L))
                                                                                  .greaterThanUpdatedAt(new Date(1559147602782L))
                                                                                  .equalToDescription("60bd5f34-f3c5-4dec-95a7-89cd7abcba1d")
                                                                                  .notEqualToDescription("f940c87f-0ef3-4de7-b1d9-82d6aa54a840")
                                                                                  .inDescriptions(Arrays.asList("34d0beb0-ab51-40b9-8116-d4b6fb3cadb8",
                                                                                                                "45f89c92-6f6f-435d-b979-815b8df4e84f"))
                                                                                  .notInDescriptions(Arrays.asList("fb43c9c6-9a92-4a0f-be4f-b016e3542006",
                                                                                                                   "296f54a9-6e7c-488c-8034-7798fdb0d755",
                                                                                                                   "00a17f10-12ea-4171-a21a-40008744d21c",
                                                                                                                   "f9a1ee67-8175-4008-a6e3-4d82386da561",
                                                                                                                   "12e54419-be09-472b-bb05-00dcbe70c3ca",
                                                                                                                   "10329033-15b7-4f5c-b3f9-c00eb2022118"));
            assertTrue(option.hasFilters());
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559147603644L), new Date(1559147594422L), new Date(1559147599429L),
                                       new Date(1559147594898L), new Date(1559147598381L), new Date(1559147601339L),
                                       new Date(1559147597548L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559147600870L), new Date(1559147597899L), new Date(1559147596881L),
                                       new Date(1559147597456L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                        FilterOperator.LESS_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1559147593842L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1559147597986L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME, FilterOperator.EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("a44db6c5-6b7e-4d23-970d-bce89362efbe",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("ddf0eb15-67db-4ae8-b128-75fb209ea8f8",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME, FilterOperator.IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("d1098bfc-76eb-4239-8845-3dd0f9fcec12"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("b46832d8-759f-4417-9b78-cbe02a8e43ed", "5b0ed15a-1540-4013-b360-5bb0987920b7",
                                       "f6eb3202-7f1b-434f-8787-63435c52b091", "d908aa7b-1fc4-4711-b9d2-7adec91ecb4c",
                                       "3405fac5-007e-4541-85e6-864f14c6c5f9", "4a2a3d51-f8ce-473e-9fd9-a58eed6c0bbc",
                                       "f5e026c3-80c6-4d4b-b96e-816d6157426c"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID, FilterOperator.EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("898ced64-649d-406e-9e77-4c11cb3144bb",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("cdba6ec9-8290-412d-b44d-5fc2df844197",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID, FilterOperator.IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("6468353e-5559-427b-8235-61d7a45b5f46", "deaf6382-63d0-4712-b733-406225860136",
                                       "5e7b6688-562a-4a77-b453-7822c4f42f38", "6730fa8b-550d-47e1-aeda-2865b4b348c7",
                                       "9ec346ba-bff2-486c-b98b-fd0650cdf53a", "307d97fd-9316-4a75-b1d5-07ff3d7fcecb",
                                       "be2f5745-948a-489e-a9a0-a0c81c5da627", "a3d4e940-b6be-4462-adcf-9db763603785",
                                       "b3b1eb5c-098c-45c9-b71c-45f757f41cea"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("c93685bf-f8bb-4a03-9752-970e2ea6bda1", "4327f313-a3d0-4dd2-a0fd-481eece6919c",
                                       "89d097ae-4244-4c41-b930-8fb88ac1344c", "0c7ded4f-b51a-4d29-a2a0-58bf92b76642",
                                       "c72b0bf0-9991-483a-9be3-c18701b51fa3", "0f9ea83d-d6e5-47f2-b0bd-b3e9bad8068d",
                                       "4aa144ac-2fe7-45e5-8ff5-fc9bf38296a9", "2e53a665-7e67-45ed-8142-a8f9f38c8b83"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("3cea8f15-a39e-4cb9-b341-3edafe079946",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("c1fb7ce5-7b6c-49f9-bda5-fb8aa579e8a4",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("b38c04c4-313a-43dc-93b6-edada5ae7d54", "d13e3a3f-e750-4f3e-9f0b-3c7311bdb1f5"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("4ac7bb0e-a8ec-4b3a-a492-72534ca5ea41", "4199e3fe-1505-4b04-aab4-f576e7f52a18",
                                       "8ff2035a-363f-45b2-982f-3f7ae0a8569e", "2d6aeb98-8592-416c-9cdc-207ff1262ab4"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(-107),
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    Long.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(-72),
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                       Long.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(-118), Long.valueOf(-97), Long.valueOf(36), Long.valueOf(-127)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                        FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(-120), Long.valueOf(-82), Long.valueOf(-12), Long.valueOf(-55)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS, FilterOperator.EQUAL));
            assertNotNull(option.getDeviceClassFilters());
            assertEquals("b1c8e445-d4f9-4155-8cec-8068bfca8069",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDeviceClassFilters());
            assertEquals("48f56b2f-2cb0-42ea-9604-ad9fcf86a4cf",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS, FilterOperator.IN));
            assertNotNull(option.getDeviceClassFilters());
            assertEquals(Arrays.asList("570918e6-df9a-4faa-ba49-d48dd9e792a7", "a84ece0e-90aa-4295-8b91-2add89a62aa3",
                                       "81512d99-04f4-41a6-8e0a-526f24eca798", "a10611c3-744c-4894-8f8d-56a068d47af3",
                                       "36ae28f6-4856-4f33-84bf-4b2e2f2beed4", "e6a08855-aecd-442e-a93e-196b0d518b28",
                                       "ebe9a458-50a4-460d-80bb-8f0937f35eec", "9cbd95e3-cc0c-45b9-9339-50d36c6abc63",
                                       "d93fea66-236d-4771-99a7-837bb3389f0f"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS, FilterOperator.NOT_IN));
            assertNotNull(option.getDeviceClassFilters());
            assertEquals(Arrays.asList("51d91dde-a661-44f0-86f0-6c4035bbc492"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP, FilterOperator.IN));
            assertNotNull(option.getTimestampFilters());
            assertEquals(Arrays.asList(new Date(1559147602794L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP, FilterOperator.NOT_IN));
            assertNotNull(option.getTimestampFilters());
            assertEquals(Arrays.asList(new Date(1559147602732L), new Date(1559147596402L), new Date(1559147603680L),
                                       new Date(1559147602844L), new Date(1559147596448L), new Date(1559147600582L),
                                       new Date(1559147596762L), new Date(1559147595200L), new Date(1559147595708L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP, FilterOperator.LESS_THAN));
            assertNotNull(option.getTimestampFilters());
            assertEquals(new Date(1559147600678L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getTimestampFilters());
            assertEquals(new Date(1559147598958L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559147599173L), new Date(1559147601285L), new Date(1559147599116L),
                                       new Date(1559147599423L), new Date(1559147597102L), new Date(1559147594163L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559147602833L), new Date(1559147595992L), new Date(1559147597469L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                        FilterOperator.LESS_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1559147600078L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1559147602782L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("60bd5f34-f3c5-4dec-95a7-89cd7abcba1d",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("f940c87f-0ef3-4de7-b1d9-82d6aa54a840",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("34d0beb0-ab51-40b9-8116-d4b6fb3cadb8", "45f89c92-6f6f-435d-b979-815b8df4e84f"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("fb43c9c6-9a92-4a0f-be4f-b016e3542006", "296f54a9-6e7c-488c-8034-7798fdb0d755",
                                       "00a17f10-12ea-4171-a21a-40008744d21c", "f9a1ee67-8175-4008-a6e3-4d82386da561",
                                       "12e54419-be09-472b-bb05-00dcbe70c3ca", "10329033-15b7-4f5c-b3f9-c00eb2022118"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    List.class, option));
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            FirmwareManifestListOptions firmwaremanifestlistoptions1 = new FirmwareManifestListOptions(Integer.valueOf(-31),
                                                                                                       Long.valueOf(30),
                                                                                                       Order.getDefault(),
                                                                                                       "84281ec7-4420-4950-aa83-a14365df2536",
                                                                                                       null, null);
            FirmwareManifestListOptions firmwaremanifestlistoptions2 = new FirmwareManifestListOptions(Integer.valueOf(-31),
                                                                                                       Long.valueOf(30),
                                                                                                       Order.getDefault(),
                                                                                                       "84281ec7-4420-4950-aa83-a14365df2536",
                                                                                                       null, null);
            assertNotNull(firmwaremanifestlistoptions1);
            assertNotNull(firmwaremanifestlistoptions2);
            assertNotSame(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2.hashCode(), firmwaremanifestlistoptions1.hashCode());
            int hashCode = firmwaremanifestlistoptions1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, firmwaremanifestlistoptions1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            FirmwareManifestListOptions firmwaremanifestlistoptions1 = new FirmwareManifestListOptions(Integer.valueOf(-17),
                                                                                                       Long.valueOf(39),
                                                                                                       Order.getDefault(),
                                                                                                       "be30cce9-1956-47a8-87dc-321264c112e8",
                                                                                                       null, null);
            FirmwareManifestListOptions firmwaremanifestlistoptions2 = new FirmwareManifestListOptions(Integer.valueOf(-17),
                                                                                                       Long.valueOf(39),
                                                                                                       Order.getDefault(),
                                                                                                       "be30cce9-1956-47a8-87dc-321264c112e8",
                                                                                                       null, null);
            FirmwareManifestListOptions firmwaremanifestlistoptions3 = new FirmwareManifestListOptions(Integer.valueOf(32),
                                                                                                       Long.valueOf(34),
                                                                                                       Order.getDefault(),
                                                                                                       "91c0a898-e1c5-4c4a-836c-038fdf13f250",
                                                                                                       null, null);
            assertNotNull(firmwaremanifestlistoptions1);
            assertNotNull(firmwaremanifestlistoptions2);
            assertNotNull(firmwaremanifestlistoptions3);
            assertNotSame(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertNotSame(firmwaremanifestlistoptions3, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions1, firmwaremanifestlistoptions2);
            assertEquals(firmwaremanifestlistoptions1, firmwaremanifestlistoptions1);
            assertFalse(firmwaremanifestlistoptions1.equals(null));
            assertNotEquals(firmwaremanifestlistoptions3, firmwaremanifestlistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
