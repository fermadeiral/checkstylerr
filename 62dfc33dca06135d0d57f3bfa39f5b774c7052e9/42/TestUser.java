// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model User.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestUser {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            User user1 = new User("dbffc04464ee5d492da2ca1837b00ec4", null, "795fe405-11ba-456b-b501-69d7e003f696",
                                  new Date(1559147591918L), -19, null, "f155d.0a771@b8adc.fr", false,
                                  "5244507c-a63c-4c83-ac29-3bb331ff03fa", "dbffc04464ee5d492da2ca1837b00ec4", true,
                                  false, false, -116, null, null, "a8c374ba-45d8-4cd9-8a8b-c41afa6ae083", 113,
                                  "fc3ac958-8e88-4492-a787-684cab153e8f", UserStatus.getDefault(), null,
                                  new Date(1559147601241L), ",=5V");
            User user2 = user1.clone();
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotSame(user2, user1);
            assertEquals(user2, user1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            User user1 = new User("dbffc04464ee5d492da2ca1837b00ec4", null, "e0901583-38c3-46e3-8d99-d23a83783122",
                                  new Date(1559147592578L), 48, null, "3e67f.a1c74@21a70.fr", false,
                                  "340906bf-8a3d-4cc5-bc7d-b40e74cd2dd7", "dbffc04464ee5d492da2ca1837b00ec4", true,
                                  true, true, 120, null, null, "d17b3823-63e3-4949-ad77-a1e88f7b625a", 86,
                                  "e7e7f9d4-7f24-4717-9c8f-bd2d5b6bde03", UserStatus.getDefault(), null,
                                  new Date(1559147594184L), ",=5V");
            User user2 = new User("dbffc04464ee5d492da2ca1837b00ec4", null, "e0901583-38c3-46e3-8d99-d23a83783122",
                                  new Date(1559147592578L), 48, null, "3e67f.a1c74@21a70.fr", false,
                                  "340906bf-8a3d-4cc5-bc7d-b40e74cd2dd7", "dbffc04464ee5d492da2ca1837b00ec4", true,
                                  true, true, 120, null, null, "d17b3823-63e3-4949-ad77-a1e88f7b625a", 86,
                                  "e7e7f9d4-7f24-4717-9c8f-bd2d5b6bde03", UserStatus.getDefault(), null,
                                  new Date(1559147594184L), ",=5V");
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotSame(user2, user1);
            assertEquals(user2, user1);
            assertEquals(user2.hashCode(), user1.hashCode());
            int hashCode = user1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, user1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        User user = new User("dbffc04464ee5d492da2ca1837b00ec4", null, "f159a239-988c-46c2-89c5-7f89a485ab4e",
                             new Date(1559147595736L), 24, null, "95db1.a9262@7e8da.me", true,
                             "57a76549-6b05-45a7-a4df-d19b245c2611", "dbffc04464ee5d492da2ca1837b00ec4", false, true,
                             true, -106, null, null, "b34b4548-8329-40c8-9f10-6575116b99b4", 11,
                             "1172ca48-9fd4-4090-af37-e697c28f485f", UserStatus.getDefault(), null,
                             new Date(1559147600759L), ",=5V");
        assertTrue(user.isValid());
        User userInvalid = new User("ï§?ç–£U\tæ†’é¸?é¼˜Yã«?\u0002á¶£\u000e\u0015é«ƒ\u0004Yã¨ƒQá“’TNX)â€–]ì²œ:\u0000í„?\u0013å®‡î¡µ/á“—Læª™C\u0005L^X.æ¢?ç¾Ž\u0014â¦Œé¸¬\u0005ë‹«ê§®ã€¢ë§•\u0011î?ž%Aîœ’H\u0014à±„",
                                    null, "644ffedf-705b-4431-9ebe-13f166e039e2", new Date(1559147593542L), -33, null,
                                    null, true,
                                    "20b863c9-ef24-4811-bed6-5b99301970c48ada975e-96e2-4bcf-8eed-bc6a395acf682a222325-67fe-48ea-95c3-0e056de6fc6d",
                                    "ï§?ç–£U\tæ†’é¸?é¼˜Yã«?\u0002á¶£\u000e\u0015é«ƒ\u0004Yã¨ƒQá“’TNX)â€–]ì²œ:\u0000í„?\u0013å®‡î¡µ/á“—Læª™C\u0005L^X.æ¢?ç¾Ž\u0014â¦Œé¸¬\u0005ë‹«ê§®ã€¢ë§•\u0011î?ž%Aîœ’H\u0014à±„",
                                    true, true, true, -8, null, null, "1cbcabca-29d0-4bda-8b53-7bf80e4033a5", 24,
                                    "6c0267b8-4d43-4fcb-939d-393e12dcefbdee0ecc6b-b3a7-4a26-866d-04935e15f41304c09008-d943-4639-8985-93a3c3265ed7",
                                    UserStatus.getDefault(), null, new Date(1559147591952L),
                                    "\u0006BU7\u001cB@KÅŠ:6<D<?26;ä„Œ8:7Mä·ƒ8\u0000â…¶G\t/ï…º-31ì¼€à¢“3@G6R;êº¬1\bR06\u0012726ä?Ž92+é¢‹-Q\u000e.\u0013");
        assertFalse(userInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            User user1 = new User("dbffc04464ee5d492da2ca1837b00ec4", null, "433728f3-c88a-49cf-bd4c-7b88c0b816b0",
                                  new Date(1559147593486L), -39, null, "2d694.1b4c9@86f05.me", false,
                                  "6a252b4b-f131-4986-aa32-9d2556fada1c", "dbffc04464ee5d492da2ca1837b00ec4", false,
                                  false, false, -81, null, null, "0ffe6471-bf23-4526-a5f9-dab11d29546c", -110,
                                  "1eedaa8a-f997-491f-aa9e-322ef0360d9e", UserStatus.getDefault(), null,
                                  new Date(1559147601347L), ",=5V");
            User user2 = new User("dbffc04464ee5d492da2ca1837b00ec4", null, "433728f3-c88a-49cf-bd4c-7b88c0b816b0",
                                  new Date(1559147593486L), -39, null, "2d694.1b4c9@86f05.me", false,
                                  "6a252b4b-f131-4986-aa32-9d2556fada1c", "dbffc04464ee5d492da2ca1837b00ec4", false,
                                  false, false, -81, null, null, "0ffe6471-bf23-4526-a5f9-dab11d29546c", -110,
                                  "1eedaa8a-f997-491f-aa9e-322ef0360d9e", UserStatus.getDefault(), null,
                                  new Date(1559147601347L), ",=5V");
            User user3 = new User("dbffc04464ee5d492da2ca1837b00ec4", null, "fc415444-b3bc-471b-b5e0-f53d60e29577",
                                  new Date(1559147596481L), 42, null, "51361.5798d@d7626.me", false,
                                  "a9306433-46c3-459b-be20-26873adc654f", "dbffc04464ee5d492da2ca1837b00ec4", false,
                                  false, false, -49, null, null, "4b715f74-5f26-49c0-a46b-b8ae6416709d", 50,
                                  "d057ec49-8ac7-4db8-9ea5-39a743343629", UserStatus.getDefault(), null,
                                  new Date(1559147596665L), ",=5V");
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotNull(user3);
            assertNotSame(user2, user1);
            assertNotSame(user3, user1);
            assertEquals(user2, user1);
            assertEquals(user2, user1);
            assertEquals(user1, user2);
            assertEquals(user1, user1);
            assertFalse(user1.equals(null));
            assertNotEquals(user3, user1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
