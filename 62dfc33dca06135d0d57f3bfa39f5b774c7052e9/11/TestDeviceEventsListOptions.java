// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import com.arm.mbed.cloud.sdk.common.Order;
import com.arm.mbed.cloud.sdk.common.listing.ListOptionsEncoder;
import com.arm.mbed.cloud.sdk.common.listing.filtering.FilterOperator;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEventsListOptions.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEventsListOptions {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEventsListOptions deviceeventslistoptions1 = new DeviceEventsListOptions(Integer.valueOf(-127),
                                                                                           Long.valueOf(30),
                                                                                           Order.getDefault(),
                                                                                           "56e8e138-e84d-4bcd-ab45-1c7868b954c8",
                                                                                           null, null);
            DeviceEventsListOptions deviceeventslistoptions2 = deviceeventslistoptions1.clone();
            assertNotNull(deviceeventslistoptions1);
            assertNotNull(deviceeventslistoptions2);
            assertNotSame(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2, deviceeventslistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the filters method.
     */
    @SuppressWarnings({ "boxing", "resource" })
    @Test
    public void testFilters() {
        try {
            DeviceEventsListOptions option = new DeviceEventsListOptions().equalToDeviceId("abc29b9c-18de-43fa-8a72-c8f32afa0a9b")
                                                                          .notEqualToDeviceId("210c5142-8a34-4473-a4d5-d340c76306f0")
                                                                          .inDeviceIds(Arrays.asList("5b89aeae-c3eb-4d39-a4ba-12d5d6b2e2da",
                                                                                                     "d90284ec-54e0-48a3-be4b-0d8909be1989",
                                                                                                     "665cfa4d-6e0e-4724-a5ed-a002e6c3f42b"))
                                                                          .notInDeviceIds(Arrays.asList("fdbdbfe5-c812-43ab-8676-4b9cbc4b87eb",
                                                                                                        "14ac4a05-fa18-4549-b000-b39ffb380dd7",
                                                                                                        "1693c464-85d0-4dd2-9ce2-8145a8d9db11",
                                                                                                        "db345ed8-7b30-4203-863e-f2c014123007",
                                                                                                        "f664d912-341e-44a3-abfb-971cad7f325a",
                                                                                                        "addfc622-189e-4a22-9d60-bfaa80174a1a",
                                                                                                        "ec10e093-e227-4639-b62c-82ff3b99a9ec",
                                                                                                        "fa35fcfe-6b5c-49ae-9fdb-6a62aa104cf3",
                                                                                                        "24253915-68b6-40bc-a614-68de1330044d"))
                                                                          .equalToDescription("41963a54-af0a-4289-a7c9-6f80f81d13bf")
                                                                          .notEqualToDescription("0f62f68e-114a-47ec-ba2f-df0fad21d335")
                                                                          .inDescriptions(Arrays.asList("ec747ba0-cb00-442a-9aeb-85f52573b1d9",
                                                                                                        "05f3bdfe-7073-416d-927b-4ffdfab8f899",
                                                                                                        "83db8d84-454b-4a3e-854b-770a11ab9281",
                                                                                                        "327388b0-1f9a-42c1-9ad8-87137e6dba93",
                                                                                                        "68c1ea4e-44b7-4617-af48-87834e5b89c3",
                                                                                                        "0b44e1b3-2c5e-4001-9534-b093050046cd",
                                                                                                        "5626af19-eb67-439e-90c8-4637611e0aff",
                                                                                                        "edd8d633-4f69-4e23-8efc-f167f0155482",
                                                                                                        "a05aa94f-96e5-4d23-af86-14488846c3af"))
                                                                          .notInDescriptions(Arrays.asList("9a06b2fd-f719-46db-8474-f689857db474"))
                                                                          .inDateTimes(Arrays.asList(new Date(1559147594236L),
                                                                                                     new Date(1559147594890L),
                                                                                                     new Date(1559147602482L),
                                                                                                     new Date(1559147599508L),
                                                                                                     new Date(1559147602936L),
                                                                                                     new Date(1559147600267L),
                                                                                                     new Date(1559147600644L),
                                                                                                     new Date(1559147599647L),
                                                                                                     new Date(1559147599528L)))
                                                                          .notInDateTimes(Arrays.asList(new Date(1559147603320L),
                                                                                                        new Date(1559147595946L),
                                                                                                        new Date(1559147597993L),
                                                                                                        new Date(1559147603692L),
                                                                                                        new Date(1559147598610L),
                                                                                                        new Date(1559147596321L),
                                                                                                        new Date(1559147599219L),
                                                                                                        new Date(1559147603239L),
                                                                                                        new Date(1559147602178L)))
                                                                          .lessThanDateTime(new Date(1559147597195L))
                                                                          .greaterThanDateTime(new Date(1559147603339L))
                                                                          .equalToStateChange(Boolean.FALSE)
                                                                          .notEqualToStateChange(Boolean.FALSE)
                                                                          .equalToId("42c01890-cd91-441f-a457-788188767504")
                                                                          .notEqualToId("ec613f0d-fc7a-452e-884f-8306f64c6e8a")
                                                                          .inIds(Arrays.asList("6066215a-e158-4ba3-a726-023a13832c6b",
                                                                                               "7c40e95b-c354-4d84-a2d8-fa0f4ebbf654",
                                                                                               "de25f32e-b678-4406-a6ee-89f3f9f27029",
                                                                                               "963c9d20-23ab-47a5-876a-293a66f99144",
                                                                                               "aa0b8b4e-f353-4e37-9b3f-be0f0bb1c03b"))
                                                                          .notInIds(Arrays.asList("2236eacb-2351-4844-a7c0-b7b11d2b444d",
                                                                                                  "80712f78-493e-4e0a-845b-8774e699a698",
                                                                                                  "5d6778c6-9b8f-47cd-9e8c-41104e9586ee",
                                                                                                  "3eeaab82-75f5-42cb-b575-734fa7a88fd8",
                                                                                                  "d16bf1f6-8b98-4482-9ae4-f5a41d4c048b"))
                                                                          .equalToEventType("bd46084e-5f5d-45ee-b4f0-7dd32b944f31")
                                                                          .notEqualToEventType("63d57e29-a512-46b4-9023-6a59f9f14676")
                                                                          .inEventTypes(Arrays.asList("7774f1a0-3ae9-4585-b8c2-9be86af64bb8",
                                                                                                      "6377a3d3-c80b-44e4-a7f0-225d83ce50ab",
                                                                                                      "c1b07cc9-3c9f-4054-9c97-c0912a63b12e",
                                                                                                      "a1a18cbb-652c-44de-9e9f-aea1b322a362",
                                                                                                      "06acdeab-7e9c-43b4-af0b-a8041ae600b7",
                                                                                                      "d9d26c9d-cefc-4088-a216-89d8c5e85400"))
                                                                          .notInEventTypes(Arrays.asList("089b2763-93d5-43f1-990a-71ecfd81b8dd",
                                                                                                         "d3062f09-1474-4385-914a-aaef8bf10d7e",
                                                                                                         "f794f249-ec48-4134-9a66-34fe3afb179f",
                                                                                                         "71e9bb3c-e784-427a-a5f9-0f4bcefdb94f",
                                                                                                         "74b72b72-96e6-444c-a7ed-63fa962007f4",
                                                                                                         "41dcfa19-d60d-42a4-8295-09111107a76b",
                                                                                                         "0112b2d0-a4fc-4855-8c00-cec963c7da27"));
            assertTrue(option.hasFilters());
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID, FilterOperator.EQUAL));
            assertNotNull(option.getDeviceIdFilters());
            assertEquals("abc29b9c-18de-43fa-8a72-c8f32afa0a9b",
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDeviceIdFilters());
            assertEquals("210c5142-8a34-4473-a4d5-d340c76306f0",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID, FilterOperator.IN));
            assertNotNull(option.getDeviceIdFilters());
            assertEquals(Arrays.asList("5b89aeae-c3eb-4d39-a4ba-12d5d6b2e2da", "d90284ec-54e0-48a3-be4b-0d8909be1989",
                                       "665cfa4d-6e0e-4724-a5ed-a002e6c3f42b"),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID,
                                                                 List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getDeviceIdFilters());
            assertEquals(Arrays.asList("fdbdbfe5-c812-43ab-8676-4b9cbc4b87eb", "14ac4a05-fa18-4549-b000-b39ffb380dd7",
                                       "1693c464-85d0-4dd2-9ce2-8145a8d9db11", "db345ed8-7b30-4203-863e-f2c014123007",
                                       "f664d912-341e-44a3-abfb-971cad7f325a", "addfc622-189e-4a22-9d60-bfaa80174a1a",
                                       "ec10e093-e227-4639-b62c-82ff3b99a9ec", "fa35fcfe-6b5c-49ae-9fdb-6a62aa104cf3",
                                       "24253915-68b6-40bc-a614-68de1330044d"),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID,
                                                                    List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("41963a54-af0a-4289-a7c9-6f80f81d13bf",
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("0f62f68e-114a-47ec-ba2f-df0fad21d335",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                       String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("ec747ba0-cb00-442a-9aeb-85f52573b1d9", "05f3bdfe-7073-416d-927b-4ffdfab8f899",
                                       "83db8d84-454b-4a3e-854b-770a11ab9281", "327388b0-1f9a-42c1-9ad8-87137e6dba93",
                                       "68c1ea4e-44b7-4617-af48-87834e5b89c3", "0b44e1b3-2c5e-4001-9534-b093050046cd",
                                       "5626af19-eb67-439e-90c8-4637611e0aff", "edd8d633-4f69-4e23-8efc-f167f0155482",
                                       "a05aa94f-96e5-4d23-af86-14488846c3af"),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                 List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("9a06b2fd-f719-46db-8474-f689857db474"),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME, FilterOperator.IN));
            assertNotNull(option.getDateTimeFilters());
            assertEquals(Arrays.asList(new Date(1559147594236L), new Date(1559147594890L), new Date(1559147602482L),
                                       new Date(1559147599508L), new Date(1559147602936L), new Date(1559147600267L),
                                       new Date(1559147600644L), new Date(1559147599647L), new Date(1559147599528L)),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME,
                                                                 List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME, FilterOperator.NOT_IN));
            assertNotNull(option.getDateTimeFilters());
            assertEquals(Arrays.asList(new Date(1559147603320L), new Date(1559147595946L), new Date(1559147597993L),
                                       new Date(1559147603692L), new Date(1559147598610L), new Date(1559147596321L),
                                       new Date(1559147599219L), new Date(1559147603239L), new Date(1559147602178L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME,
                                                                    List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME, FilterOperator.LESS_THAN));
            assertNotNull(option.getDateTimeFilters());
            assertEquals(new Date(1559147597195L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME, FilterOperator.GREATER_THAN));
            assertNotNull(option.getDateTimeFilters());
            assertEquals(new Date(1559147603339L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE, FilterOperator.EQUAL));
            assertNotNull(option.getStateChangeFilters());
            assertEquals(Boolean.FALSE,
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE,
                                                                    Boolean.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getStateChangeFilters());
            assertEquals(Boolean.FALSE,
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE,
                                                                       Boolean.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, FilterOperator.EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("42c01890-cd91-441f-a457-788188767504",
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("ec613f0d-fc7a-452e-884f-8306f64c6e8a",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, FilterOperator.IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("6066215a-e158-4ba3-a726-023a13832c6b", "7c40e95b-c354-4d84-a2d8-fa0f4ebbf654",
                                       "de25f32e-b678-4406-a6ee-89f3f9f27029", "963c9d20-23ab-47a5-876a-293a66f99144",
                                       "aa0b8b4e-f353-4e37-9b3f-be0f0bb1c03b"),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, List.class,
                                                                 option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("2236eacb-2351-4844-a7c0-b7b11d2b444d", "80712f78-493e-4e0a-845b-8774e699a698",
                                       "5d6778c6-9b8f-47cd-9e8c-41104e9586ee", "3eeaab82-75f5-42cb-b575-734fa7a88fd8",
                                       "d16bf1f6-8b98-4482-9ae4-f5a41d4c048b"),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID,
                                                                    List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE, FilterOperator.EQUAL));
            assertNotNull(option.getEventTypeFilters());
            assertEquals("bd46084e-5f5d-45ee-b4f0-7dd32b944f31",
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE,
                                                                    String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getEventTypeFilters());
            assertEquals("63d57e29-a512-46b4-9023-6a59f9f14676",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE,
                                                                       String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE, FilterOperator.IN));
            assertNotNull(option.getEventTypeFilters());
            assertEquals(Arrays.asList("7774f1a0-3ae9-4585-b8c2-9be86af64bb8", "6377a3d3-c80b-44e4-a7f0-225d83ce50ab",
                                       "c1b07cc9-3c9f-4054-9c97-c0912a63b12e", "a1a18cbb-652c-44de-9e9f-aea1b322a362",
                                       "06acdeab-7e9c-43b4-af0b-a8041ae600b7", "d9d26c9d-cefc-4088-a216-89d8c5e85400"),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE,
                                                                 List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE, FilterOperator.NOT_IN));
            assertNotNull(option.getEventTypeFilters());
            assertEquals(Arrays.asList("089b2763-93d5-43f1-990a-71ecfd81b8dd", "d3062f09-1474-4385-914a-aaef8bf10d7e",
                                       "f794f249-ec48-4134-9a66-34fe3afb179f", "71e9bb3c-e784-427a-a5f9-0f4bcefdb94f",
                                       "74b72b72-96e6-444c-a7ed-63fa962007f4", "41dcfa19-d60d-42a4-8295-09111107a76b",
                                       "0112b2d0-a4fc-4855-8c00-cec963c7da27"),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE,
                                                                    List.class, option));
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEventsListOptions deviceeventslistoptions1 = new DeviceEventsListOptions(Integer.valueOf(18),
                                                                                           Long.valueOf(-15),
                                                                                           Order.getDefault(),
                                                                                           "c150ce03-0ffa-461a-b57e-27c9ef8f9111",
                                                                                           null, null);
            DeviceEventsListOptions deviceeventslistoptions2 = new DeviceEventsListOptions(Integer.valueOf(18),
                                                                                           Long.valueOf(-15),
                                                                                           Order.getDefault(),
                                                                                           "c150ce03-0ffa-461a-b57e-27c9ef8f9111",
                                                                                           null, null);
            assertNotNull(deviceeventslistoptions1);
            assertNotNull(deviceeventslistoptions2);
            assertNotSame(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2.hashCode(), deviceeventslistoptions1.hashCode());
            int hashCode = deviceeventslistoptions1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceeventslistoptions1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEventsListOptions deviceeventslistoptions1 = new DeviceEventsListOptions(Integer.valueOf(-33),
                                                                                           Long.valueOf(-73),
                                                                                           Order.getDefault(),
                                                                                           "f3009eb2-8b1a-419a-96d7-63c76e9cb162",
                                                                                           null, null);
            DeviceEventsListOptions deviceeventslistoptions2 = new DeviceEventsListOptions(Integer.valueOf(-33),
                                                                                           Long.valueOf(-73),
                                                                                           Order.getDefault(),
                                                                                           "f3009eb2-8b1a-419a-96d7-63c76e9cb162",
                                                                                           null, null);
            DeviceEventsListOptions deviceeventslistoptions3 = new DeviceEventsListOptions(Integer.valueOf(-125),
                                                                                           Long.valueOf(25),
                                                                                           Order.getDefault(),
                                                                                           "17e44384-5e45-4ce2-b2b1-82e11c5bfede",
                                                                                           null, null);
            assertNotNull(deviceeventslistoptions1);
            assertNotNull(deviceeventslistoptions2);
            assertNotNull(deviceeventslistoptions3);
            assertNotSame(deviceeventslistoptions2, deviceeventslistoptions1);
            assertNotSame(deviceeventslistoptions3, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions1, deviceeventslistoptions2);
            assertEquals(deviceeventslistoptions1, deviceeventslistoptions1);
            assertFalse(deviceeventslistoptions1.equals(null));
            assertNotEquals(deviceeventslistoptions3, deviceeventslistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
