// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model ActiveSession.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestActiveSession {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ActiveSession activesession1 = new ActiveSession("dbffc04464ee5d492da2ca1837b00ec4",
                                                             "fa248fe5-5826-4d34-a651-c4d14534854c",
                                                             new Date(1559147599239L),
                                                             "639c42d4-45fa-4d62-a7f6-d19adde90ae5",
                                                             "0fdea6e0-00b7-4b35-bb35-08266282ea9e");
            ActiveSession activesession2 = activesession1.clone();
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotSame(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ActiveSession activesession1 = new ActiveSession("dbffc04464ee5d492da2ca1837b00ec4",
                                                             "66e6b29b-3eda-4595-b1da-73152dea08d1",
                                                             new Date(1559147599481L),
                                                             "a518d12f-ddac-42ec-b5f4-5c1febeef0da",
                                                             "22a321a1-80be-4b6b-9756-a1e4ef578f97");
            ActiveSession activesession2 = new ActiveSession("dbffc04464ee5d492da2ca1837b00ec4",
                                                             "66e6b29b-3eda-4595-b1da-73152dea08d1",
                                                             new Date(1559147599481L),
                                                             "a518d12f-ddac-42ec-b5f4-5c1febeef0da",
                                                             "22a321a1-80be-4b6b-9756-a1e4ef578f97");
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotSame(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession2.hashCode(), activesession1.hashCode());
            int hashCode = activesession1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, activesession1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ActiveSession activesession = new ActiveSession("dbffc04464ee5d492da2ca1837b00ec4",
                                                        "410ec8ed-c799-4ad4-b6dc-767854817b10",
                                                        new Date(1559147601129L),
                                                        "0b0cba22-20b9-407f-9f7b-d55af630119e",
                                                        "3cbd3480-7979-45d5-a1e4-f401c0a7bd12");
        assertTrue(activesession.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ActiveSession activesession1 = new ActiveSession("dbffc04464ee5d492da2ca1837b00ec4",
                                                             "53a3893f-f05e-4029-8c25-1a3f905617b8",
                                                             new Date(1559147599356L),
                                                             "f8154b93-aad5-436a-9336-f268d22f1ce9",
                                                             "8d69445e-4783-4e70-8075-e51cb0514e19");
            ActiveSession activesession2 = new ActiveSession("dbffc04464ee5d492da2ca1837b00ec4",
                                                             "53a3893f-f05e-4029-8c25-1a3f905617b8",
                                                             new Date(1559147599356L),
                                                             "f8154b93-aad5-436a-9336-f268d22f1ce9",
                                                             "8d69445e-4783-4e70-8075-e51cb0514e19");
            ActiveSession activesession3 = new ActiveSession("dbffc04464ee5d492da2ca1837b00ec4",
                                                             "6b8f063b-7a1c-4de3-aa9d-bd82c546a4c6",
                                                             new Date(1559147592074L),
                                                             "f6b9cba4-bbf6-4455-899e-61cd43fafe53",
                                                             "b7dc5fc0-b4df-46af-89d1-4e5548746e36");
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotNull(activesession3);
            assertNotSame(activesession2, activesession1);
            assertNotSame(activesession3, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession1, activesession2);
            assertEquals(activesession1, activesession1);
            assertFalse(activesession1.equals(null));
            assertNotEquals(activesession3, activesession1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
