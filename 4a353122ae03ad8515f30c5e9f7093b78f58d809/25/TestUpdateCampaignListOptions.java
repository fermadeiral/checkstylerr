// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.deviceupdate.model;

import static org.junit.Assert.*;

import com.arm.mbed.cloud.sdk.common.Order;
import com.arm.mbed.cloud.sdk.common.listing.ListOptionsEncoder;
import com.arm.mbed.cloud.sdk.common.listing.filtering.FilterOperator;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import org.junit.Test;

/**
 * Unit tests for Model UpdateCampaignListOptions.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestUpdateCampaignListOptions {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            UpdateCampaignListOptions updatecampaignlistoptions1 = new UpdateCampaignListOptions(Integer.valueOf(41),
                                                                                                 Long.valueOf(-68),
                                                                                                 Order.getDefault(),
                                                                                                 "688942b3-f5d1-43a6-9602-4af9095aab77",
                                                                                                 null, null);
            UpdateCampaignListOptions updatecampaignlistoptions2 = updatecampaignlistoptions1.clone();
            assertNotNull(updatecampaignlistoptions1);
            assertNotNull(updatecampaignlistoptions2);
            assertNotSame(updatecampaignlistoptions2, updatecampaignlistoptions1);
            assertEquals(updatecampaignlistoptions2, updatecampaignlistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the filters method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testFilters() {
        try {
            UpdateCampaignListOptions option = new UpdateCampaignListOptions().inCreatedAts(Arrays.asList(new Date(1561477834948L)))
                                                                              .notInCreatedAts(Arrays.asList(new Date(1561477844330L),
                                                                                                             new Date(1561477834784L),
                                                                                                             new Date(1561477842140L),
                                                                                                             new Date(1561477839689L),
                                                                                                             new Date(1561477844283L)))
                                                                              .lessThanCreatedAt(new Date(1561477835715L))
                                                                              .greaterThanCreatedAt(new Date(1561477842663L))
                                                                              .equalToName("424bba29-8965-4f09-83d7-102eb5fc19ff")
                                                                              .notEqualToName("f6ed4a5e-7ec9-43fd-9939-52fc4c1ad62b")
                                                                              .inNames(Arrays.asList("dfde0277-b0ad-4a5b-bc5a-29b2ab601462",
                                                                                                     "64c33488-db52-46b7-952b-cb3ff8f180d6",
                                                                                                     "60cd299b-be91-46f7-b53b-ebf64a6193c8"))
                                                                              .notInNames(Arrays.asList("fd90d97d-fe7a-4ce1-9cc5-d898c643a1b1",
                                                                                                        "a2d34146-7ad6-4fd0-a1b0-39bf6f423884",
                                                                                                        "271ac05e-7403-4494-8bac-a8c8e08de54d",
                                                                                                        "94576397-d90d-44ed-91d4-37f8e012cc91",
                                                                                                        "92cef29d-7f5b-4fe9-aec3-f3f0296c9470",
                                                                                                        "05c907ea-f122-41d4-a4d7-50e6b8542b06"))
                                                                              .equalToId("5a4f553b-a526-4acd-beda-4c54476c3e09")
                                                                              .notEqualToId("f9bf50cf-6033-4e28-8ea1-0574487c317d")
                                                                              .inIds(Arrays.asList("53a334f1-c712-419b-9b1a-8c660afdac1e"))
                                                                              .notInIds(Arrays.asList("dfd4c206-2b8d-48bd-ab97-c86bc9f7512f",
                                                                                                      "a0219f61-9a1a-42a7-90e1-d4f4cc63d326",
                                                                                                      "5c13eee4-a1c9-4ba0-9c64-3d751e0c722a"))
                                                                              .equalToDeviceFilter("4f3f2a68-5dbc-4edf-80a8-095f67704941")
                                                                              .notEqualToDeviceFilter("965fc8d0-da1d-4a52-84c4-2bd0d329fa7d")
                                                                              .inDeviceFilters(Arrays.asList("4c44da01-2646-4df3-8e19-0acb6ff0eabf"))
                                                                              .notInDeviceFilters(Arrays.asList("59c4acb5-f757-47ad-9361-7c1583ecba17",
                                                                                                                "c573bb60-5cd9-401c-8727-a6b1204838ab",
                                                                                                                "2e2dcd54-407a-4746-9eca-ca8b95884f1f",
                                                                                                                "4607dccc-69a5-4259-a025-3f567673e8a7",
                                                                                                                "1e2a6d08-3531-49e6-9e86-4d14d0a27d24",
                                                                                                                "05b7ce2b-92d8-42fc-b916-443326a774db",
                                                                                                                "34fc9b1f-7a79-4075-9cf7-35ff349d189f",
                                                                                                                "b4bb4e6f-a0da-42ea-9c8f-4661337da1a9",
                                                                                                                "b8c6368a-1ac9-43e0-a2a5-8c2a344f3412"))
                                                                              .inFinisheds(Arrays.asList(new Date(1561477841712L),
                                                                                                         new Date(1561477842814L),
                                                                                                         new Date(1561477844047L),
                                                                                                         new Date(1561477839904L),
                                                                                                         new Date(1561477836591L),
                                                                                                         new Date(1561477842055L),
                                                                                                         new Date(1561477839837L)))
                                                                              .notInFinisheds(Arrays.asList(new Date(1561477841207L),
                                                                                                            new Date(1561477839467L),
                                                                                                            new Date(1561477836552L),
                                                                                                            new Date(1561477837454L),
                                                                                                            new Date(1561477838498L),
                                                                                                            new Date(1561477837913L)))
                                                                              .lessThanFinished(new Date(1561477836934L))
                                                                              .greaterThanFinished(new Date(1561477841722L))
                                                                              .inStartedAts(Arrays.asList(new Date(1561477834835L),
                                                                                                          new Date(1561477838542L),
                                                                                                          new Date(1561477839788L),
                                                                                                          new Date(1561477844232L),
                                                                                                          new Date(1561477840102L)))
                                                                              .notInStartedAts(Arrays.asList(new Date(1561477837623L),
                                                                                                             new Date(1561477839591L),
                                                                                                             new Date(1561477840422L),
                                                                                                             new Date(1561477843665L),
                                                                                                             new Date(1561477840875L),
                                                                                                             new Date(1561477839036L),
                                                                                                             new Date(1561477837595L),
                                                                                                             new Date(1561477843363L),
                                                                                                             new Date(1561477841010L)))
                                                                              .lessThanStartedAt(new Date(1561477840904L))
                                                                              .greaterThanStartedAt(new Date(1561477834704L))
                                                                              .inWhens(Arrays.asList(new Date(1561477834733L),
                                                                                                     new Date(1561477835071L)))
                                                                              .notInWhens(Arrays.asList(new Date(1561477839033L),
                                                                                                        new Date(1561477838992L),
                                                                                                        new Date(1561477843370L)))
                                                                              .lessThanWhen(new Date(1561477840249L))
                                                                              .greaterThanWhen(new Date(1561477840947L))
                                                                              .inUpdatedAts(Arrays.asList(new Date(1561477836709L),
                                                                                                          new Date(1561477834704L),
                                                                                                          new Date(1561477835592L),
                                                                                                          new Date(1561477840187L),
                                                                                                          new Date(1561477836389L),
                                                                                                          new Date(1561477838224L)))
                                                                              .notInUpdatedAts(Arrays.asList(new Date(1561477842960L),
                                                                                                             new Date(1561477835471L),
                                                                                                             new Date(1561477838909L),
                                                                                                             new Date(1561477839455L),
                                                                                                             new Date(1561477835145L),
                                                                                                             new Date(1561477838445L),
                                                                                                             new Date(1561477836073L),
                                                                                                             new Date(1561477841112L),
                                                                                                             new Date(1561477839858L)))
                                                                              .lessThanUpdatedAt(new Date(1561477843880L))
                                                                              .greaterThanUpdatedAt(new Date(1561477840054L))
                                                                              .equalToRootManifestId("3c121fd4-ea3c-4a26-8ff8-007fc18407e3")
                                                                              .notEqualToRootManifestId("25ef1135-c566-4523-8df1-876da26d2ead")
                                                                              .inRootManifestIds(Arrays.asList("0052e2f3-647d-440c-8218-e26f596373c2",
                                                                                                               "b99390bc-42a4-49a7-8b07-e972f37e65ca",
                                                                                                               "edd4844f-7fcd-4296-916a-2f768580a1a4",
                                                                                                               "b2c0618d-b428-4e00-920b-4ba7addfd22a"))
                                                                              .notInRootManifestIds(Arrays.asList("5b9236a8-f477-48bc-a979-9eb1b8697634",
                                                                                                                  "05256cf4-3a5a-47f4-aced-5704c509409a"))
                                                                              .equalToDescription("c0f11ad2-3b94-40d5-a2fa-b88b30ef1de4")
                                                                              .notEqualToDescription("1005ecd2-4321-4097-a7f9-4c93fc1a9e21")
                                                                              .inDescriptions(Arrays.asList("2e10e765-7414-4555-9727-f2d791af8a99"))
                                                                              .notInDescriptions(Arrays.asList("e597aa48-d6aa-4cbc-a432-a1958ef72cd6",
                                                                                                               "77872fa5-d119-4a43-bb5d-7dc45c955d3d"));
            assertTrue(option.hasFilters());
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1561477834948L)),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1561477844330L), new Date(1561477834784L), new Date(1561477842140L),
                                       new Date(1561477839689L), new Date(1561477844283L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.LESS_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1561477835715L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1561477842663L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME, FilterOperator.EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("424bba29-8965-4f09-83d7-102eb5fc19ff",
                         ListOptionsEncoder.encodeSingleEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME,
                                                                    String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("f6ed4a5e-7ec9-43fd-9939-52fc4c1ad62b",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME,
                                                                       String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME, FilterOperator.IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("dfde0277-b0ad-4a5b-bc5a-29b2ab601462", "64c33488-db52-46b7-952b-cb3ff8f180d6",
                                       "60cd299b-be91-46f7-b53b-ebf64a6193c8"),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("fd90d97d-fe7a-4ce1-9cc5-d898c643a1b1", "a2d34146-7ad6-4fd0-a1b0-39bf6f423884",
                                       "271ac05e-7403-4494-8bac-a8c8e08de54d", "94576397-d90d-44ed-91d4-37f8e012cc91",
                                       "92cef29d-7f5b-4fe9-aec3-f3f0296c9470", "05c907ea-f122-41d4-a4d7-50e6b8542b06"),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID, FilterOperator.EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("5a4f553b-a526-4acd-beda-4c54476c3e09",
                         ListOptionsEncoder.encodeSingleEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("f9bf50cf-6033-4e28-8ea1-0574487c317d",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID, FilterOperator.IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("53a334f1-c712-419b-9b1a-8c660afdac1e"),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID, List.class,
                                                                 option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("dfd4c206-2b8d-48bd-ab97-c86bc9f7512f", "a0219f61-9a1a-42a7-90e1-d4f4cc63d326",
                                       "5c13eee4-a1c9-4ba0-9c64-3d751e0c722a"),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER, FilterOperator.EQUAL));
            assertNotNull(option.getDeviceFilterFilters());
            assertEquals("4f3f2a68-5dbc-4edf-80a8-095f67704941",
                         ListOptionsEncoder.encodeSingleEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER,
                                                                    String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDeviceFilterFilters());
            assertEquals("965fc8d0-da1d-4a52-84c4-2bd0d329fa7d",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER,
                                                                       String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER, FilterOperator.IN));
            assertNotNull(option.getDeviceFilterFilters());
            assertEquals(Arrays.asList("4c44da01-2646-4df3-8e19-0acb6ff0eabf"),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER, FilterOperator.NOT_IN));
            assertNotNull(option.getDeviceFilterFilters());
            assertEquals(Arrays.asList("59c4acb5-f757-47ad-9361-7c1583ecba17", "c573bb60-5cd9-401c-8727-a6b1204838ab",
                                       "2e2dcd54-407a-4746-9eca-ca8b95884f1f", "4607dccc-69a5-4259-a025-3f567673e8a7",
                                       "1e2a6d08-3531-49e6-9e86-4d14d0a27d24", "05b7ce2b-92d8-42fc-b916-443326a774db",
                                       "34fc9b1f-7a79-4075-9cf7-35ff349d189f", "b4bb4e6f-a0da-42ea-9c8f-4661337da1a9",
                                       "b8c6368a-1ac9-43e0-a2a5-8c2a344f3412"),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED, FilterOperator.IN));
            assertNotNull(option.getFinishedFilters());
            assertEquals(Arrays.asList(new Date(1561477841712L), new Date(1561477842814L), new Date(1561477844047L),
                                       new Date(1561477839904L), new Date(1561477836591L), new Date(1561477842055L),
                                       new Date(1561477839837L)),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED, FilterOperator.NOT_IN));
            assertNotNull(option.getFinishedFilters());
            assertEquals(Arrays.asList(new Date(1561477841207L), new Date(1561477839467L), new Date(1561477836552L),
                                       new Date(1561477837454L), new Date(1561477838498L), new Date(1561477837913L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED, FilterOperator.LESS_THAN));
            assertNotNull(option.getFinishedFilters());
            assertEquals(new Date(1561477836934L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED, FilterOperator.GREATER_THAN));
            assertNotNull(option.getFinishedFilters());
            assertEquals(new Date(1561477841722L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT, FilterOperator.IN));
            assertNotNull(option.getStartedAtFilters());
            assertEquals(Arrays.asList(new Date(1561477834835L), new Date(1561477838542L), new Date(1561477839788L),
                                       new Date(1561477844232L), new Date(1561477840102L)),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getStartedAtFilters());
            assertEquals(Arrays.asList(new Date(1561477837623L), new Date(1561477839591L), new Date(1561477840422L),
                                       new Date(1561477843665L), new Date(1561477840875L), new Date(1561477839036L),
                                       new Date(1561477837595L), new Date(1561477843363L), new Date(1561477841010L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT, FilterOperator.LESS_THAN));
            assertNotNull(option.getStartedAtFilters());
            assertEquals(new Date(1561477840904L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getStartedAtFilters());
            assertEquals(new Date(1561477834704L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN, FilterOperator.IN));
            assertNotNull(option.getWhenFilters());
            assertEquals(Arrays.asList(new Date(1561477834733L), new Date(1561477835071L)),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN, FilterOperator.NOT_IN));
            assertNotNull(option.getWhenFilters());
            assertEquals(Arrays.asList(new Date(1561477839033L), new Date(1561477838992L), new Date(1561477843370L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN, FilterOperator.LESS_THAN));
            assertNotNull(option.getWhenFilters());
            assertEquals(new Date(1561477840249L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN, FilterOperator.GREATER_THAN));
            assertNotNull(option.getWhenFilters());
            assertEquals(new Date(1561477840947L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1561477836709L), new Date(1561477834704L), new Date(1561477835592L),
                                       new Date(1561477840187L), new Date(1561477836389L), new Date(1561477838224L)),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1561477842960L), new Date(1561477835471L), new Date(1561477838909L),
                                       new Date(1561477839455L), new Date(1561477835145L), new Date(1561477838445L),
                                       new Date(1561477836073L), new Date(1561477841112L), new Date(1561477839858L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.LESS_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1561477843880L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1561477840054L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID,
                                        FilterOperator.EQUAL));
            assertNotNull(option.getRootManifestIdFilters());
            assertEquals("3c121fd4-ea3c-4a26-8ff8-007fc18407e3",
                         ListOptionsEncoder.encodeSingleEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getRootManifestIdFilters());
            assertEquals("25ef1135-c566-4523-8df1-876da26d2ead",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID, FilterOperator.IN));
            assertNotNull(option.getRootManifestIdFilters());
            assertEquals(Arrays.asList("0052e2f3-647d-440c-8218-e26f596373c2", "b99390bc-42a4-49a7-8b07-e972f37e65ca",
                                       "edd4844f-7fcd-4296-916a-2f768580a1a4", "b2c0618d-b428-4e00-920b-4ba7addfd22a"),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID,
                                        FilterOperator.NOT_IN));
            assertNotNull(option.getRootManifestIdFilters());
            assertEquals(Arrays.asList("5b9236a8-f477-48bc-a979-9eb1b8697634", "05256cf4-3a5a-47f4-aced-5704c509409a"),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("c0f11ad2-3b94-40d5-a2fa-b88b30ef1de4",
                         ListOptionsEncoder.encodeSingleEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("1005ecd2-4321-4097-a7f9-4c93fc1a9e21",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                       String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("2e10e765-7414-4555-9727-f2d791af8a99"),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("e597aa48-d6aa-4cbc-a432-a1958ef72cd6", "77872fa5-d119-4a43-bb5d-7dc45c955d3d"),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    List.class, option));
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            UpdateCampaignListOptions updatecampaignlistoptions1 = new UpdateCampaignListOptions(Integer.valueOf(-115),
                                                                                                 Long.valueOf(-109),
                                                                                                 Order.getDefault(),
                                                                                                 "c88d8233-908f-4d8c-8f9d-9b660c8fcca3",
                                                                                                 null, null);
            UpdateCampaignListOptions updatecampaignlistoptions2 = new UpdateCampaignListOptions(Integer.valueOf(-115),
                                                                                                 Long.valueOf(-109),
                                                                                                 Order.getDefault(),
                                                                                                 "c88d8233-908f-4d8c-8f9d-9b660c8fcca3",
                                                                                                 null, null);
            assertNotNull(updatecampaignlistoptions1);
            assertNotNull(updatecampaignlistoptions2);
            assertNotSame(updatecampaignlistoptions2, updatecampaignlistoptions1);
            assertEquals(updatecampaignlistoptions2, updatecampaignlistoptions1);
            assertEquals(updatecampaignlistoptions2.hashCode(), updatecampaignlistoptions1.hashCode());
            int hashCode = updatecampaignlistoptions1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, updatecampaignlistoptions1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            UpdateCampaignListOptions updatecampaignlistoptions1 = new UpdateCampaignListOptions(Integer.valueOf(121),
                                                                                                 Long.valueOf(-86),
                                                                                                 Order.getDefault(),
                                                                                                 "7bc82057-c18a-4b48-bad1-2ff2a5d6a28d",
                                                                                                 null, null);
            UpdateCampaignListOptions updatecampaignlistoptions2 = new UpdateCampaignListOptions(Integer.valueOf(121),
                                                                                                 Long.valueOf(-86),
                                                                                                 Order.getDefault(),
                                                                                                 "7bc82057-c18a-4b48-bad1-2ff2a5d6a28d",
                                                                                                 null, null);
            UpdateCampaignListOptions updatecampaignlistoptions3 = new UpdateCampaignListOptions(Integer.valueOf(-114),
                                                                                                 Long.valueOf(102),
                                                                                                 Order.getDefault(),
                                                                                                 "27b007f8-7617-4ff4-a90f-0cf4d895aa3d",
                                                                                                 null, null);
            assertNotNull(updatecampaignlistoptions1);
            assertNotNull(updatecampaignlistoptions2);
            assertNotNull(updatecampaignlistoptions3);
            assertNotSame(updatecampaignlistoptions2, updatecampaignlistoptions1);
            assertNotSame(updatecampaignlistoptions3, updatecampaignlistoptions1);
            assertEquals(updatecampaignlistoptions2, updatecampaignlistoptions1);
            assertEquals(updatecampaignlistoptions2, updatecampaignlistoptions1);
            assertEquals(updatecampaignlistoptions1, updatecampaignlistoptions2);
            assertEquals(updatecampaignlistoptions1, updatecampaignlistoptions1);
            assertFalse(updatecampaignlistoptions1.equals(null));
            assertNotEquals(updatecampaignlistoptions3, updatecampaignlistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
