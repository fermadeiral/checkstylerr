// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model ParentAccount.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestParentAccount {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("851d4.98418@b88b2.fr",
                                                             "732545f6-9370-462d-a15e-2fa246b266b9",
                                                             "fc91ece4c663c84ce50ea8058379fe26");
            ParentAccount parentaccount2 = parentaccount1.clone();
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotSame(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("4f46f.d30a8@b59eb.fr",
                                                             "54da52c5-31f0-4eaf-a0e3-c5873ca46a3f",
                                                             "fc91ece4c663c84ce50ea8058379fe26");
            ParentAccount parentaccount2 = new ParentAccount("4f46f.d30a8@b59eb.fr",
                                                             "54da52c5-31f0-4eaf-a0e3-c5873ca46a3f",
                                                             "fc91ece4c663c84ce50ea8058379fe26");
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotSame(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount2.hashCode(), parentaccount1.hashCode());
            int hashCode = parentaccount1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, parentaccount1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ParentAccount parentaccount = new ParentAccount("e4eca.83e29@21c80.me", "d4250c28-c67d-4322-8552-c0e13470b735",
                                                        "fc91ece4c663c84ce50ea8058379fe26");
        assertTrue(parentaccount.isValid());
        ParentAccount parentaccountInvalid = new ParentAccount("ä?­ï¾·>æ¢³ì†‡ï¾?0>ì†ƒ\u0005â¯¬í–¬ã†ˆí‰»é´«ë¼ \u0003î©˜ì™§äŽ¸>\u0017ë›¾ï¤‚ì«”'>á±‚ä¯˜ä¯“â€„ê”²>>ä²¿ë¨žêžŸ'ã¼µ\u001aë’–>\u000fï¾¿à®žìŽ—ã¾¸ë¾“ä¯°\u0005)å’ºí?–å‘‰ï¿¥æ?­ç’?>>'ì®šìµ®ê£˜í?–",
                                                               "e48f0bc5-9a63-45dd-93ab-6b44e8548f92f0f21a36-492d-4f06-9219-cb6c72e02a0440522603-572d-4a0a-8c8e-8301a24b4db9",
                                                               "\u001edçŽ¿Zì’¤ã¸ƒâ–¦&'d\\\\d=/\u0001b]bå†‘ìŸ„ddbbb@\u0019dd_:bd\u0014G,dd+\\\\ï ‰dbbbE`æ¶®b\u0013ç²”AUbbbKè¥Š\bO>dî½¬b");
        assertFalse(parentaccountInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("09bb7.b76f2@2d3c2.me",
                                                             "3bf71c51-89e0-4e7b-8b4d-557de59f439b",
                                                             "fc91ece4c663c84ce50ea8058379fe26");
            ParentAccount parentaccount2 = new ParentAccount("09bb7.b76f2@2d3c2.me",
                                                             "3bf71c51-89e0-4e7b-8b4d-557de59f439b",
                                                             "fc91ece4c663c84ce50ea8058379fe26");
            ParentAccount parentaccount3 = new ParentAccount("98b75.1082f@5981b.me",
                                                             "aa389fcd-3ffe-4bfb-9ffc-9c3f6240ee2e",
                                                             "fc91ece4c663c84ce50ea8058379fe26");
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotNull(parentaccount3);
            assertNotSame(parentaccount2, parentaccount1);
            assertNotSame(parentaccount3, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount1, parentaccount2);
            assertEquals(parentaccount1, parentaccount1);
            assertFalse(parentaccount1.equals(null));
            assertNotEquals(parentaccount3, parentaccount1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
