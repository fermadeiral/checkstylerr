// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.deviceupdate.model;

import static org.junit.Assert.*;

import com.arm.mbed.cloud.sdk.common.Order;
import com.arm.mbed.cloud.sdk.common.listing.ListOptionsEncoder;
import com.arm.mbed.cloud.sdk.common.listing.filtering.FilterOperator;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import org.junit.Test;

/**
 * Unit tests for Model FirmwareImageListOptions.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestFirmwareImageListOptions {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            FirmwareImageListOptions firmwareimagelistoptions1 = new FirmwareImageListOptions(Integer.valueOf(30),
                                                                                              Long.valueOf(-54),
                                                                                              Order.getDefault(),
                                                                                              "61d1ff57-9ae9-43ae-afee-7b718d30ce87",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions2 = firmwareimagelistoptions1.clone();
            assertNotNull(firmwareimagelistoptions1);
            assertNotNull(firmwareimagelistoptions2);
            assertNotSame(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the filters method.
     */
    @SuppressWarnings({ "boxing", "resource" })
    @Test
    public void testFilters() {
        try {
            FirmwareImageListOptions option = new FirmwareImageListOptions().inUpdatedAts(Arrays.asList(new Date(1561477836517L),
                                                                                                        new Date(1561477841383L),
                                                                                                        new Date(1561477834972L),
                                                                                                        new Date(1561477839068L),
                                                                                                        new Date(1561477839332L),
                                                                                                        new Date(1561477839467L),
                                                                                                        new Date(1561477836198L)))
                                                                            .notInUpdatedAts(Arrays.asList(new Date(1561477840816L),
                                                                                                           new Date(1561477835920L),
                                                                                                           new Date(1561477838322L),
                                                                                                           new Date(1561477843811L),
                                                                                                           new Date(1561477839842L),
                                                                                                           new Date(1561477840491L),
                                                                                                           new Date(1561477836319L),
                                                                                                           new Date(1561477836622L),
                                                                                                           new Date(1561477835139L)))
                                                                            .lessThanUpdatedAt(new Date(1561477835428L))
                                                                            .greaterThanUpdatedAt(new Date(1561477840274L))
                                                                            .equalToName("9b1f38ed-3579-480a-bef1-95998d0e9667")
                                                                            .notEqualToName("7f6cfdbc-ea2e-4f45-8639-3d93ed987563")
                                                                            .inNames(Arrays.asList("991e4ffe-823b-4ca2-b9ea-7f2c4e4703eb",
                                                                                                   "6a80da4f-d7f7-4922-a21d-6fd2bf1d08ee",
                                                                                                   "54b38ec6-37ed-4b99-9f32-d1ac6fc44629",
                                                                                                   "81ed071e-e06b-4ea6-834b-79da66a84652",
                                                                                                   "69e85df0-f002-46ff-b0da-1eb34d704f9a"))
                                                                            .notInNames(Arrays.asList("f04e39a2-3933-4221-8467-5da76dca86f7",
                                                                                                      "fbc89262-d5e7-43b8-a7b5-94c4b569fc87",
                                                                                                      "4900aaf2-d81c-49df-a8e2-054b24e4c38e"))
                                                                            .equalToDescription("251bffa7-8a69-48b5-b331-8b6da238cf32")
                                                                            .notEqualToDescription("13f560d5-0caa-4b46-a86b-3b0685a7acc2")
                                                                            .inDescriptions(Arrays.asList("bfb66dbf-62f5-4817-8ceb-69f2717734de"))
                                                                            .notInDescriptions(Arrays.asList("ad913589-72a6-4844-becb-c6c1657e7606",
                                                                                                             "e7c74038-d668-47e7-bfed-f6587e427299",
                                                                                                             "2aa35b26-9605-4205-a1a2-1d26df8cddb9",
                                                                                                             "6b438f2e-4485-4ad2-942d-3a385d1a9df0"))
                                                                            .inCreatedAts(Arrays.asList(new Date(1561477836694L),
                                                                                                        new Date(1561477836896L),
                                                                                                        new Date(1561477843035L),
                                                                                                        new Date(1561477836734L),
                                                                                                        new Date(1561477836603L),
                                                                                                        new Date(1561477835494L)))
                                                                            .notInCreatedAts(Arrays.asList(new Date(1561477835722L),
                                                                                                           new Date(1561477843297L),
                                                                                                           new Date(1561477837396L)))
                                                                            .lessThanCreatedAt(new Date(1561477844279L))
                                                                            .greaterThanCreatedAt(new Date(1561477837997L))
                                                                            .equalToDatafileUrl("dbe6f1e1-29af-4dcc-826a-4c9fb5cf7837")
                                                                            .notEqualToDatafileUrl("d06fe396-c5c5-4342-a50e-7dbae37bd390")
                                                                            .inDatafileUrls(Arrays.asList("dd26ccc6-85e6-4cff-8118-10ef1565a792",
                                                                                                          "9c1cca07-fed1-490c-a6c0-96f2fb7adf58",
                                                                                                          "f488913b-7036-444c-ba60-c5dc33238cc6",
                                                                                                          "e87d9d9d-a141-4c9c-8356-9d5e530bd9fe"))
                                                                            .notInDatafileUrls(Arrays.asList("8dbc1558-a033-4ae1-876f-ee5b32d3d28a",
                                                                                                             "993f80a0-695c-4957-9e52-72c4f0908905",
                                                                                                             "5a900ce7-df9f-479b-b331-2ff0be589fe6",
                                                                                                             "558805c4-58ef-49b2-a9ba-46d63bc6222f",
                                                                                                             "2a6feb4c-859c-49e7-8882-3b2e9f07ceff"))
                                                                            .equalToDatafileSize(Long.valueOf(-7))
                                                                            .notEqualToDatafileSize(Long.valueOf(67))
                                                                            .inDatafileSizes(Arrays.asList(Long.valueOf(-114),
                                                                                                           Long.valueOf(-57),
                                                                                                           Long.valueOf(34),
                                                                                                           Long.valueOf(-44),
                                                                                                           Long.valueOf(-46),
                                                                                                           Long.valueOf(126),
                                                                                                           Long.valueOf(86),
                                                                                                           Long.valueOf(-78),
                                                                                                           Long.valueOf(-48)))
                                                                            .notInDatafileSizes(Arrays.asList(Long.valueOf(-22),
                                                                                                              Long.valueOf(13),
                                                                                                              Long.valueOf(23),
                                                                                                              Long.valueOf(-28),
                                                                                                              Long.valueOf(-117),
                                                                                                              Long.valueOf(-75),
                                                                                                              Long.valueOf(-49),
                                                                                                              Long.valueOf(-125)))
                                                                            .equalToDatafileChecksum("15e277d9-2947-4612-afc8-c58265a2bccf")
                                                                            .notEqualToDatafileChecksum("4df431a4-4584-4be8-b709-39d4db65d65b")
                                                                            .inDatafileChecksums(Arrays.asList("bca281f4-9522-470b-94b5-73d008937c64",
                                                                                                               "35f439f8-168f-49f2-8028-eb34d61eec05",
                                                                                                               "d681d708-07b6-43a3-97d1-7ac754c989a9",
                                                                                                               "c9fcaa36-052b-4c89-8d89-d3017c21295e",
                                                                                                               "d4754e1f-a85e-49c6-9bde-68d5cb4198f4",
                                                                                                               "b5c4d389-1481-4b4c-906b-71b1dee7fe9f"))
                                                                            .notInDatafileChecksums(Arrays.asList("c9669fe9-b947-4bbf-a34d-d795e97c3e60",
                                                                                                                  "6f831002-fc58-4cae-a6e1-17d80c7a413e",
                                                                                                                  "41f98d07-249d-41d9-b4d0-0c32356a53af",
                                                                                                                  "d339359b-4655-4809-aa1c-c0f561a14711",
                                                                                                                  "c39d1da3-1b83-4af9-9900-d3a518c568d1"))
                                                                            .equalToId("d3b0356e-a773-400d-b5db-ad69bf0c0366")
                                                                            .notEqualToId("29a1e5a9-633d-4c1a-b8aa-3385ce767c3b")
                                                                            .inIds(Arrays.asList("9a33fba6-f16b-43fa-aaa9-2028a7e93c48",
                                                                                                 "fa504651-59a2-406e-9b0d-e6eadcac1263",
                                                                                                 "1c33ea42-fb8d-4cc5-8c90-9edd461b39aa",
                                                                                                 "c32265b6-9d7b-40c5-9225-cf931fce703e",
                                                                                                 "25999986-9bbd-4800-93fc-300a9de76652",
                                                                                                 "86479035-f07a-4c28-92b0-e5672b6575a3",
                                                                                                 "d5eb221d-3bde-456f-9613-02e2a0907df0",
                                                                                                 "b939cfa9-b606-4b66-a14d-dd3f0e7f8cf4",
                                                                                                 "5c493c43-2454-4d3f-96f5-75b63e886912"))
                                                                            .notInIds(Arrays.asList("50bd127e-1e2f-459a-8f5c-5df50f6350ce",
                                                                                                    "1213485c-ebb0-4e48-9514-a5c0bed859fc",
                                                                                                    "0cb21edc-03b0-4419-b41f-ccf6b35beb8a",
                                                                                                    "41c335d8-3a64-45e4-b198-71ae9903a8d0",
                                                                                                    "293dd84e-da4c-4437-a713-1e35a5a3676f",
                                                                                                    "559e3535-7be2-4c04-be74-d46b8a19d881",
                                                                                                    "355685e2-cf3d-40be-b4e8-aebb5c4b784d",
                                                                                                    "ae4edeab-d22f-4f82-8f1f-75a61be35f93",
                                                                                                    "b424c7d1-304b-4c00-b5ca-a86576d8dadc"));
            assertTrue(option.hasFilters());
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1561477836517L), new Date(1561477841383L), new Date(1561477834972L),
                                       new Date(1561477839068L), new Date(1561477839332L), new Date(1561477839467L),
                                       new Date(1561477836198L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1561477840816L), new Date(1561477835920L), new Date(1561477838322L),
                                       new Date(1561477843811L), new Date(1561477839842L), new Date(1561477840491L),
                                       new Date(1561477836319L), new Date(1561477836622L), new Date(1561477835139L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.LESS_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1561477835428L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1561477840274L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("9b1f38ed-3579-480a-bef1-95998d0e9667",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("7f6cfdbc-ea2e-4f45-8639-3d93ed987563",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("991e4ffe-823b-4ca2-b9ea-7f2c4e4703eb", "6a80da4f-d7f7-4922-a21d-6fd2bf1d08ee",
                                       "54b38ec6-37ed-4b99-9f32-d1ac6fc44629", "81ed071e-e06b-4ea6-834b-79da66a84652",
                                       "69e85df0-f002-46ff-b0da-1eb34d704f9a"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("f04e39a2-3933-4221-8467-5da76dca86f7", "fbc89262-d5e7-43b8-a7b5-94c4b569fc87",
                                       "4900aaf2-d81c-49df-a8e2-054b24e4c38e"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("251bffa7-8a69-48b5-b331-8b6da238cf32",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("13f560d5-0caa-4b46-a86b-3b0685a7acc2",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("bfb66dbf-62f5-4817-8ceb-69f2717734de"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("ad913589-72a6-4844-becb-c6c1657e7606", "e7c74038-d668-47e7-bfed-f6587e427299",
                                       "2aa35b26-9605-4205-a1a2-1d26df8cddb9", "6b438f2e-4485-4ad2-942d-3a385d1a9df0"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1561477836694L), new Date(1561477836896L), new Date(1561477843035L),
                                       new Date(1561477836734L), new Date(1561477836603L), new Date(1561477835494L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1561477835722L), new Date(1561477843297L), new Date(1561477837396L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.LESS_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1561477844279L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1561477837997L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("dbe6f1e1-29af-4dcc-826a-4c9fb5cf7837",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("d06fe396-c5c5-4342-a50e-7dbae37bd390",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("dd26ccc6-85e6-4cff-8118-10ef1565a792", "9c1cca07-fed1-490c-a6c0-96f2fb7adf58",
                                       "f488913b-7036-444c-ba60-c5dc33238cc6", "e87d9d9d-a141-4c9c-8356-9d5e530bd9fe"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("8dbc1558-a033-4ae1-876f-ee5b32d3d28a", "993f80a0-695c-4957-9e52-72c4f0908905",
                                       "5a900ce7-df9f-479b-b331-2ff0be589fe6", "558805c4-58ef-49b2-a9ba-46d63bc6222f",
                                       "2a6feb4c-859c-49e7-8882-3b2e9f07ceff"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(-7),
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    Long.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(67),
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                       Long.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(-114), Long.valueOf(-57), Long.valueOf(34), Long.valueOf(-44),
                                       Long.valueOf(-46), Long.valueOf(126), Long.valueOf(86), Long.valueOf(-78),
                                       Long.valueOf(-48)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(-22), Long.valueOf(13), Long.valueOf(23), Long.valueOf(-28),
                                       Long.valueOf(-117), Long.valueOf(-75), Long.valueOf(-49), Long.valueOf(-125)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                        FilterOperator.EQUAL));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals("15e277d9-2947-4612-afc8-c58265a2bccf",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals("4df431a4-4584-4be8-b709-39d4db65d65b",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM, FilterOperator.IN));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals(Arrays.asList("bca281f4-9522-470b-94b5-73d008937c64", "35f439f8-168f-49f2-8028-eb34d61eec05",
                                       "d681d708-07b6-43a3-97d1-7ac754c989a9", "c9fcaa36-052b-4c89-8d89-d3017c21295e",
                                       "d4754e1f-a85e-49c6-9bde-68d5cb4198f4", "b5c4d389-1481-4b4c-906b-71b1dee7fe9f"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                        FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals(Arrays.asList("c9669fe9-b947-4bbf-a34d-d795e97c3e60", "6f831002-fc58-4cae-a6e1-17d80c7a413e",
                                       "41f98d07-249d-41d9-b4d0-0c32356a53af", "d339359b-4655-4809-aa1c-c0f561a14711",
                                       "c39d1da3-1b83-4af9-9900-d3a518c568d1"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("d3b0356e-a773-400d-b5db-ad69bf0c0366",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("29a1e5a9-633d-4c1a-b8aa-3385ce767c3b",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("9a33fba6-f16b-43fa-aaa9-2028a7e93c48", "fa504651-59a2-406e-9b0d-e6eadcac1263",
                                       "1c33ea42-fb8d-4cc5-8c90-9edd461b39aa", "c32265b6-9d7b-40c5-9225-cf931fce703e",
                                       "25999986-9bbd-4800-93fc-300a9de76652", "86479035-f07a-4c28-92b0-e5672b6575a3",
                                       "d5eb221d-3bde-456f-9613-02e2a0907df0", "b939cfa9-b606-4b66-a14d-dd3f0e7f8cf4",
                                       "5c493c43-2454-4d3f-96f5-75b63e886912"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, List.class,
                                                                 option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("50bd127e-1e2f-459a-8f5c-5df50f6350ce", "1213485c-ebb0-4e48-9514-a5c0bed859fc",
                                       "0cb21edc-03b0-4419-b41f-ccf6b35beb8a", "41c335d8-3a64-45e4-b198-71ae9903a8d0",
                                       "293dd84e-da4c-4437-a713-1e35a5a3676f", "559e3535-7be2-4c04-be74-d46b8a19d881",
                                       "355685e2-cf3d-40be-b4e8-aebb5c4b784d", "ae4edeab-d22f-4f82-8f1f-75a61be35f93",
                                       "b424c7d1-304b-4c00-b5ca-a86576d8dadc"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID,
                                                                    List.class, option));
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            FirmwareImageListOptions firmwareimagelistoptions1 = new FirmwareImageListOptions(Integer.valueOf(92),
                                                                                              Long.valueOf(-116),
                                                                                              Order.getDefault(),
                                                                                              "aca8064b-c294-475f-aa85-b59c588bf378",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions2 = new FirmwareImageListOptions(Integer.valueOf(92),
                                                                                              Long.valueOf(-116),
                                                                                              Order.getDefault(),
                                                                                              "aca8064b-c294-475f-aa85-b59c588bf378",
                                                                                              null, null);
            assertNotNull(firmwareimagelistoptions1);
            assertNotNull(firmwareimagelistoptions2);
            assertNotSame(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2.hashCode(), firmwareimagelistoptions1.hashCode());
            int hashCode = firmwareimagelistoptions1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, firmwareimagelistoptions1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            FirmwareImageListOptions firmwareimagelistoptions1 = new FirmwareImageListOptions(Integer.valueOf(-126),
                                                                                              Long.valueOf(-111),
                                                                                              Order.getDefault(),
                                                                                              "7e27dbb2-759a-4060-82e5-ffb25cffe340",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions2 = new FirmwareImageListOptions(Integer.valueOf(-126),
                                                                                              Long.valueOf(-111),
                                                                                              Order.getDefault(),
                                                                                              "7e27dbb2-759a-4060-82e5-ffb25cffe340",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions3 = new FirmwareImageListOptions(Integer.valueOf(-128),
                                                                                              Long.valueOf(-28),
                                                                                              Order.getDefault(),
                                                                                              "1bb9fafa-8885-4cf5-b68a-0f2dd9c7c32d",
                                                                                              null, null);
            assertNotNull(firmwareimagelistoptions1);
            assertNotNull(firmwareimagelistoptions2);
            assertNotNull(firmwareimagelistoptions3);
            assertNotSame(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertNotSame(firmwareimagelistoptions3, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions1, firmwareimagelistoptions2);
            assertEquals(firmwareimagelistoptions1, firmwareimagelistoptions1);
            assertFalse(firmwareimagelistoptions1.equals(null));
            assertNotEquals(firmwareimagelistoptions3, firmwareimagelistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
