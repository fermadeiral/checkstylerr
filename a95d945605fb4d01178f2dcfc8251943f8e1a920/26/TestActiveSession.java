// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model ActiveSession.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestActiveSession {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ActiveSession activesession1 = new ActiveSession("bf46f5afa631cc54fbbfd0f5b5ecdbe9",
                                                             "795c0ae8-6f18-4280-bb40-6fd3c1e410d7",
                                                             new Date(1558096106332L),
                                                             "62a99fbb-cf29-4370-a77d-737ebce1ab42",
                                                             "3b129233-3662-4a7a-996c-157e2bec72aa");
            ActiveSession activesession2 = activesession1.clone();
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotSame(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ActiveSession activesession1 = new ActiveSession("bf46f5afa631cc54fbbfd0f5b5ecdbe9",
                                                             "e7790034-f6da-41c3-8863-f8876e3405be",
                                                             new Date(1558096104943L),
                                                             "07cb67f5-c0fd-4182-9e78-c7a64eff5796",
                                                             "10be72f0-abb2-4ce7-8c25-64a7f4d6136e");
            ActiveSession activesession2 = new ActiveSession("bf46f5afa631cc54fbbfd0f5b5ecdbe9",
                                                             "e7790034-f6da-41c3-8863-f8876e3405be",
                                                             new Date(1558096104943L),
                                                             "07cb67f5-c0fd-4182-9e78-c7a64eff5796",
                                                             "10be72f0-abb2-4ce7-8c25-64a7f4d6136e");
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotSame(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession2.hashCode(), activesession1.hashCode());
            int hashCode = activesession1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, activesession1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ActiveSession activesession = new ActiveSession("bf46f5afa631cc54fbbfd0f5b5ecdbe9",
                                                        "8bbb566c-df2f-4cfc-aeda-62049c6a826d",
                                                        new Date(1558096106863L),
                                                        "2ec897f4-6e89-4597-bb50-92acfb5dcad4",
                                                        "e78567df-6a7e-47a1-bdfc-e970e21a07a7");
        assertTrue(activesession.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ActiveSession activesession1 = new ActiveSession("bf46f5afa631cc54fbbfd0f5b5ecdbe9",
                                                             "0073ae63-9259-4ef4-a0c1-7b51997f8690",
                                                             new Date(1558096099999L),
                                                             "c5f2b5fa-fb89-416a-b04e-87a379111514",
                                                             "05c57ba8-3365-4526-8c9b-20275305321d");
            ActiveSession activesession2 = new ActiveSession("bf46f5afa631cc54fbbfd0f5b5ecdbe9",
                                                             "0073ae63-9259-4ef4-a0c1-7b51997f8690",
                                                             new Date(1558096099999L),
                                                             "c5f2b5fa-fb89-416a-b04e-87a379111514",
                                                             "05c57ba8-3365-4526-8c9b-20275305321d");
            ActiveSession activesession3 = new ActiveSession("bf46f5afa631cc54fbbfd0f5b5ecdbe9",
                                                             "ed0e3b14-0978-467f-8701-6b7631b60929",
                                                             new Date(1558096103678L),
                                                             "3f2b0a01-58f1-461d-b4be-cc9d93fb1839",
                                                             "f2ccb067-35ff-48ce-bf67-85c12ef63821");
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotNull(activesession3);
            assertNotSame(activesession2, activesession1);
            assertNotSame(activesession3, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession1, activesession2);
            assertEquals(activesession1, activesession1);
            assertFalse(activesession1.equals(null));
            assertNotEquals(activesession3, activesession1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
