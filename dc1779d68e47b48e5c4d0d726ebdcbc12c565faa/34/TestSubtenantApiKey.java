// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantApiKey.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantApiKey {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("bf46f5afa631cc54fbbfd0f5b5ecdbe9",
                                                                   new Date(1558096107683L), 29,
                                                                   "bf46f5afa631cc54fbbfd0f5b5ecdbe9",
                                                                   "f7c5bd42-e44c-4ce3-ae59-c304a1e041f1", 79,
                                                                   "68cbe010-a8be-4a3c-b1cf-1e58a6fcf34f",
                                                                   "bf46f5afa631cc54fbbfd0f5b5ecdbe9",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1558096109160L));
            SubtenantApiKey subtenantapikey2 = subtenantapikey1.clone();
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("bf46f5afa631cc54fbbfd0f5b5ecdbe9",
                                                                   new Date(1558096103762L), 96,
                                                                   "bf46f5afa631cc54fbbfd0f5b5ecdbe9",
                                                                   "7abecb98-8d2a-424c-adb6-edfef3266b76", 67,
                                                                   "cca0f389-2d88-4e4e-aba4-09db5dda3455",
                                                                   "bf46f5afa631cc54fbbfd0f5b5ecdbe9",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1558096106691L));
            SubtenantApiKey subtenantapikey2 = new SubtenantApiKey("bf46f5afa631cc54fbbfd0f5b5ecdbe9",
                                                                   new Date(1558096103762L), 96,
                                                                   "bf46f5afa631cc54fbbfd0f5b5ecdbe9",
                                                                   "7abecb98-8d2a-424c-adb6-edfef3266b76", 67,
                                                                   "cca0f389-2d88-4e4e-aba4-09db5dda3455",
                                                                   "bf46f5afa631cc54fbbfd0f5b5ecdbe9",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1558096106691L));
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2.hashCode(), subtenantapikey1.hashCode());
            int hashCode = subtenantapikey1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantapikey1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantApiKey subtenantapikey = new SubtenantApiKey("bf46f5afa631cc54fbbfd0f5b5ecdbe9",
                                                              new Date(1558096102466L), 9,
                                                              "bf46f5afa631cc54fbbfd0f5b5ecdbe9",
                                                              "8c8a20e4-1de8-4715-a0b4-8d4471a612fc", -93,
                                                              "1476ea62-e073-4062-8be4-6caa1d79fa4e",
                                                              "bf46f5afa631cc54fbbfd0f5b5ecdbe9",
                                                              SubtenantApiKeyStatus.getDefault(),
                                                              new Date(1558096106946L));
        assertTrue(subtenantapikey.isValid());
        SubtenantApiKey subtenantapikeyInvalid = new SubtenantApiKey(null, new Date(1558096101456L), -57,
                                                                     "2@T^&72V2î‘£\u00112_8ã™?@7Mí›†C7#\u000e728N822?288=7æ‘ž\u0000*E8\u0005\u0014î†‰ì½´TK22Vï’ˆÓŸT@\u0001$$Y+\f87é¾§7å·­",
                                                                     "2034d916-8307-4914-a9ab-f49cf800fb8b", -10, null,
                                                                     "2@T^&72V2î‘£\u00112_8ã™?@7Mí›†C7#\u000e728N822?288=7æ‘ž\u0000*E8\u0005\u0014î†‰ì½´TK22Vï’ˆÓŸT@\u0001$$Y+\f87é¾§7å·­",
                                                                     SubtenantApiKeyStatus.getDefault(),
                                                                     new Date(1558096108482L));
        assertFalse(subtenantapikeyInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("bf46f5afa631cc54fbbfd0f5b5ecdbe9",
                                                                   new Date(1558096109602L), -62,
                                                                   "bf46f5afa631cc54fbbfd0f5b5ecdbe9",
                                                                   "83d2fe3e-2f7d-48f9-93b7-e9d3a0667004", -116,
                                                                   "3961f32d-ac29-4db9-bc7b-4e862260f554",
                                                                   "bf46f5afa631cc54fbbfd0f5b5ecdbe9",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1558096105674L));
            SubtenantApiKey subtenantapikey2 = new SubtenantApiKey("bf46f5afa631cc54fbbfd0f5b5ecdbe9",
                                                                   new Date(1558096109602L), -62,
                                                                   "bf46f5afa631cc54fbbfd0f5b5ecdbe9",
                                                                   "83d2fe3e-2f7d-48f9-93b7-e9d3a0667004", -116,
                                                                   "3961f32d-ac29-4db9-bc7b-4e862260f554",
                                                                   "bf46f5afa631cc54fbbfd0f5b5ecdbe9",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1558096105674L));
            SubtenantApiKey subtenantapikey3 = new SubtenantApiKey("bf46f5afa631cc54fbbfd0f5b5ecdbe9",
                                                                   new Date(1558096101856L), 3,
                                                                   "bf46f5afa631cc54fbbfd0f5b5ecdbe9",
                                                                   "23836f63-c37f-4f9f-829b-ebd6aabb27cd", 31,
                                                                   "c17d5e02-bd1f-4dc4-bc86-aaa2c374ce9b",
                                                                   "bf46f5afa631cc54fbbfd0f5b5ecdbe9",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1558096101017L));
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotNull(subtenantapikey3);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertNotSame(subtenantapikey3, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey1, subtenantapikey2);
            assertEquals(subtenantapikey1, subtenantapikey1);
            assertFalse(subtenantapikey1.equals(null));
            assertNotEquals(subtenantapikey3, subtenantapikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
