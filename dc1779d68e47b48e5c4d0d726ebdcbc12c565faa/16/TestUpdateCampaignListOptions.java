// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.deviceupdate.model;

import static org.junit.Assert.*;

import com.arm.mbed.cloud.sdk.common.Order;
import com.arm.mbed.cloud.sdk.common.listing.ListOptionsEncoder;
import com.arm.mbed.cloud.sdk.common.listing.filtering.FilterOperator;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import org.junit.Test;

/**
 * Unit tests for Model UpdateCampaignListOptions.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestUpdateCampaignListOptions {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            UpdateCampaignListOptions updatecampaignlistoptions1 = new UpdateCampaignListOptions(Integer.valueOf(122),
                                                                                                 Long.valueOf(-37),
                                                                                                 Order.getDefault(),
                                                                                                 "8707f3fb-77e5-43a2-9324-a0f290009cb7",
                                                                                                 null, null);
            UpdateCampaignListOptions updatecampaignlistoptions2 = updatecampaignlistoptions1.clone();
            assertNotNull(updatecampaignlistoptions1);
            assertNotNull(updatecampaignlistoptions2);
            assertNotSame(updatecampaignlistoptions2, updatecampaignlistoptions1);
            assertEquals(updatecampaignlistoptions2, updatecampaignlistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the filters method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testFilters() {
        try {
            UpdateCampaignListOptions option = new UpdateCampaignListOptions().inCreatedAts(Arrays.asList(new Date(1558096104761L)))
                                                                              .notInCreatedAts(Arrays.asList(new Date(1558096110798L),
                                                                                                             new Date(1558096105542L),
                                                                                                             new Date(1558096101028L),
                                                                                                             new Date(1558096109794L),
                                                                                                             new Date(1558096105925L)))
                                                                              .lessThanCreatedAt(new Date(1558096105183L))
                                                                              .greaterThanCreatedAt(new Date(1558096108042L))
                                                                              .equalToName("330a6504-de36-4b5a-ad92-5713b61c6a8b")
                                                                              .notEqualToName("03b10a45-4a07-4477-9806-fa272de8e849")
                                                                              .inNames(Arrays.asList("d2060bef-9eea-4822-90a9-d71ef3b97eb3",
                                                                                                     "f9a6381f-a94c-41ff-b7fe-bef5a051eef3",
                                                                                                     "5b85ad9a-daa6-408c-9dbd-55cad2bac150",
                                                                                                     "56b3e252-0456-44a3-9b38-db05cfeb4166",
                                                                                                     "08af32aa-bc9a-40f2-a892-4cd556d6dbd2",
                                                                                                     "a0044afb-4749-465d-9a23-15ec582db075",
                                                                                                     "6424f8f3-98b1-45f7-98e6-9687b96f064f"))
                                                                              .notInNames(Arrays.asList("b560ac5d-4253-4c73-95c0-fb3f8c6caa38",
                                                                                                        "5e613bcc-647b-4999-a452-fd44699497cf",
                                                                                                        "95597427-ef80-424e-b72c-9b7e30c0905f",
                                                                                                        "1e0f5508-b3df-4816-b307-8b6f4b1de19b",
                                                                                                        "89e5974d-3c3d-4609-85bb-8f1ea8c72943",
                                                                                                        "5d8197c7-a438-4a42-a906-77de7ded335b",
                                                                                                        "c905c581-27a1-49c2-99fa-0a781962680f",
                                                                                                        "d89e1605-7e0c-4d20-838b-e1e4f8640a06",
                                                                                                        "9a3b4384-47de-4c96-8c75-71ef2f4e465f"))
                                                                              .equalToId("49d28764-e318-480b-ba4b-5cf980bb1e93")
                                                                              .notEqualToId("a30f0e5e-f33f-45b1-81db-1ac397821761")
                                                                              .inIds(Arrays.asList("e377eac2-36f8-42dd-8d2b-fece6f3bc052"))
                                                                              .notInIds(Arrays.asList("61f777ee-4375-44f4-ab31-b4cfccb29900",
                                                                                                      "2822af3b-a1a0-46a6-a064-a0c7181757b2"))
                                                                              .equalToDeviceFilter("02e1cb4d-b687-4fe2-97d8-82076e24c8b9")
                                                                              .notEqualToDeviceFilter("b5e68a54-6294-4a04-9778-7a0454cfd29b")
                                                                              .inDeviceFilters(Arrays.asList("700ebd13-7ca9-46f9-9010-83170ff5c8fc",
                                                                                                             "325571cd-c7fd-4933-ab3b-1cc1e17aaade",
                                                                                                             "7ac4fa5d-9944-4f12-a922-8ee2c9a11d6a",
                                                                                                             "86eeff57-6d0a-41f4-8e13-561dc74dfc86"))
                                                                              .notInDeviceFilters(Arrays.asList("585225fc-0a21-4a49-a05f-6fd514df89cb",
                                                                                                                "f9ebfbea-de6d-4439-9a83-28b70536a2ec",
                                                                                                                "3764f9e9-6321-474f-9cf5-5082428c4748",
                                                                                                                "ea70918d-6399-4911-89b1-3cb4d61b960e",
                                                                                                                "e2bc372a-7e1e-468f-bdd2-24d591acd8a7",
                                                                                                                "1c9f9502-9d6f-411b-a864-302d94466ca4",
                                                                                                                "e0cc9283-fd0d-4403-92d5-1122ea18308c"))
                                                                              .inFinisheds(Arrays.asList(new Date(1558096102652L)))
                                                                              .notInFinisheds(Arrays.asList(new Date(1558096107949L),
                                                                                                            new Date(1558096109031L)))
                                                                              .lessThanFinished(new Date(1558096101613L))
                                                                              .greaterThanFinished(new Date(1558096103230L))
                                                                              .inStartedAts(Arrays.asList(new Date(1558096106189L),
                                                                                                          new Date(1558096109225L),
                                                                                                          new Date(1558096102131L),
                                                                                                          new Date(1558096109020L)))
                                                                              .notInStartedAts(Arrays.asList(new Date(1558096102464L),
                                                                                                             new Date(1558096105942L),
                                                                                                             new Date(1558096103841L),
                                                                                                             new Date(1558096103492L),
                                                                                                             new Date(1558096109777L),
                                                                                                             new Date(1558096108693L)))
                                                                              .lessThanStartedAt(new Date(1558096109911L))
                                                                              .greaterThanStartedAt(new Date(1558096101207L))
                                                                              .inWhens(Arrays.asList(new Date(1558096108521L),
                                                                                                     new Date(1558096101723L),
                                                                                                     new Date(1558096108601L),
                                                                                                     new Date(1558096102716L),
                                                                                                     new Date(1558096108980L),
                                                                                                     new Date(1558096109270L),
                                                                                                     new Date(1558096102465L)))
                                                                              .notInWhens(Arrays.asList(new Date(1558096104419L),
                                                                                                        new Date(1558096106075L),
                                                                                                        new Date(1558096104985L),
                                                                                                        new Date(1558096101731L),
                                                                                                        new Date(1558096104264L),
                                                                                                        new Date(1558096104581L),
                                                                                                        new Date(1558096108772L),
                                                                                                        new Date(1558096109233L)))
                                                                              .lessThanWhen(new Date(1558096102566L))
                                                                              .greaterThanWhen(new Date(1558096105493L))
                                                                              .inUpdatedAts(Arrays.asList(new Date(1558096109081L),
                                                                                                          new Date(1558096107265L),
                                                                                                          new Date(1558096102704L),
                                                                                                          new Date(1558096103234L),
                                                                                                          new Date(1558096108693L),
                                                                                                          new Date(1558096108278L)))
                                                                              .notInUpdatedAts(Arrays.asList(new Date(1558096105290L),
                                                                                                             new Date(1558096106291L),
                                                                                                             new Date(1558096104759L),
                                                                                                             new Date(1558096105530L),
                                                                                                             new Date(1558096109531L),
                                                                                                             new Date(1558096107741L),
                                                                                                             new Date(1558096109636L),
                                                                                                             new Date(1558096103992L)))
                                                                              .lessThanUpdatedAt(new Date(1558096104574L))
                                                                              .greaterThanUpdatedAt(new Date(1558096107763L))
                                                                              .equalToRootManifestId("709e99be-93d5-45e9-925c-8a5dfea5f561")
                                                                              .notEqualToRootManifestId("e192cb40-ff28-4ab9-91da-ed91d486644d")
                                                                              .inRootManifestIds(Arrays.asList("c5b9511c-3883-4afa-b472-756f1d2867c2",
                                                                                                               "e81d44a5-9147-47fb-8e3c-0299b45d4c0f",
                                                                                                               "e6d00b48-0a01-4736-b70c-c18f3b6c8e16"))
                                                                              .notInRootManifestIds(Arrays.asList("c82121cf-3283-4c52-a88a-c0f717ec7302",
                                                                                                                  "8c5288f2-94bc-43b2-90ea-9633768b6089",
                                                                                                                  "d8c316c5-afb1-4895-a031-22456a6189bc",
                                                                                                                  "5b6d45f5-8fac-4262-a831-2d129bba9dfa"))
                                                                              .equalToDescription("8e29e37d-73d5-44df-b1c3-4d4ee482743e")
                                                                              .notEqualToDescription("a413b59e-53fb-4aba-8425-e0fd23e65ae7")
                                                                              .inDescriptions(Arrays.asList("ce695d00-60c1-4021-b0b2-5fbca47e9ad1",
                                                                                                            "69506f11-033d-465e-a068-f9a09dbdfcf0",
                                                                                                            "ef1c4243-f0fa-4ac2-b6c7-fb9f184b810c",
                                                                                                            "06a71b48-2086-49f5-bca0-d99c997e78fd",
                                                                                                            "dd0468b0-9ec6-45e4-b32b-48941612c36b",
                                                                                                            "1daf7337-e259-479a-aa8c-39892467c7c0",
                                                                                                            "84fcf379-cd65-4141-8fc9-6b3758307c89"))
                                                                              .notInDescriptions(Arrays.asList("28fc05ba-1121-4c9d-a3be-045676d86b1e",
                                                                                                               "d30b9896-c01c-4ffe-b26c-172056cc302a",
                                                                                                               "85d2ba00-86b1-4eeb-8308-a17c6c99efd2"));
            assertTrue(option.hasFilters());
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1558096104761L)),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1558096110798L), new Date(1558096105542L), new Date(1558096101028L),
                                       new Date(1558096109794L), new Date(1558096105925L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.LESS_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1558096105183L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1558096108042L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME, FilterOperator.EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("330a6504-de36-4b5a-ad92-5713b61c6a8b",
                         ListOptionsEncoder.encodeSingleEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME,
                                                                    String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("03b10a45-4a07-4477-9806-fa272de8e849",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME,
                                                                       String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME, FilterOperator.IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("d2060bef-9eea-4822-90a9-d71ef3b97eb3", "f9a6381f-a94c-41ff-b7fe-bef5a051eef3",
                                       "5b85ad9a-daa6-408c-9dbd-55cad2bac150", "56b3e252-0456-44a3-9b38-db05cfeb4166",
                                       "08af32aa-bc9a-40f2-a892-4cd556d6dbd2", "a0044afb-4749-465d-9a23-15ec582db075",
                                       "6424f8f3-98b1-45f7-98e6-9687b96f064f"),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("b560ac5d-4253-4c73-95c0-fb3f8c6caa38", "5e613bcc-647b-4999-a452-fd44699497cf",
                                       "95597427-ef80-424e-b72c-9b7e30c0905f", "1e0f5508-b3df-4816-b307-8b6f4b1de19b",
                                       "89e5974d-3c3d-4609-85bb-8f1ea8c72943", "5d8197c7-a438-4a42-a906-77de7ded335b",
                                       "c905c581-27a1-49c2-99fa-0a781962680f", "d89e1605-7e0c-4d20-838b-e1e4f8640a06",
                                       "9a3b4384-47de-4c96-8c75-71ef2f4e465f"),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID, FilterOperator.EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("49d28764-e318-480b-ba4b-5cf980bb1e93",
                         ListOptionsEncoder.encodeSingleEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("a30f0e5e-f33f-45b1-81db-1ac397821761",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID, FilterOperator.IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("e377eac2-36f8-42dd-8d2b-fece6f3bc052"),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID, List.class,
                                                                 option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("61f777ee-4375-44f4-ab31-b4cfccb29900", "2822af3b-a1a0-46a6-a064-a0c7181757b2"),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER, FilterOperator.EQUAL));
            assertNotNull(option.getDeviceFilterFilters());
            assertEquals("02e1cb4d-b687-4fe2-97d8-82076e24c8b9",
                         ListOptionsEncoder.encodeSingleEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER,
                                                                    String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDeviceFilterFilters());
            assertEquals("b5e68a54-6294-4a04-9778-7a0454cfd29b",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER,
                                                                       String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER, FilterOperator.IN));
            assertNotNull(option.getDeviceFilterFilters());
            assertEquals(Arrays.asList("700ebd13-7ca9-46f9-9010-83170ff5c8fc", "325571cd-c7fd-4933-ab3b-1cc1e17aaade",
                                       "7ac4fa5d-9944-4f12-a922-8ee2c9a11d6a", "86eeff57-6d0a-41f4-8e13-561dc74dfc86"),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER, FilterOperator.NOT_IN));
            assertNotNull(option.getDeviceFilterFilters());
            assertEquals(Arrays.asList("585225fc-0a21-4a49-a05f-6fd514df89cb", "f9ebfbea-de6d-4439-9a83-28b70536a2ec",
                                       "3764f9e9-6321-474f-9cf5-5082428c4748", "ea70918d-6399-4911-89b1-3cb4d61b960e",
                                       "e2bc372a-7e1e-468f-bdd2-24d591acd8a7", "1c9f9502-9d6f-411b-a864-302d94466ca4",
                                       "e0cc9283-fd0d-4403-92d5-1122ea18308c"),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED, FilterOperator.IN));
            assertNotNull(option.getFinishedFilters());
            assertEquals(Arrays.asList(new Date(1558096102652L)),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED, FilterOperator.NOT_IN));
            assertNotNull(option.getFinishedFilters());
            assertEquals(Arrays.asList(new Date(1558096107949L), new Date(1558096109031L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED, FilterOperator.LESS_THAN));
            assertNotNull(option.getFinishedFilters());
            assertEquals(new Date(1558096101613L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED, FilterOperator.GREATER_THAN));
            assertNotNull(option.getFinishedFilters());
            assertEquals(new Date(1558096103230L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT, FilterOperator.IN));
            assertNotNull(option.getStartedAtFilters());
            assertEquals(Arrays.asList(new Date(1558096106189L), new Date(1558096109225L), new Date(1558096102131L),
                                       new Date(1558096109020L)),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getStartedAtFilters());
            assertEquals(Arrays.asList(new Date(1558096102464L), new Date(1558096105942L), new Date(1558096103841L),
                                       new Date(1558096103492L), new Date(1558096109777L), new Date(1558096108693L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT, FilterOperator.LESS_THAN));
            assertNotNull(option.getStartedAtFilters());
            assertEquals(new Date(1558096109911L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getStartedAtFilters());
            assertEquals(new Date(1558096101207L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN, FilterOperator.IN));
            assertNotNull(option.getWhenFilters());
            assertEquals(Arrays.asList(new Date(1558096108521L), new Date(1558096101723L), new Date(1558096108601L),
                                       new Date(1558096102716L), new Date(1558096108980L), new Date(1558096109270L),
                                       new Date(1558096102465L)),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN, FilterOperator.NOT_IN));
            assertNotNull(option.getWhenFilters());
            assertEquals(Arrays.asList(new Date(1558096104419L), new Date(1558096106075L), new Date(1558096104985L),
                                       new Date(1558096101731L), new Date(1558096104264L), new Date(1558096104581L),
                                       new Date(1558096108772L), new Date(1558096109233L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN, FilterOperator.LESS_THAN));
            assertNotNull(option.getWhenFilters());
            assertEquals(new Date(1558096102566L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN, FilterOperator.GREATER_THAN));
            assertNotNull(option.getWhenFilters());
            assertEquals(new Date(1558096105493L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1558096109081L), new Date(1558096107265L), new Date(1558096102704L),
                                       new Date(1558096103234L), new Date(1558096108693L), new Date(1558096108278L)),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1558096105290L), new Date(1558096106291L), new Date(1558096104759L),
                                       new Date(1558096105530L), new Date(1558096109531L), new Date(1558096107741L),
                                       new Date(1558096109636L), new Date(1558096103992L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.LESS_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1558096104574L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1558096107763L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID,
                                        FilterOperator.EQUAL));
            assertNotNull(option.getRootManifestIdFilters());
            assertEquals("709e99be-93d5-45e9-925c-8a5dfea5f561",
                         ListOptionsEncoder.encodeSingleEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getRootManifestIdFilters());
            assertEquals("e192cb40-ff28-4ab9-91da-ed91d486644d",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID, FilterOperator.IN));
            assertNotNull(option.getRootManifestIdFilters());
            assertEquals(Arrays.asList("c5b9511c-3883-4afa-b472-756f1d2867c2", "e81d44a5-9147-47fb-8e3c-0299b45d4c0f",
                                       "e6d00b48-0a01-4736-b70c-c18f3b6c8e16"),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID,
                                        FilterOperator.NOT_IN));
            assertNotNull(option.getRootManifestIdFilters());
            assertEquals(Arrays.asList("c82121cf-3283-4c52-a88a-c0f717ec7302", "8c5288f2-94bc-43b2-90ea-9633768b6089",
                                       "d8c316c5-afb1-4895-a031-22456a6189bc", "5b6d45f5-8fac-4262-a831-2d129bba9dfa"),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("8e29e37d-73d5-44df-b1c3-4d4ee482743e",
                         ListOptionsEncoder.encodeSingleEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("a413b59e-53fb-4aba-8425-e0fd23e65ae7",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                       String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("ce695d00-60c1-4021-b0b2-5fbca47e9ad1", "69506f11-033d-465e-a068-f9a09dbdfcf0",
                                       "ef1c4243-f0fa-4ac2-b6c7-fb9f184b810c", "06a71b48-2086-49f5-bca0-d99c997e78fd",
                                       "dd0468b0-9ec6-45e4-b32b-48941612c36b", "1daf7337-e259-479a-aa8c-39892467c7c0",
                                       "84fcf379-cd65-4141-8fc9-6b3758307c89"),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("28fc05ba-1121-4c9d-a3be-045676d86b1e", "d30b9896-c01c-4ffe-b26c-172056cc302a",
                                       "85d2ba00-86b1-4eeb-8308-a17c6c99efd2"),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    List.class, option));
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            UpdateCampaignListOptions updatecampaignlistoptions1 = new UpdateCampaignListOptions(Integer.valueOf(-45),
                                                                                                 Long.valueOf(-14),
                                                                                                 Order.getDefault(),
                                                                                                 "e5aee476-5f7b-4ddc-b4b5-dc71d8a07cc8",
                                                                                                 null, null);
            UpdateCampaignListOptions updatecampaignlistoptions2 = new UpdateCampaignListOptions(Integer.valueOf(-45),
                                                                                                 Long.valueOf(-14),
                                                                                                 Order.getDefault(),
                                                                                                 "e5aee476-5f7b-4ddc-b4b5-dc71d8a07cc8",
                                                                                                 null, null);
            assertNotNull(updatecampaignlistoptions1);
            assertNotNull(updatecampaignlistoptions2);
            assertNotSame(updatecampaignlistoptions2, updatecampaignlistoptions1);
            assertEquals(updatecampaignlistoptions2, updatecampaignlistoptions1);
            assertEquals(updatecampaignlistoptions2.hashCode(), updatecampaignlistoptions1.hashCode());
            int hashCode = updatecampaignlistoptions1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, updatecampaignlistoptions1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            UpdateCampaignListOptions updatecampaignlistoptions1 = new UpdateCampaignListOptions(Integer.valueOf(35),
                                                                                                 Long.valueOf(-71),
                                                                                                 Order.getDefault(),
                                                                                                 "07909d01-4302-4178-abf4-a0dd4c217559",
                                                                                                 null, null);
            UpdateCampaignListOptions updatecampaignlistoptions2 = new UpdateCampaignListOptions(Integer.valueOf(35),
                                                                                                 Long.valueOf(-71),
                                                                                                 Order.getDefault(),
                                                                                                 "07909d01-4302-4178-abf4-a0dd4c217559",
                                                                                                 null, null);
            UpdateCampaignListOptions updatecampaignlistoptions3 = new UpdateCampaignListOptions(Integer.valueOf(-19),
                                                                                                 Long.valueOf(29),
                                                                                                 Order.getDefault(),
                                                                                                 "ba1038e7-580b-433a-8808-07bf88c4e932",
                                                                                                 null, null);
            assertNotNull(updatecampaignlistoptions1);
            assertNotNull(updatecampaignlistoptions2);
            assertNotNull(updatecampaignlistoptions3);
            assertNotSame(updatecampaignlistoptions2, updatecampaignlistoptions1);
            assertNotSame(updatecampaignlistoptions3, updatecampaignlistoptions1);
            assertEquals(updatecampaignlistoptions2, updatecampaignlistoptions1);
            assertEquals(updatecampaignlistoptions2, updatecampaignlistoptions1);
            assertEquals(updatecampaignlistoptions1, updatecampaignlistoptions2);
            assertEquals(updatecampaignlistoptions1, updatecampaignlistoptions1);
            assertFalse(updatecampaignlistoptions1.equals(null));
            assertNotEquals(updatecampaignlistoptions3, updatecampaignlistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
