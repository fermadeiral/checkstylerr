// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEvents.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEvents {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1558096101268L), null,
                                                          new Date(1558096101550L),
                                                          "ee41217d-838f-4f9b-b66f-d436839c8805",
                                                          "a0da0727-ff5c-4d40-bee8-5f74e5eaafdb",
                                                          "12116ad2-ea87-4a53-b103-2b9be0bbf3cd",
                                                          "d460e880-59e3-4834-ac1b-68481a1de01e",
                                                          "c4e3709d-f015-40d5-8db4-a19b292ad9de",
                                                          "e145c995-9db4-4b23-8c3a-3d9d8a462df6", false);
            DeviceEvents deviceevents2 = deviceevents1.clone();
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1558096102465L), null,
                                                          new Date(1558096109807L),
                                                          "a5881a87-22ac-4dae-8ee5-0199e193d0af",
                                                          "cf612080-d426-4a37-87c0-2f2d126b51cc",
                                                          "644b1fcd-b24d-48b5-a7d9-502730e9863e",
                                                          "767d7a8f-6aef-46be-ab83-b68babf74015",
                                                          "4b57b365-57c3-4184-a509-82f4c47b9838",
                                                          "4e288faf-4e13-4b0e-9c96-0d38649e3d39", false);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1558096102465L), null,
                                                          new Date(1558096109807L),
                                                          "a5881a87-22ac-4dae-8ee5-0199e193d0af",
                                                          "cf612080-d426-4a37-87c0-2f2d126b51cc",
                                                          "644b1fcd-b24d-48b5-a7d9-502730e9863e",
                                                          "767d7a8f-6aef-46be-ab83-b68babf74015",
                                                          "4b57b365-57c3-4184-a509-82f4c47b9838",
                                                          "4e288faf-4e13-4b0e-9c96-0d38649e3d39", false);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2.hashCode(), deviceevents1.hashCode());
            int hashCode = deviceevents1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceevents1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEvents deviceevents = new DeviceEvents(null, new Date(1558096102596L), null, new Date(1558096103613L),
                                                     "2d01b7cc-f304-4f28-b26b-63266de3caa2",
                                                     "485c4517-487d-4294-9c02-9e66e14d6ec4",
                                                     "5683e5cc-12f3-4555-b0b6-c896a430a985",
                                                     "4be5ae3f-d8fd-4422-976b-c01ade8130c9",
                                                     "db43bfab-eb9e-4291-8fb5-a26e8949f2a8",
                                                     "8a7c8d5b-4301-44d4-aad7-7989fa082d6f", true);
        assertTrue(deviceevents.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1558096106926L), null,
                                                          new Date(1558096107062L),
                                                          "a7ad6a09-d20f-47ab-8e7b-87bd91b6bee2",
                                                          "cfdf2d47-2390-4678-9421-8e1f7635e2a2",
                                                          "c6b3e064-6b02-44d7-b44a-0e44e3780a4f",
                                                          "548c6a2a-390b-44cc-b637-179add0ed733",
                                                          "a7446080-8e5c-477e-97b5-435c913e95ae",
                                                          "88f309e8-982b-4bce-8fd0-7a825140650c", true);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1558096106926L), null,
                                                          new Date(1558096107062L),
                                                          "a7ad6a09-d20f-47ab-8e7b-87bd91b6bee2",
                                                          "cfdf2d47-2390-4678-9421-8e1f7635e2a2",
                                                          "c6b3e064-6b02-44d7-b44a-0e44e3780a4f",
                                                          "548c6a2a-390b-44cc-b637-179add0ed733",
                                                          "a7446080-8e5c-477e-97b5-435c913e95ae",
                                                          "88f309e8-982b-4bce-8fd0-7a825140650c", true);
            DeviceEvents deviceevents3 = new DeviceEvents(null, new Date(1558096103229L), null,
                                                          new Date(1558096103406L),
                                                          "40b2036d-aa1e-48e5-94f3-62c9984cd16c",
                                                          "a8f35875-d679-4668-b186-f7afb06bfe3b",
                                                          "07ca4a81-21c0-4ade-81a1-399e5c21fd78",
                                                          "75211686-3ce7-467f-9fbb-aea6573be323",
                                                          "cb645bf3-6bfe-4bc1-ad7b-e62140dc8e7c",
                                                          "c65da86b-7a98-491d-bd44-7d5324451490", true);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotNull(deviceevents3);
            assertNotSame(deviceevents2, deviceevents1);
            assertNotSame(deviceevents3, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents1, deviceevents2);
            assertEquals(deviceevents1, deviceevents1);
            assertFalse(deviceevents1.equals(null));
            assertNotEquals(deviceevents3, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
