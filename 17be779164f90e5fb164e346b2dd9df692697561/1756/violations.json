[
    {
        "line": "4",
        "severity": "error",
        "message": "Line has trailing spaces.",
        "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
    },
    {
        "line": "15",
        "severity": "error",
        "message": "Line has trailing spaces.",
        "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
    },
    {
        "line": "27",
        "severity": "error",
        "message": "'package' should be separated from previous statement.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
    },
    {
        "line": "39",
        "severity": "error",
        "message": "Wrong lexicographical order for 'gov.hhs.fha.nhinc.common.nhinccommon.AssertionType' import. Should be before 'org.mockito.Mockito.when'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.CustomImportOrderCheck"
    },
    {
        "line": "40",
        "severity": "error",
        "message": "Wrong lexicographical order for 'gov.hhs.fha.nhinc.event.error.ErrorEventException' import. Should be before 'org.mockito.Mockito.when'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.CustomImportOrderCheck"
    },
    {
        "line": "41",
        "severity": "error",
        "message": "Wrong lexicographical order for 'gov.hhs.fha.nhinc.nhinclib.NhincConstants' import. Should be before 'org.mockito.Mockito.when'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.CustomImportOrderCheck"
    },
    {
        "line": "42",
        "severity": "error",
        "message": "Wrong lexicographical order for 'gov.hhs.fha.nhinc.webserviceproxy.WebServiceProxyHelper' import. Should be before 'org.mockito.Mockito.when'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.CustomImportOrderCheck"
    },
    {
        "line": "43",
        "severity": "error",
        "message": "Wrong lexicographical order for 'org.junit.Test' import. Should be before 'org.mockito.Mockito.when'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.CustomImportOrderCheck"
    },
    {
        "line": "45",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck"
    },
    {
        "line": "50",
        "severity": "error",
        "message": "Line is longer than 120 characters (found 138).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "50",
        "column": "92",
        "severity": "error",
        "message": "',' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "52",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "59",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "65",
        "severity": "error",
        "message": "Line is longer than 120 characters (found 170).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "81",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "83",
        "column": "22",
        "severity": "error",
        "message": "Name 'a0_URL' must match pattern '^[a-z][a-zA-Z0-9]*$'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.naming.LocalFinalVariableNameCheck"
    },
    {
        "line": "84",
        "column": "22",
        "severity": "error",
        "message": "Name 'a1_URL' must match pattern '^[a-z][a-zA-Z0-9]*$'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.naming.LocalFinalVariableNameCheck"
    },
    {
        "line": "89",
        "severity": "error",
        "message": "Line is longer than 120 characters (found 153).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "90",
        "severity": "error",
        "message": "Line is longer than 120 characters (found 153).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "99",
        "column": "84",
        "severity": "error",
        "message": "',' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "104",
        "column": "84",
        "severity": "error",
        "message": "',' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "109",
        "column": "84",
        "severity": "error",
        "message": "',' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    }
]