// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model ParentAccount.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestParentAccount {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("16554.574f6@bb29b.me",
                                                             "5306182d-b667-4135-89a8-0b93cb869c38",
                                                             "bd1f89fbddbde18d4244b748ca1d250b");
            ParentAccount parentaccount2 = parentaccount1.clone();
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotSame(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("6a69e.0224c@51468.me",
                                                             "8e8325ef-3040-4bc8-bc5a-dd4590dd0b1a",
                                                             "bd1f89fbddbde18d4244b748ca1d250b");
            ParentAccount parentaccount2 = new ParentAccount("6a69e.0224c@51468.me",
                                                             "8e8325ef-3040-4bc8-bc5a-dd4590dd0b1a",
                                                             "bd1f89fbddbde18d4244b748ca1d250b");
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotSame(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount2.hashCode(), parentaccount1.hashCode());
            int hashCode = parentaccount1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, parentaccount1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ParentAccount parentaccount = new ParentAccount("5ada3.e72b4@ab886.me", "62dd9afd-af85-4be6-857e-2c2f2b7850bf",
                                                        "bd1f89fbddbde18d4244b748ca1d250b");
        assertTrue(parentaccount.isValid());
        ParentAccount parentaccountInvalid = new ParentAccount("à¢µ>î®šèž†ë€Ÿ>â??à¶³3ç©·ï›žé‰“ï¸?9îƒ§\u001aà¡œî¥¬â‚­\u001d1èµŸ2ë ¿ç¢•1è?µï??\u0006?à¸¦>é•…&í˜˜Ý±\u0001>?æº†>?&Û‘àº°Ü¢áƒ¡>è±·î?µà«¶í–“ä¿¼à¤«é‘­ì¨?å·‘>>?ï?¦á´Ž\u0018",
                                                               "446791b4-4758-47ed-859f-b5605879dd128af5f884-03a7-472b-ae48-c50dad4a654f4a46aa5d-f215-4fc9-b80b-3e1d975712de",
                                                               "33D\u0007663æ¸§3F!\u00003îŒ½$$?R3YáŸ²636\u0011ì§¢3ã©º33àª„6\u0014\u0001\u001cK'+ë™½ë²™\u001c6\u0002\u0004ä‚…=O3\u00133 Xîª‡\u0010à¡›6_36Fá«µ\u001736");
        assertFalse(parentaccountInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("24dc2.59801@07033.fr",
                                                             "0bf345eb-0eb5-4939-ae76-4baaa9e46400",
                                                             "bd1f89fbddbde18d4244b748ca1d250b");
            ParentAccount parentaccount2 = new ParentAccount("24dc2.59801@07033.fr",
                                                             "0bf345eb-0eb5-4939-ae76-4baaa9e46400",
                                                             "bd1f89fbddbde18d4244b748ca1d250b");
            ParentAccount parentaccount3 = new ParentAccount("d2a8c.a47e3@24ad6.fr",
                                                             "dba46cbf-1f29-4d5d-944c-c420219bc19a",
                                                             "bd1f89fbddbde18d4244b748ca1d250b");
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotNull(parentaccount3);
            assertNotSame(parentaccount2, parentaccount1);
            assertNotSame(parentaccount3, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount1, parentaccount2);
            assertEquals(parentaccount1, parentaccount1);
            assertFalse(parentaccount1.equals(null));
            assertNotEquals(parentaccount3, parentaccount1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
