// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.deviceupdate.model;

import static org.junit.Assert.*;

import com.arm.mbed.cloud.sdk.common.Order;
import com.arm.mbed.cloud.sdk.common.listing.ListOptionsEncoder;
import com.arm.mbed.cloud.sdk.common.listing.filtering.FilterOperator;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import org.junit.Test;

/**
 * Unit tests for Model FirmwareManifestListOptions.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestFirmwareManifestListOptions {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            FirmwareManifestListOptions firmwaremanifestlistoptions1 = new FirmwareManifestListOptions(Integer.valueOf(55),
                                                                                                       Long.valueOf(122),
                                                                                                       Order.getDefault(),
                                                                                                       "0ed1ea43-83c0-4eae-8b3d-5cf7b5a9f10c",
                                                                                                       null, null);
            FirmwareManifestListOptions firmwaremanifestlistoptions2 = firmwaremanifestlistoptions1.clone();
            assertNotNull(firmwaremanifestlistoptions1);
            assertNotNull(firmwaremanifestlistoptions2);
            assertNotSame(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the filters method.
     */
    @SuppressWarnings({ "boxing", "resource" })
    @Test
    public void testFilters() {
        try {
            FirmwareManifestListOptions option = new FirmwareManifestListOptions().inCreatedAts(Arrays.asList(new Date(1570127627368L),
                                                                                                              new Date(1570127623191L),
                                                                                                              new Date(1570127625134L)))
                                                                                  .notInCreatedAts(Arrays.asList(new Date(1570127623659L),
                                                                                                                 new Date(1570127621865L),
                                                                                                                 new Date(1570127619825L),
                                                                                                                 new Date(1570127620088L),
                                                                                                                 new Date(1570127622589L),
                                                                                                                 new Date(1570127628222L),
                                                                                                                 new Date(1570127619845L),
                                                                                                                 new Date(1570127628167L)))
                                                                                  .lessThanCreatedAt(new Date(1570127625518L))
                                                                                  .greaterThanCreatedAt(new Date(1570127626060L))
                                                                                  .equalToName("49e9cbb3-b508-4c87-ba2b-ff8517ae5e2c")
                                                                                  .notEqualToName("e2fdc2b1-fed4-4603-861d-96dfd11a97b1")
                                                                                  .inNames(Arrays.asList("2ce911b2-0846-491b-b056-55283a182962",
                                                                                                         "e256a7fa-667c-4ac4-aac1-29a64e267e2e"))
                                                                                  .notInNames(Arrays.asList("3a621b8b-3d50-4dc4-923d-7b683eed83c5",
                                                                                                            "ba38604d-49a9-4d54-a816-27d03914d7ca",
                                                                                                            "b95dc75a-da08-4b1e-8ddc-2bdb9fb8fd51"))
                                                                                  .equalToId("4cf53376-1941-4b58-8c6f-7f6b1778b9a7")
                                                                                  .notEqualToId("c8261bf2-f0d4-4ecd-baa8-d35dfd96e5ea")
                                                                                  .inIds(Arrays.asList("404ed352-e3b1-4ab0-bded-31ca6fda91b0",
                                                                                                       "3679374c-6a33-4e9c-8873-1c5c66f57c34",
                                                                                                       "e4e2067b-7a29-42ae-8e1f-8f3bfa7b0ac9",
                                                                                                       "bed7cbd2-cc60-43ab-b408-8088f41dfc1c",
                                                                                                       "5b3f855b-c2e4-4304-8db1-08c1d02b0bb6",
                                                                                                       "77dcd38f-f08d-4d21-a2e8-4ad85153b406",
                                                                                                       "abd5a9d7-f291-4707-9f23-b29d5c1ce8e4",
                                                                                                       "ff395ec0-0104-4332-863b-23c4bde52676"))
                                                                                  .notInIds(Arrays.asList("528947d9-74a8-4c2a-bb19-1d1f038ca0f4",
                                                                                                          "5026ca48-ef71-4554-b4a5-f3cd962e7138",
                                                                                                          "2c74df1e-d592-436f-8289-aa1bf66b95f1",
                                                                                                          "6dc369c0-c597-4d3b-b941-62c43cb71a87",
                                                                                                          "00ccefaa-216e-4c70-b64d-0f1ae3a65c96",
                                                                                                          "fd796160-cf5e-4631-b505-a4eb3089330a",
                                                                                                          "c0fc05c1-1183-4a4d-b404-0ddd1cf6777d"))
                                                                                  .equalToDatafileUrl("17e2035c-8899-407d-b416-0904b949d83a")
                                                                                  .notEqualToDatafileUrl("99834d28-14b8-4c56-9fb4-fe0ddcb0fac7")
                                                                                  .inDatafileUrls(Arrays.asList("cb26b544-ac8f-4216-94a8-040764435d60",
                                                                                                                "794c9b4f-df95-4fd4-96bb-00fc816d979e",
                                                                                                                "52c959f6-ebb8-4b0b-8ce3-347c70373ac7",
                                                                                                                "4cfd2d57-f362-4cba-b773-16b2e56faa30",
                                                                                                                "458c3865-04a3-4c03-96f8-829a066b565a",
                                                                                                                "7a3e9006-b481-40b1-9d03-beb93ede46a1",
                                                                                                                "6cfa4e7a-7ec4-4ba0-827f-6fea4ca8fe8a",
                                                                                                                "d72a1e78-8ab0-43a1-8d07-18211e1c019c"))
                                                                                  .notInDatafileUrls(Arrays.asList("92ced897-8c99-4940-beb2-818c0483d028"))
                                                                                  .equalToDatafileSize(Long.valueOf(93))
                                                                                  .notEqualToDatafileSize(Long.valueOf(59))
                                                                                  .inDatafileSizes(Arrays.asList(Long.valueOf(-32),
                                                                                                                 Long.valueOf(-125),
                                                                                                                 Long.valueOf(81),
                                                                                                                 Long.valueOf(95),
                                                                                                                 Long.valueOf(-27),
                                                                                                                 Long.valueOf(-12),
                                                                                                                 Long.valueOf(123),
                                                                                                                 Long.valueOf(50)))
                                                                                  .notInDatafileSizes(Arrays.asList(Long.valueOf(24),
                                                                                                                    Long.valueOf(93)))
                                                                                  .equalToDeviceClass("a1db8fa9-717e-48ea-aedb-3f27162741b3")
                                                                                  .notEqualToDeviceClass("e7da0115-a2c0-41b6-a5a7-76ae20a6c1b9")
                                                                                  .inDeviceClass(Arrays.asList("53b7ef15-1b63-4a81-a6c4-75b78b3c8df4",
                                                                                                               "eb6d0264-67a5-4b76-9d07-d777e2ab6259",
                                                                                                               "4459f63c-afd9-4df8-9ab1-d99813da1592",
                                                                                                               "e85dc4b1-6ff7-4041-8e70-b92245021848",
                                                                                                               "afeb92fe-eda6-4a80-8cfd-7d4f046c1134",
                                                                                                               "840769a8-f757-42ff-aee8-496fa3581136"))
                                                                                  .notInDeviceClass(Arrays.asList("260ba825-2314-4b1b-9e53-82a53407187d",
                                                                                                                  "005a5399-08cc-4a14-b9bd-48e35d935369",
                                                                                                                  "101f80cc-0a94-4437-b839-86b97ad95978",
                                                                                                                  "19a2c78d-5b92-4613-984b-dffeee183c4e",
                                                                                                                  "d06b9a36-332c-43fc-b7c9-68c85c76f11c",
                                                                                                                  "56576185-cf0a-4143-90b0-29fc1b1d9bc3",
                                                                                                                  "89fe08fe-fb45-4771-937d-a385d7398c08",
                                                                                                                  "e29d458a-d88a-49a9-8018-6e76928f93eb"))
                                                                                  .inTimestamps(Arrays.asList(new Date(1570127624780L),
                                                                                                              new Date(1570127619584L)))
                                                                                  .notInTimestamps(Arrays.asList(new Date(1570127620955L),
                                                                                                                 new Date(1570127628320L),
                                                                                                                 new Date(1570127625321L),
                                                                                                                 new Date(1570127627615L)))
                                                                                  .lessThanTimestamp(new Date(1570127621298L))
                                                                                  .greaterThanTimestamp(new Date(1570127624855L))
                                                                                  .inUpdatedAts(Arrays.asList(new Date(1570127624402L),
                                                                                                              new Date(1570127626248L),
                                                                                                              new Date(1570127621667L)))
                                                                                  .notInUpdatedAts(Arrays.asList(new Date(1570127621929L),
                                                                                                                 new Date(1570127625147L),
                                                                                                                 new Date(1570127626985L),
                                                                                                                 new Date(1570127628858L),
                                                                                                                 new Date(1570127622305L),
                                                                                                                 new Date(1570127628305L),
                                                                                                                 new Date(1570127620797L),
                                                                                                                 new Date(1570127620327L)))
                                                                                  .lessThanUpdatedAt(new Date(1570127624834L))
                                                                                  .greaterThanUpdatedAt(new Date(1570127628395L))
                                                                                  .equalToDescription("8a99f564-6000-4596-ab89-c7141794c91f")
                                                                                  .notEqualToDescription("46d5e8b9-29c5-43e9-a120-1528a59658e4")
                                                                                  .inDescriptions(Arrays.asList("34728295-2478-4414-8af4-b43ec90e8bbb",
                                                                                                                "597c16a6-5913-4b81-89dc-11c09da3f672",
                                                                                                                "7d40528c-401e-4bdf-ab2f-35aa1cd0f156",
                                                                                                                "f8bc8653-8af2-4d0f-8bf6-0c9dcea7c504",
                                                                                                                "f7b1d7d6-f536-4747-9e7a-66596ea32636",
                                                                                                                "87961826-6952-48d9-b0f4-b39b7fd1e3f5",
                                                                                                                "11196fd1-6fc7-4025-9901-580d01b4ad64"))
                                                                                  .notInDescriptions(Arrays.asList("c59c6d02-f5ec-47ec-b0e7-51c1875db841",
                                                                                                                   "3fd45f04-86e4-4212-928c-9cfc607f3ba9",
                                                                                                                   "67735eb2-74e3-4b44-9286-89c08419d0f6"));
            assertTrue(option.hasFilters());
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1570127627368L), new Date(1570127623191L), new Date(1570127625134L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1570127623659L), new Date(1570127621865L), new Date(1570127619825L),
                                       new Date(1570127620088L), new Date(1570127622589L), new Date(1570127628222L),
                                       new Date(1570127619845L), new Date(1570127628167L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                        FilterOperator.LESS_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1570127625518L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1570127626060L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME, FilterOperator.EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("49e9cbb3-b508-4c87-ba2b-ff8517ae5e2c",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("e2fdc2b1-fed4-4603-861d-96dfd11a97b1",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME, FilterOperator.IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("2ce911b2-0846-491b-b056-55283a182962", "e256a7fa-667c-4ac4-aac1-29a64e267e2e"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("3a621b8b-3d50-4dc4-923d-7b683eed83c5", "ba38604d-49a9-4d54-a816-27d03914d7ca",
                                       "b95dc75a-da08-4b1e-8ddc-2bdb9fb8fd51"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID, FilterOperator.EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("4cf53376-1941-4b58-8c6f-7f6b1778b9a7",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("c8261bf2-f0d4-4ecd-baa8-d35dfd96e5ea",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID, FilterOperator.IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("404ed352-e3b1-4ab0-bded-31ca6fda91b0", "3679374c-6a33-4e9c-8873-1c5c66f57c34",
                                       "e4e2067b-7a29-42ae-8e1f-8f3bfa7b0ac9", "bed7cbd2-cc60-43ab-b408-8088f41dfc1c",
                                       "5b3f855b-c2e4-4304-8db1-08c1d02b0bb6", "77dcd38f-f08d-4d21-a2e8-4ad85153b406",
                                       "abd5a9d7-f291-4707-9f23-b29d5c1ce8e4", "ff395ec0-0104-4332-863b-23c4bde52676"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("528947d9-74a8-4c2a-bb19-1d1f038ca0f4", "5026ca48-ef71-4554-b4a5-f3cd962e7138",
                                       "2c74df1e-d592-436f-8289-aa1bf66b95f1", "6dc369c0-c597-4d3b-b941-62c43cb71a87",
                                       "00ccefaa-216e-4c70-b64d-0f1ae3a65c96", "fd796160-cf5e-4631-b505-a4eb3089330a",
                                       "c0fc05c1-1183-4a4d-b404-0ddd1cf6777d"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("17e2035c-8899-407d-b416-0904b949d83a",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("99834d28-14b8-4c56-9fb4-fe0ddcb0fac7",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("cb26b544-ac8f-4216-94a8-040764435d60", "794c9b4f-df95-4fd4-96bb-00fc816d979e",
                                       "52c959f6-ebb8-4b0b-8ce3-347c70373ac7", "4cfd2d57-f362-4cba-b773-16b2e56faa30",
                                       "458c3865-04a3-4c03-96f8-829a066b565a", "7a3e9006-b481-40b1-9d03-beb93ede46a1",
                                       "6cfa4e7a-7ec4-4ba0-827f-6fea4ca8fe8a", "d72a1e78-8ab0-43a1-8d07-18211e1c019c"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("92ced897-8c99-4940-beb2-818c0483d028"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(93),
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    Long.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(59),
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                       Long.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(-32), Long.valueOf(-125), Long.valueOf(81), Long.valueOf(95),
                                       Long.valueOf(-27), Long.valueOf(-12), Long.valueOf(123), Long.valueOf(50)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                        FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(24), Long.valueOf(93)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS, FilterOperator.EQUAL));
            assertNotNull(option.getDeviceClassFilters());
            assertEquals("a1db8fa9-717e-48ea-aedb-3f27162741b3",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDeviceClassFilters());
            assertEquals("e7da0115-a2c0-41b6-a5a7-76ae20a6c1b9",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS, FilterOperator.IN));
            assertNotNull(option.getDeviceClassFilters());
            assertEquals(Arrays.asList("53b7ef15-1b63-4a81-a6c4-75b78b3c8df4", "eb6d0264-67a5-4b76-9d07-d777e2ab6259",
                                       "4459f63c-afd9-4df8-9ab1-d99813da1592", "e85dc4b1-6ff7-4041-8e70-b92245021848",
                                       "afeb92fe-eda6-4a80-8cfd-7d4f046c1134", "840769a8-f757-42ff-aee8-496fa3581136"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS, FilterOperator.NOT_IN));
            assertNotNull(option.getDeviceClassFilters());
            assertEquals(Arrays.asList("260ba825-2314-4b1b-9e53-82a53407187d", "005a5399-08cc-4a14-b9bd-48e35d935369",
                                       "101f80cc-0a94-4437-b839-86b97ad95978", "19a2c78d-5b92-4613-984b-dffeee183c4e",
                                       "d06b9a36-332c-43fc-b7c9-68c85c76f11c", "56576185-cf0a-4143-90b0-29fc1b1d9bc3",
                                       "89fe08fe-fb45-4771-937d-a385d7398c08", "e29d458a-d88a-49a9-8018-6e76928f93eb"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP, FilterOperator.IN));
            assertNotNull(option.getTimestampFilters());
            assertEquals(Arrays.asList(new Date(1570127624780L), new Date(1570127619584L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP, FilterOperator.NOT_IN));
            assertNotNull(option.getTimestampFilters());
            assertEquals(Arrays.asList(new Date(1570127620955L), new Date(1570127628320L), new Date(1570127625321L),
                                       new Date(1570127627615L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP, FilterOperator.LESS_THAN));
            assertNotNull(option.getTimestampFilters());
            assertEquals(new Date(1570127621298L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getTimestampFilters());
            assertEquals(new Date(1570127624855L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1570127624402L), new Date(1570127626248L), new Date(1570127621667L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1570127621929L), new Date(1570127625147L), new Date(1570127626985L),
                                       new Date(1570127628858L), new Date(1570127622305L), new Date(1570127628305L),
                                       new Date(1570127620797L), new Date(1570127620327L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                        FilterOperator.LESS_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1570127624834L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1570127628395L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("8a99f564-6000-4596-ab89-c7141794c91f",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("46d5e8b9-29c5-43e9-a120-1528a59658e4",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("34728295-2478-4414-8af4-b43ec90e8bbb", "597c16a6-5913-4b81-89dc-11c09da3f672",
                                       "7d40528c-401e-4bdf-ab2f-35aa1cd0f156", "f8bc8653-8af2-4d0f-8bf6-0c9dcea7c504",
                                       "f7b1d7d6-f536-4747-9e7a-66596ea32636", "87961826-6952-48d9-b0f4-b39b7fd1e3f5",
                                       "11196fd1-6fc7-4025-9901-580d01b4ad64"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("c59c6d02-f5ec-47ec-b0e7-51c1875db841", "3fd45f04-86e4-4212-928c-9cfc607f3ba9",
                                       "67735eb2-74e3-4b44-9286-89c08419d0f6"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    List.class, option));
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            FirmwareManifestListOptions firmwaremanifestlistoptions1 = new FirmwareManifestListOptions(Integer.valueOf(37),
                                                                                                       Long.valueOf(-44),
                                                                                                       Order.getDefault(),
                                                                                                       "46ae7a3b-ea15-48a4-b606-dee4d3033665",
                                                                                                       null, null);
            FirmwareManifestListOptions firmwaremanifestlistoptions2 = new FirmwareManifestListOptions(Integer.valueOf(37),
                                                                                                       Long.valueOf(-44),
                                                                                                       Order.getDefault(),
                                                                                                       "46ae7a3b-ea15-48a4-b606-dee4d3033665",
                                                                                                       null, null);
            assertNotNull(firmwaremanifestlistoptions1);
            assertNotNull(firmwaremanifestlistoptions2);
            assertNotSame(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2.hashCode(), firmwaremanifestlistoptions1.hashCode());
            int hashCode = firmwaremanifestlistoptions1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, firmwaremanifestlistoptions1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            FirmwareManifestListOptions firmwaremanifestlistoptions1 = new FirmwareManifestListOptions(Integer.valueOf(-37),
                                                                                                       Long.valueOf(112),
                                                                                                       Order.getDefault(),
                                                                                                       "3771d9e8-7640-407c-8b28-9dd39c13b820",
                                                                                                       null, null);
            FirmwareManifestListOptions firmwaremanifestlistoptions2 = new FirmwareManifestListOptions(Integer.valueOf(-37),
                                                                                                       Long.valueOf(112),
                                                                                                       Order.getDefault(),
                                                                                                       "3771d9e8-7640-407c-8b28-9dd39c13b820",
                                                                                                       null, null);
            FirmwareManifestListOptions firmwaremanifestlistoptions3 = new FirmwareManifestListOptions(Integer.valueOf(-107),
                                                                                                       Long.valueOf(72),
                                                                                                       Order.getDefault(),
                                                                                                       "3839b48d-f791-4d18-9a9e-566ed1af9904",
                                                                                                       null, null);
            assertNotNull(firmwaremanifestlistoptions1);
            assertNotNull(firmwaremanifestlistoptions2);
            assertNotNull(firmwaremanifestlistoptions3);
            assertNotSame(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertNotSame(firmwaremanifestlistoptions3, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions1, firmwaremanifestlistoptions2);
            assertEquals(firmwaremanifestlistoptions1, firmwaremanifestlistoptions1);
            assertFalse(firmwaremanifestlistoptions1.equals(null));
            assertNotEquals(firmwaremanifestlistoptions3, firmwaremanifestlistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
