// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEvents.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEvents {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1570127623593L), null,
                                                          new Date(1570127624252L),
                                                          "f5b4a5a4-5cae-4708-85b7-5943467f7a3d",
                                                          "00c0e205-eb80-4ec2-98a7-2c875038810c",
                                                          "fc694d17-f18d-4089-b355-0a217acf8ef3",
                                                          "80b9a48a-d9b1-4bc8-a9de-0ff33b849030",
                                                          "ec523ed9-ac87-4baf-b073-02901089cc0c",
                                                          "2c574073-63fd-4fe7-a891-fd8823453ade", false);
            DeviceEvents deviceevents2 = deviceevents1.clone();
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1570127617957L), null,
                                                          new Date(1570127621765L),
                                                          "e12d0b27-42d3-4599-b417-3a64e0d1a8e4",
                                                          "680e9b07-d1a0-41e9-abd6-9b5258f4a38e",
                                                          "fecf7f91-ccd3-4575-b2c8-d72ee3a8876e",
                                                          "cd750af8-7942-4144-b044-67e8444152d2",
                                                          "a85ced9a-ae2c-49d5-9bec-5f05444e7863",
                                                          "307576f4-831e-4b7a-be99-d9909f63f8b3", false);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1570127617957L), null,
                                                          new Date(1570127621765L),
                                                          "e12d0b27-42d3-4599-b417-3a64e0d1a8e4",
                                                          "680e9b07-d1a0-41e9-abd6-9b5258f4a38e",
                                                          "fecf7f91-ccd3-4575-b2c8-d72ee3a8876e",
                                                          "cd750af8-7942-4144-b044-67e8444152d2",
                                                          "a85ced9a-ae2c-49d5-9bec-5f05444e7863",
                                                          "307576f4-831e-4b7a-be99-d9909f63f8b3", false);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2.hashCode(), deviceevents1.hashCode());
            int hashCode = deviceevents1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceevents1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEvents deviceevents = new DeviceEvents(null, new Date(1570127624369L), null, new Date(1570127623093L),
                                                     "03bf4df7-dfc5-4247-b6ce-a27863b5bb74",
                                                     "cf422551-4355-467a-8247-1107d1c42656",
                                                     "36baca73-ad42-4331-b104-82895631d451",
                                                     "584c3735-7ea5-450f-ab8c-d5c77a5a446a",
                                                     "093d9faf-da42-4d29-a729-2497157dc851",
                                                     "4b231963-5e89-43f3-bedc-b90b71a2c57f", false);
        assertTrue(deviceevents.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1570127624317L), null,
                                                          new Date(1570127621793L),
                                                          "b25c25c8-d596-449a-b35d-b634cae0feb6",
                                                          "f33da03d-93e5-4f77-809f-2b25ce308dee",
                                                          "4f49135d-b32d-447f-a145-8164fd135785",
                                                          "5fc17d63-4856-453c-af59-34f7db7a18b0",
                                                          "955c51f0-1a03-4f92-b6db-2804bee48b35",
                                                          "54ecf586-205d-4284-963f-de87fd25d314", false);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1570127624317L), null,
                                                          new Date(1570127621793L),
                                                          "b25c25c8-d596-449a-b35d-b634cae0feb6",
                                                          "f33da03d-93e5-4f77-809f-2b25ce308dee",
                                                          "4f49135d-b32d-447f-a145-8164fd135785",
                                                          "5fc17d63-4856-453c-af59-34f7db7a18b0",
                                                          "955c51f0-1a03-4f92-b6db-2804bee48b35",
                                                          "54ecf586-205d-4284-963f-de87fd25d314", false);
            DeviceEvents deviceevents3 = new DeviceEvents(null, new Date(1570127618680L), null,
                                                          new Date(1570127622802L),
                                                          "7738ef91-ad22-4e0f-878a-3e0238df0e27",
                                                          "5c5c39cf-7338-4736-830e-b246fbee4187",
                                                          "4a4bb231-f310-4542-b900-cecc44c41285",
                                                          "bcee441e-e0f1-4cc8-a5cf-0a2bf23d0e83",
                                                          "1620335b-0e35-4eff-94da-469315c11d34",
                                                          "187be906-7512-4431-8cb5-e269c598d71c", false);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotNull(deviceevents3);
            assertNotSame(deviceevents2, deviceevents1);
            assertNotSame(deviceevents3, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents1, deviceevents2);
            assertEquals(deviceevents1, deviceevents1);
            assertFalse(deviceevents1.equals(null));
            assertNotEquals(deviceevents3, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
