// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEnrollment.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEnrollment {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEnrollment deviceenrollment1 = new DeviceEnrollment("674369b4-7599-4584-b196-5c6267664746",
                                                                      new Date(1559147599441L),
                                                                      new Date(1559147594693L),
                                                                      "93D746i1hGyvV3U1pK1oL410nGTt8dNs",
                                                                      "A-:m1yqEtRWsjorQ36gnp4CNi57Tj7oaY2wRhxLhEePvf3dC1xyk7ds:698ozz7lX120t38L1WTnqOf7Nr:81SFBu9:Gq6pDb",
                                                                      new Date(1559147597416L),
                                                                      "93D746i1hGyvV3U1pK1oL410nGTt8dNs");
            DeviceEnrollment deviceenrollment2 = deviceenrollment1.clone();
            assertNotNull(deviceenrollment1);
            assertNotNull(deviceenrollment2);
            assertNotSame(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEnrollment deviceenrollment1 = new DeviceEnrollment("2f2e400f-1f6b-4000-a574-41b798ef6d09",
                                                                      new Date(1559147598111L),
                                                                      new Date(1559147597725L),
                                                                      "93D746i1hGyvV3U1pK1oL410nGTt8dNs",
                                                                      "A-:m1yqEtRWsjorQ36gnp4CNi57Tj7oaY2wRhxLhEePvf3dC1xyk7ds:698ozz7lX120t38L1WTnqOf7Nr:81SFBu9:Gq6pDb",
                                                                      new Date(1559147592116L),
                                                                      "93D746i1hGyvV3U1pK1oL410nGTt8dNs");
            DeviceEnrollment deviceenrollment2 = new DeviceEnrollment("2f2e400f-1f6b-4000-a574-41b798ef6d09",
                                                                      new Date(1559147598111L),
                                                                      new Date(1559147597725L),
                                                                      "93D746i1hGyvV3U1pK1oL410nGTt8dNs",
                                                                      "A-:m1yqEtRWsjorQ36gnp4CNi57Tj7oaY2wRhxLhEePvf3dC1xyk7ds:698ozz7lX120t38L1WTnqOf7Nr:81SFBu9:Gq6pDb",
                                                                      new Date(1559147592116L),
                                                                      "93D746i1hGyvV3U1pK1oL410nGTt8dNs");
            assertNotNull(deviceenrollment1);
            assertNotNull(deviceenrollment2);
            assertNotSame(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2.hashCode(), deviceenrollment1.hashCode());
            int hashCode = deviceenrollment1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceenrollment1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEnrollment deviceenrollment = new DeviceEnrollment("23317413-597a-48bf-b9e8-2bcefd542d4d",
                                                                 new Date(1559147598949L), new Date(1559147591825L),
                                                                 "93D746i1hGyvV3U1pK1oL410nGTt8dNs",
                                                                 "A-:m1yqEtRWsjorQ36gnp4CNi57Tj7oaY2wRhxLhEePvf3dC1xyk7ds:698ozz7lX120t38L1WTnqOf7Nr:81SFBu9:Gq6pDb",
                                                                 new Date(1559147597401L),
                                                                 "93D746i1hGyvV3U1pK1oL410nGTt8dNs");
        assertTrue(deviceenrollment.isValid());
        DeviceEnrollment deviceenrollmentInvalid = new DeviceEnrollment("83e164dd-015f-4167-b21a-a4d14de050d8",
                                                                        new Date(1559147599551L),
                                                                        new Date(1559147600150L),
                                                                        "*QfM'RꊡrS#xJMklg/u2wZu\u000feJ5mE5rFꞢw\\\\lu2J2\u0015FrwqEA25m2ꫪM5wuQqMJ5uQ5",
                                                                        null, new Date(1559147593732L),
                                                                        "*QfM'RꊡrS#xJMklg/u2wZu\u000feJ5mE5rFꞢw\\\\lu2J2\u0015FrwqEA25m2ꫪM5wuQqMJ5uQ5");
        assertFalse(deviceenrollmentInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEnrollment deviceenrollment1 = new DeviceEnrollment("269ef9e0-13cd-4411-90bb-f5af24a32fa4",
                                                                      new Date(1559147594171L),
                                                                      new Date(1559147594219L),
                                                                      "93D746i1hGyvV3U1pK1oL410nGTt8dNs",
                                                                      "A-:m1yqEtRWsjorQ36gnp4CNi57Tj7oaY2wRhxLhEePvf3dC1xyk7ds:698ozz7lX120t38L1WTnqOf7Nr:81SFBu9:Gq6pDb",
                                                                      new Date(1559147592373L),
                                                                      "93D746i1hGyvV3U1pK1oL410nGTt8dNs");
            DeviceEnrollment deviceenrollment2 = new DeviceEnrollment("269ef9e0-13cd-4411-90bb-f5af24a32fa4",
                                                                      new Date(1559147594171L),
                                                                      new Date(1559147594219L),
                                                                      "93D746i1hGyvV3U1pK1oL410nGTt8dNs",
                                                                      "A-:m1yqEtRWsjorQ36gnp4CNi57Tj7oaY2wRhxLhEePvf3dC1xyk7ds:698ozz7lX120t38L1WTnqOf7Nr:81SFBu9:Gq6pDb",
                                                                      new Date(1559147592373L),
                                                                      "93D746i1hGyvV3U1pK1oL410nGTt8dNs");
            DeviceEnrollment deviceenrollment3 = new DeviceEnrollment("437553bb-a0c9-4786-a845-21aa320af5f8",
                                                                      new Date(1559147595704L),
                                                                      new Date(1559147593129L),
                                                                      "93D746i1hGyvV3U1pK1oL410nGTt8dNs",
                                                                      "A-:m1yqEtRWsjorQ36gnp4CNi57Tj7oaY2wRhxLhEePvf3dC1xyk7ds:698ozz7lX120t38L1WTnqOf7Nr:81SFBu9:Gq6pDb",
                                                                      new Date(1559147601273L),
                                                                      "93D746i1hGyvV3U1pK1oL410nGTt8dNs");
            assertNotNull(deviceenrollment1);
            assertNotNull(deviceenrollment2);
            assertNotNull(deviceenrollment3);
            assertNotSame(deviceenrollment2, deviceenrollment1);
            assertNotSame(deviceenrollment3, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment1, deviceenrollment2);
            assertEquals(deviceenrollment1, deviceenrollment1);
            assertFalse(deviceenrollment1.equals(null));
            assertNotEquals(deviceenrollment3, deviceenrollment1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
