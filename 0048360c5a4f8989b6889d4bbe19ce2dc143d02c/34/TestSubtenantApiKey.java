// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantApiKey.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantApiKey {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("dbffc04464ee5d492da2ca1837b00ec4",
                                                                   new Date(1559147591961L), -115,
                                                                   "dbffc04464ee5d492da2ca1837b00ec4",
                                                                   "cf2d64b1-c625-472c-a3a2-e66ce317a733", 43,
                                                                   "377b2b97-2025-4bf3-96b4-b027c4e48b0c",
                                                                   "dbffc04464ee5d492da2ca1837b00ec4",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1559147601587L));
            SubtenantApiKey subtenantapikey2 = subtenantapikey1.clone();
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("dbffc04464ee5d492da2ca1837b00ec4",
                                                                   new Date(1559147600460L), -107,
                                                                   "dbffc04464ee5d492da2ca1837b00ec4",
                                                                   "99c42d88-9d00-4c30-b98e-2f5a7c3d8348", -58,
                                                                   "4d7120d9-6529-4848-9a0b-fae5ded2e464",
                                                                   "dbffc04464ee5d492da2ca1837b00ec4",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1559147599089L));
            SubtenantApiKey subtenantapikey2 = new SubtenantApiKey("dbffc04464ee5d492da2ca1837b00ec4",
                                                                   new Date(1559147600460L), -107,
                                                                   "dbffc04464ee5d492da2ca1837b00ec4",
                                                                   "99c42d88-9d00-4c30-b98e-2f5a7c3d8348", -58,
                                                                   "4d7120d9-6529-4848-9a0b-fae5ded2e464",
                                                                   "dbffc04464ee5d492da2ca1837b00ec4",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1559147599089L));
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2.hashCode(), subtenantapikey1.hashCode());
            int hashCode = subtenantapikey1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantapikey1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantApiKey subtenantapikey = new SubtenantApiKey("dbffc04464ee5d492da2ca1837b00ec4",
                                                              new Date(1559147599517L), -66,
                                                              "dbffc04464ee5d492da2ca1837b00ec4",
                                                              "dfc9b23e-9762-4a5f-8944-259a51fd50a1", 83,
                                                              "165ddfc6-1d79-410c-a18d-83693f312355",
                                                              "dbffc04464ee5d492da2ca1837b00ec4",
                                                              SubtenantApiKeyStatus.getDefault(),
                                                              new Date(1559147597748L));
        assertTrue(subtenantapikey.isValid());
        SubtenantApiKey subtenantapikeyInvalid = new SubtenantApiKey(null, new Date(1559147596764L), -20,
                                                                     "ï§?ç–£U\tæ†’é¸?é¼˜Yã«?\u0002á¶£\u000e\u0015é«ƒ\u0004Yã¨ƒQá“’TNX)â€–]ì²œ:\u0000í„?\u0013å®‡î¡µ/á“—Læª™C\u0005L^X.æ¢?ç¾Ž\u0014â¦Œé¸¬\u0005ë‹«ê§®ã€¢ë§•\u0011î?ž%Aîœ’H\u0014à±„",
                                                                     "b467599c-d678-49ae-9491-834c747e6b3e", -28, null,
                                                                     "ï§?ç–£U\tæ†’é¸?é¼˜Yã«?\u0002á¶£\u000e\u0015é«ƒ\u0004Yã¨ƒQá“’TNX)â€–]ì²œ:\u0000í„?\u0013å®‡î¡µ/á“—Læª™C\u0005L^X.æ¢?ç¾Ž\u0014â¦Œé¸¬\u0005ë‹«ê§®ã€¢ë§•\u0011î?ž%Aîœ’H\u0014à±„",
                                                                     SubtenantApiKeyStatus.getDefault(),
                                                                     new Date(1559147599306L));
        assertFalse(subtenantapikeyInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("dbffc04464ee5d492da2ca1837b00ec4",
                                                                   new Date(1559147595493L), -63,
                                                                   "dbffc04464ee5d492da2ca1837b00ec4",
                                                                   "77939143-25a2-42a2-a2df-37fbb8b69967", 110,
                                                                   "c78bdfc7-71a5-4133-b101-24bd29c014a3",
                                                                   "dbffc04464ee5d492da2ca1837b00ec4",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1559147599945L));
            SubtenantApiKey subtenantapikey2 = new SubtenantApiKey("dbffc04464ee5d492da2ca1837b00ec4",
                                                                   new Date(1559147595493L), -63,
                                                                   "dbffc04464ee5d492da2ca1837b00ec4",
                                                                   "77939143-25a2-42a2-a2df-37fbb8b69967", 110,
                                                                   "c78bdfc7-71a5-4133-b101-24bd29c014a3",
                                                                   "dbffc04464ee5d492da2ca1837b00ec4",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1559147599945L));
            SubtenantApiKey subtenantapikey3 = new SubtenantApiKey("dbffc04464ee5d492da2ca1837b00ec4",
                                                                   new Date(1559147601611L), 1,
                                                                   "dbffc04464ee5d492da2ca1837b00ec4",
                                                                   "79533039-8aa7-49d2-bd8d-678815d1a1e6", -103,
                                                                   "d6dcd8a8-bd43-4946-a20c-eab7db2868a4",
                                                                   "dbffc04464ee5d492da2ca1837b00ec4",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1559147592962L));
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotNull(subtenantapikey3);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertNotSame(subtenantapikey3, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey1, subtenantapikey2);
            assertEquals(subtenantapikey1, subtenantapikey1);
            assertFalse(subtenantapikey1.equals(null));
            assertNotEquals(subtenantapikey3, subtenantapikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
