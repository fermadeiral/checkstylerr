// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.security.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeveloperCertificate.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeveloperCertificate {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("b97b0241-9e78-46b2-b751-13b71d3105d2",
                                                                                  "2ce1c8c4-7344-4ae8-9a8d-ca29784085a8",
                                                                                  new Date(1559147595408L),
                                                                                  "8e3677f1-c65f-4cdc-b7f3-7807e8bd17b1",
                                                                                  "263f0fef-22d8-4763-859c-995fcde28f82",
                                                                                  "5983a548-6568-4abd-85a9-5d31e2400763",
                                                                                  "6da257d2-379f-485a-9962-64ed8694a531",
                                                                                  "903584b7-39a1-47cc-b926-252599e3b3f6");
            DeveloperCertificate developercertificate2 = developercertificate1.clone();
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("b13db40a-85bc-454f-ab88-2562924a7d9a",
                                                                                  "c30170d6-8686-4759-b7c4-4f70ee2ca3d0",
                                                                                  new Date(1559147593420L),
                                                                                  "6b327fe5-2bef-4eec-8b62-e330ed11c55f",
                                                                                  "67a58714-a413-48e1-ad2f-736a62a0b991",
                                                                                  "e71c03de-db78-41a8-ba3b-482e6a0fc0b4",
                                                                                  "362c852b-49f2-4ca2-ad12-d9c41821a924",
                                                                                  "0e14e5a8-ea7a-4692-8ec2-4bb3a41ba0ac");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("b13db40a-85bc-454f-ab88-2562924a7d9a",
                                                                                  "c30170d6-8686-4759-b7c4-4f70ee2ca3d0",
                                                                                  new Date(1559147593420L),
                                                                                  "6b327fe5-2bef-4eec-8b62-e330ed11c55f",
                                                                                  "67a58714-a413-48e1-ad2f-736a62a0b991",
                                                                                  "e71c03de-db78-41a8-ba3b-482e6a0fc0b4",
                                                                                  "362c852b-49f2-4ca2-ad12-d9c41821a924",
                                                                                  "0e14e5a8-ea7a-4692-8ec2-4bb3a41ba0ac");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2.hashCode(), developercertificate1.hashCode());
            int hashCode = developercertificate1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, developercertificate1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeveloperCertificate developercertificate = new DeveloperCertificate("0703758e-1be7-4ff1-b69d-058feeecdcd8",
                                                                             "50fd8ccf-d8ec-4b88-b674-a835fb5c2f10",
                                                                             new Date(1559147595497L),
                                                                             "c0dfd90d-e983-4a2b-9451-13a0bbf0ac36",
                                                                             "9d8f2a04-a64c-48fd-98b4-443b360dcb2a",
                                                                             "78a90a4c-ed65-4646-bd96-346cd74d142c",
                                                                             "535462b7-60fa-4e16-b13e-db9f61ee5e8b",
                                                                             "199b1170-d885-410c-8c1f-1728fd262d1e");
        assertTrue(developercertificate.isValid());
        DeveloperCertificate developercertificateInvalid = new DeveloperCertificate("b3ec84d6-bbb3-430b-8bca-501556cb6ec8",
                                                                                    "38608f38-d7f1-43df-84ab-eb206642d74c",
                                                                                    new Date(1559147594430L),
                                                                                    "e8274546-79ed-416b-a9d0-da519fbdbfbe",
                                                                                    "a1e139d6-4df2-4089-800f-e24d0f4ec1ba",
                                                                                    "84185cd1-46f1-444c-adc8-f6a670a23394",
                                                                                    null,
                                                                                    "3acc3968-5c55-456f-854a-d84e8a128c6b");
        assertFalse(developercertificateInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("ff30dd42-9bf5-4091-a5a0-9bfc3dd8f41f",
                                                                                  "9cbdf45f-5fff-4224-8518-d37924ed6a1f",
                                                                                  new Date(1559147595361L),
                                                                                  "6ab0ab01-7ca6-4afd-8bb6-11bff92d0f45",
                                                                                  "9408c2df-f67f-4474-a56c-9ec1dfa99542",
                                                                                  "1ec607fd-17c2-4b9a-a425-c3ebd9d4cd0d",
                                                                                  "ed3bb4f4-7cd3-4fea-9a9f-9bc6de149d5b",
                                                                                  "5e2774fb-27ac-4b6a-b53e-6d3ded383219");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("ff30dd42-9bf5-4091-a5a0-9bfc3dd8f41f",
                                                                                  "9cbdf45f-5fff-4224-8518-d37924ed6a1f",
                                                                                  new Date(1559147595361L),
                                                                                  "6ab0ab01-7ca6-4afd-8bb6-11bff92d0f45",
                                                                                  "9408c2df-f67f-4474-a56c-9ec1dfa99542",
                                                                                  "1ec607fd-17c2-4b9a-a425-c3ebd9d4cd0d",
                                                                                  "ed3bb4f4-7cd3-4fea-9a9f-9bc6de149d5b",
                                                                                  "5e2774fb-27ac-4b6a-b53e-6d3ded383219");
            DeveloperCertificate developercertificate3 = new DeveloperCertificate("aee86cf5-885e-48a0-8d7e-809c18d39cea",
                                                                                  "82cb4ee3-f9ef-4ae7-8dcc-f86e98aaa70c",
                                                                                  new Date(1559147601474L),
                                                                                  "07db2318-d27d-4ebd-95f1-3e3e4c095765",
                                                                                  "0e8dd499-4f36-4c18-aeee-1cc902cd93e6",
                                                                                  "37df9dc0-7494-4a42-91e8-4607b77496e1",
                                                                                  "7f162a31-2cf5-4bf5-9d90-40d1cf13e3dd",
                                                                                  "5c67079a-ca73-4285-b4ad-d277f26f8614");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotNull(developercertificate3);
            assertNotSame(developercertificate2, developercertificate1);
            assertNotSame(developercertificate3, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate1, developercertificate2);
            assertEquals(developercertificate1, developercertificate1);
            assertFalse(developercertificate1.equals(null));
            assertNotEquals(developercertificate3, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
