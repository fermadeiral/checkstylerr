// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEvents.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEvents {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1559147593417L), null,
                                                          new Date(1559147598649L),
                                                          "902143ab-b434-47d0-819c-6871ce69f100",
                                                          "b38ef6fb-0c4b-42d1-80f3-07031b7ed602",
                                                          "7d84084b-479c-4940-a6ca-ab41e07a4ed0",
                                                          "ec712aaf-5678-48cd-a7b6-8fd29b07a435",
                                                          "673ac9cf-1c03-4c69-92da-50f45c76347a",
                                                          "3162f9bf-14ff-42ac-90cb-6e79b2b41302", true);
            DeviceEvents deviceevents2 = deviceevents1.clone();
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1559147601047L), null,
                                                          new Date(1559147594524L),
                                                          "5a011d5d-e1a9-475b-9a5f-826cdfd0f5f8",
                                                          "8384e0a3-4d5d-4765-a0ed-8b4a648b0265",
                                                          "8bed6944-af26-4b6d-aa3e-234f6e7f9a73",
                                                          "b5eadbd0-d5bc-4cf6-859d-2e16e15fe147",
                                                          "f46fbb5b-c1f0-4ead-87bf-0c43f4e505bd",
                                                          "7865ef2d-950d-4563-83e4-0f8adb04f236", true);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1559147601047L), null,
                                                          new Date(1559147594524L),
                                                          "5a011d5d-e1a9-475b-9a5f-826cdfd0f5f8",
                                                          "8384e0a3-4d5d-4765-a0ed-8b4a648b0265",
                                                          "8bed6944-af26-4b6d-aa3e-234f6e7f9a73",
                                                          "b5eadbd0-d5bc-4cf6-859d-2e16e15fe147",
                                                          "f46fbb5b-c1f0-4ead-87bf-0c43f4e505bd",
                                                          "7865ef2d-950d-4563-83e4-0f8adb04f236", true);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2.hashCode(), deviceevents1.hashCode());
            int hashCode = deviceevents1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceevents1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEvents deviceevents = new DeviceEvents(null, new Date(1559147594752L), null, new Date(1559147596349L),
                                                     "5fa7778d-990a-4881-ab9a-7be933985d18",
                                                     "283a1aee-a256-4663-8e12-806d8e0e3837",
                                                     "4b5cc981-6903-4b39-9dfe-5d99d6bd3074",
                                                     "1ee825b3-eaea-42b9-a1b1-dea486b9b632",
                                                     "cb8b5a4a-c24a-4c87-81cf-a56d85747616",
                                                     "f46bae07-8003-4a52-bffa-fb5e6a6427c4", false);
        assertTrue(deviceevents.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1559147597870L), null,
                                                          new Date(1559147593271L),
                                                          "5477a8de-d76c-4cf8-a33b-151884947bbb",
                                                          "bb0c202b-1d42-491c-81f4-c67c90649484",
                                                          "491da8ab-e37b-42cc-8b34-9e0078a7b7fb",
                                                          "1f86a5b7-f7b3-4892-af31-a37a3ada8abf",
                                                          "6d9d3cd3-8e33-4cb6-90b0-51f9e9ed12ad",
                                                          "6c274b57-524d-4397-9cdc-bfbb2c9d3cc9", false);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1559147597870L), null,
                                                          new Date(1559147593271L),
                                                          "5477a8de-d76c-4cf8-a33b-151884947bbb",
                                                          "bb0c202b-1d42-491c-81f4-c67c90649484",
                                                          "491da8ab-e37b-42cc-8b34-9e0078a7b7fb",
                                                          "1f86a5b7-f7b3-4892-af31-a37a3ada8abf",
                                                          "6d9d3cd3-8e33-4cb6-90b0-51f9e9ed12ad",
                                                          "6c274b57-524d-4397-9cdc-bfbb2c9d3cc9", false);
            DeviceEvents deviceevents3 = new DeviceEvents(null, new Date(1559147593006L), null,
                                                          new Date(1559147598142L),
                                                          "ea52bbb0-70dd-4e92-a9d9-3a9ec757cd01",
                                                          "2362536e-433a-4ab6-84f7-1bc239290b97",
                                                          "ad67bcc3-082b-41fb-a81c-5c7ec165ccf4",
                                                          "ffcb4e11-bde5-4d7a-a004-0cc81ea8f6cd",
                                                          "476e947c-2521-41ed-a633-906375c6a224",
                                                          "9fca28b3-bf05-437b-b6b2-a1fa609a1185", false);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotNull(deviceevents3);
            assertNotSame(deviceevents2, deviceevents1);
            assertNotSame(deviceevents3, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents1, deviceevents2);
            assertEquals(deviceevents1, deviceevents1);
            assertFalse(deviceevents1.equals(null));
            assertNotEquals(deviceevents3, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
