// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.security.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model CertificateIssuer.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestCertificateIssuer {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            CertificateIssuer certificateissuer1 = new CertificateIssuer(new Date(1559147597865L),
                                                                         "09cbc9cf-7c4a-4f6b-8e6a-a3f96ab256b0",
                                                                         "f7444648-e47f-4105-aabc-5b6eb98d1de3", null,
                                                                         CertificateIssuerType.getDefault(),
                                                                         "f48ec832-eda9-4e54-ba61-9e8bc335fe2d");
            CertificateIssuer certificateissuer2 = certificateissuer1.clone();
            assertNotNull(certificateissuer1);
            assertNotNull(certificateissuer2);
            assertNotSame(certificateissuer2, certificateissuer1);
            assertEquals(certificateissuer2, certificateissuer1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            CertificateIssuer certificateissuer1 = new CertificateIssuer(new Date(1559147593654L),
                                                                         "0a818d3e-b18e-4345-b8fc-fe44f0960a74",
                                                                         "8f6bb214-fca4-4f6b-bdbc-9a1711a7bc07", null,
                                                                         CertificateIssuerType.getDefault(),
                                                                         "8258d184-9ffc-4608-8ab1-da3f4dc43dc3");
            CertificateIssuer certificateissuer2 = new CertificateIssuer(new Date(1559147593654L),
                                                                         "0a818d3e-b18e-4345-b8fc-fe44f0960a74",
                                                                         "8f6bb214-fca4-4f6b-bdbc-9a1711a7bc07", null,
                                                                         CertificateIssuerType.getDefault(),
                                                                         "8258d184-9ffc-4608-8ab1-da3f4dc43dc3");
            assertNotNull(certificateissuer1);
            assertNotNull(certificateissuer2);
            assertNotSame(certificateissuer2, certificateissuer1);
            assertEquals(certificateissuer2, certificateissuer1);
            assertEquals(certificateissuer2.hashCode(), certificateissuer1.hashCode());
            int hashCode = certificateissuer1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, certificateissuer1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        CertificateIssuer certificateissuer = new CertificateIssuer(new Date(1559147597433L),
                                                                    "030e6320-2886-49e5-8d88-d46b6683b234",
                                                                    "eaa23396-7573-4977-8cc4-d293b5f13797", null,
                                                                    CertificateIssuerType.getDefault(),
                                                                    "8bce6579-f693-4fa5-b2a5-e0672585688b");
        assertTrue(certificateissuer.isValid());
        CertificateIssuer certificateissuerInvalid = new CertificateIssuer(new Date(1559147601110L),
                                                                           "63f0c02c-c0b1-4ef5-ae9c-324426be1fa9597afb97-268b-4329-8596-90b9e5bfa7e5e4e8dc2b-9b2f-4152-9731-0416cb59ed6b",
                                                                           "52054961-a2da-4c29-ba42-ac7e302adc82", null,
                                                                           CertificateIssuerType.getDefault(), null);
        assertFalse(certificateissuerInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            CertificateIssuer certificateissuer1 = new CertificateIssuer(new Date(1559147597936L),
                                                                         "f3263178-96fe-4935-843a-b71cc5472728",
                                                                         "30e19c4d-8d28-442c-b651-f4acd7887ae5", null,
                                                                         CertificateIssuerType.getDefault(),
                                                                         "ddb81328-2842-4416-bd52-690c70424acd");
            CertificateIssuer certificateissuer2 = new CertificateIssuer(new Date(1559147597936L),
                                                                         "f3263178-96fe-4935-843a-b71cc5472728",
                                                                         "30e19c4d-8d28-442c-b651-f4acd7887ae5", null,
                                                                         CertificateIssuerType.getDefault(),
                                                                         "ddb81328-2842-4416-bd52-690c70424acd");
            CertificateIssuer certificateissuer3 = new CertificateIssuer(new Date(1559147596566L),
                                                                         "3b8ec01a-7377-45dd-bc5c-79311f388ddf",
                                                                         "d1beb130-42a0-4ddb-ab70-ae013a0b2803", null,
                                                                         CertificateIssuerType.getDefault(),
                                                                         "80c48b7d-914a-43e7-9581-930b1b35160f");
            assertNotNull(certificateissuer1);
            assertNotNull(certificateissuer2);
            assertNotNull(certificateissuer3);
            assertNotSame(certificateissuer2, certificateissuer1);
            assertNotSame(certificateissuer3, certificateissuer1);
            assertEquals(certificateissuer2, certificateissuer1);
            assertEquals(certificateissuer2, certificateissuer1);
            assertEquals(certificateissuer1, certificateissuer2);
            assertEquals(certificateissuer1, certificateissuer1);
            assertFalse(certificateissuer1.equals(null));
            assertNotEquals(certificateissuer3, certificateissuer1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
