// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.deviceupdate.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model FirmwareImage.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestFirmwareImage {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            FirmwareImage firmwareimage1 = new FirmwareImage(new Date(1561379515443L),
                                                             "f44934a2-d2aa-44bc-88a3-1441024a27e3", 5,
                                                             "d6bb448d-09ad-4303-ac90-7384a872732b",
                                                             "a9382a24-652b-4591-8a87-8e43815a3e5e",
                                                             "28adea18-16fb-435c-a7ad-db5626002601",
                                                             "86fc8d95-0c92-4353-9db4-eddbf5ee3250",
                                                             new Date(1561379519543L));
            FirmwareImage firmwareimage2 = firmwareimage1.clone();
            assertNotNull(firmwareimage1);
            assertNotNull(firmwareimage2);
            assertNotSame(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage2, firmwareimage1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            FirmwareImage firmwareimage1 = new FirmwareImage(new Date(1561379521512L),
                                                             "502df127-ddd0-4084-b668-45a31f0ca9aa", 6,
                                                             "9701f7fa-954c-419b-a710-0a6160929b13",
                                                             "7ee73679-37b1-4e8e-bf7f-2f1cfeb2c10a",
                                                             "e36ca55a-1d81-4d15-af38-834080ecfcb5",
                                                             "7bfdd49e-eb12-4450-815d-8fcdf76acee7",
                                                             new Date(1561379516219L));
            FirmwareImage firmwareimage2 = new FirmwareImage(new Date(1561379521512L),
                                                             "502df127-ddd0-4084-b668-45a31f0ca9aa", 6,
                                                             "9701f7fa-954c-419b-a710-0a6160929b13",
                                                             "7ee73679-37b1-4e8e-bf7f-2f1cfeb2c10a",
                                                             "e36ca55a-1d81-4d15-af38-834080ecfcb5",
                                                             "7bfdd49e-eb12-4450-815d-8fcdf76acee7",
                                                             new Date(1561379516219L));
            assertNotNull(firmwareimage1);
            assertNotNull(firmwareimage2);
            assertNotSame(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage2.hashCode(), firmwareimage1.hashCode());
            int hashCode = firmwareimage1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, firmwareimage1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        FirmwareImage firmwareimage = new FirmwareImage(new Date(1561379515352L),
                                                        "a333c374-b8a1-4a5f-8e32-0b9589a1bf8b", -14,
                                                        "be4ed500-6992-4b43-9afb-9f8c952b79cb",
                                                        "41e12a46-bdf9-4e67-9a3a-491a20b6ecf1",
                                                        "301a75f0-9669-46da-8293-a835fdbdfb43",
                                                        "c971f132-c2d1-486b-8862-a772fad068bc",
                                                        new Date(1561379515736L));
        assertTrue(firmwareimage.isValid());
        FirmwareImage firmwareimageInvalid = new FirmwareImage(new Date(1561379511898L),
                                                               "c164facd-e69a-4eb0-b6c1-5c2e33f14a0d", -102,
                                                               "bb5f82e8-b13c-480d-b5f9-b9ada6cecbad",
                                                               "2425d327-70bb-4bf2-9006-40992e401e2d09a53e36-e534-44c3-ad9f-1168e32d9c5d5fe956c3-bc96-403e-8fbd-1ddcbe41c3e94925a8cd-6b19-4a53-8799-f3f71e9556b3e17163a7-4b5b-480d-ab78-d295c74e789db37e2bbf-0368-4188-b7f6-954c57a0d6088492dff8-7e38-4a41-8a56-429be73446bd68afc78b-2490-4f83-9f40-5264cf05b5246ea8ddf7-e5f4-4e64-98d8-5bf7a389c19d23c09af9-4f88-4026-b6b6-4e774c99d497fcb60364-2ada-478a-8441-2bf798f2dd4bcaa14874-16cf-4a73-8f5e-57ca6c32da6062c7425a-e3d0-49f7-8be3-5b11448f920478c657e1-2d78-43a1-8123-3350f46b8899a016a0bc-f113-47dd-bc02-faa6820f49f281583eee-8841-4d98-b7cb-f1c22ca1f519ef26c9b5-4931-4163-866e-9ff978a0c0115e41c062-9150-4b0c-8958-d51ec9f2aa1d7479ddce-a561-4bbd-b3b5-cf55aca12b8636e8aa1b-4b37-402f-9467-34c6eda5c0aeb5929222-43b7-4c92-9033-4a89446f01a054e6aadb-f453-4361-a5cb-54a595e3caa4a54a8f6f-eb3a-44fa-8d01-543c60da1b3371b8ca4a-2a16-490f-b65b-57312f2f5d277ec68968-2495-4e31-9ecd-d8e2b723ac86f1abd2c7-af2d-4a72-a43c-3ff19fe3597028ba0010-85c7-4d87-941e-ef36a49c15f966966c52-f883-4bf0-b900-280e3dd493789ca00221-ed9c-433d-8d10-26dcd15a72620edb2093-6194-4d1d-b248-c7dacc4096fcff78f619-9702-483b-a999-511726c96a8261c85ae3-7dea-48fc-9eac-6d6293d2daa7ac4d4fd3-af93-4e77-a20d-c222b2e308c8e468a1dc-51c6-41e9-937c-175af93a03e53ebba9d9-e723-4067-beda-ae570f812887bc345846-8655-400e-af3d-70ba69ebfd54a4201cbc-be15-4b82-a636-8a6666a4185643255b57-f9c5-41fe-a574-49f2dcaf26b61b285b78-c496-4cc2-b011-4a3f4859523fad03abb5-bbe1-4cd9-833b-5a3c4d003246d4e24c68-a22a-46bb-881f-cf09f89eef7b20d163d9-a9f2-448f-8f2d-f4103f85d063ccbf480d-2565-499a-9e10-3bad36bc7da5a710ae89-a336-4e5a-ad93-468ee9a7154389abde47-3cee-4461-8fcf-c04983de07df0b18324a-8bb5-48ab-816c-835b54a7c72595d0bed3-7334-4df9-a994-f634f8c77c81287f944a-9909-4185-a2af-de2eee92306fc2decd26-290d-4720-87af-9b2b146cb975831ce96c-39dc-41bb-9a48-41766b256ee1e36060fa-50df-41dd-a03e-01fd0e4fdf152340684d-23b1-4049-ae0b-f270ca10c913b6b08a82-260f-4685-9d8f-39f4cfe8cbb911ee08d8-d2b8-476a-82cb-d0c14f56ee3c4e019268-ec35-4760-801f-4b324c38113a0ed904ac-2d7b-4906-87ec-0f1319f840cb",
                                                               "4f565066-8b36-4b84-8b5f-a9f368bd53f1",
                                                               "035a83ba-0e06-484a-9bb6-b590166122c52b593383-2b35-4138-9f3c-bea83d5974e5f339fcdc-75a6-41f5-b40f-028d5c037fd22ca3b2ab-773a-4132-9a4b-a5582abd0730",
                                                               new Date(1561379515951L));
        assertFalse(firmwareimageInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            FirmwareImage firmwareimage1 = new FirmwareImage(new Date(1561379513481L),
                                                             "292fd165-dc44-429a-9321-d6320940bd3a", -118,
                                                             "3cc6e616-b635-4da1-9d6b-ef88c1d990c3",
                                                             "10ec1fd7-da65-49e0-a5d9-f860b5738e33",
                                                             "934229f8-a8ab-40e8-a249-36afb798f2ec",
                                                             "67acad16-7772-46c2-96e2-ba135f9b2712",
                                                             new Date(1561379519922L));
            FirmwareImage firmwareimage2 = new FirmwareImage(new Date(1561379513481L),
                                                             "292fd165-dc44-429a-9321-d6320940bd3a", -118,
                                                             "3cc6e616-b635-4da1-9d6b-ef88c1d990c3",
                                                             "10ec1fd7-da65-49e0-a5d9-f860b5738e33",
                                                             "934229f8-a8ab-40e8-a249-36afb798f2ec",
                                                             "67acad16-7772-46c2-96e2-ba135f9b2712",
                                                             new Date(1561379519922L));
            FirmwareImage firmwareimage3 = new FirmwareImage(new Date(1561379511597L),
                                                             "16657681-5112-4d29-9250-aa1ad2370f2b", -41,
                                                             "98926e75-11b6-4c1f-83fd-6e44cb427af4",
                                                             "2b688359-99ed-4130-9500-164359d9f213",
                                                             "23edcb45-fd7b-42ec-9195-ee4c3149c1f8",
                                                             "6bea8b8e-e11c-46be-aa48-edc5faa48d15",
                                                             new Date(1561379512886L));
            assertNotNull(firmwareimage1);
            assertNotNull(firmwareimage2);
            assertNotNull(firmwareimage3);
            assertNotSame(firmwareimage2, firmwareimage1);
            assertNotSame(firmwareimage3, firmwareimage1);
            assertEquals(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage1, firmwareimage2);
            assertEquals(firmwareimage1, firmwareimage1);
            assertFalse(firmwareimage1.equals(null));
            assertNotEquals(firmwareimage3, firmwareimage1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
