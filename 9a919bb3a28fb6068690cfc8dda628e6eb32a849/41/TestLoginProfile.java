// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model LoginProfile.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestLoginProfile {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            LoginProfile loginprofile1 = new LoginProfile("82828f12-fa58-4e8c-b050-2ca56f3cf5d8",
                                                          "577e15d0-458f-4341-839d-a52b9655b238");
            LoginProfile loginprofile2 = loginprofile1.clone();
            assertNotNull(loginprofile1);
            assertNotNull(loginprofile2);
            assertNotSame(loginprofile2, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            LoginProfile loginprofile1 = new LoginProfile("7a30a3e7-d3c0-4c2b-867d-441d642e6625",
                                                          "0ab713b5-737b-421d-9013-6a8509fad7ef");
            LoginProfile loginprofile2 = new LoginProfile("7a30a3e7-d3c0-4c2b-867d-441d642e6625",
                                                          "0ab713b5-737b-421d-9013-6a8509fad7ef");
            assertNotNull(loginprofile1);
            assertNotNull(loginprofile2);
            assertNotSame(loginprofile2, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
            assertEquals(loginprofile2.hashCode(), loginprofile1.hashCode());
            int hashCode = loginprofile1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, loginprofile1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        LoginProfile loginprofile = new LoginProfile("0d3cd0bb-843b-4357-b4af-0bb6af358c57",
                                                     "a52f53b2-e036-4d03-834c-2ff3b403e5f0");
        assertTrue(loginprofile.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            LoginProfile loginprofile1 = new LoginProfile("277ccd68-1d64-4b18-8ac8-4fa98d4c8b9b",
                                                          "c6feb152-93ac-4a66-8207-36ef37629415");
            LoginProfile loginprofile2 = new LoginProfile("277ccd68-1d64-4b18-8ac8-4fa98d4c8b9b",
                                                          "c6feb152-93ac-4a66-8207-36ef37629415");
            LoginProfile loginprofile3 = new LoginProfile("d47ddd12-f909-47c1-b52e-7495841965cc",
                                                          "38891795-70a4-41fc-a6f3-a81fccff5d55");
            assertNotNull(loginprofile1);
            assertNotNull(loginprofile2);
            assertNotNull(loginprofile3);
            assertNotSame(loginprofile2, loginprofile1);
            assertNotSame(loginprofile3, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
            assertEquals(loginprofile1, loginprofile2);
            assertEquals(loginprofile1, loginprofile1);
            assertFalse(loginprofile1.equals(null));
            assertNotEquals(loginprofile3, loginprofile1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
