// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model ParentAccount.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestParentAccount {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("91963.6b9de@bd93f.me",
                                                             "9a4b8d53-170e-48e3-aac6-3e43a264f77a",
                                                             "d352a55a4f9dba6e0ef7ddad0a227bef");
            ParentAccount parentaccount2 = parentaccount1.clone();
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotSame(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("df014.3fe80@0f6d5.fr",
                                                             "4cc0e4e2-e1de-424f-b05d-a5612fb3325a",
                                                             "d352a55a4f9dba6e0ef7ddad0a227bef");
            ParentAccount parentaccount2 = new ParentAccount("df014.3fe80@0f6d5.fr",
                                                             "4cc0e4e2-e1de-424f-b05d-a5612fb3325a",
                                                             "d352a55a4f9dba6e0ef7ddad0a227bef");
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotSame(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount2.hashCode(), parentaccount1.hashCode());
            int hashCode = parentaccount1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, parentaccount1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ParentAccount parentaccount = new ParentAccount("f44fc.68bc0@eb689.fr", "cf2428e5-b5d4-4647-b593-0d0b772c1b94",
                                                        "d352a55a4f9dba6e0ef7ddad0a227bef");
        assertTrue(parentaccount.isValid());
        ParentAccount parentaccountInvalid = new ParentAccount("'ã©¨ç€¼à´«>ãµ¿ç¯¨è®´éˆ™>?èŸŒ\u001728è§¼æ¹¶à´”è‘¬!ä†?>\u0013ï¶€>ê?žì…‚à«œé…?è¾“\u0010ê³¡\u001a\u0001êœª6!ì?¦\u0019è‘¤æ±½à²‹\u0007\u00123Ð å?Ž3>ê¼–é§?å¢œ2ç¤‘\u0012\u000eÕ‰ê›‹1è½ªÏ¨è¥“áŽ’",
                                                               "4f17333b-dc0c-47f3-8a97-b67684cceaef40db64a1-e9d8-42a8-a1da-a956ea9b0240b2d2934e-4c04-4148-9e75-334aa884392a",
                                                               "1<Q\u0003811â„Žc81\u0001]1ïƒƒ\u00188î¹¾câª€B1cc$$êŒ¼;ã¼Šá¡º1W\u00111c11.8^11c8\u0014\u00128é?›K\u0012c18@P\u000bccc1)?88");
        assertFalse(parentaccountInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("331e2.85133@c0472.fr",
                                                             "90e1ac64-0154-48ff-ba34-080fb52bc1c6",
                                                             "d352a55a4f9dba6e0ef7ddad0a227bef");
            ParentAccount parentaccount2 = new ParentAccount("331e2.85133@c0472.fr",
                                                             "90e1ac64-0154-48ff-ba34-080fb52bc1c6",
                                                             "d352a55a4f9dba6e0ef7ddad0a227bef");
            ParentAccount parentaccount3 = new ParentAccount("8700c.8c3b2@03a26.fr",
                                                             "b1b1147a-3d76-4b0f-bce3-d1576fd84dc3",
                                                             "d352a55a4f9dba6e0ef7ddad0a227bef");
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotNull(parentaccount3);
            assertNotSame(parentaccount2, parentaccount1);
            assertNotSame(parentaccount3, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount1, parentaccount2);
            assertEquals(parentaccount1, parentaccount1);
            assertFalse(parentaccount1.equals(null));
            assertNotEquals(parentaccount3, parentaccount1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
