// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model ApiKey.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestApiKey {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ApiKey apikey1 = new ApiKey("d352a55a4f9dba6e0ef7ddad0a227bef", new Date(1561379516560L), -120,
                                        "d352a55a4f9dba6e0ef7ddad0a227bef", "bd8c0544-6b88-449b-870a-6dbf8f6463df",
                                        -104, "ec46f420-e29a-491a-b829-6f80dc2e4a21",
                                        "d352a55a4f9dba6e0ef7ddad0a227bef", ApiKeyStatus.getDefault(),
                                        new Date(1561379520710L));
            ApiKey apikey2 = apikey1.clone();
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotSame(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ApiKey apikey1 = new ApiKey("d352a55a4f9dba6e0ef7ddad0a227bef", new Date(1561379514511L), -57,
                                        "d352a55a4f9dba6e0ef7ddad0a227bef", "2b1a0807-f6a7-4c45-ad67-eb7e7a36ad4e", 83,
                                        "d22fa535-5d29-464d-ad12-d26ef0e3366d", "d352a55a4f9dba6e0ef7ddad0a227bef",
                                        ApiKeyStatus.getDefault(), new Date(1561379511717L));
            ApiKey apikey2 = new ApiKey("d352a55a4f9dba6e0ef7ddad0a227bef", new Date(1561379514511L), -57,
                                        "d352a55a4f9dba6e0ef7ddad0a227bef", "2b1a0807-f6a7-4c45-ad67-eb7e7a36ad4e", 83,
                                        "d22fa535-5d29-464d-ad12-d26ef0e3366d", "d352a55a4f9dba6e0ef7ddad0a227bef",
                                        ApiKeyStatus.getDefault(), new Date(1561379511717L));
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotSame(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey2.hashCode(), apikey1.hashCode());
            int hashCode = apikey1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, apikey1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ApiKey apikey = new ApiKey("d352a55a4f9dba6e0ef7ddad0a227bef", new Date(1561379520496L), 41,
                                   "d352a55a4f9dba6e0ef7ddad0a227bef", "2b1f4e69-58f6-418e-ba8f-b854bc38792b", 34,
                                   "8606dc2e-5cc8-438d-86db-a82e679a327f", "d352a55a4f9dba6e0ef7ddad0a227bef",
                                   ApiKeyStatus.getDefault(), new Date(1561379521327L));
        assertTrue(apikey.isValid());
        ApiKey apikeyInvalid = new ApiKey("1<Q\u0003811â„Žc81\u0001]1ïƒƒ\u00188î¹¾câª€B1cc$$êŒ¼;ã¼Šá¡º1W\u00111c11.8^11c8\u0014\u00128é?›K\u0012c18@P\u000bccc1)?88",
                                          new Date(1561379516997L), 8,
                                          "1<Q\u0003811â„Žc81\u0001]1ïƒƒ\u00188î¹¾câª€B1cc$$êŒ¼;ã¼Šá¡º1W\u00111c11.8^11c8\u0014\u00128é?›K\u0012c18@P\u000bccc1)?88",
                                          "c85a7610-f993-4a93-ba5c-e79110a3308e", -85, null,
                                          "1<Q\u0003811â„Žc81\u0001]1ïƒƒ\u00188î¹¾câª€B1cc$$êŒ¼;ã¼Šá¡º1W\u00111c11.8^11c8\u0014\u00128é?›K\u0012c18@P\u000bccc1)?88",
                                          ApiKeyStatus.getDefault(), new Date(1561379512195L));
        assertFalse(apikeyInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ApiKey apikey1 = new ApiKey("d352a55a4f9dba6e0ef7ddad0a227bef", new Date(1561379517752L), -66,
                                        "d352a55a4f9dba6e0ef7ddad0a227bef", "a02a2d07-27a3-4e94-a174-956cd1997528", -89,
                                        "04bf365d-38ad-4cc2-af87-d3face8e1d07", "d352a55a4f9dba6e0ef7ddad0a227bef",
                                        ApiKeyStatus.getDefault(), new Date(1561379517676L));
            ApiKey apikey2 = new ApiKey("d352a55a4f9dba6e0ef7ddad0a227bef", new Date(1561379517752L), -66,
                                        "d352a55a4f9dba6e0ef7ddad0a227bef", "a02a2d07-27a3-4e94-a174-956cd1997528", -89,
                                        "04bf365d-38ad-4cc2-af87-d3face8e1d07", "d352a55a4f9dba6e0ef7ddad0a227bef",
                                        ApiKeyStatus.getDefault(), new Date(1561379517676L));
            ApiKey apikey3 = new ApiKey("d352a55a4f9dba6e0ef7ddad0a227bef", new Date(1561379513793L), -90,
                                        "d352a55a4f9dba6e0ef7ddad0a227bef", "4f4c9140-5925-40c3-9156-8c79ba36c694", -6,
                                        "1cf5a97b-4acc-4056-9b7a-d340fd42e556", "d352a55a4f9dba6e0ef7ddad0a227bef",
                                        ApiKeyStatus.getDefault(), new Date(1561379512643L));
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotNull(apikey3);
            assertNotSame(apikey2, apikey1);
            assertNotSame(apikey3, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey1, apikey2);
            assertEquals(apikey1, apikey1);
            assertFalse(apikey1.equals(null));
            assertNotEquals(apikey3, apikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
