// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.security.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeveloperCertificate.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeveloperCertificate {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("a264bdfb-9e02-462e-92f1-a051b5ea4d77",
                                                                                  "bb693340-bb6e-467e-9c0a-824cb01b066e",
                                                                                  new Date(1561379521477L),
                                                                                  "ad3c3d29-03ac-4446-abf1-cb8640f795b6",
                                                                                  "3202e782-28e3-4ab4-9cb8-04da0b8384f1",
                                                                                  "f876332b-6ff4-40fe-ad1e-54dc13c776c5",
                                                                                  "66c08ca2-d4fa-478e-8bfe-7e9a9e1eabb9",
                                                                                  "5b60b738-cb4a-4fbf-bff8-32f02b44865a");
            DeveloperCertificate developercertificate2 = developercertificate1.clone();
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("95a6a47e-4e91-4537-b54d-65acd492cc7d",
                                                                                  "76c223e3-aac2-4363-996f-89dd348b4d44",
                                                                                  new Date(1561379514705L),
                                                                                  "8e6facb1-41ad-4454-a5f0-92c51c1b6c01",
                                                                                  "e6cf256d-c75b-4693-ae43-442de32ef9b1",
                                                                                  "819a8f50-d1ed-4d1f-a4b0-3aaef93eb7ef",
                                                                                  "79b85e24-bda1-4b2d-94f3-ac5507a55830",
                                                                                  "f6714115-270d-4402-bf22-8471fb9e7e6c");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("95a6a47e-4e91-4537-b54d-65acd492cc7d",
                                                                                  "76c223e3-aac2-4363-996f-89dd348b4d44",
                                                                                  new Date(1561379514705L),
                                                                                  "8e6facb1-41ad-4454-a5f0-92c51c1b6c01",
                                                                                  "e6cf256d-c75b-4693-ae43-442de32ef9b1",
                                                                                  "819a8f50-d1ed-4d1f-a4b0-3aaef93eb7ef",
                                                                                  "79b85e24-bda1-4b2d-94f3-ac5507a55830",
                                                                                  "f6714115-270d-4402-bf22-8471fb9e7e6c");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2.hashCode(), developercertificate1.hashCode());
            int hashCode = developercertificate1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, developercertificate1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeveloperCertificate developercertificate = new DeveloperCertificate("024c95a1-30ec-4184-a62d-356164c93b96",
                                                                             "4e015901-e674-472d-85a5-520d25bd742b",
                                                                             new Date(1561379517532L),
                                                                             "ec026871-c167-4613-8bc0-3c80c3a4b9af",
                                                                             "52791a2e-d0fb-4e31-b89a-7492ec5b155a",
                                                                             "16827c99-c14c-44b5-ba4e-75122a1eb5eb",
                                                                             "7a759cf6-9e83-4842-aae8-320c74091e35",
                                                                             "769f09b4-4fb3-4dd5-bedb-4845ee1d9165");
        assertTrue(developercertificate.isValid());
        DeveloperCertificate developercertificateInvalid = new DeveloperCertificate("b715bf39-62f8-4960-bfc0-e36a1d2b0bac",
                                                                                    "4cdc0431-d2e4-49c4-948c-a028e7f42df9",
                                                                                    new Date(1561379516035L),
                                                                                    "90b89f14-2580-4661-8619-57e5d199c284",
                                                                                    "2c81847e-4f05-434d-9c1e-b7e3ce4946e3",
                                                                                    "47705dc5-b78f-421d-9178-541b39508b8f",
                                                                                    null,
                                                                                    "7ae67602-dd98-413f-bf9c-280d8777e81c");
        assertFalse(developercertificateInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("019cf0d3-24e6-4abd-8d6b-3b05c8006fa3",
                                                                                  "50986edb-da55-45b1-bce0-3927efe66396",
                                                                                  new Date(1561379518544L),
                                                                                  "b89a97da-c015-4807-b8c5-327739661d44",
                                                                                  "1f99bce6-5b92-407e-9bbd-d5789df5fde9",
                                                                                  "7dca8d6e-832c-4187-8178-2eee5a78c2e8",
                                                                                  "0389eff5-6b92-47a1-a108-02021e7d5daf",
                                                                                  "85478726-b51a-45ff-8881-8cac4b38a063");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("019cf0d3-24e6-4abd-8d6b-3b05c8006fa3",
                                                                                  "50986edb-da55-45b1-bce0-3927efe66396",
                                                                                  new Date(1561379518544L),
                                                                                  "b89a97da-c015-4807-b8c5-327739661d44",
                                                                                  "1f99bce6-5b92-407e-9bbd-d5789df5fde9",
                                                                                  "7dca8d6e-832c-4187-8178-2eee5a78c2e8",
                                                                                  "0389eff5-6b92-47a1-a108-02021e7d5daf",
                                                                                  "85478726-b51a-45ff-8881-8cac4b38a063");
            DeveloperCertificate developercertificate3 = new DeveloperCertificate("f2426431-08d2-4ef5-9fe3-d9c0f6373c94",
                                                                                  "fbbefb91-4417-4100-9ef4-2d2699fe704a",
                                                                                  new Date(1561379512049L),
                                                                                  "c2b8fa53-ada0-4505-9158-1edb92d8b0ed",
                                                                                  "a04bf4be-a5d3-4f3e-95af-a59524c622cf",
                                                                                  "29dd73b9-344a-446c-a636-1d6607b43dc8",
                                                                                  "a886d6d3-a934-448d-be37-43ef0b7b6289",
                                                                                  "57d5245f-7b97-415f-b354-fe898eea2f83");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotNull(developercertificate3);
            assertNotSame(developercertificate2, developercertificate1);
            assertNotSame(developercertificate3, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate1, developercertificate2);
            assertEquals(developercertificate1, developercertificate1);
            assertFalse(developercertificate1.equals(null));
            assertNotEquals(developercertificate3, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
