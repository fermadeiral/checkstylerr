// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import com.arm.mbed.cloud.sdk.common.Order;
import com.arm.mbed.cloud.sdk.common.listing.ListOptionsEncoder;
import com.arm.mbed.cloud.sdk.common.listing.filtering.FilterOperator;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEventsListOptions.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEventsListOptions {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEventsListOptions deviceeventslistoptions1 = new DeviceEventsListOptions(Integer.valueOf(-24),
                                                                                           Long.valueOf(23),
                                                                                           Order.getDefault(),
                                                                                           "06f59935-32bd-433e-b6aa-f86681b419c1",
                                                                                           null, null);
            DeviceEventsListOptions deviceeventslistoptions2 = deviceeventslistoptions1.clone();
            assertNotNull(deviceeventslistoptions1);
            assertNotNull(deviceeventslistoptions2);
            assertNotSame(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2, deviceeventslistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the filters method.
     */
    @SuppressWarnings({ "boxing", "resource" })
    @Test
    public void testFilters() {
        try {
            DeviceEventsListOptions option = new DeviceEventsListOptions().equalToDeviceId("132e5472-56b9-43f6-a493-a8af91498a5d")
                                                                          .notEqualToDeviceId("f77b4ab8-12c0-4477-a185-1828e726c6e6")
                                                                          .inDeviceIds(Arrays.asList("704330c5-2814-4744-be66-82b200ad39a6",
                                                                                                     "ab80427a-c30d-4107-b013-4828152b272f",
                                                                                                     "0d8de3e1-1570-45b1-8336-b5db7e5a9936",
                                                                                                     "12c5bd4f-d606-4644-a6de-a46213dd1009",
                                                                                                     "d14a6a82-cc22-469f-9f20-2e8d08b8d89d",
                                                                                                     "bd4f0934-99f2-4c0a-adbd-c9c221a31e19",
                                                                                                     "39644e6d-f1db-4710-a3e5-f997c5d07ecc",
                                                                                                     "72a2ccc6-b8a6-4b4a-9966-f54fd2741b89",
                                                                                                     "cffca4c1-5489-4ae9-8245-44a36f487933"))
                                                                          .notInDeviceIds(Arrays.asList("4234fdf1-c3aa-4921-909b-895a5154ae66",
                                                                                                        "babec92e-dbc5-4365-b6ae-03d985e85cc3",
                                                                                                        "c34a3208-5545-4aa5-a537-94523ce95cb2",
                                                                                                        "e5f4ce5b-3a27-4ae5-adc3-176acecabc00",
                                                                                                        "33b82bae-322a-4d1a-9728-c96623d711ac",
                                                                                                        "42e8fb0c-6553-4e0d-90fc-728d91a03bcb",
                                                                                                        "8e8cfd1b-14ec-4b27-8321-f14206c97686"))
                                                                          .equalToDescription("4462de59-f119-4572-b313-1187e30f8498")
                                                                          .notEqualToDescription("47a3d5e9-8675-4a29-94ca-c8342c574a66")
                                                                          .inDescriptions(Arrays.asList("c16be7bb-5941-4706-bfe9-5c40f8962b0d",
                                                                                                        "bc1cbddb-2fce-4bf5-8994-ede861fbcf8b",
                                                                                                        "3f78e507-4d6b-49b4-81aa-c59bbc8a2e89"))
                                                                          .notInDescriptions(Arrays.asList("4141dec7-627b-4b53-b23d-00cea36914c4",
                                                                                                           "52082f2a-8c80-4d83-8ac3-3392b118031b",
                                                                                                           "a645cd65-7545-4d8a-b4f7-c4cc22179104",
                                                                                                           "7e8dc7aa-8e8b-4508-bd9f-0e2cd10cac21",
                                                                                                           "683284c5-9e72-40df-8c91-59040c7e199d",
                                                                                                           "8452a782-f37a-4d48-88f7-6ab7b515992a",
                                                                                                           "c5862c25-e618-4afe-9ef4-0c350e886b55",
                                                                                                           "4c74addf-7575-44a8-8d7b-217625e4e9ed",
                                                                                                           "a8868684-6d0f-4183-909b-ba86ad143d1e"))
                                                                          .inDateTimes(Arrays.asList(new Date(1561379519075L)))
                                                                          .notInDateTimes(Arrays.asList(new Date(1561379520365L),
                                                                                                        new Date(1561379515894L),
                                                                                                        new Date(1561379522104L)))
                                                                          .lessThanDateTime(new Date(1561379516652L))
                                                                          .greaterThanDateTime(new Date(1561379519732L))
                                                                          .equalToStateChange(Boolean.FALSE)
                                                                          .notEqualToStateChange(Boolean.TRUE)
                                                                          .equalToId("e40b1bee-24fa-48e5-a276-3ca244850fc3")
                                                                          .notEqualToId("f9c5c6dd-0e59-423f-813c-748abae92a91")
                                                                          .inIds(Arrays.asList("dcd46677-bc17-42a4-b1e6-8a375932895c",
                                                                                               "83818088-1121-4452-8044-b713f233f35a"))
                                                                          .notInIds(Arrays.asList("f4e33914-aaca-4069-9b28-b6a133d63005",
                                                                                                  "fc1e675e-66ec-4904-8025-39a93b973272",
                                                                                                  "3e03a823-216e-415b-b8ab-a0b494967f86",
                                                                                                  "aede288e-d9ac-413d-b921-ad9028ef2815",
                                                                                                  "98c0730e-9f20-4c70-a560-0fba965264bb",
                                                                                                  "0f4a6cea-9adc-4480-9c55-d9b64e4445c2",
                                                                                                  "cc41d7c1-76c4-4c32-b353-c7b59e38ae63"))
                                                                          .equalToEventType("73c61c85-aecf-4c39-aed5-51bfee3cb059")
                                                                          .notEqualToEventType("ce4f2cce-b791-4210-b274-fe740b127a4a")
                                                                          .inEventTypes(Arrays.asList("f511e645-087b-46c4-a0f5-94d87322f31c",
                                                                                                      "13dc4050-c4a7-439a-afcb-242fbce732fb",
                                                                                                      "905e4c08-9cf8-4845-b5c0-50c24ddfdfd2",
                                                                                                      "a2022ebd-6631-4e43-b252-5617832f66a8",
                                                                                                      "ba17548d-afbe-4389-96e9-a537521a64f0"))
                                                                          .notInEventTypes(Arrays.asList("569db57b-1218-44c4-be2a-79467d0bb2dc"));
            assertTrue(option.hasFilters());
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID, FilterOperator.EQUAL));
            assertNotNull(option.getDeviceIdFilters());
            assertEquals("132e5472-56b9-43f6-a493-a8af91498a5d",
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDeviceIdFilters());
            assertEquals("f77b4ab8-12c0-4477-a185-1828e726c6e6",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID, FilterOperator.IN));
            assertNotNull(option.getDeviceIdFilters());
            assertEquals(Arrays.asList("704330c5-2814-4744-be66-82b200ad39a6", "ab80427a-c30d-4107-b013-4828152b272f",
                                       "0d8de3e1-1570-45b1-8336-b5db7e5a9936", "12c5bd4f-d606-4644-a6de-a46213dd1009",
                                       "d14a6a82-cc22-469f-9f20-2e8d08b8d89d", "bd4f0934-99f2-4c0a-adbd-c9c221a31e19",
                                       "39644e6d-f1db-4710-a3e5-f997c5d07ecc", "72a2ccc6-b8a6-4b4a-9966-f54fd2741b89",
                                       "cffca4c1-5489-4ae9-8245-44a36f487933"),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID,
                                                                 List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getDeviceIdFilters());
            assertEquals(Arrays.asList("4234fdf1-c3aa-4921-909b-895a5154ae66", "babec92e-dbc5-4365-b6ae-03d985e85cc3",
                                       "c34a3208-5545-4aa5-a537-94523ce95cb2", "e5f4ce5b-3a27-4ae5-adc3-176acecabc00",
                                       "33b82bae-322a-4d1a-9728-c96623d711ac", "42e8fb0c-6553-4e0d-90fc-728d91a03bcb",
                                       "8e8cfd1b-14ec-4b27-8321-f14206c97686"),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID,
                                                                    List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("4462de59-f119-4572-b313-1187e30f8498",
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("47a3d5e9-8675-4a29-94ca-c8342c574a66",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                       String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("c16be7bb-5941-4706-bfe9-5c40f8962b0d", "bc1cbddb-2fce-4bf5-8994-ede861fbcf8b",
                                       "3f78e507-4d6b-49b4-81aa-c59bbc8a2e89"),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                 List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("4141dec7-627b-4b53-b23d-00cea36914c4", "52082f2a-8c80-4d83-8ac3-3392b118031b",
                                       "a645cd65-7545-4d8a-b4f7-c4cc22179104", "7e8dc7aa-8e8b-4508-bd9f-0e2cd10cac21",
                                       "683284c5-9e72-40df-8c91-59040c7e199d", "8452a782-f37a-4d48-88f7-6ab7b515992a",
                                       "c5862c25-e618-4afe-9ef4-0c350e886b55", "4c74addf-7575-44a8-8d7b-217625e4e9ed",
                                       "a8868684-6d0f-4183-909b-ba86ad143d1e"),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME, FilterOperator.IN));
            assertNotNull(option.getDateTimeFilters());
            assertEquals(Arrays.asList(new Date(1561379519075L)),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME,
                                                                 List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME, FilterOperator.NOT_IN));
            assertNotNull(option.getDateTimeFilters());
            assertEquals(Arrays.asList(new Date(1561379520365L), new Date(1561379515894L), new Date(1561379522104L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME,
                                                                    List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME, FilterOperator.LESS_THAN));
            assertNotNull(option.getDateTimeFilters());
            assertEquals(new Date(1561379516652L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME, FilterOperator.GREATER_THAN));
            assertNotNull(option.getDateTimeFilters());
            assertEquals(new Date(1561379519732L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE, FilterOperator.EQUAL));
            assertNotNull(option.getStateChangeFilters());
            assertEquals(Boolean.FALSE,
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE,
                                                                    Boolean.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getStateChangeFilters());
            assertEquals(Boolean.TRUE,
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE,
                                                                       Boolean.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, FilterOperator.EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("e40b1bee-24fa-48e5-a276-3ca244850fc3",
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("f9c5c6dd-0e59-423f-813c-748abae92a91",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, FilterOperator.IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("dcd46677-bc17-42a4-b1e6-8a375932895c", "83818088-1121-4452-8044-b713f233f35a"),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, List.class,
                                                                 option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("f4e33914-aaca-4069-9b28-b6a133d63005", "fc1e675e-66ec-4904-8025-39a93b973272",
                                       "3e03a823-216e-415b-b8ab-a0b494967f86", "aede288e-d9ac-413d-b921-ad9028ef2815",
                                       "98c0730e-9f20-4c70-a560-0fba965264bb", "0f4a6cea-9adc-4480-9c55-d9b64e4445c2",
                                       "cc41d7c1-76c4-4c32-b353-c7b59e38ae63"),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID,
                                                                    List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE, FilterOperator.EQUAL));
            assertNotNull(option.getEventTypeFilters());
            assertEquals("73c61c85-aecf-4c39-aed5-51bfee3cb059",
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE,
                                                                    String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getEventTypeFilters());
            assertEquals("ce4f2cce-b791-4210-b274-fe740b127a4a",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE,
                                                                       String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE, FilterOperator.IN));
            assertNotNull(option.getEventTypeFilters());
            assertEquals(Arrays.asList("f511e645-087b-46c4-a0f5-94d87322f31c", "13dc4050-c4a7-439a-afcb-242fbce732fb",
                                       "905e4c08-9cf8-4845-b5c0-50c24ddfdfd2", "a2022ebd-6631-4e43-b252-5617832f66a8",
                                       "ba17548d-afbe-4389-96e9-a537521a64f0"),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE,
                                                                 List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE, FilterOperator.NOT_IN));
            assertNotNull(option.getEventTypeFilters());
            assertEquals(Arrays.asList("569db57b-1218-44c4-be2a-79467d0bb2dc"),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE,
                                                                    List.class, option));
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEventsListOptions deviceeventslistoptions1 = new DeviceEventsListOptions(Integer.valueOf(-22),
                                                                                           Long.valueOf(20),
                                                                                           Order.getDefault(),
                                                                                           "6a8834b2-dfc6-4d70-80da-c013e1896eb9",
                                                                                           null, null);
            DeviceEventsListOptions deviceeventslistoptions2 = new DeviceEventsListOptions(Integer.valueOf(-22),
                                                                                           Long.valueOf(20),
                                                                                           Order.getDefault(),
                                                                                           "6a8834b2-dfc6-4d70-80da-c013e1896eb9",
                                                                                           null, null);
            assertNotNull(deviceeventslistoptions1);
            assertNotNull(deviceeventslistoptions2);
            assertNotSame(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2.hashCode(), deviceeventslistoptions1.hashCode());
            int hashCode = deviceeventslistoptions1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceeventslistoptions1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEventsListOptions deviceeventslistoptions1 = new DeviceEventsListOptions(Integer.valueOf(122),
                                                                                           Long.valueOf(-20),
                                                                                           Order.getDefault(),
                                                                                           "916cee3f-9a91-42b7-b168-666214eb5ffd",
                                                                                           null, null);
            DeviceEventsListOptions deviceeventslistoptions2 = new DeviceEventsListOptions(Integer.valueOf(122),
                                                                                           Long.valueOf(-20),
                                                                                           Order.getDefault(),
                                                                                           "916cee3f-9a91-42b7-b168-666214eb5ffd",
                                                                                           null, null);
            DeviceEventsListOptions deviceeventslistoptions3 = new DeviceEventsListOptions(Integer.valueOf(8),
                                                                                           Long.valueOf(-36),
                                                                                           Order.getDefault(),
                                                                                           "9f3a31a6-3411-4f1e-b1b2-94396f98b3a8",
                                                                                           null, null);
            assertNotNull(deviceeventslistoptions1);
            assertNotNull(deviceeventslistoptions2);
            assertNotNull(deviceeventslistoptions3);
            assertNotSame(deviceeventslistoptions2, deviceeventslistoptions1);
            assertNotSame(deviceeventslistoptions3, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions1, deviceeventslistoptions2);
            assertEquals(deviceeventslistoptions1, deviceeventslistoptions1);
            assertFalse(deviceeventslistoptions1.equals(null));
            assertNotEquals(deviceeventslistoptions3, deviceeventslistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
