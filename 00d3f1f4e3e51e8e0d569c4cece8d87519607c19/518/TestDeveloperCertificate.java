// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.security.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeveloperCertificate.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeveloperCertificate {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("e3e05cb8-7f0e-46af-8fdd-2cbac1009071",
                                                                                  "68f5de66-76d4-4588-896a-0442d2c36300",
                                                                                  new Date(1558000751703L),
                                                                                  "fa342400-df74-47fc-a7c0-efa1e6c5f962",
                                                                                  "deaa1a6f-ffd9-43dd-a5fa-cda28563fc60",
                                                                                  "f7afd937-758c-40c5-9093-04224fa04748",
                                                                                  "3bddd521-f246-4d13-8504-6571a7cd106f",
                                                                                  "2fef6548-0338-4a0c-b1dc-0360355b9846");
            DeveloperCertificate developercertificate2 = developercertificate1.clone();
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("15f97fd4-6416-48d0-b3c1-04daf48ab943",
                                                                                  "53e1ace8-cb8d-4aa6-8057-ca8a511439b3",
                                                                                  new Date(1558000749139L),
                                                                                  "d12c668a-de3d-488c-8d0c-cc2a21b429a0",
                                                                                  "77353686-ca6b-4f8c-a702-eb35d38e8b2e",
                                                                                  "2d1635a2-0ced-4fba-a509-384128746286",
                                                                                  "aeaefc0c-80cd-43bb-9160-963735d4bd48",
                                                                                  "19bcc027-cf9e-42dd-805c-08e921e185a7");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("15f97fd4-6416-48d0-b3c1-04daf48ab943",
                                                                                  "53e1ace8-cb8d-4aa6-8057-ca8a511439b3",
                                                                                  new Date(1558000749139L),
                                                                                  "d12c668a-de3d-488c-8d0c-cc2a21b429a0",
                                                                                  "77353686-ca6b-4f8c-a702-eb35d38e8b2e",
                                                                                  "2d1635a2-0ced-4fba-a509-384128746286",
                                                                                  "aeaefc0c-80cd-43bb-9160-963735d4bd48",
                                                                                  "19bcc027-cf9e-42dd-805c-08e921e185a7");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2.hashCode(), developercertificate1.hashCode());
            int hashCode = developercertificate1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, developercertificate1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeveloperCertificate developercertificate = new DeveloperCertificate("ed1d5020-f22b-4a77-b092-9475a7ac5692",
                                                                             "5c739725-d188-4488-9e38-aa94f0bae26d",
                                                                             new Date(1558000746505L),
                                                                             "0b320047-7a52-4b53-815b-bafd9df138da",
                                                                             "b92388d9-ce00-4384-9280-f589ac779eb0",
                                                                             "14297c05-56c4-499a-b2c3-a6be8b104830",
                                                                             "6653e1e7-1915-4ddc-b301-1b326fbdab8f",
                                                                             "8f59ce11-33e4-4961-8d4e-0e4591952f0a");
        assertTrue(developercertificate.isValid());
        DeveloperCertificate developercertificateInvalid = new DeveloperCertificate("d4c1166b-c6dc-4e7c-8abb-51eb24da6c46",
                                                                                    "30d84a04-befa-4844-8685-7799523434ac",
                                                                                    new Date(1558000746621L),
                                                                                    "dcb32597-d309-4b60-b4aa-42c28b271784",
                                                                                    "fd206b5b-85d1-406a-883e-cfb6670e62a8",
                                                                                    "da1a272a-4766-4d5f-be8b-a648b4db13e6",
                                                                                    null,
                                                                                    "e8d52a38-7e8e-41b2-8046-5e2ad9c6e634");
        assertFalse(developercertificateInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("b728fecb-8dc8-436d-8749-fee9b9ad081e",
                                                                                  "66b49d5a-0e6a-48a6-9493-e280bc8db955",
                                                                                  new Date(1558000752760L),
                                                                                  "5a66fe92-ceec-4055-9db4-4f1860424267",
                                                                                  "1274fbf5-ae70-4087-a934-6d931fbe861e",
                                                                                  "c807acfc-3b68-45cd-8e98-92fd33b0adba",
                                                                                  "1f83c5dc-ec0a-404c-9967-d151d60353ef",
                                                                                  "2eff529f-eea5-41be-bda5-7d8dadb5cbe8");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("b728fecb-8dc8-436d-8749-fee9b9ad081e",
                                                                                  "66b49d5a-0e6a-48a6-9493-e280bc8db955",
                                                                                  new Date(1558000752760L),
                                                                                  "5a66fe92-ceec-4055-9db4-4f1860424267",
                                                                                  "1274fbf5-ae70-4087-a934-6d931fbe861e",
                                                                                  "c807acfc-3b68-45cd-8e98-92fd33b0adba",
                                                                                  "1f83c5dc-ec0a-404c-9967-d151d60353ef",
                                                                                  "2eff529f-eea5-41be-bda5-7d8dadb5cbe8");
            DeveloperCertificate developercertificate3 = new DeveloperCertificate("b9ca7822-5d8b-47b7-9d01-b53fd8cd287f",
                                                                                  "8d015f6c-411b-4a11-939d-79a47540fabb",
                                                                                  new Date(1558000748352L),
                                                                                  "ea11d1b3-6a38-4fa6-b37c-a8117433fb53",
                                                                                  "36f42b21-e24d-4fc3-a20f-bd7a750988d3",
                                                                                  "5966dc28-413e-4d4e-a54a-09a4949affed",
                                                                                  "5af1ea40-82c2-41a4-adaa-3ab718e3b399",
                                                                                  "9ea078db-626a-49fb-b009-5c71b05a7c5a");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotNull(developercertificate3);
            assertNotSame(developercertificate2, developercertificate1);
            assertNotSame(developercertificate3, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate1, developercertificate2);
            assertEquals(developercertificate1, developercertificate1);
            assertFalse(developercertificate1.equals(null));
            assertNotEquals(developercertificate3, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
