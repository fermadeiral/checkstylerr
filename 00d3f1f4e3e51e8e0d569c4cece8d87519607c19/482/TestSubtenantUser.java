// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantUser.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantUser {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("96151c6cca95ea57eac2ba8ede214aed", null,
                                                             "db54096f-7502-4e54-adc4-449f320d66cb",
                                                             new Date(1558000750358L), -41, null,
                                                             "bf651.9b422@9b382.fr", true,
                                                             "2aa89210-ed28-4961-a58c-4ed472838e01",
                                                             "96151c6cca95ea57eac2ba8ede214aed", true, true, false, 49,
                                                             null, null, "c00583bc-3c56-4c7c-a0f7-cd20fd50892d", -39,
                                                             "748cdb95-e82d-462b-8a1d-f0b41082afe6",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1558000754682L), "9_6E");
            SubtenantUser subtenantuser2 = subtenantuser1.clone();
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("96151c6cca95ea57eac2ba8ede214aed", null,
                                                             "f1f4ca42-bbdf-4c81-854c-36c624ba9958",
                                                             new Date(1558000754349L), 115, null,
                                                             "08f27.19111@a6879.fr", true,
                                                             "43137935-d120-457f-9c43-0540d2ee5809",
                                                             "96151c6cca95ea57eac2ba8ede214aed", false, true, true, 106,
                                                             null, null, "17e28352-4650-4a83-8c58-b37220786868", 107,
                                                             "7a184b64-ea6f-43a3-94be-4ea83d3d0289",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1558000749498L), "9_6E");
            SubtenantUser subtenantuser2 = new SubtenantUser("96151c6cca95ea57eac2ba8ede214aed", null,
                                                             "f1f4ca42-bbdf-4c81-854c-36c624ba9958",
                                                             new Date(1558000754349L), 115, null,
                                                             "08f27.19111@a6879.fr", true,
                                                             "43137935-d120-457f-9c43-0540d2ee5809",
                                                             "96151c6cca95ea57eac2ba8ede214aed", false, true, true, 106,
                                                             null, null, "17e28352-4650-4a83-8c58-b37220786868", 107,
                                                             "7a184b64-ea6f-43a3-94be-4ea83d3d0289",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1558000749498L), "9_6E");
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2.hashCode(), subtenantuser1.hashCode());
            int hashCode = subtenantuser1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantuser1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantUser subtenantuser = new SubtenantUser("96151c6cca95ea57eac2ba8ede214aed", null,
                                                        "c32339a1-a792-4989-b193-0c05bfb47d43",
                                                        new Date(1558000755063L), -117, null, "af1ae.f3c87@9c462.fr",
                                                        false, "4d1c8b5c-c571-4da2-b7a4-9c2a47f3d1e3",
                                                        "96151c6cca95ea57eac2ba8ede214aed", false, true, true, -50,
                                                        null, null, "e63285aa-7a90-4a05-ab47-10a8ce690277", 125,
                                                        "75a06a14-d5fa-4bfe-b473-7f6c4788c61d",
                                                        SubtenantUserStatus.getDefault(), null,
                                                        new Date(1558000749291L), "9_6E");
        assertTrue(subtenantuser.isValid());
        SubtenantUser subtenantuserInvalid = new SubtenantUser(null, null, "964baa5d-913c-46b4-983e-7a02c75828ae",
                                                               new Date(1558000750915L), 122, null, null, false,
                                                               "01e303ef-484d-4ad9-b672-5bdcfb31c114caf0d84b-77e4-443f-accf-c3af04a6de485a3df3d9-5f3f-4c70-82c3-d804f8757716",
                                                               "Z333î‚‘\u0007Q^D;3ìƒ?\u0010(ë±Ž0A333<3Zéµ…æ?µ3U3\u001d]3îŠ»3<3H3áŒƒ%3ä·¼3\u00053\u0001á‰–?`3\u0016(3ì¾™îˆ?3é¦›3S@Z3#3",
                                                               true, false, false, 65, null, null,
                                                               "0c00c688-18de-4184-9e2a-79366d584e47", -4,
                                                               "b2eb30bf-1672-4ff3-8d52-8a83386d4fc1a363c82e-fd10-43bc-8351-e36756d084ad277ded09-983d-48b1-b13c-49f534fb8664",
                                                               SubtenantUserStatus.getDefault(), null,
                                                               new Date(1558000755657L),
                                                               "5åœ«70è„‡\tA\u000f7î?¿8<?8\tV@?å©¶77ã»¤\u0002Y8TL>!;Nìš­!\b8î“‡Q:>ï’¹Q!Též­âž½\u0004;G^7\u0014Uë«¸B\u0004?áˆ•8ê±­H<X:áª“");
        assertFalse(subtenantuserInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("96151c6cca95ea57eac2ba8ede214aed", null,
                                                             "7bbe62d0-b2af-4d69-b145-a870c1ca6446",
                                                             new Date(1558000752400L), 112, null,
                                                             "cc878.bba50@19c6c.fr", true,
                                                             "7005f2b7-0e3c-4866-aa20-f3ceca071d5d",
                                                             "96151c6cca95ea57eac2ba8ede214aed", true, true, false, 73,
                                                             null, null, "f7d39b94-ddd2-4406-8c70-e83ff8013e6c", -30,
                                                             "fd72fa19-cb3c-4686-ac08-ce4c0c380a5e",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1558000750617L), "9_6E");
            SubtenantUser subtenantuser2 = new SubtenantUser("96151c6cca95ea57eac2ba8ede214aed", null,
                                                             "7bbe62d0-b2af-4d69-b145-a870c1ca6446",
                                                             new Date(1558000752400L), 112, null,
                                                             "cc878.bba50@19c6c.fr", true,
                                                             "7005f2b7-0e3c-4866-aa20-f3ceca071d5d",
                                                             "96151c6cca95ea57eac2ba8ede214aed", true, true, false, 73,
                                                             null, null, "f7d39b94-ddd2-4406-8c70-e83ff8013e6c", -30,
                                                             "fd72fa19-cb3c-4686-ac08-ce4c0c380a5e",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1558000750617L), "9_6E");
            SubtenantUser subtenantuser3 = new SubtenantUser("96151c6cca95ea57eac2ba8ede214aed", null,
                                                             "1bfc114f-f7e6-4eb1-8475-58929317a419",
                                                             new Date(1558000748237L), -13, null,
                                                             "e05a7.0fd5f@71fc3.me", true,
                                                             "abdbd420-ad8b-4297-bbb9-f857e6199409",
                                                             "96151c6cca95ea57eac2ba8ede214aed", true, true, false, 90,
                                                             null, null, "d2d1c069-a9c7-41d2-828d-06199d81a585", 109,
                                                             "259c9234-7d8c-41dd-9959-95a1d1b17cdb",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1558000746199L), "9_6E");
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotNull(subtenantuser3);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertNotSame(subtenantuser3, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser1, subtenantuser2);
            assertEquals(subtenantuser1, subtenantuser1);
            assertFalse(subtenantuser1.equals(null));
            assertNotEquals(subtenantuser3, subtenantuser1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
