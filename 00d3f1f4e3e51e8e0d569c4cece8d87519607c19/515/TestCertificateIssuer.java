// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.security.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model CertificateIssuer.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestCertificateIssuer {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            CertificateIssuer certificateissuer1 = new CertificateIssuer(new Date(1558000751361L),
                                                                         "20395595-c469-4bb4-909b-6c364610b87e",
                                                                         "590595e6-df48-4bc2-a8df-f2b2ad2950f6", null,
                                                                         CertificateIssuerType.getDefault(),
                                                                         "77f435c3-7c19-49e0-931a-d19005db8c66");
            CertificateIssuer certificateissuer2 = certificateissuer1.clone();
            assertNotNull(certificateissuer1);
            assertNotNull(certificateissuer2);
            assertNotSame(certificateissuer2, certificateissuer1);
            assertEquals(certificateissuer2, certificateissuer1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            CertificateIssuer certificateissuer1 = new CertificateIssuer(new Date(1558000751778L),
                                                                         "d9e395ad-c75b-4a1e-ba18-12e501aa0f68",
                                                                         "855834ac-6988-4a08-836e-94c844f4d00b", null,
                                                                         CertificateIssuerType.getDefault(),
                                                                         "1b77c60b-e867-4bd2-8d92-ef5bd511a578");
            CertificateIssuer certificateissuer2 = new CertificateIssuer(new Date(1558000751778L),
                                                                         "d9e395ad-c75b-4a1e-ba18-12e501aa0f68",
                                                                         "855834ac-6988-4a08-836e-94c844f4d00b", null,
                                                                         CertificateIssuerType.getDefault(),
                                                                         "1b77c60b-e867-4bd2-8d92-ef5bd511a578");
            assertNotNull(certificateissuer1);
            assertNotNull(certificateissuer2);
            assertNotSame(certificateissuer2, certificateissuer1);
            assertEquals(certificateissuer2, certificateissuer1);
            assertEquals(certificateissuer2.hashCode(), certificateissuer1.hashCode());
            int hashCode = certificateissuer1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, certificateissuer1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        CertificateIssuer certificateissuer = new CertificateIssuer(new Date(1558000749857L),
                                                                    "27035e80-4a86-4af6-a353-5488605ddba6",
                                                                    "476c2804-53d2-40ba-bc0f-a897b49fd2e8", null,
                                                                    CertificateIssuerType.getDefault(),
                                                                    "f6cedf1b-0f44-48ed-b47c-dfe6d4601897");
        assertTrue(certificateissuer.isValid());
        CertificateIssuer certificateissuerInvalid = new CertificateIssuer(new Date(1558000754156L),
                                                                           "a2f74fbf-b0dd-4754-98a6-39f46b3352abe669ca4b-d457-4e54-95c2-112e7918ec9973ac2d4b-358c-4e2e-95ed-331e59788a4d",
                                                                           "9594fccb-1b09-4016-ac9a-7a57b7046b55", null,
                                                                           CertificateIssuerType.getDefault(), null);
        assertFalse(certificateissuerInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            CertificateIssuer certificateissuer1 = new CertificateIssuer(new Date(1558000753771L),
                                                                         "17e2fc85-ce3c-4a34-bde1-58a7bf0b6420",
                                                                         "6e6c049e-e036-4a2a-abaa-7a8bb15d2a8f", null,
                                                                         CertificateIssuerType.getDefault(),
                                                                         "d8ebb149-7715-4fa1-8aa4-df96027a9b09");
            CertificateIssuer certificateissuer2 = new CertificateIssuer(new Date(1558000753771L),
                                                                         "17e2fc85-ce3c-4a34-bde1-58a7bf0b6420",
                                                                         "6e6c049e-e036-4a2a-abaa-7a8bb15d2a8f", null,
                                                                         CertificateIssuerType.getDefault(),
                                                                         "d8ebb149-7715-4fa1-8aa4-df96027a9b09");
            CertificateIssuer certificateissuer3 = new CertificateIssuer(new Date(1558000753758L),
                                                                         "7dd3db15-9cf0-4be7-af00-51b4b8188dce",
                                                                         "02e42c04-e119-4674-86b3-630f8f849691", null,
                                                                         CertificateIssuerType.getDefault(),
                                                                         "6e9f596b-d65b-43b4-8de4-2742afeb8bdf");
            assertNotNull(certificateissuer1);
            assertNotNull(certificateissuer2);
            assertNotNull(certificateissuer3);
            assertNotSame(certificateissuer2, certificateissuer1);
            assertNotSame(certificateissuer3, certificateissuer1);
            assertEquals(certificateissuer2, certificateissuer1);
            assertEquals(certificateissuer2, certificateissuer1);
            assertEquals(certificateissuer1, certificateissuer2);
            assertEquals(certificateissuer1, certificateissuer1);
            assertFalse(certificateissuer1.equals(null));
            assertNotEquals(certificateissuer3, certificateissuer1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
