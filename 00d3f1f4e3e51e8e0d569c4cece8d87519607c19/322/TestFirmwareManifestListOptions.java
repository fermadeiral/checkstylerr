// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.deviceupdate.model;

import static org.junit.Assert.*;

import com.arm.mbed.cloud.sdk.common.Order;
import com.arm.mbed.cloud.sdk.common.listing.ListOptionsEncoder;
import com.arm.mbed.cloud.sdk.common.listing.filtering.FilterOperator;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import org.junit.Test;

/**
 * Unit tests for Model FirmwareManifestListOptions.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestFirmwareManifestListOptions {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            FirmwareManifestListOptions firmwaremanifestlistoptions1 = new FirmwareManifestListOptions(Integer.valueOf(-103),
                                                                                                       Long.valueOf(-39),
                                                                                                       Order.getDefault(),
                                                                                                       "2df56e34-849b-4991-84ad-9bd97962a1de",
                                                                                                       null, null);
            FirmwareManifestListOptions firmwaremanifestlistoptions2 = firmwaremanifestlistoptions1.clone();
            assertNotNull(firmwaremanifestlistoptions1);
            assertNotNull(firmwaremanifestlistoptions2);
            assertNotSame(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the filters method.
     */
    @SuppressWarnings({ "boxing", "resource" })
    @Test
    public void testFilters() {
        try {
            FirmwareManifestListOptions option = new FirmwareManifestListOptions().inCreatedAts(Arrays.asList(new Date(1558000755646L),
                                                                                                              new Date(1558000753276L),
                                                                                                              new Date(1558000752395L),
                                                                                                              new Date(1558000755202L),
                                                                                                              new Date(1558000758081L),
                                                                                                              new Date(1558000757160L),
                                                                                                              new Date(1558000755050L),
                                                                                                              new Date(1558000756625L),
                                                                                                              new Date(1558000751692L)))
                                                                                  .notInCreatedAts(Arrays.asList(new Date(1558000751552L),
                                                                                                                 new Date(1558000751242L),
                                                                                                                 new Date(1558000750953L),
                                                                                                                 new Date(1558000758147L),
                                                                                                                 new Date(1558000749994L),
                                                                                                                 new Date(1558000749561L),
                                                                                                                 new Date(1558000753995L)))
                                                                                  .lessThanCreatedAt(new Date(1558000748462L))
                                                                                  .greaterThanCreatedAt(new Date(1558000751291L))
                                                                                  .equalToName("cf67ba74-38ee-4924-8770-9f38318b1ef8")
                                                                                  .notEqualToName("fe87e6f1-0d68-43e8-a4df-3e597e91172f")
                                                                                  .inNames(Arrays.asList("8eb4c0f1-c56f-44c6-b14f-ff1cdc4f219e",
                                                                                                         "f17d1b31-8f65-4b72-9488-fccba42b82b5",
                                                                                                         "6d7c7edb-2a41-45ea-bb90-bea76bd630d7",
                                                                                                         "0925969b-ce16-4e30-9cb5-27ab529a44c4",
                                                                                                         "e54515b3-8844-4def-820f-a19dc5a682a6",
                                                                                                         "b0e950e6-5f24-4d01-96d3-ac9de8cbc505"))
                                                                                  .notInNames(Arrays.asList("4b4ac385-3028-4c14-ad36-d525ad1eb2ab",
                                                                                                            "85f43eda-1f18-4354-81b0-459979b7c05a",
                                                                                                            "ca9f8870-afd7-4386-95c2-c7b8a00dd3d1",
                                                                                                            "0107ab30-0f81-4d16-b087-b093039048e9",
                                                                                                            "4dea021e-7697-4582-99f4-04b14c239be6",
                                                                                                            "70bf493f-8285-4c69-91d5-fcadf84ba38c"))
                                                                                  .equalToId("0407cf62-6f08-4c3d-a6d3-500d9b9d8b79")
                                                                                  .notEqualToId("97b50d09-4c0a-4cff-9c80-fc010fa50bce")
                                                                                  .inIds(Arrays.asList("ca715878-3242-47bc-b241-81a5d9d7bcaa",
                                                                                                       "4a0f3415-51c0-4456-8748-34ecddc01ba4",
                                                                                                       "530059ff-6183-4e02-b160-4ff537f08992"))
                                                                                  .notInIds(Arrays.asList("e1f01205-bdde-4929-970e-27b01a1cdf27",
                                                                                                          "b31a35b3-2af5-479e-b165-0e085ad3339c",
                                                                                                          "91f22ecb-2486-49de-87e0-10b4877b5e11",
                                                                                                          "dbfa7619-f98b-46c9-9293-a9129792a14d",
                                                                                                          "0ed9d570-cae3-4987-90d5-0eb358707d9b",
                                                                                                          "47bd7ca2-0eb2-40e5-bf89-22a9cf89d544",
                                                                                                          "9fada525-7990-44ac-97d6-fbfe924e2871"))
                                                                                  .equalToDatafileUrl("9621257a-6848-4dae-9f0d-4a4ef613c763")
                                                                                  .notEqualToDatafileUrl("92b18658-91f2-4bb2-8177-64e12d2b2741")
                                                                                  .inDatafileUrls(Arrays.asList("67439486-2897-4323-aa2c-f58e7121f24f",
                                                                                                                "729d3a65-8994-4124-a742-4d60d2a7f3d1",
                                                                                                                "c55ac519-d78f-4e45-a968-5a4fd77c9593"))
                                                                                  .notInDatafileUrls(Arrays.asList("ec44bce2-ffe2-4002-a68d-38185038d477",
                                                                                                                   "4a2bbe0c-2dad-49a4-b606-c7de877f7546"))
                                                                                  .equalToDatafileSize(Long.valueOf(-49))
                                                                                  .notEqualToDatafileSize(Long.valueOf(-53))
                                                                                  .inDatafileSizes(Arrays.asList(Long.valueOf(86),
                                                                                                                 Long.valueOf(49),
                                                                                                                 Long.valueOf(-86),
                                                                                                                 Long.valueOf(-85),
                                                                                                                 Long.valueOf(-121)))
                                                                                  .notInDatafileSizes(Arrays.asList(Long.valueOf(126),
                                                                                                                    Long.valueOf(45),
                                                                                                                    Long.valueOf(-74),
                                                                                                                    Long.valueOf(19)))
                                                                                  .equalToDeviceClass("c6b3bf84-ec0c-40e4-a40f-884f8758c30b")
                                                                                  .notEqualToDeviceClass("6a891d09-963e-4c9c-acb4-e71aea2f63e9")
                                                                                  .inDeviceClass(Arrays.asList("ccf5ac9d-d96a-4ffd-9694-083045dafea0",
                                                                                                               "996009c7-f63b-4e1d-9eec-974c9484521f",
                                                                                                               "91b8039a-99e0-4260-929c-73694bc9e601",
                                                                                                               "2f3f1754-2c3a-4c15-9aed-0a21dedfbd70",
                                                                                                               "abab24ff-0fcb-4be8-9880-043e584e5381",
                                                                                                               "3c85bc8c-da7b-4c5d-8cae-a9f8f47c5d7e"))
                                                                                  .notInDeviceClass(Arrays.asList("6b6c53fb-dd6d-4330-aaa7-e3f605a64fe4",
                                                                                                                  "67e33586-31a8-4d88-aa53-a55e8b9d811e",
                                                                                                                  "8d67541d-4316-4fb6-9efc-783e25a5be76",
                                                                                                                  "c985b393-9ef8-4e0b-8019-3321846c5074",
                                                                                                                  "c11a4ee2-4e95-4348-a2a3-341eb52efc26",
                                                                                                                  "9657e4ea-cb44-4781-9347-eaff64a49915",
                                                                                                                  "5b7a769a-1b1c-44af-bfae-1fce67d17f7f"))
                                                                                  .inTimestamps(Arrays.asList(new Date(1558000753087L)))
                                                                                  .notInTimestamps(Arrays.asList(new Date(1558000755873L),
                                                                                                                 new Date(1558000751710L),
                                                                                                                 new Date(1558000749745L),
                                                                                                                 new Date(1558000750175L),
                                                                                                                 new Date(1558000757246L),
                                                                                                                 new Date(1558000751469L)))
                                                                                  .lessThanTimestamp(new Date(1558000749442L))
                                                                                  .greaterThanTimestamp(new Date(1558000757861L))
                                                                                  .inUpdatedAts(Arrays.asList(new Date(1558000749514L)))
                                                                                  .notInUpdatedAts(Arrays.asList(new Date(1558000754778L),
                                                                                                                 new Date(1558000753851L),
                                                                                                                 new Date(1558000756764L),
                                                                                                                 new Date(1558000757099L),
                                                                                                                 new Date(1558000757459L),
                                                                                                                 new Date(1558000753416L)))
                                                                                  .lessThanUpdatedAt(new Date(1558000749176L))
                                                                                  .greaterThanUpdatedAt(new Date(1558000751117L))
                                                                                  .equalToDescription("ea43f19e-23d7-45c8-a418-b387fade831c")
                                                                                  .notEqualToDescription("fbb673de-5633-42c6-9d92-4a561d2e4e4f")
                                                                                  .inDescriptions(Arrays.asList("58852447-1930-4013-9377-fb0dcc2d181c",
                                                                                                                "7ecb5ec0-d4e2-4066-a535-d779d21ed9f1",
                                                                                                                "d0acb27d-ebd8-4d9e-8497-bd59cf58a6dd",
                                                                                                                "54b4d9ec-8b35-44a0-966d-6e8dcb5af345"))
                                                                                  .notInDescriptions(Arrays.asList("53036f04-a326-44b3-88a5-0df5f0a107d9",
                                                                                                                   "fc572f42-5c2e-4111-aed7-3caf250707ed"));
            assertTrue(option.hasFilters());
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1558000755646L), new Date(1558000753276L), new Date(1558000752395L),
                                       new Date(1558000755202L), new Date(1558000758081L), new Date(1558000757160L),
                                       new Date(1558000755050L), new Date(1558000756625L), new Date(1558000751692L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1558000751552L), new Date(1558000751242L), new Date(1558000750953L),
                                       new Date(1558000758147L), new Date(1558000749994L), new Date(1558000749561L),
                                       new Date(1558000753995L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                        FilterOperator.LESS_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1558000748462L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1558000751291L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME, FilterOperator.EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("cf67ba74-38ee-4924-8770-9f38318b1ef8",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("fe87e6f1-0d68-43e8-a4df-3e597e91172f",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME, FilterOperator.IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("8eb4c0f1-c56f-44c6-b14f-ff1cdc4f219e", "f17d1b31-8f65-4b72-9488-fccba42b82b5",
                                       "6d7c7edb-2a41-45ea-bb90-bea76bd630d7", "0925969b-ce16-4e30-9cb5-27ab529a44c4",
                                       "e54515b3-8844-4def-820f-a19dc5a682a6", "b0e950e6-5f24-4d01-96d3-ac9de8cbc505"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("4b4ac385-3028-4c14-ad36-d525ad1eb2ab", "85f43eda-1f18-4354-81b0-459979b7c05a",
                                       "ca9f8870-afd7-4386-95c2-c7b8a00dd3d1", "0107ab30-0f81-4d16-b087-b093039048e9",
                                       "4dea021e-7697-4582-99f4-04b14c239be6", "70bf493f-8285-4c69-91d5-fcadf84ba38c"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID, FilterOperator.EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("0407cf62-6f08-4c3d-a6d3-500d9b9d8b79",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("97b50d09-4c0a-4cff-9c80-fc010fa50bce",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID, FilterOperator.IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("ca715878-3242-47bc-b241-81a5d9d7bcaa", "4a0f3415-51c0-4456-8748-34ecddc01ba4",
                                       "530059ff-6183-4e02-b160-4ff537f08992"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("e1f01205-bdde-4929-970e-27b01a1cdf27", "b31a35b3-2af5-479e-b165-0e085ad3339c",
                                       "91f22ecb-2486-49de-87e0-10b4877b5e11", "dbfa7619-f98b-46c9-9293-a9129792a14d",
                                       "0ed9d570-cae3-4987-90d5-0eb358707d9b", "47bd7ca2-0eb2-40e5-bf89-22a9cf89d544",
                                       "9fada525-7990-44ac-97d6-fbfe924e2871"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("9621257a-6848-4dae-9f0d-4a4ef613c763",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("92b18658-91f2-4bb2-8177-64e12d2b2741",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("67439486-2897-4323-aa2c-f58e7121f24f", "729d3a65-8994-4124-a742-4d60d2a7f3d1",
                                       "c55ac519-d78f-4e45-a968-5a4fd77c9593"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("ec44bce2-ffe2-4002-a68d-38185038d477", "4a2bbe0c-2dad-49a4-b606-c7de877f7546"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(-49),
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    Long.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(-53),
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                       Long.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(86), Long.valueOf(49), Long.valueOf(-86), Long.valueOf(-85),
                                       Long.valueOf(-121)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                        FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(126), Long.valueOf(45), Long.valueOf(-74), Long.valueOf(19)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS, FilterOperator.EQUAL));
            assertNotNull(option.getDeviceClassFilters());
            assertEquals("c6b3bf84-ec0c-40e4-a40f-884f8758c30b",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDeviceClassFilters());
            assertEquals("6a891d09-963e-4c9c-acb4-e71aea2f63e9",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS, FilterOperator.IN));
            assertNotNull(option.getDeviceClassFilters());
            assertEquals(Arrays.asList("ccf5ac9d-d96a-4ffd-9694-083045dafea0", "996009c7-f63b-4e1d-9eec-974c9484521f",
                                       "91b8039a-99e0-4260-929c-73694bc9e601", "2f3f1754-2c3a-4c15-9aed-0a21dedfbd70",
                                       "abab24ff-0fcb-4be8-9880-043e584e5381", "3c85bc8c-da7b-4c5d-8cae-a9f8f47c5d7e"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS, FilterOperator.NOT_IN));
            assertNotNull(option.getDeviceClassFilters());
            assertEquals(Arrays.asList("6b6c53fb-dd6d-4330-aaa7-e3f605a64fe4", "67e33586-31a8-4d88-aa53-a55e8b9d811e",
                                       "8d67541d-4316-4fb6-9efc-783e25a5be76", "c985b393-9ef8-4e0b-8019-3321846c5074",
                                       "c11a4ee2-4e95-4348-a2a3-341eb52efc26", "9657e4ea-cb44-4781-9347-eaff64a49915",
                                       "5b7a769a-1b1c-44af-bfae-1fce67d17f7f"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP, FilterOperator.IN));
            assertNotNull(option.getTimestampFilters());
            assertEquals(Arrays.asList(new Date(1558000753087L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP, FilterOperator.NOT_IN));
            assertNotNull(option.getTimestampFilters());
            assertEquals(Arrays.asList(new Date(1558000755873L), new Date(1558000751710L), new Date(1558000749745L),
                                       new Date(1558000750175L), new Date(1558000757246L), new Date(1558000751469L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP, FilterOperator.LESS_THAN));
            assertNotNull(option.getTimestampFilters());
            assertEquals(new Date(1558000749442L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getTimestampFilters());
            assertEquals(new Date(1558000757861L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1558000749514L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1558000754778L), new Date(1558000753851L), new Date(1558000756764L),
                                       new Date(1558000757099L), new Date(1558000757459L), new Date(1558000753416L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                        FilterOperator.LESS_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1558000749176L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1558000751117L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("ea43f19e-23d7-45c8-a418-b387fade831c",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("fbb673de-5633-42c6-9d92-4a561d2e4e4f",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("58852447-1930-4013-9377-fb0dcc2d181c", "7ecb5ec0-d4e2-4066-a535-d779d21ed9f1",
                                       "d0acb27d-ebd8-4d9e-8497-bd59cf58a6dd", "54b4d9ec-8b35-44a0-966d-6e8dcb5af345"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("53036f04-a326-44b3-88a5-0df5f0a107d9", "fc572f42-5c2e-4111-aed7-3caf250707ed"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    List.class, option));
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            FirmwareManifestListOptions firmwaremanifestlistoptions1 = new FirmwareManifestListOptions(Integer.valueOf(-31),
                                                                                                       Long.valueOf(-125),
                                                                                                       Order.getDefault(),
                                                                                                       "41c1be7d-ed95-445d-8276-aedc01cc5785",
                                                                                                       null, null);
            FirmwareManifestListOptions firmwaremanifestlistoptions2 = new FirmwareManifestListOptions(Integer.valueOf(-31),
                                                                                                       Long.valueOf(-125),
                                                                                                       Order.getDefault(),
                                                                                                       "41c1be7d-ed95-445d-8276-aedc01cc5785",
                                                                                                       null, null);
            assertNotNull(firmwaremanifestlistoptions1);
            assertNotNull(firmwaremanifestlistoptions2);
            assertNotSame(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2.hashCode(), firmwaremanifestlistoptions1.hashCode());
            int hashCode = firmwaremanifestlistoptions1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, firmwaremanifestlistoptions1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            FirmwareManifestListOptions firmwaremanifestlistoptions1 = new FirmwareManifestListOptions(Integer.valueOf(10),
                                                                                                       Long.valueOf(-100),
                                                                                                       Order.getDefault(),
                                                                                                       "56c84b0d-2c39-4b16-8f5c-b883ec0d57b9",
                                                                                                       null, null);
            FirmwareManifestListOptions firmwaremanifestlistoptions2 = new FirmwareManifestListOptions(Integer.valueOf(10),
                                                                                                       Long.valueOf(-100),
                                                                                                       Order.getDefault(),
                                                                                                       "56c84b0d-2c39-4b16-8f5c-b883ec0d57b9",
                                                                                                       null, null);
            FirmwareManifestListOptions firmwaremanifestlistoptions3 = new FirmwareManifestListOptions(Integer.valueOf(-80),
                                                                                                       Long.valueOf(115),
                                                                                                       Order.getDefault(),
                                                                                                       "b290ae8e-9fb1-4b97-a0ee-84addb17efaa",
                                                                                                       null, null);
            assertNotNull(firmwaremanifestlistoptions1);
            assertNotNull(firmwaremanifestlistoptions2);
            assertNotNull(firmwaremanifestlistoptions3);
            assertNotSame(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertNotSame(firmwaremanifestlistoptions3, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions1, firmwaremanifestlistoptions2);
            assertEquals(firmwaremanifestlistoptions1, firmwaremanifestlistoptions1);
            assertFalse(firmwaremanifestlistoptions1.equals(null));
            assertNotEquals(firmwaremanifestlistoptions3, firmwaremanifestlistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
