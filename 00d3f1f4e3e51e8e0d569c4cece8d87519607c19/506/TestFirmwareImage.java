// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.deviceupdate.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model FirmwareImage.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestFirmwareImage {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            FirmwareImage firmwareimage1 = new FirmwareImage(new Date(1558000746908L),
                                                             "7084b6f0-dc06-40c4-af22-9c29b87dd041", -19,
                                                             "bd58450e-7098-4b61-a492-f0ee8f893cd4",
                                                             "3d11f13d-7dfd-48f8-b4fb-c6b06dd09ba5",
                                                             "8c3fd3c5-6f08-496c-a017-c8ebef4208fe",
                                                             "cdc58b95-2b62-4dee-97fe-ff5fbc30d8cf",
                                                             new Date(1558000750151L));
            FirmwareImage firmwareimage2 = firmwareimage1.clone();
            assertNotNull(firmwareimage1);
            assertNotNull(firmwareimage2);
            assertNotSame(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage2, firmwareimage1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            FirmwareImage firmwareimage1 = new FirmwareImage(new Date(1558000747065L),
                                                             "98f56375-3716-4a9d-8629-db16e0a9e37e", 7,
                                                             "5c671f95-097d-4d04-8fce-268bb35c7486",
                                                             "811d1092-85c1-4c5d-a691-1b36e3ef7812",
                                                             "99dbfd17-4c37-4f78-8f23-9d55f85522da",
                                                             "0e788dd7-2990-47fa-bb0b-a15c1af64f55",
                                                             new Date(1558000751033L));
            FirmwareImage firmwareimage2 = new FirmwareImage(new Date(1558000747065L),
                                                             "98f56375-3716-4a9d-8629-db16e0a9e37e", 7,
                                                             "5c671f95-097d-4d04-8fce-268bb35c7486",
                                                             "811d1092-85c1-4c5d-a691-1b36e3ef7812",
                                                             "99dbfd17-4c37-4f78-8f23-9d55f85522da",
                                                             "0e788dd7-2990-47fa-bb0b-a15c1af64f55",
                                                             new Date(1558000751033L));
            assertNotNull(firmwareimage1);
            assertNotNull(firmwareimage2);
            assertNotSame(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage2.hashCode(), firmwareimage1.hashCode());
            int hashCode = firmwareimage1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, firmwareimage1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        FirmwareImage firmwareimage = new FirmwareImage(new Date(1558000749411L),
                                                        "1483a980-bf20-4f71-ba20-be4d0e6fd377", -100,
                                                        "3eb87aee-130a-45fe-ba94-3bbac505f20d",
                                                        "2eaed8fd-439f-440d-90fb-6d1de2086138",
                                                        "2485e5c9-bd77-43eb-af91-2f37ca1cc214",
                                                        "3d06f86b-a9fd-4a8d-8a31-8df50b4589e4",
                                                        new Date(1558000748976L));
        assertTrue(firmwareimage.isValid());
        FirmwareImage firmwareimageInvalid = new FirmwareImage(new Date(1558000755747L),
                                                               "5cd20573-397a-4e3a-9791-724100ab0737", 42,
                                                               "5c058007-e740-4e9b-b1d2-1db72e6486c6",
                                                               "2f8f7f53-102b-49bd-a03e-c0d7893d49acd5a1211b-0a2f-45ab-9ddf-eb06538c00d9ecfc870e-5e4b-4791-9d0a-6bbc827ee09f094a51ce-cc1b-42ff-b013-6d693c0e40b41edbaeae-495a-434b-9998-a93db9235951ab747ed1-4743-4ce1-900f-3d9bd6b0da8e43fc527e-d0a8-4288-8c36-07fbea88b51f4ce0d5be-3974-4dac-b3fc-cca2bd8d98f4525f1136-66f3-4af0-b44d-dde67112c058f8abfa0e-681c-466f-be56-eb41bceccbe892e59f9d-7276-4bf0-926a-4ff6436a2241f0b0467e-d557-4cbe-b864-76c5041c5cb9aa6738e9-0397-483a-bfee-f720fad4076a4edcf436-2355-4fd2-ad38-587581201cdf3fd8fed4-1f68-4fed-8888-3b887908775b35b01979-e48b-4b76-b593-11248444bc199714b93d-5ebd-41f5-b43a-62ef259344a23a304209-1fd8-499d-8dfa-a43b4ffe3cb31826f289-fc8e-4d52-9ffe-b0d96f4e5e627462a1ba-cb97-4987-949c-a1d05293a3f485a84586-8794-4a21-9705-38791f91dec15adacb9f-5f55-4b78-aa96-bdd900d44d0b9ef3fd7c-f7dd-47c4-acc1-8fb845c825335f185390-fc0e-404e-9de6-4d745407669d979b64c0-1e60-4551-b9a7-cb70f3024e0d1a25424d-0d6f-4a22-97ba-747ba18074095c710e89-3ea5-4527-84ec-40b2c77fd225286222f0-3262-443e-98f0-c83f770d52ba84ddd926-a97a-41be-ab89-efbcbb3a801b05571171-e3a7-4ba6-9782-9100c71a3578ce3c4918-6d6b-4593-b3ba-09b8a2ec5e664934441e-ae6e-414a-80da-4ac25c2cc97a67fd0a31-1611-4e94-9cb4-1a72c9beee0c8b9a20a1-c4fe-4329-9647-d538eb2d4b88fc0e5734-d2ac-45c6-b231-379292f68d10a06cf2aa-2b05-4cf8-abea-50ca9678790aeffd8d28-948c-4f3d-a31d-c33d51434291e0eb456c-be78-473b-9ecc-ac9379fdbf7228059cc9-7ec9-4957-9938-cd5a7ea6fc133a164dfc-311d-46be-93e9-f571fb18132fb9284e76-9778-43fc-a92e-6d45d27fe32e81ba8cab-03fc-48ce-ba6a-6777dbf65c809af55f45-5679-4cdf-8d9d-25642eded6e49f0bf25e-35f3-468e-865a-6303144d74567d65a8c6-818c-4de4-8df3-c1776152a5680223be9c-7df5-40dd-af48-14708ebc5bd3948fde81-77c7-478f-a485-93e2efceaa2acf928719-4d01-4a25-b348-d463ee30bb091b4adf26-01b6-4aa1-8dca-e276a9474bc38d25b550-2430-4bf2-9406-f2d35cda5ae718fe1517-8153-4dec-8acc-a225992e72ca05ec4fee-87e4-42b9-a61b-607983282eea647b7659-296f-4fe6-a5c7-13576b6845c7fd0c387a-68b5-4a72-a299-3df299969ea33e6ee024-0dfc-4bc0-aaea-9b1d3777a47540a3cae9-eea9-4c41-98d8-53c9e31639a3",
                                                               "32847f8c-5d1f-49ce-b614-56d4fc07fc0e",
                                                               "81cfe874-7d98-40ed-98dc-ce34cb884e0762da741b-7828-4057-901c-9f753aec6ae1f70deaf1-0c33-4e70-a837-6ef85e3887b8dade9d1e-7f8a-40c3-a4a9-a83a988f761f",
                                                               new Date(1558000746589L));
        assertFalse(firmwareimageInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            FirmwareImage firmwareimage1 = new FirmwareImage(new Date(1558000750022L),
                                                             "297c1d33-3550-4f5f-83ae-2997fc7f4c09", 58,
                                                             "d38b73e3-c893-4a75-a0b1-017b5cf888f8",
                                                             "ceadb6ba-9815-4586-84e7-0bfb440ffecd",
                                                             "b41cdf40-f0e6-4195-8f73-e516fb9ca03a",
                                                             "1b50cba9-dc76-4110-b822-48ab5d19b681",
                                                             new Date(1558000755704L));
            FirmwareImage firmwareimage2 = new FirmwareImage(new Date(1558000750022L),
                                                             "297c1d33-3550-4f5f-83ae-2997fc7f4c09", 58,
                                                             "d38b73e3-c893-4a75-a0b1-017b5cf888f8",
                                                             "ceadb6ba-9815-4586-84e7-0bfb440ffecd",
                                                             "b41cdf40-f0e6-4195-8f73-e516fb9ca03a",
                                                             "1b50cba9-dc76-4110-b822-48ab5d19b681",
                                                             new Date(1558000755704L));
            FirmwareImage firmwareimage3 = new FirmwareImage(new Date(1558000749901L),
                                                             "1da1739e-3a34-41ed-b8c6-fc1f81916d5f", -96,
                                                             "929f0efd-26a5-438b-bc7e-c7fe52f5efd3",
                                                             "bd6612a5-b0af-4519-847e-78d4410c55ba",
                                                             "209ee747-c143-460a-8289-601d585e5f46",
                                                             "5e6a9dcc-461d-4f33-8cde-6f82c4bc0b14",
                                                             new Date(1558000748979L));
            assertNotNull(firmwareimage1);
            assertNotNull(firmwareimage2);
            assertNotNull(firmwareimage3);
            assertNotSame(firmwareimage2, firmwareimage1);
            assertNotSame(firmwareimage3, firmwareimage1);
            assertEquals(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage1, firmwareimage2);
            assertEquals(firmwareimage1, firmwareimage1);
            assertFalse(firmwareimage1.equals(null));
            assertNotEquals(firmwareimage3, firmwareimage1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
