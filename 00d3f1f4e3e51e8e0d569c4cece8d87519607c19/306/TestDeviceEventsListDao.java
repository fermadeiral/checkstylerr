// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model DeviceEventsListDao.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEventsListDao {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEventsListDao deviceeventslistdao1 = new DeviceEventsListDao();
            DeviceEventsListDao deviceeventslistdao2 = deviceeventslistdao1.clone();
            assertNotNull(deviceeventslistdao1);
            assertNotNull(deviceeventslistdao2);
            assertNotSame(deviceeventslistdao2, deviceeventslistdao1);
            assertEquals(deviceeventslistdao2, deviceeventslistdao1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEventsListDao deviceeventslistdao1 = new DeviceEventsListDao();
            DeviceEventsListDao deviceeventslistdao2 = new DeviceEventsListDao();
            assertNotNull(deviceeventslistdao1);
            assertNotNull(deviceeventslistdao2);
            assertNotSame(deviceeventslistdao2, deviceeventslistdao1);
            assertEquals(deviceeventslistdao2, deviceeventslistdao1);
            assertEquals(deviceeventslistdao2.hashCode(), deviceeventslistdao1.hashCode());
            int hashCode = deviceeventslistdao1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceeventslistdao1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEventsListDao deviceeventslistdao1 = new DeviceEventsListDao();
            DeviceEventsListDao deviceeventslistdao2 = new DeviceEventsListDao();
            assertNotNull(deviceeventslistdao1);
            assertNotNull(deviceeventslistdao2);
            assertNotSame(deviceeventslistdao2, deviceeventslistdao1);
            assertEquals(deviceeventslistdao2, deviceeventslistdao1);
            assertEquals(deviceeventslistdao2, deviceeventslistdao1);
            assertEquals(deviceeventslistdao1, deviceeventslistdao2);
            assertEquals(deviceeventslistdao1, deviceeventslistdao1);
            assertFalse(deviceeventslistdao1.equals(null));
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
