// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEvents.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEvents {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1558000755168L), null,
                                                          new Date(1558000749675L),
                                                          "6eb094ab-afd9-491d-a79c-54090dcf29ff",
                                                          "b9dfd8a8-b143-41b5-b77b-65269ecc187b",
                                                          "8ea5fd8f-b50b-498a-a7ac-77b461f4525d",
                                                          "33d92594-385a-4b41-8a5c-a952a1c6cebd",
                                                          "f17bc27c-4900-4db2-a390-8223cecd77fb",
                                                          "3d780965-fb84-4d4b-a093-34e458ed0979", true);
            DeviceEvents deviceevents2 = deviceevents1.clone();
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1558000754280L), null,
                                                          new Date(1558000745805L),
                                                          "33f549ea-ccee-4e10-934a-8b5c8a341e91",
                                                          "9e7a678e-dcec-4d51-994a-674f4152755c",
                                                          "9bad0661-75be-4de9-991c-8cf30085592a",
                                                          "2cee7d6b-c803-4169-9519-d40393cc1f16",
                                                          "ae4b131f-542b-451f-a25f-7150cd6647a2",
                                                          "4306beb2-c527-46c9-b98e-cfafa3f50b5f", false);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1558000754280L), null,
                                                          new Date(1558000745805L),
                                                          "33f549ea-ccee-4e10-934a-8b5c8a341e91",
                                                          "9e7a678e-dcec-4d51-994a-674f4152755c",
                                                          "9bad0661-75be-4de9-991c-8cf30085592a",
                                                          "2cee7d6b-c803-4169-9519-d40393cc1f16",
                                                          "ae4b131f-542b-451f-a25f-7150cd6647a2",
                                                          "4306beb2-c527-46c9-b98e-cfafa3f50b5f", false);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2.hashCode(), deviceevents1.hashCode());
            int hashCode = deviceevents1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceevents1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEvents deviceevents = new DeviceEvents(null, new Date(1558000746258L), null, new Date(1558000753257L),
                                                     "f1726621-40e7-4052-9a4b-4250d36b91af",
                                                     "b5be3e4c-7cd6-4b79-9070-c8dc98b51629",
                                                     "bd0aeb71-4252-4fc7-ab66-b541a85c05b5",
                                                     "2c25dc12-803d-4bc0-a473-b8b2790d790b",
                                                     "3fa21305-ffed-4254-98fd-56fa529e7603",
                                                     "17e4677d-dfc4-406a-acb5-94f2688a9a34", false);
        assertTrue(deviceevents.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1558000751552L), null,
                                                          new Date(1558000755086L),
                                                          "50ca36ea-52ac-4ff3-a8d8-ce88633d7633",
                                                          "5a61265d-2e41-4637-a3a5-31535d62446d",
                                                          "b90572ea-9830-4a49-adcc-a62c296382de",
                                                          "07d3e168-90c9-4d90-9f02-7699c858ff12",
                                                          "25527c64-082b-4bf8-8219-0c7876da5b0b",
                                                          "e511f539-cb3e-4842-8cef-f924198716e5", true);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1558000751552L), null,
                                                          new Date(1558000755086L),
                                                          "50ca36ea-52ac-4ff3-a8d8-ce88633d7633",
                                                          "5a61265d-2e41-4637-a3a5-31535d62446d",
                                                          "b90572ea-9830-4a49-adcc-a62c296382de",
                                                          "07d3e168-90c9-4d90-9f02-7699c858ff12",
                                                          "25527c64-082b-4bf8-8219-0c7876da5b0b",
                                                          "e511f539-cb3e-4842-8cef-f924198716e5", true);
            DeviceEvents deviceevents3 = new DeviceEvents(null, new Date(1558000754773L), null,
                                                          new Date(1558000746357L),
                                                          "b48b1e32-5495-40ee-a566-32c0a64deec1",
                                                          "7ca6b301-a955-400c-abc9-77a858f0a5c4",
                                                          "d0a6bc5f-4d6b-483d-a5b1-321cad531190",
                                                          "5af91b4b-fca6-4870-9d1d-d120f0617d45",
                                                          "537cd001-eed7-4bf0-9642-e4b22a801660",
                                                          "15626cb2-9ebd-442c-83ad-4f078a4c927f", true);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotNull(deviceevents3);
            assertNotSame(deviceevents2, deviceevents1);
            assertNotSame(deviceevents3, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents1, deviceevents2);
            assertEquals(deviceevents1, deviceevents1);
            assertFalse(deviceevents1.equals(null));
            assertNotEquals(deviceevents3, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
