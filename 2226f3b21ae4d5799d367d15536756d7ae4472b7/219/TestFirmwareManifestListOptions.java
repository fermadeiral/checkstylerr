// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.deviceupdate.model;

import static org.junit.Assert.*;

import com.arm.mbed.cloud.sdk.common.Order;
import com.arm.mbed.cloud.sdk.common.listing.ListOptionsEncoder;
import com.arm.mbed.cloud.sdk.common.listing.filtering.FilterOperator;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import org.junit.Test;

/**
 * Unit tests for Model FirmwareManifestListOptions.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestFirmwareManifestListOptions {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            FirmwareManifestListOptions firmwaremanifestlistoptions1 = new FirmwareManifestListOptions(Integer.valueOf(-34),
                                                                                                       Long.valueOf(-69),
                                                                                                       Order.getDefault(),
                                                                                                       "9aa298a7-4f1b-435c-a8f4-8e5b4733b9e1",
                                                                                                       null, null);
            FirmwareManifestListOptions firmwaremanifestlistoptions2 = firmwaremanifestlistoptions1.clone();
            assertNotNull(firmwaremanifestlistoptions1);
            assertNotNull(firmwaremanifestlistoptions2);
            assertNotSame(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the filters method.
     */
    @SuppressWarnings({ "boxing", "resource" })
    @Test
    public void testFilters() {
        try {
            FirmwareManifestListOptions option = new FirmwareManifestListOptions().inCreatedAts(Arrays.asList(new Date(1559762584166L)))
                                                                                  .notInCreatedAts(Arrays.asList(new Date(1559762578887L),
                                                                                                                 new Date(1559762575397L),
                                                                                                                 new Date(1559762578814L)))
                                                                                  .lessThanCreatedAt(new Date(1559762578402L))
                                                                                  .greaterThanCreatedAt(new Date(1559762581486L))
                                                                                  .equalToName("0ed3c76e-394a-4ad3-8e7f-c2edb0fd4758")
                                                                                  .notEqualToName("2e9d3c60-6073-4f3e-9a19-c8730a86e07c")
                                                                                  .inNames(Arrays.asList("40aa9ae4-62ec-4634-9313-24c298941dda",
                                                                                                         "750649fe-9290-4058-9695-b753c84d14b9",
                                                                                                         "380ffd3c-f378-4998-bbd6-14226c5d0bc1",
                                                                                                         "abdd205a-2567-4595-917f-705c97395936",
                                                                                                         "5d925acb-1c90-43cc-84ce-69b6bd3dbdcb",
                                                                                                         "a8d00001-690d-4a8f-8423-2747d7075c57",
                                                                                                         "76940452-95d4-49df-bf93-2eca4f667936"))
                                                                                  .notInNames(Arrays.asList("c77edd33-e292-459e-a1f1-feeb42ec1fc3",
                                                                                                            "39e9103f-606a-49ce-8503-7699768b6045",
                                                                                                            "4e912a59-1d94-48cb-aa58-87d23376f22c",
                                                                                                            "a8cc2444-1756-4fce-a6f2-430d5bd3a6ff",
                                                                                                            "39505f7c-4a67-487d-8fd1-add5b4d26385",
                                                                                                            "31808daa-428a-4847-b423-2d14bda20519",
                                                                                                            "8f53f75c-abba-4c61-af6f-a02e834cffb8"))
                                                                                  .equalToId("00618e0d-8139-42db-acee-eaefe10e93c2")
                                                                                  .notEqualToId("9aa94488-1298-473a-bf3f-cb94ad28eaac")
                                                                                  .inIds(Arrays.asList("519a1559-e080-41fb-a2fb-754eb7fd76e7"))
                                                                                  .notInIds(Arrays.asList("7ade9ae2-9474-4345-a4e1-cce09f832308",
                                                                                                          "08cf428c-7045-4732-8bd9-70314cc763b2",
                                                                                                          "f213f7e4-d5ee-4596-881e-cea429d91837",
                                                                                                          "0bc5d7c0-f7f7-4d69-a706-c9dc55b1fbe0",
                                                                                                          "7caa0dcc-0041-404d-8c0e-2f9c46bd588e",
                                                                                                          "0d03835d-47d0-43fa-a319-17efe6f038b9",
                                                                                                          "4b548164-7375-4689-a586-fbf76c8167fb",
                                                                                                          "7a2237b6-be52-448c-ab79-4f803a142bcd"))
                                                                                  .equalToDatafileUrl("bd112c83-3198-4d94-b675-a639754a05ba")
                                                                                  .notEqualToDatafileUrl("7b39f3ff-ed1c-4efd-b5d0-3d14053508d1")
                                                                                  .inDatafileUrls(Arrays.asList("985da6c1-41d3-4343-9d83-8dc11740d7a4",
                                                                                                                "f9f66a4d-5c4c-4b83-8492-3b57ee360935",
                                                                                                                "59d2a260-51a7-4daf-962d-1594a22966f5",
                                                                                                                "62598431-238a-4218-8c2a-ec4a05035a5d",
                                                                                                                "c827e9a2-8b85-4a7e-8077-daa16aa9b48d",
                                                                                                                "fbc0e182-a18f-49a2-9dbb-2820ac6791b3",
                                                                                                                "c8a94c1f-994f-4736-9666-fc9c3ea5d363"))
                                                                                  .notInDatafileUrls(Arrays.asList("7c863292-c44c-4df2-90ba-b027b6536177",
                                                                                                                   "9c99d1e0-11bf-4cca-8705-be581e46f77b",
                                                                                                                   "497d170e-2d93-48ae-a83a-48476e6ee2a1",
                                                                                                                   "376a80a7-9e10-4301-9d38-c5e2ec354f53",
                                                                                                                   "09ed36a0-880d-4818-ad06-7daa58c2bc81",
                                                                                                                   "d7788f6d-5f8b-42c1-b392-1624356dddd1"))
                                                                                  .equalToDatafileSize(Long.valueOf(-4))
                                                                                  .notEqualToDatafileSize(Long.valueOf(20))
                                                                                  .inDatafileSizes(Arrays.asList(Long.valueOf(-37),
                                                                                                                 Long.valueOf(88),
                                                                                                                 Long.valueOf(74),
                                                                                                                 Long.valueOf(80)))
                                                                                  .notInDatafileSizes(Arrays.asList(Long.valueOf(-109),
                                                                                                                    Long.valueOf(-9)))
                                                                                  .equalToDeviceClass("81470830-6145-4e6c-b882-719edf279a02")
                                                                                  .notEqualToDeviceClass("f1b23312-b0bc-4451-bf45-9f25c38c0bec")
                                                                                  .inDeviceClass(Arrays.asList("7350e1e6-c864-4194-a231-bea45aea32bc",
                                                                                                               "94ce7656-e5fc-4ff6-8d70-a8e99367e577",
                                                                                                               "dc084f44-9d58-4f4d-bfda-fbb884a55fe2",
                                                                                                               "caf0453e-4322-40f3-aea2-22f5637d3138",
                                                                                                               "9cb864ff-3fef-47c7-b7b7-6d555b004da0",
                                                                                                               "4d7bb17c-cd55-4b7f-819d-385de96d64f0"))
                                                                                  .notInDeviceClass(Arrays.asList("b118beae-af6c-4932-a6a8-7d328c595cf5",
                                                                                                                  "5bee3d66-b9d9-4000-9254-676f5656f8ec",
                                                                                                                  "5e13d266-8ee2-467c-b7f9-f629eefdb596",
                                                                                                                  "5a2217e6-426f-4bd0-8e53-40f2cec2e83d",
                                                                                                                  "44c2bb2f-2ed0-421f-b5b1-9fb76ee4d4c3"))
                                                                                  .inTimestamps(Arrays.asList(new Date(1559762576866L),
                                                                                                              new Date(1559762583231L),
                                                                                                              new Date(1559762578397L),
                                                                                                              new Date(1559762581014L)))
                                                                                  .notInTimestamps(Arrays.asList(new Date(1559762580486L),
                                                                                                                 new Date(1559762577982L),
                                                                                                                 new Date(1559762583517L),
                                                                                                                 new Date(1559762580512L),
                                                                                                                 new Date(1559762581691L)))
                                                                                  .lessThanTimestamp(new Date(1559762576938L))
                                                                                  .greaterThanTimestamp(new Date(1559762580707L))
                                                                                  .inUpdatedAts(Arrays.asList(new Date(1559762575764L),
                                                                                                              new Date(1559762583239L),
                                                                                                              new Date(1559762575923L),
                                                                                                              new Date(1559762583171L)))
                                                                                  .notInUpdatedAts(Arrays.asList(new Date(1559762577502L),
                                                                                                                 new Date(1559762576752L),
                                                                                                                 new Date(1559762580330L),
                                                                                                                 new Date(1559762576871L),
                                                                                                                 new Date(1559762575446L),
                                                                                                                 new Date(1559762583853L),
                                                                                                                 new Date(1559762576568L)))
                                                                                  .lessThanUpdatedAt(new Date(1559762583972L))
                                                                                  .greaterThanUpdatedAt(new Date(1559762575722L))
                                                                                  .equalToDescription("7ad18ce9-3e26-46c1-a254-31cf06dacbd8")
                                                                                  .notEqualToDescription("ce46a893-227e-449e-aed6-525d66eef94f")
                                                                                  .inDescriptions(Arrays.asList("19e48532-24cc-4718-91a3-d63dbc960dff"))
                                                                                  .notInDescriptions(Arrays.asList("bd449015-31ba-4622-be65-84e301ec9015",
                                                                                                                   "4e0dd463-ffd3-4fe3-87f1-855709147667",
                                                                                                                   "e1105413-bcb1-430c-9f54-4738a0c34755",
                                                                                                                   "139a2b22-2aa2-4601-97b8-2fcd9a979710",
                                                                                                                   "d0842454-603e-4fae-bf14-e0ad3746c16a"));
            assertTrue(option.hasFilters());
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559762584166L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559762578887L), new Date(1559762575397L), new Date(1559762578814L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                        FilterOperator.LESS_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1559762578402L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1559762581486L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME, FilterOperator.EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("0ed3c76e-394a-4ad3-8e7f-c2edb0fd4758",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("2e9d3c60-6073-4f3e-9a19-c8730a86e07c",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME, FilterOperator.IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("40aa9ae4-62ec-4634-9313-24c298941dda", "750649fe-9290-4058-9695-b753c84d14b9",
                                       "380ffd3c-f378-4998-bbd6-14226c5d0bc1", "abdd205a-2567-4595-917f-705c97395936",
                                       "5d925acb-1c90-43cc-84ce-69b6bd3dbdcb", "a8d00001-690d-4a8f-8423-2747d7075c57",
                                       "76940452-95d4-49df-bf93-2eca4f667936"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("c77edd33-e292-459e-a1f1-feeb42ec1fc3", "39e9103f-606a-49ce-8503-7699768b6045",
                                       "4e912a59-1d94-48cb-aa58-87d23376f22c", "a8cc2444-1756-4fce-a6f2-430d5bd3a6ff",
                                       "39505f7c-4a67-487d-8fd1-add5b4d26385", "31808daa-428a-4847-b423-2d14bda20519",
                                       "8f53f75c-abba-4c61-af6f-a02e834cffb8"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID, FilterOperator.EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("00618e0d-8139-42db-acee-eaefe10e93c2",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("9aa94488-1298-473a-bf3f-cb94ad28eaac",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID, FilterOperator.IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("519a1559-e080-41fb-a2fb-754eb7fd76e7"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("7ade9ae2-9474-4345-a4e1-cce09f832308", "08cf428c-7045-4732-8bd9-70314cc763b2",
                                       "f213f7e4-d5ee-4596-881e-cea429d91837", "0bc5d7c0-f7f7-4d69-a706-c9dc55b1fbe0",
                                       "7caa0dcc-0041-404d-8c0e-2f9c46bd588e", "0d03835d-47d0-43fa-a319-17efe6f038b9",
                                       "4b548164-7375-4689-a586-fbf76c8167fb", "7a2237b6-be52-448c-ab79-4f803a142bcd"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("bd112c83-3198-4d94-b675-a639754a05ba",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("7b39f3ff-ed1c-4efd-b5d0-3d14053508d1",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("985da6c1-41d3-4343-9d83-8dc11740d7a4", "f9f66a4d-5c4c-4b83-8492-3b57ee360935",
                                       "59d2a260-51a7-4daf-962d-1594a22966f5", "62598431-238a-4218-8c2a-ec4a05035a5d",
                                       "c827e9a2-8b85-4a7e-8077-daa16aa9b48d", "fbc0e182-a18f-49a2-9dbb-2820ac6791b3",
                                       "c8a94c1f-994f-4736-9666-fc9c3ea5d363"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("7c863292-c44c-4df2-90ba-b027b6536177", "9c99d1e0-11bf-4cca-8705-be581e46f77b",
                                       "497d170e-2d93-48ae-a83a-48476e6ee2a1", "376a80a7-9e10-4301-9d38-c5e2ec354f53",
                                       "09ed36a0-880d-4818-ad06-7daa58c2bc81", "d7788f6d-5f8b-42c1-b392-1624356dddd1"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(-4),
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    Long.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(20),
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                       Long.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(-37), Long.valueOf(88), Long.valueOf(74), Long.valueOf(80)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                        FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(-109), Long.valueOf(-9)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS, FilterOperator.EQUAL));
            assertNotNull(option.getDeviceClassFilters());
            assertEquals("81470830-6145-4e6c-b882-719edf279a02",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDeviceClassFilters());
            assertEquals("f1b23312-b0bc-4451-bf45-9f25c38c0bec",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS, FilterOperator.IN));
            assertNotNull(option.getDeviceClassFilters());
            assertEquals(Arrays.asList("7350e1e6-c864-4194-a231-bea45aea32bc", "94ce7656-e5fc-4ff6-8d70-a8e99367e577",
                                       "dc084f44-9d58-4f4d-bfda-fbb884a55fe2", "caf0453e-4322-40f3-aea2-22f5637d3138",
                                       "9cb864ff-3fef-47c7-b7b7-6d555b004da0", "4d7bb17c-cd55-4b7f-819d-385de96d64f0"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS, FilterOperator.NOT_IN));
            assertNotNull(option.getDeviceClassFilters());
            assertEquals(Arrays.asList("b118beae-af6c-4932-a6a8-7d328c595cf5", "5bee3d66-b9d9-4000-9254-676f5656f8ec",
                                       "5e13d266-8ee2-467c-b7f9-f629eefdb596", "5a2217e6-426f-4bd0-8e53-40f2cec2e83d",
                                       "44c2bb2f-2ed0-421f-b5b1-9fb76ee4d4c3"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP, FilterOperator.IN));
            assertNotNull(option.getTimestampFilters());
            assertEquals(Arrays.asList(new Date(1559762576866L), new Date(1559762583231L), new Date(1559762578397L),
                                       new Date(1559762581014L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP, FilterOperator.NOT_IN));
            assertNotNull(option.getTimestampFilters());
            assertEquals(Arrays.asList(new Date(1559762580486L), new Date(1559762577982L), new Date(1559762583517L),
                                       new Date(1559762580512L), new Date(1559762581691L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP, FilterOperator.LESS_THAN));
            assertNotNull(option.getTimestampFilters());
            assertEquals(new Date(1559762576938L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getTimestampFilters());
            assertEquals(new Date(1559762580707L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559762575764L), new Date(1559762583239L), new Date(1559762575923L),
                                       new Date(1559762583171L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559762577502L), new Date(1559762576752L), new Date(1559762580330L),
                                       new Date(1559762576871L), new Date(1559762575446L), new Date(1559762583853L),
                                       new Date(1559762576568L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                        FilterOperator.LESS_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1559762583972L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1559762575722L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("7ad18ce9-3e26-46c1-a254-31cf06dacbd8",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("ce46a893-227e-449e-aed6-525d66eef94f",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("19e48532-24cc-4718-91a3-d63dbc960dff"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("bd449015-31ba-4622-be65-84e301ec9015", "4e0dd463-ffd3-4fe3-87f1-855709147667",
                                       "e1105413-bcb1-430c-9f54-4738a0c34755", "139a2b22-2aa2-4601-97b8-2fcd9a979710",
                                       "d0842454-603e-4fae-bf14-e0ad3746c16a"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    List.class, option));
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            FirmwareManifestListOptions firmwaremanifestlistoptions1 = new FirmwareManifestListOptions(Integer.valueOf(-10),
                                                                                                       Long.valueOf(-8),
                                                                                                       Order.getDefault(),
                                                                                                       "93491bdb-b511-4b4f-8ae0-7d19c6df52e8",
                                                                                                       null, null);
            FirmwareManifestListOptions firmwaremanifestlistoptions2 = new FirmwareManifestListOptions(Integer.valueOf(-10),
                                                                                                       Long.valueOf(-8),
                                                                                                       Order.getDefault(),
                                                                                                       "93491bdb-b511-4b4f-8ae0-7d19c6df52e8",
                                                                                                       null, null);
            assertNotNull(firmwaremanifestlistoptions1);
            assertNotNull(firmwaremanifestlistoptions2);
            assertNotSame(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2.hashCode(), firmwaremanifestlistoptions1.hashCode());
            int hashCode = firmwaremanifestlistoptions1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, firmwaremanifestlistoptions1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            FirmwareManifestListOptions firmwaremanifestlistoptions1 = new FirmwareManifestListOptions(Integer.valueOf(-96),
                                                                                                       Long.valueOf(-14),
                                                                                                       Order.getDefault(),
                                                                                                       "43bed748-0a36-4791-a5df-61d3bc04bc51",
                                                                                                       null, null);
            FirmwareManifestListOptions firmwaremanifestlistoptions2 = new FirmwareManifestListOptions(Integer.valueOf(-96),
                                                                                                       Long.valueOf(-14),
                                                                                                       Order.getDefault(),
                                                                                                       "43bed748-0a36-4791-a5df-61d3bc04bc51",
                                                                                                       null, null);
            FirmwareManifestListOptions firmwaremanifestlistoptions3 = new FirmwareManifestListOptions(Integer.valueOf(-74),
                                                                                                       Long.valueOf(-60),
                                                                                                       Order.getDefault(),
                                                                                                       "0e0c3bca-a057-49e5-a4eb-95153784871a",
                                                                                                       null, null);
            assertNotNull(firmwaremanifestlistoptions1);
            assertNotNull(firmwaremanifestlistoptions2);
            assertNotNull(firmwaremanifestlistoptions3);
            assertNotSame(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertNotSame(firmwaremanifestlistoptions3, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions1, firmwaremanifestlistoptions2);
            assertEquals(firmwaremanifestlistoptions1, firmwaremanifestlistoptions1);
            assertFalse(firmwaremanifestlistoptions1.equals(null));
            assertNotEquals(firmwaremanifestlistoptions3, firmwaremanifestlistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
