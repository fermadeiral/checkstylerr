// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantApiKey.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantApiKey {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("4adee5e374fd8e0cf4a09b2e4c7a53cc",
                                                                   new Date(1559762576036L), -121,
                                                                   "4adee5e374fd8e0cf4a09b2e4c7a53cc",
                                                                   "1d1e298a-c166-4ac0-abe4-f4e5885c8c5f", 66,
                                                                   "69bf0676-7544-4785-88cd-46ca5fd275d0",
                                                                   "4adee5e374fd8e0cf4a09b2e4c7a53cc",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1559762577908L));
            SubtenantApiKey subtenantapikey2 = subtenantapikey1.clone();
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("4adee5e374fd8e0cf4a09b2e4c7a53cc",
                                                                   new Date(1559762581028L), -34,
                                                                   "4adee5e374fd8e0cf4a09b2e4c7a53cc",
                                                                   "c97e1f21-0ec4-4d5f-949d-287515305c14", 100,
                                                                   "67245f4a-f064-4601-bac5-fc5530452593",
                                                                   "4adee5e374fd8e0cf4a09b2e4c7a53cc",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1559762580462L));
            SubtenantApiKey subtenantapikey2 = new SubtenantApiKey("4adee5e374fd8e0cf4a09b2e4c7a53cc",
                                                                   new Date(1559762581028L), -34,
                                                                   "4adee5e374fd8e0cf4a09b2e4c7a53cc",
                                                                   "c97e1f21-0ec4-4d5f-949d-287515305c14", 100,
                                                                   "67245f4a-f064-4601-bac5-fc5530452593",
                                                                   "4adee5e374fd8e0cf4a09b2e4c7a53cc",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1559762580462L));
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2.hashCode(), subtenantapikey1.hashCode());
            int hashCode = subtenantapikey1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantapikey1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantApiKey subtenantapikey = new SubtenantApiKey("4adee5e374fd8e0cf4a09b2e4c7a53cc",
                                                              new Date(1559762578182L), 19,
                                                              "4adee5e374fd8e0cf4a09b2e4c7a53cc",
                                                              "bcabcfe9-8daa-4ac0-9a75-040ec749cb32", -7,
                                                              "f9a6c40f-ddec-4af8-a854-c23aa1e1c2fd",
                                                              "4adee5e374fd8e0cf4a09b2e4c7a53cc",
                                                              SubtenantApiKeyStatus.getDefault(),
                                                              new Date(1559762576355L));
        assertTrue(subtenantapikey.isValid());
        SubtenantApiKey subtenantapikeyInvalid = new SubtenantApiKey(null, new Date(1559762578385L), -66,
                                                                     "Nᄞ1FS1?1Z6I6ꨲ661P#꘲觊毚J؟1䚑\u000211⹥1NF\u0005<6俈166AX1@G6\u0001K6#+-典6칷\u000566핚1(1_1\t",
                                                                     "9a0aebb6-9af1-4751-a108-927db4a5095f", -2, null,
                                                                     "Nᄞ1FS1?1Z6I6ꨲ661P#꘲觊毚J؟1䚑\u000211⹥1NF\u0005<6俈166AX1@G6\u0001K6#+-典6칷\u000566핚1(1_1\t",
                                                                     SubtenantApiKeyStatus.getDefault(),
                                                                     new Date(1559762573136L));
        assertFalse(subtenantapikeyInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("4adee5e374fd8e0cf4a09b2e4c7a53cc",
                                                                   new Date(1559762579229L), 124,
                                                                   "4adee5e374fd8e0cf4a09b2e4c7a53cc",
                                                                   "f3468787-6c6d-4d0f-9921-98ba871dda76", -29,
                                                                   "db7220d1-a3e5-492e-b7ab-65c43952ebf7",
                                                                   "4adee5e374fd8e0cf4a09b2e4c7a53cc",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1559762579159L));
            SubtenantApiKey subtenantapikey2 = new SubtenantApiKey("4adee5e374fd8e0cf4a09b2e4c7a53cc",
                                                                   new Date(1559762579229L), 124,
                                                                   "4adee5e374fd8e0cf4a09b2e4c7a53cc",
                                                                   "f3468787-6c6d-4d0f-9921-98ba871dda76", -29,
                                                                   "db7220d1-a3e5-492e-b7ab-65c43952ebf7",
                                                                   "4adee5e374fd8e0cf4a09b2e4c7a53cc",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1559762579159L));
            SubtenantApiKey subtenantapikey3 = new SubtenantApiKey("4adee5e374fd8e0cf4a09b2e4c7a53cc",
                                                                   new Date(1559762581030L), -74,
                                                                   "4adee5e374fd8e0cf4a09b2e4c7a53cc",
                                                                   "3c302a9c-1e99-4aaf-803c-3ca5e4984933", 72,
                                                                   "e0bdd5a1-8977-4540-aaeb-32c757692551",
                                                                   "4adee5e374fd8e0cf4a09b2e4c7a53cc",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1559762582507L));
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotNull(subtenantapikey3);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertNotSame(subtenantapikey3, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey1, subtenantapikey2);
            assertEquals(subtenantapikey1, subtenantapikey1);
            assertFalse(subtenantapikey1.equals(null));
            assertNotEquals(subtenantapikey3, subtenantapikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
