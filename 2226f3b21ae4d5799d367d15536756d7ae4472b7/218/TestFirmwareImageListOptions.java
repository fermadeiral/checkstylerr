// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.deviceupdate.model;

import static org.junit.Assert.*;

import com.arm.mbed.cloud.sdk.common.Order;
import com.arm.mbed.cloud.sdk.common.listing.ListOptionsEncoder;
import com.arm.mbed.cloud.sdk.common.listing.filtering.FilterOperator;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import org.junit.Test;

/**
 * Unit tests for Model FirmwareImageListOptions.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestFirmwareImageListOptions {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            FirmwareImageListOptions firmwareimagelistoptions1 = new FirmwareImageListOptions(Integer.valueOf(104),
                                                                                              Long.valueOf(-94),
                                                                                              Order.getDefault(),
                                                                                              "92cdd5bf-e643-443e-851f-3ac598e9247f",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions2 = firmwareimagelistoptions1.clone();
            assertNotNull(firmwareimagelistoptions1);
            assertNotNull(firmwareimagelistoptions2);
            assertNotSame(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the filters method.
     */
    @SuppressWarnings({ "boxing", "resource" })
    @Test
    public void testFilters() {
        try {
            FirmwareImageListOptions option = new FirmwareImageListOptions().inUpdatedAts(Arrays.asList(new Date(1559762574884L),
                                                                                                        new Date(1559762576309L),
                                                                                                        new Date(1559762580842L),
                                                                                                        new Date(1559762579760L),
                                                                                                        new Date(1559762582070L)))
                                                                            .notInUpdatedAts(Arrays.asList(new Date(1559762578865L),
                                                                                                           new Date(1559762579817L),
                                                                                                           new Date(1559762575389L),
                                                                                                           new Date(1559762580990L),
                                                                                                           new Date(1559762575308L),
                                                                                                           new Date(1559762584310L),
                                                                                                           new Date(1559762581118L)))
                                                                            .lessThanUpdatedAt(new Date(1559762575232L))
                                                                            .greaterThanUpdatedAt(new Date(1559762576187L))
                                                                            .equalToName("fe7cee8a-a61d-461b-8e72-07173dcf7b5b")
                                                                            .notEqualToName("dc1c3067-c8fd-4c08-b63c-763ed88d0dbc")
                                                                            .inNames(Arrays.asList("e5b29d4d-0676-4f87-acb8-b5f3f57c40cd",
                                                                                                   "afb6b4fa-ff1b-490c-9092-a7b4d983805d",
                                                                                                   "f4e99fcb-28cd-48d4-852a-6c65f33438f3",
                                                                                                   "511c57d3-7eac-4592-b163-0457af621523",
                                                                                                   "f97224fb-bc1d-4784-b6d2-c30b2deb484b",
                                                                                                   "d8e14f38-9c1c-4d49-a2f9-ff96166dae39",
                                                                                                   "96d2d4d1-4ca9-424d-a05b-fd2f287df2da"))
                                                                            .notInNames(Arrays.asList("97fd5e18-e7a8-4cd4-941a-6db04119afdb",
                                                                                                      "4e8f40a6-57b0-4216-8d61-f7c39a86bdba",
                                                                                                      "2cb87521-79d8-4d8d-abf7-9d2379ac90c7",
                                                                                                      "93103f72-8edd-4ed6-9e94-073c7e8e165f",
                                                                                                      "05f0d041-b3e8-4ff3-bba5-5b5219d2e34b",
                                                                                                      "3219bed9-b436-4f6d-bc94-d0e498440b0a",
                                                                                                      "34318a34-5fa6-41c2-803d-dee9517d6d72"))
                                                                            .equalToDescription("fd68ba3f-c080-4d6a-aaa8-d6acd409ae49")
                                                                            .notEqualToDescription("54fd7f52-3652-4f8b-8ed8-c7c819ff287b")
                                                                            .inDescriptions(Arrays.asList("2f1c2df4-14b9-4ca9-8e13-c01357457172",
                                                                                                          "e3433f25-6db6-4487-9584-f727e5f40936",
                                                                                                          "0a0de982-d79a-480b-b80a-46ddcac07bc5",
                                                                                                          "66627d63-d019-44f1-9b36-57db19aeb7b4",
                                                                                                          "ccc3c26c-cc1e-4b34-a8af-275b84eecde5",
                                                                                                          "52a9d3ec-f34e-4448-9cc0-df78a8b7c5a5",
                                                                                                          "1505af6f-458d-4a0c-98cd-b5f55efa0bb9"))
                                                                            .notInDescriptions(Arrays.asList("6fc29cd6-8d4a-4963-8d98-a7eb4e35e9b7",
                                                                                                             "c0563617-f24d-4e23-a575-87570600edba"))
                                                                            .inCreatedAts(Arrays.asList(new Date(1559762579716L)))
                                                                            .notInCreatedAts(Arrays.asList(new Date(1559762581663L),
                                                                                                           new Date(1559762582505L),
                                                                                                           new Date(1559762576081L),
                                                                                                           new Date(1559762582577L),
                                                                                                           new Date(1559762584121L),
                                                                                                           new Date(1559762577390L),
                                                                                                           new Date(1559762576047L)))
                                                                            .lessThanCreatedAt(new Date(1559762578442L))
                                                                            .greaterThanCreatedAt(new Date(1559762579528L))
                                                                            .equalToDatafileUrl("aa16fafb-9b0d-4dfb-9fcf-96f6650f7466")
                                                                            .notEqualToDatafileUrl("35363576-812e-4bd0-8740-5ba60e4c01ca")
                                                                            .inDatafileUrls(Arrays.asList("48d54ad9-2488-4ad8-b43b-e790decd5255",
                                                                                                          "4d2c9447-eb0a-400f-b005-04002e0f0091",
                                                                                                          "0b560a6d-a5e1-4ab4-b5e9-e544ca0fb4bd",
                                                                                                          "3e21e85d-fcc1-4fda-99b3-817418ecf5e5",
                                                                                                          "cddf301c-5f62-4069-81ab-fb6ed3f5a39c"))
                                                                            .notInDatafileUrls(Arrays.asList("e32b28b5-d518-42f8-89e1-a7f74eecf0a2",
                                                                                                             "121c7c78-6061-40a8-b435-728338719074",
                                                                                                             "401866f9-e8f4-47d5-8513-ab2f9dd67655",
                                                                                                             "32faf48a-43b5-48ab-a6b5-ec721aed67da"))
                                                                            .equalToDatafileSize(Long.valueOf(-83))
                                                                            .notEqualToDatafileSize(Long.valueOf(111))
                                                                            .inDatafileSizes(Arrays.asList(Long.valueOf(-17),
                                                                                                           Long.valueOf(-8),
                                                                                                           Long.valueOf(116),
                                                                                                           Long.valueOf(53),
                                                                                                           Long.valueOf(84),
                                                                                                           Long.valueOf(-121),
                                                                                                           Long.valueOf(-100),
                                                                                                           Long.valueOf(-107),
                                                                                                           Long.valueOf(-53)))
                                                                            .notInDatafileSizes(Arrays.asList(Long.valueOf(-40),
                                                                                                              Long.valueOf(-15),
                                                                                                              Long.valueOf(-22),
                                                                                                              Long.valueOf(-47),
                                                                                                              Long.valueOf(31),
                                                                                                              Long.valueOf(-111),
                                                                                                              Long.valueOf(-103)))
                                                                            .equalToDatafileChecksum("b0dc1507-5404-4899-9217-2c9a229466fa")
                                                                            .notEqualToDatafileChecksum("082fadf0-7bf9-462b-8df0-6cd5c6f3fd86")
                                                                            .inDatafileChecksums(Arrays.asList("d1953c05-62d2-41cf-905b-9b8452222c64"))
                                                                            .notInDatafileChecksums(Arrays.asList("1fd8e75d-2cd7-49ae-aa37-c69f8ca4ce35",
                                                                                                                  "9da95fe5-d9fe-40ee-bf39-92038e49b67a",
                                                                                                                  "6df93792-b61c-47d2-b2e0-6ba3f70b1668",
                                                                                                                  "40e36349-af52-4568-8d88-f2bf46072fc2",
                                                                                                                  "188404f1-e2c5-4c90-aab2-5b0ab34e562a",
                                                                                                                  "6ede2fcd-ef38-46fd-91ce-ae3f98319512",
                                                                                                                  "1af66b35-4948-4d8a-adf1-9c09caee39b4",
                                                                                                                  "0fe0d421-f399-4bd6-bc18-c3bc785ff288",
                                                                                                                  "04d75c83-9125-45e2-8829-99f8212f394f"))
                                                                            .equalToId("e276206b-5596-4ab1-8308-4d0fbe7daf2c")
                                                                            .notEqualToId("9a3e5c53-8e1d-4322-b137-1f9481010fc0")
                                                                            .inIds(Arrays.asList("4c0b9ecc-f943-4f26-b334-b5617069d416",
                                                                                                 "6f356773-bd42-434e-8b04-d666d688a2d2",
                                                                                                 "197e9979-2908-432a-9634-5f3ec010e544",
                                                                                                 "ed19f707-af7b-492b-bee5-a83691d08f43",
                                                                                                 "79663a51-6989-423a-b561-cd6d1b6bd974",
                                                                                                 "2bb24200-5f56-49ab-ad25-108964aa189a",
                                                                                                 "d374bf60-60da-48b2-a768-456ecb31d6de",
                                                                                                 "9df4c42a-b287-44ad-a9e6-39e667729096",
                                                                                                 "f785015c-9244-4088-8548-b4458e90208e"))
                                                                            .notInIds(Arrays.asList("7230f4d6-f9ee-474d-ab7a-54b6df3368b2",
                                                                                                    "d8fe0cce-da28-4e38-ae71-56172c06d7fa",
                                                                                                    "0e8bf313-9f1a-4ae0-a125-5611d1c7c483",
                                                                                                    "3e5169b9-05b6-4dfa-a1f5-ecdff9cde11e",
                                                                                                    "1a94e507-c538-40c0-bb8f-120fdcff745b",
                                                                                                    "5f859db9-dec1-425c-be54-e46aeea63bc0"));
            assertTrue(option.hasFilters());
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559762574884L), new Date(1559762576309L), new Date(1559762580842L),
                                       new Date(1559762579760L), new Date(1559762582070L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559762578865L), new Date(1559762579817L), new Date(1559762575389L),
                                       new Date(1559762580990L), new Date(1559762575308L), new Date(1559762584310L),
                                       new Date(1559762581118L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.LESS_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1559762575232L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1559762576187L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("fe7cee8a-a61d-461b-8e72-07173dcf7b5b",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("dc1c3067-c8fd-4c08-b63c-763ed88d0dbc",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("e5b29d4d-0676-4f87-acb8-b5f3f57c40cd", "afb6b4fa-ff1b-490c-9092-a7b4d983805d",
                                       "f4e99fcb-28cd-48d4-852a-6c65f33438f3", "511c57d3-7eac-4592-b163-0457af621523",
                                       "f97224fb-bc1d-4784-b6d2-c30b2deb484b", "d8e14f38-9c1c-4d49-a2f9-ff96166dae39",
                                       "96d2d4d1-4ca9-424d-a05b-fd2f287df2da"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("97fd5e18-e7a8-4cd4-941a-6db04119afdb", "4e8f40a6-57b0-4216-8d61-f7c39a86bdba",
                                       "2cb87521-79d8-4d8d-abf7-9d2379ac90c7", "93103f72-8edd-4ed6-9e94-073c7e8e165f",
                                       "05f0d041-b3e8-4ff3-bba5-5b5219d2e34b", "3219bed9-b436-4f6d-bc94-d0e498440b0a",
                                       "34318a34-5fa6-41c2-803d-dee9517d6d72"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("fd68ba3f-c080-4d6a-aaa8-d6acd409ae49",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("54fd7f52-3652-4f8b-8ed8-c7c819ff287b",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("2f1c2df4-14b9-4ca9-8e13-c01357457172", "e3433f25-6db6-4487-9584-f727e5f40936",
                                       "0a0de982-d79a-480b-b80a-46ddcac07bc5", "66627d63-d019-44f1-9b36-57db19aeb7b4",
                                       "ccc3c26c-cc1e-4b34-a8af-275b84eecde5", "52a9d3ec-f34e-4448-9cc0-df78a8b7c5a5",
                                       "1505af6f-458d-4a0c-98cd-b5f55efa0bb9"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("6fc29cd6-8d4a-4963-8d98-a7eb4e35e9b7", "c0563617-f24d-4e23-a575-87570600edba"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559762579716L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559762581663L), new Date(1559762582505L), new Date(1559762576081L),
                                       new Date(1559762582577L), new Date(1559762584121L), new Date(1559762577390L),
                                       new Date(1559762576047L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.LESS_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1559762578442L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1559762579528L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("aa16fafb-9b0d-4dfb-9fcf-96f6650f7466",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("35363576-812e-4bd0-8740-5ba60e4c01ca",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("48d54ad9-2488-4ad8-b43b-e790decd5255", "4d2c9447-eb0a-400f-b005-04002e0f0091",
                                       "0b560a6d-a5e1-4ab4-b5e9-e544ca0fb4bd", "3e21e85d-fcc1-4fda-99b3-817418ecf5e5",
                                       "cddf301c-5f62-4069-81ab-fb6ed3f5a39c"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("e32b28b5-d518-42f8-89e1-a7f74eecf0a2", "121c7c78-6061-40a8-b435-728338719074",
                                       "401866f9-e8f4-47d5-8513-ab2f9dd67655", "32faf48a-43b5-48ab-a6b5-ec721aed67da"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(-83),
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    Long.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(111),
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                       Long.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(-17), Long.valueOf(-8), Long.valueOf(116), Long.valueOf(53),
                                       Long.valueOf(84), Long.valueOf(-121), Long.valueOf(-100), Long.valueOf(-107),
                                       Long.valueOf(-53)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(-40), Long.valueOf(-15), Long.valueOf(-22), Long.valueOf(-47),
                                       Long.valueOf(31), Long.valueOf(-111), Long.valueOf(-103)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                        FilterOperator.EQUAL));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals("b0dc1507-5404-4899-9217-2c9a229466fa",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals("082fadf0-7bf9-462b-8df0-6cd5c6f3fd86",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM, FilterOperator.IN));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals(Arrays.asList("d1953c05-62d2-41cf-905b-9b8452222c64"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                        FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals(Arrays.asList("1fd8e75d-2cd7-49ae-aa37-c69f8ca4ce35", "9da95fe5-d9fe-40ee-bf39-92038e49b67a",
                                       "6df93792-b61c-47d2-b2e0-6ba3f70b1668", "40e36349-af52-4568-8d88-f2bf46072fc2",
                                       "188404f1-e2c5-4c90-aab2-5b0ab34e562a", "6ede2fcd-ef38-46fd-91ce-ae3f98319512",
                                       "1af66b35-4948-4d8a-adf1-9c09caee39b4", "0fe0d421-f399-4bd6-bc18-c3bc785ff288",
                                       "04d75c83-9125-45e2-8829-99f8212f394f"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("e276206b-5596-4ab1-8308-4d0fbe7daf2c",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("9a3e5c53-8e1d-4322-b137-1f9481010fc0",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("4c0b9ecc-f943-4f26-b334-b5617069d416", "6f356773-bd42-434e-8b04-d666d688a2d2",
                                       "197e9979-2908-432a-9634-5f3ec010e544", "ed19f707-af7b-492b-bee5-a83691d08f43",
                                       "79663a51-6989-423a-b561-cd6d1b6bd974", "2bb24200-5f56-49ab-ad25-108964aa189a",
                                       "d374bf60-60da-48b2-a768-456ecb31d6de", "9df4c42a-b287-44ad-a9e6-39e667729096",
                                       "f785015c-9244-4088-8548-b4458e90208e"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, List.class,
                                                                 option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("7230f4d6-f9ee-474d-ab7a-54b6df3368b2", "d8fe0cce-da28-4e38-ae71-56172c06d7fa",
                                       "0e8bf313-9f1a-4ae0-a125-5611d1c7c483", "3e5169b9-05b6-4dfa-a1f5-ecdff9cde11e",
                                       "1a94e507-c538-40c0-bb8f-120fdcff745b", "5f859db9-dec1-425c-be54-e46aeea63bc0"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID,
                                                                    List.class, option));
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            FirmwareImageListOptions firmwareimagelistoptions1 = new FirmwareImageListOptions(Integer.valueOf(79),
                                                                                              Long.valueOf(-14),
                                                                                              Order.getDefault(),
                                                                                              "212c23a0-8e4d-4d45-aaf5-5873512203ea",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions2 = new FirmwareImageListOptions(Integer.valueOf(79),
                                                                                              Long.valueOf(-14),
                                                                                              Order.getDefault(),
                                                                                              "212c23a0-8e4d-4d45-aaf5-5873512203ea",
                                                                                              null, null);
            assertNotNull(firmwareimagelistoptions1);
            assertNotNull(firmwareimagelistoptions2);
            assertNotSame(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2.hashCode(), firmwareimagelistoptions1.hashCode());
            int hashCode = firmwareimagelistoptions1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, firmwareimagelistoptions1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            FirmwareImageListOptions firmwareimagelistoptions1 = new FirmwareImageListOptions(Integer.valueOf(10),
                                                                                              Long.valueOf(-66),
                                                                                              Order.getDefault(),
                                                                                              "50927384-7d78-47cf-80c8-74ecd6f9d444",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions2 = new FirmwareImageListOptions(Integer.valueOf(10),
                                                                                              Long.valueOf(-66),
                                                                                              Order.getDefault(),
                                                                                              "50927384-7d78-47cf-80c8-74ecd6f9d444",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions3 = new FirmwareImageListOptions(Integer.valueOf(-70),
                                                                                              Long.valueOf(86),
                                                                                              Order.getDefault(),
                                                                                              "ef5c5197-78fa-43a1-a465-a943a3bcf685",
                                                                                              null, null);
            assertNotNull(firmwareimagelistoptions1);
            assertNotNull(firmwareimagelistoptions2);
            assertNotNull(firmwareimagelistoptions3);
            assertNotSame(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertNotSame(firmwareimagelistoptions3, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions1, firmwareimagelistoptions2);
            assertEquals(firmwareimagelistoptions1, firmwareimagelistoptions1);
            assertFalse(firmwareimagelistoptions1.equals(null));
            assertNotEquals(firmwareimagelistoptions3, firmwareimagelistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
