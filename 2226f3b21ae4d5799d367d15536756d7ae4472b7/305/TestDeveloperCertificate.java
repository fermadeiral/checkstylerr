// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.security.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeveloperCertificate.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeveloperCertificate {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("99e77ac8-928a-4e02-beb7-d5571be275fb",
                                                                                  "5d7993b0-a7bb-4588-991e-39290aa3973e",
                                                                                  new Date(1559762574076L),
                                                                                  "9e107fdd-8f85-4d2c-8512-f2fdeec90769",
                                                                                  "a01ce38b-fde1-49dd-b31d-83f6871a9066",
                                                                                  "9ad2d1ca-6203-4b3d-8413-510fef7bcfbe",
                                                                                  "20eb852c-cdf8-461e-829d-745e46184f0c",
                                                                                  "695e35e4-b40c-4bcd-9777-f587f6a39b0f");
            DeveloperCertificate developercertificate2 = developercertificate1.clone();
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("de29528d-de3d-460b-858e-88fb5a805cbe",
                                                                                  "a752d108-a457-4364-ada0-691a0cc8bdc8",
                                                                                  new Date(1559762580952L),
                                                                                  "830b4b3c-84f2-4dc0-b316-c4fbd7e700c6",
                                                                                  "15f5ba3c-939f-44fd-8ae1-d457d337f25c",
                                                                                  "aa0e9e41-d4c3-40b9-9505-af9968b429dc",
                                                                                  "064b7b8e-f32f-40df-96ed-c2a884eba39f",
                                                                                  "5bcce326-63a4-4b3f-847c-fb3efb3dab71");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("de29528d-de3d-460b-858e-88fb5a805cbe",
                                                                                  "a752d108-a457-4364-ada0-691a0cc8bdc8",
                                                                                  new Date(1559762580952L),
                                                                                  "830b4b3c-84f2-4dc0-b316-c4fbd7e700c6",
                                                                                  "15f5ba3c-939f-44fd-8ae1-d457d337f25c",
                                                                                  "aa0e9e41-d4c3-40b9-9505-af9968b429dc",
                                                                                  "064b7b8e-f32f-40df-96ed-c2a884eba39f",
                                                                                  "5bcce326-63a4-4b3f-847c-fb3efb3dab71");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2.hashCode(), developercertificate1.hashCode());
            int hashCode = developercertificate1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, developercertificate1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeveloperCertificate developercertificate = new DeveloperCertificate("cb0096a5-a1f1-4187-83bf-6a6efd08b71d",
                                                                             "75bf7af0-5c73-4d1a-98f9-754ae8451ef6",
                                                                             new Date(1559762578656L),
                                                                             "30ca7d23-8a99-4197-b7ea-dacdf88bae51",
                                                                             "c24f0df2-1f7c-4d6d-b327-825cae50d587",
                                                                             "be037e90-7ba0-4c33-9917-88acbdacc0df",
                                                                             "b52821f7-1cee-4237-8300-2794c29f8642",
                                                                             "9f75577e-ecac-408c-94e3-136f5d2dffec");
        assertTrue(developercertificate.isValid());
        DeveloperCertificate developercertificateInvalid = new DeveloperCertificate("72c3c8fe-a26b-4899-ae25-3681f3427366",
                                                                                    "da884665-4e9a-4699-b16d-56ffcfb4a844",
                                                                                    new Date(1559762573078L),
                                                                                    "9e42da5b-aa59-4562-a7f1-2eb31b65e592",
                                                                                    "e61c7780-fbd8-493a-84c3-5978886f6d0f",
                                                                                    "254e91f9-7132-4aee-b34b-8f21acc1cd54",
                                                                                    null,
                                                                                    "c51c2489-b1a7-46d8-9611-f5c62f163667");
        assertFalse(developercertificateInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("fc2e22a5-9004-4f3d-ae70-2bde58782f29",
                                                                                  "d4239626-1888-4176-839a-18607b9ee168",
                                                                                  new Date(1559762581989L),
                                                                                  "3f117382-e01e-4be6-8fde-3dbe4e43aa0c",
                                                                                  "9402bc2c-4c88-41b7-b2da-643fe38f539c",
                                                                                  "9227469c-59aa-4bce-b70a-97eb4bde00ac",
                                                                                  "0fa66ef7-6af9-4ef0-9d0e-2d0206ca0500",
                                                                                  "e6949813-4137-44b1-bcbe-15bc99f0fe97");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("fc2e22a5-9004-4f3d-ae70-2bde58782f29",
                                                                                  "d4239626-1888-4176-839a-18607b9ee168",
                                                                                  new Date(1559762581989L),
                                                                                  "3f117382-e01e-4be6-8fde-3dbe4e43aa0c",
                                                                                  "9402bc2c-4c88-41b7-b2da-643fe38f539c",
                                                                                  "9227469c-59aa-4bce-b70a-97eb4bde00ac",
                                                                                  "0fa66ef7-6af9-4ef0-9d0e-2d0206ca0500",
                                                                                  "e6949813-4137-44b1-bcbe-15bc99f0fe97");
            DeveloperCertificate developercertificate3 = new DeveloperCertificate("d96d2d86-260c-4845-9f17-458e4a26a7e0",
                                                                                  "277affe2-69f5-4303-b89c-a7f3d6a09245",
                                                                                  new Date(1559762581199L),
                                                                                  "f39ff4ff-8f60-40ad-88e4-e5b2a6cf72e2",
                                                                                  "6bb0d3a5-72ff-46d2-ac90-a91d07cd90df",
                                                                                  "e027db1e-de86-4d07-aa97-49f5265190d0",
                                                                                  "1f5eeafe-919c-4974-8fae-15a07b8d6796",
                                                                                  "992b9045-602c-45c3-8d0d-0bb753d565a1");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotNull(developercertificate3);
            assertNotSame(developercertificate2, developercertificate1);
            assertNotSame(developercertificate3, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate1, developercertificate2);
            assertEquals(developercertificate1, developercertificate1);
            assertFalse(developercertificate1.equals(null));
            assertNotEquals(developercertificate3, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
