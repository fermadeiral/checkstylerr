// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantUser.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantUser {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("4adee5e374fd8e0cf4a09b2e4c7a53cc", null,
                                                             "1ec7ef0f-0e45-42f2-ba62-e9283f6eb033",
                                                             new Date(1559762577495L), 14, null, "723ca.3665b@3b7fc.fr",
                                                             true, "39bf3e0a-548e-4674-9b0a-b3a5c1de99b3",
                                                             "4adee5e374fd8e0cf4a09b2e4c7a53cc", true, false, true, 3,
                                                             null, null, "5dad862d-68ba-422c-b89a-6460ee5680b8", 41,
                                                             "428c5a72-e01d-4df4-bcb8-f23ad843ef33",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1559762580580L), "p6,_5S9.-");
            SubtenantUser subtenantuser2 = subtenantuser1.clone();
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("4adee5e374fd8e0cf4a09b2e4c7a53cc", null,
                                                             "e2b9a132-c89c-4bc7-bf74-5c53dc440e36",
                                                             new Date(1559762581681L), 62, null, "f5c38.7f962@964e4.fr",
                                                             false, "8bbf8f2a-5921-423d-a4c3-44b4fc9dedc4",
                                                             "4adee5e374fd8e0cf4a09b2e4c7a53cc", true, false, false,
                                                             -112, null, null, "57609161-2868-4c50-a717-d2b0b7e5d706",
                                                             36, "676496af-2e6f-49cb-8dfe-8ba0beaec088",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1559762580396L), "p6,_5S9.-");
            SubtenantUser subtenantuser2 = new SubtenantUser("4adee5e374fd8e0cf4a09b2e4c7a53cc", null,
                                                             "e2b9a132-c89c-4bc7-bf74-5c53dc440e36",
                                                             new Date(1559762581681L), 62, null, "f5c38.7f962@964e4.fr",
                                                             false, "8bbf8f2a-5921-423d-a4c3-44b4fc9dedc4",
                                                             "4adee5e374fd8e0cf4a09b2e4c7a53cc", true, false, false,
                                                             -112, null, null, "57609161-2868-4c50-a717-d2b0b7e5d706",
                                                             36, "676496af-2e6f-49cb-8dfe-8ba0beaec088",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1559762580396L), "p6,_5S9.-");
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2.hashCode(), subtenantuser1.hashCode());
            int hashCode = subtenantuser1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantuser1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantUser subtenantuser = new SubtenantUser("4adee5e374fd8e0cf4a09b2e4c7a53cc", null,
                                                        "5944f299-44f9-4e32-8004-956cc2593151",
                                                        new Date(1559762577075L), -89, null, "e3aa7.7adcb@973c6.fr",
                                                        false, "2439cb1d-493d-4052-8b4a-72370890d971",
                                                        "4adee5e374fd8e0cf4a09b2e4c7a53cc", false, true, true, -90,
                                                        null, null, "6bf399c0-6651-4f0d-9c44-f687028d6947", 62,
                                                        "39d4ad1f-c3f2-41db-aa25-42336f90e125",
                                                        SubtenantUserStatus.getDefault(), null,
                                                        new Date(1559762576437L), "p6,_5S9.-");
        assertTrue(subtenantuser.isValid());
        SubtenantUser subtenantuserInvalid = new SubtenantUser(null, null, "1bb56e12-6fef-496e-8cd4-33104103918a",
                                                               new Date(1559762580159L), -12, null, null, true,
                                                               "3212f29f-4321-464a-bbba-4cb92556e2fec8ba47dc-9070-4104-ba3f-5f2451eae1c99c8a8ec7-9b3a-491f-9191-80d0b3202877",
                                                               "Ná„ž1FS1?1Z6I6ê¨²661P#ê˜²è§Šæ¯šJØŸ1äš‘\u000211â¹¥1NF\u0005<6ä¿ˆ166AX1@G6\u0001K6#+-å…¸6ì¹·\u000566í•š1(1_1\t",
                                                               false, true, true, 21, null, null,
                                                               "b5d7ee53-48f6-4d8c-8f2d-ac7a1e3750b6", -40,
                                                               "646d8444-7fff-4cc7-8314-0853cf96ddd6bce373b3-2e38-4143-a230-9c9ffe4313c86d6287eb-1dc3-4395-9f45-2fa5c4db4c3a",
                                                               SubtenantUserStatus.getDefault(), null,
                                                               new Date(1559762577861L),
                                                               "\u001d-j74QHV7Uç£¥n-\u001b\u0004\u00188A\u00018-L7\u0005;/]\u001b8i8\u0003Y-\u000eC-4-7\u001f4\fi-]\u000e7!17\u0010çˆ‚\\\\î?‰8\u001a/>â?±3Y]i");
        assertFalse(subtenantuserInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("4adee5e374fd8e0cf4a09b2e4c7a53cc", null,
                                                             "ba1d1e22-5d7f-4e77-8323-cd5d5395a929",
                                                             new Date(1559762575338L), -76, null,
                                                             "6b2e0.e7796@26c4f.fr", true,
                                                             "15a7c0cc-69a7-4a0e-af3e-49d7269aa7bd",
                                                             "4adee5e374fd8e0cf4a09b2e4c7a53cc", false, false, true,
                                                             -72, null, null, "491d6f14-d638-4f66-8d7f-89a6143d9b2c",
                                                             98, "d50a2c41-20aa-4f85-8338-0cbb3f873d99",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1559762575547L), "p6,_5S9.-");
            SubtenantUser subtenantuser2 = new SubtenantUser("4adee5e374fd8e0cf4a09b2e4c7a53cc", null,
                                                             "ba1d1e22-5d7f-4e77-8323-cd5d5395a929",
                                                             new Date(1559762575338L), -76, null,
                                                             "6b2e0.e7796@26c4f.fr", true,
                                                             "15a7c0cc-69a7-4a0e-af3e-49d7269aa7bd",
                                                             "4adee5e374fd8e0cf4a09b2e4c7a53cc", false, false, true,
                                                             -72, null, null, "491d6f14-d638-4f66-8d7f-89a6143d9b2c",
                                                             98, "d50a2c41-20aa-4f85-8338-0cbb3f873d99",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1559762575547L), "p6,_5S9.-");
            SubtenantUser subtenantuser3 = new SubtenantUser("4adee5e374fd8e0cf4a09b2e4c7a53cc", null,
                                                             "a3fe77b0-8772-4ab5-9eea-3fec28606178",
                                                             new Date(1559762572966L), 75, null, "a2039.66891@e6b22.fr",
                                                             true, "93ff3fc0-8474-43e4-9248-2a7a2d87a5a3",
                                                             "4adee5e374fd8e0cf4a09b2e4c7a53cc", false, false, true, 68,
                                                             null, null, "e76362ee-dcca-4b04-9b68-a8cdd376fc31", 46,
                                                             "a7278f2c-d24f-4854-ad2c-5de59ec5efc1",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1559762575179L), "p6,_5S9.-");
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotNull(subtenantuser3);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertNotSame(subtenantuser3, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser1, subtenantuser2);
            assertEquals(subtenantuser1, subtenantuser1);
            assertFalse(subtenantuser1.equals(null));
            assertNotEquals(subtenantuser3, subtenantuser1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
