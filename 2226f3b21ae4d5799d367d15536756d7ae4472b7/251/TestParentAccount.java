// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model ParentAccount.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestParentAccount {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("acd5e.bbc17@09c1e.fr",
                                                             "3291c925-cdbd-4e9a-a57c-e216822ee83d",
                                                             "4adee5e374fd8e0cf4a09b2e4c7a53cc");
            ParentAccount parentaccount2 = parentaccount1.clone();
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotSame(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("bd4b1.f9ac2@99e6c.fr",
                                                             "346456d6-aee5-476f-adca-a16b45e98b32",
                                                             "4adee5e374fd8e0cf4a09b2e4c7a53cc");
            ParentAccount parentaccount2 = new ParentAccount("bd4b1.f9ac2@99e6c.fr",
                                                             "346456d6-aee5-476f-adca-a16b45e98b32",
                                                             "4adee5e374fd8e0cf4a09b2e4c7a53cc");
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotSame(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount2.hashCode(), parentaccount1.hashCode());
            int hashCode = parentaccount1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, parentaccount1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ParentAccount parentaccount = new ParentAccount("bd6c0.ae656@db0be.me", "6990d397-ecdf-4bdf-ae6e-48e61ebc3260",
                                                        "4adee5e374fd8e0cf4a09b2e4c7a53cc");
        assertTrue(parentaccount.isValid());
        ParentAccount parentaccountInvalid = new ParentAccount("ï?’\u0002æ¢»æ¥™æ¤»9æ¥š\u0003ä¢›.ä‰•æ™ƒ>æ¥†å?‰æ¥?à· æ?«æœ æŸ·à²¢\u0005é‹®>çš‘æ¥¤>>ï´·\u0011ï£–ï¨©â”¸\u001fä¿³æ¡”å´Ÿâ®“ïŽ·\u0010åŠ?æ¸œ!æ¤¿æ?®âª¯ï¹–,æ¤“ã®šíŠ¢â»½æ¤´>æœ†>à©«\u0014>ï‹£æ¥’ã²ªæ¥™æ¥˜",
                                                               "23285c16-515b-4833-824b-173aa3d39ac243b25922-3278-41b9-9745-26c36d29253d0510fb8c-c8d2-4bb1-adff-a7e0232cf832",
                                                               "Ná„ž1FS1?1Z6I6ê¨²661P#ê˜²è§Šæ¯šJØŸ1äš‘\u000211â¹¥1NF\u0005<6ä¿ˆ166AX1@G6\u0001K6#+-å…¸6ì¹·\u000566í•š1(1_1\t");
        assertFalse(parentaccountInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("2ec32.1fbe9@5b21a.me",
                                                             "fb950dae-9361-4619-9d09-990f977a1298",
                                                             "4adee5e374fd8e0cf4a09b2e4c7a53cc");
            ParentAccount parentaccount2 = new ParentAccount("2ec32.1fbe9@5b21a.me",
                                                             "fb950dae-9361-4619-9d09-990f977a1298",
                                                             "4adee5e374fd8e0cf4a09b2e4c7a53cc");
            ParentAccount parentaccount3 = new ParentAccount("539d3.f48fc@afda8.fr",
                                                             "1b2590cd-0ded-4093-bfcb-33f5d6192a3c",
                                                             "4adee5e374fd8e0cf4a09b2e4c7a53cc");
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotNull(parentaccount3);
            assertNotSame(parentaccount2, parentaccount1);
            assertNotSame(parentaccount3, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount1, parentaccount2);
            assertEquals(parentaccount1, parentaccount1);
            assertFalse(parentaccount1.equals(null));
            assertNotEquals(parentaccount3, parentaccount1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
