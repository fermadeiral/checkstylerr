// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model ActiveSession.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestActiveSession {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ActiveSession activesession1 = new ActiveSession("4adee5e374fd8e0cf4a09b2e4c7a53cc",
                                                             "5e55c6bd-c232-4c8c-a0b5-3f9eedbb6c64",
                                                             new Date(1559762576317L),
                                                             "efd211e2-5ee2-488d-be98-a1eff9767a79",
                                                             "7fd7334f-daf5-4447-9c94-282dd23a5599");
            ActiveSession activesession2 = activesession1.clone();
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotSame(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ActiveSession activesession1 = new ActiveSession("4adee5e374fd8e0cf4a09b2e4c7a53cc",
                                                             "700276ee-8954-406a-87f3-a0474588456e",
                                                             new Date(1559762582430L),
                                                             "aaace1a7-be62-40fe-898d-4e372457007a",
                                                             "e43ce281-722d-46ed-b523-74b3d99aa50a");
            ActiveSession activesession2 = new ActiveSession("4adee5e374fd8e0cf4a09b2e4c7a53cc",
                                                             "700276ee-8954-406a-87f3-a0474588456e",
                                                             new Date(1559762582430L),
                                                             "aaace1a7-be62-40fe-898d-4e372457007a",
                                                             "e43ce281-722d-46ed-b523-74b3d99aa50a");
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotSame(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession2.hashCode(), activesession1.hashCode());
            int hashCode = activesession1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, activesession1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ActiveSession activesession = new ActiveSession("4adee5e374fd8e0cf4a09b2e4c7a53cc",
                                                        "da385243-b2fa-4dc1-9cff-f24f45792665",
                                                        new Date(1559762577890L),
                                                        "c2c8755f-60fc-4239-91aa-f6e14d786989",
                                                        "7e406f28-76b4-4ff8-a931-f9bdf88418d9");
        assertTrue(activesession.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ActiveSession activesession1 = new ActiveSession("4adee5e374fd8e0cf4a09b2e4c7a53cc",
                                                             "59211ebb-250d-4899-ab4b-bbbae97602c5",
                                                             new Date(1559762572733L),
                                                             "cec7ee50-f630-4300-bb02-bc96cf87a69c",
                                                             "43f7a199-c6fc-4a3c-a473-e7b7f9ef51b4");
            ActiveSession activesession2 = new ActiveSession("4adee5e374fd8e0cf4a09b2e4c7a53cc",
                                                             "59211ebb-250d-4899-ab4b-bbbae97602c5",
                                                             new Date(1559762572733L),
                                                             "cec7ee50-f630-4300-bb02-bc96cf87a69c",
                                                             "43f7a199-c6fc-4a3c-a473-e7b7f9ef51b4");
            ActiveSession activesession3 = new ActiveSession("4adee5e374fd8e0cf4a09b2e4c7a53cc",
                                                             "82ac0d18-d194-4540-a6bc-5afb7ec4ac62",
                                                             new Date(1559762579042L),
                                                             "7029897c-9ea6-4c69-b47a-b7dcfe1e3961",
                                                             "edd15f5b-0537-4f64-9559-70c4697bcb7e");
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotNull(activesession3);
            assertNotSame(activesession2, activesession1);
            assertNotSame(activesession3, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession1, activesession2);
            assertEquals(activesession1, activesession1);
            assertFalse(activesession1.equals(null));
            assertNotEquals(activesession3, activesession1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
