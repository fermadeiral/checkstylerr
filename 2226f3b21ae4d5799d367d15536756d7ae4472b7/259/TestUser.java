// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model User.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestUser {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            User user1 = new User("4adee5e374fd8e0cf4a09b2e4c7a53cc", null, "6ea54c9b-6669-4347-96c8-cd3af3cc0748",
                                  new Date(1559762576091L), -46, null, "8dbe0.4e79b@e7c7a.fr", true,
                                  "530a2407-314d-4979-a846-3e03c974ca35", "4adee5e374fd8e0cf4a09b2e4c7a53cc", true,
                                  true, false, -68, null, null, "ce6182ab-faac-4f5c-be56-79579917e530", 112,
                                  "eb5c2023-4204-4048-84c8-a2efaea13c74", UserStatus.getDefault(), null,
                                  new Date(1559762574248L), "p6,_5S9.-");
            User user2 = user1.clone();
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotSame(user2, user1);
            assertEquals(user2, user1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            User user1 = new User("4adee5e374fd8e0cf4a09b2e4c7a53cc", null, "32781e3b-eb4b-4885-bcb9-941090c9fb71",
                                  new Date(1559762579194L), -105, null, "49f14.943a7@e10fa.fr", true,
                                  "aba32d5c-d1cd-4b01-8829-4965ef51f344", "4adee5e374fd8e0cf4a09b2e4c7a53cc", true,
                                  false, true, -114, null, null, "b473c326-ee14-4d6e-90dc-d2d85d525676", -42,
                                  "6b12cbaa-ee61-44cf-a433-950f032fa397", UserStatus.getDefault(), null,
                                  new Date(1559762578721L), "p6,_5S9.-");
            User user2 = new User("4adee5e374fd8e0cf4a09b2e4c7a53cc", null, "32781e3b-eb4b-4885-bcb9-941090c9fb71",
                                  new Date(1559762579194L), -105, null, "49f14.943a7@e10fa.fr", true,
                                  "aba32d5c-d1cd-4b01-8829-4965ef51f344", "4adee5e374fd8e0cf4a09b2e4c7a53cc", true,
                                  false, true, -114, null, null, "b473c326-ee14-4d6e-90dc-d2d85d525676", -42,
                                  "6b12cbaa-ee61-44cf-a433-950f032fa397", UserStatus.getDefault(), null,
                                  new Date(1559762578721L), "p6,_5S9.-");
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotSame(user2, user1);
            assertEquals(user2, user1);
            assertEquals(user2.hashCode(), user1.hashCode());
            int hashCode = user1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, user1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        User user = new User("4adee5e374fd8e0cf4a09b2e4c7a53cc", null, "78dc052a-5318-4974-b284-8c68497f54e6",
                             new Date(1559762577660L), -83, null, "e457a.abe0a@89f66.fr", false,
                             "90db6b86-34a3-463a-92f9-1dca9b4d723e", "4adee5e374fd8e0cf4a09b2e4c7a53cc", true, false,
                             true, 65, null, null, "6441ab85-bb55-4e7f-8a38-dbf17fe76513", -103,
                             "a77d8de9-4402-46b6-ab77-14fdc0f73173", UserStatus.getDefault(), null,
                             new Date(1559762573512L), "p6,_5S9.-");
        assertTrue(user.isValid());
        User userInvalid = new User("Ná„ž1FS1?1Z6I6ê¨²661P#ê˜²è§Šæ¯šJØŸ1äš‘\u000211â¹¥1NF\u0005<6ä¿ˆ166AX1@G6\u0001K6#+-å…¸6ì¹·\u000566í•š1(1_1\t",
                                    null, "bc13a081-8c37-492a-b5ab-e889e82cec5c", new Date(1559762573949L), 1, null,
                                    null, true,
                                    "82f3ecbf-efd2-4d81-bef4-ea0f08a31699af1a6cc7-6ed1-4cad-b14d-18b9a7a92f1c2ad1ee50-80eb-42ce-9a53-4fe85fbbb012",
                                    "Ná„ž1FS1?1Z6I6ê¨²661P#ê˜²è§Šæ¯šJØŸ1äš‘\u000211â¹¥1NF\u0005<6ä¿ˆ166AX1@G6\u0001K6#+-å…¸6ì¹·\u000566í•š1(1_1\t",
                                    true, false, false, 82, null, null, "1259663d-b984-4fe4-949f-d62a2042d05c", -103,
                                    "7ff39df0-841f-4e67-b571-f3b62700c369b9cf3d8b-1a37-4511-824d-98a0f821347d12b13bfa-086c-44a8-a3a1-4b5342af56a8",
                                    UserStatus.getDefault(), null, new Date(1559762575552L),
                                    "\u001d-j74QHV7Uç£¥n-\u001b\u0004\u00188A\u00018-L7\u0005;/]\u001b8i8\u0003Y-\u000eC-4-7\u001f4\fi-]\u000e7!17\u0010çˆ‚\\\\î?‰8\u001a/>â?±3Y]i");
        assertFalse(userInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            User user1 = new User("4adee5e374fd8e0cf4a09b2e4c7a53cc", null, "d10babec-51bf-4394-8d59-23cdac94ad77",
                                  new Date(1559762575091L), -55, null, "41bf4.d2cf8@48638.fr", false,
                                  "c3dd1cfc-57be-47ee-9933-7d450d1a3c41", "4adee5e374fd8e0cf4a09b2e4c7a53cc", true,
                                  true, false, -112, null, null, "2c840cac-8a4d-4874-bc1d-dc6afd1c8a8a", -45,
                                  "118c5e83-863f-4ef5-81dd-d401dbcc7e68", UserStatus.getDefault(), null,
                                  new Date(1559762574713L), "p6,_5S9.-");
            User user2 = new User("4adee5e374fd8e0cf4a09b2e4c7a53cc", null, "d10babec-51bf-4394-8d59-23cdac94ad77",
                                  new Date(1559762575091L), -55, null, "41bf4.d2cf8@48638.fr", false,
                                  "c3dd1cfc-57be-47ee-9933-7d450d1a3c41", "4adee5e374fd8e0cf4a09b2e4c7a53cc", true,
                                  true, false, -112, null, null, "2c840cac-8a4d-4874-bc1d-dc6afd1c8a8a", -45,
                                  "118c5e83-863f-4ef5-81dd-d401dbcc7e68", UserStatus.getDefault(), null,
                                  new Date(1559762574713L), "p6,_5S9.-");
            User user3 = new User("4adee5e374fd8e0cf4a09b2e4c7a53cc", null, "58062059-11ba-4864-88af-9a2ec7772f78",
                                  new Date(1559762576920L), 90, null, "7f464.fcd79@fe8db.me", false,
                                  "19b4614e-a370-4691-a9ce-34137352917a", "4adee5e374fd8e0cf4a09b2e4c7a53cc", true,
                                  true, false, -91, null, null, "df5a6791-4beb-466e-90cd-32015a6f6e2a", 101,
                                  "71c1c88f-f5f8-423e-8e5c-6969ff686a17", UserStatus.getDefault(), null,
                                  new Date(1559762574878L), "p6,_5S9.-");
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotNull(user3);
            assertNotSame(user2, user1);
            assertNotSame(user3, user1);
            assertEquals(user2, user1);
            assertEquals(user2, user1);
            assertEquals(user1, user2);
            assertEquals(user1, user1);
            assertFalse(user1.equals(null));
            assertNotEquals(user3, user1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
