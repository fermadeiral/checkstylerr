// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEvents.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEvents {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1559762581472L), null,
                                                          new Date(1559762578120L),
                                                          "f56527de-d076-4cab-a7ef-62df768af27f",
                                                          "6ae142d3-c170-469c-b6ea-3aeb1743a134",
                                                          "c2a56340-bd4d-4260-a550-77544c2371b3",
                                                          "f8ea0645-c028-44fc-934e-413c895bc57f",
                                                          "fe38be1e-84c4-4fcc-947b-9cff41669e3e",
                                                          "3cccd351-52e8-4005-b402-8553bd887f59", false);
            DeviceEvents deviceevents2 = deviceevents1.clone();
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1559762576772L), null,
                                                          new Date(1559762575550L),
                                                          "bbfee0f2-54fc-47e4-93ca-1a43f70d4e19",
                                                          "a842c685-ee83-43b2-bdff-4432f2f6933c",
                                                          "8150ff79-5612-4ed8-a3ac-b160169ea206",
                                                          "d0110220-bfdf-4727-a16a-177bbf46ba34",
                                                          "645c1b08-bf8c-4829-891c-5f86bbfb3f61",
                                                          "85ea4dcd-c585-4980-842f-393429163d5a", false);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1559762576772L), null,
                                                          new Date(1559762575550L),
                                                          "bbfee0f2-54fc-47e4-93ca-1a43f70d4e19",
                                                          "a842c685-ee83-43b2-bdff-4432f2f6933c",
                                                          "8150ff79-5612-4ed8-a3ac-b160169ea206",
                                                          "d0110220-bfdf-4727-a16a-177bbf46ba34",
                                                          "645c1b08-bf8c-4829-891c-5f86bbfb3f61",
                                                          "85ea4dcd-c585-4980-842f-393429163d5a", false);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2.hashCode(), deviceevents1.hashCode());
            int hashCode = deviceevents1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceevents1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEvents deviceevents = new DeviceEvents(null, new Date(1559762579541L), null, new Date(1559762577890L),
                                                     "e9ac6d86-fdb2-4f77-b062-bac8cf06fbf4",
                                                     "6d2a742b-cb4c-4ac4-9c40-2ef18348a694",
                                                     "7c8e03a2-2d19-4769-be02-3afc27142a6c",
                                                     "42b56c31-0fe7-4474-bcac-ce7daf1e5282",
                                                     "5b507175-e756-49c1-be61-5689bd7a894e",
                                                     "3c2fc4b7-f382-4446-924d-cf97befaa44a", false);
        assertTrue(deviceevents.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1559762577578L), null,
                                                          new Date(1559762577608L),
                                                          "a2ac172c-d0a5-4df5-b307-1827ee9a971f",
                                                          "8f8dd618-95af-480c-8ec5-cc13df878b43",
                                                          "44687055-65d7-4a1d-a39f-e5976f9a2270",
                                                          "7ec7686f-d364-48c0-b92b-999487a8fa83",
                                                          "bd3f5094-73a8-4632-995e-7c932fbd23d2",
                                                          "8f46d7ee-2ba6-4c78-a13f-e3be001d7ddb", false);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1559762577578L), null,
                                                          new Date(1559762577608L),
                                                          "a2ac172c-d0a5-4df5-b307-1827ee9a971f",
                                                          "8f8dd618-95af-480c-8ec5-cc13df878b43",
                                                          "44687055-65d7-4a1d-a39f-e5976f9a2270",
                                                          "7ec7686f-d364-48c0-b92b-999487a8fa83",
                                                          "bd3f5094-73a8-4632-995e-7c932fbd23d2",
                                                          "8f46d7ee-2ba6-4c78-a13f-e3be001d7ddb", false);
            DeviceEvents deviceevents3 = new DeviceEvents(null, new Date(1559762574129L), null,
                                                          new Date(1559762578301L),
                                                          "dad440f6-b3aa-4ae0-8f2e-f4a5d5206efe",
                                                          "7cc86437-dc3c-4e3a-ab4a-3034a19a7e7e",
                                                          "d8f09ce1-43a3-4170-8de0-60151bb5f3df",
                                                          "6111b26a-5c8c-4b35-be96-a22fc1203920",
                                                          "772ca833-d756-4733-97e7-4ca907b2e9ef",
                                                          "801a3231-0b54-4e3a-8f63-ed7477e83a05", false);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotNull(deviceevents3);
            assertNotSame(deviceevents2, deviceevents1);
            assertNotSame(deviceevents3, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents1, deviceevents2);
            assertEquals(deviceevents1, deviceevents1);
            assertFalse(deviceevents1.equals(null));
            assertNotEquals(deviceevents3, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
