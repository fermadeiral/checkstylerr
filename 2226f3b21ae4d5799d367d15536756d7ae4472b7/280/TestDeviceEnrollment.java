// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEnrollment.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEnrollment {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEnrollment deviceenrollment1 = new DeviceEnrollment("86908ea5-f660-48cf-9e54-3c93cd954074",
                                                                      new Date(1559762575481L),
                                                                      new Date(1559762578867L),
                                                                      "1N20YZukP835BgzZYH8LOPUJsj8kWaIM",
                                                                      "A-vjbsq1NuUy0q70u5Pev442EYSS23JZ9aHmC40LIHJjn4z6Gl10QPZZbft3bLPC3EJ6x2NIqZIDTUXHK399435reHQ0niTym",
                                                                      new Date(1559762577403L),
                                                                      "1N20YZukP835BgzZYH8LOPUJsj8kWaIM");
            DeviceEnrollment deviceenrollment2 = deviceenrollment1.clone();
            assertNotNull(deviceenrollment1);
            assertNotNull(deviceenrollment2);
            assertNotSame(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEnrollment deviceenrollment1 = new DeviceEnrollment("6abedff0-cd8e-4d53-9b30-17fe9e70ab08",
                                                                      new Date(1559762582540L),
                                                                      new Date(1559762580895L),
                                                                      "1N20YZukP835BgzZYH8LOPUJsj8kWaIM",
                                                                      "A-vjbsq1NuUy0q70u5Pev442EYSS23JZ9aHmC40LIHJjn4z6Gl10QPZZbft3bLPC3EJ6x2NIqZIDTUXHK399435reHQ0niTym",
                                                                      new Date(1559762581945L),
                                                                      "1N20YZukP835BgzZYH8LOPUJsj8kWaIM");
            DeviceEnrollment deviceenrollment2 = new DeviceEnrollment("6abedff0-cd8e-4d53-9b30-17fe9e70ab08",
                                                                      new Date(1559762582540L),
                                                                      new Date(1559762580895L),
                                                                      "1N20YZukP835BgzZYH8LOPUJsj8kWaIM",
                                                                      "A-vjbsq1NuUy0q70u5Pev442EYSS23JZ9aHmC40LIHJjn4z6Gl10QPZZbft3bLPC3EJ6x2NIqZIDTUXHK399435reHQ0niTym",
                                                                      new Date(1559762581945L),
                                                                      "1N20YZukP835BgzZYH8LOPUJsj8kWaIM");
            assertNotNull(deviceenrollment1);
            assertNotNull(deviceenrollment2);
            assertNotSame(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2.hashCode(), deviceenrollment1.hashCode());
            int hashCode = deviceenrollment1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceenrollment1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEnrollment deviceenrollment = new DeviceEnrollment("af5268a4-a813-4e65-8d64-f5b47e42522b",
                                                                 new Date(1559762582196L), new Date(1559762579509L),
                                                                 "1N20YZukP835BgzZYH8LOPUJsj8kWaIM",
                                                                 "A-vjbsq1NuUy0q70u5Pev442EYSS23JZ9aHmC40LIHJjn4z6Gl10QPZZbft3bLPC3EJ6x2NIqZIDTUXHK399435reHQ0niTym",
                                                                 new Date(1559762578411L),
                                                                 "1N20YZukP835BgzZYH8LOPUJsj8kWaIM");
        assertTrue(deviceenrollment.isValid());
        DeviceEnrollment deviceenrollmentInvalid = new DeviceEnrollment("62ed252b-fa3e-44c6-a4ac-3a7ab3f3710d",
                                                                        new Date(1559762576587L),
                                                                        new Date(1559762573174L),
                                                                        "t7K7(di)?_d6KSQwvF`D4l匶it]7X7Tt\u0014t6\\\\y\\\\∣tKF\u000544KXEKExt`En[?Eh4Qxfp",
                                                                        null, new Date(1559762574711L),
                                                                        "t7K7(di)?_d6KSQwvF`D4l匶it]7X7Tt\u0014t6\\\\y\\\\∣tKF\u000544KXEKExt`En[?Eh4Qxfp");
        assertFalse(deviceenrollmentInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEnrollment deviceenrollment1 = new DeviceEnrollment("84363d8a-7e8b-40c6-8fe1-2b19cdfd4aac",
                                                                      new Date(1559762575690L),
                                                                      new Date(1559762581605L),
                                                                      "1N20YZukP835BgzZYH8LOPUJsj8kWaIM",
                                                                      "A-vjbsq1NuUy0q70u5Pev442EYSS23JZ9aHmC40LIHJjn4z6Gl10QPZZbft3bLPC3EJ6x2NIqZIDTUXHK399435reHQ0niTym",
                                                                      new Date(1559762577131L),
                                                                      "1N20YZukP835BgzZYH8LOPUJsj8kWaIM");
            DeviceEnrollment deviceenrollment2 = new DeviceEnrollment("84363d8a-7e8b-40c6-8fe1-2b19cdfd4aac",
                                                                      new Date(1559762575690L),
                                                                      new Date(1559762581605L),
                                                                      "1N20YZukP835BgzZYH8LOPUJsj8kWaIM",
                                                                      "A-vjbsq1NuUy0q70u5Pev442EYSS23JZ9aHmC40LIHJjn4z6Gl10QPZZbft3bLPC3EJ6x2NIqZIDTUXHK399435reHQ0niTym",
                                                                      new Date(1559762577131L),
                                                                      "1N20YZukP835BgzZYH8LOPUJsj8kWaIM");
            DeviceEnrollment deviceenrollment3 = new DeviceEnrollment("75c6c332-36e0-449d-90e8-682747915bd5",
                                                                      new Date(1559762578307L),
                                                                      new Date(1559762580862L),
                                                                      "1N20YZukP835BgzZYH8LOPUJsj8kWaIM",
                                                                      "A-vjbsq1NuUy0q70u5Pev442EYSS23JZ9aHmC40LIHJjn4z6Gl10QPZZbft3bLPC3EJ6x2NIqZIDTUXHK399435reHQ0niTym",
                                                                      new Date(1559762576204L),
                                                                      "1N20YZukP835BgzZYH8LOPUJsj8kWaIM");
            assertNotNull(deviceenrollment1);
            assertNotNull(deviceenrollment2);
            assertNotNull(deviceenrollment3);
            assertNotSame(deviceenrollment2, deviceenrollment1);
            assertNotSame(deviceenrollment3, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment1, deviceenrollment2);
            assertEquals(deviceenrollment1, deviceenrollment1);
            assertFalse(deviceenrollment1.equals(null));
            assertNotEquals(deviceenrollment3, deviceenrollment1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
