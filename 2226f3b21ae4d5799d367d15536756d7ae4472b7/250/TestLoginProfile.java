// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model LoginProfile.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestLoginProfile {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            LoginProfile loginprofile1 = new LoginProfile("f263cb6e-1f76-4439-90c1-72576aa0400b",
                                                          "bfed1e58-4d4e-4c7d-9607-7bced8b2969b");
            LoginProfile loginprofile2 = loginprofile1.clone();
            assertNotNull(loginprofile1);
            assertNotNull(loginprofile2);
            assertNotSame(loginprofile2, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            LoginProfile loginprofile1 = new LoginProfile("da2af556-0241-4154-acc1-26682cfb811e",
                                                          "16b842df-9544-4f8e-8da2-ae5f3931864e");
            LoginProfile loginprofile2 = new LoginProfile("da2af556-0241-4154-acc1-26682cfb811e",
                                                          "16b842df-9544-4f8e-8da2-ae5f3931864e");
            assertNotNull(loginprofile1);
            assertNotNull(loginprofile2);
            assertNotSame(loginprofile2, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
            assertEquals(loginprofile2.hashCode(), loginprofile1.hashCode());
            int hashCode = loginprofile1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, loginprofile1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        LoginProfile loginprofile = new LoginProfile("78d345b0-2ed1-434c-8ec7-0d923f6f4a82",
                                                     "46c788ad-2cfb-4023-a154-b1dd373f815f");
        assertTrue(loginprofile.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            LoginProfile loginprofile1 = new LoginProfile("5bd62bb7-1b51-4df4-8b14-ebac9e31682e",
                                                          "f95ea2e4-b5fd-4d91-b8cc-5a754ae7fa6c");
            LoginProfile loginprofile2 = new LoginProfile("5bd62bb7-1b51-4df4-8b14-ebac9e31682e",
                                                          "f95ea2e4-b5fd-4d91-b8cc-5a754ae7fa6c");
            LoginProfile loginprofile3 = new LoginProfile("2f09511b-c1f9-456c-8de4-2da075cf13e8",
                                                          "d31814a0-135a-48ec-88f8-32ddbaf96083");
            assertNotNull(loginprofile1);
            assertNotNull(loginprofile2);
            assertNotNull(loginprofile3);
            assertNotSame(loginprofile2, loginprofile1);
            assertNotSame(loginprofile3, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
            assertEquals(loginprofile1, loginprofile2);
            assertEquals(loginprofile1, loginprofile1);
            assertFalse(loginprofile1.equals(null));
            assertNotEquals(loginprofile3, loginprofile1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
