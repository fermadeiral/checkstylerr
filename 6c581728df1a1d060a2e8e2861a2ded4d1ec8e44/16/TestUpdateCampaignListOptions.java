// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.deviceupdate.model;

import static org.junit.Assert.*;

import com.arm.mbed.cloud.sdk.common.Order;
import com.arm.mbed.cloud.sdk.common.listing.ListOptionsEncoder;
import com.arm.mbed.cloud.sdk.common.listing.filtering.FilterOperator;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import org.junit.Test;

/**
 * Unit tests for Model UpdateCampaignListOptions.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestUpdateCampaignListOptions {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            UpdateCampaignListOptions updatecampaignlistoptions1 = new UpdateCampaignListOptions(Integer.valueOf(-14),
                                                                                                 Long.valueOf(-102),
                                                                                                 Order.getDefault(),
                                                                                                 "dbf4734f-7ab2-4db5-bc73-283b0fe85039",
                                                                                                 null, null);
            UpdateCampaignListOptions updatecampaignlistoptions2 = updatecampaignlistoptions1.clone();
            assertNotNull(updatecampaignlistoptions1);
            assertNotNull(updatecampaignlistoptions2);
            assertNotSame(updatecampaignlistoptions2, updatecampaignlistoptions1);
            assertEquals(updatecampaignlistoptions2, updatecampaignlistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the filters method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testFilters() {
        try {
            UpdateCampaignListOptions option = new UpdateCampaignListOptions().inCreatedAts(Arrays.asList(new Date(1557969573749L),
                                                                                                          new Date(1557969580229L),
                                                                                                          new Date(1557969574914L),
                                                                                                          new Date(1557969580368L),
                                                                                                          new Date(1557969580160L),
                                                                                                          new Date(1557969574820L),
                                                                                                          new Date(1557969579360L),
                                                                                                          new Date(1557969575962L)))
                                                                              .notInCreatedAts(Arrays.asList(new Date(1557969572789L),
                                                                                                             new Date(1557969580248L),
                                                                                                             new Date(1557969573425L),
                                                                                                             new Date(1557969579537L),
                                                                                                             new Date(1557969572546L),
                                                                                                             new Date(1557969573134L),
                                                                                                             new Date(1557969571337L),
                                                                                                             new Date(1557969572344L),
                                                                                                             new Date(1557969578041L)))
                                                                              .lessThanCreatedAt(new Date(1557969572673L))
                                                                              .greaterThanCreatedAt(new Date(1557969570696L))
                                                                              .equalToName("01c3a34d-6c7d-4b7d-90e7-b3ac7771693d")
                                                                              .notEqualToName("0d2d8d78-ab6b-49f2-a97b-7031121f7186")
                                                                              .inNames(Arrays.asList("a9359ea5-8116-4146-a886-ea1b683623e2",
                                                                                                     "e10a1881-bf17-4d70-a6cd-2d2916b8a213",
                                                                                                     "9812cc35-7c5c-411a-b05d-bb4e241d6be2",
                                                                                                     "858dd718-9430-410e-838f-80bbf2950ea2",
                                                                                                     "3d7b9bca-4aa4-4808-970f-cc1b368d3625",
                                                                                                     "ab4a4e35-1193-4f94-9603-ad66d64dfcc0",
                                                                                                     "d02d252d-9e38-4950-9981-fdf9625cff7e",
                                                                                                     "e4bf834d-d649-4924-a8c9-7c59aedb10c9",
                                                                                                     "c30d27f6-5f47-4c3c-9e35-ebed79367e24"))
                                                                              .notInNames(Arrays.asList("0f5f34bd-1799-4651-a610-8903ef9c5ca4",
                                                                                                        "d303cb74-d188-42a1-ae39-97de11b838c0"))
                                                                              .equalToId("301517d6-413a-49c5-bbb6-4bb71fa6b7e4")
                                                                              .notEqualToId("6cb24556-acbe-4b37-af65-42153c43f3c3")
                                                                              .inIds(Arrays.asList("a6b2ead8-3eaa-40cf-95b3-df74de014dbd"))
                                                                              .notInIds(Arrays.asList("afca80b1-bfa3-431c-a9bd-9c78c2bf7053",
                                                                                                      "3d260961-2e24-46c7-9c68-f092c89e890f",
                                                                                                      "757de6a8-ff21-4695-92c2-9a3e05cad10d",
                                                                                                      "f8fd5886-4695-4ff0-9633-a7af4300a186"))
                                                                              .equalToDeviceFilter("7cbd1385-2ca4-4b5f-bc86-28fae141342d")
                                                                              .notEqualToDeviceFilter("d8e97399-5816-4553-8611-2c48b9a2c57a")
                                                                              .inDeviceFilters(Arrays.asList("a68a8d93-a1f5-4629-acb4-8772be0cd2f6",
                                                                                                             "81b5d27f-d4ea-439d-97a7-aee09a33fe19",
                                                                                                             "7b1f3110-dd95-4909-ab67-c684bceb8a55",
                                                                                                             "290172de-0e90-4c04-8106-625fc3c6127d",
                                                                                                             "cb698442-a5e0-4261-9f35-fa9399a6b07e",
                                                                                                             "dfe05415-6a82-4352-b363-7a46d643531c",
                                                                                                             "9f2480b5-89df-4af0-b2e7-51cd5409f0a1"))
                                                                              .notInDeviceFilters(Arrays.asList("c99447d6-a650-4f5a-8180-dbaadd7563e2",
                                                                                                                "5f61520e-8536-4191-ac9e-16135a060fa5"))
                                                                              .inFinisheds(Arrays.asList(new Date(1557969578997L),
                                                                                                         new Date(1557969570905L),
                                                                                                         new Date(1557969578683L),
                                                                                                         new Date(1557969570984L),
                                                                                                         new Date(1557969579700L),
                                                                                                         new Date(1557969577121L),
                                                                                                         new Date(1557969578583L),
                                                                                                         new Date(1557969572679L),
                                                                                                         new Date(1557969571690L)))
                                                                              .notInFinisheds(Arrays.asList(new Date(1557969571834L),
                                                                                                            new Date(1557969578595L),
                                                                                                            new Date(1557969571090L),
                                                                                                            new Date(1557969574889L),
                                                                                                            new Date(1557969574847L),
                                                                                                            new Date(1557969577859L)))
                                                                              .lessThanFinished(new Date(1557969571708L))
                                                                              .greaterThanFinished(new Date(1557969571469L))
                                                                              .inStartedAts(Arrays.asList(new Date(1557969577721L),
                                                                                                          new Date(1557969571923L)))
                                                                              .notInStartedAts(Arrays.asList(new Date(1557969580221L)))
                                                                              .lessThanStartedAt(new Date(1557969573628L))
                                                                              .greaterThanStartedAt(new Date(1557969571058L))
                                                                              .inWhens(Arrays.asList(new Date(1557969574845L)))
                                                                              .notInWhens(Arrays.asList(new Date(1557969578198L),
                                                                                                        new Date(1557969575072L),
                                                                                                        new Date(1557969574588L),
                                                                                                        new Date(1557969574002L),
                                                                                                        new Date(1557969570618L)))
                                                                              .lessThanWhen(new Date(1557969578497L))
                                                                              .greaterThanWhen(new Date(1557969574658L))
                                                                              .inUpdatedAts(Arrays.asList(new Date(1557969573382L),
                                                                                                          new Date(1557969576846L),
                                                                                                          new Date(1557969577863L),
                                                                                                          new Date(1557969574395L),
                                                                                                          new Date(1557969576519L)))
                                                                              .notInUpdatedAts(Arrays.asList(new Date(1557969573557L),
                                                                                                             new Date(1557969576543L),
                                                                                                             new Date(1557969571214L),
                                                                                                             new Date(1557969570883L),
                                                                                                             new Date(1557969573575L),
                                                                                                             new Date(1557969576456L)))
                                                                              .lessThanUpdatedAt(new Date(1557969571884L))
                                                                              .greaterThanUpdatedAt(new Date(1557969573955L))
                                                                              .equalToRootManifestId("d736aec4-17aa-4149-b77a-d538013671f3")
                                                                              .notEqualToRootManifestId("ba5a5af1-1091-4ff1-a94d-96e6f35093d3")
                                                                              .inRootManifestIds(Arrays.asList("b356a9f7-4523-482b-bbf4-586fb7151855",
                                                                                                               "8a226e0e-3b58-4990-9893-87752a93595e",
                                                                                                               "3a1b8fdc-b696-44b3-9bad-8a442cb12146"))
                                                                              .notInRootManifestIds(Arrays.asList("ee75a658-dc06-4255-966e-c4c689ad2963",
                                                                                                                  "9d2404b1-d680-40bc-814b-0cb173a946b3",
                                                                                                                  "917ff499-def0-410a-b2f4-e12c0a2a9c15",
                                                                                                                  "5f8b961f-0981-4667-9581-76d027f03c95",
                                                                                                                  "14847c6d-5efa-4b42-a2fb-543ed5c5362f",
                                                                                                                  "8528fe35-9be5-46c9-80f5-f018596b6038"))
                                                                              .equalToDescription("502d9653-2002-476e-8243-df458e18d86c")
                                                                              .notEqualToDescription("00fdc64b-8318-4efc-a648-1d9c1278e3c9")
                                                                              .inDescriptions(Arrays.asList("422baf97-e1d5-4ca9-aa73-bcd5540a3696",
                                                                                                            "0bf18a7a-40d0-4918-926c-782358516ff4",
                                                                                                            "27eb0a5d-7e8d-477f-a842-51f6a91b247b",
                                                                                                            "f2c7b301-2257-42d4-80a2-586f8a5f5ebe",
                                                                                                            "a910d3d6-a985-4193-85c5-a03d34dda58e",
                                                                                                            "6cff21eb-ded1-43d4-a185-c48a9a3cd971"))
                                                                              .notInDescriptions(Arrays.asList("0aa51397-3034-4b37-9ea4-8990f4f82f19",
                                                                                                               "6361a895-0834-420a-b5d4-c5c9c7394dd1"));
            assertTrue(option.hasFilters());
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1557969573749L), new Date(1557969580229L), new Date(1557969574914L),
                                       new Date(1557969580368L), new Date(1557969580160L), new Date(1557969574820L),
                                       new Date(1557969579360L), new Date(1557969575962L)),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1557969572789L), new Date(1557969580248L), new Date(1557969573425L),
                                       new Date(1557969579537L), new Date(1557969572546L), new Date(1557969573134L),
                                       new Date(1557969571337L), new Date(1557969572344L), new Date(1557969578041L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.LESS_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1557969572673L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1557969570696L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME, FilterOperator.EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("01c3a34d-6c7d-4b7d-90e7-b3ac7771693d",
                         ListOptionsEncoder.encodeSingleEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME,
                                                                    String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("0d2d8d78-ab6b-49f2-a97b-7031121f7186",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME,
                                                                       String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME, FilterOperator.IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("a9359ea5-8116-4146-a886-ea1b683623e2", "e10a1881-bf17-4d70-a6cd-2d2916b8a213",
                                       "9812cc35-7c5c-411a-b05d-bb4e241d6be2", "858dd718-9430-410e-838f-80bbf2950ea2",
                                       "3d7b9bca-4aa4-4808-970f-cc1b368d3625", "ab4a4e35-1193-4f94-9603-ad66d64dfcc0",
                                       "d02d252d-9e38-4950-9981-fdf9625cff7e", "e4bf834d-d649-4924-a8c9-7c59aedb10c9",
                                       "c30d27f6-5f47-4c3c-9e35-ebed79367e24"),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("0f5f34bd-1799-4651-a610-8903ef9c5ca4", "d303cb74-d188-42a1-ae39-97de11b838c0"),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID, FilterOperator.EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("301517d6-413a-49c5-bbb6-4bb71fa6b7e4",
                         ListOptionsEncoder.encodeSingleEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("6cb24556-acbe-4b37-af65-42153c43f3c3",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID, FilterOperator.IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("a6b2ead8-3eaa-40cf-95b3-df74de014dbd"),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID, List.class,
                                                                 option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("afca80b1-bfa3-431c-a9bd-9c78c2bf7053", "3d260961-2e24-46c7-9c68-f092c89e890f",
                                       "757de6a8-ff21-4695-92c2-9a3e05cad10d", "f8fd5886-4695-4ff0-9633-a7af4300a186"),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER, FilterOperator.EQUAL));
            assertNotNull(option.getDeviceFilterFilters());
            assertEquals("7cbd1385-2ca4-4b5f-bc86-28fae141342d",
                         ListOptionsEncoder.encodeSingleEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER,
                                                                    String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDeviceFilterFilters());
            assertEquals("d8e97399-5816-4553-8611-2c48b9a2c57a",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER,
                                                                       String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER, FilterOperator.IN));
            assertNotNull(option.getDeviceFilterFilters());
            assertEquals(Arrays.asList("a68a8d93-a1f5-4629-acb4-8772be0cd2f6", "81b5d27f-d4ea-439d-97a7-aee09a33fe19",
                                       "7b1f3110-dd95-4909-ab67-c684bceb8a55", "290172de-0e90-4c04-8106-625fc3c6127d",
                                       "cb698442-a5e0-4261-9f35-fa9399a6b07e", "dfe05415-6a82-4352-b363-7a46d643531c",
                                       "9f2480b5-89df-4af0-b2e7-51cd5409f0a1"),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER, FilterOperator.NOT_IN));
            assertNotNull(option.getDeviceFilterFilters());
            assertEquals(Arrays.asList("c99447d6-a650-4f5a-8180-dbaadd7563e2", "5f61520e-8536-4191-ac9e-16135a060fa5"),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED, FilterOperator.IN));
            assertNotNull(option.getFinishedFilters());
            assertEquals(Arrays.asList(new Date(1557969578997L), new Date(1557969570905L), new Date(1557969578683L),
                                       new Date(1557969570984L), new Date(1557969579700L), new Date(1557969577121L),
                                       new Date(1557969578583L), new Date(1557969572679L), new Date(1557969571690L)),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED, FilterOperator.NOT_IN));
            assertNotNull(option.getFinishedFilters());
            assertEquals(Arrays.asList(new Date(1557969571834L), new Date(1557969578595L), new Date(1557969571090L),
                                       new Date(1557969574889L), new Date(1557969574847L), new Date(1557969577859L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED, FilterOperator.LESS_THAN));
            assertNotNull(option.getFinishedFilters());
            assertEquals(new Date(1557969571708L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED, FilterOperator.GREATER_THAN));
            assertNotNull(option.getFinishedFilters());
            assertEquals(new Date(1557969571469L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT, FilterOperator.IN));
            assertNotNull(option.getStartedAtFilters());
            assertEquals(Arrays.asList(new Date(1557969577721L), new Date(1557969571923L)),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getStartedAtFilters());
            assertEquals(Arrays.asList(new Date(1557969580221L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT, FilterOperator.LESS_THAN));
            assertNotNull(option.getStartedAtFilters());
            assertEquals(new Date(1557969573628L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getStartedAtFilters());
            assertEquals(new Date(1557969571058L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN, FilterOperator.IN));
            assertNotNull(option.getWhenFilters());
            assertEquals(Arrays.asList(new Date(1557969574845L)),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN, FilterOperator.NOT_IN));
            assertNotNull(option.getWhenFilters());
            assertEquals(Arrays.asList(new Date(1557969578198L), new Date(1557969575072L), new Date(1557969574588L),
                                       new Date(1557969574002L), new Date(1557969570618L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN, FilterOperator.LESS_THAN));
            assertNotNull(option.getWhenFilters());
            assertEquals(new Date(1557969578497L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN, FilterOperator.GREATER_THAN));
            assertNotNull(option.getWhenFilters());
            assertEquals(new Date(1557969574658L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1557969573382L), new Date(1557969576846L), new Date(1557969577863L),
                                       new Date(1557969574395L), new Date(1557969576519L)),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1557969573557L), new Date(1557969576543L), new Date(1557969571214L),
                                       new Date(1557969570883L), new Date(1557969573575L), new Date(1557969576456L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.LESS_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1557969571884L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1557969573955L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID,
                                        FilterOperator.EQUAL));
            assertNotNull(option.getRootManifestIdFilters());
            assertEquals("d736aec4-17aa-4149-b77a-d538013671f3",
                         ListOptionsEncoder.encodeSingleEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getRootManifestIdFilters());
            assertEquals("ba5a5af1-1091-4ff1-a94d-96e6f35093d3",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID, FilterOperator.IN));
            assertNotNull(option.getRootManifestIdFilters());
            assertEquals(Arrays.asList("b356a9f7-4523-482b-bbf4-586fb7151855", "8a226e0e-3b58-4990-9893-87752a93595e",
                                       "3a1b8fdc-b696-44b3-9bad-8a442cb12146"),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID,
                                        FilterOperator.NOT_IN));
            assertNotNull(option.getRootManifestIdFilters());
            assertEquals(Arrays.asList("ee75a658-dc06-4255-966e-c4c689ad2963", "9d2404b1-d680-40bc-814b-0cb173a946b3",
                                       "917ff499-def0-410a-b2f4-e12c0a2a9c15", "5f8b961f-0981-4667-9581-76d027f03c95",
                                       "14847c6d-5efa-4b42-a2fb-543ed5c5362f", "8528fe35-9be5-46c9-80f5-f018596b6038"),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("502d9653-2002-476e-8243-df458e18d86c",
                         ListOptionsEncoder.encodeSingleEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("00fdc64b-8318-4efc-a648-1d9c1278e3c9",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                       String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("422baf97-e1d5-4ca9-aa73-bcd5540a3696", "0bf18a7a-40d0-4918-926c-782358516ff4",
                                       "27eb0a5d-7e8d-477f-a842-51f6a91b247b", "f2c7b301-2257-42d4-80a2-586f8a5f5ebe",
                                       "a910d3d6-a985-4193-85c5-a03d34dda58e", "6cff21eb-ded1-43d4-a185-c48a9a3cd971"),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("0aa51397-3034-4b37-9ea4-8990f4f82f19", "6361a895-0834-420a-b5d4-c5c9c7394dd1"),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    List.class, option));
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            UpdateCampaignListOptions updatecampaignlistoptions1 = new UpdateCampaignListOptions(Integer.valueOf(-118),
                                                                                                 Long.valueOf(29),
                                                                                                 Order.getDefault(),
                                                                                                 "785b0011-89a1-4f7b-8212-a2752caa0fcd",
                                                                                                 null, null);
            UpdateCampaignListOptions updatecampaignlistoptions2 = new UpdateCampaignListOptions(Integer.valueOf(-118),
                                                                                                 Long.valueOf(29),
                                                                                                 Order.getDefault(),
                                                                                                 "785b0011-89a1-4f7b-8212-a2752caa0fcd",
                                                                                                 null, null);
            assertNotNull(updatecampaignlistoptions1);
            assertNotNull(updatecampaignlistoptions2);
            assertNotSame(updatecampaignlistoptions2, updatecampaignlistoptions1);
            assertEquals(updatecampaignlistoptions2, updatecampaignlistoptions1);
            assertEquals(updatecampaignlistoptions2.hashCode(), updatecampaignlistoptions1.hashCode());
            int hashCode = updatecampaignlistoptions1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, updatecampaignlistoptions1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            UpdateCampaignListOptions updatecampaignlistoptions1 = new UpdateCampaignListOptions(Integer.valueOf(-92),
                                                                                                 Long.valueOf(16),
                                                                                                 Order.getDefault(),
                                                                                                 "e129b7bb-7506-4db3-b7df-fe79e8d336b6",
                                                                                                 null, null);
            UpdateCampaignListOptions updatecampaignlistoptions2 = new UpdateCampaignListOptions(Integer.valueOf(-92),
                                                                                                 Long.valueOf(16),
                                                                                                 Order.getDefault(),
                                                                                                 "e129b7bb-7506-4db3-b7df-fe79e8d336b6",
                                                                                                 null, null);
            UpdateCampaignListOptions updatecampaignlistoptions3 = new UpdateCampaignListOptions(Integer.valueOf(-55),
                                                                                                 Long.valueOf(-89),
                                                                                                 Order.getDefault(),
                                                                                                 "653b5b5b-3416-4c3a-96f3-eda2823b73c3",
                                                                                                 null, null);
            assertNotNull(updatecampaignlistoptions1);
            assertNotNull(updatecampaignlistoptions2);
            assertNotNull(updatecampaignlistoptions3);
            assertNotSame(updatecampaignlistoptions2, updatecampaignlistoptions1);
            assertNotSame(updatecampaignlistoptions3, updatecampaignlistoptions1);
            assertEquals(updatecampaignlistoptions2, updatecampaignlistoptions1);
            assertEquals(updatecampaignlistoptions2, updatecampaignlistoptions1);
            assertEquals(updatecampaignlistoptions1, updatecampaignlistoptions2);
            assertEquals(updatecampaignlistoptions1, updatecampaignlistoptions1);
            assertFalse(updatecampaignlistoptions1.equals(null));
            assertNotEquals(updatecampaignlistoptions3, updatecampaignlistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
