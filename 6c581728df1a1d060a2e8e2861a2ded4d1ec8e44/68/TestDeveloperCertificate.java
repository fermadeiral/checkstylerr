// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.security.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeveloperCertificate.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeveloperCertificate {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("f0370551-2321-4caa-91b5-cb3011c85609",
                                                                                  "faa623c6-1f38-46bc-8bdc-c52a3e358f62",
                                                                                  new Date(1557969577730L),
                                                                                  "de5a425f-755d-4cc6-afaf-d0ff78dbb0a5",
                                                                                  "29ed5406-3c5d-47f0-8be9-4a85c1787caa",
                                                                                  "be07987d-301b-41d8-ad93-95b10fc0793b",
                                                                                  "90393e60-cdc5-4de8-827c-2fc17b610bd6",
                                                                                  "a2cd2fca-1b31-4a01-9586-4fcf14243eba");
            DeveloperCertificate developercertificate2 = developercertificate1.clone();
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("7e660c64-4248-4739-9f1e-3cc9aa569cfa",
                                                                                  "b6d5f5ec-f8ee-4831-82c4-570656056590",
                                                                                  new Date(1557969574427L),
                                                                                  "c358ad7c-92fc-4c80-8935-e9bdd06d2524",
                                                                                  "49a7cc31-76d7-4500-8797-deee906672da",
                                                                                  "2c06b2b6-0fe2-41d1-b5a9-c898213a7d1d",
                                                                                  "3adb2790-5f03-4be8-afc7-145426c915a6",
                                                                                  "89e5d5b3-a4d7-4675-a4b8-704bc27cd368");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("7e660c64-4248-4739-9f1e-3cc9aa569cfa",
                                                                                  "b6d5f5ec-f8ee-4831-82c4-570656056590",
                                                                                  new Date(1557969574427L),
                                                                                  "c358ad7c-92fc-4c80-8935-e9bdd06d2524",
                                                                                  "49a7cc31-76d7-4500-8797-deee906672da",
                                                                                  "2c06b2b6-0fe2-41d1-b5a9-c898213a7d1d",
                                                                                  "3adb2790-5f03-4be8-afc7-145426c915a6",
                                                                                  "89e5d5b3-a4d7-4675-a4b8-704bc27cd368");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2.hashCode(), developercertificate1.hashCode());
            int hashCode = developercertificate1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, developercertificate1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeveloperCertificate developercertificate = new DeveloperCertificate("57256fc3-b8ad-414f-ae84-4b9f8f7a079f",
                                                                             "ad9a0c3a-2647-4adc-a53e-13ad525ccb0a",
                                                                             new Date(1557969569284L),
                                                                             "825affa9-13d1-488c-afbe-3b6603fa1fc6",
                                                                             "e27e2cc8-b100-40a5-be7a-a408dbed1fc6",
                                                                             "ec5ec793-cbbb-404a-9ac8-090cfb57688c",
                                                                             "0378c418-35be-486f-b851-1e75cf4b3b44",
                                                                             "d8a181b0-e5ab-44e0-b250-b278e9548a13");
        assertTrue(developercertificate.isValid());
        DeveloperCertificate developercertificateInvalid = new DeveloperCertificate("504d34b8-63a4-45b8-999c-366c0d50871c",
                                                                                    "bcfc3a04-fd28-4f82-ade2-f9a8ba821978",
                                                                                    new Date(1557969578950L),
                                                                                    "0c752883-206c-4d9a-97db-dad5939d1a4c",
                                                                                    "13c98551-dff3-4de3-918f-373e57a6c9f9",
                                                                                    "ee4494ef-78cd-4aac-bb11-cd84e812faac",
                                                                                    null,
                                                                                    "0a42a082-51dc-4266-969e-cabed9669a4a");
        assertFalse(developercertificateInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("664e38e7-2f41-41ba-a8a0-26869f5daf1e",
                                                                                  "f79d41e3-c0c9-4781-9144-4c5b2deba9fc",
                                                                                  new Date(1557969576591L),
                                                                                  "c758102e-ef8f-4ea9-9aac-ab62ce5f4b5f",
                                                                                  "006aa2df-8729-495f-8aba-ec31e4ec9766",
                                                                                  "64386ae9-31ad-4678-a65f-ae26e6c25b67",
                                                                                  "5fcb26d3-98c8-47a7-a4e3-2d69bc62ceaf",
                                                                                  "7a45fac9-053f-490a-be51-3495dd5b4713");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("664e38e7-2f41-41ba-a8a0-26869f5daf1e",
                                                                                  "f79d41e3-c0c9-4781-9144-4c5b2deba9fc",
                                                                                  new Date(1557969576591L),
                                                                                  "c758102e-ef8f-4ea9-9aac-ab62ce5f4b5f",
                                                                                  "006aa2df-8729-495f-8aba-ec31e4ec9766",
                                                                                  "64386ae9-31ad-4678-a65f-ae26e6c25b67",
                                                                                  "5fcb26d3-98c8-47a7-a4e3-2d69bc62ceaf",
                                                                                  "7a45fac9-053f-490a-be51-3495dd5b4713");
            DeveloperCertificate developercertificate3 = new DeveloperCertificate("174c53bc-1b66-4ede-99da-680927483b77",
                                                                                  "fa69f950-085b-4b2b-943c-29ded0683fcb",
                                                                                  new Date(1557969573110L),
                                                                                  "1a6e0099-f6df-467e-94d4-7747ffdd0883",
                                                                                  "82996a33-522d-4058-8d8e-00e86aed85fd",
                                                                                  "bc0cff80-0ff3-48a6-bd94-04f9b65ceb7a",
                                                                                  "8f53c524-acdf-4f13-a996-65a727e61e21",
                                                                                  "8ce8c135-77f3-4e4e-9bb1-a1f83698e047");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotNull(developercertificate3);
            assertNotSame(developercertificate2, developercertificate1);
            assertNotSame(developercertificate3, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate1, developercertificate2);
            assertEquals(developercertificate1, developercertificate1);
            assertFalse(developercertificate1.equals(null));
            assertNotEquals(developercertificate3, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
