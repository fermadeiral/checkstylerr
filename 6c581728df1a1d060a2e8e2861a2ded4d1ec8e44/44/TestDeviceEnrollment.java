// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEnrollment.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEnrollment {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEnrollment deviceenrollment1 = new DeviceEnrollment("7ad44f7d-bfc5-4fc1-bfb9-3e50d1856739",
                                                                      new Date(1557969575605L),
                                                                      new Date(1557969572347L),
                                                                      "0WyB66mIL78H5lgK9o5eJ8M92tBXmO3Y",
                                                                      "A-F21QpQg19t7P4QHoTjdF2Wk0bfQF802oFzsa6d8qRjxkh3Vb93E4Iq7zh1TJic61DXWN8jGYs45Rs7:t7t2FQK23Yd510k:",
                                                                      new Date(1557969576764L),
                                                                      "0WyB66mIL78H5lgK9o5eJ8M92tBXmO3Y");
            DeviceEnrollment deviceenrollment2 = deviceenrollment1.clone();
            assertNotNull(deviceenrollment1);
            assertNotNull(deviceenrollment2);
            assertNotSame(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEnrollment deviceenrollment1 = new DeviceEnrollment("5532888e-066f-4362-8576-54d2d8f8c03f",
                                                                      new Date(1557969572499L),
                                                                      new Date(1557969574981L),
                                                                      "0WyB66mIL78H5lgK9o5eJ8M92tBXmO3Y",
                                                                      "A-F21QpQg19t7P4QHoTjdF2Wk0bfQF802oFzsa6d8qRjxkh3Vb93E4Iq7zh1TJic61DXWN8jGYs45Rs7:t7t2FQK23Yd510k:",
                                                                      new Date(1557969572863L),
                                                                      "0WyB66mIL78H5lgK9o5eJ8M92tBXmO3Y");
            DeviceEnrollment deviceenrollment2 = new DeviceEnrollment("5532888e-066f-4362-8576-54d2d8f8c03f",
                                                                      new Date(1557969572499L),
                                                                      new Date(1557969574981L),
                                                                      "0WyB66mIL78H5lgK9o5eJ8M92tBXmO3Y",
                                                                      "A-F21QpQg19t7P4QHoTjdF2Wk0bfQF802oFzsa6d8qRjxkh3Vb93E4Iq7zh1TJic61DXWN8jGYs45Rs7:t7t2FQK23Yd510k:",
                                                                      new Date(1557969572863L),
                                                                      "0WyB66mIL78H5lgK9o5eJ8M92tBXmO3Y");
            assertNotNull(deviceenrollment1);
            assertNotNull(deviceenrollment2);
            assertNotSame(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2.hashCode(), deviceenrollment1.hashCode());
            int hashCode = deviceenrollment1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceenrollment1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEnrollment deviceenrollment = new DeviceEnrollment("451a2efd-c434-42d6-84ad-4e63a89537c5",
                                                                 new Date(1557969573247L), new Date(1557969569571L),
                                                                 "0WyB66mIL78H5lgK9o5eJ8M92tBXmO3Y",
                                                                 "A-F21QpQg19t7P4QHoTjdF2Wk0bfQF802oFzsa6d8qRjxkh3Vb93E4Iq7zh1TJic61DXWN8jGYs45Rs7:t7t2FQK23Yd510k:",
                                                                 new Date(1557969578905L),
                                                                 "0WyB66mIL78H5lgK9o5eJ8M92tBXmO3Y");
        assertTrue(deviceenrollment.isValid());
        DeviceEnrollment deviceenrollmentInvalid = new DeviceEnrollment("4ec37542-519d-443e-8ea0-9c7f54625ad4",
                                                                        new Date(1557969572443L),
                                                                        new Date(1557969571489L),
                                                                        "NDT4FhniGvFw1n볪=s41셜nrj<&4DFNrn1fN\\\\\u0013wD_fxdrNn1ZGNrQvi\fN䵌<㶼xf141",
                                                                        null, new Date(1557969578445L),
                                                                        "NDT4FhniGvFw1n볪=s41셜nrj<&4DFNrn1fN\\\\\u0013wD_fxdrNn1ZGNrQvi\fN䵌<㶼xf141");
        assertFalse(deviceenrollmentInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEnrollment deviceenrollment1 = new DeviceEnrollment("889b3400-cdc1-4273-8ece-cdf61360689e",
                                                                      new Date(1557969579130L),
                                                                      new Date(1557969576357L),
                                                                      "0WyB66mIL78H5lgK9o5eJ8M92tBXmO3Y",
                                                                      "A-F21QpQg19t7P4QHoTjdF2Wk0bfQF802oFzsa6d8qRjxkh3Vb93E4Iq7zh1TJic61DXWN8jGYs45Rs7:t7t2FQK23Yd510k:",
                                                                      new Date(1557969572876L),
                                                                      "0WyB66mIL78H5lgK9o5eJ8M92tBXmO3Y");
            DeviceEnrollment deviceenrollment2 = new DeviceEnrollment("889b3400-cdc1-4273-8ece-cdf61360689e",
                                                                      new Date(1557969579130L),
                                                                      new Date(1557969576357L),
                                                                      "0WyB66mIL78H5lgK9o5eJ8M92tBXmO3Y",
                                                                      "A-F21QpQg19t7P4QHoTjdF2Wk0bfQF802oFzsa6d8qRjxkh3Vb93E4Iq7zh1TJic61DXWN8jGYs45Rs7:t7t2FQK23Yd510k:",
                                                                      new Date(1557969572876L),
                                                                      "0WyB66mIL78H5lgK9o5eJ8M92tBXmO3Y");
            DeviceEnrollment deviceenrollment3 = new DeviceEnrollment("5c79cf57-2201-4d16-b821-0d3f0b9942fd",
                                                                      new Date(1557969571400L),
                                                                      new Date(1557969570277L),
                                                                      "0WyB66mIL78H5lgK9o5eJ8M92tBXmO3Y",
                                                                      "A-F21QpQg19t7P4QHoTjdF2Wk0bfQF802oFzsa6d8qRjxkh3Vb93E4Iq7zh1TJic61DXWN8jGYs45Rs7:t7t2FQK23Yd510k:",
                                                                      new Date(1557969569896L),
                                                                      "0WyB66mIL78H5lgK9o5eJ8M92tBXmO3Y");
            assertNotNull(deviceenrollment1);
            assertNotNull(deviceenrollment2);
            assertNotNull(deviceenrollment3);
            assertNotSame(deviceenrollment2, deviceenrollment1);
            assertNotSame(deviceenrollment3, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment1, deviceenrollment2);
            assertEquals(deviceenrollment1, deviceenrollment1);
            assertFalse(deviceenrollment1.equals(null));
            assertNotEquals(deviceenrollment3, deviceenrollment1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
