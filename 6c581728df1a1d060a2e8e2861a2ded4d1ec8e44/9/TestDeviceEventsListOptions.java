// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import com.arm.mbed.cloud.sdk.common.Order;
import com.arm.mbed.cloud.sdk.common.listing.ListOptionsEncoder;
import com.arm.mbed.cloud.sdk.common.listing.filtering.FilterOperator;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEventsListOptions.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEventsListOptions {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEventsListOptions deviceeventslistoptions1 = new DeviceEventsListOptions(Integer.valueOf(-57),
                                                                                           Long.valueOf(-76),
                                                                                           Order.getDefault(),
                                                                                           "b3c88756-bb6e-420d-855e-233af7858379",
                                                                                           null, null);
            DeviceEventsListOptions deviceeventslistoptions2 = deviceeventslistoptions1.clone();
            assertNotNull(deviceeventslistoptions1);
            assertNotNull(deviceeventslistoptions2);
            assertNotSame(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2, deviceeventslistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the filters method.
     */
    @SuppressWarnings({ "boxing", "resource" })
    @Test
    public void testFilters() {
        try {
            DeviceEventsListOptions option = new DeviceEventsListOptions().equalToDeviceId("9834e939-fab1-47e2-a421-2da2a70ee507")
                                                                          .notEqualToDeviceId("b022b49d-46a0-4afe-8842-cfb00a76f6da")
                                                                          .inDeviceIds(Arrays.asList("47ab42d8-c039-4cac-ad26-d59637f974c2"))
                                                                          .notInDeviceIds(Arrays.asList("4460c6c7-ffb5-4ced-b6a3-873c62fd4b82",
                                                                                                        "5c502fb0-f03d-48ee-bc56-37fe6107d0e1",
                                                                                                        "3a399848-59eb-49ba-9a31-c3204be838c3"))
                                                                          .equalToDescription("8fc4b660-3273-4c58-a348-d2364c3099bd")
                                                                          .notEqualToDescription("6280afd2-e957-4808-b33f-099dd2a41b29")
                                                                          .inDescriptions(Arrays.asList("523bddc0-af32-4eec-a44a-f41da02c98c9"))
                                                                          .notInDescriptions(Arrays.asList("eeb3dc3e-c9f3-4641-91c8-02aa8e0a295d",
                                                                                                           "f7f29646-586e-4e9e-a811-4422fd119f3e",
                                                                                                           "b94c7348-98a8-4cc0-b02c-b8968b3a1ed4",
                                                                                                           "76b2b34f-80a3-4adf-a732-b3776d2b1eb5",
                                                                                                           "2515dc0a-faec-4481-bd5b-c310e6207851",
                                                                                                           "8e981872-d6f4-42d3-8b33-03224aa9389c",
                                                                                                           "172357a7-6550-48f2-9f79-4dedb47484ae"))
                                                                          .inDateTimes(Arrays.asList(new Date(1557969576021L),
                                                                                                     new Date(1557969579879L),
                                                                                                     new Date(1557969576073L),
                                                                                                     new Date(1557969571450L)))
                                                                          .notInDateTimes(Arrays.asList(new Date(1557969575230L)))
                                                                          .lessThanDateTime(new Date(1557969576033L))
                                                                          .greaterThanDateTime(new Date(1557969573126L))
                                                                          .equalToStateChange(Boolean.FALSE)
                                                                          .notEqualToStateChange(Boolean.FALSE)
                                                                          .equalToId("f3cf6db1-d25b-4fd3-ac16-c9e3d0bb1ab2")
                                                                          .notEqualToId("5f6887e1-a46f-4531-853f-8812d5ec07bb")
                                                                          .inIds(Arrays.asList("5c64d2d0-16a4-4ea7-9775-4a0cdd7c36b4",
                                                                                               "debd94cc-1710-47bb-82f9-0f6f13d777aa"))
                                                                          .notInIds(Arrays.asList("7b1696ba-0d18-4ff4-a870-53cde3d0ed39"))
                                                                          .equalToEventType("ea47c75e-37bf-47af-8dba-a5010830bd8a")
                                                                          .notEqualToEventType("ed85273a-8117-4af8-b28c-36334c20b67c")
                                                                          .inEventTypes(Arrays.asList("6e3997c6-1e57-4949-9e98-155f3c6a1454",
                                                                                                      "a1d8039a-d98e-4e83-9373-be206546106f",
                                                                                                      "bf925b4b-d359-44ea-9a24-eb2650328e0a",
                                                                                                      "6d2d90ce-d68b-492c-bbc0-1023f46997b5"))
                                                                          .notInEventTypes(Arrays.asList("82dea00c-2608-410d-975f-e43217d13b25",
                                                                                                         "02fa7a17-aea0-4639-91e9-0c5b9c7fe594",
                                                                                                         "4cfba3d0-7bae-4490-9286-e69a72958d44",
                                                                                                         "3a541092-9057-4b2e-99e9-765fe5a1f284",
                                                                                                         "dbdaa3cb-05d2-4a42-a02e-d47dad2d3b60",
                                                                                                         "29873358-ae0c-4cec-ae4b-a8bf80fabaf0",
                                                                                                         "9226c48d-458f-4b13-b398-02840197c385"));
            assertTrue(option.hasFilters());
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID, FilterOperator.EQUAL));
            assertNotNull(option.getDeviceIdFilters());
            assertEquals("9834e939-fab1-47e2-a421-2da2a70ee507",
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDeviceIdFilters());
            assertEquals("b022b49d-46a0-4afe-8842-cfb00a76f6da",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID, FilterOperator.IN));
            assertNotNull(option.getDeviceIdFilters());
            assertEquals(Arrays.asList("47ab42d8-c039-4cac-ad26-d59637f974c2"),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID,
                                                                 List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getDeviceIdFilters());
            assertEquals(Arrays.asList("4460c6c7-ffb5-4ced-b6a3-873c62fd4b82", "5c502fb0-f03d-48ee-bc56-37fe6107d0e1",
                                       "3a399848-59eb-49ba-9a31-c3204be838c3"),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID,
                                                                    List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("8fc4b660-3273-4c58-a348-d2364c3099bd",
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("6280afd2-e957-4808-b33f-099dd2a41b29",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                       String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("523bddc0-af32-4eec-a44a-f41da02c98c9"),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                 List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("eeb3dc3e-c9f3-4641-91c8-02aa8e0a295d", "f7f29646-586e-4e9e-a811-4422fd119f3e",
                                       "b94c7348-98a8-4cc0-b02c-b8968b3a1ed4", "76b2b34f-80a3-4adf-a732-b3776d2b1eb5",
                                       "2515dc0a-faec-4481-bd5b-c310e6207851", "8e981872-d6f4-42d3-8b33-03224aa9389c",
                                       "172357a7-6550-48f2-9f79-4dedb47484ae"),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME, FilterOperator.IN));
            assertNotNull(option.getDateTimeFilters());
            assertEquals(Arrays.asList(new Date(1557969576021L), new Date(1557969579879L), new Date(1557969576073L),
                                       new Date(1557969571450L)),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME,
                                                                 List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME, FilterOperator.NOT_IN));
            assertNotNull(option.getDateTimeFilters());
            assertEquals(Arrays.asList(new Date(1557969575230L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME,
                                                                    List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME, FilterOperator.LESS_THAN));
            assertNotNull(option.getDateTimeFilters());
            assertEquals(new Date(1557969576033L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME, FilterOperator.GREATER_THAN));
            assertNotNull(option.getDateTimeFilters());
            assertEquals(new Date(1557969573126L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE, FilterOperator.EQUAL));
            assertNotNull(option.getStateChangeFilters());
            assertEquals(Boolean.FALSE,
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE,
                                                                    Boolean.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getStateChangeFilters());
            assertEquals(Boolean.FALSE,
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE,
                                                                       Boolean.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, FilterOperator.EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("f3cf6db1-d25b-4fd3-ac16-c9e3d0bb1ab2",
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("5f6887e1-a46f-4531-853f-8812d5ec07bb",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, FilterOperator.IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("5c64d2d0-16a4-4ea7-9775-4a0cdd7c36b4", "debd94cc-1710-47bb-82f9-0f6f13d777aa"),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, List.class,
                                                                 option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("7b1696ba-0d18-4ff4-a870-53cde3d0ed39"),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID,
                                                                    List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE, FilterOperator.EQUAL));
            assertNotNull(option.getEventTypeFilters());
            assertEquals("ea47c75e-37bf-47af-8dba-a5010830bd8a",
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE,
                                                                    String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getEventTypeFilters());
            assertEquals("ed85273a-8117-4af8-b28c-36334c20b67c",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE,
                                                                       String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE, FilterOperator.IN));
            assertNotNull(option.getEventTypeFilters());
            assertEquals(Arrays.asList("6e3997c6-1e57-4949-9e98-155f3c6a1454", "a1d8039a-d98e-4e83-9373-be206546106f",
                                       "bf925b4b-d359-44ea-9a24-eb2650328e0a", "6d2d90ce-d68b-492c-bbc0-1023f46997b5"),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE,
                                                                 List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE, FilterOperator.NOT_IN));
            assertNotNull(option.getEventTypeFilters());
            assertEquals(Arrays.asList("82dea00c-2608-410d-975f-e43217d13b25", "02fa7a17-aea0-4639-91e9-0c5b9c7fe594",
                                       "4cfba3d0-7bae-4490-9286-e69a72958d44", "3a541092-9057-4b2e-99e9-765fe5a1f284",
                                       "dbdaa3cb-05d2-4a42-a02e-d47dad2d3b60", "29873358-ae0c-4cec-ae4b-a8bf80fabaf0",
                                       "9226c48d-458f-4b13-b398-02840197c385"),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE,
                                                                    List.class, option));
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEventsListOptions deviceeventslistoptions1 = new DeviceEventsListOptions(Integer.valueOf(0),
                                                                                           Long.valueOf(3),
                                                                                           Order.getDefault(),
                                                                                           "e8f8451b-be65-449e-aa7a-aafa1f1c00ac",
                                                                                           null, null);
            DeviceEventsListOptions deviceeventslistoptions2 = new DeviceEventsListOptions(Integer.valueOf(0),
                                                                                           Long.valueOf(3),
                                                                                           Order.getDefault(),
                                                                                           "e8f8451b-be65-449e-aa7a-aafa1f1c00ac",
                                                                                           null, null);
            assertNotNull(deviceeventslistoptions1);
            assertNotNull(deviceeventslistoptions2);
            assertNotSame(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2.hashCode(), deviceeventslistoptions1.hashCode());
            int hashCode = deviceeventslistoptions1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceeventslistoptions1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEventsListOptions deviceeventslistoptions1 = new DeviceEventsListOptions(Integer.valueOf(-33),
                                                                                           Long.valueOf(55),
                                                                                           Order.getDefault(),
                                                                                           "97af3a09-c03e-4e25-afb6-ffd174c657c4",
                                                                                           null, null);
            DeviceEventsListOptions deviceeventslistoptions2 = new DeviceEventsListOptions(Integer.valueOf(-33),
                                                                                           Long.valueOf(55),
                                                                                           Order.getDefault(),
                                                                                           "97af3a09-c03e-4e25-afb6-ffd174c657c4",
                                                                                           null, null);
            DeviceEventsListOptions deviceeventslistoptions3 = new DeviceEventsListOptions(Integer.valueOf(-53),
                                                                                           Long.valueOf(-30),
                                                                                           Order.getDefault(),
                                                                                           "7805f956-4395-4279-9443-1f27986a66c2",
                                                                                           null, null);
            assertNotNull(deviceeventslistoptions1);
            assertNotNull(deviceeventslistoptions2);
            assertNotNull(deviceeventslistoptions3);
            assertNotSame(deviceeventslistoptions2, deviceeventslistoptions1);
            assertNotSame(deviceeventslistoptions3, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions1, deviceeventslistoptions2);
            assertEquals(deviceeventslistoptions1, deviceeventslistoptions1);
            assertFalse(deviceeventslistoptions1.equals(null));
            assertNotEquals(deviceeventslistoptions3, deviceeventslistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
