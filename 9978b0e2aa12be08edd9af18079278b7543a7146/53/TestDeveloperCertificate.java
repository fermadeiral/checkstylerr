// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.security.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeveloperCertificate.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeveloperCertificate {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("af51f8d0-444b-40d2-8ef2-2128df0bcbe2",
                                                                                  "a064540c-7584-4817-85fa-4f6359b4155b",
                                                                                  new Date(1553524604000L),
                                                                                  "ba17e5d9-932d-421b-bdde-49857e8394fe",
                                                                                  "cb53bf01-f42f-4fed-9a26-a80dbb629a81",
                                                                                  "c418758c-9239-4693-928d-24e2147cf44a",
                                                                                  "c128397e-8ae2-4575-b763-86aa2498c014");
            DeveloperCertificate developercertificate2 = developercertificate1.clone();
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("1ee92555-35e5-482f-b69c-5b26708c2b3b",
                                                                                  "da6e261c-15dd-4a40-81a8-149a8f4026d2",
                                                                                  new Date(1553524610356L),
                                                                                  "ca7276f6-31ce-418e-896b-c00a65c903fb",
                                                                                  "029d0e5a-8015-42c2-9501-5963ff10a1ae",
                                                                                  "0b2bc0a5-bde1-4d05-8799-00d170f921c3",
                                                                                  "e90a30b7-0104-4e4b-8436-810b688e1e9a");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("1ee92555-35e5-482f-b69c-5b26708c2b3b",
                                                                                  "da6e261c-15dd-4a40-81a8-149a8f4026d2",
                                                                                  new Date(1553524610356L),
                                                                                  "ca7276f6-31ce-418e-896b-c00a65c903fb",
                                                                                  "029d0e5a-8015-42c2-9501-5963ff10a1ae",
                                                                                  "0b2bc0a5-bde1-4d05-8799-00d170f921c3",
                                                                                  "e90a30b7-0104-4e4b-8436-810b688e1e9a");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2.hashCode(), developercertificate1.hashCode());
            int hashCode = developercertificate1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, developercertificate1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeveloperCertificate developercertificate = new DeveloperCertificate("0582fae7-85c5-45ac-a167-161708324fe3",
                                                                             "5885931b-b0a2-4ce0-93bb-ecf37eb9d659",
                                                                             new Date(1553524610937L),
                                                                             "d5ab86ae-d14f-4d02-a0f6-d411428c80d3",
                                                                             "56f7e930-eb08-4e5a-b988-cbdfd71d349a",
                                                                             "5ed9c6b5-8a7a-428b-a3c9-d02873f032a8",
                                                                             "d5307ee6-39aa-43c3-abef-d03085392a7c");
        assertTrue(developercertificate.isValid());
        DeveloperCertificate developercertificateInvalid = new DeveloperCertificate("95627a52-4ce7-480d-a6fc-5ea5ecfeb561",
                                                                                    "a392a9b9-6cd7-4bb5-9140-b39efc4378ea",
                                                                                    new Date(1553524605430L),
                                                                                    "2a50a521-50c7-4f99-ab9f-f59336bc7abd",
                                                                                    "c0e9d431-c6f9-4001-b812-2ab03f888ee7",
                                                                                    null,
                                                                                    "324f64d0-3cd5-4715-81a8-7c700ced7bae");
        assertFalse(developercertificateInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("bfdedd79-f2dc-4215-8e89-16108d09e796",
                                                                                  "2a2338eb-2063-465e-bf5d-c5b9cf74ed67",
                                                                                  new Date(1553524611908L),
                                                                                  "f810474e-2a22-4d71-ab75-e3c44d5b500a",
                                                                                  "5eb20364-5eee-4134-94c7-8c497b9edbec",
                                                                                  "6d9d7f60-b60d-43f5-a12f-fed6d26c7765",
                                                                                  "4e393f92-269b-44b0-8c51-b3db9f5b2c99");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("bfdedd79-f2dc-4215-8e89-16108d09e796",
                                                                                  "2a2338eb-2063-465e-bf5d-c5b9cf74ed67",
                                                                                  new Date(1553524611908L),
                                                                                  "f810474e-2a22-4d71-ab75-e3c44d5b500a",
                                                                                  "5eb20364-5eee-4134-94c7-8c497b9edbec",
                                                                                  "6d9d7f60-b60d-43f5-a12f-fed6d26c7765",
                                                                                  "4e393f92-269b-44b0-8c51-b3db9f5b2c99");
            DeveloperCertificate developercertificate3 = new DeveloperCertificate("916f9ac9-51e3-40f5-9327-27c2d5168a55",
                                                                                  "919851c0-f41b-4218-89d1-c734ca8a8615",
                                                                                  new Date(1553524609867L),
                                                                                  "3028f190-4aab-4260-9912-ab55fff788d0",
                                                                                  "020bd5c9-e1f1-46ed-a994-8fcf4878009d",
                                                                                  "276ab5de-4318-45db-9e17-5a33329d2aee",
                                                                                  "d74330fb-4d8f-41c7-9087-14fbbbd8ed01");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotNull(developercertificate3);
            assertNotSame(developercertificate2, developercertificate1);
            assertNotSame(developercertificate3, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate1, developercertificate2);
            assertEquals(developercertificate1, developercertificate1);
            assertFalse(developercertificate1.equals(null));
            assertNotEquals(developercertificate3, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
