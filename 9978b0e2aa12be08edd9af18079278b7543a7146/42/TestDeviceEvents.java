// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEvents.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEvents {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1553524608862L), null,
                                                          new Date(1553524606407L),
                                                          "14253e22-c00a-4262-9102-d5e47b087a1e",
                                                          "c26b6018-c535-4b17-9e61-2ba6e8ba6332",
                                                          "a9b0f34e-ba70-4fa1-9663-77f8ee7a6fe1",
                                                          "e0953e05-b2df-44c7-8dca-158452717781",
                                                          "6f130488-ba4b-4b97-b232-391d9b57a21b",
                                                          "a279cfa5-efe1-4c71-a886-2740e1a23059", Boolean.TRUE);
            DeviceEvents deviceevents2 = deviceevents1.clone();
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1553524603822L), null,
                                                          new Date(1553524608947L),
                                                          "23bd9c24-2b8a-4e5b-b5f6-35e559914b2e",
                                                          "09026e6d-2619-4508-a13a-b2381349e1dd",
                                                          "b834eaa9-7097-4ce9-a352-6cb9bd5f58fd",
                                                          "9ff1ff9d-6ae8-4671-a87e-92e39cb22404",
                                                          "8e098bf7-1d49-4600-96a5-5e1d1c67964e",
                                                          "5ad97f84-a3c7-400f-b473-c3f835df5c88", Boolean.FALSE);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1553524603822L), null,
                                                          new Date(1553524608947L),
                                                          "23bd9c24-2b8a-4e5b-b5f6-35e559914b2e",
                                                          "09026e6d-2619-4508-a13a-b2381349e1dd",
                                                          "b834eaa9-7097-4ce9-a352-6cb9bd5f58fd",
                                                          "9ff1ff9d-6ae8-4671-a87e-92e39cb22404",
                                                          "8e098bf7-1d49-4600-96a5-5e1d1c67964e",
                                                          "5ad97f84-a3c7-400f-b473-c3f835df5c88", Boolean.FALSE);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2.hashCode(), deviceevents1.hashCode());
            int hashCode = deviceevents1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceevents1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEvents deviceevents = new DeviceEvents(null, new Date(1553524605877L), null, new Date(1553524608120L),
                                                     "c21f72f8-0570-4d84-a55f-6688275440e7",
                                                     "06267049-2421-4d34-822b-92c17ddbd863",
                                                     "66098e26-907b-4b03-8e64-277719fabbed",
                                                     "0e6aeab1-33c2-40e8-9082-e8af4da9c123",
                                                     "4fab62bd-de27-47dd-9840-2f9c2fe771ae",
                                                     "b89e035e-9040-46e9-bec3-8ad54b508aa5", Boolean.FALSE);
        assertTrue(deviceevents.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1553524605638L), null,
                                                          new Date(1553524609431L),
                                                          "faa252b3-f5ac-4505-b0fe-d19b589cc7ce",
                                                          "3363e04c-0318-4380-b4c8-aca8b38aad4a",
                                                          "e611fd78-0d0e-45a8-8e76-aaca9dabc31b",
                                                          "9b868c57-a357-4a52-9d4d-0cf224831ccf",
                                                          "aa0b616d-e54b-4dbc-9000-7ba41f3f5eab",
                                                          "5c86467c-eab1-4879-90d4-aa15c5692027", Boolean.TRUE);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1553524605638L), null,
                                                          new Date(1553524609431L),
                                                          "faa252b3-f5ac-4505-b0fe-d19b589cc7ce",
                                                          "3363e04c-0318-4380-b4c8-aca8b38aad4a",
                                                          "e611fd78-0d0e-45a8-8e76-aaca9dabc31b",
                                                          "9b868c57-a357-4a52-9d4d-0cf224831ccf",
                                                          "aa0b616d-e54b-4dbc-9000-7ba41f3f5eab",
                                                          "5c86467c-eab1-4879-90d4-aa15c5692027", Boolean.TRUE);
            DeviceEvents deviceevents3 = new DeviceEvents(null, new Date(1553524607449L), null,
                                                          new Date(1553524609252L),
                                                          "2ef5f67c-018a-42ab-97b3-156dc0cf627b",
                                                          "2abc8089-88e1-4054-82ec-0b14ad215397",
                                                          "10784a52-b073-40fc-91f5-47c020c0842f",
                                                          "a7218210-7ad4-49c5-b03a-d735ebff9039",
                                                          "b3288fa0-e5f8-4b01-aeb1-de12a62cfce1",
                                                          "5c4fe48f-8e57-4252-b577-6aaf163d6d1d", Boolean.TRUE);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotNull(deviceevents3);
            assertNotSame(deviceevents2, deviceevents1);
            assertNotSame(deviceevents3, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents1, deviceevents2);
            assertEquals(deviceevents1, deviceevents1);
            assertFalse(deviceevents1.equals(null));
            assertNotEquals(deviceevents3, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
