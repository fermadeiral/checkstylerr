// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.security.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model CertificateEnrollment.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestCertificateEnrollment {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            CertificateEnrollment certificateenrollment1 = new CertificateEnrollment("0-]]]]]._-ã˜ˆ]",
                                                                                     new Date(1553611833486L),
                                                                                     "b05b15c1-84b4-4a05-9028-e8c3d2643486",
                                                                                     CertificateEnrollmentEnrollResult.getDefault(),
                                                                                     CertificateEnrollmentEnrollStatus.getDefault(),
                                                                                     "347ea059-b5ec-4f6d-9998-aa8a2c94eeee",
                                                                                     new Date(1553611826504L));
            CertificateEnrollment certificateenrollment2 = certificateenrollment1.clone();
            assertNotNull(certificateenrollment1);
            assertNotNull(certificateenrollment2);
            assertNotSame(certificateenrollment2, certificateenrollment1);
            assertEquals(certificateenrollment2, certificateenrollment1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            CertificateEnrollment certificateenrollment1 = new CertificateEnrollment("o-].5-ïŽº]]]]",
                                                                                     new Date(1553611833210L),
                                                                                     "6b802c0b-219a-451b-b1c3-a97ecd7de2c1",
                                                                                     CertificateEnrollmentEnrollResult.getDefault(),
                                                                                     CertificateEnrollmentEnrollStatus.getDefault(),
                                                                                     "4ccbeb4e-a870-499b-8948-4f0272695dbf",
                                                                                     new Date(1553611831262L));
            CertificateEnrollment certificateenrollment2 = new CertificateEnrollment("o-].5-ïŽº]]]]",
                                                                                     new Date(1553611833210L),
                                                                                     "6b802c0b-219a-451b-b1c3-a97ecd7de2c1",
                                                                                     CertificateEnrollmentEnrollResult.getDefault(),
                                                                                     CertificateEnrollmentEnrollStatus.getDefault(),
                                                                                     "4ccbeb4e-a870-499b-8948-4f0272695dbf",
                                                                                     new Date(1553611831262L));
            assertNotNull(certificateenrollment1);
            assertNotNull(certificateenrollment2);
            assertNotSame(certificateenrollment2, certificateenrollment1);
            assertEquals(certificateenrollment2, certificateenrollment1);
            assertEquals(certificateenrollment2.hashCode(), certificateenrollment1.hashCode());
            int hashCode = certificateenrollment1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, certificateenrollment1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        CertificateEnrollment certificateenrollment = new CertificateEnrollment("L-].x-éˆ•]]", new Date(1553611833507L),
                                                                                "40fa6f50-1b81-4903-8f23-b33756e92c21",
                                                                                CertificateEnrollmentEnrollResult.getDefault(),
                                                                                CertificateEnrollmentEnrollStatus.getDefault(),
                                                                                "a02a5649-868b-4bd0-a9a2-dd48b1fcac13",
                                                                                new Date(1553611830798L));
        assertTrue(certificateenrollment.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            CertificateEnrollment certificateenrollment1 = new CertificateEnrollment("6-]]]].0-ï–›]",
                                                                                     new Date(1553611833009L),
                                                                                     "640ec438-0cd7-4c78-8bd0-fcfa604ef82a",
                                                                                     CertificateEnrollmentEnrollResult.getDefault(),
                                                                                     CertificateEnrollmentEnrollStatus.getDefault(),
                                                                                     "19f8e3ee-c42e-45e5-8cca-9a24fc1211f9",
                                                                                     new Date(1553611832749L));
            CertificateEnrollment certificateenrollment2 = new CertificateEnrollment("6-]]]].0-ï–›]",
                                                                                     new Date(1553611833009L),
                                                                                     "640ec438-0cd7-4c78-8bd0-fcfa604ef82a",
                                                                                     CertificateEnrollmentEnrollResult.getDefault(),
                                                                                     CertificateEnrollmentEnrollStatus.getDefault(),
                                                                                     "19f8e3ee-c42e-45e5-8cca-9a24fc1211f9",
                                                                                     new Date(1553611832749L));
            CertificateEnrollment certificateenrollment3 = new CertificateEnrollment("k-]._-å?Ÿ]",
                                                                                     new Date(1553611827542L),
                                                                                     "380b14c2-4356-4a87-bf38-b36cf01ed743",
                                                                                     CertificateEnrollmentEnrollResult.getDefault(),
                                                                                     CertificateEnrollmentEnrollStatus.getDefault(),
                                                                                     "669821a4-9c62-4466-b9c1-469a807fd02d",
                                                                                     new Date(1553611826514L));
            assertNotNull(certificateenrollment1);
            assertNotNull(certificateenrollment2);
            assertNotNull(certificateenrollment3);
            assertNotSame(certificateenrollment2, certificateenrollment1);
            assertNotSame(certificateenrollment3, certificateenrollment1);
            assertEquals(certificateenrollment2, certificateenrollment1);
            assertEquals(certificateenrollment2, certificateenrollment1);
            assertEquals(certificateenrollment1, certificateenrollment2);
            assertEquals(certificateenrollment1, certificateenrollment1);
            assertFalse(certificateenrollment1.equals(null));
            assertNotEquals(certificateenrollment3, certificateenrollment1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
