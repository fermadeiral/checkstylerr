// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEnrollment.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEnrollment {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEnrollment deviceenrollment1 = new DeviceEnrollment("a826cbb2-6c18-4bb5-8a8e-f8640902a30a",
                                                                      new Date(1553611833641L),
                                                                      new Date(1553611828665L),
                                                                      "vPoQf95bE88Va24FQwwQ6D9AMv0d7K8N",
                                                                      "A-WWo9QS2QC8n8y059tln:1Ty2NkBrbgW30c147X5l0l77CwquAXtq61fvhZRJ2kdgU65Fw3tLm5Z1ti9P6DN26EafywWGMBh",
                                                                      new Date(1553611826730L),
                                                                      "0wA2VRBgM8AoEN7TEnMJfq93GpitMpE6");
            DeviceEnrollment deviceenrollment2 = deviceenrollment1.clone();
            assertNotNull(deviceenrollment1);
            assertNotNull(deviceenrollment2);
            assertNotSame(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEnrollment deviceenrollment1 = new DeviceEnrollment("76b87aca-1154-4c5a-b7d5-80b96b0ca8e4",
                                                                      new Date(1553611832654L),
                                                                      new Date(1553611829526L),
                                                                      "L54Gn11S4wdTu00EteYF6KR84Ka1L281",
                                                                      "A-yErB1XBssk4Gg3614ZGPlVRG:qJ60x5a1UcdcE9779tcO3u29xNRIwH1C2Pw8:XxsXwbmYh9kJ5COTZTVw:xN3T8X18g2yn",
                                                                      new Date(1553611834727L),
                                                                      "q87mpEK37buu99k7DzsfgLx4xeJk5bIF");
            DeviceEnrollment deviceenrollment2 = new DeviceEnrollment("76b87aca-1154-4c5a-b7d5-80b96b0ca8e4",
                                                                      new Date(1553611832654L),
                                                                      new Date(1553611829526L),
                                                                      "L54Gn11S4wdTu00EteYF6KR84Ka1L281",
                                                                      "A-yErB1XBssk4Gg3614ZGPlVRG:qJ60x5a1UcdcE9779tcO3u29xNRIwH1C2Pw8:XxsXwbmYh9kJ5COTZTVw:xN3T8X18g2yn",
                                                                      new Date(1553611834727L),
                                                                      "q87mpEK37buu99k7DzsfgLx4xeJk5bIF");
            assertNotNull(deviceenrollment1);
            assertNotNull(deviceenrollment2);
            assertNotSame(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2.hashCode(), deviceenrollment1.hashCode());
            int hashCode = deviceenrollment1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceenrollment1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEnrollment deviceenrollment = new DeviceEnrollment("0bb3a0ad-f45c-403e-b3a1-a623d46b80cb",
                                                                 new Date(1553611828006L), new Date(1553611825027L),
                                                                 "2Z125HWRX0ol7pl2X0JjY8GGiN4WUq8N",
                                                                 "A-6eczM3uq:bnq3fMQQM40mv8x82MT83qCYy:z:36404:MUKV2079S9b:7nwl0Emcgv2Yfk5E:0wQC3vX067PIc504N9LoEKd",
                                                                 new Date(1553611829381L),
                                                                 "rpBbjH1zhGcuhF87Z08ZcZ4DLm202TQg");
        assertTrue(deviceenrollment.isValid());
        DeviceEnrollment deviceenrollmentInvalid = new DeviceEnrollment("d58efab2-5a13-4a15-acd7-2edfccfe6eff",
                                                                        new Date(1553611834354L),
                                                                        new Date(1553611825616L),
                                                                        "mpWys5K\u0005r5sTK15s15u7y?ynY5E1GcO7m1\u00057rK=\u00195KS1KtM5K\u0010edm\u001eO7OMp7>R5",
                                                                        null, new Date(1553611831695L),
                                                                        "je]Beâ›³hhhFDh1H?C1j\u0000â• \\\\ah1ì€£\fjs1eXnRHsO$$\u001eeebNjjo\u001aebä²‚^\u000e1L!jï‹¸ä£?tDsrUQH");
        assertFalse(deviceenrollmentInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEnrollment deviceenrollment1 = new DeviceEnrollment("576229e5-ad88-4be7-bb4b-42556def4bcb",
                                                                      new Date(1553611825540L),
                                                                      new Date(1553611827064L),
                                                                      "x0K7oc1g2pzfsMot9RP1pnA5B2EW982a",
                                                                      "A-20yD2Nk3Knh1X653dRKh78WKw2BR2ZwI0TrKC1MJJIu:FFYoNtk3m:GFy9JZgqwvpkTpO565gNPbjv3IIq5ShCzN25u0AA0",
                                                                      new Date(1553611824890L),
                                                                      "217Tz396454ly6Yy2rdNzptzK0v5pWir");
            DeviceEnrollment deviceenrollment2 = new DeviceEnrollment("576229e5-ad88-4be7-bb4b-42556def4bcb",
                                                                      new Date(1553611825540L),
                                                                      new Date(1553611827064L),
                                                                      "x0K7oc1g2pzfsMot9RP1pnA5B2EW982a",
                                                                      "A-20yD2Nk3Knh1X653dRKh78WKw2BR2ZwI0TrKC1MJJIu:FFYoNtk3m:GFy9JZgqwvpkTpO565gNPbjv3IIq5ShCzN25u0AA0",
                                                                      new Date(1553611824890L),
                                                                      "217Tz396454ly6Yy2rdNzptzK0v5pWir");
            DeviceEnrollment deviceenrollment3 = new DeviceEnrollment("0d840d33-1749-474b-b2ba-5d9d9fa488fb",
                                                                      new Date(1553611832350L),
                                                                      new Date(1553611828238L),
                                                                      "7yetTpzA2o6Nsnxcb63kLhx11J7DFC0C",
                                                                      "A-8BfzCL1WtCL0Tn1nCaVEBFxRFS:e4:rFyCCr0G3lCt9:KU5qbKIX:DoA5I6vx26JFAr3VL0wZXzf25xlfoB:y0KKU6Fo8A6",
                                                                      new Date(1553611826326L),
                                                                      "o3hcUa5h2MugLjHuzPvyr39V3mQrH0pc");
            assertNotNull(deviceenrollment1);
            assertNotNull(deviceenrollment2);
            assertNotNull(deviceenrollment3);
            assertNotSame(deviceenrollment2, deviceenrollment1);
            assertNotSame(deviceenrollment3, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment1, deviceenrollment2);
            assertEquals(deviceenrollment1, deviceenrollment1);
            assertFalse(deviceenrollment1.equals(null));
            assertNotEquals(deviceenrollment3, deviceenrollment1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
