// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEnrollmentDenial.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEnrollmentDenial {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("84aaffc1816e7fe58054e0b226e456c5",
                                                                                        new Date(1553611826549L),
                                                                                        "ed5cae2f-6dbc-43b7-8846-db0d06e1c2ca",
                                                                                        "c46a6a4f6e4e6ac6a83f638adadf657d",
                                                                                        "f1eeb9bd3e13cddbaf397d1f9f30b7c1");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = deviceenrollmentdenial1.clone();
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("906f161fbc5adcb95e251140b2c5dcef",
                                                                                        new Date(1553611830564L),
                                                                                        "983738e9-27d2-41c8-b4f0-7cf504ebcc2d",
                                                                                        "a68bd1b76cecefe82ac51f36dc82aca9",
                                                                                        "6f05fa0bc69a746acc60d815f4c08998");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = new DeviceEnrollmentDenial("906f161fbc5adcb95e251140b2c5dcef",
                                                                                        new Date(1553611830564L),
                                                                                        "983738e9-27d2-41c8-b4f0-7cf504ebcc2d",
                                                                                        "a68bd1b76cecefe82ac51f36dc82aca9",
                                                                                        "6f05fa0bc69a746acc60d815f4c08998");
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2.hashCode(), deviceenrollmentdenial1.hashCode());
            int hashCode = deviceenrollmentdenial1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceenrollmentdenial1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEnrollmentDenial deviceenrollmentdenial = new DeviceEnrollmentDenial("393cf41e9d616cbc69ec9f314553a8d9",
                                                                                   new Date(1553611826515L),
                                                                                   "b57f8fe7-14ca-4381-abe8-ef1ad7bab420",
                                                                                   "bfd795f44178bfa0dd9ad9e2adc942e2",
                                                                                   "549ea8eb23d2fdae8996bfe4daf6a527");
        assertTrue(deviceenrollmentdenial.isValid());
        DeviceEnrollmentDenial deviceenrollmentdenialInvalid = new DeviceEnrollmentDenial(":é¹µ3883F77A\u0006ëµ¿çƒ£3ëµ˜73â™¸83çŽ±:738@[\u0000\u001cæ¯²3=3Aï±?&ê³¥<338\u000féŸ¤^\u001d\\\\Q7.\u0015ë§žF3æµ?åŒ’\u000e83*\u000fí‚´K3",
                                                                                          new Date(1553611834954L),
                                                                                          "5cba3070-0e4c-4217-8b56-1bee3d2dc8be",
                                                                                          "\u0017Û€'IB\u0001!567é„“:\fJåˆµ'7ï‰‘?Ná˜§ë ?F6\u0014'6é”§T6ï¬²ïƒ’æ®ˆæ“œ\\\\\t6O!-\u00055\u0019^566H\u0014äªœâ¼?\u000b\u001b7K>\u0005L67à¯©RN",
                                                                                          "\u0007@2[X\u001e å™ŸS22'Jê–?ì›–ç»ˆ2é…‹\u001fR2ì™€2'E2æ¯»é©´ï¨±2P#\b\t222[\u0012Màª·22U\u000e<\u001f2è˜¸222ë½ƒ\u001a2Iî­…22(2H2");
        assertFalse(deviceenrollmentdenialInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("62cf5a96aacae1f6e9bcae5e5fede88b",
                                                                                        new Date(1553611829906L),
                                                                                        "fce7da63-4003-49ba-9811-463bc8246f0a",
                                                                                        "fcb8102d60ad7bf98e0a47efa7fedebb",
                                                                                        "aa0e5c847ddf27e6a77fb25e62e16b90");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = new DeviceEnrollmentDenial("62cf5a96aacae1f6e9bcae5e5fede88b",
                                                                                        new Date(1553611829906L),
                                                                                        "fce7da63-4003-49ba-9811-463bc8246f0a",
                                                                                        "fcb8102d60ad7bf98e0a47efa7fedebb",
                                                                                        "aa0e5c847ddf27e6a77fb25e62e16b90");
            DeviceEnrollmentDenial deviceenrollmentdenial3 = new DeviceEnrollmentDenial("4ca3c87c7e9d1d7447a304a99aed14d2",
                                                                                        new Date(1553611830249L),
                                                                                        "4cf8fe32-e89c-452b-b948-b1929310e5ea",
                                                                                        "7df226e4dc43fe8e0626e76203d61698",
                                                                                        "76d7e53ac7c3875afa2fee4ce274ae74");
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotNull(deviceenrollmentdenial3);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertNotSame(deviceenrollmentdenial3, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial1, deviceenrollmentdenial2);
            assertEquals(deviceenrollmentdenial1, deviceenrollmentdenial1);
            assertFalse(deviceenrollmentdenial1.equals(null));
            assertNotEquals(deviceenrollmentdenial3, deviceenrollmentdenial1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
