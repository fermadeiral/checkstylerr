// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.security.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeveloperCertificate.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeveloperCertificate {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("a6404d98-5697-40ee-87ed-04ec2d63a672",
                                                                                  "52874e3c-f0c1-4ccb-ba13-8370923e5a40",
                                                                                  new Date(1553611827127L),
                                                                                  "3c8de539-0fe6-444b-a9d1-6caee51f6a51",
                                                                                  "8e6384fa-5357-4d35-b18d-5f6a0b2c94c4",
                                                                                  "d5e0e08d-7626-41f7-b7b5-7b263bf4e803",
                                                                                  "b38cf010-5026-44bb-8715-f249d5d3570c");
            DeveloperCertificate developercertificate2 = developercertificate1.clone();
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("8cebffa1-878a-475f-b082-832cf95bcd2e",
                                                                                  "7a0a1b6e-9285-47da-937f-6082d6df0972",
                                                                                  new Date(1553611832406L),
                                                                                  "f1c74664-1c3d-4b74-bfec-d8f0763c40dd",
                                                                                  "0964d4ce-3e1c-48ee-ad2d-d0905008646a",
                                                                                  "b236d343-d0a4-43a2-9f49-f02401019702",
                                                                                  "a217bfb2-88b8-44ee-aea5-04e66525d31f");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("8cebffa1-878a-475f-b082-832cf95bcd2e",
                                                                                  "7a0a1b6e-9285-47da-937f-6082d6df0972",
                                                                                  new Date(1553611832406L),
                                                                                  "f1c74664-1c3d-4b74-bfec-d8f0763c40dd",
                                                                                  "0964d4ce-3e1c-48ee-ad2d-d0905008646a",
                                                                                  "b236d343-d0a4-43a2-9f49-f02401019702",
                                                                                  "a217bfb2-88b8-44ee-aea5-04e66525d31f");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2.hashCode(), developercertificate1.hashCode());
            int hashCode = developercertificate1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, developercertificate1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeveloperCertificate developercertificate = new DeveloperCertificate("71a5b8c2-160b-4796-b303-5a1131b9869a",
                                                                             "dc1b435a-e9af-4a18-8e1c-99655cd0bdba",
                                                                             new Date(1553611834342L),
                                                                             "feaab6cf-01ef-4edf-8e2c-bab488478a23",
                                                                             "6bc31c54-3000-4b6e-b396-11383e61aac6",
                                                                             "0ae0f07a-b022-46be-83c0-16f4bfaebae8",
                                                                             "b9b33bb2-8c8e-4e23-89ff-ac801f6328ec");
        assertTrue(developercertificate.isValid());
        DeveloperCertificate developercertificateInvalid = new DeveloperCertificate("9c59443e-3c4a-42a0-a9ef-4a1da6458123",
                                                                                    "741f2402-c211-4705-b57e-f42e422f70d5",
                                                                                    new Date(1553611828589L),
                                                                                    "90b77dd0-3d9d-41e3-a73e-66a4b45d63f2",
                                                                                    "1d89c7e7-3119-4e2e-92c3-b78c57e49840",
                                                                                    null,
                                                                                    "ec7d1e56-7c7e-4921-89a3-224a2811260e");
        assertFalse(developercertificateInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("bc06377d-c75c-49a3-9cea-3762bc7572f5",
                                                                                  "dda604d7-a481-42f5-a08d-10ceb28f54c6",
                                                                                  new Date(1553611828151L),
                                                                                  "2f00ffaf-3153-4ec6-b5dc-5f9a6f43ecbb",
                                                                                  "1e7142cf-0ea9-4552-90de-7248a41c299a",
                                                                                  "79fe65f2-e5c8-49d1-bc9b-5056d0cbb4b2",
                                                                                  "ad47f88e-1551-40f0-98ae-b472adeeb790");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("bc06377d-c75c-49a3-9cea-3762bc7572f5",
                                                                                  "dda604d7-a481-42f5-a08d-10ceb28f54c6",
                                                                                  new Date(1553611828151L),
                                                                                  "2f00ffaf-3153-4ec6-b5dc-5f9a6f43ecbb",
                                                                                  "1e7142cf-0ea9-4552-90de-7248a41c299a",
                                                                                  "79fe65f2-e5c8-49d1-bc9b-5056d0cbb4b2",
                                                                                  "ad47f88e-1551-40f0-98ae-b472adeeb790");
            DeveloperCertificate developercertificate3 = new DeveloperCertificate("99890e0f-3c61-4596-b5a6-26b5c4d8a06c",
                                                                                  "a5678cf8-bc1c-4b52-8250-305e0f219b2e",
                                                                                  new Date(1553611831221L),
                                                                                  "4d180d1d-d3e5-4d98-b802-0cdbef400501",
                                                                                  "b3e29b90-bf2a-4441-8d4b-bef6ef406949",
                                                                                  "a9542904-9616-488d-98b1-a523dea347bd",
                                                                                  "965f4267-67c1-4a65-8a44-cd35e7d54ba4");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotNull(developercertificate3);
            assertNotSame(developercertificate2, developercertificate1);
            assertNotSame(developercertificate3, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate1, developercertificate2);
            assertEquals(developercertificate1, developercertificate1);
            assertFalse(developercertificate1.equals(null));
            assertNotEquals(developercertificate3, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
