// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model UserInvitation.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestUserInvitation {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("ccc51ac1-557d-4b6f-a2c6-9452d5ca75a3",
                                                                new Date(1553611825703L),
                                                                "1ec01cb4-a09a-454c-b4b9-a0d471bba98d",
                                                                new Date(1553611834051L),
                                                                "60e64738-1a38-4fe5-8462-4340a60d3cf9", null,
                                                                new Date(1553611830824L),
                                                                "d76abf52-2f39-4002-8a11-cc842554be0e");
            UserInvitation userinvitation2 = userinvitation1.clone();
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotSame(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("98c66ab2-d45f-40d9-a6a8-366dcca2e872",
                                                                new Date(1553611830558L),
                                                                "0cb8228c-930f-4c2f-b1aa-566139e4a0aa",
                                                                new Date(1553611829089L),
                                                                "d79cbb5f-983d-4fd4-94cb-0dab65b7d834", null,
                                                                new Date(1553611830266L),
                                                                "df68b5f9-ece2-4bed-9905-691030f3cd52");
            UserInvitation userinvitation2 = new UserInvitation("98c66ab2-d45f-40d9-a6a8-366dcca2e872",
                                                                new Date(1553611830558L),
                                                                "0cb8228c-930f-4c2f-b1aa-566139e4a0aa",
                                                                new Date(1553611829089L),
                                                                "d79cbb5f-983d-4fd4-94cb-0dab65b7d834", null,
                                                                new Date(1553611830266L),
                                                                "df68b5f9-ece2-4bed-9905-691030f3cd52");
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotSame(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation2.hashCode(), userinvitation1.hashCode());
            int hashCode = userinvitation1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, userinvitation1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        UserInvitation userinvitation = new UserInvitation("b8d7d840-7151-4b18-9f8e-1e22e2195154",
                                                           new Date(1553611831211L),
                                                           "def75bcf-4881-434a-a04d-c17d7c9a2d3a",
                                                           new Date(1553611830307L),
                                                           "cc5bff74-125c-45a7-b003-453c588334e0", null,
                                                           new Date(1553611831411L),
                                                           "d326c1d7-7dfa-405f-92db-0c9a2b6cc792");
        assertTrue(userinvitation.isValid());
        UserInvitation userinvitationInvalid = new UserInvitation("f9181820-3ace-4bed-a7dc-9ef022a077c7",
                                                                  new Date(1553611833284L), null,
                                                                  new Date(1553611834613L),
                                                                  "ccc578c5-c676-47af-9741-ae2b2439f1da", null,
                                                                  new Date(1553611828484L),
                                                                  "f3031234-5afd-433b-82f6-3822a35239a9");
        assertFalse(userinvitationInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("49cab2f9-da09-4801-a595-32ec634f70df",
                                                                new Date(1553611825444L),
                                                                "72ae196c-0665-4540-a28d-2b65d42ee832",
                                                                new Date(1553611833503L),
                                                                "9247d058-b6d3-48f9-bbaa-22b5da9f1d41", null,
                                                                new Date(1553611830708L),
                                                                "d9c5029a-a484-4566-9a1e-697f1efda595");
            UserInvitation userinvitation2 = new UserInvitation("49cab2f9-da09-4801-a595-32ec634f70df",
                                                                new Date(1553611825444L),
                                                                "72ae196c-0665-4540-a28d-2b65d42ee832",
                                                                new Date(1553611833503L),
                                                                "9247d058-b6d3-48f9-bbaa-22b5da9f1d41", null,
                                                                new Date(1553611830708L),
                                                                "d9c5029a-a484-4566-9a1e-697f1efda595");
            UserInvitation userinvitation3 = new UserInvitation("392ec8de-da06-45ee-8ce1-fb4061ffc074",
                                                                new Date(1553611831768L),
                                                                "05ed503e-ade3-420b-a6eb-96b15cf8554b",
                                                                new Date(1553611827754L),
                                                                "92a14506-ad82-44b0-890b-c052d503301d", null,
                                                                new Date(1553611829092L),
                                                                "e8b83fad-410e-4410-8ea0-530fc464c0db");
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotNull(userinvitation3);
            assertNotSame(userinvitation2, userinvitation1);
            assertNotSame(userinvitation3, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation1, userinvitation2);
            assertEquals(userinvitation1, userinvitation1);
            assertFalse(userinvitation1.equals(null));
            assertNotEquals(userinvitation3, userinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
