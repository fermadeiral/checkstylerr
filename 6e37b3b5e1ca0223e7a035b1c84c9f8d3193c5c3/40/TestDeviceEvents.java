// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEvents.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEvents {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1553611827568L), null,
                                                          new Date(1553611830598L),
                                                          "2f16d5e2-f505-48d0-9dea-a6e1816854db",
                                                          "8263a5de-b80e-403b-ad96-4ef1cf3390cb",
                                                          "35a1ca3a-c0fd-4d40-be2e-a0d2cff562e1",
                                                          "8fee022e-079f-4906-accb-d4e59ae0192c",
                                                          "bb7b3ea8-afd8-43ca-9704-6bdae619758d",
                                                          "ac222e98-ff4f-4626-b92a-0e1f250297e7", Boolean.TRUE);
            DeviceEvents deviceevents2 = deviceevents1.clone();
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1553611828188L), null,
                                                          new Date(1553611834844L),
                                                          "2202cf5f-ee30-4bce-badc-11ba7e3b3945",
                                                          "e88c886f-c00c-45d9-8fb4-52e2bde232fa",
                                                          "c8d030a9-c352-4920-8382-2acb448fcd51",
                                                          "4ee3e627-d63b-457c-96e8-070774ed3d93",
                                                          "f7a0c782-2e77-411b-86e9-7ab160513a78",
                                                          "bc9faac1-f604-447a-98ff-62c79d7d3997", Boolean.FALSE);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1553611828188L), null,
                                                          new Date(1553611834844L),
                                                          "2202cf5f-ee30-4bce-badc-11ba7e3b3945",
                                                          "e88c886f-c00c-45d9-8fb4-52e2bde232fa",
                                                          "c8d030a9-c352-4920-8382-2acb448fcd51",
                                                          "4ee3e627-d63b-457c-96e8-070774ed3d93",
                                                          "f7a0c782-2e77-411b-86e9-7ab160513a78",
                                                          "bc9faac1-f604-447a-98ff-62c79d7d3997", Boolean.FALSE);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2.hashCode(), deviceevents1.hashCode());
            int hashCode = deviceevents1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceevents1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEvents deviceevents = new DeviceEvents(null, new Date(1553611827536L), null, new Date(1553611832912L),
                                                     "7db0f788-2177-424e-8e6c-22b2993fc0ef",
                                                     "ba2eb19d-d93b-4d0a-bdac-0d6d7e766ad4",
                                                     "26c6c820-11da-4f91-8202-baf8b4ddcade",
                                                     "adaa8598-04c2-4e99-b5b7-f39ad8dfb63e",
                                                     "50539bd5-40e2-4bde-ae5c-d2a00d5a4444",
                                                     "cc491c14-e564-431f-85b0-132046497054", Boolean.TRUE);
        assertTrue(deviceevents.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1553611833520L), null,
                                                          new Date(1553611827067L),
                                                          "fe79ee73-0b75-4a52-b675-4bb58e645049",
                                                          "5592a76a-132b-4b59-9ca4-f7b6d59b3574",
                                                          "8ce6aa5e-24fc-4039-8afa-d56ab832dbc1",
                                                          "feb6aaa0-dd77-4b59-890e-360347ac9e7b",
                                                          "a4955e07-063f-4173-bd78-8a3bac818bd4",
                                                          "3a48c8b8-cdf3-42b8-8c19-b95e9fea87d1", Boolean.FALSE);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1553611833520L), null,
                                                          new Date(1553611827067L),
                                                          "fe79ee73-0b75-4a52-b675-4bb58e645049",
                                                          "5592a76a-132b-4b59-9ca4-f7b6d59b3574",
                                                          "8ce6aa5e-24fc-4039-8afa-d56ab832dbc1",
                                                          "feb6aaa0-dd77-4b59-890e-360347ac9e7b",
                                                          "a4955e07-063f-4173-bd78-8a3bac818bd4",
                                                          "3a48c8b8-cdf3-42b8-8c19-b95e9fea87d1", Boolean.FALSE);
            DeviceEvents deviceevents3 = new DeviceEvents(null, new Date(1553611826357L), null,
                                                          new Date(1553611830215L),
                                                          "cad1f578-a843-4864-b1ba-cef89337ac04",
                                                          "1207e4e4-de43-4527-8014-3b376cead213",
                                                          "a32d8919-1195-4f74-aec3-2204fde03e3a",
                                                          "c36c4040-86e9-42e2-872c-592ef96c4da9",
                                                          "c9e79006-75f8-4280-9fa7-72d9ef73cf55",
                                                          "ebc05dee-3b47-4266-8240-f0bc4b9777e3", Boolean.FALSE);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotNull(deviceevents3);
            assertNotSame(deviceevents2, deviceevents1);
            assertNotSame(deviceevents3, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents1, deviceevents2);
            assertEquals(deviceevents1, deviceevents1);
            assertFalse(deviceevents1.equals(null));
            assertNotEquals(deviceevents3, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
