// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model User.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestUser {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            User user1 = new User("90d522a0-40b4-4e7b-a339-489eb6099895", null, "1aeff761-dbe7-489d-bc00-ba3e94dafb14",
                                  new Date(1553611833197L), 113, null, "e629a34f-c062-434f-b1e3-f771e6dbd5d2", false,
                                  "c37f4971-25d2-4c15-ba6c-bfa58d07196d", "b64db3a2-bbae-44b1-bc3e-172bec01891a", -119,
                                  null, null, true, "957062ac-720a-42e5-8064-fc6229cefea3", -67,
                                  "22bf2a8c-c1f0-4b0e-8ea7-e24f788e5ae1", UserStatus.getDefault(), false, null, false,
                                  new Date(1553611834556L), "dcd84aab-9c21-48bf-914f-8b4893fb3d88");
            User user2 = user1.clone();
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotSame(user2, user1);
            assertEquals(user2, user1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            User user1 = new User("2a83c6a3-193f-4259-9630-c289882f40f9", null, "3fc7dbe4-246c-4f0c-a89b-6b56dd06c3cc",
                                  new Date(1553611826241L), 49, null, "1febd810-ca21-474a-baae-f2efebd1e532", true,
                                  "66b172ea-5096-421a-a949-80b7e71e8d14", "64718211-fd82-48c6-8ef8-c5e46a3a6d9d", 50,
                                  null, null, true, "fc468789-441c-4d17-9cbe-5a2f1e9bff99", 86,
                                  "22a89bed-be14-49a2-9eef-1c2b42260eaa", UserStatus.getDefault(), false, null, true,
                                  new Date(1553611830670L), "34aa7d06-8eb1-4b7a-99d7-6b390077e820");
            User user2 = new User("2a83c6a3-193f-4259-9630-c289882f40f9", null, "3fc7dbe4-246c-4f0c-a89b-6b56dd06c3cc",
                                  new Date(1553611826241L), 49, null, "1febd810-ca21-474a-baae-f2efebd1e532", true,
                                  "66b172ea-5096-421a-a949-80b7e71e8d14", "64718211-fd82-48c6-8ef8-c5e46a3a6d9d", 50,
                                  null, null, true, "fc468789-441c-4d17-9cbe-5a2f1e9bff99", 86,
                                  "22a89bed-be14-49a2-9eef-1c2b42260eaa", UserStatus.getDefault(), false, null, true,
                                  new Date(1553611830670L), "34aa7d06-8eb1-4b7a-99d7-6b390077e820");
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotSame(user2, user1);
            assertEquals(user2, user1);
            assertEquals(user2.hashCode(), user1.hashCode());
            int hashCode = user1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, user1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        User user = new User("6acce0f7-6b01-4fb0-a68e-a8be1071bb12", null, "66644ce7-dde0-4805-88e0-aa4dca8af2d9",
                             new Date(1553611831538L), 19, null, "42367243-99b0-44c5-a131-eb037678a0d3", true,
                             "ae4d3566-740d-46f7-b1dc-ce24b4052b82", "ce75da08-7d28-4a68-aef3-54ff3ec86d84", -107, null,
                             null, false, "bb2565cb-f5da-4ed2-b1c9-7b0eb76de5e1", -88,
                             "1eb013bc-0de5-4068-9a69-664228d52045", UserStatus.getDefault(), true, null, false,
                             new Date(1553611828219L), "debca75d-61f7-497c-94ec-1e171fbf2773");
        assertTrue(user.isValid());
        User userInvalid = new User("dfbfcccd-81cf-4ba0-b05d-8953582015c2", null,
                                    "b8c1f430-9204-4e84-b997-26ddec144245", new Date(1553611831465L), 71, null, null,
                                    true, "8c5e12d9-ab4c-48e9-9614-30e3a8bdef4a",
                                    "667e7932-323a-413e-89e0-ec28879932dc", -96, null, null, true,
                                    "8e3eb202-b6d1-426a-8531-0298bcd74b04", -120,
                                    "5c7c95c0-2a76-4494-9b97-b8e48dfa14f0", UserStatus.getDefault(), true, null, false,
                                    new Date(1553611834191L), "98e8f086-f06c-4b70-b50a-e95ae1b9bd97");
        assertFalse(userInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            User user1 = new User("9d5783b4-9d90-42d0-9c80-5c89b54b6c30", null, "46b7a2bd-cedc-4204-a1e9-d7d458c07b0d",
                                  new Date(1553611830368L), 75, null, "ea0fb021-7f83-4808-bff4-7774b5491bcb", false,
                                  "d1f82966-2591-4033-b256-446fde5dce86", "0638ad4e-e431-48ff-abb1-33dd22dfbb08", -13,
                                  null, null, false, "737c2dd2-5c63-4c9f-b6e2-cafa388118fd", -110,
                                  "b95126a0-d376-4709-87b7-b1de5e5535e3", UserStatus.getDefault(), false, null, false,
                                  new Date(1553611831113L), "5afd9859-36aa-46b9-8aba-d130beb10830");
            User user2 = new User("9d5783b4-9d90-42d0-9c80-5c89b54b6c30", null, "46b7a2bd-cedc-4204-a1e9-d7d458c07b0d",
                                  new Date(1553611830368L), 75, null, "ea0fb021-7f83-4808-bff4-7774b5491bcb", false,
                                  "d1f82966-2591-4033-b256-446fde5dce86", "0638ad4e-e431-48ff-abb1-33dd22dfbb08", -13,
                                  null, null, false, "737c2dd2-5c63-4c9f-b6e2-cafa388118fd", -110,
                                  "b95126a0-d376-4709-87b7-b1de5e5535e3", UserStatus.getDefault(), false, null, false,
                                  new Date(1553611831113L), "5afd9859-36aa-46b9-8aba-d130beb10830");
            User user3 = new User("f15a6c45-a5a9-4853-9647-360f5d1ca397", null, "4b7775f2-bf6a-4f9e-b8c5-669c4f26e9da",
                                  new Date(1553611835014L), 64, null, "94cd554d-e9e9-41bf-ad9b-e4e3370f2d91", false,
                                  "f8f3dba7-932b-497c-823e-f8979ea385bf", "0bf514b4-537f-489a-9085-e9c340604d87", 47,
                                  null, null, false, "d95bde5b-cd60-4907-9a72-0fe3e282560c", 22,
                                  "b894e96f-7c4c-4b63-b616-7d594c59b03b", UserStatus.getDefault(), false, null, false,
                                  new Date(1553611830754L), "3561d911-11f4-4341-a18d-4688f98e9272");
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotNull(user3);
            assertNotSame(user2, user1);
            assertNotSame(user3, user1);
            assertEquals(user2, user1);
            assertEquals(user2, user1);
            assertEquals(user1, user2);
            assertEquals(user1, user1);
            assertFalse(user1.equals(null));
            assertNotEquals(user3, user1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
