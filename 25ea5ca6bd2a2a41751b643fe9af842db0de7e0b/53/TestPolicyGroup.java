// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model PolicyGroup.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestPolicyGroup {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            PolicyGroup policygroup1 = new PolicyGroup("0f0fddcbb77d22b2ab801eb65dfbca42", -101,
                                                       new Date(1566811765941L), "0f0fddcbb77d22b2ab801eb65dfbca42",
                                                       "0a4b9b7c-a63f-41f2-8622-67e7f214da81", new Date(1566811766133L),
                                                       -101);
            PolicyGroup policygroup2 = policygroup1.clone();
            assertNotNull(policygroup1);
            assertNotNull(policygroup2);
            assertNotSame(policygroup2, policygroup1);
            assertEquals(policygroup2, policygroup1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            PolicyGroup policygroup1 = new PolicyGroup("0f0fddcbb77d22b2ab801eb65dfbca42", 63, new Date(1566811759534L),
                                                       "0f0fddcbb77d22b2ab801eb65dfbca42",
                                                       "216a32ee-82ea-4c1a-8ba1-971f8ed59750", new Date(1566811759818L),
                                                       -112);
            PolicyGroup policygroup2 = new PolicyGroup("0f0fddcbb77d22b2ab801eb65dfbca42", 63, new Date(1566811759534L),
                                                       "0f0fddcbb77d22b2ab801eb65dfbca42",
                                                       "216a32ee-82ea-4c1a-8ba1-971f8ed59750", new Date(1566811759818L),
                                                       -112);
            assertNotNull(policygroup1);
            assertNotNull(policygroup2);
            assertNotSame(policygroup2, policygroup1);
            assertEquals(policygroup2, policygroup1);
            assertEquals(policygroup2.hashCode(), policygroup1.hashCode());
            int hashCode = policygroup1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, policygroup1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        PolicyGroup policygroup = new PolicyGroup("0f0fddcbb77d22b2ab801eb65dfbca42", 98, new Date(1566811766133L),
                                                  "0f0fddcbb77d22b2ab801eb65dfbca42",
                                                  "deb5e9af-8310-4e54-a4d2-5adb1a4a4b2d", new Date(1566811760607L), 4);
        assertTrue(policygroup.isValid());
        PolicyGroup policygroupInvalid = new PolicyGroup("*é¦ \u0013+\u00123På?¦3äƒ¹\u0017M3Q3â–¡(\t3\u0012:å¤¬\u001e^3Dé§›ë¢?<å§¾\u000fÍ¼åƒ»3333?3;Iæ·‘3[æ‡¯Få“”Sê‰ˆ\u0012\u00153ßŒ!ã²¹\u00133\u00163å©±3å”µé‘¢",
                                                         28, new Date(1566811766994L),
                                                         "*é¦ \u0013+\u00123På?¦3äƒ¹\u0017M3Q3â–¡(\t3\u0012:å¤¬\u001e^3Dé§›ë¢?<å§¾\u000fÍ¼åƒ»3333?3;Iæ·‘3[æ‡¯Få“”Sê‰ˆ\u0012\u00153ßŒ!ã²¹\u00133\u00163å©±3å”µé‘¢",
                                                         "6d5dd2e3-a2e5-498f-adf3-4786384cc3eb9b2fa1f2-9694-4392-bb3a-d9748363adb71eb9ffcd-45dd-496a-8dff-9b7f3f40242a",
                                                         new Date(1566811767298L), 122);
        assertFalse(policygroupInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            PolicyGroup policygroup1 = new PolicyGroup("0f0fddcbb77d22b2ab801eb65dfbca42", 110,
                                                       new Date(1566811763445L), "0f0fddcbb77d22b2ab801eb65dfbca42",
                                                       "e5d4efd8-8c3a-49b4-aa52-a349941ab627", new Date(1566811759459L),
                                                       42);
            PolicyGroup policygroup2 = new PolicyGroup("0f0fddcbb77d22b2ab801eb65dfbca42", 110,
                                                       new Date(1566811763445L), "0f0fddcbb77d22b2ab801eb65dfbca42",
                                                       "e5d4efd8-8c3a-49b4-aa52-a349941ab627", new Date(1566811759459L),
                                                       42);
            PolicyGroup policygroup3 = new PolicyGroup("0f0fddcbb77d22b2ab801eb65dfbca42", -40,
                                                       new Date(1566811760898L), "0f0fddcbb77d22b2ab801eb65dfbca42",
                                                       "17cdc830-1da4-45a1-9dfe-9753bc2f336f", new Date(1566811766692L),
                                                       -93);
            assertNotNull(policygroup1);
            assertNotNull(policygroup2);
            assertNotNull(policygroup3);
            assertNotSame(policygroup2, policygroup1);
            assertNotSame(policygroup3, policygroup1);
            assertEquals(policygroup2, policygroup1);
            assertEquals(policygroup2, policygroup1);
            assertEquals(policygroup1, policygroup2);
            assertEquals(policygroup1, policygroup1);
            assertFalse(policygroup1.equals(null));
            assertNotEquals(policygroup3, policygroup1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
