// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEvents.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEvents {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1566811761294L), null,
                                                          new Date(1566811764884L),
                                                          "5a0fdbb3-79a4-4071-b622-cc3537c761b5",
                                                          "d208ef44-5729-482f-832b-81970ae17e92",
                                                          "b16f6f5a-499f-437a-b2e0-41a98a660f2b",
                                                          "9dada740-7e6c-446e-aa12-fb34bf2617a2",
                                                          "bf9830e6-0fad-451d-9dec-4525e42e8eb3",
                                                          "934ef0c5-683d-4ba7-bc2a-cbd668a1f899", true);
            DeviceEvents deviceevents2 = deviceevents1.clone();
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1566811759908L), null,
                                                          new Date(1566811757720L),
                                                          "7e259991-fbb2-4106-90c1-11dc67922439",
                                                          "7efca8b4-5803-458b-8cd8-a41c9635b082",
                                                          "c994195d-f771-448a-88a3-c445e414a12f",
                                                          "c8e5f5f0-e4ff-4f50-9f08-cb779a6eb108",
                                                          "e66a24ac-594d-43d4-a4bb-97c7218fb90e",
                                                          "b2502bb8-fe02-4f24-b3ea-334bd53a88ad", false);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1566811759908L), null,
                                                          new Date(1566811757720L),
                                                          "7e259991-fbb2-4106-90c1-11dc67922439",
                                                          "7efca8b4-5803-458b-8cd8-a41c9635b082",
                                                          "c994195d-f771-448a-88a3-c445e414a12f",
                                                          "c8e5f5f0-e4ff-4f50-9f08-cb779a6eb108",
                                                          "e66a24ac-594d-43d4-a4bb-97c7218fb90e",
                                                          "b2502bb8-fe02-4f24-b3ea-334bd53a88ad", false);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2.hashCode(), deviceevents1.hashCode());
            int hashCode = deviceevents1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceevents1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEvents deviceevents = new DeviceEvents(null, new Date(1566811765310L), null, new Date(1566811765392L),
                                                     "2a12f93c-c6d6-431a-8911-9db9f0420bf4",
                                                     "838ecec9-4637-49dd-b311-b105d5af7c24",
                                                     "9adc9a13-d4b0-48cb-b428-3eee793d2c89",
                                                     "6092f342-bc29-4554-8b63-50c30d0f78a7",
                                                     "99e9e16c-2c30-4f0c-bbf3-6a348ea1bee7",
                                                     "09418eaa-a299-4347-8cb0-9e0834afbafb", false);
        assertTrue(deviceevents.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1566811766749L), null,
                                                          new Date(1566811765392L),
                                                          "6c14a75e-6d3d-4aa3-8de1-130bec83df7b",
                                                          "46d106e6-f2d2-4a58-b1db-fe23edccd9a7",
                                                          "e2b21ad1-3eaf-4d40-ac5d-cfdd0b29b861",
                                                          "38d0d058-2120-4067-86b9-4bbfa6df1a76",
                                                          "503a804c-7950-41c9-bddf-110cc8bd6e08",
                                                          "a8f8a2cf-8d10-4ae5-bc59-e9ef80473d4c", false);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1566811766749L), null,
                                                          new Date(1566811765392L),
                                                          "6c14a75e-6d3d-4aa3-8de1-130bec83df7b",
                                                          "46d106e6-f2d2-4a58-b1db-fe23edccd9a7",
                                                          "e2b21ad1-3eaf-4d40-ac5d-cfdd0b29b861",
                                                          "38d0d058-2120-4067-86b9-4bbfa6df1a76",
                                                          "503a804c-7950-41c9-bddf-110cc8bd6e08",
                                                          "a8f8a2cf-8d10-4ae5-bc59-e9ef80473d4c", false);
            DeviceEvents deviceevents3 = new DeviceEvents(null, new Date(1566811761529L), null,
                                                          new Date(1566811763399L),
                                                          "59bfcda0-e51b-4920-b9cb-7e810a8e361f",
                                                          "c2dbf58e-3cad-4b68-9670-3b32800e7aae",
                                                          "f7d4e91c-59c7-42f8-ae81-f1062fa346a3",
                                                          "2eb15e00-6f3f-4729-8ed1-2cc5d93eb31b",
                                                          "be282d01-7e89-4eb6-8367-6c9872ada049",
                                                          "d29233ae-24bb-48bb-a3f1-430b9d1dc7d9", false);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotNull(deviceevents3);
            assertNotSame(deviceevents2, deviceevents1);
            assertNotSame(deviceevents3, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents1, deviceevents2);
            assertEquals(deviceevents1, deviceevents1);
            assertFalse(deviceevents1.equals(null));
            assertNotEquals(deviceevents3, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
