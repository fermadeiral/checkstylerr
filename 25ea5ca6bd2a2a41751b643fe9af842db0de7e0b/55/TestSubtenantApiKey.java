// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantApiKey.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantApiKey {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("0f0fddcbb77d22b2ab801eb65dfbca42",
                                                                   new Date(1566811761888L), 21, null,
                                                                   "0f0fddcbb77d22b2ab801eb65dfbca42",
                                                                   "4527f540-a5ef-4cc4-b906-2b9e0f38b553", 34,
                                                                   "ab4f6855-5aa0-4850-9438-bd8789521964",
                                                                   "0f0fddcbb77d22b2ab801eb65dfbca42",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1566811766595L));
            SubtenantApiKey subtenantapikey2 = subtenantapikey1.clone();
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("0f0fddcbb77d22b2ab801eb65dfbca42",
                                                                   new Date(1566811762806L), -25, null,
                                                                   "0f0fddcbb77d22b2ab801eb65dfbca42",
                                                                   "6884f440-ecf1-49cd-919e-5cc9566b5d78", -98,
                                                                   "09dc0558-41d4-4d88-bdb5-90d6da362c53",
                                                                   "0f0fddcbb77d22b2ab801eb65dfbca42",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1566811759313L));
            SubtenantApiKey subtenantapikey2 = new SubtenantApiKey("0f0fddcbb77d22b2ab801eb65dfbca42",
                                                                   new Date(1566811762806L), -25, null,
                                                                   "0f0fddcbb77d22b2ab801eb65dfbca42",
                                                                   "6884f440-ecf1-49cd-919e-5cc9566b5d78", -98,
                                                                   "09dc0558-41d4-4d88-bdb5-90d6da362c53",
                                                                   "0f0fddcbb77d22b2ab801eb65dfbca42",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1566811759313L));
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2.hashCode(), subtenantapikey1.hashCode());
            int hashCode = subtenantapikey1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantapikey1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantApiKey subtenantapikey = new SubtenantApiKey("0f0fddcbb77d22b2ab801eb65dfbca42",
                                                              new Date(1566811760458L), -31, null,
                                                              "0f0fddcbb77d22b2ab801eb65dfbca42",
                                                              "431c3848-dbac-4b09-9c3c-0718f05048ce", -25,
                                                              "951eb278-29e2-47b9-910e-d59a85cb1be0",
                                                              "0f0fddcbb77d22b2ab801eb65dfbca42",
                                                              SubtenantApiKeyStatus.getDefault(),
                                                              new Date(1566811758918L));
        assertTrue(subtenantapikey.isValid());
        SubtenantApiKey subtenantapikeyInvalid = new SubtenantApiKey(null, new Date(1566811759868L), 72, null,
                                                                     "*é¦ \u0013+\u00123På?¦3äƒ¹\u0017M3Q3â–¡(\t3\u0012:å¤¬\u001e^3Dé§›ë¢?<å§¾\u000fÍ¼åƒ»3333?3;Iæ·‘3[æ‡¯Få“”Sê‰ˆ\u0012\u00153ßŒ!ã²¹\u00133\u00163å©±3å”µé‘¢",
                                                                     "94d8f9f7-a8cf-4a91-bb28-cdc86c83b05e", 125, null,
                                                                     "*é¦ \u0013+\u00123På?¦3äƒ¹\u0017M3Q3â–¡(\t3\u0012:å¤¬\u001e^3Dé§›ë¢?<å§¾\u000fÍ¼åƒ»3333?3;Iæ·‘3[æ‡¯Få“”Sê‰ˆ\u0012\u00153ßŒ!ã²¹\u00133\u00163å©±3å”µé‘¢",
                                                                     SubtenantApiKeyStatus.getDefault(),
                                                                     new Date(1566811763005L));
        assertFalse(subtenantapikeyInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("0f0fddcbb77d22b2ab801eb65dfbca42",
                                                                   new Date(1566811763202L), -37, null,
                                                                   "0f0fddcbb77d22b2ab801eb65dfbca42",
                                                                   "064b3105-98a9-412c-9cf4-e116ace20a4f", -127,
                                                                   "443a8ba8-19d9-4831-b0c8-0e2f50de44ab",
                                                                   "0f0fddcbb77d22b2ab801eb65dfbca42",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1566811761152L));
            SubtenantApiKey subtenantapikey2 = new SubtenantApiKey("0f0fddcbb77d22b2ab801eb65dfbca42",
                                                                   new Date(1566811763202L), -37, null,
                                                                   "0f0fddcbb77d22b2ab801eb65dfbca42",
                                                                   "064b3105-98a9-412c-9cf4-e116ace20a4f", -127,
                                                                   "443a8ba8-19d9-4831-b0c8-0e2f50de44ab",
                                                                   "0f0fddcbb77d22b2ab801eb65dfbca42",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1566811761152L));
            SubtenantApiKey subtenantapikey3 = new SubtenantApiKey("0f0fddcbb77d22b2ab801eb65dfbca42",
                                                                   new Date(1566811759133L), -122, null,
                                                                   "0f0fddcbb77d22b2ab801eb65dfbca42",
                                                                   "57426f42-a1a5-4f9c-b8ed-a75bc19e4d66", 124,
                                                                   "fd242ac5-f8ee-4e36-b8c8-bb258fd692d3",
                                                                   "0f0fddcbb77d22b2ab801eb65dfbca42",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1566811765870L));
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotNull(subtenantapikey3);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertNotSame(subtenantapikey3, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey1, subtenantapikey2);
            assertEquals(subtenantapikey1, subtenantapikey1);
            assertFalse(subtenantapikey1.equals(null));
            assertNotEquals(subtenantapikey3, subtenantapikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
