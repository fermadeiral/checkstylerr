// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEnrollment.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEnrollment {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEnrollment deviceenrollment1 = new DeviceEnrollment("4b184a9b-3e45-4f95-99f9-28e3038e26a0",
                                                                      new Date(1566811758301L),
                                                                      new Date(1566811762423L),
                                                                      "6L4894su4a1c1A2S9RUl1re16OlYapbf",
                                                                      "A-3SJs92d13TBFtqoQSJ2d73G4Xdzr1JQ5W1RGWork4L82Vx0VJ49v6D0k7Mj:6BrN1566EgToF16HsCkay6E53D7Gv3qW8PS",
                                                                      new Date(1566811767470L),
                                                                      "6L4894su4a1c1A2S9RUl1re16OlYapbf");
            DeviceEnrollment deviceenrollment2 = deviceenrollment1.clone();
            assertNotNull(deviceenrollment1);
            assertNotNull(deviceenrollment2);
            assertNotSame(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEnrollment deviceenrollment1 = new DeviceEnrollment("6830d7d4-efe4-41de-a656-348bb9009931",
                                                                      new Date(1566811764505L),
                                                                      new Date(1566811767550L),
                                                                      "6L4894su4a1c1A2S9RUl1re16OlYapbf",
                                                                      "A-3SJs92d13TBFtqoQSJ2d73G4Xdzr1JQ5W1RGWork4L82Vx0VJ49v6D0k7Mj:6BrN1566EgToF16HsCkay6E53D7Gv3qW8PS",
                                                                      new Date(1566811760059L),
                                                                      "6L4894su4a1c1A2S9RUl1re16OlYapbf");
            DeviceEnrollment deviceenrollment2 = new DeviceEnrollment("6830d7d4-efe4-41de-a656-348bb9009931",
                                                                      new Date(1566811764505L),
                                                                      new Date(1566811767550L),
                                                                      "6L4894su4a1c1A2S9RUl1re16OlYapbf",
                                                                      "A-3SJs92d13TBFtqoQSJ2d73G4Xdzr1JQ5W1RGWork4L82Vx0VJ49v6D0k7Mj:6BrN1566EgToF16HsCkay6E53D7Gv3qW8PS",
                                                                      new Date(1566811760059L),
                                                                      "6L4894su4a1c1A2S9RUl1re16OlYapbf");
            assertNotNull(deviceenrollment1);
            assertNotNull(deviceenrollment2);
            assertNotSame(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2.hashCode(), deviceenrollment1.hashCode());
            int hashCode = deviceenrollment1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceenrollment1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEnrollment deviceenrollment = new DeviceEnrollment("6aabfe41-a83e-4f92-b101-1873b5926308",
                                                                 new Date(1566811767453L), new Date(1566811758489L),
                                                                 "6L4894su4a1c1A2S9RUl1re16OlYapbf",
                                                                 "A-3SJs92d13TBFtqoQSJ2d73G4Xdzr1JQ5W1RGWork4L82Vx0VJ49v6D0k7Mj:6BrN1566EgToF16HsCkay6E53D7Gv3qW8PS",
                                                                 new Date(1566811760364L),
                                                                 "6L4894su4a1c1A2S9RUl1re16OlYapbf");
        assertTrue(deviceenrollment.isValid());
        DeviceEnrollment deviceenrollmentInvalid = new DeviceEnrollment("58002ab4-6972-4b1a-86a5-a6718722fc3b",
                                                                        new Date(1566811766956L),
                                                                        new Date(1566811758764L),
                                                                        "t57qt%\\\\3miT[K=P]Ttt\\\\n=7kNT57j5t-î®?3[>7K7N3T[]Th?TqmC53^m\\\\7PtV<qä?¡3",
                                                                        null, new Date(1566811759411L),
                                                                        "t57qt%\\\\3miT[K=P]Ttt\\\\n=7kNT57j5t-î®?3[>7K7N3T[]Th?TqmC53^m\\\\7PtV<qä?¡3");
        assertFalse(deviceenrollmentInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEnrollment deviceenrollment1 = new DeviceEnrollment("27539631-8e35-4589-835c-b2a1d10f8152",
                                                                      new Date(1566811762853L),
                                                                      new Date(1566811760228L),
                                                                      "6L4894su4a1c1A2S9RUl1re16OlYapbf",
                                                                      "A-3SJs92d13TBFtqoQSJ2d73G4Xdzr1JQ5W1RGWork4L82Vx0VJ49v6D0k7Mj:6BrN1566EgToF16HsCkay6E53D7Gv3qW8PS",
                                                                      new Date(1566811757819L),
                                                                      "6L4894su4a1c1A2S9RUl1re16OlYapbf");
            DeviceEnrollment deviceenrollment2 = new DeviceEnrollment("27539631-8e35-4589-835c-b2a1d10f8152",
                                                                      new Date(1566811762853L),
                                                                      new Date(1566811760228L),
                                                                      "6L4894su4a1c1A2S9RUl1re16OlYapbf",
                                                                      "A-3SJs92d13TBFtqoQSJ2d73G4Xdzr1JQ5W1RGWork4L82Vx0VJ49v6D0k7Mj:6BrN1566EgToF16HsCkay6E53D7Gv3qW8PS",
                                                                      new Date(1566811757819L),
                                                                      "6L4894su4a1c1A2S9RUl1re16OlYapbf");
            DeviceEnrollment deviceenrollment3 = new DeviceEnrollment("251701e8-0bdb-4aee-a512-5ebe9bb4791b",
                                                                      new Date(1566811765039L),
                                                                      new Date(1566811760806L),
                                                                      "6L4894su4a1c1A2S9RUl1re16OlYapbf",
                                                                      "A-3SJs92d13TBFtqoQSJ2d73G4Xdzr1JQ5W1RGWork4L82Vx0VJ49v6D0k7Mj:6BrN1566EgToF16HsCkay6E53D7Gv3qW8PS",
                                                                      new Date(1566811761199L),
                                                                      "6L4894su4a1c1A2S9RUl1re16OlYapbf");
            assertNotNull(deviceenrollment1);
            assertNotNull(deviceenrollment2);
            assertNotNull(deviceenrollment3);
            assertNotSame(deviceenrollment2, deviceenrollment1);
            assertNotSame(deviceenrollment3, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment1, deviceenrollment2);
            assertEquals(deviceenrollment1, deviceenrollment1);
            assertFalse(deviceenrollment1.equals(null));
            assertNotEquals(deviceenrollment3, deviceenrollment1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
