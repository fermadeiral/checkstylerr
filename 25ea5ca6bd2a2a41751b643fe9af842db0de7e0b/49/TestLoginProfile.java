// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model LoginProfile.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestLoginProfile {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            LoginProfile loginprofile1 = new LoginProfile("02146558-4747-40ec-8bdb-081fab645238",
                                                          "89930ed3-7f48-40a7-b92d-8bed76fc3ff2");
            LoginProfile loginprofile2 = loginprofile1.clone();
            assertNotNull(loginprofile1);
            assertNotNull(loginprofile2);
            assertNotSame(loginprofile2, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            LoginProfile loginprofile1 = new LoginProfile("dc8e469c-113c-453b-9dd7-6bf1c40fe871",
                                                          "fb00dec2-e7b4-400b-b638-dfd44f8fd653");
            LoginProfile loginprofile2 = new LoginProfile("dc8e469c-113c-453b-9dd7-6bf1c40fe871",
                                                          "fb00dec2-e7b4-400b-b638-dfd44f8fd653");
            assertNotNull(loginprofile1);
            assertNotNull(loginprofile2);
            assertNotSame(loginprofile2, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
            assertEquals(loginprofile2.hashCode(), loginprofile1.hashCode());
            int hashCode = loginprofile1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, loginprofile1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        LoginProfile loginprofile = new LoginProfile("b7424ec0-01fe-4425-9209-0a7d2c05b75f",
                                                     "8361157e-67ef-4c9e-b74e-f0343759d53b");
        assertTrue(loginprofile.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            LoginProfile loginprofile1 = new LoginProfile("ad6d832b-8936-40ee-89a6-7bd8e1e749f4",
                                                          "5cfe9cb5-b1c4-4a88-a4cf-843ab22c5b46");
            LoginProfile loginprofile2 = new LoginProfile("ad6d832b-8936-40ee-89a6-7bd8e1e749f4",
                                                          "5cfe9cb5-b1c4-4a88-a4cf-843ab22c5b46");
            LoginProfile loginprofile3 = new LoginProfile("7bb413b5-e253-424f-88de-8133ac07b527",
                                                          "e1cdd7fc-5198-4067-8a26-2b959be9e201");
            assertNotNull(loginprofile1);
            assertNotNull(loginprofile2);
            assertNotNull(loginprofile3);
            assertNotSame(loginprofile2, loginprofile1);
            assertNotSame(loginprofile3, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
            assertEquals(loginprofile1, loginprofile2);
            assertEquals(loginprofile1, loginprofile1);
            assertFalse(loginprofile1.equals(null));
            assertNotEquals(loginprofile3, loginprofile1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
