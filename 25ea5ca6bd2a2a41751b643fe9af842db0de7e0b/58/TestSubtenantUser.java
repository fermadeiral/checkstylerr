// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantUser.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantUser {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("0f0fddcbb77d22b2ab801eb65dfbca42", null,
                                                             "e3253adc-dd1f-4f07-bc7c-a2ef20aee05b",
                                                             new Date(1566811760868L), 18, null, "a636b.ccd62@a55a8.fr",
                                                             false, "77913be0-4e0b-4964-ba6d-5a11854ce18f", null,
                                                             "0f0fddcbb77d22b2ab801eb65dfbca42", false, true, false,
                                                             -10, null, null, "a9d4697b-6f99-4691-adaf-661555c8adf5",
                                                             30, "afe6de5a-6171-44a0-b707-ea3fe911907b",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1566811764290L), "=F_7");
            SubtenantUser subtenantuser2 = subtenantuser1.clone();
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("0f0fddcbb77d22b2ab801eb65dfbca42", null,
                                                             "b45b4b89-f928-4291-9090-8d5867b802d3",
                                                             new Date(1566811765036L), -78, null,
                                                             "39248.e09c2@c31bd.fr", false,
                                                             "2d4b48e7-d36d-4af8-8ff9-68995f9cfc70", null,
                                                             "0f0fddcbb77d22b2ab801eb65dfbca42", true, false, true, 21,
                                                             null, null, "81e6aeaf-d6da-468c-9af5-0299d3a29446", -68,
                                                             "4804da98-aaef-45f3-af47-4e87dbaabf77",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1566811767538L), "=F_7");
            SubtenantUser subtenantuser2 = new SubtenantUser("0f0fddcbb77d22b2ab801eb65dfbca42", null,
                                                             "b45b4b89-f928-4291-9090-8d5867b802d3",
                                                             new Date(1566811765036L), -78, null,
                                                             "39248.e09c2@c31bd.fr", false,
                                                             "2d4b48e7-d36d-4af8-8ff9-68995f9cfc70", null,
                                                             "0f0fddcbb77d22b2ab801eb65dfbca42", true, false, true, 21,
                                                             null, null, "81e6aeaf-d6da-468c-9af5-0299d3a29446", -68,
                                                             "4804da98-aaef-45f3-af47-4e87dbaabf77",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1566811767538L), "=F_7");
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2.hashCode(), subtenantuser1.hashCode());
            int hashCode = subtenantuser1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantuser1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantUser subtenantuser = new SubtenantUser("0f0fddcbb77d22b2ab801eb65dfbca42", null,
                                                        "dff18480-cac4-4426-8c1b-44d0a3903137",
                                                        new Date(1566811762786L), -36, null, "6d863.69afd@4cdee.me",
                                                        true, "d7dcd462-e9b4-48d2-8e8d-d3c36060f29c", null,
                                                        "0f0fddcbb77d22b2ab801eb65dfbca42", false, false, true, -99,
                                                        null, null, "9a8f4df7-0d31-4c59-92d2-f0086df74957", -70,
                                                        "17646d3f-10ce-41b7-8dae-1b88581863bb",
                                                        SubtenantUserStatus.getDefault(), null,
                                                        new Date(1566811766480L), "=F_7");
        assertTrue(subtenantuser.isValid());
        SubtenantUser subtenantuserInvalid = new SubtenantUser(null, null, "fbe8da82-1ec8-4acf-a605-350f395b7f69",
                                                               new Date(1566811757717L), 123, null, null, false,
                                                               "487e7f30-f842-4e56-81fc-e2832ec282bfa7fd526b-3ff0-49ee-a2c4-7302c08a5728877ad902-058c-4b8d-b174-7cc1217960b5",
                                                               null,
                                                               "*é¦ \u0013+\u00123På?¦3äƒ¹\u0017M3Q3â–¡(\t3\u0012:å¤¬\u001e^3Dé§›ë¢?<å§¾\u000fÍ¼åƒ»3333?3;Iæ·‘3[æ‡¯Få“”Sê‰ˆ\u0012\u00153ßŒ!ã²¹\u00133\u00163å©±3å”µé‘¢",
                                                               true, true, true, -72, null, null,
                                                               "b25dcb4f-5de4-4c70-b458-7ffd3aaa01f1", -82,
                                                               "5411a946-ffbe-4c4b-9e17-93a9fdcf13be085bc0ba-8c41-4121-a2ad-3373dac0e2ff3f24f988-9b46-47ae-992a-ff01d11394da",
                                                               SubtenantUserStatus.getDefault(), null,
                                                               new Date(1566811761398L),
                                                               "Q;4D?\u000f\u00048??@:NEXë¨¡<E[I\u0014;@Sæ…©<\u0010[î±™BXD\\\\ç©‹(Eë¶›H.9PV;Z8@\u000eæ»½A:\u001e]ã™š;A\u0013?á»?\u001fBS\b");
        assertFalse(subtenantuserInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("0f0fddcbb77d22b2ab801eb65dfbca42", null,
                                                             "75098e28-2f11-40e2-bdc9-182540eec42d",
                                                             new Date(1566811766344L), 121, null,
                                                             "5ae95.f4e5f@03c0d.me", false,
                                                             "4a0b6eae-60b9-45c7-9f55-c9a9d213118d", null,
                                                             "0f0fddcbb77d22b2ab801eb65dfbca42", true, false, true, -24,
                                                             null, null, "6de5d9dc-f276-4cfb-862b-7964abb2f4f9", 16,
                                                             "e0469747-d378-4b80-979a-e008bed94432",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1566811765872L), "=F_7");
            SubtenantUser subtenantuser2 = new SubtenantUser("0f0fddcbb77d22b2ab801eb65dfbca42", null,
                                                             "75098e28-2f11-40e2-bdc9-182540eec42d",
                                                             new Date(1566811766344L), 121, null,
                                                             "5ae95.f4e5f@03c0d.me", false,
                                                             "4a0b6eae-60b9-45c7-9f55-c9a9d213118d", null,
                                                             "0f0fddcbb77d22b2ab801eb65dfbca42", true, false, true, -24,
                                                             null, null, "6de5d9dc-f276-4cfb-862b-7964abb2f4f9", 16,
                                                             "e0469747-d378-4b80-979a-e008bed94432",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1566811765872L), "=F_7");
            SubtenantUser subtenantuser3 = new SubtenantUser("0f0fddcbb77d22b2ab801eb65dfbca42", null,
                                                             "283f8f48-733a-4d1f-8fa9-0c7c13bbe1b2",
                                                             new Date(1566811761455L), 31, null, "1b75b.27f5d@40ec8.me",
                                                             false, "538d242e-655d-40cb-90a5-9a6fffab042f", null,
                                                             "0f0fddcbb77d22b2ab801eb65dfbca42", true, false, true, -23,
                                                             null, null, "700726d2-6ae9-44ea-97b0-a4f5d9ffb2b5", 98,
                                                             "8b8ffae1-bbe7-4dfe-8191-1c70bb543302",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1566811760995L), "=F_7");
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotNull(subtenantuser3);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertNotSame(subtenantuser3, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser1, subtenantuser2);
            assertEquals(subtenantuser1, subtenantuser1);
            assertFalse(subtenantuser1.equals(null));
            assertNotEquals(subtenantuser3, subtenantuser1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
