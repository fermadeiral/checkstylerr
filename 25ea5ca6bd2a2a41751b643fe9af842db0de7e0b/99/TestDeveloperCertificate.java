// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.security.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeveloperCertificate.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeveloperCertificate {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("dc9f8213-4d35-4e2e-9896-b5c5f6186438",
                                                                                  "2f292bdf-6fdb-4610-a445-8443f6469786",
                                                                                  new Date(1566811764699L),
                                                                                  "76bd03a8-a66e-4b23-9835-fbdfef7f5f6f",
                                                                                  "3d1877d8-c2b3-412e-9d6b-3beca9fbabec",
                                                                                  "a50788e6-d5e5-43da-bd6d-83f6164859d0",
                                                                                  "da1fed9d-344a-4d63-913e-e7f7ef500037",
                                                                                  "b2ece5eb-59d8-452b-9d79-4071929b02cf");
            DeveloperCertificate developercertificate2 = developercertificate1.clone();
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("0db3f5a2-a197-44dc-a109-e432ad556387",
                                                                                  "4088dde2-b808-4a3c-ba01-51d62580f687",
                                                                                  new Date(1566811763517L),
                                                                                  "eea5644a-ec70-4fa4-8430-0651a22d5e68",
                                                                                  "39de9afa-7ea5-41df-b979-a9cb46476e39",
                                                                                  "f05e8416-0fb8-4efa-b801-ae31643c6450",
                                                                                  "de497afd-2441-443a-b76d-5ed66971a444",
                                                                                  "8da49de8-a71d-4e6a-9d72-a55a501d36ab");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("0db3f5a2-a197-44dc-a109-e432ad556387",
                                                                                  "4088dde2-b808-4a3c-ba01-51d62580f687",
                                                                                  new Date(1566811763517L),
                                                                                  "eea5644a-ec70-4fa4-8430-0651a22d5e68",
                                                                                  "39de9afa-7ea5-41df-b979-a9cb46476e39",
                                                                                  "f05e8416-0fb8-4efa-b801-ae31643c6450",
                                                                                  "de497afd-2441-443a-b76d-5ed66971a444",
                                                                                  "8da49de8-a71d-4e6a-9d72-a55a501d36ab");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2.hashCode(), developercertificate1.hashCode());
            int hashCode = developercertificate1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, developercertificate1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeveloperCertificate developercertificate = new DeveloperCertificate("92fb2a51-ebf1-4a2a-be33-2d1c4663e375",
                                                                             "97128c27-244c-4382-944c-4c2708458388",
                                                                             new Date(1566811762929L),
                                                                             "a79525e8-8730-48a8-a27f-799205bb70ec",
                                                                             "1beb258b-09f6-493b-bc46-2c3e9aabc572",
                                                                             "2bbbe447-ff54-40d4-a5a8-cab0c02a37e7",
                                                                             "55679d47-5f6e-47d6-a255-72edc6efc723",
                                                                             "cf48ad70-ae38-45d8-b4e1-1081f283c4c5");
        assertTrue(developercertificate.isValid());
        DeveloperCertificate developercertificateInvalid = new DeveloperCertificate("39ebd307-43af-445c-b8e6-ccdc8645742b",
                                                                                    "07b83a10-66c2-4083-8afa-191ab2b975f4",
                                                                                    new Date(1566811763081L),
                                                                                    "e16068cb-4726-49e6-b08f-e8dbd5280e7c",
                                                                                    "fee5843d-e175-4165-8c0b-1ea5e6de4e42",
                                                                                    "afa1d2d5-62f4-4988-9067-4f2d6fa27e12",
                                                                                    null,
                                                                                    "90b32c4a-7ad4-45fd-8f6a-6734cafca4c6");
        assertFalse(developercertificateInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("ae52ef3c-cfd8-4435-a9a2-5174e54537c0",
                                                                                  "d89a9fa8-9f84-4d1a-a5bf-76ec3159b3d5",
                                                                                  new Date(1566811762822L),
                                                                                  "a4fe4656-5429-4b2d-87ed-b3d9b8af71fc",
                                                                                  "52377b10-ba54-4cb2-831a-b3a70768c44c",
                                                                                  "59bfa426-eed3-42df-b12b-4169f8d0eab9",
                                                                                  "507f52e7-d0b0-4975-8f81-94058b1575cd",
                                                                                  "bd7d69bf-0032-472e-9e7c-fd555642ae5c");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("ae52ef3c-cfd8-4435-a9a2-5174e54537c0",
                                                                                  "d89a9fa8-9f84-4d1a-a5bf-76ec3159b3d5",
                                                                                  new Date(1566811762822L),
                                                                                  "a4fe4656-5429-4b2d-87ed-b3d9b8af71fc",
                                                                                  "52377b10-ba54-4cb2-831a-b3a70768c44c",
                                                                                  "59bfa426-eed3-42df-b12b-4169f8d0eab9",
                                                                                  "507f52e7-d0b0-4975-8f81-94058b1575cd",
                                                                                  "bd7d69bf-0032-472e-9e7c-fd555642ae5c");
            DeveloperCertificate developercertificate3 = new DeveloperCertificate("5ad6ce82-1747-4fef-a429-284c1ad7241b",
                                                                                  "8309e646-09f4-461a-ac8d-5e2eec489dc4",
                                                                                  new Date(1566811761723L),
                                                                                  "8e3c44f3-6f5e-4dfc-8fd4-4bad0b920c5c",
                                                                                  "4a02199e-6081-4b79-b1fc-1e41c37cadd5",
                                                                                  "ab03eb48-7186-4320-9dfd-bfb555568057",
                                                                                  "fdc833df-f72d-4ccc-b9c7-ca429b113638",
                                                                                  "aef25d6f-4bd2-4e6e-9ede-04930021eac4");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotNull(developercertificate3);
            assertNotSame(developercertificate2, developercertificate1);
            assertNotSame(developercertificate3, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate1, developercertificate2);
            assertEquals(developercertificate1, developercertificate1);
            assertFalse(developercertificate1.equals(null));
            assertNotEquals(developercertificate3, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
