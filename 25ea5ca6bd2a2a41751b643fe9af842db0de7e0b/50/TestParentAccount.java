// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model ParentAccount.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestParentAccount {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("0c3c4.3ae4d@46b2e.me",
                                                             "d59f9e4d-d968-46ec-8074-167f0289e036",
                                                             "0f0fddcbb77d22b2ab801eb65dfbca42");
            ParentAccount parentaccount2 = parentaccount1.clone();
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotSame(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("4e276.b8585@42931.fr",
                                                             "04f99dac-20cd-42b3-87b8-6dcb0b00655e",
                                                             "0f0fddcbb77d22b2ab801eb65dfbca42");
            ParentAccount parentaccount2 = new ParentAccount("4e276.b8585@42931.fr",
                                                             "04f99dac-20cd-42b3-87b8-6dcb0b00655e",
                                                             "0f0fddcbb77d22b2ab801eb65dfbca42");
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotSame(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount2.hashCode(), parentaccount1.hashCode());
            int hashCode = parentaccount1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, parentaccount1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ParentAccount parentaccount = new ParentAccount("b2564.1dd6a@6558c.me", "f4e60f70-3ad4-463f-b3b0-ae81dd23108a",
                                                        "0f0fddcbb77d22b2ab801eb65dfbca42");
        assertTrue(parentaccount.isValid());
        ParentAccount parentaccountInvalid = new ParentAccount("\u001e+\f7ãŒ¶â„?ã«”í’¸î?­\u001a\u00196â•?ê¯«î®šã‹?>ã™±å‚¤)ì…œ-ë« ìŽ¿â™ƒ#*64ì’§?é™›ã¾²ï¤€>å??ã…‰ã?‘å²¼ã¡?\u0016?èž«é?©ë‰†î„‚8ì‡?\u0001ãŽŒÝ¥?ë?„â­±>ï˜?à¥®ï¾Šì¨½à¹©6>)>",
                                                               "59a8b831-9a2f-4389-bd4b-0cdd3470911c36e41899-111c-4f30-85b7-b6e38252b077e5831315-3109-4551-94a1-c27cbe5ba4ae",
                                                               "*é¦ \u0013+\u00123På?¦3äƒ¹\u0017M3Q3â–¡(\t3\u0012:å¤¬\u001e^3Dé§›ë¢?<å§¾\u000fÍ¼åƒ»3333?3;Iæ·‘3[æ‡¯Få“”Sê‰ˆ\u0012\u00153ßŒ!ã²¹\u00133\u00163å©±3å”µé‘¢");
        assertFalse(parentaccountInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("ae050.5d8a0@aa455.me",
                                                             "c2705efe-0455-47a7-a9a0-66c68eef659b",
                                                             "0f0fddcbb77d22b2ab801eb65dfbca42");
            ParentAccount parentaccount2 = new ParentAccount("ae050.5d8a0@aa455.me",
                                                             "c2705efe-0455-47a7-a9a0-66c68eef659b",
                                                             "0f0fddcbb77d22b2ab801eb65dfbca42");
            ParentAccount parentaccount3 = new ParentAccount("823ad.95012@7375d.fr",
                                                             "35eb7a58-6382-4800-bf40-ad23f0b86a4d",
                                                             "0f0fddcbb77d22b2ab801eb65dfbca42");
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotNull(parentaccount3);
            assertNotSame(parentaccount2, parentaccount1);
            assertNotSame(parentaccount3, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount1, parentaccount2);
            assertEquals(parentaccount1, parentaccount1);
            assertFalse(parentaccount1.equals(null));
            assertNotEquals(parentaccount3, parentaccount1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
