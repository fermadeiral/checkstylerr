// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.deviceupdate.model;

import static org.junit.Assert.*;

import com.arm.mbed.cloud.sdk.common.Order;
import com.arm.mbed.cloud.sdk.common.listing.ListOptionsEncoder;
import com.arm.mbed.cloud.sdk.common.listing.filtering.FilterOperator;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import org.junit.Test;

/**
 * Unit tests for Model FirmwareManifestListOptions.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestFirmwareManifestListOptions {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            FirmwareManifestListOptions firmwaremanifestlistoptions1 = new FirmwareManifestListOptions(Integer.valueOf(32),
                                                                                                       Long.valueOf(6),
                                                                                                       Order.getDefault(),
                                                                                                       "57bc4d90-d7d4-43c6-9639-66ce002612a0",
                                                                                                       null, null);
            FirmwareManifestListOptions firmwaremanifestlistoptions2 = firmwaremanifestlistoptions1.clone();
            assertNotNull(firmwaremanifestlistoptions1);
            assertNotNull(firmwaremanifestlistoptions2);
            assertNotSame(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the filters method.
     */
    @SuppressWarnings({ "boxing", "resource" })
    @Test
    public void testFilters() {
        try {
            FirmwareManifestListOptions option = new FirmwareManifestListOptions().inCreatedAts(Arrays.asList(new Date(1566811764686L),
                                                                                                              new Date(1566811763686L)))
                                                                                  .notInCreatedAts(Arrays.asList(new Date(1566811764696L),
                                                                                                                 new Date(1566811768562L),
                                                                                                                 new Date(1566811764455L),
                                                                                                                 new Date(1566811761004L),
                                                                                                                 new Date(1566811764455L),
                                                                                                                 new Date(1566811761767L),
                                                                                                                 new Date(1566811768327L),
                                                                                                                 new Date(1566811766786L),
                                                                                                                 new Date(1566811768392L)))
                                                                                  .lessThanCreatedAt(new Date(1566811760906L))
                                                                                  .greaterThanCreatedAt(new Date(1566811764512L))
                                                                                  .equalToName("bf5aab29-0728-41bc-b380-a78d85651171")
                                                                                  .notEqualToName("ed5b73a4-bca0-439e-81ba-528d045439f2")
                                                                                  .inNames(Arrays.asList("0a04c1d0-6295-4e47-99e4-ab2922854928",
                                                                                                         "cde3c491-c903-4a7a-9517-fb4fa4e587fc",
                                                                                                         "5b333b48-e775-4bd2-b02b-d8248d43ff12",
                                                                                                         "74cdc016-4cfa-4387-bc3b-9c6a61559bbb",
                                                                                                         "09d35b43-643f-4e3b-ab70-37f1ae53b4e4"))
                                                                                  .notInNames(Arrays.asList("4fb4f5b7-df47-40ff-9faa-24bf995d3824",
                                                                                                            "44b74665-3e96-4d47-8849-e1c5245cca96",
                                                                                                            "e46ec7fd-ae1f-464d-a27a-9dc8ab4257b9",
                                                                                                            "c9528a3a-9d64-4f65-969c-2e0220c7b2b8",
                                                                                                            "9aa76cd5-8fb6-439e-97b9-93fd18b2a2cf",
                                                                                                            "c37f3cc2-bc11-4f3a-95a2-8439e8c3f5b0",
                                                                                                            "6c3fc437-63e3-4373-b703-1a2a4449a13c"))
                                                                                  .equalToId("20ed2dd1-db63-4fb8-b8a1-adb3842350f3")
                                                                                  .notEqualToId("be75323c-0486-4405-b632-d16ac431e505")
                                                                                  .inIds(Arrays.asList("95261b83-651d-433d-a0bd-6b4f425426bc",
                                                                                                       "7721c358-841c-4968-8ef2-cbc42eae3594",
                                                                                                       "7c349475-36c2-43e1-8d26-611ab2011b14",
                                                                                                       "4c10f101-7278-4194-84b8-017e16fdab1a",
                                                                                                       "197aaa23-4aed-4448-be99-b3e7fbf160fd",
                                                                                                       "51479d78-f374-4bf8-a9cd-8350bc0af073",
                                                                                                       "1071c4e8-7720-4dfb-945d-4f80c7e9035e",
                                                                                                       "51c59a8f-73c1-4e95-b594-eef2358ce8f3",
                                                                                                       "7149d540-6ec8-46f7-b1b8-2235f080aa1e"))
                                                                                  .notInIds(Arrays.asList("67daf453-6102-4af3-a20a-00edf067f8ee",
                                                                                                          "ce4d17a9-6028-4b48-88af-85938d013335",
                                                                                                          "2ac84818-3927-47e3-815d-163bf2e3bd16",
                                                                                                          "5a483354-796e-4a53-ba3a-49cda1a9495f",
                                                                                                          "e91f54b1-d01b-411a-bcc8-ca53ee9f1aeb"))
                                                                                  .equalToDatafileUrl("1f9247ee-0985-414d-be2c-c7d7426dc4a8")
                                                                                  .notEqualToDatafileUrl("ffb71336-a38c-437a-b55a-c314d2f06328")
                                                                                  .inDatafileUrls(Arrays.asList("a5c48b5f-cd8e-40aa-9841-aeef32f201f9",
                                                                                                                "679616d0-6a5e-4718-9040-e146c4a5a52f",
                                                                                                                "66ae79bb-9924-4f00-a947-a6ec66fa9dcf",
                                                                                                                "d52e164d-6d86-4dc0-bef7-7732f7356a87",
                                                                                                                "5dd4efbb-67dc-49a4-8881-ec667a148f47",
                                                                                                                "056415dc-ab5a-42a4-8df6-2dbe7cf39fca",
                                                                                                                "6091edb9-2a1e-46cd-9898-eb51dec7d5b6",
                                                                                                                "03171d2d-5103-4601-9ccb-638b36129538"))
                                                                                  .notInDatafileUrls(Arrays.asList("b5c221dd-b31a-4335-b46b-5fe3a2e4d1f0",
                                                                                                                   "7d135856-4b72-415a-a248-5723459020fa",
                                                                                                                   "a29d9b73-3b53-4c91-8653-c234ccfecb1a"))
                                                                                  .equalToDatafileSize(Long.valueOf(70))
                                                                                  .notEqualToDatafileSize(Long.valueOf(-41))
                                                                                  .inDatafileSizes(Arrays.asList(Long.valueOf(10),
                                                                                                                 Long.valueOf(-56),
                                                                                                                 Long.valueOf(-118),
                                                                                                                 Long.valueOf(-107),
                                                                                                                 Long.valueOf(82)))
                                                                                  .notInDatafileSizes(Arrays.asList(Long.valueOf(20),
                                                                                                                    Long.valueOf(0),
                                                                                                                    Long.valueOf(-61),
                                                                                                                    Long.valueOf(15),
                                                                                                                    Long.valueOf(126),
                                                                                                                    Long.valueOf(-8),
                                                                                                                    Long.valueOf(-14),
                                                                                                                    Long.valueOf(-71),
                                                                                                                    Long.valueOf(-80)))
                                                                                  .equalToDeviceClass("7d41cb39-5607-4d6f-80e1-e6d80d74a6bc")
                                                                                  .notEqualToDeviceClass("bd6b39c5-f7d0-47d6-b557-34d2995bcb5b")
                                                                                  .inDeviceClass(Arrays.asList("6d766a30-1341-451e-b894-2f3e0aecd776",
                                                                                                               "18e8db17-359b-40e3-b134-0a7f5aa3f76f",
                                                                                                               "881ee637-a6af-4b20-b147-7d15deb2f279",
                                                                                                               "72f041dd-9faf-4de8-aeb7-fcc8b3f22077",
                                                                                                               "eb1685d5-affa-4b2f-9bf2-6880535ef366",
                                                                                                               "e003492f-5698-41aa-aafa-7bcc9f58ffb2",
                                                                                                               "53619987-279b-4fd2-8fd6-bb1ebfa77526",
                                                                                                               "0daf155a-7e8c-4e97-9341-f0b9750308e4"))
                                                                                  .notInDeviceClass(Arrays.asList("9bf6ceb3-d61a-4c2d-bb8c-5e514a6d557f"))
                                                                                  .inTimestamps(Arrays.asList(new Date(1566811765717L),
                                                                                                              new Date(1566811762335L),
                                                                                                              new Date(1566811765828L),
                                                                                                              new Date(1566811761306L),
                                                                                                              new Date(1566811767079L),
                                                                                                              new Date(1566811763926L),
                                                                                                              new Date(1566811762614L),
                                                                                                              new Date(1566811764268L),
                                                                                                              new Date(1566811762356L)))
                                                                                  .notInTimestamps(Arrays.asList(new Date(1566811766344L)))
                                                                                  .lessThanTimestamp(new Date(1566811759416L))
                                                                                  .greaterThanTimestamp(new Date(1566811768331L))
                                                                                  .inUpdatedAts(Arrays.asList(new Date(1566811768548L),
                                                                                                              new Date(1566811764347L),
                                                                                                              new Date(1566811763658L),
                                                                                                              new Date(1566811766054L),
                                                                                                              new Date(1566811765902L),
                                                                                                              new Date(1566811768290L),
                                                                                                              new Date(1566811762032L),
                                                                                                              new Date(1566811766326L)))
                                                                                  .notInUpdatedAts(Arrays.asList(new Date(1566811767624L),
                                                                                                                 new Date(1566811765981L),
                                                                                                                 new Date(1566811762608L),
                                                                                                                 new Date(1566811767883L)))
                                                                                  .lessThanUpdatedAt(new Date(1566811761934L))
                                                                                  .greaterThanUpdatedAt(new Date(1566811764526L))
                                                                                  .equalToDescription("4e7c1b8c-f92b-42b9-b641-62ecb8c77b54")
                                                                                  .notEqualToDescription("5867781d-018b-42d4-9574-9e931f12d9d3")
                                                                                  .inDescriptions(Arrays.asList("405b465c-e815-4e3b-be13-54652aa22fd7",
                                                                                                                "e21e9727-9ecc-41ea-be7e-294f9e1be392",
                                                                                                                "95d1da0c-a83b-43ea-9130-3b6837b8ae82"))
                                                                                  .notInDescriptions(Arrays.asList("f7e9106d-4e47-490f-ae38-5784009ea8ba"));
            assertTrue(option.hasFilters());
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1566811764686L), new Date(1566811763686L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1566811764696L), new Date(1566811768562L), new Date(1566811764455L),
                                       new Date(1566811761004L), new Date(1566811764455L), new Date(1566811761767L),
                                       new Date(1566811768327L), new Date(1566811766786L), new Date(1566811768392L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                        FilterOperator.LESS_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1566811760906L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1566811764512L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME, FilterOperator.EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("bf5aab29-0728-41bc-b380-a78d85651171",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("ed5b73a4-bca0-439e-81ba-528d045439f2",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME, FilterOperator.IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("0a04c1d0-6295-4e47-99e4-ab2922854928", "cde3c491-c903-4a7a-9517-fb4fa4e587fc",
                                       "5b333b48-e775-4bd2-b02b-d8248d43ff12", "74cdc016-4cfa-4387-bc3b-9c6a61559bbb",
                                       "09d35b43-643f-4e3b-ab70-37f1ae53b4e4"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("4fb4f5b7-df47-40ff-9faa-24bf995d3824", "44b74665-3e96-4d47-8849-e1c5245cca96",
                                       "e46ec7fd-ae1f-464d-a27a-9dc8ab4257b9", "c9528a3a-9d64-4f65-969c-2e0220c7b2b8",
                                       "9aa76cd5-8fb6-439e-97b9-93fd18b2a2cf", "c37f3cc2-bc11-4f3a-95a2-8439e8c3f5b0",
                                       "6c3fc437-63e3-4373-b703-1a2a4449a13c"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID, FilterOperator.EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("20ed2dd1-db63-4fb8-b8a1-adb3842350f3",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("be75323c-0486-4405-b632-d16ac431e505",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID, FilterOperator.IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("95261b83-651d-433d-a0bd-6b4f425426bc", "7721c358-841c-4968-8ef2-cbc42eae3594",
                                       "7c349475-36c2-43e1-8d26-611ab2011b14", "4c10f101-7278-4194-84b8-017e16fdab1a",
                                       "197aaa23-4aed-4448-be99-b3e7fbf160fd", "51479d78-f374-4bf8-a9cd-8350bc0af073",
                                       "1071c4e8-7720-4dfb-945d-4f80c7e9035e", "51c59a8f-73c1-4e95-b594-eef2358ce8f3",
                                       "7149d540-6ec8-46f7-b1b8-2235f080aa1e"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("67daf453-6102-4af3-a20a-00edf067f8ee", "ce4d17a9-6028-4b48-88af-85938d013335",
                                       "2ac84818-3927-47e3-815d-163bf2e3bd16", "5a483354-796e-4a53-ba3a-49cda1a9495f",
                                       "e91f54b1-d01b-411a-bcc8-ca53ee9f1aeb"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("1f9247ee-0985-414d-be2c-c7d7426dc4a8",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("ffb71336-a38c-437a-b55a-c314d2f06328",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("a5c48b5f-cd8e-40aa-9841-aeef32f201f9", "679616d0-6a5e-4718-9040-e146c4a5a52f",
                                       "66ae79bb-9924-4f00-a947-a6ec66fa9dcf", "d52e164d-6d86-4dc0-bef7-7732f7356a87",
                                       "5dd4efbb-67dc-49a4-8881-ec667a148f47", "056415dc-ab5a-42a4-8df6-2dbe7cf39fca",
                                       "6091edb9-2a1e-46cd-9898-eb51dec7d5b6", "03171d2d-5103-4601-9ccb-638b36129538"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("b5c221dd-b31a-4335-b46b-5fe3a2e4d1f0", "7d135856-4b72-415a-a248-5723459020fa",
                                       "a29d9b73-3b53-4c91-8653-c234ccfecb1a"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(70),
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    Long.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(-41),
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                       Long.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(10), Long.valueOf(-56), Long.valueOf(-118), Long.valueOf(-107),
                                       Long.valueOf(82)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                        FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(20), Long.valueOf(0), Long.valueOf(-61), Long.valueOf(15),
                                       Long.valueOf(126), Long.valueOf(-8), Long.valueOf(-14), Long.valueOf(-71),
                                       Long.valueOf(-80)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS, FilterOperator.EQUAL));
            assertNotNull(option.getDeviceClassFilters());
            assertEquals("7d41cb39-5607-4d6f-80e1-e6d80d74a6bc",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDeviceClassFilters());
            assertEquals("bd6b39c5-f7d0-47d6-b557-34d2995bcb5b",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS, FilterOperator.IN));
            assertNotNull(option.getDeviceClassFilters());
            assertEquals(Arrays.asList("6d766a30-1341-451e-b894-2f3e0aecd776", "18e8db17-359b-40e3-b134-0a7f5aa3f76f",
                                       "881ee637-a6af-4b20-b147-7d15deb2f279", "72f041dd-9faf-4de8-aeb7-fcc8b3f22077",
                                       "eb1685d5-affa-4b2f-9bf2-6880535ef366", "e003492f-5698-41aa-aafa-7bcc9f58ffb2",
                                       "53619987-279b-4fd2-8fd6-bb1ebfa77526", "0daf155a-7e8c-4e97-9341-f0b9750308e4"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS, FilterOperator.NOT_IN));
            assertNotNull(option.getDeviceClassFilters());
            assertEquals(Arrays.asList("9bf6ceb3-d61a-4c2d-bb8c-5e514a6d557f"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP, FilterOperator.IN));
            assertNotNull(option.getTimestampFilters());
            assertEquals(Arrays.asList(new Date(1566811765717L), new Date(1566811762335L), new Date(1566811765828L),
                                       new Date(1566811761306L), new Date(1566811767079L), new Date(1566811763926L),
                                       new Date(1566811762614L), new Date(1566811764268L), new Date(1566811762356L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP, FilterOperator.NOT_IN));
            assertNotNull(option.getTimestampFilters());
            assertEquals(Arrays.asList(new Date(1566811766344L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP, FilterOperator.LESS_THAN));
            assertNotNull(option.getTimestampFilters());
            assertEquals(new Date(1566811759416L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getTimestampFilters());
            assertEquals(new Date(1566811768331L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1566811768548L), new Date(1566811764347L), new Date(1566811763658L),
                                       new Date(1566811766054L), new Date(1566811765902L), new Date(1566811768290L),
                                       new Date(1566811762032L), new Date(1566811766326L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1566811767624L), new Date(1566811765981L), new Date(1566811762608L),
                                       new Date(1566811767883L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                        FilterOperator.LESS_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1566811761934L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1566811764526L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("4e7c1b8c-f92b-42b9-b641-62ecb8c77b54",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("5867781d-018b-42d4-9574-9e931f12d9d3",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("405b465c-e815-4e3b-be13-54652aa22fd7", "e21e9727-9ecc-41ea-be7e-294f9e1be392",
                                       "95d1da0c-a83b-43ea-9130-3b6837b8ae82"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("f7e9106d-4e47-490f-ae38-5784009ea8ba"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    List.class, option));
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            FirmwareManifestListOptions firmwaremanifestlistoptions1 = new FirmwareManifestListOptions(Integer.valueOf(28),
                                                                                                       Long.valueOf(-83),
                                                                                                       Order.getDefault(),
                                                                                                       "5ac21736-6748-4349-ad2c-06956776c6b5",
                                                                                                       null, null);
            FirmwareManifestListOptions firmwaremanifestlistoptions2 = new FirmwareManifestListOptions(Integer.valueOf(28),
                                                                                                       Long.valueOf(-83),
                                                                                                       Order.getDefault(),
                                                                                                       "5ac21736-6748-4349-ad2c-06956776c6b5",
                                                                                                       null, null);
            assertNotNull(firmwaremanifestlistoptions1);
            assertNotNull(firmwaremanifestlistoptions2);
            assertNotSame(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2.hashCode(), firmwaremanifestlistoptions1.hashCode());
            int hashCode = firmwaremanifestlistoptions1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, firmwaremanifestlistoptions1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            FirmwareManifestListOptions firmwaremanifestlistoptions1 = new FirmwareManifestListOptions(Integer.valueOf(-45),
                                                                                                       Long.valueOf(-110),
                                                                                                       Order.getDefault(),
                                                                                                       "cf33fc15-e60f-4f79-861b-ed19604b558b",
                                                                                                       null, null);
            FirmwareManifestListOptions firmwaremanifestlistoptions2 = new FirmwareManifestListOptions(Integer.valueOf(-45),
                                                                                                       Long.valueOf(-110),
                                                                                                       Order.getDefault(),
                                                                                                       "cf33fc15-e60f-4f79-861b-ed19604b558b",
                                                                                                       null, null);
            FirmwareManifestListOptions firmwaremanifestlistoptions3 = new FirmwareManifestListOptions(Integer.valueOf(-26),
                                                                                                       Long.valueOf(114),
                                                                                                       Order.getDefault(),
                                                                                                       "e7f9323a-db11-4364-bda3-09919ec87424",
                                                                                                       null, null);
            assertNotNull(firmwaremanifestlistoptions1);
            assertNotNull(firmwaremanifestlistoptions2);
            assertNotNull(firmwaremanifestlistoptions3);
            assertNotSame(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertNotSame(firmwaremanifestlistoptions3, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions1, firmwaremanifestlistoptions2);
            assertEquals(firmwaremanifestlistoptions1, firmwaremanifestlistoptions1);
            assertFalse(firmwaremanifestlistoptions1.equals(null));
            assertNotEquals(firmwaremanifestlistoptions3, firmwaremanifestlistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
