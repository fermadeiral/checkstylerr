// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.deviceupdate.model;

import static org.junit.Assert.*;

import com.arm.mbed.cloud.sdk.common.Order;
import com.arm.mbed.cloud.sdk.common.listing.ListOptionsEncoder;
import com.arm.mbed.cloud.sdk.common.listing.filtering.FilterOperator;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import org.junit.Test;

/**
 * Unit tests for Model FirmwareImageListOptions.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestFirmwareImageListOptions {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            FirmwareImageListOptions firmwareimagelistoptions1 = new FirmwareImageListOptions(Integer.valueOf(-123),
                                                                                              Long.valueOf(-7),
                                                                                              Order.getDefault(),
                                                                                              "f7b9e396-6c47-4efc-8084-15305a8878d9",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions2 = firmwareimagelistoptions1.clone();
            assertNotNull(firmwareimagelistoptions1);
            assertNotNull(firmwareimagelistoptions2);
            assertNotSame(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the filters method.
     */
    @SuppressWarnings({ "boxing", "resource" })
    @Test
    public void testFilters() {
        try {
            FirmwareImageListOptions option = new FirmwareImageListOptions().inUpdatedAts(Arrays.asList(new Date(1566811763521L),
                                                                                                        new Date(1566811768244L),
                                                                                                        new Date(1566811761194L)))
                                                                            .notInUpdatedAts(Arrays.asList(new Date(1566811761424L),
                                                                                                           new Date(1566811768507L),
                                                                                                           new Date(1566811763622L),
                                                                                                           new Date(1566811759466L),
                                                                                                           new Date(1566811762061L),
                                                                                                           new Date(1566811758970L),
                                                                                                           new Date(1566811768761L),
                                                                                                           new Date(1566811764079L),
                                                                                                           new Date(1566811762972L)))
                                                                            .lessThanUpdatedAt(new Date(1566811760938L))
                                                                            .greaterThanUpdatedAt(new Date(1566811765412L))
                                                                            .equalToName("c48f486c-7896-4c66-b5c1-06c0d07d2765")
                                                                            .notEqualToName("0034f812-09f8-48bd-bf0d-a0f1a3bff16c")
                                                                            .inNames(Arrays.asList("b73893c4-a661-4e4f-9d0c-67656ebd6865"))
                                                                            .notInNames(Arrays.asList("f6f8cac3-9e68-41d1-9ee1-6dfe278706d3",
                                                                                                      "378e54e9-1aa7-4c58-90f2-db8aa42aed09",
                                                                                                      "b760d132-3492-4042-8c46-0025e5e0d81c",
                                                                                                      "0b836bf7-1d09-473c-9f76-139927f0bff2",
                                                                                                      "35895e47-4a48-43f9-846c-d07fbd1c563d",
                                                                                                      "4683fccc-dee1-4e9a-98a6-1cc02e39da67",
                                                                                                      "14d87fb0-e7db-404e-8d2d-20235c709f8b",
                                                                                                      "b68b0a42-4c3f-406b-b82a-b4139d22b34f",
                                                                                                      "73b7dba4-84c3-47e9-8906-b9ea6ead28c5"))
                                                                            .equalToDescription("c11102e6-e46c-4906-b8a2-1c532ac510f6")
                                                                            .notEqualToDescription("bc2e6776-cf96-4db2-aa19-e681627492aa")
                                                                            .inDescriptions(Arrays.asList("8c66c6b5-2953-4926-a081-6cc4b62212a9"))
                                                                            .notInDescriptions(Arrays.asList("00f201ab-6de6-466c-a198-45cf9ed7d96e",
                                                                                                             "bc065a18-2251-4146-97f0-d3f59f2c41cc",
                                                                                                             "a187db3d-5f3e-4772-9262-dd70b163c26a",
                                                                                                             "2209b990-1b5d-49e0-a253-b7e67c2fd145",
                                                                                                             "72c5a25c-edfc-4428-8ad8-650d3c39ac46"))
                                                                            .inCreatedAts(Arrays.asList(new Date(1566811762475L),
                                                                                                        new Date(1566811764696L),
                                                                                                        new Date(1566811761233L),
                                                                                                        new Date(1566811765415L),
                                                                                                        new Date(1566811763013L),
                                                                                                        new Date(1566811765232L)))
                                                                            .notInCreatedAts(Arrays.asList(new Date(1566811766619L)))
                                                                            .lessThanCreatedAt(new Date(1566811764159L))
                                                                            .greaterThanCreatedAt(new Date(1566811761045L))
                                                                            .equalToDatafileUrl("b395f370-d657-40a5-abaf-21ac4e8bb86f")
                                                                            .notEqualToDatafileUrl("9af16fd0-67d7-4a3e-aedf-96bd40d76974")
                                                                            .inDatafileUrls(Arrays.asList("0bec6fc4-1b4f-44fa-9561-09dabc025832"))
                                                                            .notInDatafileUrls(Arrays.asList("cd2f59fc-cc69-49b7-9674-cf49208b583c",
                                                                                                             "58aba0a8-292c-4592-875d-2e207fa7c046",
                                                                                                             "a45ffd56-02fb-4bc8-b330-127d1060cccb"))
                                                                            .equalToDatafileSize(Long.valueOf(-105))
                                                                            .notEqualToDatafileSize(Long.valueOf(33))
                                                                            .inDatafileSizes(Arrays.asList(Long.valueOf(124),
                                                                                                           Long.valueOf(-6),
                                                                                                           Long.valueOf(-126),
                                                                                                           Long.valueOf(8)))
                                                                            .notInDatafileSizes(Arrays.asList(Long.valueOf(72),
                                                                                                              Long.valueOf(43),
                                                                                                              Long.valueOf(75),
                                                                                                              Long.valueOf(74),
                                                                                                              Long.valueOf(-107),
                                                                                                              Long.valueOf(34),
                                                                                                              Long.valueOf(-100)))
                                                                            .equalToDatafileChecksum("75520265-61ef-41c2-9001-c3a5bd919527")
                                                                            .notEqualToDatafileChecksum("26f03702-e390-40b7-b43f-1daca542d9bb")
                                                                            .inDatafileChecksums(Arrays.asList("0600649c-3c75-43ad-9d04-f3d5866672a3",
                                                                                                               "23f612c5-de0e-464c-89d0-7451272d8552",
                                                                                                               "e57ef066-f030-46cb-8679-3b634e0b673c",
                                                                                                               "8485ddbc-5051-40ea-a9e1-8c98ec932ad8"))
                                                                            .notInDatafileChecksums(Arrays.asList("3235fe71-9f0e-450c-99fb-52a0f0b79184",
                                                                                                                  "0e0da486-1f77-46fb-9e42-49a8148c057f",
                                                                                                                  "673d078f-04e9-4d78-97ad-1ab667aaeb19",
                                                                                                                  "63b74067-8e27-4ce2-b817-449795482f0a"))
                                                                            .equalToId("42093e4a-2d36-4f08-a772-93bd2c9cff8b")
                                                                            .notEqualToId("fab325bb-dad5-409a-8936-9572ec0cd011")
                                                                            .inIds(Arrays.asList("d508ea3e-0226-47c2-a8b7-0b11836e3a7e",
                                                                                                 "eff52bce-a99e-4c7f-90bc-904194db620c",
                                                                                                 "70fb15fb-86bf-4118-a30e-726be4e93270",
                                                                                                 "f01073cc-7f8c-4270-86dd-fa3fcefdc002",
                                                                                                 "a948debd-e2d3-4d53-8e4e-e2c7697574da"))
                                                                            .notInIds(Arrays.asList("566cbdd3-fc79-417f-9791-b20c6faa3d4a",
                                                                                                    "94581eae-91fc-4a2e-9d20-20a436967c82",
                                                                                                    "937ed808-aba0-4b74-8105-e7861fed7ded",
                                                                                                    "650f574a-90e0-455e-ba0c-072fac835cf4",
                                                                                                    "ff22f1e7-a2bc-4c1c-8cd8-7c851146becd",
                                                                                                    "d069eb28-9af1-4512-a862-3c715d63a4f5"));
            assertTrue(option.hasFilters());
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1566811763521L), new Date(1566811768244L), new Date(1566811761194L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1566811761424L), new Date(1566811768507L), new Date(1566811763622L),
                                       new Date(1566811759466L), new Date(1566811762061L), new Date(1566811758970L),
                                       new Date(1566811768761L), new Date(1566811764079L), new Date(1566811762972L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.LESS_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1566811760938L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1566811765412L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("c48f486c-7896-4c66-b5c1-06c0d07d2765",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("0034f812-09f8-48bd-bf0d-a0f1a3bff16c",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("b73893c4-a661-4e4f-9d0c-67656ebd6865"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("f6f8cac3-9e68-41d1-9ee1-6dfe278706d3", "378e54e9-1aa7-4c58-90f2-db8aa42aed09",
                                       "b760d132-3492-4042-8c46-0025e5e0d81c", "0b836bf7-1d09-473c-9f76-139927f0bff2",
                                       "35895e47-4a48-43f9-846c-d07fbd1c563d", "4683fccc-dee1-4e9a-98a6-1cc02e39da67",
                                       "14d87fb0-e7db-404e-8d2d-20235c709f8b", "b68b0a42-4c3f-406b-b82a-b4139d22b34f",
                                       "73b7dba4-84c3-47e9-8906-b9ea6ead28c5"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("c11102e6-e46c-4906-b8a2-1c532ac510f6",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("bc2e6776-cf96-4db2-aa19-e681627492aa",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("8c66c6b5-2953-4926-a081-6cc4b62212a9"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("00f201ab-6de6-466c-a198-45cf9ed7d96e", "bc065a18-2251-4146-97f0-d3f59f2c41cc",
                                       "a187db3d-5f3e-4772-9262-dd70b163c26a", "2209b990-1b5d-49e0-a253-b7e67c2fd145",
                                       "72c5a25c-edfc-4428-8ad8-650d3c39ac46"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1566811762475L), new Date(1566811764696L), new Date(1566811761233L),
                                       new Date(1566811765415L), new Date(1566811763013L), new Date(1566811765232L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1566811766619L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.LESS_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1566811764159L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1566811761045L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("b395f370-d657-40a5-abaf-21ac4e8bb86f",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("9af16fd0-67d7-4a3e-aedf-96bd40d76974",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("0bec6fc4-1b4f-44fa-9561-09dabc025832"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("cd2f59fc-cc69-49b7-9674-cf49208b583c", "58aba0a8-292c-4592-875d-2e207fa7c046",
                                       "a45ffd56-02fb-4bc8-b330-127d1060cccb"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(-105),
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    Long.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(33),
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                       Long.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(124), Long.valueOf(-6), Long.valueOf(-126), Long.valueOf(8)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(72), Long.valueOf(43), Long.valueOf(75), Long.valueOf(74),
                                       Long.valueOf(-107), Long.valueOf(34), Long.valueOf(-100)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                        FilterOperator.EQUAL));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals("75520265-61ef-41c2-9001-c3a5bd919527",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals("26f03702-e390-40b7-b43f-1daca542d9bb",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM, FilterOperator.IN));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals(Arrays.asList("0600649c-3c75-43ad-9d04-f3d5866672a3", "23f612c5-de0e-464c-89d0-7451272d8552",
                                       "e57ef066-f030-46cb-8679-3b634e0b673c", "8485ddbc-5051-40ea-a9e1-8c98ec932ad8"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                        FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals(Arrays.asList("3235fe71-9f0e-450c-99fb-52a0f0b79184", "0e0da486-1f77-46fb-9e42-49a8148c057f",
                                       "673d078f-04e9-4d78-97ad-1ab667aaeb19", "63b74067-8e27-4ce2-b817-449795482f0a"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("42093e4a-2d36-4f08-a772-93bd2c9cff8b",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("fab325bb-dad5-409a-8936-9572ec0cd011",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("d508ea3e-0226-47c2-a8b7-0b11836e3a7e", "eff52bce-a99e-4c7f-90bc-904194db620c",
                                       "70fb15fb-86bf-4118-a30e-726be4e93270", "f01073cc-7f8c-4270-86dd-fa3fcefdc002",
                                       "a948debd-e2d3-4d53-8e4e-e2c7697574da"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, List.class,
                                                                 option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("566cbdd3-fc79-417f-9791-b20c6faa3d4a", "94581eae-91fc-4a2e-9d20-20a436967c82",
                                       "937ed808-aba0-4b74-8105-e7861fed7ded", "650f574a-90e0-455e-ba0c-072fac835cf4",
                                       "ff22f1e7-a2bc-4c1c-8cd8-7c851146becd", "d069eb28-9af1-4512-a862-3c715d63a4f5"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID,
                                                                    List.class, option));
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            FirmwareImageListOptions firmwareimagelistoptions1 = new FirmwareImageListOptions(Integer.valueOf(-118),
                                                                                              Long.valueOf(-16),
                                                                                              Order.getDefault(),
                                                                                              "e53e2a20-9320-45be-a01c-e3696b050fa7",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions2 = new FirmwareImageListOptions(Integer.valueOf(-118),
                                                                                              Long.valueOf(-16),
                                                                                              Order.getDefault(),
                                                                                              "e53e2a20-9320-45be-a01c-e3696b050fa7",
                                                                                              null, null);
            assertNotNull(firmwareimagelistoptions1);
            assertNotNull(firmwareimagelistoptions2);
            assertNotSame(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2.hashCode(), firmwareimagelistoptions1.hashCode());
            int hashCode = firmwareimagelistoptions1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, firmwareimagelistoptions1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            FirmwareImageListOptions firmwareimagelistoptions1 = new FirmwareImageListOptions(Integer.valueOf(111),
                                                                                              Long.valueOf(-70),
                                                                                              Order.getDefault(),
                                                                                              "4b6c2b57-9a37-4666-9d9d-4a0b657a6d5d",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions2 = new FirmwareImageListOptions(Integer.valueOf(111),
                                                                                              Long.valueOf(-70),
                                                                                              Order.getDefault(),
                                                                                              "4b6c2b57-9a37-4666-9d9d-4a0b657a6d5d",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions3 = new FirmwareImageListOptions(Integer.valueOf(47),
                                                                                              Long.valueOf(56),
                                                                                              Order.getDefault(),
                                                                                              "2b6ecc71-7426-47b8-bef7-80fd8889fc45",
                                                                                              null, null);
            assertNotNull(firmwareimagelistoptions1);
            assertNotNull(firmwareimagelistoptions2);
            assertNotNull(firmwareimagelistoptions3);
            assertNotSame(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertNotSame(firmwareimagelistoptions3, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions1, firmwareimagelistoptions2);
            assertEquals(firmwareimagelistoptions1, firmwareimagelistoptions1);
            assertFalse(firmwareimagelistoptions1.equals(null));
            assertNotEquals(firmwareimagelistoptions3, firmwareimagelistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
