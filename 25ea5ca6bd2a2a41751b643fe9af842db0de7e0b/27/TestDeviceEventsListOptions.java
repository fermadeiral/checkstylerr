// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import com.arm.mbed.cloud.sdk.common.Order;
import com.arm.mbed.cloud.sdk.common.listing.ListOptionsEncoder;
import com.arm.mbed.cloud.sdk.common.listing.filtering.FilterOperator;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEventsListOptions.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEventsListOptions {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEventsListOptions deviceeventslistoptions1 = new DeviceEventsListOptions(Integer.valueOf(-22),
                                                                                           Long.valueOf(9),
                                                                                           Order.getDefault(),
                                                                                           "0affbdce-f988-4492-b8e6-19ce3d574a03",
                                                                                           null, null);
            DeviceEventsListOptions deviceeventslistoptions2 = deviceeventslistoptions1.clone();
            assertNotNull(deviceeventslistoptions1);
            assertNotNull(deviceeventslistoptions2);
            assertNotSame(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2, deviceeventslistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the filters method.
     */
    @SuppressWarnings({ "boxing", "resource" })
    @Test
    public void testFilters() {
        try {
            DeviceEventsListOptions option = new DeviceEventsListOptions().equalToDeviceId("11a578e8-e66e-414a-9b46-c6507d9bf4e1")
                                                                          .notEqualToDeviceId("42c13c21-d4a7-4b4d-9ab9-83fe362c2034")
                                                                          .inDeviceIds(Arrays.asList("ddc88b49-b504-4433-8365-31133e29984b",
                                                                                                     "f2146182-c538-401b-b036-7902dd3819fa",
                                                                                                     "a6228dc9-6e06-41cf-bd21-819ee5b329e8",
                                                                                                     "c848a9da-78c4-4a87-967a-4dc14cf65ccc",
                                                                                                     "e737c2a4-ae5b-45eb-ae94-7916bc839260",
                                                                                                     "9abc935c-94d0-4192-a1d5-67446e0a180a",
                                                                                                     "42fa7796-9669-462f-b40c-b0b01b6506f4",
                                                                                                     "1f5ce478-09f0-4778-8a51-0aabd3656a85",
                                                                                                     "2b37bd11-185f-4943-a5c7-b2809a37c12f"))
                                                                          .notInDeviceIds(Arrays.asList("474b60de-58a8-4c6d-b92b-862d04f4bb18",
                                                                                                        "a0f8818c-0fe1-4976-a873-ec1cea6a537b",
                                                                                                        "c286f321-d367-4f96-8b52-93ac64e721a8",
                                                                                                        "e79368e4-3189-43ed-810c-9148e12f2bcd",
                                                                                                        "3db457e8-848b-408a-bbd0-e09f5628fbd0",
                                                                                                        "9a8e75d1-03eb-43ef-947c-878e3373a0d0"))
                                                                          .equalToDescription("379fa96f-3ad8-47ec-9511-4afa91dc4542")
                                                                          .notEqualToDescription("c3f32d46-0b2e-43b4-a02f-48083cf1d7c2")
                                                                          .inDescriptions(Arrays.asList("2bda9404-b032-4149-a860-ac1a298492fa"))
                                                                          .notInDescriptions(Arrays.asList("f0c85691-2fe1-4cba-89a9-e363be24b395"))
                                                                          .inDateTimes(Arrays.asList(new Date(1566811767155L),
                                                                                                     new Date(1566811758862L),
                                                                                                     new Date(1566811766142L),
                                                                                                     new Date(1566811763674L),
                                                                                                     new Date(1566811765610L),
                                                                                                     new Date(1566811767553L),
                                                                                                     new Date(1566811759745L),
                                                                                                     new Date(1566811761749L),
                                                                                                     new Date(1566811764084L)))
                                                                          .notInDateTimes(Arrays.asList(new Date(1566811759130L),
                                                                                                        new Date(1566811759094L),
                                                                                                        new Date(1566811764031L),
                                                                                                        new Date(1566811761062L),
                                                                                                        new Date(1566811767563L),
                                                                                                        new Date(1566811759799L)))
                                                                          .lessThanDateTime(new Date(1566811761651L))
                                                                          .greaterThanDateTime(new Date(1566811766547L))
                                                                          .equalToStateChange(Boolean.FALSE)
                                                                          .notEqualToStateChange(Boolean.FALSE)
                                                                          .equalToId("6d32461c-53b5-46fb-b924-0eece7548707")
                                                                          .notEqualToId("88aeeed0-fda2-45e1-a12a-6f7ed7e76e6b")
                                                                          .inIds(Arrays.asList("fdffdc5a-4f2b-4c05-805a-dc4e6ee83a4b",
                                                                                               "5c2d6ffc-feef-4d35-a642-0682df123404"))
                                                                          .notInIds(Arrays.asList("4098dfcc-30d9-4e90-93b8-44fbeadaa15f",
                                                                                                  "397198e8-9f01-4b9f-8007-75d8c5dcdebf",
                                                                                                  "ca22c48a-0e91-49d0-80d3-3f595ec0c724",
                                                                                                  "32050ba4-cae6-406b-b6df-714534f4ec27",
                                                                                                  "ef95e8b0-be8c-4cfa-8d2c-4b524d663df2",
                                                                                                  "aa858efd-241c-4333-b28b-679b2eb34297",
                                                                                                  "803a1e29-ecf2-4e06-b4da-fb1f03534bee",
                                                                                                  "e1bcd558-a27b-4910-9546-7b410d8cbe9c"))
                                                                          .equalToEventType("bd389896-7453-4f59-b567-2cfda8078014")
                                                                          .notEqualToEventType("d2deb99c-5268-4d90-ba73-deb03d53d6de")
                                                                          .inEventTypes(Arrays.asList("fbbcb030-87e1-4274-9edd-39342d012d1e"))
                                                                          .notInEventTypes(Arrays.asList("30fedbfe-6c47-442b-a9d6-2118838c5c80"));
            assertTrue(option.hasFilters());
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID, FilterOperator.EQUAL));
            assertNotNull(option.getDeviceIdFilters());
            assertEquals("11a578e8-e66e-414a-9b46-c6507d9bf4e1",
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDeviceIdFilters());
            assertEquals("42c13c21-d4a7-4b4d-9ab9-83fe362c2034",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID, FilterOperator.IN));
            assertNotNull(option.getDeviceIdFilters());
            assertEquals(Arrays.asList("ddc88b49-b504-4433-8365-31133e29984b", "f2146182-c538-401b-b036-7902dd3819fa",
                                       "a6228dc9-6e06-41cf-bd21-819ee5b329e8", "c848a9da-78c4-4a87-967a-4dc14cf65ccc",
                                       "e737c2a4-ae5b-45eb-ae94-7916bc839260", "9abc935c-94d0-4192-a1d5-67446e0a180a",
                                       "42fa7796-9669-462f-b40c-b0b01b6506f4", "1f5ce478-09f0-4778-8a51-0aabd3656a85",
                                       "2b37bd11-185f-4943-a5c7-b2809a37c12f"),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID,
                                                                 List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getDeviceIdFilters());
            assertEquals(Arrays.asList("474b60de-58a8-4c6d-b92b-862d04f4bb18", "a0f8818c-0fe1-4976-a873-ec1cea6a537b",
                                       "c286f321-d367-4f96-8b52-93ac64e721a8", "e79368e4-3189-43ed-810c-9148e12f2bcd",
                                       "3db457e8-848b-408a-bbd0-e09f5628fbd0", "9a8e75d1-03eb-43ef-947c-878e3373a0d0"),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID,
                                                                    List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("379fa96f-3ad8-47ec-9511-4afa91dc4542",
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("c3f32d46-0b2e-43b4-a02f-48083cf1d7c2",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                       String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("2bda9404-b032-4149-a860-ac1a298492fa"),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                 List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("f0c85691-2fe1-4cba-89a9-e363be24b395"),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME, FilterOperator.IN));
            assertNotNull(option.getDateTimeFilters());
            assertEquals(Arrays.asList(new Date(1566811767155L), new Date(1566811758862L), new Date(1566811766142L),
                                       new Date(1566811763674L), new Date(1566811765610L), new Date(1566811767553L),
                                       new Date(1566811759745L), new Date(1566811761749L), new Date(1566811764084L)),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME,
                                                                 List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME, FilterOperator.NOT_IN));
            assertNotNull(option.getDateTimeFilters());
            assertEquals(Arrays.asList(new Date(1566811759130L), new Date(1566811759094L), new Date(1566811764031L),
                                       new Date(1566811761062L), new Date(1566811767563L), new Date(1566811759799L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME,
                                                                    List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME, FilterOperator.LESS_THAN));
            assertNotNull(option.getDateTimeFilters());
            assertEquals(new Date(1566811761651L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME, FilterOperator.GREATER_THAN));
            assertNotNull(option.getDateTimeFilters());
            assertEquals(new Date(1566811766547L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE, FilterOperator.EQUAL));
            assertNotNull(option.getStateChangeFilters());
            assertEquals(Boolean.FALSE,
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE,
                                                                    Boolean.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getStateChangeFilters());
            assertEquals(Boolean.FALSE,
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE,
                                                                       Boolean.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, FilterOperator.EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("6d32461c-53b5-46fb-b924-0eece7548707",
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("88aeeed0-fda2-45e1-a12a-6f7ed7e76e6b",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, FilterOperator.IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("fdffdc5a-4f2b-4c05-805a-dc4e6ee83a4b", "5c2d6ffc-feef-4d35-a642-0682df123404"),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, List.class,
                                                                 option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("4098dfcc-30d9-4e90-93b8-44fbeadaa15f", "397198e8-9f01-4b9f-8007-75d8c5dcdebf",
                                       "ca22c48a-0e91-49d0-80d3-3f595ec0c724", "32050ba4-cae6-406b-b6df-714534f4ec27",
                                       "ef95e8b0-be8c-4cfa-8d2c-4b524d663df2", "aa858efd-241c-4333-b28b-679b2eb34297",
                                       "803a1e29-ecf2-4e06-b4da-fb1f03534bee", "e1bcd558-a27b-4910-9546-7b410d8cbe9c"),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID,
                                                                    List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE, FilterOperator.EQUAL));
            assertNotNull(option.getEventTypeFilters());
            assertEquals("bd389896-7453-4f59-b567-2cfda8078014",
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE,
                                                                    String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getEventTypeFilters());
            assertEquals("d2deb99c-5268-4d90-ba73-deb03d53d6de",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE,
                                                                       String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE, FilterOperator.IN));
            assertNotNull(option.getEventTypeFilters());
            assertEquals(Arrays.asList("fbbcb030-87e1-4274-9edd-39342d012d1e"),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE,
                                                                 List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE, FilterOperator.NOT_IN));
            assertNotNull(option.getEventTypeFilters());
            assertEquals(Arrays.asList("30fedbfe-6c47-442b-a9d6-2118838c5c80"),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE,
                                                                    List.class, option));
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEventsListOptions deviceeventslistoptions1 = new DeviceEventsListOptions(Integer.valueOf(-83),
                                                                                           Long.valueOf(-106),
                                                                                           Order.getDefault(),
                                                                                           "2ae7a957-d39a-4731-b60a-cca79ddc5b9e",
                                                                                           null, null);
            DeviceEventsListOptions deviceeventslistoptions2 = new DeviceEventsListOptions(Integer.valueOf(-83),
                                                                                           Long.valueOf(-106),
                                                                                           Order.getDefault(),
                                                                                           "2ae7a957-d39a-4731-b60a-cca79ddc5b9e",
                                                                                           null, null);
            assertNotNull(deviceeventslistoptions1);
            assertNotNull(deviceeventslistoptions2);
            assertNotSame(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2.hashCode(), deviceeventslistoptions1.hashCode());
            int hashCode = deviceeventslistoptions1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceeventslistoptions1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEventsListOptions deviceeventslistoptions1 = new DeviceEventsListOptions(Integer.valueOf(-83),
                                                                                           Long.valueOf(9),
                                                                                           Order.getDefault(),
                                                                                           "65b25eb9-ff80-4556-8c26-69813ebc491d",
                                                                                           null, null);
            DeviceEventsListOptions deviceeventslistoptions2 = new DeviceEventsListOptions(Integer.valueOf(-83),
                                                                                           Long.valueOf(9),
                                                                                           Order.getDefault(),
                                                                                           "65b25eb9-ff80-4556-8c26-69813ebc491d",
                                                                                           null, null);
            DeviceEventsListOptions deviceeventslistoptions3 = new DeviceEventsListOptions(Integer.valueOf(48),
                                                                                           Long.valueOf(-50),
                                                                                           Order.getDefault(),
                                                                                           "00cceae4-118c-4dea-a789-3fe7611acc54",
                                                                                           null, null);
            assertNotNull(deviceeventslistoptions1);
            assertNotNull(deviceeventslistoptions2);
            assertNotNull(deviceeventslistoptions3);
            assertNotSame(deviceeventslistoptions2, deviceeventslistoptions1);
            assertNotSame(deviceeventslistoptions3, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions1, deviceeventslistoptions2);
            assertEquals(deviceeventslistoptions1, deviceeventslistoptions1);
            assertFalse(deviceeventslistoptions1.equals(null));
            assertNotEquals(deviceeventslistoptions3, deviceeventslistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
