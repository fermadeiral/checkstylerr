// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model ActiveSession.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestActiveSession {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ActiveSession activesession1 = new ActiveSession("0f0fddcbb77d22b2ab801eb65dfbca42",
                                                             "4e8330e5-0aeb-4082-9a88-532247ee546a",
                                                             new Date(1566811764240L),
                                                             "862c8362-9f12-4bcb-97e8-a6a96703abd8",
                                                             "426d0529-a17d-4df3-9a22-63647359f3c5");
            ActiveSession activesession2 = activesession1.clone();
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotSame(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ActiveSession activesession1 = new ActiveSession("0f0fddcbb77d22b2ab801eb65dfbca42",
                                                             "974e3701-a5c3-4c32-839f-b14ed88f3036",
                                                             new Date(1566811757655L),
                                                             "979dca88-1568-48c2-b5ff-a97016b10832",
                                                             "c9b48577-f2f7-4f31-a74f-b0bee72c2a28");
            ActiveSession activesession2 = new ActiveSession("0f0fddcbb77d22b2ab801eb65dfbca42",
                                                             "974e3701-a5c3-4c32-839f-b14ed88f3036",
                                                             new Date(1566811757655L),
                                                             "979dca88-1568-48c2-b5ff-a97016b10832",
                                                             "c9b48577-f2f7-4f31-a74f-b0bee72c2a28");
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotSame(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession2.hashCode(), activesession1.hashCode());
            int hashCode = activesession1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, activesession1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ActiveSession activesession = new ActiveSession("0f0fddcbb77d22b2ab801eb65dfbca42",
                                                        "15f5902c-d88d-43e0-9497-42735cd039fb",
                                                        new Date(1566811765681L),
                                                        "cc2026e9-e9f4-49ba-8f39-66f4665022c0",
                                                        "38a24549-fc1c-4b6f-a1ef-560786316a6d");
        assertTrue(activesession.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ActiveSession activesession1 = new ActiveSession("0f0fddcbb77d22b2ab801eb65dfbca42",
                                                             "1da13a12-9e19-4b75-be9a-b745a52dfa8c",
                                                             new Date(1566811764562L),
                                                             "6a3add9d-2219-4e34-806f-b6ad8d2fba66",
                                                             "73b7380f-fc5f-4e57-8526-9a3938e5a53e");
            ActiveSession activesession2 = new ActiveSession("0f0fddcbb77d22b2ab801eb65dfbca42",
                                                             "1da13a12-9e19-4b75-be9a-b745a52dfa8c",
                                                             new Date(1566811764562L),
                                                             "6a3add9d-2219-4e34-806f-b6ad8d2fba66",
                                                             "73b7380f-fc5f-4e57-8526-9a3938e5a53e");
            ActiveSession activesession3 = new ActiveSession("0f0fddcbb77d22b2ab801eb65dfbca42",
                                                             "097205a7-794f-45a3-bd6e-90efd8d1a50c",
                                                             new Date(1566811761522L),
                                                             "e739d513-0980-4939-8604-e10efbbecae4",
                                                             "3888bdef-b866-432f-8e10-897d0f60a9cd");
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotNull(activesession3);
            assertNotSame(activesession2, activesession1);
            assertNotSame(activesession3, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession1, activesession2);
            assertEquals(activesession1, activesession1);
            assertFalse(activesession1.equals(null));
            assertNotEquals(activesession3, activesession1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
