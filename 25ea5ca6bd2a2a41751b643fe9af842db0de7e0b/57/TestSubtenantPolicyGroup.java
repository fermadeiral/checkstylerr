// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantPolicyGroup.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantPolicyGroup {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantPolicyGroup subtenantpolicygroup1 = new SubtenantPolicyGroup("0f0fddcbb77d22b2ab801eb65dfbca42",
                                                                                  88, new Date(1566811758676L),
                                                                                  "0f0fddcbb77d22b2ab801eb65dfbca42",
                                                                                  "9dd8c349-a27c-46da-9729-3aa6d9167ae1",
                                                                                  new Date(1566811767173L), 3);
            SubtenantPolicyGroup subtenantpolicygroup2 = subtenantpolicygroup1.clone();
            assertNotNull(subtenantpolicygroup1);
            assertNotNull(subtenantpolicygroup2);
            assertNotSame(subtenantpolicygroup2, subtenantpolicygroup1);
            assertEquals(subtenantpolicygroup2, subtenantpolicygroup1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantPolicyGroup subtenantpolicygroup1 = new SubtenantPolicyGroup("0f0fddcbb77d22b2ab801eb65dfbca42",
                                                                                  100, new Date(1566811761224L),
                                                                                  "0f0fddcbb77d22b2ab801eb65dfbca42",
                                                                                  "a965a812-38bc-45d9-89ad-ae9b2f3e8753",
                                                                                  new Date(1566811764621L), -2);
            SubtenantPolicyGroup subtenantpolicygroup2 = new SubtenantPolicyGroup("0f0fddcbb77d22b2ab801eb65dfbca42",
                                                                                  100, new Date(1566811761224L),
                                                                                  "0f0fddcbb77d22b2ab801eb65dfbca42",
                                                                                  "a965a812-38bc-45d9-89ad-ae9b2f3e8753",
                                                                                  new Date(1566811764621L), -2);
            assertNotNull(subtenantpolicygroup1);
            assertNotNull(subtenantpolicygroup2);
            assertNotSame(subtenantpolicygroup2, subtenantpolicygroup1);
            assertEquals(subtenantpolicygroup2, subtenantpolicygroup1);
            assertEquals(subtenantpolicygroup2.hashCode(), subtenantpolicygroup1.hashCode());
            int hashCode = subtenantpolicygroup1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantpolicygroup1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantPolicyGroup subtenantpolicygroup = new SubtenantPolicyGroup("0f0fddcbb77d22b2ab801eb65dfbca42", -101,
                                                                             new Date(1566811759657L),
                                                                             "0f0fddcbb77d22b2ab801eb65dfbca42",
                                                                             "592d95a9-4594-42cf-8178-35ff1c7a6953",
                                                                             new Date(1566811765030L), 29);
        assertTrue(subtenantpolicygroup.isValid());
        SubtenantPolicyGroup subtenantpolicygroupInvalid = new SubtenantPolicyGroup(null, -126,
                                                                                    new Date(1566811763507L),
                                                                                    "*é¦ \u0013+\u00123På?¦3äƒ¹\u0017M3Q3â–¡(\t3\u0012:å¤¬\u001e^3Dé§›ë¢?<å§¾\u000fÍ¼åƒ»3333?3;Iæ·‘3[æ‡¯Få“”Sê‰ˆ\u0012\u00153ßŒ!ã²¹\u00133\u00163å©±3å”µé‘¢",
                                                                                    "391a254c-02d3-4991-a165-9a6e5d6193068124a1d6-276a-4f36-a065-01e3719c8bb122875a24-bd39-4830-9fd1-b63426d4e940",
                                                                                    new Date(1566811762246L), 66);
        assertFalse(subtenantpolicygroupInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantPolicyGroup subtenantpolicygroup1 = new SubtenantPolicyGroup("0f0fddcbb77d22b2ab801eb65dfbca42",
                                                                                  88, new Date(1566811760846L),
                                                                                  "0f0fddcbb77d22b2ab801eb65dfbca42",
                                                                                  "aaea458f-7dd9-46bc-bb72-33330019041f",
                                                                                  new Date(1566811761565L), 0);
            SubtenantPolicyGroup subtenantpolicygroup2 = new SubtenantPolicyGroup("0f0fddcbb77d22b2ab801eb65dfbca42",
                                                                                  88, new Date(1566811760846L),
                                                                                  "0f0fddcbb77d22b2ab801eb65dfbca42",
                                                                                  "aaea458f-7dd9-46bc-bb72-33330019041f",
                                                                                  new Date(1566811761565L), 0);
            SubtenantPolicyGroup subtenantpolicygroup3 = new SubtenantPolicyGroup("0f0fddcbb77d22b2ab801eb65dfbca42",
                                                                                  52, new Date(1566811762411L),
                                                                                  "0f0fddcbb77d22b2ab801eb65dfbca42",
                                                                                  "21696492-7689-4d5a-bf89-3dedef339a1d",
                                                                                  new Date(1566811759350L), -6);
            assertNotNull(subtenantpolicygroup1);
            assertNotNull(subtenantpolicygroup2);
            assertNotNull(subtenantpolicygroup3);
            assertNotSame(subtenantpolicygroup2, subtenantpolicygroup1);
            assertNotSame(subtenantpolicygroup3, subtenantpolicygroup1);
            assertEquals(subtenantpolicygroup2, subtenantpolicygroup1);
            assertEquals(subtenantpolicygroup2, subtenantpolicygroup1);
            assertEquals(subtenantpolicygroup1, subtenantpolicygroup2);
            assertEquals(subtenantpolicygroup1, subtenantpolicygroup1);
            assertFalse(subtenantpolicygroup1.equals(null));
            assertNotEquals(subtenantpolicygroup3, subtenantpolicygroup1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
