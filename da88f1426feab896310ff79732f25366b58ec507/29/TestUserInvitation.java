// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model UserInvitation.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestUserInvitation {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("dcedb3ed-5b11-449b-a5a6-3e2ffc885cf6",
                                                                new Date(1552477759302L),
                                                                "4ec86e28-90ad-4019-bd5f-6d23a8b80b8e",
                                                                new Date(1552477765634L),
                                                                "db7db582-a717-44c3-86c2-5751b1e4e82e", null,
                                                                new Date(1552477766401L),
                                                                "9ffd081b-dd89-49cc-96a0-6687a104dd19");
            UserInvitation userinvitation2 = userinvitation1.clone();
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotSame(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("472d4168-7d47-48c4-8b71-5233aa59e6f4",
                                                                new Date(1552477764593L),
                                                                "b8444a7a-8cdf-4409-9b83-d85936a23cb8",
                                                                new Date(1552477762486L),
                                                                "39f052db-63e7-4f40-9cde-f85df27dca27", null,
                                                                new Date(1552477761030L),
                                                                "def2c1dd-a18e-4a3b-94da-28bd25dd7eb6");
            UserInvitation userinvitation2 = new UserInvitation("472d4168-7d47-48c4-8b71-5233aa59e6f4",
                                                                new Date(1552477764593L),
                                                                "b8444a7a-8cdf-4409-9b83-d85936a23cb8",
                                                                new Date(1552477762486L),
                                                                "39f052db-63e7-4f40-9cde-f85df27dca27", null,
                                                                new Date(1552477761030L),
                                                                "def2c1dd-a18e-4a3b-94da-28bd25dd7eb6");
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotSame(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation2.hashCode(), userinvitation1.hashCode());
            int hashCode = userinvitation1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, userinvitation1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        UserInvitation userinvitation = new UserInvitation("723bc3cd-0968-4aa1-9b4e-c728996115b1",
                                                           new Date(1552477760600L),
                                                           "cf6156e0-ac2b-4fe0-be8a-8c3631875ef5",
                                                           new Date(1552477765799L),
                                                           "13e46b6d-0ea6-4a6e-885d-fc9b2f06355c", null,
                                                           new Date(1552477767361L),
                                                           "88d238f2-9ba2-47b1-94ad-632242e9fd05");
        assertTrue(userinvitation.isValid());
        UserInvitation userinvitationInvalid = new UserInvitation("256432da-d851-482f-8a56-91345fba454b",
                                                                  new Date(1552477761632L), null,
                                                                  new Date(1552477763372L),
                                                                  "a41e477c-e831-43b1-b8c6-513ccfb2f80c", null,
                                                                  new Date(1552477762782L),
                                                                  "af67187d-efbb-435d-8ddf-4d842fbca6c2");
        assertFalse(userinvitationInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("ed69911d-1806-4a52-ab14-44d3fe0a0486",
                                                                new Date(1552477760005L),
                                                                "c8cc9f90-6fa1-4aaa-b198-ddf25f9550ef",
                                                                new Date(1552477760245L),
                                                                "4d7b3f16-de6a-491f-8a6f-2f964eb1ffd3", null,
                                                                new Date(1552477760369L),
                                                                "b08e4584-1cf0-40be-811d-62e362d79db8");
            UserInvitation userinvitation2 = new UserInvitation("ed69911d-1806-4a52-ab14-44d3fe0a0486",
                                                                new Date(1552477760005L),
                                                                "c8cc9f90-6fa1-4aaa-b198-ddf25f9550ef",
                                                                new Date(1552477760245L),
                                                                "4d7b3f16-de6a-491f-8a6f-2f964eb1ffd3", null,
                                                                new Date(1552477760369L),
                                                                "b08e4584-1cf0-40be-811d-62e362d79db8");
            UserInvitation userinvitation3 = new UserInvitation("7dd1dc5e-7624-4f54-8ddf-832921993002",
                                                                new Date(1552477759686L),
                                                                "a06a8052-13d2-42a5-bfe1-91d68daf8366",
                                                                new Date(1552477762362L),
                                                                "5b0292a9-23d0-4413-8ee2-565d25139ea6", null,
                                                                new Date(1552477765338L),
                                                                "586411aa-b95e-42ea-90e9-e4660a2036ec");
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotNull(userinvitation3);
            assertNotSame(userinvitation2, userinvitation1);
            assertNotSame(userinvitation3, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation1, userinvitation2);
            assertEquals(userinvitation1, userinvitation1);
            assertFalse(userinvitation1.equals(null));
            assertNotEquals(userinvitation3, userinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
