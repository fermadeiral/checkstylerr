// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEnrollment.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEnrollment {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEnrollment deviceenrollment1 = new DeviceEnrollment("00bf8ee9-363b-4bcb-a7c2-62b437c690fd",
                                                                      new Date(1552477760943L),
                                                                      new Date(1552477766355L),
                                                                      "lH6qo5uFlipC00TlICFYkaSf2ra85q28",
                                                                      "A-0w093WnvEaILo9zlp2qwxs6cNcQ8539qP:Z9iR0sB:a:1x1rINRTsX78Pu27HLHRY891u8CgF6u5KkfRVe3PSL626pCQ0SL",
                                                                      new Date(1552477763871L),
                                                                      "7NLU0O0l872u8sGQH4q784w6s4Hy42WF");
            DeviceEnrollment deviceenrollment2 = deviceenrollment1.clone();
            assertNotNull(deviceenrollment1);
            assertNotNull(deviceenrollment2);
            assertNotSame(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEnrollment deviceenrollment1 = new DeviceEnrollment("c297d51d-69c5-4120-8fdb-3d27743946e5",
                                                                      new Date(1552477760102L),
                                                                      new Date(1552477762592L),
                                                                      "Zc90i395y6EEG31idAaqZ9M53noOjEKN",
                                                                      "A-f6mm1eza8v38jzZ0sg63e09b06Z9ZoIzPvN5O0kNmy:y1hKO:D5NdOmw:vTss0V219hfnm4DkI2Owf1cT2aLl5OP8F4aiZn",
                                                                      new Date(1552477758197L),
                                                                      "5d1LZvf12983XYL6psyIi5SDhH53Ym5L");
            DeviceEnrollment deviceenrollment2 = new DeviceEnrollment("c297d51d-69c5-4120-8fdb-3d27743946e5",
                                                                      new Date(1552477760102L),
                                                                      new Date(1552477762592L),
                                                                      "Zc90i395y6EEG31idAaqZ9M53noOjEKN",
                                                                      "A-f6mm1eza8v38jzZ0sg63e09b06Z9ZoIzPvN5O0kNmy:y1hKO:D5NdOmw:vTss0V219hfnm4DkI2Owf1cT2aLl5OP8F4aiZn",
                                                                      new Date(1552477758197L),
                                                                      "5d1LZvf12983XYL6psyIi5SDhH53Ym5L");
            assertNotNull(deviceenrollment1);
            assertNotNull(deviceenrollment2);
            assertNotSame(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2.hashCode(), deviceenrollment1.hashCode());
            int hashCode = deviceenrollment1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceenrollment1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEnrollment deviceenrollment = new DeviceEnrollment("199b1a6f-d8f9-4fba-8055-7baf5bc5edf7",
                                                                 new Date(1552477762765L), new Date(1552477760372L),
                                                                 "F0h11U17wY26sZB4617n95w4Y54hP8WG",
                                                                 "A-V7j5d8U5ihUQh21pDr:v4wyJkZrQXbn3fuvp7x3BljIttNRhOJ6h4670bTmzUyqPXvG6G1qQHY94hdEMzm39:Q26b9bevWh",
                                                                 new Date(1552477763807L),
                                                                 "7a0WPuobd0LFmm9t72vH15ac7Q2Yk8Bq");
        assertTrue(deviceenrollment.isValid());
        DeviceEnrollment deviceenrollmentInvalid = new DeviceEnrollment("7dd88344-b21a-4d81-8cba-4b0b06e28d59",
                                                                        new Date(1552477766556L),
                                                                        new Date(1552477767207L),
                                                                        "]L8&1\u0011XX1EMQf?TOUJ8XX1@cg_XvMQ\u0014Uyx4>Tà´™44oå…¦\u001e1H<4U418QD8=OUUOgI`O)",
                                                                        null, new Date(1552477759492L),
                                                                        "HdFJmd7tUHOÔ¥Uâ‹†HdPjJOWrhæ?”JNHNm7\u0010r=PhSDrja\u0015Hfì¹³rujj7jrr7H7J7ZHRH^J\u0019");
        assertFalse(deviceenrollmentInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEnrollment deviceenrollment1 = new DeviceEnrollment("a573692e-0635-4cd2-b200-2b369e9ea075",
                                                                      new Date(1552477762490L),
                                                                      new Date(1552477760950L),
                                                                      "gKz8I63z2kq6S7EA9D1F748NtDUTTzzQ",
                                                                      "A-BScoxUo559lV93067dlJ38CgP618OR9TA8a6:X185Y8umTiLuQxsl4ejV0dHqM88rPy0UKo67DqYXQ99tI68MZMglo3bYia",
                                                                      new Date(1552477764835L),
                                                                      "2P05fMGS8VVhxA9gILgzwF2Eg0gAC0EP");
            DeviceEnrollment deviceenrollment2 = new DeviceEnrollment("a573692e-0635-4cd2-b200-2b369e9ea075",
                                                                      new Date(1552477762490L),
                                                                      new Date(1552477760950L),
                                                                      "gKz8I63z2kq6S7EA9D1F748NtDUTTzzQ",
                                                                      "A-BScoxUo559lV93067dlJ38CgP618OR9TA8a6:X185Y8umTiLuQxsl4ejV0dHqM88rPy0UKo67DqYXQ99tI68MZMglo3bYia",
                                                                      new Date(1552477764835L),
                                                                      "2P05fMGS8VVhxA9gILgzwF2Eg0gAC0EP");
            DeviceEnrollment deviceenrollment3 = new DeviceEnrollment("febb9df6-1899-4876-a0c0-1ddcc30734ab",
                                                                      new Date(1552477763399L),
                                                                      new Date(1552477765534L),
                                                                      "1ZMwZPi7reJbkVu754u9SHT7GTusU8r3",
                                                                      "A-nZf9xcKtw53jUugN32kEVGecfLOA91IOWu95URR:Lemn:7nifp77pk4iR13Uo2p6fv23kNL2r8mkaV4de31FmHD6i6hDrz5",
                                                                      new Date(1552477765219L),
                                                                      "5HB0caFvZ10wzPW30u4w2Wj1G88A2AXa");
            assertNotNull(deviceenrollment1);
            assertNotNull(deviceenrollment2);
            assertNotNull(deviceenrollment3);
            assertNotSame(deviceenrollment2, deviceenrollment1);
            assertNotSame(deviceenrollment3, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment1, deviceenrollment2);
            assertEquals(deviceenrollment1, deviceenrollment1);
            assertFalse(deviceenrollment1.equals(null));
            assertNotEquals(deviceenrollment3, deviceenrollment1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
