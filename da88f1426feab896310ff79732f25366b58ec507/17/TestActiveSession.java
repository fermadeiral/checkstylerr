// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model ActiveSession.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestActiveSession {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ActiveSession activesession1 = new ActiveSession("f80405f2-4ede-4eb0-b974-8eb1b4d76056",
                                                             "210d2ee5-ead1-4f26-a9bd-0b21dae7f544",
                                                             new Date(1552477762584L),
                                                             "0f9cd260-4e9c-4af3-b789-cd6817093c66",
                                                             "3f1ceee3-f562-4df8-a335-78b980cff27a");
            ActiveSession activesession2 = activesession1.clone();
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotSame(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ActiveSession activesession1 = new ActiveSession("d265c167-058d-415e-9f3d-55ceed93660c",
                                                             "a6cd0814-e4c6-4d81-a366-ad08b86d622e",
                                                             new Date(1552477762725L),
                                                             "09dd8517-176c-45b9-a72b-3276e7c9ef27",
                                                             "c2cad1fd-7731-4212-aff2-585513ea8140");
            ActiveSession activesession2 = new ActiveSession("d265c167-058d-415e-9f3d-55ceed93660c",
                                                             "a6cd0814-e4c6-4d81-a366-ad08b86d622e",
                                                             new Date(1552477762725L),
                                                             "09dd8517-176c-45b9-a72b-3276e7c9ef27",
                                                             "c2cad1fd-7731-4212-aff2-585513ea8140");
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotSame(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession2.hashCode(), activesession1.hashCode());
            int hashCode = activesession1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, activesession1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ActiveSession activesession = new ActiveSession("211875a9-7850-4d86-b355-708aa25b3a82",
                                                        "8f381354-77eb-4f35-a06d-24896b0afa54",
                                                        new Date(1552477759669L),
                                                        "cff68af5-71c1-4e6b-a8df-bd4418859cdb",
                                                        "020a0e0c-2065-4dc1-92bb-66f8fb91bf8a");
        assertTrue(activesession.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ActiveSession activesession1 = new ActiveSession("2aded86a-d1b9-41da-afc5-812b0f9c6886",
                                                             "59a69358-207d-4c37-9ae6-e13bbdf1cc1d",
                                                             new Date(1552477762131L),
                                                             "4010a2c4-0e89-4b97-bd2b-2518f61275ce",
                                                             "317e4f6b-a4dd-4f8e-a638-72806362b0a7");
            ActiveSession activesession2 = new ActiveSession("2aded86a-d1b9-41da-afc5-812b0f9c6886",
                                                             "59a69358-207d-4c37-9ae6-e13bbdf1cc1d",
                                                             new Date(1552477762131L),
                                                             "4010a2c4-0e89-4b97-bd2b-2518f61275ce",
                                                             "317e4f6b-a4dd-4f8e-a638-72806362b0a7");
            ActiveSession activesession3 = new ActiveSession("9214d8fa-e64a-486e-8d88-f7bc0512907d",
                                                             "655b37d3-561f-49a8-b939-cc4cf178c158",
                                                             new Date(1552477766383L),
                                                             "6c2f03c0-b331-422a-8497-7d320089d545",
                                                             "6757df33-b02a-495f-b1fb-65f375d8b846");
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotNull(activesession3);
            assertNotSame(activesession2, activesession1);
            assertNotSame(activesession3, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession1, activesession2);
            assertEquals(activesession1, activesession1);
            assertFalse(activesession1.equals(null));
            assertNotEquals(activesession3, activesession1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
