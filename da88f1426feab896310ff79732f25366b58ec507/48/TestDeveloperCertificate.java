// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.security.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeveloperCertificate.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeveloperCertificate {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("c3ea408d-d720-49e8-9162-2a0473394192",
                                                                                  "90fa0ab1-35e8-414b-8fb4-76209be83f53",
                                                                                  new Date(1552477762751L),
                                                                                  "932c1431-b571-4abe-af72-8d21ac236f89",
                                                                                  "d54293ce-df63-4da9-9860-72f719969a6c",
                                                                                  "55bb861f-36fb-4a94-843a-c99fd2f12d32",
                                                                                  "9e52afff-d869-4dfa-bab5-a3ac8de37570");
            DeveloperCertificate developercertificate2 = developercertificate1.clone();
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("3d613b0a-2f85-4eca-abe4-4461fb424baa",
                                                                                  "65536304-f710-4323-8a90-f3e397cc6a32",
                                                                                  new Date(1552477759404L),
                                                                                  "0255c4af-c764-41be-b17b-bd3bfe507bb4",
                                                                                  "d34ff117-dadc-4059-af57-405cd96ae41b",
                                                                                  "32f8963e-9b72-4fe6-a01f-4c7728c46385",
                                                                                  "41100c23-fd9a-4466-b081-4129339f9c56");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("3d613b0a-2f85-4eca-abe4-4461fb424baa",
                                                                                  "65536304-f710-4323-8a90-f3e397cc6a32",
                                                                                  new Date(1552477759404L),
                                                                                  "0255c4af-c764-41be-b17b-bd3bfe507bb4",
                                                                                  "d34ff117-dadc-4059-af57-405cd96ae41b",
                                                                                  "32f8963e-9b72-4fe6-a01f-4c7728c46385",
                                                                                  "41100c23-fd9a-4466-b081-4129339f9c56");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2.hashCode(), developercertificate1.hashCode());
            int hashCode = developercertificate1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, developercertificate1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeveloperCertificate developercertificate = new DeveloperCertificate("c194ae27-226a-4a8c-ae4a-44c8b2134793",
                                                                             "a9958b0c-4b46-40f0-a5ba-2ed3a9e27c2e",
                                                                             new Date(1552477766244L),
                                                                             "29f4af0d-e3af-4884-9f6a-70be3b5e93c9",
                                                                             "99568461-ffb2-45f0-a243-a51b27d3faeb",
                                                                             "a967b178-85bd-40d0-9404-13bd1504b80e",
                                                                             "bac18afe-4f84-48d8-aa53-b685c8716785");
        assertTrue(developercertificate.isValid());
        DeveloperCertificate developercertificateInvalid = new DeveloperCertificate("8b7b537b-898d-4095-8bd4-92c1da90a7ef",
                                                                                    "712fb390-4adf-49fe-aaf3-7252d4cc923b",
                                                                                    new Date(1552477761586L),
                                                                                    "a16a0033-7d29-4c1b-bc30-3487d68a69a4",
                                                                                    "ef3a458b-5593-46fc-89d2-b82bc6a6ce79",
                                                                                    null,
                                                                                    "37fa9d14-9bba-424e-ac0b-bb73a2ec3962");
        assertFalse(developercertificateInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("4774aaa8-e168-4182-a54f-a1c3f3b2f50a",
                                                                                  "ce12e7f0-b1fd-4007-a605-bf96f3fad1b5",
                                                                                  new Date(1552477757871L),
                                                                                  "6e3e2596-6a22-49a6-ba34-ae091bffc93a",
                                                                                  "043af17d-5d75-4eaf-8c74-86e5e5c48b8d",
                                                                                  "9afd0d4b-0f62-467e-a3e1-9546c252f265",
                                                                                  "b550cfb9-3916-4da2-9519-0e60619a93c4");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("4774aaa8-e168-4182-a54f-a1c3f3b2f50a",
                                                                                  "ce12e7f0-b1fd-4007-a605-bf96f3fad1b5",
                                                                                  new Date(1552477757871L),
                                                                                  "6e3e2596-6a22-49a6-ba34-ae091bffc93a",
                                                                                  "043af17d-5d75-4eaf-8c74-86e5e5c48b8d",
                                                                                  "9afd0d4b-0f62-467e-a3e1-9546c252f265",
                                                                                  "b550cfb9-3916-4da2-9519-0e60619a93c4");
            DeveloperCertificate developercertificate3 = new DeveloperCertificate("c2ff66a3-ffcd-4e84-8499-d04d7e88e941",
                                                                                  "edc71334-10be-4ac3-a7ac-7924d9c76b41",
                                                                                  new Date(1552477761522L),
                                                                                  "5d3e4b44-633a-4459-8b40-1a486613c602",
                                                                                  "d8bc8736-f837-41ae-b8ec-894afb0edae3",
                                                                                  "13ed5bf9-86f0-45b7-9742-7b481cb1f92e",
                                                                                  "0cf44136-5c5f-452f-92c3-dd0156bc6678");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotNull(developercertificate3);
            assertNotSame(developercertificate2, developercertificate1);
            assertNotSame(developercertificate3, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate1, developercertificate2);
            assertEquals(developercertificate1, developercertificate1);
            assertFalse(developercertificate1.equals(null));
            assertNotEquals(developercertificate3, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
