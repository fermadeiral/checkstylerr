// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEvents.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEvents {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1552477766451L), null,
                                                          new Date(1552477764981L),
                                                          "cb0fc31b-d032-4108-ba45-6cdea76d4337",
                                                          "91e73ccf-85b0-4ecb-b02c-f299ff159cc0",
                                                          "0bd13695-a58f-401f-a12b-f8c32c0f2b3b",
                                                          "dcfefd81-bc21-4e36-9351-cd0715258693",
                                                          "b9c963a6-3500-4143-8ac1-428e507cc0f3",
                                                          "4cb9239b-f0cf-47c9-ae15-35dbd72733e6", false);
            DeviceEvents deviceevents2 = deviceevents1.clone();
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1552477758259L), null,
                                                          new Date(1552477764463L),
                                                          "f156f119-e5d0-4599-b3f5-1e7b3199f3e0",
                                                          "5b1b09f5-f243-44da-9d29-c8369e981dce",
                                                          "666d4acd-a304-49bd-bc88-98a24f24635a",
                                                          "71748df3-adb8-46db-8475-5773caaf2c2f",
                                                          "503a77b1-ddfd-4f6f-8832-6e503ced8804",
                                                          "55562ed4-c572-4c26-893a-6c6b2b8337cb", false);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1552477758259L), null,
                                                          new Date(1552477764463L),
                                                          "f156f119-e5d0-4599-b3f5-1e7b3199f3e0",
                                                          "5b1b09f5-f243-44da-9d29-c8369e981dce",
                                                          "666d4acd-a304-49bd-bc88-98a24f24635a",
                                                          "71748df3-adb8-46db-8475-5773caaf2c2f",
                                                          "503a77b1-ddfd-4f6f-8832-6e503ced8804",
                                                          "55562ed4-c572-4c26-893a-6c6b2b8337cb", false);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2.hashCode(), deviceevents1.hashCode());
            int hashCode = deviceevents1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceevents1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEvents deviceevents = new DeviceEvents(null, new Date(1552477760412L), null, new Date(1552477760142L),
                                                     "ed3f3b9e-15dc-465f-8f95-9ae3cc71f245",
                                                     "491c3b46-89c0-4238-883d-31f110276a7c",
                                                     "2c5e34db-4d70-451a-960d-b5b70408b2dc",
                                                     "d07521d1-996c-47eb-9627-77d063dee4a7",
                                                     "750ce462-0a70-4c26-bf42-6622f2c3f565",
                                                     "0f56531c-2cc8-43cb-9f0b-05b9b152310e", true);
        assertTrue(deviceevents.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1552477763741L), null,
                                                          new Date(1552477766557L),
                                                          "c4c64715-2712-4287-a0b4-65212682fdcf",
                                                          "63128ab0-bcb6-49a5-8e37-ad8c53d78c00",
                                                          "3925bf6f-23cd-4bee-97c3-d9dc81105281",
                                                          "3452d2dc-2d05-4d0b-ae8c-108fc5766160",
                                                          "ca44fff0-992b-4377-b12a-e11f258aba33",
                                                          "f3643ef6-4f9a-46e4-bd1e-d93c7f29740a", false);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1552477763741L), null,
                                                          new Date(1552477766557L),
                                                          "c4c64715-2712-4287-a0b4-65212682fdcf",
                                                          "63128ab0-bcb6-49a5-8e37-ad8c53d78c00",
                                                          "3925bf6f-23cd-4bee-97c3-d9dc81105281",
                                                          "3452d2dc-2d05-4d0b-ae8c-108fc5766160",
                                                          "ca44fff0-992b-4377-b12a-e11f258aba33",
                                                          "f3643ef6-4f9a-46e4-bd1e-d93c7f29740a", false);
            DeviceEvents deviceevents3 = new DeviceEvents(null, new Date(1552477763928L), null,
                                                          new Date(1552477758308L),
                                                          "55aaeea7-d991-481c-bd2b-d1118c53535c",
                                                          "6de20451-73cc-445e-a79c-7408c3a81159",
                                                          "841f16db-dc29-4e1e-b583-7e26d0cedee4",
                                                          "763fa9b8-e3fc-4261-b06a-d32b167d21c8",
                                                          "9b50acfe-5b0a-4b32-b707-dee8192bf202",
                                                          "c6864029-d7da-4517-9e7e-2898d1f740c6", false);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotNull(deviceevents3);
            assertNotSame(deviceevents2, deviceevents1);
            assertNotSame(deviceevents3, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents1, deviceevents2);
            assertEquals(deviceevents1, deviceevents1);
            assertFalse(deviceevents1.equals(null));
            assertNotEquals(deviceevents3, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
