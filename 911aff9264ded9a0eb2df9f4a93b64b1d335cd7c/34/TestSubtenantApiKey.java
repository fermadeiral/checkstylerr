// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantApiKey.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantApiKey {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("ebb6e571ba299e09d8e8859accae6efa",
                                                                   new Date(1558003281359L), -65,
                                                                   "ebb6e571ba299e09d8e8859accae6efa",
                                                                   "c1c221d1-4e98-4e34-b85e-73921969498a", -77,
                                                                   "6a0f8d72-38da-46f4-a105-66cb3c3ef7db",
                                                                   "ebb6e571ba299e09d8e8859accae6efa",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1558003275861L));
            SubtenantApiKey subtenantapikey2 = subtenantapikey1.clone();
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("ebb6e571ba299e09d8e8859accae6efa",
                                                                   new Date(1558003274546L), -107,
                                                                   "ebb6e571ba299e09d8e8859accae6efa",
                                                                   "184f7eee-3904-4867-921b-e07c47b370d1", 96,
                                                                   "7bf5d663-348e-4f44-928b-b9220463031b",
                                                                   "ebb6e571ba299e09d8e8859accae6efa",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1558003281848L));
            SubtenantApiKey subtenantapikey2 = new SubtenantApiKey("ebb6e571ba299e09d8e8859accae6efa",
                                                                   new Date(1558003274546L), -107,
                                                                   "ebb6e571ba299e09d8e8859accae6efa",
                                                                   "184f7eee-3904-4867-921b-e07c47b370d1", 96,
                                                                   "7bf5d663-348e-4f44-928b-b9220463031b",
                                                                   "ebb6e571ba299e09d8e8859accae6efa",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1558003281848L));
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2.hashCode(), subtenantapikey1.hashCode());
            int hashCode = subtenantapikey1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantapikey1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantApiKey subtenantapikey = new SubtenantApiKey("ebb6e571ba299e09d8e8859accae6efa",
                                                              new Date(1558003278057L), 96,
                                                              "ebb6e571ba299e09d8e8859accae6efa",
                                                              "1d5dc7fb-045f-4171-af86-80ee0ec8308c", 107,
                                                              "56d9459e-989f-401c-86ac-16d0b274e8fc",
                                                              "ebb6e571ba299e09d8e8859accae6efa",
                                                              SubtenantApiKeyStatus.getDefault(),
                                                              new Date(1558003275305L));
        assertTrue(subtenantapikey.isValid());
        SubtenantApiKey subtenantapikeyInvalid = new SubtenantApiKey(null, new Date(1558003279600L), 76,
                                                                     "\u000143兲ᥢ3& ][[枠34P\u0006[43=44V44覠뺔ຫ&\b㘒\u001e\u001f餆S.4:F\t333!?3,!4Wᰓ(3O\u0004綱骾B3\u0012",
                                                                     "95f2a4f2-0d68-4385-be54-9ffa08a84c0b", -67, null,
                                                                     "\u000143兲ᥢ3& ][[枠34P\u0006[43=44V44覠뺔ຫ&\b㘒\u001e\u001f餆S.4:F\t333!?3,!4Wᰓ(3O\u0004綱骾B3\u0012",
                                                                     SubtenantApiKeyStatus.getDefault(),
                                                                     new Date(1558003273998L));
        assertFalse(subtenantapikeyInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("ebb6e571ba299e09d8e8859accae6efa",
                                                                   new Date(1558003274880L), 96,
                                                                   "ebb6e571ba299e09d8e8859accae6efa",
                                                                   "537969b2-fb2e-4982-aace-130317680097", 122,
                                                                   "465524d4-26b4-4e47-b579-c9e5db8eafd1",
                                                                   "ebb6e571ba299e09d8e8859accae6efa",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1558003280437L));
            SubtenantApiKey subtenantapikey2 = new SubtenantApiKey("ebb6e571ba299e09d8e8859accae6efa",
                                                                   new Date(1558003274880L), 96,
                                                                   "ebb6e571ba299e09d8e8859accae6efa",
                                                                   "537969b2-fb2e-4982-aace-130317680097", 122,
                                                                   "465524d4-26b4-4e47-b579-c9e5db8eafd1",
                                                                   "ebb6e571ba299e09d8e8859accae6efa",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1558003280437L));
            SubtenantApiKey subtenantapikey3 = new SubtenantApiKey("ebb6e571ba299e09d8e8859accae6efa",
                                                                   new Date(1558003280431L), -24,
                                                                   "ebb6e571ba299e09d8e8859accae6efa",
                                                                   "f0438d58-1e19-4089-9fd4-d501550df8da", -119,
                                                                   "1f3f659e-6c0c-4676-918f-7313cb083147",
                                                                   "ebb6e571ba299e09d8e8859accae6efa",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1558003279590L));
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotNull(subtenantapikey3);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertNotSame(subtenantapikey3, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey1, subtenantapikey2);
            assertEquals(subtenantapikey1, subtenantapikey1);
            assertFalse(subtenantapikey1.equals(null));
            assertNotEquals(subtenantapikey3, subtenantapikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
