// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEnrollmentDenial.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEnrollmentDenial {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("ebb6e571ba299e09d8e8859accae6efa",
                                                                                        new Date(1558003279639L),
                                                                                        "1844038d-14ed-45ef-a8b7-e39b6734a707",
                                                                                        "ebb6e571ba299e09d8e8859accae6efa",
                                                                                        "ebb6e571ba299e09d8e8859accae6efa");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = deviceenrollmentdenial1.clone();
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("ebb6e571ba299e09d8e8859accae6efa",
                                                                                        new Date(1558003281814L),
                                                                                        "c1ffc840-26ea-4a33-8e77-7632ee23215e",
                                                                                        "ebb6e571ba299e09d8e8859accae6efa",
                                                                                        "ebb6e571ba299e09d8e8859accae6efa");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = new DeviceEnrollmentDenial("ebb6e571ba299e09d8e8859accae6efa",
                                                                                        new Date(1558003281814L),
                                                                                        "c1ffc840-26ea-4a33-8e77-7632ee23215e",
                                                                                        "ebb6e571ba299e09d8e8859accae6efa",
                                                                                        "ebb6e571ba299e09d8e8859accae6efa");
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2.hashCode(), deviceenrollmentdenial1.hashCode());
            int hashCode = deviceenrollmentdenial1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceenrollmentdenial1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEnrollmentDenial deviceenrollmentdenial = new DeviceEnrollmentDenial("ebb6e571ba299e09d8e8859accae6efa",
                                                                                   new Date(1558003276481L),
                                                                                   "e9d081a1-b460-4810-bae1-5632564aeb2e",
                                                                                   "ebb6e571ba299e09d8e8859accae6efa",
                                                                                   "ebb6e571ba299e09d8e8859accae6efa");
        assertTrue(deviceenrollmentdenial.isValid());
        DeviceEnrollmentDenial deviceenrollmentdenialInvalid = new DeviceEnrollmentDenial("\u000143兲ᥢ3& ][[枠34P\u0006[43=44V44覠뺔ຫ&\b㘒\u001e\u001f餆S.4:F\t333!?3,!4Wᰓ(3O\u0004綱骾B3\u0012",
                                                                                          new Date(1558003282302L),
                                                                                          "75f554b1-ad1b-485f-aae7-daa7c87f9d26",
                                                                                          "\u000143兲ᥢ3& ][[枠34P\u0006[43=44V44覠뺔ຫ&\b㘒\u001e\u001f餆S.4:F\t333!?3,!4Wᰓ(3O\u0004綱骾B3\u0012",
                                                                                          "\u000143兲ᥢ3& ][[枠34P\u0006[43=44V44覠뺔ຫ&\b㘒\u001e\u001f餆S.4:F\t333!?3,!4Wᰓ(3O\u0004綱骾B3\u0012");
        assertFalse(deviceenrollmentdenialInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("ebb6e571ba299e09d8e8859accae6efa",
                                                                                        new Date(1558003278114L),
                                                                                        "2c7cf61e-d16b-489a-b42a-707eb4783808",
                                                                                        "ebb6e571ba299e09d8e8859accae6efa",
                                                                                        "ebb6e571ba299e09d8e8859accae6efa");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = new DeviceEnrollmentDenial("ebb6e571ba299e09d8e8859accae6efa",
                                                                                        new Date(1558003278114L),
                                                                                        "2c7cf61e-d16b-489a-b42a-707eb4783808",
                                                                                        "ebb6e571ba299e09d8e8859accae6efa",
                                                                                        "ebb6e571ba299e09d8e8859accae6efa");
            DeviceEnrollmentDenial deviceenrollmentdenial3 = new DeviceEnrollmentDenial("ebb6e571ba299e09d8e8859accae6efa",
                                                                                        new Date(1558003279158L),
                                                                                        "a0ea1d5a-7397-4a71-8a1a-01e6495b6e0c",
                                                                                        "ebb6e571ba299e09d8e8859accae6efa",
                                                                                        "ebb6e571ba299e09d8e8859accae6efa");
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotNull(deviceenrollmentdenial3);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertNotSame(deviceenrollmentdenial3, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial1, deviceenrollmentdenial2);
            assertEquals(deviceenrollmentdenial1, deviceenrollmentdenial1);
            assertFalse(deviceenrollmentdenial1.equals(null));
            assertNotEquals(deviceenrollmentdenial3, deviceenrollmentdenial1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
