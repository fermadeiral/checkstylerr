// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model User.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestUser {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            User user1 = new User("ebb6e571ba299e09d8e8859accae6efa", null, "1944e632-a5c4-4b6a-990e-5984762b2ff9",
                                  new Date(1558003274353L), 85, null, "04fae.2ae4a@fe361.fr", true,
                                  "0738c31d-2c2d-4a6f-ad37-183f6f426dab", "ebb6e571ba299e09d8e8859accae6efa", true,
                                  false, true, -77, null, null, "e4a54fe8-d5d2-4e13-8198-8d010675d280", -40,
                                  "e826616a-2b0a-42f3-86b7-06a3c533379e", UserStatus.getDefault(), null,
                                  new Date(1558003283374L), ",_2t7=kX6");
            User user2 = user1.clone();
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotSame(user2, user1);
            assertEquals(user2, user1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            User user1 = new User("ebb6e571ba299e09d8e8859accae6efa", null, "d6db8879-53ce-450a-8b3f-91b099517f7c",
                                  new Date(1558003281053L), 37, null, "58e57.f5acc@042d8.me", true,
                                  "7ac1bf3f-5a6a-4ffb-9dc5-a7933d723905", "ebb6e571ba299e09d8e8859accae6efa", false,
                                  false, false, 29, null, null, "5dab8265-96e8-46ce-8ecc-9f9410c83fe4", -38,
                                  "92c11149-0ca5-422b-b580-df20b13174d3", UserStatus.getDefault(), null,
                                  new Date(1558003282658L), ",_2t7=kX6");
            User user2 = new User("ebb6e571ba299e09d8e8859accae6efa", null, "d6db8879-53ce-450a-8b3f-91b099517f7c",
                                  new Date(1558003281053L), 37, null, "58e57.f5acc@042d8.me", true,
                                  "7ac1bf3f-5a6a-4ffb-9dc5-a7933d723905", "ebb6e571ba299e09d8e8859accae6efa", false,
                                  false, false, 29, null, null, "5dab8265-96e8-46ce-8ecc-9f9410c83fe4", -38,
                                  "92c11149-0ca5-422b-b580-df20b13174d3", UserStatus.getDefault(), null,
                                  new Date(1558003282658L), ",_2t7=kX6");
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotSame(user2, user1);
            assertEquals(user2, user1);
            assertEquals(user2.hashCode(), user1.hashCode());
            int hashCode = user1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, user1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        User user = new User("ebb6e571ba299e09d8e8859accae6efa", null, "266dd1a4-b8d6-4651-bc75-0d95f832c899",
                             new Date(1558003278550L), -116, null, "f8d9f.9bd59@93279.me", false,
                             "5bdc359d-f3b4-446a-b24f-a8e68426f2dd", "ebb6e571ba299e09d8e8859accae6efa", false, false,
                             false, 66, null, null, "482bb293-2502-49e1-8488-9153e18755c8", 54,
                             "93ead01d-f8f8-4ad7-b694-f6a0dde2a646", UserStatus.getDefault(), null,
                             new Date(1558003277144L), ",_2t7=kX6");
        assertTrue(user.isValid());
        User userInvalid = new User("\u000143å…²á¥¢3& ][[æž 34P\u0006[43=44V44è¦ ëº”àº«&\bã˜’\u001e\u001fé¤†S.4:F\t333!?3,!4Wá°“î´ƒ(3O\u0004ç¶±éª¾B3\u0012",
                                    null, "09566428-1f4f-4d2e-84ec-69190d9e47fb", new Date(1558003282219L), -63, null,
                                    null, false,
                                    "54b49951-4541-458a-a71c-e016fbc5f22a90c5f04a-8f20-4f7e-a4f8-62aeda5f40ab0bff0e53-f93e-459f-b7a1-1bd2a3c037b4",
                                    "\u000143å…²á¥¢3& ][[æž 34P\u0006[43=44V44è¦ ëº”àº«&\bã˜’\u001e\u001fé¤†S.4:F\t333!?3,!4Wá°“î´ƒ(3O\u0004ç¶±éª¾B3\u0012",
                                    true, false, true, -2, null, null, "ac45fedc-f2b0-4d57-a2b2-77d464a617e5", -88,
                                    "35a5f138-1bef-4bcc-9437-6728c46254401e8c17a9-2de8-4fca-98bc-428a88bfb6bf1e1eba36-aa8e-4322-99d0-0f6b1873d176",
                                    UserStatus.getDefault(), null, new Date(1558003279588L),
                                    "lg`É?Nm-5?+!î?–æ¤‰a4n\u0006Gp.<pV4/ì‡—V<^oQ&G0]<[\\\\?n3ji3^rï¦?1\fSâ¨¬L>-\u0013<Y4`naho$$");
        assertFalse(userInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            User user1 = new User("ebb6e571ba299e09d8e8859accae6efa", null, "a112d8df-a990-4447-b1e5-6941196a21bc",
                                  new Date(1558003276432L), -12, null, "225e2.d478f@25f03.me", true,
                                  "d3081fef-b58f-40bd-9e1f-28288a2e57f0", "ebb6e571ba299e09d8e8859accae6efa", false,
                                  false, false, 76, null, null, "154dd44e-9f26-419c-b093-f6d88281f2ee", 10,
                                  "5c6798ec-ac04-4bcd-86b8-ab4de2dd6245", UserStatus.getDefault(), null,
                                  new Date(1558003282454L), ",_2t7=kX6");
            User user2 = new User("ebb6e571ba299e09d8e8859accae6efa", null, "a112d8df-a990-4447-b1e5-6941196a21bc",
                                  new Date(1558003276432L), -12, null, "225e2.d478f@25f03.me", true,
                                  "d3081fef-b58f-40bd-9e1f-28288a2e57f0", "ebb6e571ba299e09d8e8859accae6efa", false,
                                  false, false, 76, null, null, "154dd44e-9f26-419c-b093-f6d88281f2ee", 10,
                                  "5c6798ec-ac04-4bcd-86b8-ab4de2dd6245", UserStatus.getDefault(), null,
                                  new Date(1558003282454L), ",_2t7=kX6");
            User user3 = new User("ebb6e571ba299e09d8e8859accae6efa", null, "a96c19fc-4b52-4270-b230-1cecb6fe568f",
                                  new Date(1558003275441L), -65, null, "4e6ed.e10a2@87e25.me", true,
                                  "7895e716-0353-4a62-9f5b-371b5e7dca2e", "ebb6e571ba299e09d8e8859accae6efa", false,
                                  false, false, -72, null, null, "a7eca535-28c2-4968-a117-0ea35248f08d", -36,
                                  "9f1117e8-35f9-4f24-a2c9-c48d1e3e993f", UserStatus.getDefault(), null,
                                  new Date(1558003281167L), ",_2t7=kX6");
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotNull(user3);
            assertNotSame(user2, user1);
            assertNotSame(user3, user1);
            assertEquals(user2, user1);
            assertEquals(user2, user1);
            assertEquals(user1, user2);
            assertEquals(user1, user1);
            assertFalse(user1.equals(null));
            assertNotEquals(user3, user1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
