// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.deviceupdate.model;

import static org.junit.Assert.*;

import com.arm.mbed.cloud.sdk.common.Order;
import com.arm.mbed.cloud.sdk.common.listing.ListOptionsEncoder;
import com.arm.mbed.cloud.sdk.common.listing.filtering.FilterOperator;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import org.junit.Test;

/**
 * Unit tests for Model FirmwareManifestListOptions.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestFirmwareManifestListOptions {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            FirmwareManifestListOptions firmwaremanifestlistoptions1 = new FirmwareManifestListOptions(Integer.valueOf(-3),
                                                                                                       Long.valueOf(-40),
                                                                                                       Order.getDefault(),
                                                                                                       "d66d24eb-9baf-46ea-8f72-0d583e45d221",
                                                                                                       null, null);
            FirmwareManifestListOptions firmwaremanifestlistoptions2 = firmwaremanifestlistoptions1.clone();
            assertNotNull(firmwaremanifestlistoptions1);
            assertNotNull(firmwaremanifestlistoptions2);
            assertNotSame(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the filters method.
     */
    @SuppressWarnings({ "boxing", "resource" })
    @Test
    public void testFilters() {
        try {
            FirmwareManifestListOptions option = new FirmwareManifestListOptions().inCreatedAts(Arrays.asList(new Date(1558003284884L),
                                                                                                              new Date(1558003277898L),
                                                                                                              new Date(1558003283635L),
                                                                                                              new Date(1558003276738L),
                                                                                                              new Date(1558003283074L),
                                                                                                              new Date(1558003277946L),
                                                                                                              new Date(1558003277160L),
                                                                                                              new Date(1558003275463L)))
                                                                                  .notInCreatedAts(Arrays.asList(new Date(1558003278561L),
                                                                                                                 new Date(1558003280264L),
                                                                                                                 new Date(1558003276397L),
                                                                                                                 new Date(1558003280223L),
                                                                                                                 new Date(1558003280731L),
                                                                                                                 new Date(1558003283767L),
                                                                                                                 new Date(1558003281511L),
                                                                                                                 new Date(1558003279420L)))
                                                                                  .lessThanCreatedAt(new Date(1558003279256L))
                                                                                  .greaterThanCreatedAt(new Date(1558003280149L))
                                                                                  .equalToName("4018fa7a-560c-42dc-a075-a2eb1cf5dc2c")
                                                                                  .notEqualToName("c87d22ec-9335-4741-b596-a105fe623051")
                                                                                  .inNames(Arrays.asList("2a9990a1-030f-4c59-b0ef-ffe47bb22963",
                                                                                                         "8f09a368-8ea1-42cf-a769-89f597f39cb1",
                                                                                                         "f2df51e3-37fd-4797-8cc3-60d472ac48e7",
                                                                                                         "01b16c7f-9475-4e4f-b41d-431891773960",
                                                                                                         "7d47e220-15ec-4a1f-986d-706ddcae6ee8",
                                                                                                         "1e18fba7-eb93-48c7-9bb0-e5fab3a1f9bc",
                                                                                                         "978f9b49-f673-4fbc-973c-eb51931adc33",
                                                                                                         "804e0a24-a528-4c8d-9515-de175e451a27"))
                                                                                  .notInNames(Arrays.asList("646d8f38-fb1a-4066-8d7e-922fca44245b",
                                                                                                            "a39df812-08fb-4ea6-b667-e49c1c72325d",
                                                                                                            "bcedb5eb-9af9-4ecd-b464-ab21a0d502a4"))
                                                                                  .equalToId("a99a8b99-2702-43c5-a1e6-1997de8d35f9")
                                                                                  .notEqualToId("35823c5f-b917-46f8-959f-64139cac9d42")
                                                                                  .inIds(Arrays.asList("22947279-a94e-418e-8c43-f0fe00a7b51d",
                                                                                                       "8129c20f-1bce-4eca-af68-f976b94c184b",
                                                                                                       "28657144-a561-438a-a64e-7d8b3c40ff21",
                                                                                                       "6bdacd08-48dc-4941-a63b-a88386fc9804",
                                                                                                       "985dca50-eb46-47b1-9c7b-9699a3ebdc57",
                                                                                                       "187d54ec-bfa5-4f72-8ec9-8d7758600a00",
                                                                                                       "3ec6763e-9d03-4feb-96c8-3a27994ca2ee",
                                                                                                       "c8131271-c37d-4110-84ea-1d98b065f1e4"))
                                                                                  .notInIds(Arrays.asList("8d212398-e434-4e51-9052-6c7b3052d98f",
                                                                                                          "f24179a2-9620-422d-959e-6507f749e3ec",
                                                                                                          "7c95251e-dd30-41a8-ab00-01c4e32785d9",
                                                                                                          "282500de-06a7-4196-8148-298ddf64e73c",
                                                                                                          "4ff8159a-a382-4160-a34d-2cd6d96118bb"))
                                                                                  .equalToDatafileUrl("f66ca59b-783e-4746-9538-742f89a4ccb3")
                                                                                  .notEqualToDatafileUrl("32b1df9e-27c3-42ea-9e1a-33a60ecd12a3")
                                                                                  .inDatafileUrls(Arrays.asList("75071b63-e32a-4e49-8c90-9a4b45ccf701",
                                                                                                                "21dc6235-bd5e-4b4c-9844-4a13a7b5f8c5"))
                                                                                  .notInDatafileUrls(Arrays.asList("a955464e-1a97-4d3e-8b48-7a70f87e0d54",
                                                                                                                   "f2e55200-bc7e-4225-aa93-79f5759ad3d7"))
                                                                                  .equalToDatafileSize(Long.valueOf(-77))
                                                                                  .notEqualToDatafileSize(Long.valueOf(92))
                                                                                  .inDatafileSizes(Arrays.asList(Long.valueOf(59),
                                                                                                                 Long.valueOf(-74),
                                                                                                                 Long.valueOf(-115),
                                                                                                                 Long.valueOf(14)))
                                                                                  .notInDatafileSizes(Arrays.asList(Long.valueOf(37),
                                                                                                                    Long.valueOf(-84),
                                                                                                                    Long.valueOf(-75),
                                                                                                                    Long.valueOf(21),
                                                                                                                    Long.valueOf(89),
                                                                                                                    Long.valueOf(-50)))
                                                                                  .equalToDeviceClass("94c63473-e875-414f-9fd7-a51b4466323f")
                                                                                  .notEqualToDeviceClass("123c6dfd-d935-40a6-b114-f6daefb4d0ab")
                                                                                  .inDeviceClass(Arrays.asList("f51204ec-54e1-4ab8-b874-ab5db3d92414",
                                                                                                               "2a50d3dc-b60d-49a9-b8c1-da7088efe8a3",
                                                                                                               "d9d14c42-c8e4-4829-a61c-e6a754538e44",
                                                                                                               "890667a5-0f0e-4126-af4a-4792eb65964b",
                                                                                                               "890e718c-30c5-41ca-9c5f-9b6beefada5d",
                                                                                                               "291a7f06-f82f-44c2-a8f0-a754bebebf63",
                                                                                                               "1bf401a4-4879-4fdf-b759-ccf32d554f03"))
                                                                                  .notInDeviceClass(Arrays.asList("d553a7d0-1a14-42c0-bc48-147c3e84e40c",
                                                                                                                  "8a3db797-70ff-4189-b96b-f178398a38d2",
                                                                                                                  "a3768f90-0c7e-4126-afbd-231f9e415bbb",
                                                                                                                  "2e4d4510-eee9-408b-9428-a50ce5229346",
                                                                                                                  "b6dd6bbb-5fde-478b-b49c-ef6d31572072",
                                                                                                                  "195449ad-f28a-4a24-abec-75e1101c79e9"))
                                                                                  .inTimestamps(Arrays.asList(new Date(1558003284505L),
                                                                                                              new Date(1558003282906L),
                                                                                                              new Date(1558003278893L),
                                                                                                              new Date(1558003280209L),
                                                                                                              new Date(1558003283993L)))
                                                                                  .notInTimestamps(Arrays.asList(new Date(1558003276806L),
                                                                                                                 new Date(1558003284860L),
                                                                                                                 new Date(1558003279551L),
                                                                                                                 new Date(1558003282812L),
                                                                                                                 new Date(1558003276186L),
                                                                                                                 new Date(1558003281060L)))
                                                                                  .lessThanTimestamp(new Date(1558003280534L))
                                                                                  .greaterThanTimestamp(new Date(1558003281321L))
                                                                                  .inUpdatedAts(Arrays.asList(new Date(1558003281374L)))
                                                                                  .notInUpdatedAts(Arrays.asList(new Date(1558003283263L),
                                                                                                                 new Date(1558003279820L),
                                                                                                                 new Date(1558003279001L),
                                                                                                                 new Date(1558003284954L)))
                                                                                  .lessThanUpdatedAt(new Date(1558003279138L))
                                                                                  .greaterThanUpdatedAt(new Date(1558003282047L))
                                                                                  .equalToDescription("23ea9822-7293-42d3-9a9e-4c30573014bf")
                                                                                  .notEqualToDescription("0cd25ecf-1845-4d68-9d15-4d0bc48a7da2")
                                                                                  .inDescriptions(Arrays.asList("b53f1d62-4926-4412-9e20-ede11c7b4d79",
                                                                                                                "c0775e08-a912-46ec-b246-26d046063839"))
                                                                                  .notInDescriptions(Arrays.asList("40747374-bb03-4f06-acb4-6087374ca006",
                                                                                                                   "d2df9a81-d817-4fa4-8545-2fe568a278a1",
                                                                                                                   "ffe08e65-06ce-4bed-b7b0-a4b0ac64fc62",
                                                                                                                   "ebdee6ac-01d1-478e-ad61-cb1fda143005",
                                                                                                                   "0179a7fe-19d6-4ff5-8314-9e79d199b8d9"));
            assertTrue(option.hasFilters());
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1558003284884L), new Date(1558003277898L), new Date(1558003283635L),
                                       new Date(1558003276738L), new Date(1558003283074L), new Date(1558003277946L),
                                       new Date(1558003277160L), new Date(1558003275463L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1558003278561L), new Date(1558003280264L), new Date(1558003276397L),
                                       new Date(1558003280223L), new Date(1558003280731L), new Date(1558003283767L),
                                       new Date(1558003281511L), new Date(1558003279420L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                        FilterOperator.LESS_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1558003279256L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1558003280149L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME, FilterOperator.EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("4018fa7a-560c-42dc-a075-a2eb1cf5dc2c",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("c87d22ec-9335-4741-b596-a105fe623051",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME, FilterOperator.IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("2a9990a1-030f-4c59-b0ef-ffe47bb22963", "8f09a368-8ea1-42cf-a769-89f597f39cb1",
                                       "f2df51e3-37fd-4797-8cc3-60d472ac48e7", "01b16c7f-9475-4e4f-b41d-431891773960",
                                       "7d47e220-15ec-4a1f-986d-706ddcae6ee8", "1e18fba7-eb93-48c7-9bb0-e5fab3a1f9bc",
                                       "978f9b49-f673-4fbc-973c-eb51931adc33", "804e0a24-a528-4c8d-9515-de175e451a27"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("646d8f38-fb1a-4066-8d7e-922fca44245b", "a39df812-08fb-4ea6-b667-e49c1c72325d",
                                       "bcedb5eb-9af9-4ecd-b464-ab21a0d502a4"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID, FilterOperator.EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("a99a8b99-2702-43c5-a1e6-1997de8d35f9",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("35823c5f-b917-46f8-959f-64139cac9d42",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID, FilterOperator.IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("22947279-a94e-418e-8c43-f0fe00a7b51d", "8129c20f-1bce-4eca-af68-f976b94c184b",
                                       "28657144-a561-438a-a64e-7d8b3c40ff21", "6bdacd08-48dc-4941-a63b-a88386fc9804",
                                       "985dca50-eb46-47b1-9c7b-9699a3ebdc57", "187d54ec-bfa5-4f72-8ec9-8d7758600a00",
                                       "3ec6763e-9d03-4feb-96c8-3a27994ca2ee", "c8131271-c37d-4110-84ea-1d98b065f1e4"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("8d212398-e434-4e51-9052-6c7b3052d98f", "f24179a2-9620-422d-959e-6507f749e3ec",
                                       "7c95251e-dd30-41a8-ab00-01c4e32785d9", "282500de-06a7-4196-8148-298ddf64e73c",
                                       "4ff8159a-a382-4160-a34d-2cd6d96118bb"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("f66ca59b-783e-4746-9538-742f89a4ccb3",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("32b1df9e-27c3-42ea-9e1a-33a60ecd12a3",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("75071b63-e32a-4e49-8c90-9a4b45ccf701", "21dc6235-bd5e-4b4c-9844-4a13a7b5f8c5"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("a955464e-1a97-4d3e-8b48-7a70f87e0d54", "f2e55200-bc7e-4225-aa93-79f5759ad3d7"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(-77),
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    Long.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(92),
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                       Long.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(59), Long.valueOf(-74), Long.valueOf(-115), Long.valueOf(14)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                        FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(37), Long.valueOf(-84), Long.valueOf(-75), Long.valueOf(21),
                                       Long.valueOf(89), Long.valueOf(-50)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS, FilterOperator.EQUAL));
            assertNotNull(option.getDeviceClassFilters());
            assertEquals("94c63473-e875-414f-9fd7-a51b4466323f",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDeviceClassFilters());
            assertEquals("123c6dfd-d935-40a6-b114-f6daefb4d0ab",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS, FilterOperator.IN));
            assertNotNull(option.getDeviceClassFilters());
            assertEquals(Arrays.asList("f51204ec-54e1-4ab8-b874-ab5db3d92414", "2a50d3dc-b60d-49a9-b8c1-da7088efe8a3",
                                       "d9d14c42-c8e4-4829-a61c-e6a754538e44", "890667a5-0f0e-4126-af4a-4792eb65964b",
                                       "890e718c-30c5-41ca-9c5f-9b6beefada5d", "291a7f06-f82f-44c2-a8f0-a754bebebf63",
                                       "1bf401a4-4879-4fdf-b759-ccf32d554f03"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS, FilterOperator.NOT_IN));
            assertNotNull(option.getDeviceClassFilters());
            assertEquals(Arrays.asList("d553a7d0-1a14-42c0-bc48-147c3e84e40c", "8a3db797-70ff-4189-b96b-f178398a38d2",
                                       "a3768f90-0c7e-4126-afbd-231f9e415bbb", "2e4d4510-eee9-408b-9428-a50ce5229346",
                                       "b6dd6bbb-5fde-478b-b49c-ef6d31572072", "195449ad-f28a-4a24-abec-75e1101c79e9"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP, FilterOperator.IN));
            assertNotNull(option.getTimestampFilters());
            assertEquals(Arrays.asList(new Date(1558003284505L), new Date(1558003282906L), new Date(1558003278893L),
                                       new Date(1558003280209L), new Date(1558003283993L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP, FilterOperator.NOT_IN));
            assertNotNull(option.getTimestampFilters());
            assertEquals(Arrays.asList(new Date(1558003276806L), new Date(1558003284860L), new Date(1558003279551L),
                                       new Date(1558003282812L), new Date(1558003276186L), new Date(1558003281060L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP, FilterOperator.LESS_THAN));
            assertNotNull(option.getTimestampFilters());
            assertEquals(new Date(1558003280534L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getTimestampFilters());
            assertEquals(new Date(1558003281321L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1558003281374L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1558003283263L), new Date(1558003279820L), new Date(1558003279001L),
                                       new Date(1558003284954L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                        FilterOperator.LESS_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1558003279138L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1558003282047L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("23ea9822-7293-42d3-9a9e-4c30573014bf",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("0cd25ecf-1845-4d68-9d15-4d0bc48a7da2",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("b53f1d62-4926-4412-9e20-ede11c7b4d79", "c0775e08-a912-46ec-b246-26d046063839"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("40747374-bb03-4f06-acb4-6087374ca006", "d2df9a81-d817-4fa4-8545-2fe568a278a1",
                                       "ffe08e65-06ce-4bed-b7b0-a4b0ac64fc62", "ebdee6ac-01d1-478e-ad61-cb1fda143005",
                                       "0179a7fe-19d6-4ff5-8314-9e79d199b8d9"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    List.class, option));
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            FirmwareManifestListOptions firmwaremanifestlistoptions1 = new FirmwareManifestListOptions(Integer.valueOf(-26),
                                                                                                       Long.valueOf(2),
                                                                                                       Order.getDefault(),
                                                                                                       "ef4144b2-e932-48ff-b616-86c17bc85295",
                                                                                                       null, null);
            FirmwareManifestListOptions firmwaremanifestlistoptions2 = new FirmwareManifestListOptions(Integer.valueOf(-26),
                                                                                                       Long.valueOf(2),
                                                                                                       Order.getDefault(),
                                                                                                       "ef4144b2-e932-48ff-b616-86c17bc85295",
                                                                                                       null, null);
            assertNotNull(firmwaremanifestlistoptions1);
            assertNotNull(firmwaremanifestlistoptions2);
            assertNotSame(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2.hashCode(), firmwaremanifestlistoptions1.hashCode());
            int hashCode = firmwaremanifestlistoptions1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, firmwaremanifestlistoptions1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            FirmwareManifestListOptions firmwaremanifestlistoptions1 = new FirmwareManifestListOptions(Integer.valueOf(-89),
                                                                                                       Long.valueOf(-23),
                                                                                                       Order.getDefault(),
                                                                                                       "ce138ac3-db97-459b-b43a-011752c0edd7",
                                                                                                       null, null);
            FirmwareManifestListOptions firmwaremanifestlistoptions2 = new FirmwareManifestListOptions(Integer.valueOf(-89),
                                                                                                       Long.valueOf(-23),
                                                                                                       Order.getDefault(),
                                                                                                       "ce138ac3-db97-459b-b43a-011752c0edd7",
                                                                                                       null, null);
            FirmwareManifestListOptions firmwaremanifestlistoptions3 = new FirmwareManifestListOptions(Integer.valueOf(12),
                                                                                                       Long.valueOf(-52),
                                                                                                       Order.getDefault(),
                                                                                                       "ccfb2ec8-cb79-463a-8d72-0f111b82ed6e",
                                                                                                       null, null);
            assertNotNull(firmwaremanifestlistoptions1);
            assertNotNull(firmwaremanifestlistoptions2);
            assertNotNull(firmwaremanifestlistoptions3);
            assertNotSame(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertNotSame(firmwaremanifestlistoptions3, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions1, firmwaremanifestlistoptions2);
            assertEquals(firmwaremanifestlistoptions1, firmwaremanifestlistoptions1);
            assertFalse(firmwaremanifestlistoptions1.equals(null));
            assertNotEquals(firmwaremanifestlistoptions3, firmwaremanifestlistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
