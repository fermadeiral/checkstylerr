// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantUser.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantUser {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("ebb6e571ba299e09d8e8859accae6efa", null,
                                                             "5f8ecce3-a9d0-4f68-8027-5ba5bda34cf9",
                                                             new Date(1558003279120L), 45, null, "d1a23.a78da@50a6d.me",
                                                             true, "fe62b1cd-daf0-444f-8dae-41951186ca01",
                                                             "ebb6e571ba299e09d8e8859accae6efa", true, false, true, 108,
                                                             null, null, "55a92a70-c4a8-4174-a5fd-f121359cf60f", 101,
                                                             "ccd0084d-c5d7-4117-a9f0-58b2274c1212",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1558003282414L), ",_2t7=kX6");
            SubtenantUser subtenantuser2 = subtenantuser1.clone();
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("ebb6e571ba299e09d8e8859accae6efa", null,
                                                             "7990dd59-95f5-4ca4-9cb9-049272931137",
                                                             new Date(1558003283376L), -93, null,
                                                             "f256b.80609@507f9.me", true,
                                                             "8550a88c-47c8-47f2-94fa-d5630ed7d792",
                                                             "ebb6e571ba299e09d8e8859accae6efa", false, true, true, -25,
                                                             null, null, "070c8c56-0485-4725-965d-6e478e87093e", -94,
                                                             "6ca3e15b-4d60-4c5b-bf19-298f61f8ab9e",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1558003282781L), ",_2t7=kX6");
            SubtenantUser subtenantuser2 = new SubtenantUser("ebb6e571ba299e09d8e8859accae6efa", null,
                                                             "7990dd59-95f5-4ca4-9cb9-049272931137",
                                                             new Date(1558003283376L), -93, null,
                                                             "f256b.80609@507f9.me", true,
                                                             "8550a88c-47c8-47f2-94fa-d5630ed7d792",
                                                             "ebb6e571ba299e09d8e8859accae6efa", false, true, true, -25,
                                                             null, null, "070c8c56-0485-4725-965d-6e478e87093e", -94,
                                                             "6ca3e15b-4d60-4c5b-bf19-298f61f8ab9e",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1558003282781L), ",_2t7=kX6");
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2.hashCode(), subtenantuser1.hashCode());
            int hashCode = subtenantuser1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantuser1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantUser subtenantuser = new SubtenantUser("ebb6e571ba299e09d8e8859accae6efa", null,
                                                        "40e04e5d-6a7f-4290-a3a7-8a4f8ee535b2",
                                                        new Date(1558003278126L), 118, null, "5d424.57b85@cdfd8.me",
                                                        true, "4078eb87-c74b-4a95-820a-c7046113883b",
                                                        "ebb6e571ba299e09d8e8859accae6efa", false, false, false, 60,
                                                        null, null, "13c93768-acec-4a53-8ef1-204652a9f615", 100,
                                                        "c20c46ff-3fac-483b-8034-98b0ac8f779e",
                                                        SubtenantUserStatus.getDefault(), null,
                                                        new Date(1558003275803L), ",_2t7=kX6");
        assertTrue(subtenantuser.isValid());
        SubtenantUser subtenantuserInvalid = new SubtenantUser(null, null, "1e0b3b9f-9bd1-44a2-9a88-29ab1c4f743b",
                                                               new Date(1558003278349L), 119, null, null, true,
                                                               "d8eb6f6a-b1e0-430b-a50d-e90c8def7ac332873371-f717-4810-9c79-3ff77b9aeb2e08913ace-6126-46ab-8b15-d7d6b07bb3b5",
                                                               "\u000143å…²á¥¢3& ][[æž 34P\u0006[43=44V44è¦ ëº”àº«&\bã˜’\u001e\u001fé¤†S.4:F\t333!?3,!4Wá°“î´ƒ(3O\u0004ç¶±éª¾B3\u0012",
                                                               true, true, false, 36, null, null,
                                                               "15bc3d5e-b9ce-4f86-85c8-756db2f88a1e", 30,
                                                               "f1b25857-cfe5-431b-8f75-1187c1cd28a2e7e40ae8-7c22-4ef0-9246-a3938e1e72c9d85f6c34-488c-418a-8af2-99d294940ea7",
                                                               SubtenantUserStatus.getDefault(), null,
                                                               new Date(1558003278744L),
                                                               "lg`É?Nm-5?+!î?–æ¤‰a4n\u0006Gp.<pV4/ì‡—V<^oQ&G0]<[\\\\?n3ji3^rï¦?1\fSâ¨¬L>-\u0013<Y4`naho$$");
        assertFalse(subtenantuserInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("ebb6e571ba299e09d8e8859accae6efa", null,
                                                             "57ed1575-2a55-4f11-bb0c-865413b13b3f",
                                                             new Date(1558003279474L), -27, null,
                                                             "f9163.2af2f@a3143.fr", false,
                                                             "a8ac9b6f-c113-4451-b0fb-c77204dbb02b",
                                                             "ebb6e571ba299e09d8e8859accae6efa", true, true, true, -39,
                                                             null, null, "084a5429-b258-43e3-bfd4-ea21cf7eff60", -101,
                                                             "51fb2935-caed-4b74-b102-b2cfb3733bfd",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1558003281191L), ",_2t7=kX6");
            SubtenantUser subtenantuser2 = new SubtenantUser("ebb6e571ba299e09d8e8859accae6efa", null,
                                                             "57ed1575-2a55-4f11-bb0c-865413b13b3f",
                                                             new Date(1558003279474L), -27, null,
                                                             "f9163.2af2f@a3143.fr", false,
                                                             "a8ac9b6f-c113-4451-b0fb-c77204dbb02b",
                                                             "ebb6e571ba299e09d8e8859accae6efa", true, true, true, -39,
                                                             null, null, "084a5429-b258-43e3-bfd4-ea21cf7eff60", -101,
                                                             "51fb2935-caed-4b74-b102-b2cfb3733bfd",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1558003281191L), ",_2t7=kX6");
            SubtenantUser subtenantuser3 = new SubtenantUser("ebb6e571ba299e09d8e8859accae6efa", null,
                                                             "b5a1e753-f24b-41db-b4a9-ae2235ad9ffb",
                                                             new Date(1558003274742L), -97, null,
                                                             "4eebc.9dd8b@de0e4.fr", false,
                                                             "32794a13-cd10-4d49-85b9-ecee6f5e31e2",
                                                             "ebb6e571ba299e09d8e8859accae6efa", true, true, true, -15,
                                                             null, null, "286a8aca-5ba1-4fa8-b682-0126f4674242", -82,
                                                             "3f291bbd-d83c-4232-b633-100eb857acea",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1558003280190L), ",_2t7=kX6");
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotNull(subtenantuser3);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertNotSame(subtenantuser3, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser1, subtenantuser2);
            assertEquals(subtenantuser1, subtenantuser1);
            assertFalse(subtenantuser1.equals(null));
            assertNotEquals(subtenantuser3, subtenantuser1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
