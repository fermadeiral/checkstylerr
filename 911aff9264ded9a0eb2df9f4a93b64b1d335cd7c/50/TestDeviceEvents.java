// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEvents.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEvents {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1558003275683L), null,
                                                          new Date(1558003282521L),
                                                          "1d638b28-deb6-4e32-92af-528b709abde6",
                                                          "126ce543-fa4e-400f-b85a-88c545da6ded",
                                                          "036e7225-2a5c-4f77-bbe3-31f8c04923e2",
                                                          "8d67d47f-ed87-4cfd-a42c-d70ed5cb7244",
                                                          "4b831d11-f21a-44d4-8000-736983c61a78",
                                                          "bbb50a1f-f400-47fa-aede-7276cbc972be", false);
            DeviceEvents deviceevents2 = deviceevents1.clone();
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1558003279972L), null,
                                                          new Date(1558003280151L),
                                                          "89c6df64-c864-4177-8a45-2f615ca35f0c",
                                                          "116fb920-cdfe-4e01-9419-12ed06e515c6",
                                                          "da9645b7-247e-44f3-9b99-b368e2f07b50",
                                                          "d0875504-bf24-4176-ad70-69a9b2ad93ce",
                                                          "401cdbf0-36ad-4e7f-b052-dd51605fcb0c",
                                                          "d746fabd-c00a-4e8c-90d4-e598890e25e3", true);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1558003279972L), null,
                                                          new Date(1558003280151L),
                                                          "89c6df64-c864-4177-8a45-2f615ca35f0c",
                                                          "116fb920-cdfe-4e01-9419-12ed06e515c6",
                                                          "da9645b7-247e-44f3-9b99-b368e2f07b50",
                                                          "d0875504-bf24-4176-ad70-69a9b2ad93ce",
                                                          "401cdbf0-36ad-4e7f-b052-dd51605fcb0c",
                                                          "d746fabd-c00a-4e8c-90d4-e598890e25e3", true);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2.hashCode(), deviceevents1.hashCode());
            int hashCode = deviceevents1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceevents1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEvents deviceevents = new DeviceEvents(null, new Date(1558003280582L), null, new Date(1558003275026L),
                                                     "ab665adf-9704-45fe-b6ac-82e7446e8115",
                                                     "246d0ec2-ea7c-4bb3-8cfa-098f7bd3d185",
                                                     "4fb67269-05fd-439e-a493-9057ad390384",
                                                     "61f52243-bde9-44bf-874a-67b040cb8bb5",
                                                     "22e0adf9-035a-433f-b78c-b1f0a281d36b",
                                                     "86810c84-92e8-4363-9cff-b1a476613a7e", false);
        assertTrue(deviceevents.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1558003282203L), null,
                                                          new Date(1558003282483L),
                                                          "81755c9c-d0e9-497e-ba32-03a1beca1284",
                                                          "86daef6f-9cea-45e4-bda0-005d5b51d4e0",
                                                          "9c401173-801c-4559-8623-5a56ef699018",
                                                          "f6a7a1ee-433d-490c-8d37-35ca5f1cf23d",
                                                          "9b1dddae-be50-4b73-be9c-6d3defef8bde",
                                                          "6bc085b4-85d2-4dfe-b05f-04ab8a7483d1", false);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1558003282203L), null,
                                                          new Date(1558003282483L),
                                                          "81755c9c-d0e9-497e-ba32-03a1beca1284",
                                                          "86daef6f-9cea-45e4-bda0-005d5b51d4e0",
                                                          "9c401173-801c-4559-8623-5a56ef699018",
                                                          "f6a7a1ee-433d-490c-8d37-35ca5f1cf23d",
                                                          "9b1dddae-be50-4b73-be9c-6d3defef8bde",
                                                          "6bc085b4-85d2-4dfe-b05f-04ab8a7483d1", false);
            DeviceEvents deviceevents3 = new DeviceEvents(null, new Date(1558003276491L), null,
                                                          new Date(1558003281712L),
                                                          "25dd40b8-a30f-4441-a69c-a45c83265c3e",
                                                          "b499120a-2f79-4f56-bdad-4ade86af50f2",
                                                          "732faca6-730f-46ef-9584-1282c83dfa5a",
                                                          "47e8e939-e88e-44a7-b3cf-37955b8a8cf4",
                                                          "0771c940-0ae6-4258-b4a4-7b6c213e98d8",
                                                          "516bd192-a498-4024-864a-9ff35570ee79", false);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotNull(deviceevents3);
            assertNotSame(deviceevents2, deviceevents1);
            assertNotSame(deviceevents3, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents1, deviceevents2);
            assertEquals(deviceevents1, deviceevents1);
            assertFalse(deviceevents1.equals(null));
            assertNotEquals(deviceevents3, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
