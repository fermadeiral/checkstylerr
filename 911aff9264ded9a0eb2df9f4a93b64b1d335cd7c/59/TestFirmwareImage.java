// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.deviceupdate.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model FirmwareImage.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestFirmwareImage {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            FirmwareImage firmwareimage1 = new FirmwareImage(new Date(1558003281293L),
                                                             "d3c4798c-b808-4655-b1f8-ca29681e36ef", -112,
                                                             "1b815cef-d1e2-4b6a-812e-5d9481f539f5",
                                                             "c89ad6c6-b403-4fbf-a4ff-733144f99452",
                                                             "f8b7a9bb-2ccc-4f9b-8502-ff752280575a",
                                                             "659ac501-6beb-4708-906c-e7697f788b4b",
                                                             new Date(1558003277753L));
            FirmwareImage firmwareimage2 = firmwareimage1.clone();
            assertNotNull(firmwareimage1);
            assertNotNull(firmwareimage2);
            assertNotSame(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage2, firmwareimage1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            FirmwareImage firmwareimage1 = new FirmwareImage(new Date(1558003276813L),
                                                             "b666d25f-3831-4b7e-8e47-c35a8fb6c8d6", -14,
                                                             "8b42782d-d972-4bc9-8bc1-055406744481",
                                                             "a4f1504a-7716-41fe-b967-7a11703fdbf3",
                                                             "3cc004d9-4cf3-415f-8a8f-67ba01379c8f",
                                                             "2feb1763-be0c-45c6-b882-4e978a083ac4",
                                                             new Date(1558003281770L));
            FirmwareImage firmwareimage2 = new FirmwareImage(new Date(1558003276813L),
                                                             "b666d25f-3831-4b7e-8e47-c35a8fb6c8d6", -14,
                                                             "8b42782d-d972-4bc9-8bc1-055406744481",
                                                             "a4f1504a-7716-41fe-b967-7a11703fdbf3",
                                                             "3cc004d9-4cf3-415f-8a8f-67ba01379c8f",
                                                             "2feb1763-be0c-45c6-b882-4e978a083ac4",
                                                             new Date(1558003281770L));
            assertNotNull(firmwareimage1);
            assertNotNull(firmwareimage2);
            assertNotSame(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage2.hashCode(), firmwareimage1.hashCode());
            int hashCode = firmwareimage1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, firmwareimage1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        FirmwareImage firmwareimage = new FirmwareImage(new Date(1558003273652L),
                                                        "d6551eb4-2198-4328-b014-ae9bf4f23129", -118,
                                                        "14626c16-b3bb-4524-8054-bc4f46785f80",
                                                        "2e8870e6-8b44-41d3-95dd-6bfa7a97c544",
                                                        "42e6f64e-d2b3-46b4-b354-0e687bc0dd84",
                                                        "02c7f80f-8cc5-4269-ac69-7a87e454f4ad",
                                                        new Date(1558003274245L));
        assertTrue(firmwareimage.isValid());
        FirmwareImage firmwareimageInvalid = new FirmwareImage(new Date(1558003279197L),
                                                               "8e36cc36-9383-4efb-aa7b-3995869e12ea", 2,
                                                               "67f525c6-0614-4e98-83f0-4c21bd3336ea",
                                                               "d20c4edc-38a7-4866-9cdd-30164db0cb1adbb6dffd-268c-4efb-bf9c-f5336d086dd4762a7151-30f1-45ad-a29a-8835d8bce454aac26f15-d5a3-4094-b755-196720c92107fae0e666-0f28-4728-be71-8008514defb8f21d63d4-8c28-46f7-9513-0559ceca51d65eb18743-caa1-4ae2-9d8b-dfdfd6a2650d5a58ebab-1444-42c6-8957-69b177e5ca823792fc87-9e91-4ba5-b8de-020c1e1a77a3a7d00244-e596-440d-b020-7d349f9c18074def719f-1ebf-4e00-9940-323ad44903762cf01b6c-3cbb-4c89-8a89-5035d991ce96c8534c44-cce8-4f49-876d-55ca7dce57e74ade3bc7-2904-478b-ada2-15c4e55f2c6387490b9c-73c1-45bd-a8b2-046966982a56e17ac972-56a8-4807-b95a-57e4769c51354e3d4663-3982-483a-bd9d-73f3e51bb9c48372651c-24f3-442d-9807-12d96537d9ee7c756b74-e545-4fd3-845b-71c6c4d9f4bf1bc7d2fe-3268-4018-bdc7-fdbdd5af1e61ae8a9474-4b72-4131-acd3-e97c85e01addb7361945-d81d-416b-8a8f-b9bd0ab698bdc1b13481-9421-41b9-b557-10f7bdf780874621189e-cf7e-4699-bfa1-bab9a3759132970aa403-4f0e-424d-9fea-b4fd90678d475255bbbf-039a-4f33-86b4-dde9fe6fb8792998ae0d-1911-4341-9268-47ce8a7444dbb682c820-f428-4b3f-b3c3-5b63d1195ba4315ff054-ad08-48dd-a14f-11e5bf79078a5cfa6b51-df54-44a9-b3ec-d6a14c882739e6142d5b-7844-400a-bc2f-cbf55d72d3cf50e7887f-c410-4842-bfbc-f8ecf0b14e2b30d25567-a4a2-4ea3-9451-384ecb4d76240bfbfe6b-7a74-4600-a250-26525ec3e84bf1f743bd-ac12-4afe-9de1-0847db91e7512bd48170-e463-475a-ac77-7106b66662ee3aa9bb32-aab7-46a4-ad12-d34a3d2b7bf32be46698-ebc4-4f37-98a2-88851c095df62414a106-221a-4d1e-877f-08e8ed69444b93896d31-092a-4c95-af13-87e97243e829641b199d-88ad-41d4-b919-1126fa89bacf32fb2827-216d-4105-910a-4f9a614cb01f8d9776e2-1f7b-4e55-8806-6da94e16e9be389e2d94-5485-45cb-a963-fd5b3f532ffcb7fbec3b-fcab-4cad-b553-f376a95c4abcc6fad00e-029a-43a1-ad80-acfc4c4c802b67c8c3d3-a794-4b0c-9ac5-4c1623d827bc44dceeb2-ebbe-4a82-9b93-ae501c03f0c5a90025a0-0957-4c35-acb3-5f5ea7414b623dab0002-878f-4285-a056-e1c32c1f32321a2a5e15-b1aa-4041-be0b-edb8899cad4fa573f5e5-78c2-46fc-9c8c-7a5a20a0c26ecf71b903-38f0-440a-ae9d-f2e8b22e0d2c261b13b4-116b-4339-a723-7abba444ff2a7b7b74da-916c-4abf-b65c-0572de31ea52ba959e1d-8fc2-4f46-86ca-ba52748128a6",
                                                               "0ea77661-e92a-4a63-b593-d9c5d06565e1",
                                                               "65bdb558-0306-4d30-a417-db339309df5732e190b0-1248-4ba4-ab2f-6dac2cc752dc3cd6f9be-7d50-49a6-9696-09df5debc529583ea0fe-375f-4735-b328-3ac507b917c5",
                                                               new Date(1558003282979L));
        assertFalse(firmwareimageInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            FirmwareImage firmwareimage1 = new FirmwareImage(new Date(1558003279313L),
                                                             "a5edb51d-8ff1-4f42-a93c-92d529c330b2", 9,
                                                             "f359245b-5973-41e2-9b75-811b953195a0",
                                                             "122f7cad-932a-49c5-b761-1898b6e3ae4c",
                                                             "173ad4c8-2153-435f-a8e2-7e323a47adf8",
                                                             "b344694c-b945-44e1-b97b-023bac6431fb",
                                                             new Date(1558003275826L));
            FirmwareImage firmwareimage2 = new FirmwareImage(new Date(1558003279313L),
                                                             "a5edb51d-8ff1-4f42-a93c-92d529c330b2", 9,
                                                             "f359245b-5973-41e2-9b75-811b953195a0",
                                                             "122f7cad-932a-49c5-b761-1898b6e3ae4c",
                                                             "173ad4c8-2153-435f-a8e2-7e323a47adf8",
                                                             "b344694c-b945-44e1-b97b-023bac6431fb",
                                                             new Date(1558003275826L));
            FirmwareImage firmwareimage3 = new FirmwareImage(new Date(1558003279174L),
                                                             "1ffb71ec-7e44-4942-830a-f5761f7378ad", -25,
                                                             "022613aa-fc73-4ca3-a806-7b259081a465",
                                                             "8dce60a3-5fcf-4eab-8962-9b046b8e4024",
                                                             "1d0746ad-b008-43c1-9f0a-068dbd467266",
                                                             "db2c1891-aca8-40b8-9f80-8f2790e0fc4d",
                                                             new Date(1558003281847L));
            assertNotNull(firmwareimage1);
            assertNotNull(firmwareimage2);
            assertNotNull(firmwareimage3);
            assertNotSame(firmwareimage2, firmwareimage1);
            assertNotSame(firmwareimage3, firmwareimage1);
            assertEquals(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage1, firmwareimage2);
            assertEquals(firmwareimage1, firmwareimage1);
            assertFalse(firmwareimage1.equals(null));
            assertNotEquals(firmwareimage3, firmwareimage1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
