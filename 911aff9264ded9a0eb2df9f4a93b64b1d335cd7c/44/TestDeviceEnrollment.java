// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEnrollment.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEnrollment {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEnrollment deviceenrollment1 = new DeviceEnrollment("fdf36af0-f1c2-4aa9-a277-f926f0f8ee56",
                                                                      new Date(1558003279976L),
                                                                      new Date(1558003274501L),
                                                                      "35yNjOjOq9PvIm8m0p40JTe4ol85dS27",
                                                                      "A-3KFRT95M:SePa4Ay1Zc7CAP2gjU9v0el:12AAt1H16B6Rzl2xb6L36hohM8cNH5ggMv03y1FgUgnE9Hng5gfk36S0OIEU61",
                                                                      new Date(1558003275581L),
                                                                      "35yNjOjOq9PvIm8m0p40JTe4ol85dS27");
            DeviceEnrollment deviceenrollment2 = deviceenrollment1.clone();
            assertNotNull(deviceenrollment1);
            assertNotNull(deviceenrollment2);
            assertNotSame(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEnrollment deviceenrollment1 = new DeviceEnrollment("6f3d143a-3370-4a4d-b90b-856d3b1d77a3",
                                                                      new Date(1558003273900L),
                                                                      new Date(1558003282381L),
                                                                      "35yNjOjOq9PvIm8m0p40JTe4ol85dS27",
                                                                      "A-3KFRT95M:SePa4Ay1Zc7CAP2gjU9v0el:12AAt1H16B6Rzl2xb6L36hohM8cNH5ggMv03y1FgUgnE9Hng5gfk36S0OIEU61",
                                                                      new Date(1558003283425L),
                                                                      "35yNjOjOq9PvIm8m0p40JTe4ol85dS27");
            DeviceEnrollment deviceenrollment2 = new DeviceEnrollment("6f3d143a-3370-4a4d-b90b-856d3b1d77a3",
                                                                      new Date(1558003273900L),
                                                                      new Date(1558003282381L),
                                                                      "35yNjOjOq9PvIm8m0p40JTe4ol85dS27",
                                                                      "A-3KFRT95M:SePa4Ay1Zc7CAP2gjU9v0el:12AAt1H16B6Rzl2xb6L36hohM8cNH5ggMv03y1FgUgnE9Hng5gfk36S0OIEU61",
                                                                      new Date(1558003283425L),
                                                                      "35yNjOjOq9PvIm8m0p40JTe4ol85dS27");
            assertNotNull(deviceenrollment1);
            assertNotNull(deviceenrollment2);
            assertNotSame(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2.hashCode(), deviceenrollment1.hashCode());
            int hashCode = deviceenrollment1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceenrollment1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEnrollment deviceenrollment = new DeviceEnrollment("83df9f34-9e98-4fb8-8d14-888ecd873a44",
                                                                 new Date(1558003282916L), new Date(1558003277591L),
                                                                 "35yNjOjOq9PvIm8m0p40JTe4ol85dS27",
                                                                 "A-3KFRT95M:SePa4Ay1Zc7CAP2gjU9v0el:12AAt1H16B6Rzl2xb6L36hohM8cNH5ggMv03y1FgUgnE9Hng5gfk36S0OIEU61",
                                                                 new Date(1558003281714L),
                                                                 "35yNjOjOq9PvIm8m0p40JTe4ol85dS27");
        assertTrue(deviceenrollment.isValid());
        DeviceEnrollment deviceenrollmentInvalid = new DeviceEnrollment("d9071dd9-1324-4e84-bcac-2de420fbb97d",
                                                                        new Date(1558003281083L),
                                                                        new Date(1558003279461L),
                                                                        "H:\u0006fRcnw\u0000L︋>x냩KxL1뮇kiMw:6w1n\u000bQM6tw-1檚6fwh1KxM\u0013nkwrRVK6f6tkb\u0011=6ᢔ",
                                                                        null, new Date(1558003275780L),
                                                                        "H:\u0006fRcnw\u0000L︋>x냩KxL1뮇kiMw:6w1n\u000bQM6tw-1檚6fwh1KxM\u0013nkwrRVK6f6tkb\u0011=6ᢔ");
        assertFalse(deviceenrollmentInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEnrollment deviceenrollment1 = new DeviceEnrollment("94fba620-9dbc-4a83-85a3-0114c59615f9",
                                                                      new Date(1558003277189L),
                                                                      new Date(1558003280940L),
                                                                      "35yNjOjOq9PvIm8m0p40JTe4ol85dS27",
                                                                      "A-3KFRT95M:SePa4Ay1Zc7CAP2gjU9v0el:12AAt1H16B6Rzl2xb6L36hohM8cNH5ggMv03y1FgUgnE9Hng5gfk36S0OIEU61",
                                                                      new Date(1558003279880L),
                                                                      "35yNjOjOq9PvIm8m0p40JTe4ol85dS27");
            DeviceEnrollment deviceenrollment2 = new DeviceEnrollment("94fba620-9dbc-4a83-85a3-0114c59615f9",
                                                                      new Date(1558003277189L),
                                                                      new Date(1558003280940L),
                                                                      "35yNjOjOq9PvIm8m0p40JTe4ol85dS27",
                                                                      "A-3KFRT95M:SePa4Ay1Zc7CAP2gjU9v0el:12AAt1H16B6Rzl2xb6L36hohM8cNH5ggMv03y1FgUgnE9Hng5gfk36S0OIEU61",
                                                                      new Date(1558003279880L),
                                                                      "35yNjOjOq9PvIm8m0p40JTe4ol85dS27");
            DeviceEnrollment deviceenrollment3 = new DeviceEnrollment("25f4cd1c-8b43-4f50-8840-e3fc4e54c006",
                                                                      new Date(1558003280465L),
                                                                      new Date(1558003276089L),
                                                                      "35yNjOjOq9PvIm8m0p40JTe4ol85dS27",
                                                                      "A-3KFRT95M:SePa4Ay1Zc7CAP2gjU9v0el:12AAt1H16B6Rzl2xb6L36hohM8cNH5ggMv03y1FgUgnE9Hng5gfk36S0OIEU61",
                                                                      new Date(1558003279175L),
                                                                      "35yNjOjOq9PvIm8m0p40JTe4ol85dS27");
            assertNotNull(deviceenrollment1);
            assertNotNull(deviceenrollment2);
            assertNotNull(deviceenrollment3);
            assertNotSame(deviceenrollment2, deviceenrollment1);
            assertNotSame(deviceenrollment3, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment1, deviceenrollment2);
            assertEquals(deviceenrollment1, deviceenrollment1);
            assertFalse(deviceenrollment1.equals(null));
            assertNotEquals(deviceenrollment3, deviceenrollment1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
