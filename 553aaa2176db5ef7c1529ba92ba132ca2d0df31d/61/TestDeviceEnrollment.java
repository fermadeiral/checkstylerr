// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEnrollment.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEnrollment {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEnrollment deviceenrollment1 = new DeviceEnrollment("b6a83943-04a9-4f36-94f9-a9faccd044cc",
                                                                      new Date(1560440632590L),
                                                                      new Date(1560440632079L),
                                                                      "4s2yX3FgcjV33OMuJ5qYiJH4vw4blk5i",
                                                                      "A-Y70IJwey2j4kmjZvjM0l4b1vEurDJR362z6mJ2ACj602g:u49518Dh:R22O3Se7vOm6UV6fW7TBdOa188cK875QU35A20hU",
                                                                      new Date(1560440626975L),
                                                                      "4s2yX3FgcjV33OMuJ5qYiJH4vw4blk5i");
            DeviceEnrollment deviceenrollment2 = deviceenrollment1.clone();
            assertNotNull(deviceenrollment1);
            assertNotNull(deviceenrollment2);
            assertNotSame(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEnrollment deviceenrollment1 = new DeviceEnrollment("418bb109-e850-418b-a183-d8c0a9b70e7a",
                                                                      new Date(1560440628307L),
                                                                      new Date(1560440626809L),
                                                                      "4s2yX3FgcjV33OMuJ5qYiJH4vw4blk5i",
                                                                      "A-Y70IJwey2j4kmjZvjM0l4b1vEurDJR362z6mJ2ACj602g:u49518Dh:R22O3Se7vOm6UV6fW7TBdOa188cK875QU35A20hU",
                                                                      new Date(1560440629909L),
                                                                      "4s2yX3FgcjV33OMuJ5qYiJH4vw4blk5i");
            DeviceEnrollment deviceenrollment2 = new DeviceEnrollment("418bb109-e850-418b-a183-d8c0a9b70e7a",
                                                                      new Date(1560440628307L),
                                                                      new Date(1560440626809L),
                                                                      "4s2yX3FgcjV33OMuJ5qYiJH4vw4blk5i",
                                                                      "A-Y70IJwey2j4kmjZvjM0l4b1vEurDJR362z6mJ2ACj602g:u49518Dh:R22O3Se7vOm6UV6fW7TBdOa188cK875QU35A20hU",
                                                                      new Date(1560440629909L),
                                                                      "4s2yX3FgcjV33OMuJ5qYiJH4vw4blk5i");
            assertNotNull(deviceenrollment1);
            assertNotNull(deviceenrollment2);
            assertNotSame(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2.hashCode(), deviceenrollment1.hashCode());
            int hashCode = deviceenrollment1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceenrollment1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEnrollment deviceenrollment = new DeviceEnrollment("a4a14eef-9176-41f7-aca4-7e64a53eb3a9",
                                                                 new Date(1560440629119L), new Date(1560440627534L),
                                                                 "4s2yX3FgcjV33OMuJ5qYiJH4vw4blk5i",
                                                                 "A-Y70IJwey2j4kmjZvjM0l4b1vEurDJR362z6mJ2ACj602g:u49518Dh:R22O3Se7vOm6UV6fW7TBdOa188cK875QU35A20hU",
                                                                 new Date(1560440635118L),
                                                                 "4s2yX3FgcjV33OMuJ5qYiJH4vw4blk5i");
        assertTrue(deviceenrollment.isValid());
        DeviceEnrollment deviceenrollmentInvalid = new DeviceEnrollment("bb67e8de-16e4-45fd-951a-a0a25edd575a",
                                                                        new Date(1560440631770L),
                                                                        new Date(1560440635493L),
                                                                        "GTæ?°RmG\u0015rrLtIrxRWKx(G\u0001NrGré?·ntê ?KnIeGSnxxm[GeDxrG1rneo@UI\\\\LEhIUtKAh",
                                                                        null, new Date(1560440633338L),
                                                                        "GTæ?°RmG\u0015rrLtIrxRWKx(G\u0001NrGré?·ntê ?KnIeGSnxxm[GeDxrG1rneo@UI\\\\LEhIUtKAh");
        assertFalse(deviceenrollmentInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEnrollment deviceenrollment1 = new DeviceEnrollment("8cfa8ae4-c462-40ec-b617-63ed2590ee96",
                                                                      new Date(1560440632622L),
                                                                      new Date(1560440632248L),
                                                                      "4s2yX3FgcjV33OMuJ5qYiJH4vw4blk5i",
                                                                      "A-Y70IJwey2j4kmjZvjM0l4b1vEurDJR362z6mJ2ACj602g:u49518Dh:R22O3Se7vOm6UV6fW7TBdOa188cK875QU35A20hU",
                                                                      new Date(1560440626830L),
                                                                      "4s2yX3FgcjV33OMuJ5qYiJH4vw4blk5i");
            DeviceEnrollment deviceenrollment2 = new DeviceEnrollment("8cfa8ae4-c462-40ec-b617-63ed2590ee96",
                                                                      new Date(1560440632622L),
                                                                      new Date(1560440632248L),
                                                                      "4s2yX3FgcjV33OMuJ5qYiJH4vw4blk5i",
                                                                      "A-Y70IJwey2j4kmjZvjM0l4b1vEurDJR362z6mJ2ACj602g:u49518Dh:R22O3Se7vOm6UV6fW7TBdOa188cK875QU35A20hU",
                                                                      new Date(1560440626830L),
                                                                      "4s2yX3FgcjV33OMuJ5qYiJH4vw4blk5i");
            DeviceEnrollment deviceenrollment3 = new DeviceEnrollment("dfd2cfc7-7456-4f4e-bde3-3f9cf301fd29",
                                                                      new Date(1560440634391L),
                                                                      new Date(1560440631483L),
                                                                      "4s2yX3FgcjV33OMuJ5qYiJH4vw4blk5i",
                                                                      "A-Y70IJwey2j4kmjZvjM0l4b1vEurDJR362z6mJ2ACj602g:u49518Dh:R22O3Se7vOm6UV6fW7TBdOa188cK875QU35A20hU",
                                                                      new Date(1560440626489L),
                                                                      "4s2yX3FgcjV33OMuJ5qYiJH4vw4blk5i");
            assertNotNull(deviceenrollment1);
            assertNotNull(deviceenrollment2);
            assertNotNull(deviceenrollment3);
            assertNotSame(deviceenrollment2, deviceenrollment1);
            assertNotSame(deviceenrollment3, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment1, deviceenrollment2);
            assertEquals(deviceenrollment1, deviceenrollment1);
            assertFalse(deviceenrollment1.equals(null));
            assertNotEquals(deviceenrollment3, deviceenrollment1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
