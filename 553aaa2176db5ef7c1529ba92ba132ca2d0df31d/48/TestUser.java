// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model User.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestUser {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            User user1 = new User("f45208d7fb27c60aa6f7980ca7e43569", null, "2bf4875a-d6f1-4e95-8786-1e06ec3c1be4",
                                  new Date(1560440628466L), -65, null, "5e1d7.5775e@dffc3.fr", true,
                                  "f2f2490b-124d-4975-a374-9219fecbe95c", "f45208d7fb27c60aa6f7980ca7e43569", true,
                                  false, false, 8, null, null, "80b1ee32-a9c6-4348-9bdd-6b145d8b2d03", -23,
                                  "abdd37c2-6755-4902-b34d-34ebd82d64ce", UserStatus.getDefault(), null,
                                  new Date(1560440630639L), "==y3b");
            User user2 = user1.clone();
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotSame(user2, user1);
            assertEquals(user2, user1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            User user1 = new User("f45208d7fb27c60aa6f7980ca7e43569", null, "e09ea8bd-f9da-4818-b7fe-bc0570eeaa00",
                                  new Date(1560440630680L), 39, null, "58367.2247c@f423a.me", true,
                                  "28793e56-1a64-4991-baa6-e27eb3a106a2", "f45208d7fb27c60aa6f7980ca7e43569", false,
                                  true, false, 6, null, null, "d458252b-d346-4576-a4e4-326a387753e7", 93,
                                  "b38a8ce0-8344-4c62-b886-fe3027e45a3d", UserStatus.getDefault(), null,
                                  new Date(1560440633711L), "==y3b");
            User user2 = new User("f45208d7fb27c60aa6f7980ca7e43569", null, "e09ea8bd-f9da-4818-b7fe-bc0570eeaa00",
                                  new Date(1560440630680L), 39, null, "58367.2247c@f423a.me", true,
                                  "28793e56-1a64-4991-baa6-e27eb3a106a2", "f45208d7fb27c60aa6f7980ca7e43569", false,
                                  true, false, 6, null, null, "d458252b-d346-4576-a4e4-326a387753e7", 93,
                                  "b38a8ce0-8344-4c62-b886-fe3027e45a3d", UserStatus.getDefault(), null,
                                  new Date(1560440633711L), "==y3b");
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotSame(user2, user1);
            assertEquals(user2, user1);
            assertEquals(user2.hashCode(), user1.hashCode());
            int hashCode = user1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, user1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        User user = new User("f45208d7fb27c60aa6f7980ca7e43569", null, "88bcedbc-a192-4892-8df8-18a437cfd522",
                             new Date(1560440630297L), -30, null, "9cf5d.75a84@10534.me", true,
                             "38c27aa5-7295-4978-a6ac-cdd3d6417de6", "f45208d7fb27c60aa6f7980ca7e43569", false, true,
                             false, 104, null, null, "6f4c6f44-f5d3-48cf-b009-4aa9b079c33c", 14,
                             "97884480-5db2-4508-a6e9-b5244c889039", UserStatus.getDefault(), null,
                             new Date(1560440632030L), "==y3b");
        assertTrue(user.isValid());
        User userInvalid = new User("\u001511IU^Û²è…˜?åˆ±D\u0014'â½ˆ?/\u000eXëªŒ,#â±•í›¶:1à²±Eèº™åˆ?éƒ‚1R\u0006\u001eB1$$1\t1!.111\u001c1'ê€€1\u0006C1O\u0003ç¡š1I@D=1",
                                    null, "ee493ed3-a2c4-4e41-81b3-c8ffd6005a4a", new Date(1560440627296L), 1, null,
                                    null, true,
                                    "521f987c-d74d-40e1-ad9d-9056718064d3b03c5a1d-30b7-41fb-bc03-c490fa2fc713d1391751-6c60-43c1-b382-b44830482a88",
                                    "\u001511IU^Û²è…˜?åˆ±D\u0014'â½ˆ?/\u000eXëªŒ,#â±•í›¶:1à²±Eèº™åˆ?éƒ‚1R\u0006\u001eB1$$1\t1!.111\u001c1'ê€€1\u0006C1O\u0003ç¡š1I@D=1",
                                    false, false, false, 125, null, null, "ba652d1d-f057-4bd7-a7db-9340450007a3", -117,
                                    "2b8035ec-f67f-487e-a5ba-1d869f37b6224ae75a45-bbf0-4a02-8326-a0b482a31a1bdd4dbcaf-0e1d-4f7a-b7be-dd881d48c278",
                                    UserStatus.getDefault(), null, new Date(1560440634374L),
                                    "ï‚¬7à°?\u00185f]H8DuFW:\u0015Eqeä¬?c9&m8Z\u0013dà»Š\u0019?æ·?pì»‰\u0003254FPxE\u001587@Z\u0012A\u0015^gì??-A\u000e0W<6d\u001cDf+");
        assertFalse(userInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            User user1 = new User("f45208d7fb27c60aa6f7980ca7e43569", null, "a0062845-a9ba-406d-89d3-84b1d3000dcc",
                                  new Date(1560440629656L), 52, null, "ba974.7b0d1@2143a.me", false,
                                  "7c1e25d0-94ee-4f4a-80e4-e6f83d96edfc", "f45208d7fb27c60aa6f7980ca7e43569", true,
                                  false, false, -59, null, null, "11215a6e-bc9e-41da-8a95-8c9ad33026e4", 88,
                                  "bb7bfcc1-5e45-423e-9748-f5407d76e7f6", UserStatus.getDefault(), null,
                                  new Date(1560440632757L), "==y3b");
            User user2 = new User("f45208d7fb27c60aa6f7980ca7e43569", null, "a0062845-a9ba-406d-89d3-84b1d3000dcc",
                                  new Date(1560440629656L), 52, null, "ba974.7b0d1@2143a.me", false,
                                  "7c1e25d0-94ee-4f4a-80e4-e6f83d96edfc", "f45208d7fb27c60aa6f7980ca7e43569", true,
                                  false, false, -59, null, null, "11215a6e-bc9e-41da-8a95-8c9ad33026e4", 88,
                                  "bb7bfcc1-5e45-423e-9748-f5407d76e7f6", UserStatus.getDefault(), null,
                                  new Date(1560440632757L), "==y3b");
            User user3 = new User("f45208d7fb27c60aa6f7980ca7e43569", null, "6e76e2ef-88f2-4483-a82b-48cfbef24abe",
                                  new Date(1560440629819L), -110, null, "66d3e.2f8c0@62a42.fr", false,
                                  "412bab9e-894f-4f86-8f26-77648adaf1c9", "f45208d7fb27c60aa6f7980ca7e43569", true,
                                  false, false, 30, null, null, "f2f29ada-c267-429b-92c0-89faa5b79382", -83,
                                  "5d8f98bc-de6e-4e93-ba0a-019470f33804", UserStatus.getDefault(), null,
                                  new Date(1560440630983L), "==y3b");
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotNull(user3);
            assertNotSame(user2, user1);
            assertNotSame(user3, user1);
            assertEquals(user2, user1);
            assertEquals(user2, user1);
            assertEquals(user1, user2);
            assertEquals(user1, user1);
            assertFalse(user1.equals(null));
            assertNotEquals(user3, user1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
