// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model ParentAccount.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestParentAccount {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("aba6d.f358b@5d914.fr",
                                                             "b4d42a70-acf7-402e-9db9-a6987b46fc3a",
                                                             "f45208d7fb27c60aa6f7980ca7e43569");
            ParentAccount parentaccount2 = parentaccount1.clone();
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotSame(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("12da5.4bf41@e8a28.fr",
                                                             "562e6d06-9dd6-4abf-9c15-4263be29c0af",
                                                             "f45208d7fb27c60aa6f7980ca7e43569");
            ParentAccount parentaccount2 = new ParentAccount("12da5.4bf41@e8a28.fr",
                                                             "562e6d06-9dd6-4abf-9c15-4263be29c0af",
                                                             "f45208d7fb27c60aa6f7980ca7e43569");
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotSame(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount2.hashCode(), parentaccount1.hashCode());
            int hashCode = parentaccount1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, parentaccount1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ParentAccount parentaccount = new ParentAccount("5134d.29e71@b884a.me", "be500877-b719-45d3-a5fd-713890b4fccb",
                                                        "f45208d7fb27c60aa6f7980ca7e43569");
        assertTrue(parentaccount.isValid());
        ParentAccount parentaccountInvalid = new ParentAccount("Ý€ï¿·(âª†ä¸©ï??ï?¼ï§½\u0015àº?>å?®&ä¬±\u00142ê©«ï¡»\u0013ï’·è–·â?»ïªµï´•ï´¬â«¾äˆ—6ï«“äº…â€?>>'ï¬ ï¬´ïªˆ>ê“µã„¹ê­¦ã§§ã¨ª>ïž›ï™™\b\u0005ÔŽã«?äŠ—ï¶‰ã¯žã¨»å¹¥ã­‚ã¯¯8ï¿¶>ï¢†ï»²ï•«ï¼?",
                                                               "2db1a0ee-7fb0-4fc9-98a0-e60b00058637e9224529-f42e-4701-801f-fb37ebc765e67e4300f9-b175-4399-a289-f8d6dc7faaee",
                                                               "\u001511IU^Û²è…˜?åˆ±D\u0014'â½ˆ?/\u000eXëªŒ,#â±•í›¶:1à²±Eèº™åˆ?éƒ‚1R\u0006\u001eB1$$1\t1!.111\u001c1'ê€€1\u0006C1O\u0003ç¡š1I@D=1");
        assertFalse(parentaccountInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("7a01c.15fed@2a878.fr",
                                                             "1a05f9e5-15fb-4aa8-b99a-cdfb06e2f594",
                                                             "f45208d7fb27c60aa6f7980ca7e43569");
            ParentAccount parentaccount2 = new ParentAccount("7a01c.15fed@2a878.fr",
                                                             "1a05f9e5-15fb-4aa8-b99a-cdfb06e2f594",
                                                             "f45208d7fb27c60aa6f7980ca7e43569");
            ParentAccount parentaccount3 = new ParentAccount("75d5b.42987@bb2a0.fr",
                                                             "8a056f3a-2850-4227-a968-71936553ffea",
                                                             "f45208d7fb27c60aa6f7980ca7e43569");
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotNull(parentaccount3);
            assertNotSame(parentaccount2, parentaccount1);
            assertNotSame(parentaccount3, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount1, parentaccount2);
            assertEquals(parentaccount1, parentaccount1);
            assertFalse(parentaccount1.equals(null));
            assertNotEquals(parentaccount3, parentaccount1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
