// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model ApiKey.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestApiKey {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ApiKey apikey1 = new ApiKey("f45208d7fb27c60aa6f7980ca7e43569", new Date(1560440632669L), -66,
                                        "f45208d7fb27c60aa6f7980ca7e43569", "3abec23f-ea29-49b2-8788-6ce6be12b591", -88,
                                        "ac0513bb-ae0c-4f0e-8068-6bc8b02c3a9b", "f45208d7fb27c60aa6f7980ca7e43569",
                                        ApiKeyStatus.getDefault(), new Date(1560440630631L));
            ApiKey apikey2 = apikey1.clone();
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotSame(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ApiKey apikey1 = new ApiKey("f45208d7fb27c60aa6f7980ca7e43569", new Date(1560440633742L), 83,
                                        "f45208d7fb27c60aa6f7980ca7e43569", "560f27b8-f39c-42d4-885d-b0480595c8fe", 75,
                                        "7acd29a5-a05d-423f-b77c-7f2220741bfd", "f45208d7fb27c60aa6f7980ca7e43569",
                                        ApiKeyStatus.getDefault(), new Date(1560440627103L));
            ApiKey apikey2 = new ApiKey("f45208d7fb27c60aa6f7980ca7e43569", new Date(1560440633742L), 83,
                                        "f45208d7fb27c60aa6f7980ca7e43569", "560f27b8-f39c-42d4-885d-b0480595c8fe", 75,
                                        "7acd29a5-a05d-423f-b77c-7f2220741bfd", "f45208d7fb27c60aa6f7980ca7e43569",
                                        ApiKeyStatus.getDefault(), new Date(1560440627103L));
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotSame(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey2.hashCode(), apikey1.hashCode());
            int hashCode = apikey1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, apikey1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ApiKey apikey = new ApiKey("f45208d7fb27c60aa6f7980ca7e43569", new Date(1560440627565L), -4,
                                   "f45208d7fb27c60aa6f7980ca7e43569", "f8d73790-850a-4a98-afa2-2a287b54981f", -14,
                                   "b36a686c-5d3c-4cc1-8462-7c02832052cd", "f45208d7fb27c60aa6f7980ca7e43569",
                                   ApiKeyStatus.getDefault(), new Date(1560440628025L));
        assertTrue(apikey.isValid());
        ApiKey apikeyInvalid = new ApiKey("\u001511IU^Û²è…˜?åˆ±D\u0014'â½ˆ?/\u000eXëªŒ,#â±•í›¶:1à²±Eèº™åˆ?éƒ‚1R\u0006\u001eB1$$1\t1!.111\u001c1'ê€€1\u0006C1O\u0003ç¡š1I@D=1",
                                          new Date(1560440632768L), 93,
                                          "\u001511IU^Û²è…˜?åˆ±D\u0014'â½ˆ?/\u000eXëªŒ,#â±•í›¶:1à²±Eèº™åˆ?éƒ‚1R\u0006\u001eB1$$1\t1!.111\u001c1'ê€€1\u0006C1O\u0003ç¡š1I@D=1",
                                          "098072a5-4c50-43e9-9279-4c84e19db0f7", 36, null,
                                          "\u001511IU^Û²è…˜?åˆ±D\u0014'â½ˆ?/\u000eXëªŒ,#â±•í›¶:1à²±Eèº™åˆ?éƒ‚1R\u0006\u001eB1$$1\t1!.111\u001c1'ê€€1\u0006C1O\u0003ç¡š1I@D=1",
                                          ApiKeyStatus.getDefault(), new Date(1560440628520L));
        assertFalse(apikeyInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ApiKey apikey1 = new ApiKey("f45208d7fb27c60aa6f7980ca7e43569", new Date(1560440632075L), -108,
                                        "f45208d7fb27c60aa6f7980ca7e43569", "9f166ce3-997e-4ed4-970a-53776353869c", -74,
                                        "da6c677b-585a-417a-a0d3-a0b0c226d646", "f45208d7fb27c60aa6f7980ca7e43569",
                                        ApiKeyStatus.getDefault(), new Date(1560440634522L));
            ApiKey apikey2 = new ApiKey("f45208d7fb27c60aa6f7980ca7e43569", new Date(1560440632075L), -108,
                                        "f45208d7fb27c60aa6f7980ca7e43569", "9f166ce3-997e-4ed4-970a-53776353869c", -74,
                                        "da6c677b-585a-417a-a0d3-a0b0c226d646", "f45208d7fb27c60aa6f7980ca7e43569",
                                        ApiKeyStatus.getDefault(), new Date(1560440634522L));
            ApiKey apikey3 = new ApiKey("f45208d7fb27c60aa6f7980ca7e43569", new Date(1560440635024L), 102,
                                        "f45208d7fb27c60aa6f7980ca7e43569", "e87d7609-018c-42f9-aa09-d85084f3bbc5", 45,
                                        "36fdb36f-e3be-4dd2-ad60-16b1d31e904f", "f45208d7fb27c60aa6f7980ca7e43569",
                                        ApiKeyStatus.getDefault(), new Date(1560440629121L));
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotNull(apikey3);
            assertNotSame(apikey2, apikey1);
            assertNotSame(apikey3, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey1, apikey2);
            assertEquals(apikey1, apikey1);
            assertFalse(apikey1.equals(null));
            assertNotEquals(apikey3, apikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
