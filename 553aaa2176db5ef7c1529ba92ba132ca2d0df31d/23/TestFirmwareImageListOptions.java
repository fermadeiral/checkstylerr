// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.deviceupdate.model;

import static org.junit.Assert.*;

import com.arm.mbed.cloud.sdk.common.Order;
import com.arm.mbed.cloud.sdk.common.listing.ListOptionsEncoder;
import com.arm.mbed.cloud.sdk.common.listing.filtering.FilterOperator;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import org.junit.Test;

/**
 * Unit tests for Model FirmwareImageListOptions.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestFirmwareImageListOptions {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            FirmwareImageListOptions firmwareimagelistoptions1 = new FirmwareImageListOptions(Integer.valueOf(-90),
                                                                                              Long.valueOf(81),
                                                                                              Order.getDefault(),
                                                                                              "dccaa167-1557-41f2-aa24-e95fca0dcdb5",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions2 = firmwareimagelistoptions1.clone();
            assertNotNull(firmwareimagelistoptions1);
            assertNotNull(firmwareimagelistoptions2);
            assertNotSame(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the filters method.
     */
    @SuppressWarnings({ "boxing", "resource" })
    @Test
    public void testFilters() {
        try {
            FirmwareImageListOptions option = new FirmwareImageListOptions().inUpdatedAts(Arrays.asList(new Date(1560440628064L)))
                                                                            .notInUpdatedAts(Arrays.asList(new Date(1560440631385L)))
                                                                            .lessThanUpdatedAt(new Date(1560440635098L))
                                                                            .greaterThanUpdatedAt(new Date(1560440628262L))
                                                                            .equalToName("b2427dd7-5952-4504-8947-aea8b633e0e0")
                                                                            .notEqualToName("108db424-22e6-4a76-a89d-052c529f33a7")
                                                                            .inNames(Arrays.asList("96633392-0edb-4e35-b5fd-af32bb2d2316",
                                                                                                   "9a8a11eb-90d4-4cae-8e61-b0be49b98e91"))
                                                                            .notInNames(Arrays.asList("dac82a70-a276-489d-b441-124187bb1095",
                                                                                                      "ab6102c6-be36-42fe-b763-eddf530dcaa9",
                                                                                                      "980a2ea8-7a7b-4306-aa7b-a526cda69fa8",
                                                                                                      "442a6cc1-c9c9-470a-8e6e-ffa01ddc6c6a",
                                                                                                      "fdbc25c4-e980-4d58-a617-8c282dc23068",
                                                                                                      "ced7de3c-5e69-44dc-93f7-c0b97a0dbb11",
                                                                                                      "345271e3-8b01-4f98-92ca-36f94709dc9b",
                                                                                                      "a88305ab-e455-4a11-ae8e-ab9a0f354dfa"))
                                                                            .equalToDescription("12bdb15b-c5c3-4e5f-ab51-e505bfc095c8")
                                                                            .notEqualToDescription("7d6ba5b2-5be2-4bef-a819-ecc211105a8f")
                                                                            .inDescriptions(Arrays.asList("4fb75deb-e830-4476-8b8f-11b80868ffb0",
                                                                                                          "97ac1884-d38e-45bc-93ed-d88f7390e976",
                                                                                                          "bb93cbec-6335-47c7-95fb-0a06c5f27a4d",
                                                                                                          "f4c37c39-4590-47a2-a489-c1edff199e87"))
                                                                            .notInDescriptions(Arrays.asList("9097ba26-b3da-47cd-b87a-2fac1fbe81d0",
                                                                                                             "46658ad0-94f5-4b94-9027-4964c6b261be",
                                                                                                             "808e5ab4-9683-41fb-87e5-39fe56660264",
                                                                                                             "856c0bb1-19cf-4d28-9980-f4524ea3da8e",
                                                                                                             "7eec0d5c-887f-48db-aa34-3cf0b36e4e75",
                                                                                                             "a8e823d4-8acb-41ad-ac79-e08f467f25e2",
                                                                                                             "bd989dfb-2dbb-42e6-98bc-c7cab5c9e162",
                                                                                                             "c34b906d-9640-4564-8e0d-1719dea628ed",
                                                                                                             "b3ba9bb1-6499-4a5a-b818-ac45e9aebf06"))
                                                                            .inCreatedAts(Arrays.asList(new Date(1560440636193L),
                                                                                                        new Date(1560440630443L),
                                                                                                        new Date(1560440631189L),
                                                                                                        new Date(1560440629295L),
                                                                                                        new Date(1560440632150L),
                                                                                                        new Date(1560440631289L)))
                                                                            .notInCreatedAts(Arrays.asList(new Date(1560440633223L),
                                                                                                           new Date(1560440628279L),
                                                                                                           new Date(1560440633223L),
                                                                                                           new Date(1560440633957L),
                                                                                                           new Date(1560440635922L),
                                                                                                           new Date(1560440629642L),
                                                                                                           new Date(1560440629831L)))
                                                                            .lessThanCreatedAt(new Date(1560440629718L))
                                                                            .greaterThanCreatedAt(new Date(1560440631425L))
                                                                            .equalToDatafileUrl("993cfe07-2f9e-49fa-85f7-3732ecee7688")
                                                                            .notEqualToDatafileUrl("05dadcfc-589b-48b9-a21d-e95f205d4fef")
                                                                            .inDatafileUrls(Arrays.asList("2f86b4b7-c42a-46bb-92e7-2d1a4590b445",
                                                                                                          "9d66b3d4-d9ad-44f6-8acd-19946bac5356",
                                                                                                          "326d7dd5-be3b-4858-ad20-532c3890c79e",
                                                                                                          "4659dc41-638f-4be9-9bf9-9e1502389651",
                                                                                                          "32415602-a921-464d-8226-2cdf253c1d47"))
                                                                            .notInDatafileUrls(Arrays.asList("fc603972-d199-47e1-b4f7-39f800ac463f",
                                                                                                             "fe64d236-f40f-4cd9-bde6-10d2f23daa83"))
                                                                            .equalToDatafileSize(Long.valueOf(71))
                                                                            .notEqualToDatafileSize(Long.valueOf(-39))
                                                                            .inDatafileSizes(Arrays.asList(Long.valueOf(-29)))
                                                                            .notInDatafileSizes(Arrays.asList(Long.valueOf(79),
                                                                                                              Long.valueOf(-63)))
                                                                            .equalToDatafileChecksum("c86415e9-9024-4400-ab4e-c03eb3ca3486")
                                                                            .notEqualToDatafileChecksum("3d9746ba-84c9-4a30-ad06-644e435eda60")
                                                                            .inDatafileChecksums(Arrays.asList("524755b3-4b7a-47cb-bb0a-8f349157c008",
                                                                                                               "98ed3075-e9cd-4b1f-82d0-11632903017d",
                                                                                                               "f283d900-8e9d-4db2-891c-50e4c0d68a01",
                                                                                                               "27198be1-7137-46c7-a48b-2ebc8c1cb7e6",
                                                                                                               "4b7e3ec1-4f93-4568-ae57-2c512ee8a166",
                                                                                                               "cbd680a5-fc1e-41cc-9413-8f2382e425c3",
                                                                                                               "fee8ca8d-69ba-4f8a-b567-5561616a96bd",
                                                                                                               "932bcc7a-cd7c-4095-b4ef-340f169b2c1d"))
                                                                            .notInDatafileChecksums(Arrays.asList("99ba379a-0d09-45c3-9297-07f541bf55eb",
                                                                                                                  "9eaa25f0-5896-4612-a826-0188b2e197b9",
                                                                                                                  "4368a0b4-5356-4963-96a7-0ecfc7c6b31f",
                                                                                                                  "9bde0ed9-1b7e-4ff9-8696-e38fe4dc9e83",
                                                                                                                  "46d457ee-0a6a-4b42-bf2f-f606665ddbec",
                                                                                                                  "6c0b5c9f-5a43-4acb-8acf-fb6b002db992"))
                                                                            .equalToId("b45ca477-d655-4c7d-b626-edd0073fbd75")
                                                                            .notEqualToId("5e502a13-e2c2-464c-9ef6-16ad67a1308c")
                                                                            .inIds(Arrays.asList("27ab0d91-e05c-4fdb-843d-b7fa5edc7c5d",
                                                                                                 "6944071b-7ad9-441a-b50a-486c901417f7",
                                                                                                 "b37fd4a0-125f-4e9b-864f-9e3ecc68b2c2",
                                                                                                 "fa3c45f0-c114-401e-840a-55730aa80502",
                                                                                                 "6a4ec265-9499-409a-a5dd-34cb2517d6e5",
                                                                                                 "a6da44e6-47d4-4889-9301-6eb06182d8ba",
                                                                                                 "35be1c41-960f-45f5-9aeb-4780da4a6a51"))
                                                                            .notInIds(Arrays.asList("b3c62cef-ee04-4d90-b38e-f43cd4750df2",
                                                                                                    "4813f88b-ef9f-40a9-80ac-7c8cb55aafe2",
                                                                                                    "5e8be596-9c9a-4c07-9672-967a20ddd4e5",
                                                                                                    "e961c85e-2e71-41ee-bf11-9af910346b2c",
                                                                                                    "a43c2135-b28a-4e7a-8e22-f7aaf422a2d2"));
            assertTrue(option.hasFilters());
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1560440628064L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1560440631385L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.LESS_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1560440635098L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1560440628262L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("b2427dd7-5952-4504-8947-aea8b633e0e0",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("108db424-22e6-4a76-a89d-052c529f33a7",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("96633392-0edb-4e35-b5fd-af32bb2d2316", "9a8a11eb-90d4-4cae-8e61-b0be49b98e91"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("dac82a70-a276-489d-b441-124187bb1095", "ab6102c6-be36-42fe-b763-eddf530dcaa9",
                                       "980a2ea8-7a7b-4306-aa7b-a526cda69fa8", "442a6cc1-c9c9-470a-8e6e-ffa01ddc6c6a",
                                       "fdbc25c4-e980-4d58-a617-8c282dc23068", "ced7de3c-5e69-44dc-93f7-c0b97a0dbb11",
                                       "345271e3-8b01-4f98-92ca-36f94709dc9b", "a88305ab-e455-4a11-ae8e-ab9a0f354dfa"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("12bdb15b-c5c3-4e5f-ab51-e505bfc095c8",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("7d6ba5b2-5be2-4bef-a819-ecc211105a8f",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("4fb75deb-e830-4476-8b8f-11b80868ffb0", "97ac1884-d38e-45bc-93ed-d88f7390e976",
                                       "bb93cbec-6335-47c7-95fb-0a06c5f27a4d", "f4c37c39-4590-47a2-a489-c1edff199e87"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("9097ba26-b3da-47cd-b87a-2fac1fbe81d0", "46658ad0-94f5-4b94-9027-4964c6b261be",
                                       "808e5ab4-9683-41fb-87e5-39fe56660264", "856c0bb1-19cf-4d28-9980-f4524ea3da8e",
                                       "7eec0d5c-887f-48db-aa34-3cf0b36e4e75", "a8e823d4-8acb-41ad-ac79-e08f467f25e2",
                                       "bd989dfb-2dbb-42e6-98bc-c7cab5c9e162", "c34b906d-9640-4564-8e0d-1719dea628ed",
                                       "b3ba9bb1-6499-4a5a-b818-ac45e9aebf06"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1560440636193L), new Date(1560440630443L), new Date(1560440631189L),
                                       new Date(1560440629295L), new Date(1560440632150L), new Date(1560440631289L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1560440633223L), new Date(1560440628279L), new Date(1560440633223L),
                                       new Date(1560440633957L), new Date(1560440635922L), new Date(1560440629642L),
                                       new Date(1560440629831L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.LESS_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1560440629718L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1560440631425L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("993cfe07-2f9e-49fa-85f7-3732ecee7688",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("05dadcfc-589b-48b9-a21d-e95f205d4fef",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("2f86b4b7-c42a-46bb-92e7-2d1a4590b445", "9d66b3d4-d9ad-44f6-8acd-19946bac5356",
                                       "326d7dd5-be3b-4858-ad20-532c3890c79e", "4659dc41-638f-4be9-9bf9-9e1502389651",
                                       "32415602-a921-464d-8226-2cdf253c1d47"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("fc603972-d199-47e1-b4f7-39f800ac463f", "fe64d236-f40f-4cd9-bde6-10d2f23daa83"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(71),
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    Long.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(-39),
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                       Long.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(-29)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(79), Long.valueOf(-63)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                        FilterOperator.EQUAL));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals("c86415e9-9024-4400-ab4e-c03eb3ca3486",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals("3d9746ba-84c9-4a30-ad06-644e435eda60",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM, FilterOperator.IN));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals(Arrays.asList("524755b3-4b7a-47cb-bb0a-8f349157c008", "98ed3075-e9cd-4b1f-82d0-11632903017d",
                                       "f283d900-8e9d-4db2-891c-50e4c0d68a01", "27198be1-7137-46c7-a48b-2ebc8c1cb7e6",
                                       "4b7e3ec1-4f93-4568-ae57-2c512ee8a166", "cbd680a5-fc1e-41cc-9413-8f2382e425c3",
                                       "fee8ca8d-69ba-4f8a-b567-5561616a96bd", "932bcc7a-cd7c-4095-b4ef-340f169b2c1d"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                        FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals(Arrays.asList("99ba379a-0d09-45c3-9297-07f541bf55eb", "9eaa25f0-5896-4612-a826-0188b2e197b9",
                                       "4368a0b4-5356-4963-96a7-0ecfc7c6b31f", "9bde0ed9-1b7e-4ff9-8696-e38fe4dc9e83",
                                       "46d457ee-0a6a-4b42-bf2f-f606665ddbec", "6c0b5c9f-5a43-4acb-8acf-fb6b002db992"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("b45ca477-d655-4c7d-b626-edd0073fbd75",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("5e502a13-e2c2-464c-9ef6-16ad67a1308c",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("27ab0d91-e05c-4fdb-843d-b7fa5edc7c5d", "6944071b-7ad9-441a-b50a-486c901417f7",
                                       "b37fd4a0-125f-4e9b-864f-9e3ecc68b2c2", "fa3c45f0-c114-401e-840a-55730aa80502",
                                       "6a4ec265-9499-409a-a5dd-34cb2517d6e5", "a6da44e6-47d4-4889-9301-6eb06182d8ba",
                                       "35be1c41-960f-45f5-9aeb-4780da4a6a51"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, List.class,
                                                                 option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("b3c62cef-ee04-4d90-b38e-f43cd4750df2", "4813f88b-ef9f-40a9-80ac-7c8cb55aafe2",
                                       "5e8be596-9c9a-4c07-9672-967a20ddd4e5", "e961c85e-2e71-41ee-bf11-9af910346b2c",
                                       "a43c2135-b28a-4e7a-8e22-f7aaf422a2d2"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID,
                                                                    List.class, option));
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            FirmwareImageListOptions firmwareimagelistoptions1 = new FirmwareImageListOptions(Integer.valueOf(-63),
                                                                                              Long.valueOf(-116),
                                                                                              Order.getDefault(),
                                                                                              "6e89beaa-643a-4f42-9944-ff9aac194bea",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions2 = new FirmwareImageListOptions(Integer.valueOf(-63),
                                                                                              Long.valueOf(-116),
                                                                                              Order.getDefault(),
                                                                                              "6e89beaa-643a-4f42-9944-ff9aac194bea",
                                                                                              null, null);
            assertNotNull(firmwareimagelistoptions1);
            assertNotNull(firmwareimagelistoptions2);
            assertNotSame(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2.hashCode(), firmwareimagelistoptions1.hashCode());
            int hashCode = firmwareimagelistoptions1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, firmwareimagelistoptions1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            FirmwareImageListOptions firmwareimagelistoptions1 = new FirmwareImageListOptions(Integer.valueOf(-127),
                                                                                              Long.valueOf(-27),
                                                                                              Order.getDefault(),
                                                                                              "d152951c-d552-4cf8-ab02-be8687f58aa1",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions2 = new FirmwareImageListOptions(Integer.valueOf(-127),
                                                                                              Long.valueOf(-27),
                                                                                              Order.getDefault(),
                                                                                              "d152951c-d552-4cf8-ab02-be8687f58aa1",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions3 = new FirmwareImageListOptions(Integer.valueOf(119),
                                                                                              Long.valueOf(35),
                                                                                              Order.getDefault(),
                                                                                              "0a484a63-c4a2-437c-9ff9-fc90a86f7289",
                                                                                              null, null);
            assertNotNull(firmwareimagelistoptions1);
            assertNotNull(firmwareimagelistoptions2);
            assertNotNull(firmwareimagelistoptions3);
            assertNotSame(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertNotSame(firmwareimagelistoptions3, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions1, firmwareimagelistoptions2);
            assertEquals(firmwareimagelistoptions1, firmwareimagelistoptions1);
            assertFalse(firmwareimagelistoptions1.equals(null));
            assertNotEquals(firmwareimagelistoptions3, firmwareimagelistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
