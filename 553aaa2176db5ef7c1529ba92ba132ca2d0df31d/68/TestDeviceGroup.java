// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceGroup.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceGroup {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceGroup devicegroup1 = new DeviceGroup(new Date(1560440626499L), null,
                                                       "a446634c-66be-4207-b3de-505fcd2ae9b8", 18,
                                                       "f937a661-4bef-46fb-9799-65ad6652cd95",
                                                       "859d2d12-5b11-4b40-a29a-75d1fa0cd15e",
                                                       new Date(1560440630100L));
            DeviceGroup devicegroup2 = devicegroup1.clone();
            assertNotNull(devicegroup1);
            assertNotNull(devicegroup2);
            assertNotSame(devicegroup2, devicegroup1);
            assertEquals(devicegroup2, devicegroup1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceGroup devicegroup1 = new DeviceGroup(new Date(1560440634594L), null,
                                                       "1d73f632-1cb3-490c-b3e6-f1c3e106b618", -87,
                                                       "20035a82-0285-43de-8856-55c87a03ef28",
                                                       "9339fa1e-4b65-4b69-a53d-6bda23d140e9",
                                                       new Date(1560440630568L));
            DeviceGroup devicegroup2 = new DeviceGroup(new Date(1560440634594L), null,
                                                       "1d73f632-1cb3-490c-b3e6-f1c3e106b618", -87,
                                                       "20035a82-0285-43de-8856-55c87a03ef28",
                                                       "9339fa1e-4b65-4b69-a53d-6bda23d140e9",
                                                       new Date(1560440630568L));
            assertNotNull(devicegroup1);
            assertNotNull(devicegroup2);
            assertNotSame(devicegroup2, devicegroup1);
            assertEquals(devicegroup2, devicegroup1);
            assertEquals(devicegroup2.hashCode(), devicegroup1.hashCode());
            int hashCode = devicegroup1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, devicegroup1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceGroup devicegroup = new DeviceGroup(new Date(1560440626700L), null,
                                                  "bd442daa-a3e9-44e9-818f-e6809c81258f", -72,
                                                  "a5f50708-5688-44f3-9de7-a0edbf94fc9f",
                                                  "3faf2d7e-aaef-48a4-81e9-153b0bc45df3", new Date(1560440626070L));
        assertTrue(devicegroup.isValid());
        DeviceGroup devicegroupInvalid = new DeviceGroup(new Date(1560440634155L), null,
                                                         "15604bb7-dadb-40c5-aaac-7492cebd52e8de6c11cc-30cb-4304-b220-f52d409479ecd760d65c-4ecd-4c8e-b74d-3ff3a992cba3d6dd2423-a8b0-4908-83e1-018950d1d7709afd3a31-5c65-4a29-a382-ac7a7b741c8429b42053-34c4-4495-8dc3-3b147b5c99fe8e9fec5a-5a69-43d7-9699-f64d1ad6bfa2d35e0efd-db8e-4127-8253-eaaa25ab91796d8476bc-e3d3-4a22-bffe-f710a8fab77c9103b5e4-bc5d-49aa-82cb-0562879e4ce5e98caefb-aed7-4fb8-9bd0-7733f2b188c8e927920f-40b6-40ec-8641-920b5fb970beb99d15f0-5383-4017-92b1-be36281c1f66568deac4-331e-4666-a4ea-db67057e98350c7c89bc-55b8-4e2f-8c3b-b5967d403bd014f212f7-66a1-4601-b61a-22cc54cfc720fd636473-2c2e-4ecb-93b6-c92487fe40518e77f511-4aae-4ae9-bf24-073c8fc1e1ae21f421e9-c088-4a7a-a3bf-6018d63310f8f7466b5f-7473-42f5-acbc-5e4b78bb731ff93a01f3-8500-4766-84b7-01977e26c5fde25b2611-3b4a-4047-a2a0-c2b7f80f976705493de6-8ac5-403e-a529-2fad28d1befafe87ff26-0195-4fd3-8c01-d8c1d51b4ec474a73859-5aeb-4216-8ff8-336d65f77958d3763f5d-a8e2-453d-b688-1a1786620ec5ad30bf71-f904-434b-b3cb-4477cbf6045bb63b4df0-ea9a-4e9b-9179-aedd5932c8b8b8115de7-0dfd-4410-961f-6d10760cfba5552fb383-dbf3-4baa-8ed4-c093f031955babba264d-a3d0-4572-be00-996c8b7b5721243cbddd-fa01-4437-84dc-699557103951b05fd043-642a-4f1c-b6fc-d6a98f5b281d3541bbd2-5871-4eab-b717-e6163e70013d16d68e61-7bbb-430b-814a-0c1f17d6ee8ae2699aa0-5d08-411f-b343-568a5eaffd0907fdeef8-6077-4985-96cb-41eaa667ca8787c2db96-02b0-4358-97c0-74bac5fdb2687b54eafe-653f-4148-a323-3adf2cb4c5d248966270-6db4-438f-8206-b55c3371b79a6248abcc-85f5-4e17-8211-b5010544238d26767c26-d4ba-459d-8c21-ec88f0d7d4b556d2ede4-a438-4ac7-ab32-47888e28070f64264fd8-18eb-4373-b092-c900c98a47ce01043576-62b0-4403-8993-bb790d8665c1ff38c99a-9554-48c2-9adc-d4b771b1c39ed9df7b8b-59a0-4922-9e2f-29e20d7b20c281d7fa31-583a-479d-bed7-fba053920602eb778982-de40-4a32-a335-e8e9ce8e7526fd579df5-6c82-4336-9a13-2891cd64373dccd7ec06-5724-48f8-9adc-a860e75158bf3ad21292-441a-4cfa-bb0b-05d182885e0fa09e7e2c-dda5-4211-86e2-2d6346e109ead3c787f7-a4c8-439a-8be7-e9a4510ae2144aa5917a-463b-473f-b364-d4d8ed4a01bfc1be2436-56ef-422c-a66c-5d839a9e8fa4",
                                                         -98, "385684a2-c0a6-4eba-804d-905fb5d55fda",
                                                         "ac2036db-c28b-4def-aa7d-8537f3f40ee7d18a7d07-40fd-4ecd-8ea5-641fa5e57f03168dc142-12d4-4bda-8f30-3e2526998961da956ab7-1514-4486-b9ba-ed2711e20575",
                                                         new Date(1560440626306L));
        assertFalse(devicegroupInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceGroup devicegroup1 = new DeviceGroup(new Date(1560440627169L), null,
                                                       "0de4a189-ffc2-42f2-93cf-3b7863f928a9", 122,
                                                       "c8722701-2f88-461f-a91c-7879adcaa27c",
                                                       "a909e36a-db92-4c93-9bf9-5e5662894d71",
                                                       new Date(1560440632579L));
            DeviceGroup devicegroup2 = new DeviceGroup(new Date(1560440627169L), null,
                                                       "0de4a189-ffc2-42f2-93cf-3b7863f928a9", 122,
                                                       "c8722701-2f88-461f-a91c-7879adcaa27c",
                                                       "a909e36a-db92-4c93-9bf9-5e5662894d71",
                                                       new Date(1560440632579L));
            DeviceGroup devicegroup3 = new DeviceGroup(new Date(1560440632387L), null,
                                                       "9b849547-bfa2-4731-a620-364fb38735b5", -102,
                                                       "982c9ea3-dbd3-42b6-87cd-ff900ab28149",
                                                       "eacc27f9-cf92-4e46-a50c-cc949746cebb",
                                                       new Date(1560440627782L));
            assertNotNull(devicegroup1);
            assertNotNull(devicegroup2);
            assertNotNull(devicegroup3);
            assertNotSame(devicegroup2, devicegroup1);
            assertNotSame(devicegroup3, devicegroup1);
            assertEquals(devicegroup2, devicegroup1);
            assertEquals(devicegroup2, devicegroup1);
            assertEquals(devicegroup1, devicegroup2);
            assertEquals(devicegroup1, devicegroup1);
            assertFalse(devicegroup1.equals(null));
            assertNotEquals(devicegroup3, devicegroup1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
