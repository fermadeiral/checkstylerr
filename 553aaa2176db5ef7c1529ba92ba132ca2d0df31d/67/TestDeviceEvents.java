// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEvents.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEvents {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1560440628192L), null,
                                                          new Date(1560440628811L),
                                                          "855e80cf-23e7-42d0-9c64-4c9ff30462f2",
                                                          "5893a0cb-f7d2-4599-a749-b8433798aa69",
                                                          "56e5d716-81ea-4e97-b717-c62a7e5ad6a8",
                                                          "1fc73403-4d02-4385-a88b-af26555a9a81",
                                                          "d9ebaa7e-f0a6-4657-a5d2-65de775df65e",
                                                          "9b2bc7f1-3ed1-4b18-9f66-dfbcb1dc9a87", true);
            DeviceEvents deviceevents2 = deviceevents1.clone();
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1560440631204L), null,
                                                          new Date(1560440631878L),
                                                          "6caa76f3-f625-431b-9188-e5d90abf3384",
                                                          "1777f8c4-d760-456d-9be6-c9d461401b79",
                                                          "6f133d47-14eb-44af-86c9-4816863659ea",
                                                          "2f796771-c5ce-46ab-98fd-f60c4db5ae6d",
                                                          "6269259a-a558-480f-a18a-ef65e473de17",
                                                          "dc28b597-b410-413b-a55b-c3a1afb70dc2", false);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1560440631204L), null,
                                                          new Date(1560440631878L),
                                                          "6caa76f3-f625-431b-9188-e5d90abf3384",
                                                          "1777f8c4-d760-456d-9be6-c9d461401b79",
                                                          "6f133d47-14eb-44af-86c9-4816863659ea",
                                                          "2f796771-c5ce-46ab-98fd-f60c4db5ae6d",
                                                          "6269259a-a558-480f-a18a-ef65e473de17",
                                                          "dc28b597-b410-413b-a55b-c3a1afb70dc2", false);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2.hashCode(), deviceevents1.hashCode());
            int hashCode = deviceevents1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceevents1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEvents deviceevents = new DeviceEvents(null, new Date(1560440628478L), null, new Date(1560440633379L),
                                                     "49f372e8-ebcf-47ef-bc5a-c0077f42fd2c",
                                                     "4b59a15d-c456-4b16-9686-eb82c9971556",
                                                     "7a9722fb-f551-4c45-93e2-13698c168146",
                                                     "fc137072-9a9c-4ed9-8e07-9e394a1f6a1d",
                                                     "5f24de24-5949-4e4d-b046-02d5da8fe1b8",
                                                     "339724a2-f15b-4cd9-8240-cf9530b97126", true);
        assertTrue(deviceevents.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1560440626235L), null,
                                                          new Date(1560440632174L),
                                                          "f59b05c3-33ac-43dd-b946-1b129845c8cf",
                                                          "3aa6143c-2380-45b9-a1ca-2e6f83a94e23",
                                                          "9d37792a-a938-4a4a-869f-e3bb69c85d62",
                                                          "a56ae8ea-a289-46b8-ba44-5762acfb9cce",
                                                          "4003a2af-9cf3-4279-b87a-44727dfd4a19",
                                                          "dffd36ab-ead1-4204-82bc-1f513be0c3c7", true);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1560440626235L), null,
                                                          new Date(1560440632174L),
                                                          "f59b05c3-33ac-43dd-b946-1b129845c8cf",
                                                          "3aa6143c-2380-45b9-a1ca-2e6f83a94e23",
                                                          "9d37792a-a938-4a4a-869f-e3bb69c85d62",
                                                          "a56ae8ea-a289-46b8-ba44-5762acfb9cce",
                                                          "4003a2af-9cf3-4279-b87a-44727dfd4a19",
                                                          "dffd36ab-ead1-4204-82bc-1f513be0c3c7", true);
            DeviceEvents deviceevents3 = new DeviceEvents(null, new Date(1560440628025L), null,
                                                          new Date(1560440628571L),
                                                          "4d9d2250-9d47-4bef-b8a9-88341e34c5cd",
                                                          "9569af91-f341-4561-9abd-b0505984ee29",
                                                          "399bcfff-006c-49fc-8390-a7bbf5cd8d6f",
                                                          "d1a75b2d-685f-4261-925b-d97efa8fa40a",
                                                          "4c67a3f7-6b44-4b7e-8b04-3a2f09ae95f7",
                                                          "337410b0-7ea6-404f-9d29-ec0245cfc937", true);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotNull(deviceevents3);
            assertNotSame(deviceevents2, deviceevents1);
            assertNotSame(deviceevents3, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents1, deviceevents2);
            assertEquals(deviceevents1, deviceevents1);
            assertFalse(deviceevents1.equals(null));
            assertNotEquals(deviceevents3, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
