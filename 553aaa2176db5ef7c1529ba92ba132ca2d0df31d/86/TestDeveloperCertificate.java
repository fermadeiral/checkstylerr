// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.security.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeveloperCertificate.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeveloperCertificate {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("6b1865d4-e935-4277-bf18-746d19461c0c",
                                                                                  "ccb7ec56-b322-4db4-8818-5f269e7e0fa6",
                                                                                  new Date(1560440626221L),
                                                                                  "2aef5c7f-c782-4965-8008-c71ac5364664",
                                                                                  "082bd82f-5bd5-49c5-aaf0-1cb03433e3c6",
                                                                                  "8fc050ce-d1b0-4b6d-a589-4b2c08c69c5b",
                                                                                  "56e1c808-e8cd-4013-9e6f-0ff0e85d4e8d",
                                                                                  "398e0b82-3d81-4cf3-b88b-2df5e19cd9fd");
            DeveloperCertificate developercertificate2 = developercertificate1.clone();
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("8ae19c82-e4d2-4dbe-ace1-38812da29d63",
                                                                                  "14fa8b8d-2bf0-49ea-bdf4-a1d4449af3aa",
                                                                                  new Date(1560440631868L),
                                                                                  "732ff832-17f5-429a-ad6c-e2c9064162fd",
                                                                                  "c85e2ee0-bc50-4753-a171-0795ac4d2d19",
                                                                                  "382586b8-f01c-4ec3-9314-ffce9e8e4730",
                                                                                  "ba767e7f-feef-416f-98fb-75a99429567a",
                                                                                  "2452dcc2-bc78-45fb-b4fe-905321b369d7");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("8ae19c82-e4d2-4dbe-ace1-38812da29d63",
                                                                                  "14fa8b8d-2bf0-49ea-bdf4-a1d4449af3aa",
                                                                                  new Date(1560440631868L),
                                                                                  "732ff832-17f5-429a-ad6c-e2c9064162fd",
                                                                                  "c85e2ee0-bc50-4753-a171-0795ac4d2d19",
                                                                                  "382586b8-f01c-4ec3-9314-ffce9e8e4730",
                                                                                  "ba767e7f-feef-416f-98fb-75a99429567a",
                                                                                  "2452dcc2-bc78-45fb-b4fe-905321b369d7");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2.hashCode(), developercertificate1.hashCode());
            int hashCode = developercertificate1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, developercertificate1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeveloperCertificate developercertificate = new DeveloperCertificate("d963c830-5787-4cac-a16b-7d990089647c",
                                                                             "f0f94a25-140f-406c-98f5-1958a6905d6a",
                                                                             new Date(1560440635858L),
                                                                             "cac174fd-4b58-47e8-823b-61d6ba5c7ee2",
                                                                             "4684c359-63e8-483c-b5ca-d478eb39b5d7",
                                                                             "9324a1e1-458c-477c-8fcc-975dff6e4c64",
                                                                             "38801c18-a006-4a29-906d-579c5787f392",
                                                                             "60e5a9ea-78bf-46ec-8040-7a9ee2b53be0");
        assertTrue(developercertificate.isValid());
        DeveloperCertificate developercertificateInvalid = new DeveloperCertificate("be517111-d43d-4ae4-bd65-dd1d76162c14",
                                                                                    "ace6510b-e48d-46af-b47a-08752069c015",
                                                                                    new Date(1560440635749L),
                                                                                    "780a15a8-7eb0-4a08-b611-ba852df88227",
                                                                                    "83301a53-dc27-46d7-bb68-274a63f3bd9f",
                                                                                    "621872a0-79d6-403d-ba6a-93e540fea1c2",
                                                                                    null,
                                                                                    "4db9e84a-847c-41ff-bc90-3a9df7bb0053");
        assertFalse(developercertificateInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("8b597524-024f-4cd5-9446-b3beca235843",
                                                                                  "1a1f62ba-cae5-47e3-bc93-4780a24042a1",
                                                                                  new Date(1560440634328L),
                                                                                  "71205cbb-d7d0-4850-ae75-237535e291e7",
                                                                                  "dc5c673b-2805-441b-8c3b-9530e3cc029e",
                                                                                  "47cb39f1-ce21-45e9-9dd9-f43aecc91ae9",
                                                                                  "84948c39-4f1e-4348-8401-13b9f137f66c",
                                                                                  "7b53e790-44e9-4380-9af4-894e4cab9f83");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("8b597524-024f-4cd5-9446-b3beca235843",
                                                                                  "1a1f62ba-cae5-47e3-bc93-4780a24042a1",
                                                                                  new Date(1560440634328L),
                                                                                  "71205cbb-d7d0-4850-ae75-237535e291e7",
                                                                                  "dc5c673b-2805-441b-8c3b-9530e3cc029e",
                                                                                  "47cb39f1-ce21-45e9-9dd9-f43aecc91ae9",
                                                                                  "84948c39-4f1e-4348-8401-13b9f137f66c",
                                                                                  "7b53e790-44e9-4380-9af4-894e4cab9f83");
            DeveloperCertificate developercertificate3 = new DeveloperCertificate("92cfd127-004a-4f3f-9f6e-5e1cbb672013",
                                                                                  "3442abc0-904b-41c1-b11a-eaa0787054de",
                                                                                  new Date(1560440633449L),
                                                                                  "6ac288c7-d9fd-432f-9945-c0af40736c69",
                                                                                  "4b25ddd8-a806-4eb9-843e-f7be2caa1f4a",
                                                                                  "768265d8-7bef-46a4-88b0-9295d677d554",
                                                                                  "8c8a13ea-6dc2-4ac7-865b-99b9a4c4b04b",
                                                                                  "61b3acf4-7529-4f0b-bb0b-110a9d914d97");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotNull(developercertificate3);
            assertNotSame(developercertificate2, developercertificate1);
            assertNotSame(developercertificate3, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate1, developercertificate2);
            assertEquals(developercertificate1, developercertificate1);
            assertFalse(developercertificate1.equals(null));
            assertNotEquals(developercertificate3, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
