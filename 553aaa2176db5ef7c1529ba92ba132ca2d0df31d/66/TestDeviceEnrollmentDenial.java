// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEnrollmentDenial.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEnrollmentDenial {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("f45208d7fb27c60aa6f7980ca7e43569",
                                                                                        new Date(1560440626834L),
                                                                                        "8b05b5bc-8e8d-490f-b040-3fab43f0c819",
                                                                                        "f45208d7fb27c60aa6f7980ca7e43569",
                                                                                        "f45208d7fb27c60aa6f7980ca7e43569");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = deviceenrollmentdenial1.clone();
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("f45208d7fb27c60aa6f7980ca7e43569",
                                                                                        new Date(1560440628724L),
                                                                                        "b300fd6b-8be7-442a-a906-6dc439224848",
                                                                                        "f45208d7fb27c60aa6f7980ca7e43569",
                                                                                        "f45208d7fb27c60aa6f7980ca7e43569");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = new DeviceEnrollmentDenial("f45208d7fb27c60aa6f7980ca7e43569",
                                                                                        new Date(1560440628724L),
                                                                                        "b300fd6b-8be7-442a-a906-6dc439224848",
                                                                                        "f45208d7fb27c60aa6f7980ca7e43569",
                                                                                        "f45208d7fb27c60aa6f7980ca7e43569");
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2.hashCode(), deviceenrollmentdenial1.hashCode());
            int hashCode = deviceenrollmentdenial1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceenrollmentdenial1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEnrollmentDenial deviceenrollmentdenial = new DeviceEnrollmentDenial("f45208d7fb27c60aa6f7980ca7e43569",
                                                                                   new Date(1560440635504L),
                                                                                   "4ba8e3a8-06c1-4902-96f3-8b994203bee5",
                                                                                   "f45208d7fb27c60aa6f7980ca7e43569",
                                                                                   "f45208d7fb27c60aa6f7980ca7e43569");
        assertTrue(deviceenrollmentdenial.isValid());
        DeviceEnrollmentDenial deviceenrollmentdenialInvalid = new DeviceEnrollmentDenial("\u001511IU^Û²è…˜?åˆ±D\u0014'â½ˆ?/\u000eXëªŒ,#â±•í›¶:1à²±Eèº™åˆ?éƒ‚1R\u0006\u001eB1$$1\t1!.111\u001c1'ê€€1\u0006C1O\u0003ç¡š1I@D=1",
                                                                                          new Date(1560440632640L),
                                                                                          "0a0965a8-6ffd-4817-9f87-6d2d7dd0d00f",
                                                                                          "\u001511IU^Û²è…˜?åˆ±D\u0014'â½ˆ?/\u000eXëªŒ,#â±•í›¶:1à²±Eèº™åˆ?éƒ‚1R\u0006\u001eB1$$1\t1!.111\u001c1'ê€€1\u0006C1O\u0003ç¡š1I@D=1",
                                                                                          "\u001511IU^Û²è…˜?åˆ±D\u0014'â½ˆ?/\u000eXëªŒ,#â±•í›¶:1à²±Eèº™åˆ?éƒ‚1R\u0006\u001eB1$$1\t1!.111\u001c1'ê€€1\u0006C1O\u0003ç¡š1I@D=1");
        assertFalse(deviceenrollmentdenialInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("f45208d7fb27c60aa6f7980ca7e43569",
                                                                                        new Date(1560440635201L),
                                                                                        "e11f5310-359a-4e5d-925c-fe91e0b6d7c4",
                                                                                        "f45208d7fb27c60aa6f7980ca7e43569",
                                                                                        "f45208d7fb27c60aa6f7980ca7e43569");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = new DeviceEnrollmentDenial("f45208d7fb27c60aa6f7980ca7e43569",
                                                                                        new Date(1560440635201L),
                                                                                        "e11f5310-359a-4e5d-925c-fe91e0b6d7c4",
                                                                                        "f45208d7fb27c60aa6f7980ca7e43569",
                                                                                        "f45208d7fb27c60aa6f7980ca7e43569");
            DeviceEnrollmentDenial deviceenrollmentdenial3 = new DeviceEnrollmentDenial("f45208d7fb27c60aa6f7980ca7e43569",
                                                                                        new Date(1560440626915L),
                                                                                        "65206918-aaaf-4969-9a48-a828c0be12d4",
                                                                                        "f45208d7fb27c60aa6f7980ca7e43569",
                                                                                        "f45208d7fb27c60aa6f7980ca7e43569");
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotNull(deviceenrollmentdenial3);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertNotSame(deviceenrollmentdenial3, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial1, deviceenrollmentdenial2);
            assertEquals(deviceenrollmentdenial1, deviceenrollmentdenial1);
            assertFalse(deviceenrollmentdenial1.equals(null));
            assertNotEquals(deviceenrollmentdenial3, deviceenrollmentdenial1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
