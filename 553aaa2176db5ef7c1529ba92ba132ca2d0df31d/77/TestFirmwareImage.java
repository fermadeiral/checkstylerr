// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.deviceupdate.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model FirmwareImage.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestFirmwareImage {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            FirmwareImage firmwareimage1 = new FirmwareImage(new Date(1560440632213L),
                                                             "28b363f3-f723-4832-a88d-7652b4fe1117", -48,
                                                             "14966dd3-dce8-408c-83ec-4584624f2e9e",
                                                             "781f460f-e5eb-4ddd-b6a1-ff70ab983184",
                                                             "ef6025eb-474c-4620-b2e8-628ba17b794b",
                                                             "8bc0158d-fed9-497d-b40d-b9ff5ed36b8a",
                                                             new Date(1560440631160L));
            FirmwareImage firmwareimage2 = firmwareimage1.clone();
            assertNotNull(firmwareimage1);
            assertNotNull(firmwareimage2);
            assertNotSame(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage2, firmwareimage1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            FirmwareImage firmwareimage1 = new FirmwareImage(new Date(1560440626806L),
                                                             "708204bf-d639-4ffc-9e8a-9c9afd84f3a0", 125,
                                                             "b12ee001-298d-4c3f-afde-199fb2bd5e82",
                                                             "250fece6-68f9-4d1d-adf8-9fcf04c23f9a",
                                                             "d2a2cf52-b35d-4988-8f75-2e083005e78b",
                                                             "94d7ed66-8be0-4d31-b2bb-302d3f7bc66e",
                                                             new Date(1560440626520L));
            FirmwareImage firmwareimage2 = new FirmwareImage(new Date(1560440626806L),
                                                             "708204bf-d639-4ffc-9e8a-9c9afd84f3a0", 125,
                                                             "b12ee001-298d-4c3f-afde-199fb2bd5e82",
                                                             "250fece6-68f9-4d1d-adf8-9fcf04c23f9a",
                                                             "d2a2cf52-b35d-4988-8f75-2e083005e78b",
                                                             "94d7ed66-8be0-4d31-b2bb-302d3f7bc66e",
                                                             new Date(1560440626520L));
            assertNotNull(firmwareimage1);
            assertNotNull(firmwareimage2);
            assertNotSame(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage2.hashCode(), firmwareimage1.hashCode());
            int hashCode = firmwareimage1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, firmwareimage1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        FirmwareImage firmwareimage = new FirmwareImage(new Date(1560440627352L),
                                                        "c1117643-bacb-450b-bec9-77fb568e7024", 120,
                                                        "1aba7d30-618d-4e99-a2da-08a464295e59",
                                                        "a9a0cc46-9e29-484a-8c23-bc2e68babcef",
                                                        "e0239652-7a18-4eea-ae1c-3d820c18fb33",
                                                        "3e96b4af-f7b3-4f7d-a220-1b51abb0e106",
                                                        new Date(1560440634713L));
        assertTrue(firmwareimage.isValid());
        FirmwareImage firmwareimageInvalid = new FirmwareImage(new Date(1560440630460L),
                                                               "d8782fd1-c878-4623-8773-93c1273054a2", 5,
                                                               "aeaa4863-c9fc-4204-8e4a-f125df2c0704",
                                                               "f15353bd-ca5b-444a-9079-c77056b8af97011c40de-ec9d-45aa-beca-d4194892b1c7d8615c97-07fa-41e8-ad96-38a046fcc2de2cbdf383-5dbe-46cc-85c4-154d1c9c718430f3decb-b816-4cfd-bebb-5583e29896a96d11cd52-ef8a-4323-bbb5-b55da53fc97f8adbe7ae-4cf7-4e88-9925-7223f14fed47756712b8-75bc-4cdb-befd-7d785eb619fdd0f1b517-2004-4bb8-92e4-1d9f8cb4baba7c3df0e7-478a-4ea1-be13-669a52b06d41acb09939-1b32-40c0-9279-6de91f255af85d03d658-6b40-4d7b-995e-204afcc6ed7005e8e73a-354e-4d96-b79a-89316ec92de63e1677b4-9228-41f6-9a64-1a4ba4e7cc065f7078ed-3624-4a9b-93fb-772d67dd52b0c9197672-ace8-4aa6-b71e-2e7ed0dfda6f790dc54f-ccb7-487b-b589-d81b2e9240461dae1f78-d535-463d-aae9-9a622e27435b70cf575d-06b9-439a-94f9-0b6305b76ed75a1afb0d-cbd3-466f-9d17-4560c3dd81c5bcb215b0-ab5d-4e95-bc2a-acb961576534d4e875ac-11cc-48ce-9e73-03f69ec0ca56d4c10681-e4d4-425f-8db3-79d36e88ab8e9e460f8a-84a5-4754-b3c2-6f88e4580f617993ce05-0bed-4144-88d1-2b5659d4414ae44a9889-7b39-4c0f-89d9-12443c1520c8fc03158d-7c4c-4486-96ca-8db3e025568441d8aaf4-a5d3-4227-ae9f-d0eaa49ecc1f19279d35-85d3-41c3-bbb1-535aaea5bd267315f1a7-b808-4242-988d-f9b0c7e197006831fb07-854c-4d42-a6c3-ec7ac0dd56969372a625-61ca-40ad-9b22-47bb2e23bf22288548a4-847a-458c-bef5-11f34c1d458743f1609d-4457-4f57-8179-0f03b488ba8672f07537-a013-4078-a67c-e161eb039ddcef8b829a-c52c-449b-a803-1cff9b279e2c6c3847d6-5e78-434e-bcaf-a6164bec840c6c15cc2b-3bb2-40b2-83cc-09cf3c7207946d083630-03a2-49dc-bb31-36fc344567b20d049765-d9a4-4928-8c36-d9f72aecf880b45ace81-19c6-4e07-8820-beb881d47532aa6d89f9-c3c2-4225-b74b-97f7cce0155d5ffa786b-a8f6-4bd8-8d6b-ffc533bcc6e984deeef2-ae13-4655-be4b-2319906d180f2696c00f-97a9-4fba-8b87-85241fe7107e1506828b-fd24-4db9-939a-5173055443b097078d8b-9997-4339-aa5e-7c0425024fc9bd6055b7-fac7-41de-b09d-93a2362e8785dd8e7546-2be5-4760-9d05-3543bae98927231bcfdf-6da5-4550-a7da-dc60b81e182af7a62462-2179-4282-8924-54f72a051beeba663b2e-896c-40d3-b931-ae9bab9e11d049f279ee-99f3-44b6-afe5-2e2e0e5da208307a86d4-6c23-4537-a65c-7e1d1aa7c03a512ad327-2a66-4b26-b4ec-775966a6713cdfc6bad1-dec0-4022-ad39-c96e2f3049ab",
                                                               "212b6a44-2869-46d2-92a8-5535b28bb19d",
                                                               "fd4a800b-6157-4c1f-8a8d-9300dfe855b16a39822f-ae5a-4d4a-81e3-5bf83d857e0927efec7d-c597-439c-bd9f-866b882530dbd30f118d-1a97-4bd1-8574-a798b1ab5b54",
                                                               new Date(1560440629758L));
        assertFalse(firmwareimageInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            FirmwareImage firmwareimage1 = new FirmwareImage(new Date(1560440630757L),
                                                             "5203d16a-30ea-4ba2-8608-66e94459d042", -93,
                                                             "6281597b-f284-43a1-9b4d-c435ee461b30",
                                                             "02bd5035-461a-4486-a1d1-f1333c3a333e",
                                                             "ff402c39-cddf-4da2-b7c2-b7a86812c58d",
                                                             "68d4fa98-9a1a-4bf6-8713-dfc515505f83",
                                                             new Date(1560440630399L));
            FirmwareImage firmwareimage2 = new FirmwareImage(new Date(1560440630757L),
                                                             "5203d16a-30ea-4ba2-8608-66e94459d042", -93,
                                                             "6281597b-f284-43a1-9b4d-c435ee461b30",
                                                             "02bd5035-461a-4486-a1d1-f1333c3a333e",
                                                             "ff402c39-cddf-4da2-b7c2-b7a86812c58d",
                                                             "68d4fa98-9a1a-4bf6-8713-dfc515505f83",
                                                             new Date(1560440630399L));
            FirmwareImage firmwareimage3 = new FirmwareImage(new Date(1560440632625L),
                                                             "32d9b487-94e2-4724-b392-279129357c1c", 43,
                                                             "aa057ca0-87b6-4c7b-a040-d6c1c57e6405",
                                                             "a2dc8040-5895-41c1-a817-5fa3a7a05954",
                                                             "88b69cc8-f4ba-468d-9f1b-9460af47170d",
                                                             "bae481e2-d017-467e-bfa3-4a5860532521",
                                                             new Date(1560440635497L));
            assertNotNull(firmwareimage1);
            assertNotNull(firmwareimage2);
            assertNotNull(firmwareimage3);
            assertNotSame(firmwareimage2, firmwareimage1);
            assertNotSame(firmwareimage3, firmwareimage1);
            assertEquals(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage1, firmwareimage2);
            assertEquals(firmwareimage1, firmwareimage1);
            assertFalse(firmwareimage1.equals(null));
            assertNotEquals(firmwareimage3, firmwareimage1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
