// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantApiKey.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantApiKey {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("f45208d7fb27c60aa6f7980ca7e43569",
                                                                   new Date(1560440635485L), 18,
                                                                   "f45208d7fb27c60aa6f7980ca7e43569",
                                                                   "dd9a51bb-9c5a-40f5-8e7d-e2ba810251e6", -43,
                                                                   "2c0bfe76-46dd-4e34-9f03-9f371f9b255b",
                                                                   "f45208d7fb27c60aa6f7980ca7e43569",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1560440633213L));
            SubtenantApiKey subtenantapikey2 = subtenantapikey1.clone();
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("f45208d7fb27c60aa6f7980ca7e43569",
                                                                   new Date(1560440633986L), -66,
                                                                   "f45208d7fb27c60aa6f7980ca7e43569",
                                                                   "0ed0a9c4-4553-4c04-948f-2369717b4fc9", -123,
                                                                   "b5cd24a6-4226-455e-b68f-7f6f20ba769f",
                                                                   "f45208d7fb27c60aa6f7980ca7e43569",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1560440631068L));
            SubtenantApiKey subtenantapikey2 = new SubtenantApiKey("f45208d7fb27c60aa6f7980ca7e43569",
                                                                   new Date(1560440633986L), -66,
                                                                   "f45208d7fb27c60aa6f7980ca7e43569",
                                                                   "0ed0a9c4-4553-4c04-948f-2369717b4fc9", -123,
                                                                   "b5cd24a6-4226-455e-b68f-7f6f20ba769f",
                                                                   "f45208d7fb27c60aa6f7980ca7e43569",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1560440631068L));
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2.hashCode(), subtenantapikey1.hashCode());
            int hashCode = subtenantapikey1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantapikey1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantApiKey subtenantapikey = new SubtenantApiKey("f45208d7fb27c60aa6f7980ca7e43569",
                                                              new Date(1560440629590L), 34,
                                                              "f45208d7fb27c60aa6f7980ca7e43569",
                                                              "f8b2e09a-bc9a-40b0-9b35-7688a2eb88de", -32,
                                                              "a29dea22-95e9-4d7a-9a25-a35f04b55a1d",
                                                              "f45208d7fb27c60aa6f7980ca7e43569",
                                                              SubtenantApiKeyStatus.getDefault(),
                                                              new Date(1560440629062L));
        assertTrue(subtenantapikey.isValid());
        SubtenantApiKey subtenantapikeyInvalid = new SubtenantApiKey(null, new Date(1560440634106L), 60,
                                                                     "\u001511IU^Û²è…˜?åˆ±D\u0014'â½ˆ?/\u000eXëªŒ,#â±•í›¶:1à²±Eèº™åˆ?éƒ‚1R\u0006\u001eB1$$1\t1!.111\u001c1'ê€€1\u0006C1O\u0003ç¡š1I@D=1",
                                                                     "86ce592c-4a3b-4b7d-a14b-41b17e54f58d", -71, null,
                                                                     "\u001511IU^Û²è…˜?åˆ±D\u0014'â½ˆ?/\u000eXëªŒ,#â±•í›¶:1à²±Eèº™åˆ?éƒ‚1R\u0006\u001eB1$$1\t1!.111\u001c1'ê€€1\u0006C1O\u0003ç¡š1I@D=1",
                                                                     SubtenantApiKeyStatus.getDefault(),
                                                                     new Date(1560440635148L));
        assertFalse(subtenantapikeyInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("f45208d7fb27c60aa6f7980ca7e43569",
                                                                   new Date(1560440635803L), 47,
                                                                   "f45208d7fb27c60aa6f7980ca7e43569",
                                                                   "7f2a2072-e921-42dc-8427-9f3ca2c3a5b9", 32,
                                                                   "abf0b0c1-a5a4-4e25-ac84-fe3e2127923e",
                                                                   "f45208d7fb27c60aa6f7980ca7e43569",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1560440631792L));
            SubtenantApiKey subtenantapikey2 = new SubtenantApiKey("f45208d7fb27c60aa6f7980ca7e43569",
                                                                   new Date(1560440635803L), 47,
                                                                   "f45208d7fb27c60aa6f7980ca7e43569",
                                                                   "7f2a2072-e921-42dc-8427-9f3ca2c3a5b9", 32,
                                                                   "abf0b0c1-a5a4-4e25-ac84-fe3e2127923e",
                                                                   "f45208d7fb27c60aa6f7980ca7e43569",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1560440631792L));
            SubtenantApiKey subtenantapikey3 = new SubtenantApiKey("f45208d7fb27c60aa6f7980ca7e43569",
                                                                   new Date(1560440632354L), 70,
                                                                   "f45208d7fb27c60aa6f7980ca7e43569",
                                                                   "9025acaf-298d-41b3-a540-f674ce380977", 31,
                                                                   "ee833188-f247-46a5-9351-3db0dc84433c",
                                                                   "f45208d7fb27c60aa6f7980ca7e43569",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1560440628464L));
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotNull(subtenantapikey3);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertNotSame(subtenantapikey3, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey1, subtenantapikey2);
            assertEquals(subtenantapikey1, subtenantapikey1);
            assertFalse(subtenantapikey1.equals(null));
            assertNotEquals(subtenantapikey3, subtenantapikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
