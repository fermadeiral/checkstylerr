// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model ActiveSession.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestActiveSession {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ActiveSession activesession1 = new ActiveSession("f45208d7fb27c60aa6f7980ca7e43569",
                                                             "de67281b-ef74-4465-a7fa-926d4d14781d",
                                                             new Date(1560440633561L),
                                                             "0a5b7cdd-8dd4-445d-ab32-dd1448f48c19",
                                                             "fdcccf32-0b09-4089-8a71-dddddb632209");
            ActiveSession activesession2 = activesession1.clone();
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotSame(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ActiveSession activesession1 = new ActiveSession("f45208d7fb27c60aa6f7980ca7e43569",
                                                             "4f69f3fb-bd2d-4df2-986b-4cd1b14caac4",
                                                             new Date(1560440626257L),
                                                             "2a2e1844-0b49-43c3-bf42-2fc13075cb27",
                                                             "d45009db-98d3-4be3-a71d-16235cf539a4");
            ActiveSession activesession2 = new ActiveSession("f45208d7fb27c60aa6f7980ca7e43569",
                                                             "4f69f3fb-bd2d-4df2-986b-4cd1b14caac4",
                                                             new Date(1560440626257L),
                                                             "2a2e1844-0b49-43c3-bf42-2fc13075cb27",
                                                             "d45009db-98d3-4be3-a71d-16235cf539a4");
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotSame(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession2.hashCode(), activesession1.hashCode());
            int hashCode = activesession1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, activesession1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ActiveSession activesession = new ActiveSession("f45208d7fb27c60aa6f7980ca7e43569",
                                                        "744840e1-bd0c-4955-bad4-e40f92998db1",
                                                        new Date(1560440627220L),
                                                        "cb98a524-8109-4eed-a3ae-6d610ba7a9a9",
                                                        "47ffcc31-8f5a-4c00-a253-f070e5945368");
        assertTrue(activesession.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ActiveSession activesession1 = new ActiveSession("f45208d7fb27c60aa6f7980ca7e43569",
                                                             "f90ab1a8-f864-47b7-b281-388c9cfbd22e",
                                                             new Date(1560440627407L),
                                                             "d272e31b-0c2f-4478-8388-cbdedefbce6a",
                                                             "f5200520-12a6-4d2d-b1d8-6e66fcc195e9");
            ActiveSession activesession2 = new ActiveSession("f45208d7fb27c60aa6f7980ca7e43569",
                                                             "f90ab1a8-f864-47b7-b281-388c9cfbd22e",
                                                             new Date(1560440627407L),
                                                             "d272e31b-0c2f-4478-8388-cbdedefbce6a",
                                                             "f5200520-12a6-4d2d-b1d8-6e66fcc195e9");
            ActiveSession activesession3 = new ActiveSession("f45208d7fb27c60aa6f7980ca7e43569",
                                                             "ff677e7a-7786-48b1-abeb-4595f4f4c6f5",
                                                             new Date(1560440629185L),
                                                             "c246c322-7254-4fcb-9e52-8a24f1e06e96",
                                                             "2d82543a-a554-45ec-b5aa-8db21a6adba4");
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotNull(activesession3);
            assertNotSame(activesession2, activesession1);
            assertNotSame(activesession3, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession1, activesession2);
            assertEquals(activesession1, activesession1);
            assertFalse(activesession1.equals(null));
            assertNotEquals(activesession3, activesession1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
