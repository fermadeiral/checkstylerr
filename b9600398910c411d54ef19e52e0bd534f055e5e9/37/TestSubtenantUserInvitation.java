// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantUserInvitation.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantUserInvitation {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantUserInvitation subtenantuserinvitation1 = new SubtenantUserInvitation("ae7a4e096c0cf61badbe341c63408ff3",
                                                                                           new Date(1559148834649L),
                                                                                           "01971.42cad@9d066.me",
                                                                                           new Date(1559148834505L),
                                                                                           "ae7a4e096c0cf61badbe341c63408ff3",
                                                                                           null,
                                                                                           new Date(1559148831569L),
                                                                                           "ae7a4e096c0cf61badbe341c63408ff3");
            SubtenantUserInvitation subtenantuserinvitation2 = subtenantuserinvitation1.clone();
            assertNotNull(subtenantuserinvitation1);
            assertNotNull(subtenantuserinvitation2);
            assertNotSame(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantUserInvitation subtenantuserinvitation1 = new SubtenantUserInvitation("ae7a4e096c0cf61badbe341c63408ff3",
                                                                                           new Date(1559148826971L),
                                                                                           "60abf.70e86@a77fa.fr",
                                                                                           new Date(1559148834121L),
                                                                                           "ae7a4e096c0cf61badbe341c63408ff3",
                                                                                           null,
                                                                                           new Date(1559148829467L),
                                                                                           "ae7a4e096c0cf61badbe341c63408ff3");
            SubtenantUserInvitation subtenantuserinvitation2 = new SubtenantUserInvitation("ae7a4e096c0cf61badbe341c63408ff3",
                                                                                           new Date(1559148826971L),
                                                                                           "60abf.70e86@a77fa.fr",
                                                                                           new Date(1559148834121L),
                                                                                           "ae7a4e096c0cf61badbe341c63408ff3",
                                                                                           null,
                                                                                           new Date(1559148829467L),
                                                                                           "ae7a4e096c0cf61badbe341c63408ff3");
            assertNotNull(subtenantuserinvitation1);
            assertNotNull(subtenantuserinvitation2);
            assertNotSame(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2.hashCode(), subtenantuserinvitation1.hashCode());
            int hashCode = subtenantuserinvitation1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantuserinvitation1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantUserInvitation subtenantuserinvitation = new SubtenantUserInvitation("ae7a4e096c0cf61badbe341c63408ff3",
                                                                                      new Date(1559148827327L),
                                                                                      "e8b1d.db5ac@1a445.me",
                                                                                      new Date(1559148825962L),
                                                                                      "ae7a4e096c0cf61badbe341c63408ff3",
                                                                                      null, new Date(1559148828738L),
                                                                                      "ae7a4e096c0cf61badbe341c63408ff3");
        assertTrue(subtenantuserinvitation.isValid());
        SubtenantUserInvitation subtenantuserinvitationInvalid = new SubtenantUserInvitation(null,
                                                                                             new Date(1559148831329L),
                                                                                             null,
                                                                                             new Date(1559148831631L),
                                                                                             "52*çš†2?\u0015U25Bâ ¢5\u0017ê¶ž\u000b5#\b2í›¹2\u00045HDá?¨5O2[25\u0002222`FQï³ŽEDé‹‚2%ã“—5é’€522\u0015ë¢¬!H\u0016225èŒ¡5ã®”2",
                                                                                             null,
                                                                                             new Date(1559148826129L),
                                                                                             "52*çš†2?\u0015U25Bâ ¢5\u0017ê¶ž\u000b5#\b2í›¹2\u00045HDá?¨5O2[25\u0002222`FQï³ŽEDé‹‚2%ã“—5é’€522\u0015ë¢¬!H\u0016225èŒ¡5ã®”2");
        assertFalse(subtenantuserinvitationInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantUserInvitation subtenantuserinvitation1 = new SubtenantUserInvitation("ae7a4e096c0cf61badbe341c63408ff3",
                                                                                           new Date(1559148833567L),
                                                                                           "314c7.38596@866d2.fr",
                                                                                           new Date(1559148827466L),
                                                                                           "ae7a4e096c0cf61badbe341c63408ff3",
                                                                                           null,
                                                                                           new Date(1559148835055L),
                                                                                           "ae7a4e096c0cf61badbe341c63408ff3");
            SubtenantUserInvitation subtenantuserinvitation2 = new SubtenantUserInvitation("ae7a4e096c0cf61badbe341c63408ff3",
                                                                                           new Date(1559148833567L),
                                                                                           "314c7.38596@866d2.fr",
                                                                                           new Date(1559148827466L),
                                                                                           "ae7a4e096c0cf61badbe341c63408ff3",
                                                                                           null,
                                                                                           new Date(1559148835055L),
                                                                                           "ae7a4e096c0cf61badbe341c63408ff3");
            SubtenantUserInvitation subtenantuserinvitation3 = new SubtenantUserInvitation("ae7a4e096c0cf61badbe341c63408ff3",
                                                                                           new Date(1559148834831L),
                                                                                           "690a4.55da2@0e92a.me",
                                                                                           new Date(1559148830967L),
                                                                                           "ae7a4e096c0cf61badbe341c63408ff3",
                                                                                           null,
                                                                                           new Date(1559148829287L),
                                                                                           "ae7a4e096c0cf61badbe341c63408ff3");
            assertNotNull(subtenantuserinvitation1);
            assertNotNull(subtenantuserinvitation2);
            assertNotNull(subtenantuserinvitation3);
            assertNotSame(subtenantuserinvitation2, subtenantuserinvitation1);
            assertNotSame(subtenantuserinvitation3, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation1, subtenantuserinvitation2);
            assertEquals(subtenantuserinvitation1, subtenantuserinvitation1);
            assertFalse(subtenantuserinvitation1.equals(null));
            assertNotEquals(subtenantuserinvitation3, subtenantuserinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
