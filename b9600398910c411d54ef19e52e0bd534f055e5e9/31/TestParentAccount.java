// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model ParentAccount.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestParentAccount {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("e27d1.db0d4@f4d25.me",
                                                             "68437763-0654-4b01-b578-0a5842170372",
                                                             "ae7a4e096c0cf61badbe341c63408ff3");
            ParentAccount parentaccount2 = parentaccount1.clone();
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotSame(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("81da9.1d015@ddcce.me",
                                                             "5c217c40-ccce-480a-bd0f-d09bbed406c7",
                                                             "ae7a4e096c0cf61badbe341c63408ff3");
            ParentAccount parentaccount2 = new ParentAccount("81da9.1d015@ddcce.me",
                                                             "5c217c40-ccce-480a-bd0f-d09bbed406c7",
                                                             "ae7a4e096c0cf61badbe341c63408ff3");
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotSame(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount2.hashCode(), parentaccount1.hashCode());
            int hashCode = parentaccount1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, parentaccount1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ParentAccount parentaccount = new ParentAccount("aec6b.7060b@6dac9.me", "3c93e024-741b-49a6-a5a4-d2e86f76b488",
                                                        "ae7a4e096c0cf61badbe341c63408ff3");
        assertTrue(parentaccount.isValid());
        ParentAccount parentaccountInvalid = new ParentAccount(".ã„¨>>?\u0004âŒ?\u000eí?½à¸ˆì¶·+ì¼´ì¹®í„£0>\bä©ºì¶Ÿí…²\bá?·ê¯—åŒ¸ì¶¦á¤?á¬„í‚«7í‘Ÿ0ì¼žç‰—\u000fì»®&\u001aâ“­ì¸‘í?†1ì¼´â­¥á½œâ¬¯î¤ˆâ® ï¨¥ã¶´í‘­ì¹Œ6>áˆµíˆ¼ì¼¤>ì¾¡\u0017í?‹íŠª(",
                                                               "65cae298-e88e-479b-adb4-16599ca0c9141f476bc5-6e43-4b08-be4a-1e1d4f67f56cf95b06fd-9938-412f-874d-6fea79c9e02e",
                                                               "52*çš†2?\u0015U25Bâ ¢5\u0017ê¶ž\u000b5#\b2í›¹2\u00045HDá?¨5O2[25\u0002222`FQï³ŽEDé‹‚2%ã“—5é’€522\u0015ë¢¬!H\u0016225èŒ¡5ã®”2");
        assertFalse(parentaccountInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("9e25e.8b98d@b343c.fr",
                                                             "4f6dc9ba-076d-4922-96be-495905667a49",
                                                             "ae7a4e096c0cf61badbe341c63408ff3");
            ParentAccount parentaccount2 = new ParentAccount("9e25e.8b98d@b343c.fr",
                                                             "4f6dc9ba-076d-4922-96be-495905667a49",
                                                             "ae7a4e096c0cf61badbe341c63408ff3");
            ParentAccount parentaccount3 = new ParentAccount("ffd16.36900@359b8.fr",
                                                             "58c7ecbb-555a-406a-bfc8-3b98857785f3",
                                                             "ae7a4e096c0cf61badbe341c63408ff3");
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotNull(parentaccount3);
            assertNotSame(parentaccount2, parentaccount1);
            assertNotSame(parentaccount3, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount1, parentaccount2);
            assertEquals(parentaccount1, parentaccount1);
            assertFalse(parentaccount1.equals(null));
            assertNotEquals(parentaccount3, parentaccount1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
