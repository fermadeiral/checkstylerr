// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import com.arm.mbed.cloud.sdk.common.Order;
import com.arm.mbed.cloud.sdk.common.listing.ListOptionsEncoder;
import com.arm.mbed.cloud.sdk.common.listing.filtering.FilterOperator;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEventsListOptions.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEventsListOptions {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEventsListOptions deviceeventslistoptions1 = new DeviceEventsListOptions(Integer.valueOf(-124),
                                                                                           Long.valueOf(40),
                                                                                           Order.getDefault(),
                                                                                           "f981c534-c051-4b28-893e-18bb0501bb74",
                                                                                           null, null);
            DeviceEventsListOptions deviceeventslistoptions2 = deviceeventslistoptions1.clone();
            assertNotNull(deviceeventslistoptions1);
            assertNotNull(deviceeventslistoptions2);
            assertNotSame(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2, deviceeventslistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the filters method.
     */
    @SuppressWarnings({ "boxing", "resource" })
    @Test
    public void testFilters() {
        try {
            DeviceEventsListOptions option = new DeviceEventsListOptions().equalToDeviceId("c820da15-ab2c-4df8-9311-bda373c0be82")
                                                                          .notEqualToDeviceId("8b4517b6-1461-4010-a5de-c4656cb12cff")
                                                                          .inDeviceIds(Arrays.asList("22e1d331-c047-4a5c-96f8-4ac29ee69b31",
                                                                                                     "20924952-4155-4cc2-8037-8e019bc1511d",
                                                                                                     "41689541-edb8-41f4-8b3f-29eb2217dc01"))
                                                                          .notInDeviceIds(Arrays.asList("3e859124-61ce-41c7-a2f8-cb62eae53f8d"))
                                                                          .equalToDescription("4e001fe7-4e1b-40fd-b868-64e00be3b07d")
                                                                          .notEqualToDescription("11ce89d7-df40-45a5-8087-e0edd157c80e")
                                                                          .inDescriptions(Arrays.asList("290cc278-c43f-4bcb-ad5f-ad7c820c5164",
                                                                                                        "b67f756e-8911-4386-bc40-e7de078642d0",
                                                                                                        "ca1cfc91-85a0-4f44-866f-32e4cc0e7718",
                                                                                                        "7424f795-3d29-4a2e-9fc8-54e9c013de78",
                                                                                                        "fb4141b6-a4c1-407b-a8d9-e1df285916e3",
                                                                                                        "663de02c-d9b7-40af-9f11-f2fcf14e02f3",
                                                                                                        "64e785fb-6961-45a5-a3ec-97c0f66b583e",
                                                                                                        "b459d195-076a-4284-9e64-605ebd0e7eb1"))
                                                                          .notInDescriptions(Arrays.asList("b3b4bab1-ce6d-47ea-95f8-d82f3ca560ab"))
                                                                          .inDateTimes(Arrays.asList(new Date(1559148834850L),
                                                                                                     new Date(1559148834338L),
                                                                                                     new Date(1559148829063L),
                                                                                                     new Date(1559148827121L)))
                                                                          .notInDateTimes(Arrays.asList(new Date(1559148832320L),
                                                                                                        new Date(1559148833013L)))
                                                                          .lessThanDateTime(new Date(1559148830329L))
                                                                          .greaterThanDateTime(new Date(1559148830699L))
                                                                          .equalToStateChange(Boolean.FALSE)
                                                                          .notEqualToStateChange(Boolean.FALSE)
                                                                          .equalToId("1aeec919-9430-4f21-b4a2-6947e7e85d75")
                                                                          .notEqualToId("18cbda8f-0fd2-4677-8675-0834b6c3c7e1")
                                                                          .inIds(Arrays.asList("a27856a2-264a-4262-a645-27eea04a88ec",
                                                                                               "ba0541f6-359e-4a7f-af1f-1395efa7f9e0",
                                                                                               "96791123-b223-445c-8afc-fbacee37922a",
                                                                                               "0edb0640-d4ad-44a9-9eee-d097aa3bdfd5",
                                                                                               "8dcef078-aa47-4703-812c-c1296b87363b"))
                                                                          .notInIds(Arrays.asList("bae9019a-0c71-4696-b11c-4fc73303cc73",
                                                                                                  "6dba0fdb-52ee-44f8-bfd5-517073fbc7c6",
                                                                                                  "929d563d-c797-4840-a495-5eb9d5ee46de",
                                                                                                  "3014f634-a653-4670-ba70-fc406865a1b5",
                                                                                                  "d041f64d-b43a-411c-837a-4bf9076f3539"))
                                                                          .equalToEventType("cb3b17a7-3b60-4563-bf2f-d0b3c2f5da1d")
                                                                          .notEqualToEventType("0adc8750-5050-48b6-bf5e-e9b7a76cbed1")
                                                                          .inEventTypes(Arrays.asList("8604846a-3484-4370-a6e2-a9cc1d002557",
                                                                                                      "d685f950-a6e2-48b5-9722-581763811b01",
                                                                                                      "7295baa6-9b95-4b8f-9fcf-4adabd724768",
                                                                                                      "697859fb-efee-4596-9aa2-d4dee058f4b7"))
                                                                          .notInEventTypes(Arrays.asList("b2ec34af-d703-4b24-9982-4cddc679681d",
                                                                                                         "f877554d-4367-455f-ad03-54b097fd1e11",
                                                                                                         "d19a83ac-7bfc-4e39-b424-e7ce2963cc65",
                                                                                                         "ae3e6d7e-139e-4c11-80f6-d5d1b3127d3d"));
            assertTrue(option.hasFilters());
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID, FilterOperator.EQUAL));
            assertNotNull(option.getDeviceIdFilters());
            assertEquals("c820da15-ab2c-4df8-9311-bda373c0be82",
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDeviceIdFilters());
            assertEquals("8b4517b6-1461-4010-a5de-c4656cb12cff",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID, FilterOperator.IN));
            assertNotNull(option.getDeviceIdFilters());
            assertEquals(Arrays.asList("22e1d331-c047-4a5c-96f8-4ac29ee69b31", "20924952-4155-4cc2-8037-8e019bc1511d",
                                       "41689541-edb8-41f4-8b3f-29eb2217dc01"),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID,
                                                                 List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getDeviceIdFilters());
            assertEquals(Arrays.asList("3e859124-61ce-41c7-a2f8-cb62eae53f8d"),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID,
                                                                    List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("4e001fe7-4e1b-40fd-b868-64e00be3b07d",
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("11ce89d7-df40-45a5-8087-e0edd157c80e",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                       String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("290cc278-c43f-4bcb-ad5f-ad7c820c5164", "b67f756e-8911-4386-bc40-e7de078642d0",
                                       "ca1cfc91-85a0-4f44-866f-32e4cc0e7718", "7424f795-3d29-4a2e-9fc8-54e9c013de78",
                                       "fb4141b6-a4c1-407b-a8d9-e1df285916e3", "663de02c-d9b7-40af-9f11-f2fcf14e02f3",
                                       "64e785fb-6961-45a5-a3ec-97c0f66b583e", "b459d195-076a-4284-9e64-605ebd0e7eb1"),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                 List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("b3b4bab1-ce6d-47ea-95f8-d82f3ca560ab"),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME, FilterOperator.IN));
            assertNotNull(option.getDateTimeFilters());
            assertEquals(Arrays.asList(new Date(1559148834850L), new Date(1559148834338L), new Date(1559148829063L),
                                       new Date(1559148827121L)),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME,
                                                                 List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME, FilterOperator.NOT_IN));
            assertNotNull(option.getDateTimeFilters());
            assertEquals(Arrays.asList(new Date(1559148832320L), new Date(1559148833013L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME,
                                                                    List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME, FilterOperator.LESS_THAN));
            assertNotNull(option.getDateTimeFilters());
            assertEquals(new Date(1559148830329L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME, FilterOperator.GREATER_THAN));
            assertNotNull(option.getDateTimeFilters());
            assertEquals(new Date(1559148830699L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE, FilterOperator.EQUAL));
            assertNotNull(option.getStateChangeFilters());
            assertEquals(Boolean.FALSE,
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE,
                                                                    Boolean.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getStateChangeFilters());
            assertEquals(Boolean.FALSE,
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE,
                                                                       Boolean.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, FilterOperator.EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("1aeec919-9430-4f21-b4a2-6947e7e85d75",
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("18cbda8f-0fd2-4677-8675-0834b6c3c7e1",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, FilterOperator.IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("a27856a2-264a-4262-a645-27eea04a88ec", "ba0541f6-359e-4a7f-af1f-1395efa7f9e0",
                                       "96791123-b223-445c-8afc-fbacee37922a", "0edb0640-d4ad-44a9-9eee-d097aa3bdfd5",
                                       "8dcef078-aa47-4703-812c-c1296b87363b"),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, List.class,
                                                                 option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("bae9019a-0c71-4696-b11c-4fc73303cc73", "6dba0fdb-52ee-44f8-bfd5-517073fbc7c6",
                                       "929d563d-c797-4840-a495-5eb9d5ee46de", "3014f634-a653-4670-ba70-fc406865a1b5",
                                       "d041f64d-b43a-411c-837a-4bf9076f3539"),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID,
                                                                    List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE, FilterOperator.EQUAL));
            assertNotNull(option.getEventTypeFilters());
            assertEquals("cb3b17a7-3b60-4563-bf2f-d0b3c2f5da1d",
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE,
                                                                    String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getEventTypeFilters());
            assertEquals("0adc8750-5050-48b6-bf5e-e9b7a76cbed1",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE,
                                                                       String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE, FilterOperator.IN));
            assertNotNull(option.getEventTypeFilters());
            assertEquals(Arrays.asList("8604846a-3484-4370-a6e2-a9cc1d002557", "d685f950-a6e2-48b5-9722-581763811b01",
                                       "7295baa6-9b95-4b8f-9fcf-4adabd724768", "697859fb-efee-4596-9aa2-d4dee058f4b7"),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE,
                                                                 List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE, FilterOperator.NOT_IN));
            assertNotNull(option.getEventTypeFilters());
            assertEquals(Arrays.asList("b2ec34af-d703-4b24-9982-4cddc679681d", "f877554d-4367-455f-ad03-54b097fd1e11",
                                       "d19a83ac-7bfc-4e39-b424-e7ce2963cc65", "ae3e6d7e-139e-4c11-80f6-d5d1b3127d3d"),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE,
                                                                    List.class, option));
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEventsListOptions deviceeventslistoptions1 = new DeviceEventsListOptions(Integer.valueOf(96),
                                                                                           Long.valueOf(94),
                                                                                           Order.getDefault(),
                                                                                           "6520720b-a6cf-4d6a-bdba-56484c80fd74",
                                                                                           null, null);
            DeviceEventsListOptions deviceeventslistoptions2 = new DeviceEventsListOptions(Integer.valueOf(96),
                                                                                           Long.valueOf(94),
                                                                                           Order.getDefault(),
                                                                                           "6520720b-a6cf-4d6a-bdba-56484c80fd74",
                                                                                           null, null);
            assertNotNull(deviceeventslistoptions1);
            assertNotNull(deviceeventslistoptions2);
            assertNotSame(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2.hashCode(), deviceeventslistoptions1.hashCode());
            int hashCode = deviceeventslistoptions1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceeventslistoptions1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEventsListOptions deviceeventslistoptions1 = new DeviceEventsListOptions(Integer.valueOf(-13),
                                                                                           Long.valueOf(42),
                                                                                           Order.getDefault(),
                                                                                           "bc6bcddc-de34-4eec-b2b3-d188d013f9f3",
                                                                                           null, null);
            DeviceEventsListOptions deviceeventslistoptions2 = new DeviceEventsListOptions(Integer.valueOf(-13),
                                                                                           Long.valueOf(42),
                                                                                           Order.getDefault(),
                                                                                           "bc6bcddc-de34-4eec-b2b3-d188d013f9f3",
                                                                                           null, null);
            DeviceEventsListOptions deviceeventslistoptions3 = new DeviceEventsListOptions(Integer.valueOf(7),
                                                                                           Long.valueOf(29),
                                                                                           Order.getDefault(),
                                                                                           "bd160d8c-8d95-4930-847a-8ebf32aa124c",
                                                                                           null, null);
            assertNotNull(deviceeventslistoptions1);
            assertNotNull(deviceeventslistoptions2);
            assertNotNull(deviceeventslistoptions3);
            assertNotSame(deviceeventslistoptions2, deviceeventslistoptions1);
            assertNotSame(deviceeventslistoptions3, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions1, deviceeventslistoptions2);
            assertEquals(deviceeventslistoptions1, deviceeventslistoptions1);
            assertFalse(deviceeventslistoptions1.equals(null));
            assertNotEquals(deviceeventslistoptions3, deviceeventslistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
