// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEvents.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEvents {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1559148830644L), null,
                                                          new Date(1559148827056L),
                                                          "e40b4230-b4b2-443c-a156-ec82f8746dc7",
                                                          "df952522-8afa-44ea-bd75-9eb4ddb80737",
                                                          "c76fb1dd-264f-49c8-9564-c08c598605bb",
                                                          "fae0d13f-6af4-4ad8-9cb5-e51b15886fe6",
                                                          "07bffc31-c186-43a2-8d8b-cfeaaa3855c7",
                                                          "20269383-e3ba-467d-acd4-bf8c18d5f0d4", false);
            DeviceEvents deviceevents2 = deviceevents1.clone();
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1559148832606L), null,
                                                          new Date(1559148831710L),
                                                          "5f8a6a94-2555-4d15-91e6-5ddd82a771a5",
                                                          "0316664e-4e88-4456-aa11-2da6dededa6c",
                                                          "ce0a8e5e-214f-4c26-aefd-a019d8d9a3cf",
                                                          "805d0e24-e033-48fc-bd57-55294a60e0ec",
                                                          "d19da84c-24f7-49e9-b5b4-f45f10945a50",
                                                          "af519918-cb70-4037-8bc7-15f51c2cf3e9", false);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1559148832606L), null,
                                                          new Date(1559148831710L),
                                                          "5f8a6a94-2555-4d15-91e6-5ddd82a771a5",
                                                          "0316664e-4e88-4456-aa11-2da6dededa6c",
                                                          "ce0a8e5e-214f-4c26-aefd-a019d8d9a3cf",
                                                          "805d0e24-e033-48fc-bd57-55294a60e0ec",
                                                          "d19da84c-24f7-49e9-b5b4-f45f10945a50",
                                                          "af519918-cb70-4037-8bc7-15f51c2cf3e9", false);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2.hashCode(), deviceevents1.hashCode());
            int hashCode = deviceevents1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceevents1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEvents deviceevents = new DeviceEvents(null, new Date(1559148826991L), null, new Date(1559148826918L),
                                                     "62493f30-e422-48e9-9794-6b29758c1a67",
                                                     "cd88c4ec-653e-421f-b75e-ca9160ab3301",
                                                     "86d11978-76e6-4f0b-be11-924d9d9ddf4a",
                                                     "9ff171e9-e3cf-4fff-8502-b5760e66ff9b",
                                                     "4d28ba56-6f0b-4a48-b27f-4f843fbbbc86",
                                                     "8136e3c2-2e0d-4483-8570-20e5d7118abf", false);
        assertTrue(deviceevents.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1559148832650L), null,
                                                          new Date(1559148831463L),
                                                          "85e21afd-afb9-44f7-8207-401d39e0165a",
                                                          "e9985b79-d562-468c-bd9b-108f33c4d72c",
                                                          "de902226-b3e3-47da-9b11-97eb3139bd36",
                                                          "5c552267-ff58-471b-98e8-52318344d2cf",
                                                          "af314671-9e29-47ef-8870-e637c7b21528",
                                                          "22b5ad54-f62a-48d4-b395-dad5e10c55af", true);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1559148832650L), null,
                                                          new Date(1559148831463L),
                                                          "85e21afd-afb9-44f7-8207-401d39e0165a",
                                                          "e9985b79-d562-468c-bd9b-108f33c4d72c",
                                                          "de902226-b3e3-47da-9b11-97eb3139bd36",
                                                          "5c552267-ff58-471b-98e8-52318344d2cf",
                                                          "af314671-9e29-47ef-8870-e637c7b21528",
                                                          "22b5ad54-f62a-48d4-b395-dad5e10c55af", true);
            DeviceEvents deviceevents3 = new DeviceEvents(null, new Date(1559148835394L), null,
                                                          new Date(1559148826564L),
                                                          "57c09a14-39be-4938-97db-1f69f37b42d0",
                                                          "10967bd0-3666-4797-8a1c-1dc805422eac",
                                                          "f3725843-8220-4556-9a5e-a41506baadea",
                                                          "15333fbd-00e9-4b8f-9655-37809eb95b12",
                                                          "6f9bd24c-d7d7-47a7-b8fb-2c91e3dd23c8",
                                                          "5b927a3c-37cf-403d-b986-3713704cf2b6", true);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotNull(deviceevents3);
            assertNotSame(deviceevents2, deviceevents1);
            assertNotSame(deviceevents3, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents1, deviceevents2);
            assertEquals(deviceevents1, deviceevents1);
            assertFalse(deviceevents1.equals(null));
            assertNotEquals(deviceevents3, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
