// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.security.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeveloperCertificate.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeveloperCertificate {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("e00e83f0-3bce-48a1-aafc-210576bbff61",
                                                                                  "8284caa2-b202-43ac-9781-909049788c50",
                                                                                  new Date(1559148832359L),
                                                                                  "021c929e-af82-4f6a-b451-14a0b5a239b4",
                                                                                  "990ae52c-83a9-4381-9004-43953f696c85",
                                                                                  "0fc88f04-4cc3-4aff-9d11-f44bc609a233",
                                                                                  "48fec940-2b36-42a5-9e70-c25e8735221d",
                                                                                  "874945be-fd97-4576-a190-7974d30bc2c6");
            DeveloperCertificate developercertificate2 = developercertificate1.clone();
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("2c87e0ca-dc80-4294-9bd2-80e24f8057d9",
                                                                                  "e557016b-7313-4d08-8812-deaf4070762b",
                                                                                  new Date(1559148828570L),
                                                                                  "5dde2b11-7d6e-40d9-86ce-942b5101436d",
                                                                                  "4e56130f-62e0-4b50-a877-5708f467f683",
                                                                                  "b466bd05-6bae-4df5-977e-160b2965bf36",
                                                                                  "2bb1d1f5-0a48-4638-9268-303276a0c96c",
                                                                                  "78ce5233-cca8-46e7-9bd9-e5ef9fd5d672");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("2c87e0ca-dc80-4294-9bd2-80e24f8057d9",
                                                                                  "e557016b-7313-4d08-8812-deaf4070762b",
                                                                                  new Date(1559148828570L),
                                                                                  "5dde2b11-7d6e-40d9-86ce-942b5101436d",
                                                                                  "4e56130f-62e0-4b50-a877-5708f467f683",
                                                                                  "b466bd05-6bae-4df5-977e-160b2965bf36",
                                                                                  "2bb1d1f5-0a48-4638-9268-303276a0c96c",
                                                                                  "78ce5233-cca8-46e7-9bd9-e5ef9fd5d672");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2.hashCode(), developercertificate1.hashCode());
            int hashCode = developercertificate1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, developercertificate1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeveloperCertificate developercertificate = new DeveloperCertificate("0b2cbe97-4a8b-49de-8644-078cb0757a45",
                                                                             "ccc24589-9af1-4c0a-a260-9fbdcfadb1f8",
                                                                             new Date(1559148834150L),
                                                                             "12a3ed22-47fc-4f23-9765-ac7aad196cd2",
                                                                             "99a2462a-9a36-4f3f-9df6-fff759577e07",
                                                                             "8cf090d0-240d-4184-87f4-c3446f5119ab",
                                                                             "2c239f07-64ab-4c13-b19e-cc5dabc9e5b1",
                                                                             "852b2c21-95ca-4c5c-84a1-ca07f2939f8d");
        assertTrue(developercertificate.isValid());
        DeveloperCertificate developercertificateInvalid = new DeveloperCertificate("901e52fc-8e37-4404-b4c8-cdb34e9409a5",
                                                                                    "40fcd7a8-103f-4dee-a1b9-9caefa86654d",
                                                                                    new Date(1559148832163L),
                                                                                    "ab6a56af-2483-4bb1-bdcf-1a1fbaeaa092",
                                                                                    "680f9c1a-d6de-42da-9f9a-20a10b6bc7a8",
                                                                                    "93352540-5d11-42c7-b5fe-db9616f59f5d",
                                                                                    null,
                                                                                    "704f92d0-442b-434c-a3a5-206ec64bf31a");
        assertFalse(developercertificateInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("49251600-4b00-48e3-a0fa-8169676d60dc",
                                                                                  "e802d8a6-d049-4ee7-9aee-e8bd1758886b",
                                                                                  new Date(1559148826848L),
                                                                                  "20e4c580-469e-470f-b397-5ec1be00f67d",
                                                                                  "9c732f1f-d1d7-4643-95ee-6d8fdd8aaf42",
                                                                                  "0c9744a4-0068-4068-ba41-22719b9ae51a",
                                                                                  "436fa72e-ff9e-4004-a381-e54c9143d547",
                                                                                  "f278dca2-1008-49aa-a118-7cad585e26ce");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("49251600-4b00-48e3-a0fa-8169676d60dc",
                                                                                  "e802d8a6-d049-4ee7-9aee-e8bd1758886b",
                                                                                  new Date(1559148826848L),
                                                                                  "20e4c580-469e-470f-b397-5ec1be00f67d",
                                                                                  "9c732f1f-d1d7-4643-95ee-6d8fdd8aaf42",
                                                                                  "0c9744a4-0068-4068-ba41-22719b9ae51a",
                                                                                  "436fa72e-ff9e-4004-a381-e54c9143d547",
                                                                                  "f278dca2-1008-49aa-a118-7cad585e26ce");
            DeveloperCertificate developercertificate3 = new DeveloperCertificate("26b3a5ba-2a9c-4979-bdba-9fc71083aa71",
                                                                                  "16c10580-d836-40a2-99e2-e7985c7e46cf",
                                                                                  new Date(1559148825573L),
                                                                                  "8d348508-6a3e-45ee-a223-758780f59893",
                                                                                  "093e0f06-2c4f-42d7-b1d6-301491ca46c0",
                                                                                  "629adee7-9b9c-4dc9-a347-7fe338e8072e",
                                                                                  "5bae759f-c4a2-43ea-9a6e-5ea4d6dbd9be",
                                                                                  "c745adba-4e77-4a5f-bdcb-c101d9feb6c4");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotNull(developercertificate3);
            assertNotSame(developercertificate2, developercertificate1);
            assertNotSame(developercertificate3, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate1, developercertificate2);
            assertEquals(developercertificate1, developercertificate1);
            assertFalse(developercertificate1.equals(null));
            assertNotEquals(developercertificate3, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
