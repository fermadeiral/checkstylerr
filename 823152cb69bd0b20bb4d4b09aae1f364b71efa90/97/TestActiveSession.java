// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model ActiveSession.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestActiveSession {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ActiveSession activesession1 = new ActiveSession("5aac302d4dc51de8d52d8348d01b06c5",
                                                             "e625ff3c-14a0-4b01-b6dc-c7a56ccbb5a9",
                                                             new Date(1567417609712L),
                                                             "382c57be-2305-4f56-ad20-d3c9b8336b2e",
                                                             "98befc37-6a0e-4c91-8171-d3c6b45b1597");
            ActiveSession activesession2 = activesession1.clone();
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotSame(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ActiveSession activesession1 = new ActiveSession("5aac302d4dc51de8d52d8348d01b06c5",
                                                             "93e7afed-d091-4ca6-947c-dce9f7ee8424",
                                                             new Date(1567417609510L),
                                                             "f76390fb-bf7b-488d-ba75-feb3c604d0e5",
                                                             "2b842682-70f8-4b7e-9482-69467a7cdb25");
            ActiveSession activesession2 = new ActiveSession("5aac302d4dc51de8d52d8348d01b06c5",
                                                             "93e7afed-d091-4ca6-947c-dce9f7ee8424",
                                                             new Date(1567417609510L),
                                                             "f76390fb-bf7b-488d-ba75-feb3c604d0e5",
                                                             "2b842682-70f8-4b7e-9482-69467a7cdb25");
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotSame(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession2.hashCode(), activesession1.hashCode());
            int hashCode = activesession1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, activesession1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ActiveSession activesession = new ActiveSession("5aac302d4dc51de8d52d8348d01b06c5",
                                                        "e58f6ef4-d60b-4afc-9105-f6f8f7df0b17",
                                                        new Date(1567417606391L),
                                                        "e714c0c8-3481-40a4-a477-77e4aad83f5e",
                                                        "a52dd860-7aaa-4020-a5bb-7e45cdf776bd");
        assertTrue(activesession.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ActiveSession activesession1 = new ActiveSession("5aac302d4dc51de8d52d8348d01b06c5",
                                                             "081cc22f-2f1e-40ad-a95f-70a4b7cabe4a",
                                                             new Date(1567417605024L),
                                                             "10ef3093-3627-4dd8-a16d-f6596d64c68b",
                                                             "8f45cf17-d684-422d-8d49-01d9e1748ff3");
            ActiveSession activesession2 = new ActiveSession("5aac302d4dc51de8d52d8348d01b06c5",
                                                             "081cc22f-2f1e-40ad-a95f-70a4b7cabe4a",
                                                             new Date(1567417605024L),
                                                             "10ef3093-3627-4dd8-a16d-f6596d64c68b",
                                                             "8f45cf17-d684-422d-8d49-01d9e1748ff3");
            ActiveSession activesession3 = new ActiveSession("5aac302d4dc51de8d52d8348d01b06c5",
                                                             "bf813956-09f2-4dd2-a247-5a10e09f931b",
                                                             new Date(1567417606432L),
                                                             "b2d509e0-5010-4e36-8918-e60a66440522",
                                                             "38b1ac5c-6cc5-4f7c-8a65-486e75d07caa");
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotNull(activesession3);
            assertNotSame(activesession2, activesession1);
            assertNotSame(activesession3, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession1, activesession2);
            assertEquals(activesession1, activesession1);
            assertFalse(activesession1.equals(null));
            assertNotEquals(activesession3, activesession1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
