// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import com.arm.mbed.cloud.sdk.common.Order;
import com.arm.mbed.cloud.sdk.common.listing.ListOptionsEncoder;
import com.arm.mbed.cloud.sdk.common.listing.filtering.FilterOperator;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEventsListOptions.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEventsListOptions {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEventsListOptions deviceeventslistoptions1 = new DeviceEventsListOptions(Integer.valueOf(19),
                                                                                           Long.valueOf(55),
                                                                                           Order.getDefault(),
                                                                                           "5d912cd9-efab-45a1-97e9-3ff8560d71f4",
                                                                                           null, null);
            DeviceEventsListOptions deviceeventslistoptions2 = deviceeventslistoptions1.clone();
            assertNotNull(deviceeventslistoptions1);
            assertNotNull(deviceeventslistoptions2);
            assertNotSame(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2, deviceeventslistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the filters method.
     */
    @SuppressWarnings({ "boxing", "resource" })
    @Test
    public void testFilters() {
        try {
            DeviceEventsListOptions option = new DeviceEventsListOptions().equalToDeviceId("a14ea3e6-68d7-486c-b7a2-0d2dd4d14388")
                                                                          .notEqualToDeviceId("3b74f661-8339-489a-a31c-198792251ec6")
                                                                          .inDeviceIds(Arrays.asList("17c88acf-d06f-4f76-bbf8-9c82fd6556e8",
                                                                                                     "5e7a7d88-886b-4a6f-9f16-a7549605e6d2",
                                                                                                     "8a401f4d-9111-4349-a378-5e02a52df31c",
                                                                                                     "d1570a7d-5f9e-4de5-a5fe-99b6282d770a",
                                                                                                     "e3ebc7fd-ae16-4992-87e9-067a29ae0592",
                                                                                                     "1de12036-192c-4e16-bf7b-958a3f92a8cc",
                                                                                                     "09c36667-71fe-417c-9a30-154f7eedbd93"))
                                                                          .notInDeviceIds(Arrays.asList("44151770-994e-4baf-bd4d-ea62fd9f5ca9"))
                                                                          .equalToDescription("99cd829c-3b98-414c-8dee-9fb544da2e94")
                                                                          .notEqualToDescription("306cab32-1cc1-4fba-9659-43fee4d72367")
                                                                          .inDescriptions(Arrays.asList("99587514-b160-4a7a-a205-4370f2871d12",
                                                                                                        "b7736c75-6c0e-4e80-ad85-1874ea6e2758",
                                                                                                        "6c592f8a-d130-48d3-bcae-f4912d424db2",
                                                                                                        "8e873c70-bcb3-47e7-ab4a-5b49fc4f94f7",
                                                                                                        "bbb3eed0-09f5-4545-97f2-035fe475cf2d",
                                                                                                        "0daf9ea4-90f5-4839-9810-90ee5f512f4a",
                                                                                                        "ac9ba14a-daa7-4378-8412-a94b0ca3f66e",
                                                                                                        "261f1e08-1821-4ce5-b114-f762269a7576",
                                                                                                        "cbae39f7-b495-4c4d-8c3a-30cc6372c2a7"))
                                                                          .notInDescriptions(Arrays.asList("72c0c81a-daed-4cc1-88d5-81c47fa9b77c",
                                                                                                           "b8c875a7-c2f1-47da-89cd-cbcca3b85c82"))
                                                                          .inDateTimes(Arrays.asList(new Date(1567417605188L),
                                                                                                     new Date(1567417608849L),
                                                                                                     new Date(1567417611781L),
                                                                                                     new Date(1567417608120L),
                                                                                                     new Date(1567417606205L),
                                                                                                     new Date(1567417602988L),
                                                                                                     new Date(1567417607927L),
                                                                                                     new Date(1567417608445L),
                                                                                                     new Date(1567417608351L)))
                                                                          .notInDateTimes(Arrays.asList(new Date(1567417603486L),
                                                                                                        new Date(1567417604036L),
                                                                                                        new Date(1567417609772L),
                                                                                                        new Date(1567417607406L)))
                                                                          .lessThanDateTime(new Date(1567417605091L))
                                                                          .greaterThanDateTime(new Date(1567417610528L))
                                                                          .equalToStateChange(Boolean.FALSE)
                                                                          .notEqualToStateChange(Boolean.FALSE)
                                                                          .equalToId("551ece14-5b5e-4bc4-b30f-20e2385ad232")
                                                                          .notEqualToId("754c006c-75fc-46b2-a876-cf1febf4850c")
                                                                          .inIds(Arrays.asList("c4d4c3d6-c450-4f75-9a05-edf1da4353b3",
                                                                                               "c8a86784-17c2-4ba5-83da-b6bdd4904700",
                                                                                               "0afc46fe-e937-4419-a7a0-452f08b5fa3a",
                                                                                               "7b280cf3-986f-469a-9e83-2c44659653a2",
                                                                                               "20ecf39e-dbe8-4212-9dd6-5c24c3551fcf",
                                                                                               "148cc54a-c592-42b8-a955-1945a9b4a353",
                                                                                               "d466c00c-c8af-4587-b14c-9a5af9c06d0f",
                                                                                               "0398ebea-c2ea-47f7-9ab6-8e53393ece64"))
                                                                          .notInIds(Arrays.asList("3398d2e7-f190-4779-95ee-5494e3c07e6d",
                                                                                                  "523db30f-8a1e-440a-88db-ef1d0dd9a623",
                                                                                                  "96d16744-c748-4be9-9e53-99955aa26e12"))
                                                                          .equalToEventType("dabdef27-7c9b-492a-bb83-981cbcc1254a")
                                                                          .notEqualToEventType("00970b2d-65c3-4373-b837-d6b5f6cb1ba3")
                                                                          .inEventTypes(Arrays.asList("59a61960-4ade-4bfa-869b-fd76ec59fbed",
                                                                                                      "12e5ea0f-f08a-4e4a-8f2f-867643c4189d",
                                                                                                      "60ee63ba-522f-417f-9aab-527e8888db99"))
                                                                          .notInEventTypes(Arrays.asList("c328c601-58eb-4125-b7de-7324d3f35e34",
                                                                                                         "a31ff8ec-806d-44b7-85ee-cb602a1c6f40",
                                                                                                         "cbc0d065-b8b3-4871-b1f5-b66cd9f1e814",
                                                                                                         "52392410-3fc1-4f37-b696-533b6d429102",
                                                                                                         "33bcf087-9183-4270-93b2-2e3ef6ee9567",
                                                                                                         "9995408a-8b4d-49e1-9d63-0710c8b45293",
                                                                                                         "9949b4e4-d109-4114-8162-2a36118e3b10"));
            assertTrue(option.hasFilters());
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID, FilterOperator.EQUAL));
            assertNotNull(option.getDeviceIdFilters());
            assertEquals("a14ea3e6-68d7-486c-b7a2-0d2dd4d14388",
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDeviceIdFilters());
            assertEquals("3b74f661-8339-489a-a31c-198792251ec6",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID, FilterOperator.IN));
            assertNotNull(option.getDeviceIdFilters());
            assertEquals(Arrays.asList("17c88acf-d06f-4f76-bbf8-9c82fd6556e8", "5e7a7d88-886b-4a6f-9f16-a7549605e6d2",
                                       "8a401f4d-9111-4349-a378-5e02a52df31c", "d1570a7d-5f9e-4de5-a5fe-99b6282d770a",
                                       "e3ebc7fd-ae16-4992-87e9-067a29ae0592", "1de12036-192c-4e16-bf7b-958a3f92a8cc",
                                       "09c36667-71fe-417c-9a30-154f7eedbd93"),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID,
                                                                 List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getDeviceIdFilters());
            assertEquals(Arrays.asList("44151770-994e-4baf-bd4d-ea62fd9f5ca9"),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID,
                                                                    List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("99cd829c-3b98-414c-8dee-9fb544da2e94",
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("306cab32-1cc1-4fba-9659-43fee4d72367",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                       String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("99587514-b160-4a7a-a205-4370f2871d12", "b7736c75-6c0e-4e80-ad85-1874ea6e2758",
                                       "6c592f8a-d130-48d3-bcae-f4912d424db2", "8e873c70-bcb3-47e7-ab4a-5b49fc4f94f7",
                                       "bbb3eed0-09f5-4545-97f2-035fe475cf2d", "0daf9ea4-90f5-4839-9810-90ee5f512f4a",
                                       "ac9ba14a-daa7-4378-8412-a94b0ca3f66e", "261f1e08-1821-4ce5-b114-f762269a7576",
                                       "cbae39f7-b495-4c4d-8c3a-30cc6372c2a7"),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                 List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("72c0c81a-daed-4cc1-88d5-81c47fa9b77c", "b8c875a7-c2f1-47da-89cd-cbcca3b85c82"),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME, FilterOperator.IN));
            assertNotNull(option.getDateTimeFilters());
            assertEquals(Arrays.asList(new Date(1567417605188L), new Date(1567417608849L), new Date(1567417611781L),
                                       new Date(1567417608120L), new Date(1567417606205L), new Date(1567417602988L),
                                       new Date(1567417607927L), new Date(1567417608445L), new Date(1567417608351L)),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME,
                                                                 List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME, FilterOperator.NOT_IN));
            assertNotNull(option.getDateTimeFilters());
            assertEquals(Arrays.asList(new Date(1567417603486L), new Date(1567417604036L), new Date(1567417609772L),
                                       new Date(1567417607406L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME,
                                                                    List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME, FilterOperator.LESS_THAN));
            assertNotNull(option.getDateTimeFilters());
            assertEquals(new Date(1567417605091L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME, FilterOperator.GREATER_THAN));
            assertNotNull(option.getDateTimeFilters());
            assertEquals(new Date(1567417610528L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE, FilterOperator.EQUAL));
            assertNotNull(option.getStateChangeFilters());
            assertEquals(Boolean.FALSE,
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE,
                                                                    Boolean.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getStateChangeFilters());
            assertEquals(Boolean.FALSE,
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE,
                                                                       Boolean.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, FilterOperator.EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("551ece14-5b5e-4bc4-b30f-20e2385ad232",
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("754c006c-75fc-46b2-a876-cf1febf4850c",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, FilterOperator.IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("c4d4c3d6-c450-4f75-9a05-edf1da4353b3", "c8a86784-17c2-4ba5-83da-b6bdd4904700",
                                       "0afc46fe-e937-4419-a7a0-452f08b5fa3a", "7b280cf3-986f-469a-9e83-2c44659653a2",
                                       "20ecf39e-dbe8-4212-9dd6-5c24c3551fcf", "148cc54a-c592-42b8-a955-1945a9b4a353",
                                       "d466c00c-c8af-4587-b14c-9a5af9c06d0f", "0398ebea-c2ea-47f7-9ab6-8e53393ece64"),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, List.class,
                                                                 option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("3398d2e7-f190-4779-95ee-5494e3c07e6d", "523db30f-8a1e-440a-88db-ef1d0dd9a623",
                                       "96d16744-c748-4be9-9e53-99955aa26e12"),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID,
                                                                    List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE, FilterOperator.EQUAL));
            assertNotNull(option.getEventTypeFilters());
            assertEquals("dabdef27-7c9b-492a-bb83-981cbcc1254a",
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE,
                                                                    String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getEventTypeFilters());
            assertEquals("00970b2d-65c3-4373-b837-d6b5f6cb1ba3",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE,
                                                                       String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE, FilterOperator.IN));
            assertNotNull(option.getEventTypeFilters());
            assertEquals(Arrays.asList("59a61960-4ade-4bfa-869b-fd76ec59fbed", "12e5ea0f-f08a-4e4a-8f2f-867643c4189d",
                                       "60ee63ba-522f-417f-9aab-527e8888db99"),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE,
                                                                 List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE, FilterOperator.NOT_IN));
            assertNotNull(option.getEventTypeFilters());
            assertEquals(Arrays.asList("c328c601-58eb-4125-b7de-7324d3f35e34", "a31ff8ec-806d-44b7-85ee-cb602a1c6f40",
                                       "cbc0d065-b8b3-4871-b1f5-b66cd9f1e814", "52392410-3fc1-4f37-b696-533b6d429102",
                                       "33bcf087-9183-4270-93b2-2e3ef6ee9567", "9995408a-8b4d-49e1-9d63-0710c8b45293",
                                       "9949b4e4-d109-4114-8162-2a36118e3b10"),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE,
                                                                    List.class, option));
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEventsListOptions deviceeventslistoptions1 = new DeviceEventsListOptions(Integer.valueOf(107),
                                                                                           Long.valueOf(53),
                                                                                           Order.getDefault(),
                                                                                           "fb630800-2d5d-4a77-b53a-dd6d7e3a5ba7",
                                                                                           null, null);
            DeviceEventsListOptions deviceeventslistoptions2 = new DeviceEventsListOptions(Integer.valueOf(107),
                                                                                           Long.valueOf(53),
                                                                                           Order.getDefault(),
                                                                                           "fb630800-2d5d-4a77-b53a-dd6d7e3a5ba7",
                                                                                           null, null);
            assertNotNull(deviceeventslistoptions1);
            assertNotNull(deviceeventslistoptions2);
            assertNotSame(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2.hashCode(), deviceeventslistoptions1.hashCode());
            int hashCode = deviceeventslistoptions1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceeventslistoptions1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEventsListOptions deviceeventslistoptions1 = new DeviceEventsListOptions(Integer.valueOf(105),
                                                                                           Long.valueOf(-79),
                                                                                           Order.getDefault(),
                                                                                           "96316522-06d0-4caa-9eda-d64ddd116b0b",
                                                                                           null, null);
            DeviceEventsListOptions deviceeventslistoptions2 = new DeviceEventsListOptions(Integer.valueOf(105),
                                                                                           Long.valueOf(-79),
                                                                                           Order.getDefault(),
                                                                                           "96316522-06d0-4caa-9eda-d64ddd116b0b",
                                                                                           null, null);
            DeviceEventsListOptions deviceeventslistoptions3 = new DeviceEventsListOptions(Integer.valueOf(122),
                                                                                           Long.valueOf(-14),
                                                                                           Order.getDefault(),
                                                                                           "194afac0-6258-44c5-bcd5-e05e59f1c284",
                                                                                           null, null);
            assertNotNull(deviceeventslistoptions1);
            assertNotNull(deviceeventslistoptions2);
            assertNotNull(deviceeventslistoptions3);
            assertNotSame(deviceeventslistoptions2, deviceeventslistoptions1);
            assertNotSame(deviceeventslistoptions3, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions1, deviceeventslistoptions2);
            assertEquals(deviceeventslistoptions1, deviceeventslistoptions1);
            assertFalse(deviceeventslistoptions1.equals(null));
            assertNotEquals(deviceeventslistoptions3, deviceeventslistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
