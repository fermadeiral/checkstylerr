// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.deviceupdate.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model FirmwareImage.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestFirmwareImage {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            FirmwareImage firmwareimage1 = new FirmwareImage(new Date(1567417604296L),
                                                             "95912e31-bd5f-47d7-90fa-9243ffa9da5a", 67,
                                                             "1a402538-1cdf-407e-a989-20d14b58a2a8",
                                                             "27718127-ecfa-4c64-8dce-647fbbdcec34",
                                                             "c3abe4d2-af0b-4665-98a9-497e6f452fde",
                                                             "b4d85012-c0c5-4d3f-919e-fabf311dccbd",
                                                             new Date(1567417606966L));
            FirmwareImage firmwareimage2 = firmwareimage1.clone();
            assertNotNull(firmwareimage1);
            assertNotNull(firmwareimage2);
            assertNotSame(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage2, firmwareimage1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            FirmwareImage firmwareimage1 = new FirmwareImage(new Date(1567417605070L),
                                                             "76da2616-9e0f-4b1f-a251-5030efd650c7", 86,
                                                             "7f551819-e94f-4460-87e6-414b10de91d2",
                                                             "b03b06f7-e19b-47bc-95c0-49f6f14fd138",
                                                             "5ea63633-ffa2-44f0-91d1-417ebd8a0d30",
                                                             "0b0bbc47-8330-47f7-ad87-edc0c00d52d1",
                                                             new Date(1567417608116L));
            FirmwareImage firmwareimage2 = new FirmwareImage(new Date(1567417605070L),
                                                             "76da2616-9e0f-4b1f-a251-5030efd650c7", 86,
                                                             "7f551819-e94f-4460-87e6-414b10de91d2",
                                                             "b03b06f7-e19b-47bc-95c0-49f6f14fd138",
                                                             "5ea63633-ffa2-44f0-91d1-417ebd8a0d30",
                                                             "0b0bbc47-8330-47f7-ad87-edc0c00d52d1",
                                                             new Date(1567417608116L));
            assertNotNull(firmwareimage1);
            assertNotNull(firmwareimage2);
            assertNotSame(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage2.hashCode(), firmwareimage1.hashCode());
            int hashCode = firmwareimage1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, firmwareimage1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        FirmwareImage firmwareimage = new FirmwareImage(new Date(1567417602713L),
                                                        "a05db2a9-c5a4-4d37-b247-810bc48c811e", -118,
                                                        "7c7eca16-8852-4252-a901-c66525a7ba98",
                                                        "10827aaa-cf62-4278-95cb-87d303ab91a8",
                                                        "ebe50a2c-1592-42a4-9a15-fa865d33bd7f",
                                                        "e48f1c8f-e410-4bd7-acf0-87454267f87f",
                                                        new Date(1567417601532L));
        assertTrue(firmwareimage.isValid());
        FirmwareImage firmwareimageInvalid = new FirmwareImage(new Date(1567417606611L),
                                                               "d6ea195b-940d-4fa2-a933-0d4b54725a59", -85,
                                                               "d661ac7b-1ac0-4b5a-b861-42ec8daf0a50",
                                                               "64847e70-97e1-4697-a317-600c2f9370b8518ef562-1979-4e63-b7b0-6de50bb9004429c78a93-193e-4402-b0e5-2d384760baf74ddfd54b-56e2-483a-85e8-4191301859bc3b5a57a9-3c4f-4cbb-86f4-57aae97443a47f5d3572-3391-4fc0-ba2c-9d0f50db7763cc16bc78-b3de-4c60-8b73-f402724e9801a99fcb34-6992-4852-be0c-58801e924cce9b8dcb3d-8cf3-4962-97f6-fa0df67063f040a67ccd-5a80-4570-9a15-b37693f398d9799649e3-3750-4dd0-a515-94070af7df836d7fa4ea-83dc-4690-ade2-323d423d28bf2adda95d-d3cf-41f5-8fa3-259b67d9cbccd7b689fd-7b8b-42b2-84e3-4e6e25871925e2777a30-30bd-4376-82fc-93cf7d7183ed7f140f2a-198b-490f-b553-44eb864486c33dec0106-e2a7-4112-870c-297db2997da7d56bad71-d781-436e-9d49-a9a6e9220053d0ae6cc5-07f9-427c-a1b8-9296092d4ebbb390a6e9-2d4f-4884-ae7b-78698c676a7fc741e7d4-d25e-4d42-82eb-8e02061c660c644ea9fc-1e0b-454c-98a2-27f686060af11795c499-b47c-4cb4-adfe-525ee2b648c3e232f85d-6664-4054-9579-8090de287a543a7f920e-77d7-451a-b0df-a0880fffb3ad857b9241-0c14-4e9d-89b9-204685474e1a22922086-3d4c-42f8-a87e-f9423a911058a94387bb-00f8-404b-98d4-b428982a7aea944d1245-8625-4324-8536-89074cc114e339ec54af-109b-4ddc-b6a5-2441c4508745a8b0523c-d92e-4a11-ae26-9a95802a637f0a3fbcb5-6f31-48e7-bf12-6637f607235200fcdb5b-4066-4b6d-a626-ed4cf551a6c82cdab6aa-a38f-4685-a649-19440188e9cbca735a66-ea7c-48bb-af6a-71eb006220e7af83a668-1ba9-420c-ae27-1beee14e3d493e099db5-5352-48c9-b070-8ee7598af71b95b99ba3-fcc7-48e4-bb6e-b624f0c86c447717c38e-9c25-4dae-9a9c-0ab9897a0f145de31491-e39f-41ad-838d-2d429aa54df86048affe-7cf8-46a0-8890-a002d8298179073a402b-d704-4fb0-b201-2ae7adc88e3fe4c46e1b-e64c-4b49-b7ae-e54a710cb3374e497c65-a96a-401f-a572-2313f1c243e71373113d-6f97-4bdf-9ccc-a599ac31cb7756cdbcc2-43e9-4d17-928b-a7b1189e9bdd65528662-cd83-4ce7-82ca-ca0877fd16aff95c13de-c280-4a48-b7c1-3dd8d8ece770f6da42b3-fcba-454f-9f73-476b1d08ad9fe9351bae-c98e-4d44-b6b5-44b66a25de863ae1b4a4-1338-413b-8cbe-9ded0d3e608469ae59e0-2489-476d-95cb-3cd959e6b86dea64e249-abb8-42b1-bde6-c06425a8a07c946d759a-5d0b-44fc-a938-30e4ff3bd7272f25eab7-ef7c-4d27-83ea-51ef34aa314e7eff8f95-41b3-4ec3-97c0-b472237de73b",
                                                               "9385feac-69c6-4705-9b31-71f6128e31b6",
                                                               "97344806-d346-44d1-8059-8500a7bd5129f6c91711-277b-4b71-b83b-d0ac9feebde28a0301a4-e946-44ef-a53e-2dac386b3737f89c2c97-1c67-4daa-9c75-f2993b650dd1",
                                                               new Date(1567417605196L));
        assertFalse(firmwareimageInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            FirmwareImage firmwareimage1 = new FirmwareImage(new Date(1567417603577L),
                                                             "e989e29c-a998-4a16-aed0-1010746c9241", 52,
                                                             "0ec47be7-1aad-4bd3-a4b8-72c4d31693e3",
                                                             "48696b9b-5b71-46c5-80cc-15a38c7f3eb3",
                                                             "4915227d-375c-4e27-ab5a-1825f8653aee",
                                                             "14f7528f-4b0c-4b51-b93f-c17edea60cf6",
                                                             new Date(1567417600274L));
            FirmwareImage firmwareimage2 = new FirmwareImage(new Date(1567417603577L),
                                                             "e989e29c-a998-4a16-aed0-1010746c9241", 52,
                                                             "0ec47be7-1aad-4bd3-a4b8-72c4d31693e3",
                                                             "48696b9b-5b71-46c5-80cc-15a38c7f3eb3",
                                                             "4915227d-375c-4e27-ab5a-1825f8653aee",
                                                             "14f7528f-4b0c-4b51-b93f-c17edea60cf6",
                                                             new Date(1567417600274L));
            FirmwareImage firmwareimage3 = new FirmwareImage(new Date(1567417601530L),
                                                             "27fbf543-54cc-4cef-8ac3-bf4856eecc17", -63,
                                                             "1f60a07a-f684-46ea-a35b-40d593169abc",
                                                             "9f8a6a67-4ea9-4dba-a33d-b3ff1e8c6e35",
                                                             "3571f346-8d76-424e-97bd-33c037af411b",
                                                             "6e0708e9-a645-4b1c-97cb-8c55d414b12b",
                                                             new Date(1567417601320L));
            assertNotNull(firmwareimage1);
            assertNotNull(firmwareimage2);
            assertNotNull(firmwareimage3);
            assertNotSame(firmwareimage2, firmwareimage1);
            assertNotSame(firmwareimage3, firmwareimage1);
            assertEquals(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage1, firmwareimage2);
            assertEquals(firmwareimage1, firmwareimage1);
            assertFalse(firmwareimage1.equals(null));
            assertNotEquals(firmwareimage3, firmwareimage1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
