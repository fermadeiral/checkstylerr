// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model LoginProfile.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestLoginProfile {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            LoginProfile loginprofile1 = new LoginProfile("4120b2d1-fe14-4776-8aac-24913f775216",
                                                          "2a99dc2a-8ff8-4da7-bb52-aeee956d5ced");
            LoginProfile loginprofile2 = loginprofile1.clone();
            assertNotNull(loginprofile1);
            assertNotNull(loginprofile2);
            assertNotSame(loginprofile2, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            LoginProfile loginprofile1 = new LoginProfile("1914a5cd-7f96-4f14-9003-dff406ab5b82",
                                                          "e59ed3f3-60c0-47cf-8b1d-d35dc9bf3b04");
            LoginProfile loginprofile2 = new LoginProfile("1914a5cd-7f96-4f14-9003-dff406ab5b82",
                                                          "e59ed3f3-60c0-47cf-8b1d-d35dc9bf3b04");
            assertNotNull(loginprofile1);
            assertNotNull(loginprofile2);
            assertNotSame(loginprofile2, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
            assertEquals(loginprofile2.hashCode(), loginprofile1.hashCode());
            int hashCode = loginprofile1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, loginprofile1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        LoginProfile loginprofile = new LoginProfile("f7d0aa4a-6fd1-4647-ad82-3524509193cf",
                                                     "acc04981-f988-4cd0-b91c-6c487800392a");
        assertTrue(loginprofile.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            LoginProfile loginprofile1 = new LoginProfile("f70295bc-6a44-46e9-a480-7552eda32684",
                                                          "fa111ca8-ce9b-4458-930e-dd10e0050421");
            LoginProfile loginprofile2 = new LoginProfile("f70295bc-6a44-46e9-a480-7552eda32684",
                                                          "fa111ca8-ce9b-4458-930e-dd10e0050421");
            LoginProfile loginprofile3 = new LoginProfile("ce6bc1d2-4be3-4624-9520-7f70e2589c7f",
                                                          "fa79964d-6d9d-4fa4-9d33-436750cd36ee");
            assertNotNull(loginprofile1);
            assertNotNull(loginprofile2);
            assertNotNull(loginprofile3);
            assertNotSame(loginprofile2, loginprofile1);
            assertNotSame(loginprofile3, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
            assertEquals(loginprofile1, loginprofile2);
            assertEquals(loginprofile1, loginprofile1);
            assertFalse(loginprofile1.equals(null));
            assertNotEquals(loginprofile3, loginprofile1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
