// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEnrollmentDenial.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEnrollmentDenial {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("5aac302d4dc51de8d52d8348d01b06c5",
                                                                                        new Date(1567417601146L),
                                                                                        "33488f0e-58ab-4c58-841e-bc8e3b3c2ba5",
                                                                                        "5aac302d4dc51de8d52d8348d01b06c5",
                                                                                        "5aac302d4dc51de8d52d8348d01b06c5");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = deviceenrollmentdenial1.clone();
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("5aac302d4dc51de8d52d8348d01b06c5",
                                                                                        new Date(1567417604417L),
                                                                                        "59561e14-215c-4007-b203-cfb5cdc051da",
                                                                                        "5aac302d4dc51de8d52d8348d01b06c5",
                                                                                        "5aac302d4dc51de8d52d8348d01b06c5");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = new DeviceEnrollmentDenial("5aac302d4dc51de8d52d8348d01b06c5",
                                                                                        new Date(1567417604417L),
                                                                                        "59561e14-215c-4007-b203-cfb5cdc051da",
                                                                                        "5aac302d4dc51de8d52d8348d01b06c5",
                                                                                        "5aac302d4dc51de8d52d8348d01b06c5");
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2.hashCode(), deviceenrollmentdenial1.hashCode());
            int hashCode = deviceenrollmentdenial1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceenrollmentdenial1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEnrollmentDenial deviceenrollmentdenial = new DeviceEnrollmentDenial("5aac302d4dc51de8d52d8348d01b06c5",
                                                                                   new Date(1567417610115L),
                                                                                   "a02f00a8-734a-4b12-ae58-6741a16e62a7",
                                                                                   "5aac302d4dc51de8d52d8348d01b06c5",
                                                                                   "5aac302d4dc51de8d52d8348d01b06c5");
        assertTrue(deviceenrollmentdenial.isValid());
        DeviceEnrollmentDenial deviceenrollmentdenialInvalid = new DeviceEnrollmentDenial("@77_7\u0015�?�\u00037\u0002A⚻7\u000e_Z7LT7-;\u000377!<\u0004+Fﭸ7?\u000f_9B\u001b拨\u0011\u0014\u0014ᬾV\b7]>:7㚧졎\f\u0001\u0011`R)7滹\u0019",
                                                                                          new Date(1567417607219L),
                                                                                          "558e0de5-9b97-4fdb-abf1-f7c63b21bb44",
                                                                                          "@77_7\u0015�?�\u00037\u0002A⚻7\u000e_Z7LT7-;\u000377!<\u0004+Fﭸ7?\u000f_9B\u001b拨\u0011\u0014\u0014ᬾV\b7]>:7㚧졎\f\u0001\u0011`R)7滹\u0019",
                                                                                          "@77_7\u0015�?�\u00037\u0002A⚻7\u000e_Z7LT7-;\u000377!<\u0004+Fﭸ7?\u000f_9B\u001b拨\u0011\u0014\u0014ᬾV\b7]>:7㚧졎\f\u0001\u0011`R)7滹\u0019");
        assertFalse(deviceenrollmentdenialInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("5aac302d4dc51de8d52d8348d01b06c5",
                                                                                        new Date(1567417609994L),
                                                                                        "0aaa69a3-a35f-425c-9793-99f905fd5e14",
                                                                                        "5aac302d4dc51de8d52d8348d01b06c5",
                                                                                        "5aac302d4dc51de8d52d8348d01b06c5");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = new DeviceEnrollmentDenial("5aac302d4dc51de8d52d8348d01b06c5",
                                                                                        new Date(1567417609994L),
                                                                                        "0aaa69a3-a35f-425c-9793-99f905fd5e14",
                                                                                        "5aac302d4dc51de8d52d8348d01b06c5",
                                                                                        "5aac302d4dc51de8d52d8348d01b06c5");
            DeviceEnrollmentDenial deviceenrollmentdenial3 = new DeviceEnrollmentDenial("5aac302d4dc51de8d52d8348d01b06c5",
                                                                                        new Date(1567417604335L),
                                                                                        "8ee2bbd4-1a0c-4024-aa12-91f48b0b4b25",
                                                                                        "5aac302d4dc51de8d52d8348d01b06c5",
                                                                                        "5aac302d4dc51de8d52d8348d01b06c5");
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotNull(deviceenrollmentdenial3);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertNotSame(deviceenrollmentdenial3, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial1, deviceenrollmentdenial2);
            assertEquals(deviceenrollmentdenial1, deviceenrollmentdenial1);
            assertFalse(deviceenrollmentdenial1.equals(null));
            assertNotEquals(deviceenrollmentdenial3, deviceenrollmentdenial1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
