// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEvents.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEvents {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1567417607146L), null,
                                                          new Date(1567417601376L),
                                                          "4f2547cb-460d-4608-8221-ebcc9bd2c513",
                                                          "771f5699-167e-4c45-853e-4c727e202125",
                                                          "2fc08f83-5fea-48d8-ad09-6fb599ebb0a2",
                                                          "d6ea3f10-80b0-461d-be9c-e2b0738a175f",
                                                          "5e8bdfd6-ac51-4ab9-9801-caa7c1d1f9ba",
                                                          "e7fa5b77-6d3d-44d2-a976-a219690d5902", false);
            DeviceEvents deviceevents2 = deviceevents1.clone();
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1567417606129L), null,
                                                          new Date(1567417607702L),
                                                          "d02cf53a-8bd1-4cfd-9ac2-3131c18b63a3",
                                                          "7cec758d-ee90-4fe5-9029-0d774b0a0b8a",
                                                          "a6692b46-915d-4d89-ba74-1c931eb72dbf",
                                                          "eee6a4ab-1202-4af4-ba43-07a9d23170c8",
                                                          "0577e27a-6438-4820-a54c-7ff4d8491b88",
                                                          "9343c9c1-1f73-4d5a-b6a8-8ac6bf923f8e", false);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1567417606129L), null,
                                                          new Date(1567417607702L),
                                                          "d02cf53a-8bd1-4cfd-9ac2-3131c18b63a3",
                                                          "7cec758d-ee90-4fe5-9029-0d774b0a0b8a",
                                                          "a6692b46-915d-4d89-ba74-1c931eb72dbf",
                                                          "eee6a4ab-1202-4af4-ba43-07a9d23170c8",
                                                          "0577e27a-6438-4820-a54c-7ff4d8491b88",
                                                          "9343c9c1-1f73-4d5a-b6a8-8ac6bf923f8e", false);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2.hashCode(), deviceevents1.hashCode());
            int hashCode = deviceevents1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceevents1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEvents deviceevents = new DeviceEvents(null, new Date(1567417605492L), null, new Date(1567417603062L),
                                                     "abcd2993-e775-42aa-91af-35b325c3782e",
                                                     "2b316721-db61-44a0-add3-659f10070d85",
                                                     "3b739bc5-bd5a-497b-82ca-494022cace5c",
                                                     "a9419f3d-7e5c-409a-aa13-939d141ca1cc",
                                                     "371d2aed-a44b-4dc8-b852-e9f5f02e27fc",
                                                     "3b24e425-db8f-49e8-a786-cbb303e8be3e", true);
        assertTrue(deviceevents.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1567417601921L), null,
                                                          new Date(1567417600888L),
                                                          "9ed94655-92a7-4496-ac74-3bd5ddc03715",
                                                          "20ef5fb7-074b-4400-9ea1-237cddd8f45f",
                                                          "ac02471f-0e81-4a11-afb7-579425855e30",
                                                          "107d356e-c1ca-4f04-9c7e-4c0ee8be0767",
                                                          "6ca5611c-03c5-4aa8-8d47-54507104e1ab",
                                                          "971af6f9-780d-41f7-89cc-8d749c800771", true);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1567417601921L), null,
                                                          new Date(1567417600888L),
                                                          "9ed94655-92a7-4496-ac74-3bd5ddc03715",
                                                          "20ef5fb7-074b-4400-9ea1-237cddd8f45f",
                                                          "ac02471f-0e81-4a11-afb7-579425855e30",
                                                          "107d356e-c1ca-4f04-9c7e-4c0ee8be0767",
                                                          "6ca5611c-03c5-4aa8-8d47-54507104e1ab",
                                                          "971af6f9-780d-41f7-89cc-8d749c800771", true);
            DeviceEvents deviceevents3 = new DeviceEvents(null, new Date(1567417608006L), null,
                                                          new Date(1567417603615L),
                                                          "d8e3a8d7-120f-4cc4-bb45-5358d2eca910",
                                                          "58432384-5d3f-4094-bfdd-ca0591a041a8",
                                                          "34006632-0830-4612-9fd2-55c82b584d83",
                                                          "ab98ccb8-7ce3-4822-8c9a-9d51d20f9234",
                                                          "02ab5941-2076-4612-9ea7-52215d950c4a",
                                                          "43bebba7-aa5e-4088-9b6f-d41b0b01447a", true);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotNull(deviceevents3);
            assertNotSame(deviceevents2, deviceevents1);
            assertNotSame(deviceevents3, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents1, deviceevents2);
            assertEquals(deviceevents1, deviceevents1);
            assertFalse(deviceevents1.equals(null));
            assertNotEquals(deviceevents3, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
