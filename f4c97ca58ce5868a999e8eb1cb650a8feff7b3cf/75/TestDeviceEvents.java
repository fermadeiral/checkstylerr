// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEvents.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEvents {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1566477457211L), null,
                                                          new Date(1566477456016L),
                                                          "9030ebe2-b28a-4272-842a-dd61ba299887",
                                                          "2eca96e3-dc2b-478b-9d3f-e5d9834f5bc9",
                                                          "16971270-a99d-4a00-8ad6-5be3c0fbc7a0",
                                                          "bb75ab04-13e9-4f11-b5d0-5908e5d2e1e9",
                                                          "47f1e55c-eb5c-416d-a20a-1102a2268565",
                                                          "64844871-c277-44e3-aa14-493a4fc1821b", true);
            DeviceEvents deviceevents2 = deviceevents1.clone();
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1566477460573L), null,
                                                          new Date(1566477457326L),
                                                          "98ccb9df-6d60-473f-a019-4edff357a6a1",
                                                          "d1291b07-ff19-4d7f-9986-a798fc323037",
                                                          "aad3b3c3-f09f-437f-9a89-d2c3477ead58",
                                                          "3c09975f-52ad-43a2-b0f8-fca1dd7a9a18",
                                                          "971471ed-f89d-4540-87af-758972d59a91",
                                                          "7a0b36ca-6006-440d-b100-46c996852fcd", false);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1566477460573L), null,
                                                          new Date(1566477457326L),
                                                          "98ccb9df-6d60-473f-a019-4edff357a6a1",
                                                          "d1291b07-ff19-4d7f-9986-a798fc323037",
                                                          "aad3b3c3-f09f-437f-9a89-d2c3477ead58",
                                                          "3c09975f-52ad-43a2-b0f8-fca1dd7a9a18",
                                                          "971471ed-f89d-4540-87af-758972d59a91",
                                                          "7a0b36ca-6006-440d-b100-46c996852fcd", false);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2.hashCode(), deviceevents1.hashCode());
            int hashCode = deviceevents1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceevents1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEvents deviceevents = new DeviceEvents(null, new Date(1566477461723L), null, new Date(1566477460051L),
                                                     "9b8c0b16-1401-4eb9-878f-d61a49a9c299",
                                                     "e581adb3-f0f0-4cc9-a70d-faec5b7d6790",
                                                     "6d5a6d5a-b1f9-4858-b629-819c810bcf12",
                                                     "a5c81064-fc9a-4517-8b35-acbc73c468d6",
                                                     "bdb3987f-87fb-4f12-bfc8-769b0f8ff4a7",
                                                     "c82e111b-67e5-4690-bc89-ebba1c840023", false);
        assertTrue(deviceevents.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1566477457681L), null,
                                                          new Date(1566477455017L),
                                                          "e146e32b-5df9-4cad-a78c-e269da4ef8af",
                                                          "285f807e-39a9-40e3-8537-6d0e347396ba",
                                                          "6d050544-19f1-4875-bb96-b095453fc90a",
                                                          "842278ae-8e99-4cd8-8edb-f682a9115ab5",
                                                          "34db8df5-fcd6-4cfd-a472-4b798b6d0749",
                                                          "c586dbb5-1089-4523-95c9-745f89b45ace", false);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1566477457681L), null,
                                                          new Date(1566477455017L),
                                                          "e146e32b-5df9-4cad-a78c-e269da4ef8af",
                                                          "285f807e-39a9-40e3-8537-6d0e347396ba",
                                                          "6d050544-19f1-4875-bb96-b095453fc90a",
                                                          "842278ae-8e99-4cd8-8edb-f682a9115ab5",
                                                          "34db8df5-fcd6-4cfd-a472-4b798b6d0749",
                                                          "c586dbb5-1089-4523-95c9-745f89b45ace", false);
            DeviceEvents deviceevents3 = new DeviceEvents(null, new Date(1566477455093L), null,
                                                          new Date(1566477457689L),
                                                          "16bc549b-130f-42a3-8bde-646367b81e04",
                                                          "27f045e8-8ab4-47b5-b7ba-5d1e5b97ddee",
                                                          "1011d684-2a1f-46d7-9013-a6dcc5be29fa",
                                                          "437d9f2e-b27a-4b1f-8e1f-119154dea39f",
                                                          "ec3d12fd-0cff-42a0-a798-d31ce534e052",
                                                          "b17ee8bb-c9cd-4643-92a2-e94be9761c6b", false);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotNull(deviceevents3);
            assertNotSame(deviceevents2, deviceevents1);
            assertNotSame(deviceevents3, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents1, deviceevents2);
            assertEquals(deviceevents1, deviceevents1);
            assertFalse(deviceevents1.equals(null));
            assertNotEquals(deviceevents3, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
