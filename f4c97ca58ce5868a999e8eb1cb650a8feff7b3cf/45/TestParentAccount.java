// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model ParentAccount.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestParentAccount {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("e69c9.8516c@d22cb.fr",
                                                             "c6a2fcd7-04f5-42d2-beb6-c6842e35584c",
                                                             "7eac9c4e9c53774dafadb1ee4efb11c1");
            ParentAccount parentaccount2 = parentaccount1.clone();
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotSame(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("357b1.7792c@675f8.me",
                                                             "5ee7fa1f-bc37-4ee7-8b17-6c0eba5b0176",
                                                             "7eac9c4e9c53774dafadb1ee4efb11c1");
            ParentAccount parentaccount2 = new ParentAccount("357b1.7792c@675f8.me",
                                                             "5ee7fa1f-bc37-4ee7-8b17-6c0eba5b0176",
                                                             "7eac9c4e9c53774dafadb1ee4efb11c1");
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotSame(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount2.hashCode(), parentaccount1.hashCode());
            int hashCode = parentaccount1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, parentaccount1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ParentAccount parentaccount = new ParentAccount("fb4d2.c9278@31982.me", "e90b0c8d-3326-4d79-b408-2816d9b3d047",
                                                        "7eac9c4e9c53774dafadb1ee4efb11c1");
        assertTrue(parentaccount.isValid());
        ParentAccount parentaccountInvalid = new ParentAccount("\u000fì¤¹\u00125åŽ´í?•á±‡ï¥„ç“•ãœ¤\bè›‘î—†\u0019>\u0010å·¯ë?ŽåŸ¬à¶?å«–ãŽ²æ…›ã”»>ì²€-â‚‚ \u001f\u0007ê‡½8ì»€ãœ¢ë?¥\u0017#äœªá“§>ë©®Ä‡ì–?-ãµƒã?°%ì‚½ìš?ì“¬>>>\u000eì—…â›ºï‡©æ¦¤â®´èƒ›ìŸ?",
                                                               "13450b4f-e0d5-4f81-984a-328fca6281632a02c868-6aaa-4965-8469-6808effa864f441fd6f9-ccc3-4ee9-a0fe-d7fa2b9899d4",
                                                               "6\u00012\u001566á€?2ï„¶2\u00168á šâŽ†á»?K/68_YB8628æ·•A2\u001fî°®88-2\u0018.2à£©22RáŒ˜8\u001d\u000b2å´¾2_\u001c66ï®¢68626;\u0018L2á•µ");
        assertFalse(parentaccountInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("acc4e.c3434@62eb7.fr",
                                                             "65ed5e6e-c6cf-4f74-9132-d73ce216a375",
                                                             "7eac9c4e9c53774dafadb1ee4efb11c1");
            ParentAccount parentaccount2 = new ParentAccount("acc4e.c3434@62eb7.fr",
                                                             "65ed5e6e-c6cf-4f74-9132-d73ce216a375",
                                                             "7eac9c4e9c53774dafadb1ee4efb11c1");
            ParentAccount parentaccount3 = new ParentAccount("6e4a6.c6c7a@63d54.fr",
                                                             "d4197103-0c03-458f-96df-febe245cd244",
                                                             "7eac9c4e9c53774dafadb1ee4efb11c1");
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotNull(parentaccount3);
            assertNotSame(parentaccount2, parentaccount1);
            assertNotSame(parentaccount3, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount1, parentaccount2);
            assertEquals(parentaccount1, parentaccount1);
            assertFalse(parentaccount1.equals(null));
            assertNotEquals(parentaccount3, parentaccount1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
