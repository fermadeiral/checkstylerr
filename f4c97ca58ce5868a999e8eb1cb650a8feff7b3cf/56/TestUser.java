// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model User.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestUser {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            User user1 = new User("7eac9c4e9c53774dafadb1ee4efb11c1", null, "12e869af-0ad5-4ec7-98ea-590ee0febb65",
                                  new Date(1566477461230L), -30, null, "cf6b9.0ebe9@4ace6.me", true,
                                  "d57a4dda-52e8-40e0-a382-2fe89a517580", null, "7eac9c4e9c53774dafadb1ee4efb11c1",
                                  false, true, false, -119, null, null, "e0493da0-181f-478a-9bdd-e4377d84f049", 26,
                                  "c405c50b-d355-4125-9797-dafbf413695c", UserStatus.getDefault(), null,
                                  new Date(1566477454683L), "_=fVs,");
            User user2 = user1.clone();
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotSame(user2, user1);
            assertEquals(user2, user1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            User user1 = new User("7eac9c4e9c53774dafadb1ee4efb11c1", null, "7e98da4e-542a-44cf-a126-23e27e8f64cc",
                                  new Date(1566477459509L), 18, null, "a321f.28e86@c9525.me", true,
                                  "43ca6759-7396-48c4-9364-9f84028b7b31", null, "7eac9c4e9c53774dafadb1ee4efb11c1",
                                  true, false, false, 84, null, null, "386f2715-f5d2-4710-9d80-c94e2372c6e8", -16,
                                  "1fa8cdbc-d055-40c4-9aab-31434e6d7816", UserStatus.getDefault(), null,
                                  new Date(1566477459157L), "_=fVs,");
            User user2 = new User("7eac9c4e9c53774dafadb1ee4efb11c1", null, "7e98da4e-542a-44cf-a126-23e27e8f64cc",
                                  new Date(1566477459509L), 18, null, "a321f.28e86@c9525.me", true,
                                  "43ca6759-7396-48c4-9364-9f84028b7b31", null, "7eac9c4e9c53774dafadb1ee4efb11c1",
                                  true, false, false, 84, null, null, "386f2715-f5d2-4710-9d80-c94e2372c6e8", -16,
                                  "1fa8cdbc-d055-40c4-9aab-31434e6d7816", UserStatus.getDefault(), null,
                                  new Date(1566477459157L), "_=fVs,");
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotSame(user2, user1);
            assertEquals(user2, user1);
            assertEquals(user2.hashCode(), user1.hashCode());
            int hashCode = user1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, user1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        User user = new User("7eac9c4e9c53774dafadb1ee4efb11c1", null, "d6cfc159-439c-4ee8-9e9b-9fc0d16d9f7b",
                             new Date(1566477462000L), 122, null, "041d3.4e27d@848c3.me", true,
                             "02e642da-b7f9-44de-8165-1fa6c2b72a36", null, "7eac9c4e9c53774dafadb1ee4efb11c1", false,
                             false, true, 12, null, null, "1baa3788-5390-400b-be9e-4cc9dfa79128", 106,
                             "554baacc-df3e-474d-9afd-61f76a6e7fd3", UserStatus.getDefault(), null,
                             new Date(1566477454003L), "_=fVs,");
        assertTrue(user.isValid());
        User userInvalid = new User("6\u00012\u001566á€?2ï„¶2\u00168á šâŽ†á»?K/68_YB8628æ·•A2\u001fî°®88-2\u0018.2à£©22RáŒ˜8\u001d\u000b2å´¾2_\u001c66ï®¢68626;\u0018L2á•µ",
                                    null, "9593c311-01e2-4222-be56-64f1769a4fae", new Date(1566477457223L), -88, null,
                                    null, true,
                                    "1f975eb9-d169-4091-90a0-bb0f85712e495559e605-224a-4a09-95b5-79bca4dc11a0ea912ea5-dca9-45d0-a8eb-819913903938",
                                    null,
                                    "6\u00012\u001566á€?2ï„¶2\u00168á šâŽ†á»?K/68_YB8628æ·•A2\u001fî°®88-2\u0018.2à£©22RáŒ˜8\u001d\u000b2å´¾2_\u001c66ï®¢68626;\u0018L2á•µ",
                                    false, true, true, 119, null, null, "ff37900d-9e0d-443d-b382-a08cb50da436", 82,
                                    "a3a3c008-2a1c-4e2e-ae3e-134b852d60a2a68356d9-4039-44f2-b94a-4523e40963b9527aa0ab-9831-49a0-90a3-a095552819fe",
                                    UserStatus.getDefault(), null, new Date(1566477456050L),
                                    "cê?‡\u0006<o\u00180k:Y)bJ;[r]a8]l[AcgF]oim\fej\u0007?\u001bpà¾¦\u001cë»‚d/ç£„IDed8^î° oh/r01g-&92XdA");
        assertFalse(userInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            User user1 = new User("7eac9c4e9c53774dafadb1ee4efb11c1", null, "ca50158b-666b-4200-9cc4-eff749fbe243",
                                  new Date(1566477452316L), -41, null, "bf581.5122b@366d9.fr", false,
                                  "e20a54c1-9c4b-4f49-ab40-122bbb9e2e33", null, "7eac9c4e9c53774dafadb1ee4efb11c1",
                                  false, false, true, -115, null, null, "01f9e8db-3687-4052-939c-8dddb626f06c", -65,
                                  "ed1c5e69-7ad7-49c1-ad6a-9aaa7e605d36", UserStatus.getDefault(), null,
                                  new Date(1566477459874L), "_=fVs,");
            User user2 = new User("7eac9c4e9c53774dafadb1ee4efb11c1", null, "ca50158b-666b-4200-9cc4-eff749fbe243",
                                  new Date(1566477452316L), -41, null, "bf581.5122b@366d9.fr", false,
                                  "e20a54c1-9c4b-4f49-ab40-122bbb9e2e33", null, "7eac9c4e9c53774dafadb1ee4efb11c1",
                                  false, false, true, -115, null, null, "01f9e8db-3687-4052-939c-8dddb626f06c", -65,
                                  "ed1c5e69-7ad7-49c1-ad6a-9aaa7e605d36", UserStatus.getDefault(), null,
                                  new Date(1566477459874L), "_=fVs,");
            User user3 = new User("7eac9c4e9c53774dafadb1ee4efb11c1", null, "4adac116-e5cb-4634-9759-5199d3792362",
                                  new Date(1566477457614L), -72, null, "99183.a5ad4@407b7.fr", false,
                                  "698fc172-ca81-4935-8405-4be674882c25", null, "7eac9c4e9c53774dafadb1ee4efb11c1",
                                  false, false, true, -13, null, null, "b2d51345-936b-4b5d-88c3-7a21dcd1c470", -82,
                                  "d0434b01-d2a2-4d51-a893-a9fb5e522b08", UserStatus.getDefault(), null,
                                  new Date(1566477460871L), "_=fVs,");
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotNull(user3);
            assertNotSame(user2, user1);
            assertNotSame(user3, user1);
            assertEquals(user2, user1);
            assertEquals(user2, user1);
            assertEquals(user1, user2);
            assertEquals(user1, user1);
            assertFalse(user1.equals(null));
            assertNotEquals(user3, user1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
