// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantApiKey.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantApiKey {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("7eac9c4e9c53774dafadb1ee4efb11c1",
                                                                   new Date(1566477456997L), 3, null,
                                                                   "7eac9c4e9c53774dafadb1ee4efb11c1",
                                                                   "ab1fe0e8-d1fd-4f8b-a95d-508c9bc75ac6", 78,
                                                                   "4e09a31f-fa24-4877-a52b-fde50185cfd7",
                                                                   "7eac9c4e9c53774dafadb1ee4efb11c1",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1566477454107L));
            SubtenantApiKey subtenantapikey2 = subtenantapikey1.clone();
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("7eac9c4e9c53774dafadb1ee4efb11c1",
                                                                   new Date(1566477458964L), 81, null,
                                                                   "7eac9c4e9c53774dafadb1ee4efb11c1",
                                                                   "0c48521a-f097-4d0d-8299-022561543c13", 47,
                                                                   "3136135f-a92a-465c-90a6-b66e0ba25d7e",
                                                                   "7eac9c4e9c53774dafadb1ee4efb11c1",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1566477459161L));
            SubtenantApiKey subtenantapikey2 = new SubtenantApiKey("7eac9c4e9c53774dafadb1ee4efb11c1",
                                                                   new Date(1566477458964L), 81, null,
                                                                   "7eac9c4e9c53774dafadb1ee4efb11c1",
                                                                   "0c48521a-f097-4d0d-8299-022561543c13", 47,
                                                                   "3136135f-a92a-465c-90a6-b66e0ba25d7e",
                                                                   "7eac9c4e9c53774dafadb1ee4efb11c1",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1566477459161L));
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2.hashCode(), subtenantapikey1.hashCode());
            int hashCode = subtenantapikey1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantapikey1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantApiKey subtenantapikey = new SubtenantApiKey("7eac9c4e9c53774dafadb1ee4efb11c1",
                                                              new Date(1566477458108L), 68, null,
                                                              "7eac9c4e9c53774dafadb1ee4efb11c1",
                                                              "12dd1f15-14b1-4e3c-b2cf-1b2f7b7f999d", 76,
                                                              "1e18796c-d4c5-42d9-a3cc-4f4bd1c573d9",
                                                              "7eac9c4e9c53774dafadb1ee4efb11c1",
                                                              SubtenantApiKeyStatus.getDefault(),
                                                              new Date(1566477453570L));
        assertTrue(subtenantapikey.isValid());
        SubtenantApiKey subtenantapikeyInvalid = new SubtenantApiKey(null, new Date(1566477452828L), 58, null,
                                                                     "6\u00012\u001566á€?2ï„¶2\u00168á šâŽ†á»?K/68_YB8628æ·•A2\u001fî°®88-2\u0018.2à£©22RáŒ˜8\u001d\u000b2å´¾2_\u001c66ï®¢68626;\u0018L2á•µ",
                                                                     "021246c5-919a-4d23-bd43-068b7dc04d6f", 97, null,
                                                                     "6\u00012\u001566á€?2ï„¶2\u00168á šâŽ†á»?K/68_YB8628æ·•A2\u001fî°®88-2\u0018.2à£©22RáŒ˜8\u001d\u000b2å´¾2_\u001c66ï®¢68626;\u0018L2á•µ",
                                                                     SubtenantApiKeyStatus.getDefault(),
                                                                     new Date(1566477461061L));
        assertFalse(subtenantapikeyInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("7eac9c4e9c53774dafadb1ee4efb11c1",
                                                                   new Date(1566477455658L), -64, null,
                                                                   "7eac9c4e9c53774dafadb1ee4efb11c1",
                                                                   "f923affe-b697-4a72-9081-85fe65d174fc", -11,
                                                                   "58b8297b-850d-44f6-b707-afa73e999ab8",
                                                                   "7eac9c4e9c53774dafadb1ee4efb11c1",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1566477461849L));
            SubtenantApiKey subtenantapikey2 = new SubtenantApiKey("7eac9c4e9c53774dafadb1ee4efb11c1",
                                                                   new Date(1566477455658L), -64, null,
                                                                   "7eac9c4e9c53774dafadb1ee4efb11c1",
                                                                   "f923affe-b697-4a72-9081-85fe65d174fc", -11,
                                                                   "58b8297b-850d-44f6-b707-afa73e999ab8",
                                                                   "7eac9c4e9c53774dafadb1ee4efb11c1",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1566477461849L));
            SubtenantApiKey subtenantapikey3 = new SubtenantApiKey("7eac9c4e9c53774dafadb1ee4efb11c1",
                                                                   new Date(1566477456163L), -51, null,
                                                                   "7eac9c4e9c53774dafadb1ee4efb11c1",
                                                                   "a6ca92ef-30c4-418b-8142-fde67e263cf9", 123,
                                                                   "15beaf00-9342-4581-ac5b-95c10ba7af15",
                                                                   "7eac9c4e9c53774dafadb1ee4efb11c1",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1566477459923L));
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotNull(subtenantapikey3);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertNotSame(subtenantapikey3, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey1, subtenantapikey2);
            assertEquals(subtenantapikey1, subtenantapikey1);
            assertFalse(subtenantapikey1.equals(null));
            assertNotEquals(subtenantapikey3, subtenantapikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
