// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.deviceupdate.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model FirmwareImage.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestFirmwareImage {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            FirmwareImage firmwareimage1 = new FirmwareImage(new Date(1566477454704L),
                                                             "442ce907-dc5a-479a-9d4d-7eb820dbddb5", 26,
                                                             "b5ce5c93-f446-4bf5-8fa7-545493be200f",
                                                             "40c7f342-8ec4-4fea-804a-1e820a0d3587",
                                                             "e2c03217-1ef7-469f-90a7-222d280565c8",
                                                             "7acac749-c767-458b-a5c2-ede4580380f1",
                                                             new Date(1566477454105L));
            FirmwareImage firmwareimage2 = firmwareimage1.clone();
            assertNotNull(firmwareimage1);
            assertNotNull(firmwareimage2);
            assertNotSame(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage2, firmwareimage1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            FirmwareImage firmwareimage1 = new FirmwareImage(new Date(1566477453143L),
                                                             "b30389b1-5b39-4d2f-b2a2-d2cbd0fb26b5", 46,
                                                             "24a29c5c-c7a6-4e91-8368-5fd38387326d",
                                                             "35f4da65-27c8-485b-acbd-7e7668680a92",
                                                             "e8b1228b-7aa8-4a9d-8f5d-0b8eb6122f3e",
                                                             "19993bc5-c59d-44ef-8be7-478254d16359",
                                                             new Date(1566477461947L));
            FirmwareImage firmwareimage2 = new FirmwareImage(new Date(1566477453143L),
                                                             "b30389b1-5b39-4d2f-b2a2-d2cbd0fb26b5", 46,
                                                             "24a29c5c-c7a6-4e91-8368-5fd38387326d",
                                                             "35f4da65-27c8-485b-acbd-7e7668680a92",
                                                             "e8b1228b-7aa8-4a9d-8f5d-0b8eb6122f3e",
                                                             "19993bc5-c59d-44ef-8be7-478254d16359",
                                                             new Date(1566477461947L));
            assertNotNull(firmwareimage1);
            assertNotNull(firmwareimage2);
            assertNotSame(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage2.hashCode(), firmwareimage1.hashCode());
            int hashCode = firmwareimage1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, firmwareimage1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        FirmwareImage firmwareimage = new FirmwareImage(new Date(1566477453152L),
                                                        "6bf49711-aac1-466b-ba4a-9c31eed92ae3", -96,
                                                        "5cb453b2-5d6a-44d2-96c4-fee073480e68",
                                                        "d4c56280-f87a-486b-9861-c09086c5640c",
                                                        "7d672a6f-8235-4f5b-a5df-11512ce405fd",
                                                        "14c69cff-f1c1-4786-8c31-276d71b994bd",
                                                        new Date(1566477454521L));
        assertTrue(firmwareimage.isValid());
        FirmwareImage firmwareimageInvalid = new FirmwareImage(new Date(1566477458797L),
                                                               "aeaac45d-f6f1-4fe9-91fa-30dd7d9fc0c5", -89,
                                                               "6dc90dad-edb6-49a8-a573-b87c21790d62",
                                                               "0e8a82a7-7e66-4415-85cb-2684488c453a0f34f8d8-a18a-4882-a32f-6efa8d1ab84cd8c85730-a6a5-4a19-bd57-65e6ceb63d35d26b8f8a-77e6-42d4-9f29-7343ec025dd6f3e9d0b6-3bee-43d5-8aa5-05f3dfa7a3a7deb01324-a40e-4c94-b4fa-6406ee520d55919d7d1a-c1cb-4cb2-9636-de94e9ed20341b20891d-3975-4e37-a146-c1403686bc9438fbc17a-1415-4dce-8945-2b9da9d733244ff1bf98-ca27-46d6-b11a-579e3c3d94a91fa35e3d-a723-431f-881a-28b3610c178e745f3674-0312-472f-9c36-fc64a530ec73118bcee6-0ee2-49b5-87fb-335c6c8c5296b3f26b32-834a-467c-9ed7-2334c0a77429acad5691-a93a-4cf5-838d-228da3e178dc0054efea-143a-4ca3-b912-c1e5b93394eff4cf4957-4c15-4931-8118-8716e61033a0a1cf4ee0-5930-4a84-b5fb-ade31600766cc8f5c99d-2648-47bb-9209-ff94fd65e7de24884cf3-34fb-4c12-bb6f-d160408344187787d7e7-3f26-4a9c-a02a-42eed73b9c992a5f9314-cc5e-47bb-b422-337d2990a7b8f4b6c28b-424a-48b8-b4d8-0da801807e22364a4cd5-33c7-4531-9b5b-7f1cb9ff1ea6de5962a7-0f73-48dc-8970-adf242b9c1c6c7bed7c0-02c4-4699-bdbf-927ae2e22c8db08c23cf-2601-4d4c-a8df-8044c4789f318cfd2ea3-5db8-457a-ac7b-5f828aa45f7f6d8d9238-623e-45e4-8619-5af9f279a099929ec1c1-1376-43c2-bc9f-49e7b97972d345fbea38-7614-40c9-ac2d-3167aeb55203273a3854-8cb4-415c-945e-855c1b9fa13791c7d20f-05ba-46ff-b681-5f0a4c018a7257e5d606-76fa-4a01-a3cd-c9ad1717004cd7804dee-a368-400c-9d0e-f621842f7f2e5d59bb64-e401-4680-bd4f-d9161c4df1a04279566d-9b78-459c-90b0-158563cefbdb34ff44d7-5dbc-4d87-8b1a-c7c688eca13a5501edea-d2f0-4646-a07d-494ec079defbc99ad72f-815a-43b4-b2eb-43f65852fdb63a7c84a1-090a-4d5e-9ff7-41f697e31d853fec419c-aef8-4ff8-be7a-c1e73e34eb1c32132469-16f1-486b-8ecb-b9c279c65560306f4723-e124-40b8-b443-162a5fa940b23c1b833e-96d8-4e8d-9c05-b7a95725c95b5d297e77-5de8-437e-ab62-2fc91c8089f3d61acced-bd4d-4fc5-b64c-e70bddb7c0c5cbd7eb3a-c7e1-4056-b9cf-2202f5f9a4b6d2a7d663-efb5-4029-a329-4108e30db0ef0aab21bc-d41d-4566-9cf1-97a4472ffc55ff8f7732-5114-4515-ac1c-4bd82a43c2bb318885d9-6ad2-4eac-8175-f1011c25170b8a236d80-61a7-4fe8-97d2-b47bdff1dc22afd06c39-ee22-4024-b625-c659aea0b488bc446d2a-a2c6-46bc-9992-d85d92a47af8747a6a40-c248-4db0-aee8-434cd41e04c2",
                                                               "d10d47b4-24f6-4c27-9d76-57d2f8777313",
                                                               "1f22661b-8e33-400e-9d80-7e20f94b83c4e044e405-9f92-4014-bbc2-6084886cbaba810bb347-cea6-4a8c-a2ad-377193fc0c528ee5dd37-e8d8-4e77-a95b-65f74677828e",
                                                               new Date(1566477459985L));
        assertFalse(firmwareimageInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            FirmwareImage firmwareimage1 = new FirmwareImage(new Date(1566477458431L),
                                                             "62387983-1ef3-4b02-9e06-e37d29bc666b", 42,
                                                             "9659fa95-ebb9-4b15-9e5a-9f4afa1f0e61",
                                                             "f5dc682f-8c14-4a0b-9799-bc84737967bd",
                                                             "6db66240-a42c-40f4-8546-dbe2064f349b",
                                                             "39fcf495-2e4b-40a8-91b4-bb43ab170e01",
                                                             new Date(1566477459827L));
            FirmwareImage firmwareimage2 = new FirmwareImage(new Date(1566477458431L),
                                                             "62387983-1ef3-4b02-9e06-e37d29bc666b", 42,
                                                             "9659fa95-ebb9-4b15-9e5a-9f4afa1f0e61",
                                                             "f5dc682f-8c14-4a0b-9799-bc84737967bd",
                                                             "6db66240-a42c-40f4-8546-dbe2064f349b",
                                                             "39fcf495-2e4b-40a8-91b4-bb43ab170e01",
                                                             new Date(1566477459827L));
            FirmwareImage firmwareimage3 = new FirmwareImage(new Date(1566477453924L),
                                                             "213b4259-069f-41aa-995a-6652fc762c19", -62,
                                                             "cbcadd96-ca71-4f0b-a7d2-5c168942059a",
                                                             "0927e416-4479-4f21-b744-85bcbdd6c25c",
                                                             "597367b8-158f-4a28-9370-a1a8b6f2a619",
                                                             "61a5beff-788f-4b80-abf4-2069f8ab50da",
                                                             new Date(1566477453680L));
            assertNotNull(firmwareimage1);
            assertNotNull(firmwareimage2);
            assertNotNull(firmwareimage3);
            assertNotSame(firmwareimage2, firmwareimage1);
            assertNotSame(firmwareimage3, firmwareimage1);
            assertEquals(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage1, firmwareimage2);
            assertEquals(firmwareimage1, firmwareimage1);
            assertFalse(firmwareimage1.equals(null));
            assertNotEquals(firmwareimage3, firmwareimage1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
