// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model LoginProfile.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestLoginProfile {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            LoginProfile loginprofile1 = new LoginProfile("e6f4bf2e-409f-43d6-911c-0a816aa2a7e1",
                                                          "733af255-2093-4a59-8712-5f7975ad8c84");
            LoginProfile loginprofile2 = loginprofile1.clone();
            assertNotNull(loginprofile1);
            assertNotNull(loginprofile2);
            assertNotSame(loginprofile2, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            LoginProfile loginprofile1 = new LoginProfile("ed4461c7-6701-4350-9425-b75c2fceb6d0",
                                                          "4d619b81-3f68-46b1-9c24-c7eb74bba40d");
            LoginProfile loginprofile2 = new LoginProfile("ed4461c7-6701-4350-9425-b75c2fceb6d0",
                                                          "4d619b81-3f68-46b1-9c24-c7eb74bba40d");
            assertNotNull(loginprofile1);
            assertNotNull(loginprofile2);
            assertNotSame(loginprofile2, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
            assertEquals(loginprofile2.hashCode(), loginprofile1.hashCode());
            int hashCode = loginprofile1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, loginprofile1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        LoginProfile loginprofile = new LoginProfile("0baf3fcf-37de-4deb-8aec-12af2c8bc82d",
                                                     "e7e73003-fb30-4fe8-bf13-3e75eb57ecc7");
        assertTrue(loginprofile.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            LoginProfile loginprofile1 = new LoginProfile("412a9cd0-e5a9-409d-80f0-73b214619a8e",
                                                          "c06b196c-c718-497d-8573-7ee16f9530a5");
            LoginProfile loginprofile2 = new LoginProfile("412a9cd0-e5a9-409d-80f0-73b214619a8e",
                                                          "c06b196c-c718-497d-8573-7ee16f9530a5");
            LoginProfile loginprofile3 = new LoginProfile("1cc6563d-bf69-4ef8-b29a-650834668b75",
                                                          "9ab3dc0d-05c2-401e-8cf6-9f73b47b62a2");
            assertNotNull(loginprofile1);
            assertNotNull(loginprofile2);
            assertNotNull(loginprofile3);
            assertNotSame(loginprofile2, loginprofile1);
            assertNotSame(loginprofile3, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
            assertEquals(loginprofile1, loginprofile2);
            assertEquals(loginprofile1, loginprofile1);
            assertFalse(loginprofile1.equals(null));
            assertNotEquals(loginprofile3, loginprofile1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
