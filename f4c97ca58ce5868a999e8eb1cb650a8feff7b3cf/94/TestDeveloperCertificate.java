// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.security.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeveloperCertificate.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeveloperCertificate {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("96a96794-4ca9-4aa9-9d42-f1f27871e7ae",
                                                                                  "07231eb1-447e-446a-9fdb-b0cb98faf670",
                                                                                  new Date(1566477460638L),
                                                                                  "15adaee1-bc38-4e6d-bc33-2520825d6acd",
                                                                                  "2dc5a8e8-d587-4111-aa77-f1b297bd361a",
                                                                                  "de5497a5-203f-40b8-a3c4-fe14716b69cf",
                                                                                  "7c39c03b-63ce-4d2c-8f96-92c046fccc03",
                                                                                  "0ff07f47-cbc9-46d5-936b-5749525e7bc6");
            DeveloperCertificate developercertificate2 = developercertificate1.clone();
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("80c56820-352a-40e2-a645-5464e8cce0df",
                                                                                  "c03e7caf-ba6d-4d13-be00-ef9e468ab89c",
                                                                                  new Date(1566477457029L),
                                                                                  "4c143a5a-023f-4cb4-8a4a-e36e5e5fbf21",
                                                                                  "0691e3ec-14a7-41ea-b177-9679504e64cb",
                                                                                  "a12e1676-d336-4468-9fd2-7499aeae6950",
                                                                                  "ff940214-34e3-4fd8-b0a1-37301e848dfe",
                                                                                  "71610fdf-fdb5-49c7-8404-86e804b025d4");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("80c56820-352a-40e2-a645-5464e8cce0df",
                                                                                  "c03e7caf-ba6d-4d13-be00-ef9e468ab89c",
                                                                                  new Date(1566477457029L),
                                                                                  "4c143a5a-023f-4cb4-8a4a-e36e5e5fbf21",
                                                                                  "0691e3ec-14a7-41ea-b177-9679504e64cb",
                                                                                  "a12e1676-d336-4468-9fd2-7499aeae6950",
                                                                                  "ff940214-34e3-4fd8-b0a1-37301e848dfe",
                                                                                  "71610fdf-fdb5-49c7-8404-86e804b025d4");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2.hashCode(), developercertificate1.hashCode());
            int hashCode = developercertificate1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, developercertificate1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeveloperCertificate developercertificate = new DeveloperCertificate("bbeb5b84-c4d4-4fa9-be82-706dbc3d901f",
                                                                             "fedfac79-c2a4-4eb6-994e-c939614fa699",
                                                                             new Date(1566477458203L),
                                                                             "35da3fe4-d99f-419a-9ae3-289e87afd7b1",
                                                                             "3f55fd18-e91c-4919-9c5d-e08e88ab0fb2",
                                                                             "f1ca65bc-a3a7-4ab6-bb28-e7baff4a4157",
                                                                             "1f07c00a-00ed-4b6a-910e-5b99cccef3c5",
                                                                             "0995b296-b1de-4703-ad30-ee61e9bce029");
        assertTrue(developercertificate.isValid());
        DeveloperCertificate developercertificateInvalid = new DeveloperCertificate("49b206b8-836d-408a-bcf7-57d3aebd3627",
                                                                                    "3b1f8da6-b94b-4ccf-97b4-ef0c6a219baa",
                                                                                    new Date(1566477460028L),
                                                                                    "b19a5966-1887-4673-b1b9-6838cae87804",
                                                                                    "94214fc4-d1ae-4040-8396-c0e9b6110244",
                                                                                    "0c407abe-d338-4b2c-826d-2abb4a6f52c6",
                                                                                    null,
                                                                                    "f850ee30-3758-4112-a013-432a646e6f5c");
        assertFalse(developercertificateInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("c08f5529-c62e-4e2c-9eeb-8849fdb0df5f",
                                                                                  "a4ed8fbb-da5d-45ea-b2c2-64a6e43e69c8",
                                                                                  new Date(1566477458295L),
                                                                                  "6358ee20-587a-4241-8291-0842ae10be65",
                                                                                  "7c1d2405-b86e-4f7c-b9be-8c8ef031d5d0",
                                                                                  "91ff9ee6-4926-4286-96cb-0d7f9925840d",
                                                                                  "04dea54b-b18f-46ec-8f62-814caa0123d3",
                                                                                  "6a770726-d2cb-4c57-ba43-d3f793977398");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("c08f5529-c62e-4e2c-9eeb-8849fdb0df5f",
                                                                                  "a4ed8fbb-da5d-45ea-b2c2-64a6e43e69c8",
                                                                                  new Date(1566477458295L),
                                                                                  "6358ee20-587a-4241-8291-0842ae10be65",
                                                                                  "7c1d2405-b86e-4f7c-b9be-8c8ef031d5d0",
                                                                                  "91ff9ee6-4926-4286-96cb-0d7f9925840d",
                                                                                  "04dea54b-b18f-46ec-8f62-814caa0123d3",
                                                                                  "6a770726-d2cb-4c57-ba43-d3f793977398");
            DeveloperCertificate developercertificate3 = new DeveloperCertificate("c703ac26-5e63-4f12-af5c-77aa23c0031d",
                                                                                  "4c09478c-cca3-4da8-a4e4-c26a44cdbc82",
                                                                                  new Date(1566477455548L),
                                                                                  "dcb435a3-5144-4e94-bd6e-2944d3f01c22",
                                                                                  "73519abb-0971-45a4-8e96-fcfe274d3133",
                                                                                  "aabccc1b-a5c3-452a-bef8-9cacabe3c835",
                                                                                  "f28e3c69-18e9-4ad5-acf9-afcb656846a9",
                                                                                  "f9d2ca93-dfc9-47be-b549-f44e996dbd66");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotNull(developercertificate3);
            assertNotSame(developercertificate2, developercertificate1);
            assertNotSame(developercertificate3, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate1, developercertificate2);
            assertEquals(developercertificate1, developercertificate1);
            assertFalse(developercertificate1.equals(null));
            assertNotEquals(developercertificate3, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
