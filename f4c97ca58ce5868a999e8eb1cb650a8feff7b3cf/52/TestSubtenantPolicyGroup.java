// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantPolicyGroup.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantPolicyGroup {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantPolicyGroup subtenantpolicygroup1 = new SubtenantPolicyGroup("7eac9c4e9c53774dafadb1ee4efb11c1",
                                                                                  84, new Date(1566477454982L),
                                                                                  "7eac9c4e9c53774dafadb1ee4efb11c1",
                                                                                  "ad3d4c0c-a0cc-4b48-b441-e384a1fa0a9b",
                                                                                  new Date(1566477452322L), -6);
            SubtenantPolicyGroup subtenantpolicygroup2 = subtenantpolicygroup1.clone();
            assertNotNull(subtenantpolicygroup1);
            assertNotNull(subtenantpolicygroup2);
            assertNotSame(subtenantpolicygroup2, subtenantpolicygroup1);
            assertEquals(subtenantpolicygroup2, subtenantpolicygroup1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantPolicyGroup subtenantpolicygroup1 = new SubtenantPolicyGroup("7eac9c4e9c53774dafadb1ee4efb11c1",
                                                                                  53, new Date(1566477457349L),
                                                                                  "7eac9c4e9c53774dafadb1ee4efb11c1",
                                                                                  "6df1bb94-cca6-423c-b545-80adaeb91086",
                                                                                  new Date(1566477461168L), 2);
            SubtenantPolicyGroup subtenantpolicygroup2 = new SubtenantPolicyGroup("7eac9c4e9c53774dafadb1ee4efb11c1",
                                                                                  53, new Date(1566477457349L),
                                                                                  "7eac9c4e9c53774dafadb1ee4efb11c1",
                                                                                  "6df1bb94-cca6-423c-b545-80adaeb91086",
                                                                                  new Date(1566477461168L), 2);
            assertNotNull(subtenantpolicygroup1);
            assertNotNull(subtenantpolicygroup2);
            assertNotSame(subtenantpolicygroup2, subtenantpolicygroup1);
            assertEquals(subtenantpolicygroup2, subtenantpolicygroup1);
            assertEquals(subtenantpolicygroup2.hashCode(), subtenantpolicygroup1.hashCode());
            int hashCode = subtenantpolicygroup1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantpolicygroup1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantPolicyGroup subtenantpolicygroup = new SubtenantPolicyGroup("7eac9c4e9c53774dafadb1ee4efb11c1", -123,
                                                                             new Date(1566477459482L),
                                                                             "7eac9c4e9c53774dafadb1ee4efb11c1",
                                                                             "0bfd43af-8a70-4c6e-9e4c-142f05eeb0e8",
                                                                             new Date(1566477460727L), -90);
        assertTrue(subtenantpolicygroup.isValid());
        SubtenantPolicyGroup subtenantpolicygroupInvalid = new SubtenantPolicyGroup(null, -99, new Date(1566477454136L),
                                                                                    "6\u00012\u001566á€?2ï„¶2\u00168á šâŽ†á»?K/68_YB8628æ·•A2\u001fî°®88-2\u0018.2à£©22RáŒ˜8\u001d\u000b2å´¾2_\u001c66ï®¢68626;\u0018L2á•µ",
                                                                                    "9e876500-e89d-4e32-837f-e42ce77d447b3a1dc429-b887-4d25-a38c-a80fe6a387c5e1eea677-ee57-4eaf-b6b0-d460c6ec005b",
                                                                                    new Date(1566477452280L), -71);
        assertFalse(subtenantpolicygroupInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantPolicyGroup subtenantpolicygroup1 = new SubtenantPolicyGroup("7eac9c4e9c53774dafadb1ee4efb11c1",
                                                                                  63, new Date(1566477452922L),
                                                                                  "7eac9c4e9c53774dafadb1ee4efb11c1",
                                                                                  "e8254cfd-e28b-4464-86d6-681ee42198a4",
                                                                                  new Date(1566477460947L), -116);
            SubtenantPolicyGroup subtenantpolicygroup2 = new SubtenantPolicyGroup("7eac9c4e9c53774dafadb1ee4efb11c1",
                                                                                  63, new Date(1566477452922L),
                                                                                  "7eac9c4e9c53774dafadb1ee4efb11c1",
                                                                                  "e8254cfd-e28b-4464-86d6-681ee42198a4",
                                                                                  new Date(1566477460947L), -116);
            SubtenantPolicyGroup subtenantpolicygroup3 = new SubtenantPolicyGroup("7eac9c4e9c53774dafadb1ee4efb11c1",
                                                                                  -35, new Date(1566477462082L),
                                                                                  "7eac9c4e9c53774dafadb1ee4efb11c1",
                                                                                  "0e1c8996-f018-4356-a021-0c7e93b6498e",
                                                                                  new Date(1566477461220L), 42);
            assertNotNull(subtenantpolicygroup1);
            assertNotNull(subtenantpolicygroup2);
            assertNotNull(subtenantpolicygroup3);
            assertNotSame(subtenantpolicygroup2, subtenantpolicygroup1);
            assertNotSame(subtenantpolicygroup3, subtenantpolicygroup1);
            assertEquals(subtenantpolicygroup2, subtenantpolicygroup1);
            assertEquals(subtenantpolicygroup2, subtenantpolicygroup1);
            assertEquals(subtenantpolicygroup1, subtenantpolicygroup2);
            assertEquals(subtenantpolicygroup1, subtenantpolicygroup1);
            assertFalse(subtenantpolicygroup1.equals(null));
            assertNotEquals(subtenantpolicygroup3, subtenantpolicygroup1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
