// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.deviceupdate.model;

import static org.junit.Assert.*;

import com.arm.mbed.cloud.sdk.common.Order;
import com.arm.mbed.cloud.sdk.common.listing.ListOptionsEncoder;
import com.arm.mbed.cloud.sdk.common.listing.filtering.FilterOperator;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import org.junit.Test;

/**
 * Unit tests for Model FirmwareManifestListOptions.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestFirmwareManifestListOptions {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            FirmwareManifestListOptions firmwaremanifestlistoptions1 = new FirmwareManifestListOptions(Integer.valueOf(62),
                                                                                                       Long.valueOf(60),
                                                                                                       Order.getDefault(),
                                                                                                       "544c779c-c651-4d2d-a793-968b2746602c",
                                                                                                       null, null);
            FirmwareManifestListOptions firmwaremanifestlistoptions2 = firmwaremanifestlistoptions1.clone();
            assertNotNull(firmwaremanifestlistoptions1);
            assertNotNull(firmwaremanifestlistoptions2);
            assertNotSame(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the filters method.
     */
    @SuppressWarnings({ "boxing", "resource" })
    @Test
    public void testFilters() {
        try {
            FirmwareManifestListOptions option = new FirmwareManifestListOptions().inCreatedAts(Arrays.asList(new Date(1566477454887L),
                                                                                                              new Date(1566477460403L),
                                                                                                              new Date(1566477457765L),
                                                                                                              new Date(1566477459256L),
                                                                                                              new Date(1566477462284L),
                                                                                                              new Date(1566477461579L)))
                                                                                  .notInCreatedAts(Arrays.asList(new Date(1566477457880L),
                                                                                                                 new Date(1566477463301L),
                                                                                                                 new Date(1566477456616L),
                                                                                                                 new Date(1566477461640L),
                                                                                                                 new Date(1566477457899L),
                                                                                                                 new Date(1566477463280L),
                                                                                                                 new Date(1566477456686L)))
                                                                                  .lessThanCreatedAt(new Date(1566477456002L))
                                                                                  .greaterThanCreatedAt(new Date(1566477463483L))
                                                                                  .equalToName("2f040712-c359-4057-aa83-e47766f87b2c")
                                                                                  .notEqualToName("32dce8ed-728a-4c39-86bf-8982453c55ec")
                                                                                  .inNames(Arrays.asList("b3f4572a-c4bc-43c4-9f0a-76b64c88eb64",
                                                                                                         "e18b05c6-e82c-4f88-a118-05193dd41dd0"))
                                                                                  .notInNames(Arrays.asList("1c210126-f4bd-4d58-a60c-fec175ed1bb4"))
                                                                                  .equalToId("9146cfd7-9544-4297-9150-7f972fde205f")
                                                                                  .notEqualToId("f6d2697f-ec11-48a5-9f2a-9b8af9707030")
                                                                                  .inIds(Arrays.asList("1641f53b-f34b-4cb5-b16e-aa89a2f2a824",
                                                                                                       "a9aa31c1-774b-4cb4-8b54-a33463d10fe5",
                                                                                                       "7e68962c-221a-4b41-b0d7-1a013d2092b4",
                                                                                                       "26035e9b-d943-4d72-b4ac-eb4a7bab3aff"))
                                                                                  .notInIds(Arrays.asList("38674493-efd8-42d9-ba68-76cd76f383e4",
                                                                                                          "65eb7705-9d70-450a-a10f-563e47bf179f",
                                                                                                          "e71d0cee-3c24-4be0-baba-45886695baac",
                                                                                                          "bbf1c628-081e-40bd-8060-093df379fe62"))
                                                                                  .equalToDatafileUrl("3e0969aa-8ffb-4a8c-8fc1-b3c40b9eea0d")
                                                                                  .notEqualToDatafileUrl("5705b544-b827-4fad-8c3a-1c1263d881c9")
                                                                                  .inDatafileUrls(Arrays.asList("ed9c4638-3352-4bfc-8986-abf6bfae423c",
                                                                                                                "bc967890-ec21-4c0d-9078-4fb3f509a11d",
                                                                                                                "635110ad-9ce5-45dd-a7b2-ebd59ad9d151",
                                                                                                                "129b3454-bd9e-43b9-a7ab-e70358732565"))
                                                                                  .notInDatafileUrls(Arrays.asList("8b401767-bc31-44d0-b094-34eda98f2ff5"))
                                                                                  .equalToDatafileSize(Long.valueOf(35))
                                                                                  .notEqualToDatafileSize(Long.valueOf(44))
                                                                                  .inDatafileSizes(Arrays.asList(Long.valueOf(-32),
                                                                                                                 Long.valueOf(16),
                                                                                                                 Long.valueOf(-111),
                                                                                                                 Long.valueOf(-105),
                                                                                                                 Long.valueOf(112),
                                                                                                                 Long.valueOf(92),
                                                                                                                 Long.valueOf(34),
                                                                                                                 Long.valueOf(108)))
                                                                                  .notInDatafileSizes(Arrays.asList(Long.valueOf(0),
                                                                                                                    Long.valueOf(124)))
                                                                                  .equalToDeviceClass("e22b73bf-f7bd-45f3-9a73-f28e61fee75a")
                                                                                  .notEqualToDeviceClass("0681f919-826d-433a-8631-9171045413f9")
                                                                                  .inDeviceClass(Arrays.asList("c22c593c-a81c-46ca-b4a7-a1186525eab9",
                                                                                                               "159c0e03-1b04-426b-b744-7678eeacb391",
                                                                                                               "63077918-5c1c-4d81-b0de-a1c58f2efa4a",
                                                                                                               "09e090ea-7898-42e7-88a5-70b2ab7209b2",
                                                                                                               "a84eebf9-ecf0-44d5-b5fd-3ea8e585957b",
                                                                                                               "c9bc01ee-0f30-46c4-9130-144b2a884906",
                                                                                                               "f6eb67ae-936a-43e7-92aa-d76c7094e3ad",
                                                                                                               "8b903a90-3a85-49a5-a4e6-e4d5be15ef94",
                                                                                                               "4f5ec719-8381-46fc-ad65-bd0b99f6cda3"))
                                                                                  .notInDeviceClass(Arrays.asList("a188a858-d5a3-45b2-bbcb-3c2de3b4df3e",
                                                                                                                  "05c50541-9135-41fa-995a-be06a76ef327",
                                                                                                                  "c1a4c027-15a0-4473-a411-0384fd022a5b",
                                                                                                                  "b5f60805-bd70-4de7-9235-52872c1590ba",
                                                                                                                  "b755cba7-da53-45e2-9ddd-7434354ed5a4"))
                                                                                  .inTimestamps(Arrays.asList(new Date(1566477459479L),
                                                                                                              new Date(1566477460057L),
                                                                                                              new Date(1566477455023L),
                                                                                                              new Date(1566477454512L),
                                                                                                              new Date(1566477460685L),
                                                                                                              new Date(1566477455244L),
                                                                                                              new Date(1566477459746L)))
                                                                                  .notInTimestamps(Arrays.asList(new Date(1566477457845L),
                                                                                                                 new Date(1566477460545L)))
                                                                                  .lessThanTimestamp(new Date(1566477463178L))
                                                                                  .greaterThanTimestamp(new Date(1566477458458L))
                                                                                  .inUpdatedAts(Arrays.asList(new Date(1566477459872L),
                                                                                                              new Date(1566477456755L),
                                                                                                              new Date(1566477456540L),
                                                                                                              new Date(1566477458371L),
                                                                                                              new Date(1566477455017L),
                                                                                                              new Date(1566477454145L),
                                                                                                              new Date(1566477454846L),
                                                                                                              new Date(1566477455751L)))
                                                                                  .notInUpdatedAts(Arrays.asList(new Date(1566477454645L),
                                                                                                                 new Date(1566477458744L),
                                                                                                                 new Date(1566477462419L),
                                                                                                                 new Date(1566477462812L)))
                                                                                  .lessThanUpdatedAt(new Date(1566477461734L))
                                                                                  .greaterThanUpdatedAt(new Date(1566477462667L))
                                                                                  .equalToDescription("1c40b822-1836-4c59-9ec2-cd3bb2831740")
                                                                                  .notEqualToDescription("2b8b04d8-5433-4cb6-b494-80aaaa2ecfc1")
                                                                                  .inDescriptions(Arrays.asList("7529e37d-167d-4d33-8e84-317fb7bcd4b5",
                                                                                                                "46e46bdc-b593-4ac6-97bb-0ab129f6de88",
                                                                                                                "2aed7607-6dbf-4aa6-9f65-ac1f4dc0bbc0",
                                                                                                                "6ba06d41-a259-47ff-b8dd-d40a02bf3b7c",
                                                                                                                "0428eb04-cbaa-4b26-921c-4dcb08a6684d",
                                                                                                                "efe75e66-3d68-4435-8881-e7d3e69f952a",
                                                                                                                "13955644-fa77-4a03-88bb-e8701c5ef67c"))
                                                                                  .notInDescriptions(Arrays.asList("a90b6780-a7b1-4369-a2c5-1b5e37d01e1d",
                                                                                                                   "72ba38fe-6610-4bd1-8dc2-b929c37d410f",
                                                                                                                   "bc500799-a836-4885-abf7-5f9e651e30c5",
                                                                                                                   "2d98badc-6345-4430-8491-d726441437ba",
                                                                                                                   "014f14d9-25ac-416e-827f-18c8eea33301",
                                                                                                                   "81bcfc6c-b55f-4394-9364-de3e3903c9cc",
                                                                                                                   "b60618c8-f479-4acf-a97d-2f9d1d879821",
                                                                                                                   "3e6d355d-8860-48ed-b160-7b1dee95b94b",
                                                                                                                   "19b5f860-45dc-491b-b7ff-529476064892"));
            assertTrue(option.hasFilters());
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1566477454887L), new Date(1566477460403L), new Date(1566477457765L),
                                       new Date(1566477459256L), new Date(1566477462284L), new Date(1566477461579L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1566477457880L), new Date(1566477463301L), new Date(1566477456616L),
                                       new Date(1566477461640L), new Date(1566477457899L), new Date(1566477463280L),
                                       new Date(1566477456686L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                        FilterOperator.LESS_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1566477456002L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1566477463483L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME, FilterOperator.EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("2f040712-c359-4057-aa83-e47766f87b2c",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("32dce8ed-728a-4c39-86bf-8982453c55ec",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME, FilterOperator.IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("b3f4572a-c4bc-43c4-9f0a-76b64c88eb64", "e18b05c6-e82c-4f88-a118-05193dd41dd0"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("1c210126-f4bd-4d58-a60c-fec175ed1bb4"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID, FilterOperator.EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("9146cfd7-9544-4297-9150-7f972fde205f",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("f6d2697f-ec11-48a5-9f2a-9b8af9707030",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID, FilterOperator.IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("1641f53b-f34b-4cb5-b16e-aa89a2f2a824", "a9aa31c1-774b-4cb4-8b54-a33463d10fe5",
                                       "7e68962c-221a-4b41-b0d7-1a013d2092b4", "26035e9b-d943-4d72-b4ac-eb4a7bab3aff"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("38674493-efd8-42d9-ba68-76cd76f383e4", "65eb7705-9d70-450a-a10f-563e47bf179f",
                                       "e71d0cee-3c24-4be0-baba-45886695baac", "bbf1c628-081e-40bd-8060-093df379fe62"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("3e0969aa-8ffb-4a8c-8fc1-b3c40b9eea0d",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("5705b544-b827-4fad-8c3a-1c1263d881c9",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("ed9c4638-3352-4bfc-8986-abf6bfae423c", "bc967890-ec21-4c0d-9078-4fb3f509a11d",
                                       "635110ad-9ce5-45dd-a7b2-ebd59ad9d151", "129b3454-bd9e-43b9-a7ab-e70358732565"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("8b401767-bc31-44d0-b094-34eda98f2ff5"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(35),
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    Long.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(44),
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                       Long.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(-32), Long.valueOf(16), Long.valueOf(-111), Long.valueOf(-105),
                                       Long.valueOf(112), Long.valueOf(92), Long.valueOf(34), Long.valueOf(108)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                        FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(0), Long.valueOf(124)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS, FilterOperator.EQUAL));
            assertNotNull(option.getDeviceClassFilters());
            assertEquals("e22b73bf-f7bd-45f3-9a73-f28e61fee75a",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDeviceClassFilters());
            assertEquals("0681f919-826d-433a-8631-9171045413f9",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS, FilterOperator.IN));
            assertNotNull(option.getDeviceClassFilters());
            assertEquals(Arrays.asList("c22c593c-a81c-46ca-b4a7-a1186525eab9", "159c0e03-1b04-426b-b744-7678eeacb391",
                                       "63077918-5c1c-4d81-b0de-a1c58f2efa4a", "09e090ea-7898-42e7-88a5-70b2ab7209b2",
                                       "a84eebf9-ecf0-44d5-b5fd-3ea8e585957b", "c9bc01ee-0f30-46c4-9130-144b2a884906",
                                       "f6eb67ae-936a-43e7-92aa-d76c7094e3ad", "8b903a90-3a85-49a5-a4e6-e4d5be15ef94",
                                       "4f5ec719-8381-46fc-ad65-bd0b99f6cda3"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS, FilterOperator.NOT_IN));
            assertNotNull(option.getDeviceClassFilters());
            assertEquals(Arrays.asList("a188a858-d5a3-45b2-bbcb-3c2de3b4df3e", "05c50541-9135-41fa-995a-be06a76ef327",
                                       "c1a4c027-15a0-4473-a411-0384fd022a5b", "b5f60805-bd70-4de7-9235-52872c1590ba",
                                       "b755cba7-da53-45e2-9ddd-7434354ed5a4"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP, FilterOperator.IN));
            assertNotNull(option.getTimestampFilters());
            assertEquals(Arrays.asList(new Date(1566477459479L), new Date(1566477460057L), new Date(1566477455023L),
                                       new Date(1566477454512L), new Date(1566477460685L), new Date(1566477455244L),
                                       new Date(1566477459746L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP, FilterOperator.NOT_IN));
            assertNotNull(option.getTimestampFilters());
            assertEquals(Arrays.asList(new Date(1566477457845L), new Date(1566477460545L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP, FilterOperator.LESS_THAN));
            assertNotNull(option.getTimestampFilters());
            assertEquals(new Date(1566477463178L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getTimestampFilters());
            assertEquals(new Date(1566477458458L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1566477459872L), new Date(1566477456755L), new Date(1566477456540L),
                                       new Date(1566477458371L), new Date(1566477455017L), new Date(1566477454145L),
                                       new Date(1566477454846L), new Date(1566477455751L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1566477454645L), new Date(1566477458744L), new Date(1566477462419L),
                                       new Date(1566477462812L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                        FilterOperator.LESS_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1566477461734L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1566477462667L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("1c40b822-1836-4c59-9ec2-cd3bb2831740",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("2b8b04d8-5433-4cb6-b494-80aaaa2ecfc1",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("7529e37d-167d-4d33-8e84-317fb7bcd4b5", "46e46bdc-b593-4ac6-97bb-0ab129f6de88",
                                       "2aed7607-6dbf-4aa6-9f65-ac1f4dc0bbc0", "6ba06d41-a259-47ff-b8dd-d40a02bf3b7c",
                                       "0428eb04-cbaa-4b26-921c-4dcb08a6684d", "efe75e66-3d68-4435-8881-e7d3e69f952a",
                                       "13955644-fa77-4a03-88bb-e8701c5ef67c"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("a90b6780-a7b1-4369-a2c5-1b5e37d01e1d", "72ba38fe-6610-4bd1-8dc2-b929c37d410f",
                                       "bc500799-a836-4885-abf7-5f9e651e30c5", "2d98badc-6345-4430-8491-d726441437ba",
                                       "014f14d9-25ac-416e-827f-18c8eea33301", "81bcfc6c-b55f-4394-9364-de3e3903c9cc",
                                       "b60618c8-f479-4acf-a97d-2f9d1d879821", "3e6d355d-8860-48ed-b160-7b1dee95b94b",
                                       "19b5f860-45dc-491b-b7ff-529476064892"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    List.class, option));
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            FirmwareManifestListOptions firmwaremanifestlistoptions1 = new FirmwareManifestListOptions(Integer.valueOf(69),
                                                                                                       Long.valueOf(-41),
                                                                                                       Order.getDefault(),
                                                                                                       "807cd2cf-4854-4db8-9e5a-cfdd73446829",
                                                                                                       null, null);
            FirmwareManifestListOptions firmwaremanifestlistoptions2 = new FirmwareManifestListOptions(Integer.valueOf(69),
                                                                                                       Long.valueOf(-41),
                                                                                                       Order.getDefault(),
                                                                                                       "807cd2cf-4854-4db8-9e5a-cfdd73446829",
                                                                                                       null, null);
            assertNotNull(firmwaremanifestlistoptions1);
            assertNotNull(firmwaremanifestlistoptions2);
            assertNotSame(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2.hashCode(), firmwaremanifestlistoptions1.hashCode());
            int hashCode = firmwaremanifestlistoptions1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, firmwaremanifestlistoptions1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            FirmwareManifestListOptions firmwaremanifestlistoptions1 = new FirmwareManifestListOptions(Integer.valueOf(26),
                                                                                                       Long.valueOf(-59),
                                                                                                       Order.getDefault(),
                                                                                                       "3ed590f7-84b2-4470-99d1-1d75e2874eb9",
                                                                                                       null, null);
            FirmwareManifestListOptions firmwaremanifestlistoptions2 = new FirmwareManifestListOptions(Integer.valueOf(26),
                                                                                                       Long.valueOf(-59),
                                                                                                       Order.getDefault(),
                                                                                                       "3ed590f7-84b2-4470-99d1-1d75e2874eb9",
                                                                                                       null, null);
            FirmwareManifestListOptions firmwaremanifestlistoptions3 = new FirmwareManifestListOptions(Integer.valueOf(121),
                                                                                                       Long.valueOf(-64),
                                                                                                       Order.getDefault(),
                                                                                                       "48789c14-a19e-4f7d-8d8a-12040f7e72c6",
                                                                                                       null, null);
            assertNotNull(firmwaremanifestlistoptions1);
            assertNotNull(firmwaremanifestlistoptions2);
            assertNotNull(firmwaremanifestlistoptions3);
            assertNotSame(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertNotSame(firmwaremanifestlistoptions3, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions1, firmwaremanifestlistoptions2);
            assertEquals(firmwaremanifestlistoptions1, firmwaremanifestlistoptions1);
            assertFalse(firmwaremanifestlistoptions1.equals(null));
            assertNotEquals(firmwaremanifestlistoptions3, firmwaremanifestlistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
