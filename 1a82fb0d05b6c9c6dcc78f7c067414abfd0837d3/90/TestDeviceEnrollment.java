// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEnrollment.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEnrollment {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEnrollment deviceenrollment1 = new DeviceEnrollment("92197eeb-5a54-433a-a7cd-f2035b1790c3",
                                                                      new Date(1566995744563L),
                                                                      new Date(1566995742619L),
                                                                      "TaL51Uz2c1Ea9qIFcn8IS8GZU8Xb0Or1",
                                                                      "A-4OWp8Rj266iBM7zFcFQ6M3:jq65iTNPLxxBW02UGZ1BMk7316E5B36UZ0NxHe312BZmJEfQ8rDzkB:isLknvMV3tbgt1I31",
                                                                      new Date(1566995749460L),
                                                                      "TaL51Uz2c1Ea9qIFcn8IS8GZU8Xb0Or1");
            DeviceEnrollment deviceenrollment2 = deviceenrollment1.clone();
            assertNotNull(deviceenrollment1);
            assertNotNull(deviceenrollment2);
            assertNotSame(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEnrollment deviceenrollment1 = new DeviceEnrollment("a82325ef-4477-40bd-9526-78ca05af9a87",
                                                                      new Date(1566995748167L),
                                                                      new Date(1566995746218L),
                                                                      "TaL51Uz2c1Ea9qIFcn8IS8GZU8Xb0Or1",
                                                                      "A-4OWp8Rj266iBM7zFcFQ6M3:jq65iTNPLxxBW02UGZ1BMk7316E5B36UZ0NxHe312BZmJEfQ8rDzkB:isLknvMV3tbgt1I31",
                                                                      new Date(1566995748694L),
                                                                      "TaL51Uz2c1Ea9qIFcn8IS8GZU8Xb0Or1");
            DeviceEnrollment deviceenrollment2 = new DeviceEnrollment("a82325ef-4477-40bd-9526-78ca05af9a87",
                                                                      new Date(1566995748167L),
                                                                      new Date(1566995746218L),
                                                                      "TaL51Uz2c1Ea9qIFcn8IS8GZU8Xb0Or1",
                                                                      "A-4OWp8Rj266iBM7zFcFQ6M3:jq65iTNPLxxBW02UGZ1BMk7316E5B36UZ0NxHe312BZmJEfQ8rDzkB:isLknvMV3tbgt1I31",
                                                                      new Date(1566995748694L),
                                                                      "TaL51Uz2c1Ea9qIFcn8IS8GZU8Xb0Or1");
            assertNotNull(deviceenrollment1);
            assertNotNull(deviceenrollment2);
            assertNotSame(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2.hashCode(), deviceenrollment1.hashCode());
            int hashCode = deviceenrollment1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceenrollment1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEnrollment deviceenrollment = new DeviceEnrollment("e4989863-917f-4cf6-aedc-9a0f0d423dc3",
                                                                 new Date(1566995744762L), new Date(1566995746331L),
                                                                 "TaL51Uz2c1Ea9qIFcn8IS8GZU8Xb0Or1",
                                                                 "A-4OWp8Rj266iBM7zFcFQ6M3:jq65iTNPLxxBW02UGZ1BMk7316E5B36UZ0NxHe312BZmJEfQ8rDzkB:isLknvMV3tbgt1I31",
                                                                 new Date(1566995740924L),
                                                                 "TaL51Uz2c1Ea9qIFcn8IS8GZU8Xb0Or1");
        assertTrue(deviceenrollment.isValid());
        DeviceEnrollment deviceenrollmentInvalid = new DeviceEnrollment("b386bdf7-7e77-4758-9399-ca6a17db2999",
                                                                        new Date(1566995741337L),
                                                                        new Date(1566995743456L),
                                                                        "HKox3PQVps4Y4\u000047Y[KMYKQYYHY嵟V^PQ?Y77Y∫ YJRY4DMBoYRKMk=WhP6WdY7`",
                                                                        null, new Date(1566995744920L),
                                                                        "HKox3PQVps4Y4\u000047Y[KMYKQYYHY嵟V^PQ?Y77Y∫ YJRY4DMBoYRKMk=WhP6WdY7`");
        assertFalse(deviceenrollmentInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEnrollment deviceenrollment1 = new DeviceEnrollment("3dd50c29-d8eb-4ca5-a783-b125a0874e49",
                                                                      new Date(1566995740086L),
                                                                      new Date(1566995747109L),
                                                                      "TaL51Uz2c1Ea9qIFcn8IS8GZU8Xb0Or1",
                                                                      "A-4OWp8Rj266iBM7zFcFQ6M3:jq65iTNPLxxBW02UGZ1BMk7316E5B36UZ0NxHe312BZmJEfQ8rDzkB:isLknvMV3tbgt1I31",
                                                                      new Date(1566995742261L),
                                                                      "TaL51Uz2c1Ea9qIFcn8IS8GZU8Xb0Or1");
            DeviceEnrollment deviceenrollment2 = new DeviceEnrollment("3dd50c29-d8eb-4ca5-a783-b125a0874e49",
                                                                      new Date(1566995740086L),
                                                                      new Date(1566995747109L),
                                                                      "TaL51Uz2c1Ea9qIFcn8IS8GZU8Xb0Or1",
                                                                      "A-4OWp8Rj266iBM7zFcFQ6M3:jq65iTNPLxxBW02UGZ1BMk7316E5B36UZ0NxHe312BZmJEfQ8rDzkB:isLknvMV3tbgt1I31",
                                                                      new Date(1566995742261L),
                                                                      "TaL51Uz2c1Ea9qIFcn8IS8GZU8Xb0Or1");
            DeviceEnrollment deviceenrollment3 = new DeviceEnrollment("bd238e2d-f620-4d9f-a164-fd0d656c9699",
                                                                      new Date(1566995741560L),
                                                                      new Date(1566995747451L),
                                                                      "TaL51Uz2c1Ea9qIFcn8IS8GZU8Xb0Or1",
                                                                      "A-4OWp8Rj266iBM7zFcFQ6M3:jq65iTNPLxxBW02UGZ1BMk7316E5B36UZ0NxHe312BZmJEfQ8rDzkB:isLknvMV3tbgt1I31",
                                                                      new Date(1566995745402L),
                                                                      "TaL51Uz2c1Ea9qIFcn8IS8GZU8Xb0Or1");
            assertNotNull(deviceenrollment1);
            assertNotNull(deviceenrollment2);
            assertNotNull(deviceenrollment3);
            assertNotSame(deviceenrollment2, deviceenrollment1);
            assertNotSame(deviceenrollment3, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment1, deviceenrollment2);
            assertEquals(deviceenrollment1, deviceenrollment1);
            assertFalse(deviceenrollment1.equals(null));
            assertNotEquals(deviceenrollment3, deviceenrollment1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
