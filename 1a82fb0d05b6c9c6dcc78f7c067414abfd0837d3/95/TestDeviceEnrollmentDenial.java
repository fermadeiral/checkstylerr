// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEnrollmentDenial.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEnrollmentDenial {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("02c5996de8d57cd67670ecd25b819d1a",
                                                                                        new Date(1566995740535L),
                                                                                        "0a2124bf-6b7e-4d80-a87e-2b8b72edd4b6",
                                                                                        "02c5996de8d57cd67670ecd25b819d1a",
                                                                                        "02c5996de8d57cd67670ecd25b819d1a");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = deviceenrollmentdenial1.clone();
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("02c5996de8d57cd67670ecd25b819d1a",
                                                                                        new Date(1566995748157L),
                                                                                        "0fce56a9-3b9f-49d2-b4cf-b75be2c7580c",
                                                                                        "02c5996de8d57cd67670ecd25b819d1a",
                                                                                        "02c5996de8d57cd67670ecd25b819d1a");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = new DeviceEnrollmentDenial("02c5996de8d57cd67670ecd25b819d1a",
                                                                                        new Date(1566995748157L),
                                                                                        "0fce56a9-3b9f-49d2-b4cf-b75be2c7580c",
                                                                                        "02c5996de8d57cd67670ecd25b819d1a",
                                                                                        "02c5996de8d57cd67670ecd25b819d1a");
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2.hashCode(), deviceenrollmentdenial1.hashCode());
            int hashCode = deviceenrollmentdenial1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceenrollmentdenial1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEnrollmentDenial deviceenrollmentdenial = new DeviceEnrollmentDenial("02c5996de8d57cd67670ecd25b819d1a",
                                                                                   new Date(1566995741510L),
                                                                                   "396b2b0d-497d-437e-89ea-de8c64d5c6f2",
                                                                                   "02c5996de8d57cd67670ecd25b819d1a",
                                                                                   "02c5996de8d57cd67670ecd25b819d1a");
        assertTrue(deviceenrollmentdenial.isValid());
        DeviceEnrollmentDenial deviceenrollmentdenialInvalid = new DeviceEnrollmentDenial("^>43Y<æ±“;Hé?‡443èž‹è¨Œ\b?4 .3á”œ4\u001434\u0015æ?‰.ïž¿ã±«3\u001d43\u001aWT4Zë¾•çš¦çŒ?E\u000444,îŒ–Aë™¾\u001f4î?€Wà¾¶\u0000]4`D3",
                                                                                          new Date(1566995741435L),
                                                                                          "e9417f87-fbd7-4a1e-b0cf-e7beb7cbaea7",
                                                                                          "^>43Y<æ±“;Hé?‡443èž‹è¨Œ\b?4 .3á”œ4\u001434\u0015æ?‰.ïž¿ã±«3\u001d43\u001aWT4Zë¾•çš¦çŒ?E\u000444,îŒ–Aë™¾\u001f4î?€Wà¾¶\u0000]4`D3",
                                                                                          "^>43Y<æ±“;Hé?‡443èž‹è¨Œ\b?4 .3á”œ4\u001434\u0015æ?‰.ïž¿ã±«3\u001d43\u001aWT4Zë¾•çš¦çŒ?E\u000444,îŒ–Aë™¾\u001f4î?€Wà¾¶\u0000]4`D3");
        assertFalse(deviceenrollmentdenialInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("02c5996de8d57cd67670ecd25b819d1a",
                                                                                        new Date(1566995745247L),
                                                                                        "8384832a-a85e-43a1-b185-2dc9c3c71a1b",
                                                                                        "02c5996de8d57cd67670ecd25b819d1a",
                                                                                        "02c5996de8d57cd67670ecd25b819d1a");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = new DeviceEnrollmentDenial("02c5996de8d57cd67670ecd25b819d1a",
                                                                                        new Date(1566995745247L),
                                                                                        "8384832a-a85e-43a1-b185-2dc9c3c71a1b",
                                                                                        "02c5996de8d57cd67670ecd25b819d1a",
                                                                                        "02c5996de8d57cd67670ecd25b819d1a");
            DeviceEnrollmentDenial deviceenrollmentdenial3 = new DeviceEnrollmentDenial("02c5996de8d57cd67670ecd25b819d1a",
                                                                                        new Date(1566995749304L),
                                                                                        "16686503-56eb-491a-870c-e168c7b0ed0a",
                                                                                        "02c5996de8d57cd67670ecd25b819d1a",
                                                                                        "02c5996de8d57cd67670ecd25b819d1a");
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotNull(deviceenrollmentdenial3);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertNotSame(deviceenrollmentdenial3, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial1, deviceenrollmentdenial2);
            assertEquals(deviceenrollmentdenial1, deviceenrollmentdenial1);
            assertFalse(deviceenrollmentdenial1.equals(null));
            assertNotEquals(deviceenrollmentdenial3, deviceenrollmentdenial1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
