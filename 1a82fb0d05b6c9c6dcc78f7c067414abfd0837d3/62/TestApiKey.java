// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model ApiKey.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestApiKey {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ApiKey apikey1 = new ApiKey("02c5996de8d57cd67670ecd25b819d1a", new Date(1566995744110L), 42, null,
                                        "02c5996de8d57cd67670ecd25b819d1a", "cfbf5a51-86f3-49d1-a5e9-b157cb406ddf", -32,
                                        "27221b7c-3cc2-4732-9069-65a3bed73542", "02c5996de8d57cd67670ecd25b819d1a",
                                        ApiKeyStatus.getDefault(), new Date(1566995746546L));
            ApiKey apikey2 = apikey1.clone();
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotSame(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ApiKey apikey1 = new ApiKey("02c5996de8d57cd67670ecd25b819d1a", new Date(1566995740408L), -25, null,
                                        "02c5996de8d57cd67670ecd25b819d1a", "8e231414-1fdd-4bc9-84d4-8d180731b120", -58,
                                        "a21788fe-4037-44ad-af8b-d414e7694392", "02c5996de8d57cd67670ecd25b819d1a",
                                        ApiKeyStatus.getDefault(), new Date(1566995742111L));
            ApiKey apikey2 = new ApiKey("02c5996de8d57cd67670ecd25b819d1a", new Date(1566995740408L), -25, null,
                                        "02c5996de8d57cd67670ecd25b819d1a", "8e231414-1fdd-4bc9-84d4-8d180731b120", -58,
                                        "a21788fe-4037-44ad-af8b-d414e7694392", "02c5996de8d57cd67670ecd25b819d1a",
                                        ApiKeyStatus.getDefault(), new Date(1566995742111L));
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotSame(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey2.hashCode(), apikey1.hashCode());
            int hashCode = apikey1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, apikey1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ApiKey apikey = new ApiKey("02c5996de8d57cd67670ecd25b819d1a", new Date(1566995748757L), -114, null,
                                   "02c5996de8d57cd67670ecd25b819d1a", "5fb75ed0-d9f9-4725-851f-71a001aaf551", -83,
                                   "b73c6296-fac9-4bb0-bead-570366212c82", "02c5996de8d57cd67670ecd25b819d1a",
                                   ApiKeyStatus.getDefault(), new Date(1566995739872L));
        assertTrue(apikey.isValid());
        ApiKey apikeyInvalid = new ApiKey("^>43Y<æ±“;Hé?‡443èž‹è¨Œ\b?4 .3á”œ4\u001434\u0015æ?‰.ïž¿ã±«3\u001d43\u001aWT4Zë¾•çš¦çŒ?E\u000444,îŒ–Aë™¾\u001f4î?€Wà¾¶\u0000]4`D3",
                                          new Date(1566995749229L), -52, null,
                                          "^>43Y<æ±“;Hé?‡443èž‹è¨Œ\b?4 .3á”œ4\u001434\u0015æ?‰.ïž¿ã±«3\u001d43\u001aWT4Zë¾•çš¦çŒ?E\u000444,îŒ–Aë™¾\u001f4î?€Wà¾¶\u0000]4`D3",
                                          "e6f2e913-60f4-4346-973c-bd5175ad77fc", 30, null,
                                          "^>43Y<æ±“;Hé?‡443èž‹è¨Œ\b?4 .3á”œ4\u001434\u0015æ?‰.ïž¿ã±«3\u001d43\u001aWT4Zë¾•çš¦çŒ?E\u000444,îŒ–Aë™¾\u001f4î?€Wà¾¶\u0000]4`D3",
                                          ApiKeyStatus.getDefault(), new Date(1566995744693L));
        assertFalse(apikeyInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ApiKey apikey1 = new ApiKey("02c5996de8d57cd67670ecd25b819d1a", new Date(1566995744048L), -63, null,
                                        "02c5996de8d57cd67670ecd25b819d1a", "1b0bcd3c-c7ef-4648-ba9d-a54e8f2948a3", 111,
                                        "484ae336-5318-4691-871c-e090481f86ee", "02c5996de8d57cd67670ecd25b819d1a",
                                        ApiKeyStatus.getDefault(), new Date(1566995742050L));
            ApiKey apikey2 = new ApiKey("02c5996de8d57cd67670ecd25b819d1a", new Date(1566995744048L), -63, null,
                                        "02c5996de8d57cd67670ecd25b819d1a", "1b0bcd3c-c7ef-4648-ba9d-a54e8f2948a3", 111,
                                        "484ae336-5318-4691-871c-e090481f86ee", "02c5996de8d57cd67670ecd25b819d1a",
                                        ApiKeyStatus.getDefault(), new Date(1566995742050L));
            ApiKey apikey3 = new ApiKey("02c5996de8d57cd67670ecd25b819d1a", new Date(1566995742965L), 72, null,
                                        "02c5996de8d57cd67670ecd25b819d1a", "b0bb9947-26d7-4a08-901f-49fca444d32a", -83,
                                        "d25e6284-44dd-45f0-b6e0-295403e0aac3", "02c5996de8d57cd67670ecd25b819d1a",
                                        ApiKeyStatus.getDefault(), new Date(1566995747028L));
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotNull(apikey3);
            assertNotSame(apikey2, apikey1);
            assertNotSame(apikey3, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey1, apikey2);
            assertEquals(apikey1, apikey1);
            assertFalse(apikey1.equals(null));
            assertNotEquals(apikey3, apikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
