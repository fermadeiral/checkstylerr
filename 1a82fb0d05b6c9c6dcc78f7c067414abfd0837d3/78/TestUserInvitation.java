// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model UserInvitation.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestUserInvitation {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("02c5996de8d57cd67670ecd25b819d1a",
                                                                new Date(1566995745608L), "8e13d.48f25@79e2b.fr",
                                                                new Date(1566995741646L), null,
                                                                "02c5996de8d57cd67670ecd25b819d1a", null,
                                                                new Date(1566995745830L),
                                                                "02c5996de8d57cd67670ecd25b819d1a");
            UserInvitation userinvitation2 = userinvitation1.clone();
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotSame(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("02c5996de8d57cd67670ecd25b819d1a",
                                                                new Date(1566995747580L), "adb2a.b015f@aff58.me",
                                                                new Date(1566995745421L), null,
                                                                "02c5996de8d57cd67670ecd25b819d1a", null,
                                                                new Date(1566995745589L),
                                                                "02c5996de8d57cd67670ecd25b819d1a");
            UserInvitation userinvitation2 = new UserInvitation("02c5996de8d57cd67670ecd25b819d1a",
                                                                new Date(1566995747580L), "adb2a.b015f@aff58.me",
                                                                new Date(1566995745421L), null,
                                                                "02c5996de8d57cd67670ecd25b819d1a", null,
                                                                new Date(1566995745589L),
                                                                "02c5996de8d57cd67670ecd25b819d1a");
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotSame(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation2.hashCode(), userinvitation1.hashCode());
            int hashCode = userinvitation1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, userinvitation1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        UserInvitation userinvitation = new UserInvitation("02c5996de8d57cd67670ecd25b819d1a", new Date(1566995745700L),
                                                           "b3117.157c3@54a14.fr", new Date(1566995741128L), null,
                                                           "02c5996de8d57cd67670ecd25b819d1a", null,
                                                           new Date(1566995747490L),
                                                           "02c5996de8d57cd67670ecd25b819d1a");
        assertTrue(userinvitation.isValid());
        UserInvitation userinvitationInvalid = new UserInvitation("^>43Y<æ±“;Hé?‡443èž‹è¨Œ\b?4 .3á”œ4\u001434\u0015æ?‰.ïž¿ã±«3\u001d43\u001aWT4Zë¾•çš¦çŒ?E\u000444,îŒ–Aë™¾\u001f4î?€Wà¾¶\u0000]4`D3",
                                                                  new Date(1566995740017L), null,
                                                                  new Date(1566995746123L), null,
                                                                  "^>43Y<æ±“;Hé?‡443èž‹è¨Œ\b?4 .3á”œ4\u001434\u0015æ?‰.ïž¿ã±«3\u001d43\u001aWT4Zë¾•çš¦çŒ?E\u000444,îŒ–Aë™¾\u001f4î?€Wà¾¶\u0000]4`D3",
                                                                  null, new Date(1566995747670L),
                                                                  "^>43Y<æ±“;Hé?‡443èž‹è¨Œ\b?4 .3á”œ4\u001434\u0015æ?‰.ïž¿ã±«3\u001d43\u001aWT4Zë¾•çš¦çŒ?E\u000444,îŒ–Aë™¾\u001f4î?€Wà¾¶\u0000]4`D3");
        assertFalse(userinvitationInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("02c5996de8d57cd67670ecd25b819d1a",
                                                                new Date(1566995749308L), "90f93.b775c@52e47.fr",
                                                                new Date(1566995741648L), null,
                                                                "02c5996de8d57cd67670ecd25b819d1a", null,
                                                                new Date(1566995740938L),
                                                                "02c5996de8d57cd67670ecd25b819d1a");
            UserInvitation userinvitation2 = new UserInvitation("02c5996de8d57cd67670ecd25b819d1a",
                                                                new Date(1566995749308L), "90f93.b775c@52e47.fr",
                                                                new Date(1566995741648L), null,
                                                                "02c5996de8d57cd67670ecd25b819d1a", null,
                                                                new Date(1566995740938L),
                                                                "02c5996de8d57cd67670ecd25b819d1a");
            UserInvitation userinvitation3 = new UserInvitation("02c5996de8d57cd67670ecd25b819d1a",
                                                                new Date(1566995747907L), "b8888.07538@51ab4.fr",
                                                                new Date(1566995746198L), null,
                                                                "02c5996de8d57cd67670ecd25b819d1a", null,
                                                                new Date(1566995740699L),
                                                                "02c5996de8d57cd67670ecd25b819d1a");
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotNull(userinvitation3);
            assertNotSame(userinvitation2, userinvitation1);
            assertNotSame(userinvitation3, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation1, userinvitation2);
            assertEquals(userinvitation1, userinvitation1);
            assertFalse(userinvitation1.equals(null));
            assertNotEquals(userinvitation3, userinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
