// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantApiKey.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantApiKey {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("02c5996de8d57cd67670ecd25b819d1a",
                                                                   new Date(1566995743116L), -7, null,
                                                                   "02c5996de8d57cd67670ecd25b819d1a",
                                                                   "7e250155-e0f4-4cca-996c-4ce9a67b119b", 118,
                                                                   "2de0e209-dc3d-42dc-920a-4684565127ec",
                                                                   "02c5996de8d57cd67670ecd25b819d1a",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1566995741371L));
            SubtenantApiKey subtenantapikey2 = subtenantapikey1.clone();
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("02c5996de8d57cd67670ecd25b819d1a",
                                                                   new Date(1566995747823L), 84, null,
                                                                   "02c5996de8d57cd67670ecd25b819d1a",
                                                                   "c6092bdd-88e5-4e48-a5cd-17baeaae482c", 38,
                                                                   "d802a21c-94dd-495e-882e-eeeaf450f234",
                                                                   "02c5996de8d57cd67670ecd25b819d1a",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1566995744683L));
            SubtenantApiKey subtenantapikey2 = new SubtenantApiKey("02c5996de8d57cd67670ecd25b819d1a",
                                                                   new Date(1566995747823L), 84, null,
                                                                   "02c5996de8d57cd67670ecd25b819d1a",
                                                                   "c6092bdd-88e5-4e48-a5cd-17baeaae482c", 38,
                                                                   "d802a21c-94dd-495e-882e-eeeaf450f234",
                                                                   "02c5996de8d57cd67670ecd25b819d1a",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1566995744683L));
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2.hashCode(), subtenantapikey1.hashCode());
            int hashCode = subtenantapikey1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantapikey1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantApiKey subtenantapikey = new SubtenantApiKey("02c5996de8d57cd67670ecd25b819d1a",
                                                              new Date(1566995745719L), -25, null,
                                                              "02c5996de8d57cd67670ecd25b819d1a",
                                                              "e816dcaf-c5fe-479e-b8e8-32aa388b1e2b", 24,
                                                              "535d2185-aaab-4376-8ed0-c59d9eee044c",
                                                              "02c5996de8d57cd67670ecd25b819d1a",
                                                              SubtenantApiKeyStatus.getDefault(),
                                                              new Date(1566995742929L));
        assertTrue(subtenantapikey.isValid());
        SubtenantApiKey subtenantapikeyInvalid = new SubtenantApiKey(null, new Date(1566995740759L), -88, null,
                                                                     "^>43Y<æ±“;Hé?‡443èž‹è¨Œ\b?4 .3á”œ4\u001434\u0015æ?‰.ïž¿ã±«3\u001d43\u001aWT4Zë¾•çš¦çŒ?E\u000444,îŒ–Aë™¾\u001f4î?€Wà¾¶\u0000]4`D3",
                                                                     "0ba7203f-4c9b-4eb7-b672-107b954092e5", -49, null,
                                                                     "^>43Y<æ±“;Hé?‡443èž‹è¨Œ\b?4 .3á”œ4\u001434\u0015æ?‰.ïž¿ã±«3\u001d43\u001aWT4Zë¾•çš¦çŒ?E\u000444,îŒ–Aë™¾\u001f4î?€Wà¾¶\u0000]4`D3",
                                                                     SubtenantApiKeyStatus.getDefault(),
                                                                     new Date(1566995749347L));
        assertFalse(subtenantapikeyInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("02c5996de8d57cd67670ecd25b819d1a",
                                                                   new Date(1566995745403L), -64, null,
                                                                   "02c5996de8d57cd67670ecd25b819d1a",
                                                                   "7ab40592-6143-44b6-80f6-0109ee4f8df2", -40,
                                                                   "ea85b3e5-b27e-4cfa-9171-f99d39d37dbb",
                                                                   "02c5996de8d57cd67670ecd25b819d1a",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1566995746401L));
            SubtenantApiKey subtenantapikey2 = new SubtenantApiKey("02c5996de8d57cd67670ecd25b819d1a",
                                                                   new Date(1566995745403L), -64, null,
                                                                   "02c5996de8d57cd67670ecd25b819d1a",
                                                                   "7ab40592-6143-44b6-80f6-0109ee4f8df2", -40,
                                                                   "ea85b3e5-b27e-4cfa-9171-f99d39d37dbb",
                                                                   "02c5996de8d57cd67670ecd25b819d1a",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1566995746401L));
            SubtenantApiKey subtenantapikey3 = new SubtenantApiKey("02c5996de8d57cd67670ecd25b819d1a",
                                                                   new Date(1566995746024L), 91, null,
                                                                   "02c5996de8d57cd67670ecd25b819d1a",
                                                                   "80ce3641-06e9-4aeb-b8d0-75f73e6d1ab0", -2,
                                                                   "f77c6d4b-0cfa-4cbf-bb63-ae27453001bc",
                                                                   "02c5996de8d57cd67670ecd25b819d1a",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1566995747368L));
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotNull(subtenantapikey3);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertNotSame(subtenantapikey3, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey1, subtenantapikey2);
            assertEquals(subtenantapikey1, subtenantapikey1);
            assertFalse(subtenantapikey1.equals(null));
            assertNotEquals(subtenantapikey3, subtenantapikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
