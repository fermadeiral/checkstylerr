// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.security.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeveloperCertificate.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeveloperCertificate {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("c28ccde2-7b6e-45ce-ad56-33aa66096da4",
                                                                                  "a85cf901-7085-4fd9-9fc8-ff3d766a6566",
                                                                                  new Date(1566995749081L),
                                                                                  "360c899d-91c8-40af-b136-f0f0fb73fc08",
                                                                                  "1cab4a86-f15f-4dcf-969c-3e69fbe160ec",
                                                                                  "7c731e58-4066-44b5-9ef8-5ba8c3d54c6f",
                                                                                  "aa039a47-951d-4806-b2f4-d5bdf06e8cf7",
                                                                                  "f39075a7-9508-4d9f-9bc7-87f3f8bd094b");
            DeveloperCertificate developercertificate2 = developercertificate1.clone();
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("35138ba1-aaab-4803-8ba0-e8d407c94ab6",
                                                                                  "e3c2acac-8a64-484e-bbea-27170f1e1a1e",
                                                                                  new Date(1566995747872L),
                                                                                  "1222403a-b376-4246-b402-61f585ea8c2c",
                                                                                  "d8addcf6-50ef-4b3c-b449-1060277b0971",
                                                                                  "3e91052d-a8aa-46d2-a5ac-6aee8b98cf8b",
                                                                                  "c7bf6764-d301-4e5e-bf29-9df871a284cb",
                                                                                  "6d5029ee-2240-47c6-97ea-15c5d74c047f");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("35138ba1-aaab-4803-8ba0-e8d407c94ab6",
                                                                                  "e3c2acac-8a64-484e-bbea-27170f1e1a1e",
                                                                                  new Date(1566995747872L),
                                                                                  "1222403a-b376-4246-b402-61f585ea8c2c",
                                                                                  "d8addcf6-50ef-4b3c-b449-1060277b0971",
                                                                                  "3e91052d-a8aa-46d2-a5ac-6aee8b98cf8b",
                                                                                  "c7bf6764-d301-4e5e-bf29-9df871a284cb",
                                                                                  "6d5029ee-2240-47c6-97ea-15c5d74c047f");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2.hashCode(), developercertificate1.hashCode());
            int hashCode = developercertificate1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, developercertificate1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeveloperCertificate developercertificate = new DeveloperCertificate("ac7aa76e-905b-4acf-a7de-e53624d5ecd5",
                                                                             "f234c220-13dc-4ee1-8940-8c133a2745a1",
                                                                             new Date(1566995743785L),
                                                                             "45bcb955-5461-4d3a-9ff5-ced42967fe0a",
                                                                             "0dfb0bf0-3f1b-48e5-8bdf-b550e77a9f91",
                                                                             "b498e51d-370f-4337-aebf-9896da31b7c8",
                                                                             "5e1f6ee9-8bc4-4ddb-8143-c738c2845155",
                                                                             "2db06f1a-705d-4e39-86d9-d3c43178ba2a");
        assertTrue(developercertificate.isValid());
        DeveloperCertificate developercertificateInvalid = new DeveloperCertificate("09b24431-9fbc-4670-9757-e3e142912296",
                                                                                    "f803a2e5-1284-4af8-b56d-e8c1e607115f",
                                                                                    new Date(1566995742012L),
                                                                                    "d7137e46-9035-4389-8e07-989fc51a5ebd",
                                                                                    "1756f5f3-dcb7-41b2-a86d-4a60754ab44e",
                                                                                    "f008b6d6-da89-442a-8a01-0a02d0d74542",
                                                                                    null,
                                                                                    "a124a015-c7de-4e88-9842-b06336e72b62");
        assertFalse(developercertificateInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("91b978aa-e433-4e48-b167-1514e6a00de5",
                                                                                  "7bed25c8-7425-4271-92ac-cbbd0818e7a6",
                                                                                  new Date(1566995748213L),
                                                                                  "8ee65150-aa3e-420f-9a71-e700ffdaa555",
                                                                                  "7fecba2f-1e08-4fb5-8895-5478e9aeebdc",
                                                                                  "b42dd187-9a1e-422a-9b45-c16ba68e21a0",
                                                                                  "04677f1d-f78d-45bb-add9-dc7360082d8d",
                                                                                  "14521ad0-420f-45d9-bfe2-02a2076abbc6");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("91b978aa-e433-4e48-b167-1514e6a00de5",
                                                                                  "7bed25c8-7425-4271-92ac-cbbd0818e7a6",
                                                                                  new Date(1566995748213L),
                                                                                  "8ee65150-aa3e-420f-9a71-e700ffdaa555",
                                                                                  "7fecba2f-1e08-4fb5-8895-5478e9aeebdc",
                                                                                  "b42dd187-9a1e-422a-9b45-c16ba68e21a0",
                                                                                  "04677f1d-f78d-45bb-add9-dc7360082d8d",
                                                                                  "14521ad0-420f-45d9-bfe2-02a2076abbc6");
            DeveloperCertificate developercertificate3 = new DeveloperCertificate("e2c14097-8935-4500-b9b6-609ae6b62aa8",
                                                                                  "0788cc9f-d825-4c57-bc26-d9486336652b",
                                                                                  new Date(1566995742097L),
                                                                                  "96776d80-09cb-482c-8cb3-457bf471ad73",
                                                                                  "e6f6bd45-ee20-452f-a3fa-9517866bd10c",
                                                                                  "8cc8a076-0cdf-4438-9fda-8dbb808ea5b8",
                                                                                  "5f1b886d-90b3-4fda-aa86-15d7a4bff494",
                                                                                  "4199a81f-b4be-4f94-8bb2-1439a4c555df");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotNull(developercertificate3);
            assertNotSame(developercertificate2, developercertificate1);
            assertNotSame(developercertificate3, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate1, developercertificate2);
            assertEquals(developercertificate1, developercertificate1);
            assertFalse(developercertificate1.equals(null));
            assertNotEquals(developercertificate3, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
