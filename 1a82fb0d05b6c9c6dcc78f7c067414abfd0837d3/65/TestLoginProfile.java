// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model LoginProfile.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestLoginProfile {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            LoginProfile loginprofile1 = new LoginProfile("fd5ccb9c-afe3-4127-b668-22799f57071c",
                                                          "868b30a0-5386-47a5-9e31-c5c6be0bd193");
            LoginProfile loginprofile2 = loginprofile1.clone();
            assertNotNull(loginprofile1);
            assertNotNull(loginprofile2);
            assertNotSame(loginprofile2, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            LoginProfile loginprofile1 = new LoginProfile("fec5fe67-1000-4ad6-b07e-2065e8ee8e83",
                                                          "1a73d9e3-fb8f-46fc-bf84-229acba6bccd");
            LoginProfile loginprofile2 = new LoginProfile("fec5fe67-1000-4ad6-b07e-2065e8ee8e83",
                                                          "1a73d9e3-fb8f-46fc-bf84-229acba6bccd");
            assertNotNull(loginprofile1);
            assertNotNull(loginprofile2);
            assertNotSame(loginprofile2, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
            assertEquals(loginprofile2.hashCode(), loginprofile1.hashCode());
            int hashCode = loginprofile1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, loginprofile1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        LoginProfile loginprofile = new LoginProfile("5580f8ed-43f4-4a67-a7ca-0d94f421a618",
                                                     "8d608c65-4c58-41ce-9522-3ead79674646");
        assertTrue(loginprofile.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            LoginProfile loginprofile1 = new LoginProfile("29ee6b98-dbd6-4a69-a13a-430528326885",
                                                          "5a770ec7-5f37-4ebf-845a-be7123961979");
            LoginProfile loginprofile2 = new LoginProfile("29ee6b98-dbd6-4a69-a13a-430528326885",
                                                          "5a770ec7-5f37-4ebf-845a-be7123961979");
            LoginProfile loginprofile3 = new LoginProfile("1c189bbe-ab6d-4fca-859f-7794767d3768",
                                                          "8a49c9bd-ff9e-48a4-a69a-d1e29d9edbd5");
            assertNotNull(loginprofile1);
            assertNotNull(loginprofile2);
            assertNotNull(loginprofile3);
            assertNotSame(loginprofile2, loginprofile1);
            assertNotSame(loginprofile3, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
            assertEquals(loginprofile1, loginprofile2);
            assertEquals(loginprofile1, loginprofile1);
            assertFalse(loginprofile1.equals(null));
            assertNotEquals(loginprofile3, loginprofile1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
