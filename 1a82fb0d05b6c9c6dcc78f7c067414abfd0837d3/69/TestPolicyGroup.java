// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model PolicyGroup.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestPolicyGroup {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            PolicyGroup policygroup1 = new PolicyGroup("02c5996de8d57cd67670ecd25b819d1a", 73, new Date(1566995740392L),
                                                       "02c5996de8d57cd67670ecd25b819d1a",
                                                       "1b1972a5-133f-4c0b-908f-8972ffb98ee7", new Date(1566995741156L),
                                                       -116);
            PolicyGroup policygroup2 = policygroup1.clone();
            assertNotNull(policygroup1);
            assertNotNull(policygroup2);
            assertNotSame(policygroup2, policygroup1);
            assertEquals(policygroup2, policygroup1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            PolicyGroup policygroup1 = new PolicyGroup("02c5996de8d57cd67670ecd25b819d1a", -68,
                                                       new Date(1566995746594L), "02c5996de8d57cd67670ecd25b819d1a",
                                                       "0e305291-d606-461b-9efd-f9ecbed9bb41", new Date(1566995746078L),
                                                       25);
            PolicyGroup policygroup2 = new PolicyGroup("02c5996de8d57cd67670ecd25b819d1a", -68,
                                                       new Date(1566995746594L), "02c5996de8d57cd67670ecd25b819d1a",
                                                       "0e305291-d606-461b-9efd-f9ecbed9bb41", new Date(1566995746078L),
                                                       25);
            assertNotNull(policygroup1);
            assertNotNull(policygroup2);
            assertNotSame(policygroup2, policygroup1);
            assertEquals(policygroup2, policygroup1);
            assertEquals(policygroup2.hashCode(), policygroup1.hashCode());
            int hashCode = policygroup1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, policygroup1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        PolicyGroup policygroup = new PolicyGroup("02c5996de8d57cd67670ecd25b819d1a", 3, new Date(1566995746011L),
                                                  "02c5996de8d57cd67670ecd25b819d1a",
                                                  "f90110d3-58b1-4e74-bec4-c78dffc48a78", new Date(1566995745883L),
                                                  -14);
        assertTrue(policygroup.isValid());
        PolicyGroup policygroupInvalid = new PolicyGroup("^>43Y<æ±“;Hé?‡443èž‹è¨Œ\b?4 .3á”œ4\u001434\u0015æ?‰.ïž¿ã±«3\u001d43\u001aWT4Zë¾•çš¦çŒ?E\u000444,îŒ–Aë™¾\u001f4î?€Wà¾¶\u0000]4`D3",
                                                         -92, new Date(1566995744160L),
                                                         "^>43Y<æ±“;Hé?‡443èž‹è¨Œ\b?4 .3á”œ4\u001434\u0015æ?‰.ïž¿ã±«3\u001d43\u001aWT4Zë¾•çš¦çŒ?E\u000444,îŒ–Aë™¾\u001f4î?€Wà¾¶\u0000]4`D3",
                                                         "4d73210b-4232-4b66-8b6f-004fb7de50ccf696a5b5-ea81-44db-a57a-ee1a2ddc3dc6cecfca2f-6dcf-411b-ba47-77622279b3de",
                                                         new Date(1566995741954L), 9);
        assertFalse(policygroupInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            PolicyGroup policygroup1 = new PolicyGroup("02c5996de8d57cd67670ecd25b819d1a", 104,
                                                       new Date(1566995740455L), "02c5996de8d57cd67670ecd25b819d1a",
                                                       "90fd0eb4-27f7-4d9b-8594-061b5a41e6a8", new Date(1566995741846L),
                                                       88);
            PolicyGroup policygroup2 = new PolicyGroup("02c5996de8d57cd67670ecd25b819d1a", 104,
                                                       new Date(1566995740455L), "02c5996de8d57cd67670ecd25b819d1a",
                                                       "90fd0eb4-27f7-4d9b-8594-061b5a41e6a8", new Date(1566995741846L),
                                                       88);
            PolicyGroup policygroup3 = new PolicyGroup("02c5996de8d57cd67670ecd25b819d1a", 58, new Date(1566995747174L),
                                                       "02c5996de8d57cd67670ecd25b819d1a",
                                                       "a2a84901-bb30-41fe-976a-e34be324836f", new Date(1566995747076L),
                                                       -21);
            assertNotNull(policygroup1);
            assertNotNull(policygroup2);
            assertNotNull(policygroup3);
            assertNotSame(policygroup2, policygroup1);
            assertNotSame(policygroup3, policygroup1);
            assertEquals(policygroup2, policygroup1);
            assertEquals(policygroup2, policygroup1);
            assertEquals(policygroup1, policygroup2);
            assertEquals(policygroup1, policygroup1);
            assertFalse(policygroup1.equals(null));
            assertNotEquals(policygroup3, policygroup1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
