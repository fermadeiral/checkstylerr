// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantPolicyGroup.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantPolicyGroup {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantPolicyGroup subtenantpolicygroup1 = new SubtenantPolicyGroup("02c5996de8d57cd67670ecd25b819d1a",
                                                                                  -11, new Date(1566995746912L),
                                                                                  "02c5996de8d57cd67670ecd25b819d1a",
                                                                                  "37ac44bd-394b-499f-ad81-cb4ba79324a3",
                                                                                  new Date(1566995742826L), -67);
            SubtenantPolicyGroup subtenantpolicygroup2 = subtenantpolicygroup1.clone();
            assertNotNull(subtenantpolicygroup1);
            assertNotNull(subtenantpolicygroup2);
            assertNotSame(subtenantpolicygroup2, subtenantpolicygroup1);
            assertEquals(subtenantpolicygroup2, subtenantpolicygroup1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantPolicyGroup subtenantpolicygroup1 = new SubtenantPolicyGroup("02c5996de8d57cd67670ecd25b819d1a",
                                                                                  31, new Date(1566995745009L),
                                                                                  "02c5996de8d57cd67670ecd25b819d1a",
                                                                                  "a3a1272a-c8a8-433f-8cfa-3cabd6ac8274",
                                                                                  new Date(1566995743198L), -73);
            SubtenantPolicyGroup subtenantpolicygroup2 = new SubtenantPolicyGroup("02c5996de8d57cd67670ecd25b819d1a",
                                                                                  31, new Date(1566995745009L),
                                                                                  "02c5996de8d57cd67670ecd25b819d1a",
                                                                                  "a3a1272a-c8a8-433f-8cfa-3cabd6ac8274",
                                                                                  new Date(1566995743198L), -73);
            assertNotNull(subtenantpolicygroup1);
            assertNotNull(subtenantpolicygroup2);
            assertNotSame(subtenantpolicygroup2, subtenantpolicygroup1);
            assertEquals(subtenantpolicygroup2, subtenantpolicygroup1);
            assertEquals(subtenantpolicygroup2.hashCode(), subtenantpolicygroup1.hashCode());
            int hashCode = subtenantpolicygroup1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantpolicygroup1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantPolicyGroup subtenantpolicygroup = new SubtenantPolicyGroup("02c5996de8d57cd67670ecd25b819d1a", 94,
                                                                             new Date(1566995740497L),
                                                                             "02c5996de8d57cd67670ecd25b819d1a",
                                                                             "4bc98720-b160-43cc-8460-5f8d6eaa3f90",
                                                                             new Date(1566995742956L), -21);
        assertTrue(subtenantpolicygroup.isValid());
        SubtenantPolicyGroup subtenantpolicygroupInvalid = new SubtenantPolicyGroup(null, 103, new Date(1566995748197L),
                                                                                    "^>43Y<æ±“;Hé?‡443èž‹è¨Œ\b?4 .3á”œ4\u001434\u0015æ?‰.ïž¿ã±«3\u001d43\u001aWT4Zë¾•çš¦çŒ?E\u000444,îŒ–Aë™¾\u001f4î?€Wà¾¶\u0000]4`D3",
                                                                                    "9ca25a26-10d7-4a45-87ec-b22b6123eeaa66d26929-b688-4e1a-b48f-3b6aa3345bdeff13abcc-0a08-4de7-b49e-8b1a02f0f268",
                                                                                    new Date(1566995747324L), 61);
        assertFalse(subtenantpolicygroupInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantPolicyGroup subtenantpolicygroup1 = new SubtenantPolicyGroup("02c5996de8d57cd67670ecd25b819d1a",
                                                                                  68, new Date(1566995743072L),
                                                                                  "02c5996de8d57cd67670ecd25b819d1a",
                                                                                  "1bfec035-c005-4aa9-a509-49ea71bf8bdc",
                                                                                  new Date(1566995745106L), 67);
            SubtenantPolicyGroup subtenantpolicygroup2 = new SubtenantPolicyGroup("02c5996de8d57cd67670ecd25b819d1a",
                                                                                  68, new Date(1566995743072L),
                                                                                  "02c5996de8d57cd67670ecd25b819d1a",
                                                                                  "1bfec035-c005-4aa9-a509-49ea71bf8bdc",
                                                                                  new Date(1566995745106L), 67);
            SubtenantPolicyGroup subtenantpolicygroup3 = new SubtenantPolicyGroup("02c5996de8d57cd67670ecd25b819d1a",
                                                                                  115, new Date(1566995746164L),
                                                                                  "02c5996de8d57cd67670ecd25b819d1a",
                                                                                  "510b9f79-50aa-4fe1-8988-9c0c6d2a4606",
                                                                                  new Date(1566995747912L), 1);
            assertNotNull(subtenantpolicygroup1);
            assertNotNull(subtenantpolicygroup2);
            assertNotNull(subtenantpolicygroup3);
            assertNotSame(subtenantpolicygroup2, subtenantpolicygroup1);
            assertNotSame(subtenantpolicygroup3, subtenantpolicygroup1);
            assertEquals(subtenantpolicygroup2, subtenantpolicygroup1);
            assertEquals(subtenantpolicygroup2, subtenantpolicygroup1);
            assertEquals(subtenantpolicygroup1, subtenantpolicygroup2);
            assertEquals(subtenantpolicygroup1, subtenantpolicygroup1);
            assertFalse(subtenantpolicygroup1.equals(null));
            assertNotEquals(subtenantpolicygroup3, subtenantpolicygroup1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
