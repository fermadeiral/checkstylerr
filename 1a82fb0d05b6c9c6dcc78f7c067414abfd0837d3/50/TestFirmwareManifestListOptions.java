// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.deviceupdate.model;

import static org.junit.Assert.*;

import com.arm.mbed.cloud.sdk.common.Order;
import com.arm.mbed.cloud.sdk.common.listing.ListOptionsEncoder;
import com.arm.mbed.cloud.sdk.common.listing.filtering.FilterOperator;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import org.junit.Test;

/**
 * Unit tests for Model FirmwareManifestListOptions.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestFirmwareManifestListOptions {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            FirmwareManifestListOptions firmwaremanifestlistoptions1 = new FirmwareManifestListOptions(Integer.valueOf(32),
                                                                                                       Long.valueOf(-2),
                                                                                                       Order.getDefault(),
                                                                                                       "ed4f7ff5-c9ce-4f30-a960-838bb151522e",
                                                                                                       null, null);
            FirmwareManifestListOptions firmwaremanifestlistoptions2 = firmwaremanifestlistoptions1.clone();
            assertNotNull(firmwaremanifestlistoptions1);
            assertNotNull(firmwaremanifestlistoptions2);
            assertNotSame(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the filters method.
     */
    @SuppressWarnings({ "boxing", "resource" })
    @Test
    public void testFilters() {
        try {
            FirmwareManifestListOptions option = new FirmwareManifestListOptions().inCreatedAts(Arrays.asList(new Date(1566995747988L),
                                                                                                              new Date(1566995746610L),
                                                                                                              new Date(1566995751178L)))
                                                                                  .notInCreatedAts(Arrays.asList(new Date(1566995747413L)))
                                                                                  .lessThanCreatedAt(new Date(1566995744364L))
                                                                                  .greaterThanCreatedAt(new Date(1566995746740L))
                                                                                  .equalToName("0a35d9ee-09b7-407c-876f-b8e6168db29f")
                                                                                  .notEqualToName("039cae07-481b-4a5f-8be8-c1020422b58d")
                                                                                  .inNames(Arrays.asList("258a5b9d-5a7f-4f44-a332-c6706d15c2ba",
                                                                                                         "468434cb-c852-4ff7-a46d-8fea49f32f6b",
                                                                                                         "daa15dda-456f-4477-b865-c596958b7c0a",
                                                                                                         "7a7ea33e-4a24-4513-8bdb-b1ae997e04b4"))
                                                                                  .notInNames(Arrays.asList("1a05ea8c-d065-44fb-bbbb-11b68023c4cc",
                                                                                                            "369c9a0b-b1df-42ec-b77a-d8d18ce5d52b",
                                                                                                            "84e13ab3-b1bb-47c6-b405-5dc0925bc1d1",
                                                                                                            "f4ff487d-2122-4430-8507-95b1deda2e48",
                                                                                                            "78cd41c8-f044-4cb8-98e0-5517d3da356b",
                                                                                                            "438c2455-180c-4671-9d18-23ebb1d195e2"))
                                                                                  .equalToId("76a7adea-b4b7-445f-97fb-09d24bd932d7")
                                                                                  .notEqualToId("b3c34898-d69b-4792-872b-5b6ac55b3fea")
                                                                                  .inIds(Arrays.asList("ebb84988-9ffe-4c6e-a24d-67c133ffe6f5",
                                                                                                       "ff8ad58b-d20c-4162-858b-b47fb18f692a",
                                                                                                       "1bc4e51c-1208-4aa1-af40-4ed53c057c6f"))
                                                                                  .notInIds(Arrays.asList("4b9016bf-9226-4f6d-8fd7-6395290dc1a3"))
                                                                                  .equalToDatafileUrl("9a960428-54e5-43e0-9d9e-a6b98c19864c")
                                                                                  .notEqualToDatafileUrl("23c413b7-8d0b-4ed2-84ad-cfc20f8f9530")
                                                                                  .inDatafileUrls(Arrays.asList("491bef6a-d6ca-49a3-8c40-7eb5fea5e041",
                                                                                                                "fc7664db-fc0d-46bc-986e-eb46f29ac711",
                                                                                                                "3a40195a-a6ad-49af-9ceb-6270dd16ddde",
                                                                                                                "76217621-f3d2-4093-a425-19457e2827d1",
                                                                                                                "62da900a-c3ce-475c-9350-ba454435ec92",
                                                                                                                "7a732564-4bd5-4ed1-9d4b-ba4f98682673"))
                                                                                  .notInDatafileUrls(Arrays.asList("6f5a2070-fa9e-4ae6-8d4a-e35fc69f9a2a",
                                                                                                                   "443d88c0-fdf4-41d6-a852-81ee26fd8aa8",
                                                                                                                   "ee44400f-4485-4778-a97d-5517751a89cf",
                                                                                                                   "d84f2c5d-e4af-401b-b0fa-c17270a7344a"))
                                                                                  .equalToDatafileSize(Long.valueOf(-108))
                                                                                  .notEqualToDatafileSize(Long.valueOf(-77))
                                                                                  .inDatafileSizes(Arrays.asList(Long.valueOf(-97),
                                                                                                                 Long.valueOf(-38)))
                                                                                  .notInDatafileSizes(Arrays.asList(Long.valueOf(11),
                                                                                                                    Long.valueOf(75),
                                                                                                                    Long.valueOf(87),
                                                                                                                    Long.valueOf(45),
                                                                                                                    Long.valueOf(102),
                                                                                                                    Long.valueOf(-59)))
                                                                                  .equalToDeviceClass("96ce570a-cd23-44f7-a53f-32fa9254f799")
                                                                                  .notEqualToDeviceClass("e3cde141-9add-45fd-93ee-93f2efd76853")
                                                                                  .inDeviceClass(Arrays.asList("79a834bb-b6c3-4bae-9fc9-700c36ee11e6"))
                                                                                  .notInDeviceClass(Arrays.asList("3fd3f1ab-c080-459a-ba26-b75c1ef588b5",
                                                                                                                  "c00692aa-9257-4378-a4b1-232f4d4b51a8"))
                                                                                  .inTimestamps(Arrays.asList(new Date(1566995745213L),
                                                                                                              new Date(1566995746901L)))
                                                                                  .notInTimestamps(Arrays.asList(new Date(1566995743397L),
                                                                                                                 new Date(1566995745420L),
                                                                                                                 new Date(1566995751604L),
                                                                                                                 new Date(1566995742066L),
                                                                                                                 new Date(1566995745602L),
                                                                                                                 new Date(1566995744581L),
                                                                                                                 new Date(1566995748305L),
                                                                                                                 new Date(1566995743813L),
                                                                                                                 new Date(1566995747938L)))
                                                                                  .lessThanTimestamp(new Date(1566995744838L))
                                                                                  .greaterThanTimestamp(new Date(1566995748900L))
                                                                                  .inUpdatedAts(Arrays.asList(new Date(1566995742978L),
                                                                                                              new Date(1566995747932L),
                                                                                                              new Date(1566995748642L),
                                                                                                              new Date(1566995748809L),
                                                                                                              new Date(1566995744760L),
                                                                                                              new Date(1566995748058L),
                                                                                                              new Date(1566995749609L)))
                                                                                  .notInUpdatedAts(Arrays.asList(new Date(1566995746886L)))
                                                                                  .lessThanUpdatedAt(new Date(1566995747574L))
                                                                                  .greaterThanUpdatedAt(new Date(1566995751848L))
                                                                                  .equalToDescription("813bdf54-1fa1-44ad-8cdc-7e4c7e58d0e6")
                                                                                  .notEqualToDescription("182e9cde-172b-4366-9f7b-9b8e6ee6eff1")
                                                                                  .inDescriptions(Arrays.asList("2a5fdaa5-f5a0-45af-b6f9-05fa2a8b8b3b",
                                                                                                                "9b2ce4f9-b43f-4728-ab94-af2d2bb6d6a9",
                                                                                                                "469d0977-1d80-4506-aab1-4e103e8d0fcb",
                                                                                                                "053c7db5-0a62-4416-9141-0e7076b96c8e",
                                                                                                                "ad7ce08f-f9fc-4195-8071-b1bd4d50e22b",
                                                                                                                "758ed63b-1b30-41fe-8ed3-9bba20485400",
                                                                                                                "05d117e2-38c3-4ce8-8b09-ba57408393da",
                                                                                                                "0e3ac1fa-1459-4f08-8e5f-9e14b42dbcf9"))
                                                                                  .notInDescriptions(Arrays.asList("0ea95832-eacf-46ad-84cd-ff07c8bbbcbc",
                                                                                                                   "a180e8c2-9bb2-4b73-ba84-64db06906e17"));
            assertTrue(option.hasFilters());
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1566995747988L), new Date(1566995746610L), new Date(1566995751178L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1566995747413L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                        FilterOperator.LESS_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1566995744364L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1566995746740L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME, FilterOperator.EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("0a35d9ee-09b7-407c-876f-b8e6168db29f",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("039cae07-481b-4a5f-8be8-c1020422b58d",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME, FilterOperator.IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("258a5b9d-5a7f-4f44-a332-c6706d15c2ba", "468434cb-c852-4ff7-a46d-8fea49f32f6b",
                                       "daa15dda-456f-4477-b865-c596958b7c0a", "7a7ea33e-4a24-4513-8bdb-b1ae997e04b4"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("1a05ea8c-d065-44fb-bbbb-11b68023c4cc", "369c9a0b-b1df-42ec-b77a-d8d18ce5d52b",
                                       "84e13ab3-b1bb-47c6-b405-5dc0925bc1d1", "f4ff487d-2122-4430-8507-95b1deda2e48",
                                       "78cd41c8-f044-4cb8-98e0-5517d3da356b", "438c2455-180c-4671-9d18-23ebb1d195e2"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID, FilterOperator.EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("76a7adea-b4b7-445f-97fb-09d24bd932d7",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("b3c34898-d69b-4792-872b-5b6ac55b3fea",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID, FilterOperator.IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("ebb84988-9ffe-4c6e-a24d-67c133ffe6f5", "ff8ad58b-d20c-4162-858b-b47fb18f692a",
                                       "1bc4e51c-1208-4aa1-af40-4ed53c057c6f"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("4b9016bf-9226-4f6d-8fd7-6395290dc1a3"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("9a960428-54e5-43e0-9d9e-a6b98c19864c",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("23c413b7-8d0b-4ed2-84ad-cfc20f8f9530",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("491bef6a-d6ca-49a3-8c40-7eb5fea5e041", "fc7664db-fc0d-46bc-986e-eb46f29ac711",
                                       "3a40195a-a6ad-49af-9ceb-6270dd16ddde", "76217621-f3d2-4093-a425-19457e2827d1",
                                       "62da900a-c3ce-475c-9350-ba454435ec92", "7a732564-4bd5-4ed1-9d4b-ba4f98682673"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("6f5a2070-fa9e-4ae6-8d4a-e35fc69f9a2a", "443d88c0-fdf4-41d6-a852-81ee26fd8aa8",
                                       "ee44400f-4485-4778-a97d-5517751a89cf", "d84f2c5d-e4af-401b-b0fa-c17270a7344a"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(-108),
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    Long.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(-77),
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                       Long.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(-97), Long.valueOf(-38)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                        FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(11), Long.valueOf(75), Long.valueOf(87), Long.valueOf(45),
                                       Long.valueOf(102), Long.valueOf(-59)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS, FilterOperator.EQUAL));
            assertNotNull(option.getDeviceClassFilters());
            assertEquals("96ce570a-cd23-44f7-a53f-32fa9254f799",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDeviceClassFilters());
            assertEquals("e3cde141-9add-45fd-93ee-93f2efd76853",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS, FilterOperator.IN));
            assertNotNull(option.getDeviceClassFilters());
            assertEquals(Arrays.asList("79a834bb-b6c3-4bae-9fc9-700c36ee11e6"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS, FilterOperator.NOT_IN));
            assertNotNull(option.getDeviceClassFilters());
            assertEquals(Arrays.asList("3fd3f1ab-c080-459a-ba26-b75c1ef588b5", "c00692aa-9257-4378-a4b1-232f4d4b51a8"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP, FilterOperator.IN));
            assertNotNull(option.getTimestampFilters());
            assertEquals(Arrays.asList(new Date(1566995745213L), new Date(1566995746901L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP, FilterOperator.NOT_IN));
            assertNotNull(option.getTimestampFilters());
            assertEquals(Arrays.asList(new Date(1566995743397L), new Date(1566995745420L), new Date(1566995751604L),
                                       new Date(1566995742066L), new Date(1566995745602L), new Date(1566995744581L),
                                       new Date(1566995748305L), new Date(1566995743813L), new Date(1566995747938L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP, FilterOperator.LESS_THAN));
            assertNotNull(option.getTimestampFilters());
            assertEquals(new Date(1566995744838L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getTimestampFilters());
            assertEquals(new Date(1566995748900L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1566995742978L), new Date(1566995747932L), new Date(1566995748642L),
                                       new Date(1566995748809L), new Date(1566995744760L), new Date(1566995748058L),
                                       new Date(1566995749609L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1566995746886L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                        FilterOperator.LESS_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1566995747574L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1566995751848L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("813bdf54-1fa1-44ad-8cdc-7e4c7e58d0e6",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("182e9cde-172b-4366-9f7b-9b8e6ee6eff1",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("2a5fdaa5-f5a0-45af-b6f9-05fa2a8b8b3b", "9b2ce4f9-b43f-4728-ab94-af2d2bb6d6a9",
                                       "469d0977-1d80-4506-aab1-4e103e8d0fcb", "053c7db5-0a62-4416-9141-0e7076b96c8e",
                                       "ad7ce08f-f9fc-4195-8071-b1bd4d50e22b", "758ed63b-1b30-41fe-8ed3-9bba20485400",
                                       "05d117e2-38c3-4ce8-8b09-ba57408393da", "0e3ac1fa-1459-4f08-8e5f-9e14b42dbcf9"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("0ea95832-eacf-46ad-84cd-ff07c8bbbcbc", "a180e8c2-9bb2-4b73-ba84-64db06906e17"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    List.class, option));
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            FirmwareManifestListOptions firmwaremanifestlistoptions1 = new FirmwareManifestListOptions(Integer.valueOf(-122),
                                                                                                       Long.valueOf(-64),
                                                                                                       Order.getDefault(),
                                                                                                       "c1646f10-c9b2-4543-b3cb-fbb658012961",
                                                                                                       null, null);
            FirmwareManifestListOptions firmwaremanifestlistoptions2 = new FirmwareManifestListOptions(Integer.valueOf(-122),
                                                                                                       Long.valueOf(-64),
                                                                                                       Order.getDefault(),
                                                                                                       "c1646f10-c9b2-4543-b3cb-fbb658012961",
                                                                                                       null, null);
            assertNotNull(firmwaremanifestlistoptions1);
            assertNotNull(firmwaremanifestlistoptions2);
            assertNotSame(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2.hashCode(), firmwaremanifestlistoptions1.hashCode());
            int hashCode = firmwaremanifestlistoptions1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, firmwaremanifestlistoptions1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            FirmwareManifestListOptions firmwaremanifestlistoptions1 = new FirmwareManifestListOptions(Integer.valueOf(-24),
                                                                                                       Long.valueOf(-23),
                                                                                                       Order.getDefault(),
                                                                                                       "bec0464c-064a-4437-93d0-26f650592dc8",
                                                                                                       null, null);
            FirmwareManifestListOptions firmwaremanifestlistoptions2 = new FirmwareManifestListOptions(Integer.valueOf(-24),
                                                                                                       Long.valueOf(-23),
                                                                                                       Order.getDefault(),
                                                                                                       "bec0464c-064a-4437-93d0-26f650592dc8",
                                                                                                       null, null);
            FirmwareManifestListOptions firmwaremanifestlistoptions3 = new FirmwareManifestListOptions(Integer.valueOf(57),
                                                                                                       Long.valueOf(-78),
                                                                                                       Order.getDefault(),
                                                                                                       "d69efae4-086b-4e64-9c2f-efbc89084af4",
                                                                                                       null, null);
            assertNotNull(firmwaremanifestlistoptions1);
            assertNotNull(firmwaremanifestlistoptions2);
            assertNotNull(firmwaremanifestlistoptions3);
            assertNotSame(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertNotSame(firmwaremanifestlistoptions3, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions1, firmwaremanifestlistoptions2);
            assertEquals(firmwaremanifestlistoptions1, firmwaremanifestlistoptions1);
            assertFalse(firmwaremanifestlistoptions1.equals(null));
            assertNotEquals(firmwaremanifestlistoptions3, firmwaremanifestlistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
