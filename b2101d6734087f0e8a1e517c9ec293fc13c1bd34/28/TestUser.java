// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model User.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestUser {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            User user1 = new User("18468865-6a74-49f1-a76b-13f6aa536455", null, "e7c8e1f0-bd61-4242-9029-9c06fce93dc9",
                                  new Date(1553200093140L), 111, null, "96a028bc-47f7-4a4f-9933-bea466b18124", true,
                                  "81bf9fbd-f62d-4559-8324-d869d92253ee", "2ca82eb8-00cf-496d-ab58-c3c346f50ff5", 33,
                                  null, null, true, "338e2bb5-51fb-457d-bf6e-a0e530d2cace", -49,
                                  "106bd51b-313d-49d1-9984-048a4d9c870b", UserStatus.getDefault(), true, null, false,
                                  new Date(1553200102890L), "4e6083d5-b2db-40fa-b3ac-b748eac71213");
            User user2 = user1.clone();
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotSame(user2, user1);
            assertEquals(user2, user1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            User user1 = new User("eed49df6-d52f-45c0-858b-17993798b579", null, "9939e99a-ff5b-42a0-af71-65ae93226713",
                                  new Date(1553200102778L), 52, null, "7a5c0343-0e96-4d31-8ee3-101dfbf6dafa", false,
                                  "988a5f4a-49b2-4ece-8a3b-983fc38debab", "07478456-feea-49f2-8d77-5358594d2d23", -124,
                                  null, null, true, "df6439d1-7379-489e-9d4e-c61ef0377f2e", -35,
                                  "68c5ae56-46d2-473e-ab01-e7dd341b9335", UserStatus.getDefault(), true, null, false,
                                  new Date(1553200093429L), "515c6aea-0b33-4ced-afd1-191b79f1c4ec");
            User user2 = new User("eed49df6-d52f-45c0-858b-17993798b579", null, "9939e99a-ff5b-42a0-af71-65ae93226713",
                                  new Date(1553200102778L), 52, null, "7a5c0343-0e96-4d31-8ee3-101dfbf6dafa", false,
                                  "988a5f4a-49b2-4ece-8a3b-983fc38debab", "07478456-feea-49f2-8d77-5358594d2d23", -124,
                                  null, null, true, "df6439d1-7379-489e-9d4e-c61ef0377f2e", -35,
                                  "68c5ae56-46d2-473e-ab01-e7dd341b9335", UserStatus.getDefault(), true, null, false,
                                  new Date(1553200093429L), "515c6aea-0b33-4ced-afd1-191b79f1c4ec");
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotSame(user2, user1);
            assertEquals(user2, user1);
            assertEquals(user2.hashCode(), user1.hashCode());
            int hashCode = user1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, user1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        User user = new User("58e3b970-eaa4-4af2-b4ba-4fdf0832f3c6", null, "442196d3-fb8c-48bd-bceb-7d0fc875984e",
                             new Date(1553200101545L), 105, null, "937f490f-832f-40c3-996d-dac00e7dd7ec", true,
                             "6e65932d-e09c-4014-8c59-eba94bf8eaa7", "75f6fa54-9bdd-4727-9c60-9ae5fffc5d64", 65, null,
                             null, true, "1a41deac-ac94-4c62-bd99-23dac3427719", -82,
                             "a635feb5-da11-4b1a-8ff7-fe48cea89b08", UserStatus.getDefault(), true, null, true,
                             new Date(1553200101229L), "642eb21d-9294-4b54-b346-64d2716b4bab");
        assertTrue(user.isValid());
        User userInvalid = new User("69d0e7bd-36e2-44d6-a3f3-a6f42d5c1e57", null,
                                    "e5ec704c-d7e6-4b4a-b762-cdaacd3bd17d", new Date(1553200102448L), -70, null, null,
                                    true, "0ab9012b-2572-4caf-9c9d-02e676306fe8",
                                    "ed039a6b-d955-42d9-a9ce-ae0b03333e39", 12, null, null, false,
                                    "2842ed77-ad2c-4ca9-8dff-f6d56f4afe7c", 102, "96efbade-58bb-4080-92d2-25475951ec64",
                                    UserStatus.getDefault(), false, null, true, new Date(1553200102297L),
                                    "9731a600-3025-42c9-9497-387e69fc249e");
        assertFalse(userInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            User user1 = new User("1fdca35f-2200-48a2-a7df-afc987e38577", null, "c383e49b-a5dc-4ca9-869e-8d11c05a7c50",
                                  new Date(1553200096586L), 86, null, "816e3c06-8e9e-4d34-b642-c993a1b83083", false,
                                  "ebc66404-f2d7-4674-b039-efc9b9b7780c", "b301f4e6-4b5b-420c-a463-0d530f8f3172", -1,
                                  null, null, false, "5946a9d0-dd7f-4e0b-892b-286f7ec9eb15", -5,
                                  "444d2f1f-db4b-4573-bfc7-0953dea0f596", UserStatus.getDefault(), false, null, false,
                                  new Date(1553200095274L), "c4b5fabc-f6eb-48da-bd6b-91654fd56c53");
            User user2 = new User("1fdca35f-2200-48a2-a7df-afc987e38577", null, "c383e49b-a5dc-4ca9-869e-8d11c05a7c50",
                                  new Date(1553200096586L), 86, null, "816e3c06-8e9e-4d34-b642-c993a1b83083", false,
                                  "ebc66404-f2d7-4674-b039-efc9b9b7780c", "b301f4e6-4b5b-420c-a463-0d530f8f3172", -1,
                                  null, null, false, "5946a9d0-dd7f-4e0b-892b-286f7ec9eb15", -5,
                                  "444d2f1f-db4b-4573-bfc7-0953dea0f596", UserStatus.getDefault(), false, null, false,
                                  new Date(1553200095274L), "c4b5fabc-f6eb-48da-bd6b-91654fd56c53");
            User user3 = new User("04a1da40-a8e1-48f6-98ae-17313e0e13ba", null, "34d7b7b9-c73d-4571-8bd2-e758acd05e39",
                                  new Date(1553200096441L), -113, null, "e39ec162-c18b-4b03-b5b2-2f31852d726f", false,
                                  "4b188b0b-6cbb-42ed-9cd4-9b74e98ffa31", "703037b8-db94-4416-a2fd-8aa69752a7bc", 102,
                                  null, null, false, "7bb6b5a5-25b5-4261-9d0c-d6fe8cf31458", -117,
                                  "436eacc6-e86b-4d34-9940-1211fd27a749", UserStatus.getDefault(), false, null, false,
                                  new Date(1553200102514L), "e8a2c6d4-f3a8-4361-b171-99344e104101");
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotNull(user3);
            assertNotSame(user2, user1);
            assertNotSame(user3, user1);
            assertEquals(user2, user1);
            assertEquals(user2, user1);
            assertEquals(user1, user2);
            assertEquals(user1, user1);
            assertFalse(user1.equals(null));
            assertNotEquals(user3, user1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
