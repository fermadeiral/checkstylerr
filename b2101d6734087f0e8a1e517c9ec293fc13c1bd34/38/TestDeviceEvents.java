// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEvents.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEvents {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1553200095685L), null,
                                                          new Date(1553200098084L),
                                                          "57be2f1c-184a-4636-a3ad-a6fcdf0abfac",
                                                          "4de3fb4d-be69-43b1-a212-43670232cec7",
                                                          "36776a7a-28c2-4349-9bfa-f16c80efcc19",
                                                          "e77fa04b-2ce8-4b8c-b930-2249c8ab20e1",
                                                          "12c75f4c-9043-437d-8bba-06f9e10194ee",
                                                          "8822a587-8032-4c21-a958-18304ea9e2e9", false);
            DeviceEvents deviceevents2 = deviceevents1.clone();
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1553200099111L), null,
                                                          new Date(1553200096374L),
                                                          "224a3cc7-c257-4714-8bc0-5a1fb915e768",
                                                          "090a22ff-959e-4e47-91ee-c3dab68898f5",
                                                          "a351b96e-9ce4-4b64-92f3-2b1dadc7a66d",
                                                          "3b3ea1a1-ef90-4f5e-96bd-8ee335ea104a",
                                                          "90646b82-d2b7-449d-8362-a06f393bd469",
                                                          "8d29f34f-3c36-486b-93d6-81c57e18cdea", false);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1553200099111L), null,
                                                          new Date(1553200096374L),
                                                          "224a3cc7-c257-4714-8bc0-5a1fb915e768",
                                                          "090a22ff-959e-4e47-91ee-c3dab68898f5",
                                                          "a351b96e-9ce4-4b64-92f3-2b1dadc7a66d",
                                                          "3b3ea1a1-ef90-4f5e-96bd-8ee335ea104a",
                                                          "90646b82-d2b7-449d-8362-a06f393bd469",
                                                          "8d29f34f-3c36-486b-93d6-81c57e18cdea", false);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2.hashCode(), deviceevents1.hashCode());
            int hashCode = deviceevents1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceevents1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEvents deviceevents = new DeviceEvents(null, new Date(1553200101135L), null, new Date(1553200096541L),
                                                     "2e7084df-a9a2-49ee-ba08-024545fd996d",
                                                     "08e1313a-8182-467a-8e97-557ee6dc25ec",
                                                     "368c9435-6401-40d4-8bf4-5650ead1a517",
                                                     "e061a447-8e00-4e32-b6b5-9bb2d09bde70",
                                                     "50a411a1-78fd-41b2-9269-b61f8dfc6e39",
                                                     "dbe68a29-ace8-4a42-b00f-f4392aaeba3d", true);
        assertTrue(deviceevents.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1553200098757L), null,
                                                          new Date(1553200097482L),
                                                          "928f4358-7b65-44cb-9e60-bfe40baf1e86",
                                                          "1fba0a84-b28b-46f2-8cbe-77e1f2fbf732",
                                                          "dbb5a4de-ddf4-4c75-83af-d7bb4d7c8876",
                                                          "d87bcc23-422a-40ff-9c65-4e8c99d67edb",
                                                          "02be2a16-67f7-4808-b235-4f40e8fd13e6",
                                                          "499de80b-02d0-44fe-b497-d22f8088f304", false);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1553200098757L), null,
                                                          new Date(1553200097482L),
                                                          "928f4358-7b65-44cb-9e60-bfe40baf1e86",
                                                          "1fba0a84-b28b-46f2-8cbe-77e1f2fbf732",
                                                          "dbb5a4de-ddf4-4c75-83af-d7bb4d7c8876",
                                                          "d87bcc23-422a-40ff-9c65-4e8c99d67edb",
                                                          "02be2a16-67f7-4808-b235-4f40e8fd13e6",
                                                          "499de80b-02d0-44fe-b497-d22f8088f304", false);
            DeviceEvents deviceevents3 = new DeviceEvents(null, new Date(1553200096999L), null,
                                                          new Date(1553200102902L),
                                                          "f85aa4cf-282e-4ebb-8122-68398303cd38",
                                                          "667d2a58-1de3-4591-8856-bdccc80f54d5",
                                                          "bcb21b62-5b30-41d0-8399-6f0c307d9400",
                                                          "ddc5db2b-c4de-4d4f-8d29-f4a2f9acca3b",
                                                          "f9157575-8cc0-456c-80b5-914ef3a3c63b",
                                                          "fc5dec99-fa2d-4d51-9777-2e2ff479c4e3", false);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotNull(deviceevents3);
            assertNotSame(deviceevents2, deviceevents1);
            assertNotSame(deviceevents3, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents1, deviceevents2);
            assertEquals(deviceevents1, deviceevents1);
            assertFalse(deviceevents1.equals(null));
            assertNotEquals(deviceevents3, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
