// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model Policy.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestPolicy {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            Policy policy1 = new Policy("21b8b608-dd2e-410e-af0f-945c9a90d03f", true,
                                        "8d58a213-a823-48c6-947e-57f066100bc5", false,
                                        "fd746ba4-8da2-43c1-bf7a-34468b6c856b");
            Policy policy2 = policy1.clone();
            assertNotNull(policy1);
            assertNotNull(policy2);
            assertNotSame(policy2, policy1);
            assertEquals(policy2, policy1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            Policy policy1 = new Policy("534dea9d-7418-4635-b2bc-d8b8b17912e9", false,
                                        "38a1c846-590f-4efa-9a35-2609255ee051", false,
                                        "ef96dd22-aad2-4fe3-a11f-34806591340b");
            Policy policy2 = new Policy("534dea9d-7418-4635-b2bc-d8b8b17912e9", false,
                                        "38a1c846-590f-4efa-9a35-2609255ee051", false,
                                        "ef96dd22-aad2-4fe3-a11f-34806591340b");
            assertNotNull(policy1);
            assertNotNull(policy2);
            assertNotSame(policy2, policy1);
            assertEquals(policy2, policy1);
            assertEquals(policy2.hashCode(), policy1.hashCode());
            int hashCode = policy1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, policy1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        Policy policy = new Policy("d2e76b30-e38f-4325-b33c-690853ac50be", false,
                                   "fae79854-faa1-4379-bb00-90078b9020ca", false,
                                   "484e0186-4b77-4788-98e5-cec7cb6b1c6d");
        assertTrue(policy.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            Policy policy1 = new Policy("c3a1db07-152f-46d1-b636-bf8d9495a7f4", false,
                                        "614f4a99-afb4-4e53-883a-3bd645182b4e", false,
                                        "920edd4d-b235-4b70-ae61-53e794cdec91");
            Policy policy2 = new Policy("c3a1db07-152f-46d1-b636-bf8d9495a7f4", false,
                                        "614f4a99-afb4-4e53-883a-3bd645182b4e", false,
                                        "920edd4d-b235-4b70-ae61-53e794cdec91");
            Policy policy3 = new Policy("f21f6e21-19d3-4726-95a8-e81b38fc514e", false,
                                        "8ca70567-d911-48a8-a7e5-64861c69381f", false,
                                        "2b4d2146-7de9-4fba-b575-83735a43e1f0");
            assertNotNull(policy1);
            assertNotNull(policy2);
            assertNotNull(policy3);
            assertNotSame(policy2, policy1);
            assertNotSame(policy3, policy1);
            assertEquals(policy2, policy1);
            assertEquals(policy2, policy1);
            assertEquals(policy1, policy2);
            assertEquals(policy1, policy1);
            assertFalse(policy1.equals(null));
            assertNotEquals(policy3, policy1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
