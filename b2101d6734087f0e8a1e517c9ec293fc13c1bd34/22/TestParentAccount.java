// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model ParentAccount.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestParentAccount {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("b7507908-3784-4683-9689-39bf694fd2c8",
                                                             "7f42c584-b975-4d12-86fa-89585c2dcd1f",
                                                             "cc2c61e4-3b91-48e8-be66-8d6467dae9c6");
            ParentAccount parentaccount2 = parentaccount1.clone();
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotSame(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("64ef3831-ed45-4874-a453-ccc81301b528",
                                                             "559b09d3-8522-4cce-8a27-76fe2835d5d1",
                                                             "da416f08-e43a-4318-b5d4-f35e9fb5417e");
            ParentAccount parentaccount2 = new ParentAccount("64ef3831-ed45-4874-a453-ccc81301b528",
                                                             "559b09d3-8522-4cce-8a27-76fe2835d5d1",
                                                             "da416f08-e43a-4318-b5d4-f35e9fb5417e");
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotSame(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount2.hashCode(), parentaccount1.hashCode());
            int hashCode = parentaccount1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, parentaccount1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ParentAccount parentaccount = new ParentAccount("bfbc3658-53a0-455b-988b-ea637732b135",
                                                        "0acb343a-73af-477f-865f-61de7bd77485",
                                                        "cee20662-802e-461f-af7d-2a5fa51d4349");
        assertTrue(parentaccount.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("92c359ce-fe7c-4935-b7ab-60d5a092c158",
                                                             "0ce800a3-3b34-4308-b2f9-9b43a09fb16e",
                                                             "f39d1e77-068a-48c4-9415-70ef77d19870");
            ParentAccount parentaccount2 = new ParentAccount("92c359ce-fe7c-4935-b7ab-60d5a092c158",
                                                             "0ce800a3-3b34-4308-b2f9-9b43a09fb16e",
                                                             "f39d1e77-068a-48c4-9415-70ef77d19870");
            ParentAccount parentaccount3 = new ParentAccount("b07c150d-e990-4100-9fee-a98a45161701",
                                                             "87a55dbe-a538-4637-8688-2eb0899147b9",
                                                             "6995ee02-4254-41d1-b259-2b2bcfb91bfc");
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotNull(parentaccount3);
            assertNotSame(parentaccount2, parentaccount1);
            assertNotSame(parentaccount3, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount1, parentaccount2);
            assertEquals(parentaccount1, parentaccount1);
            assertFalse(parentaccount1.equals(null));
            assertNotEquals(parentaccount3, parentaccount1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
