// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.security.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeveloperCertificate.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeveloperCertificate {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("3c99f088-e1f9-4067-8e53-8e8e448c9108",
                                                                                  "54d55e63-828f-4fd1-a31e-f5fb3558e537",
                                                                                  new Date(1558096102443L),
                                                                                  "4204c99a-be0a-4d4a-b6f6-87da4e300ed0",
                                                                                  "f9b3f605-5a1d-4785-9c0a-9ae1a78cbfbf",
                                                                                  "926ee741-cede-448e-9e9a-400bd4011215",
                                                                                  "03936b36-f1e8-4b2a-81da-f86e5f2e86da",
                                                                                  "eec098a4-a517-469e-a145-d09d1cbbd286");
            DeveloperCertificate developercertificate2 = developercertificate1.clone();
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("b5f1bfd0-7e8d-4d57-97b8-8d606850c671",
                                                                                  "0f05a590-4e99-495a-b155-602acae3b1d3",
                                                                                  new Date(1558096104130L),
                                                                                  "d44bfe3b-23bc-43f3-b0f4-78ede03f6e1d",
                                                                                  "e7bf81c5-248c-43a9-a356-f38deb0a604a",
                                                                                  "763b0b95-2aa3-4e9a-9c4a-442590fa5a44",
                                                                                  "6111e5b6-9643-4e48-ad83-ed47d0f8c9d2",
                                                                                  "6726d0cc-470f-40b4-b080-8245a50347c0");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("b5f1bfd0-7e8d-4d57-97b8-8d606850c671",
                                                                                  "0f05a590-4e99-495a-b155-602acae3b1d3",
                                                                                  new Date(1558096104130L),
                                                                                  "d44bfe3b-23bc-43f3-b0f4-78ede03f6e1d",
                                                                                  "e7bf81c5-248c-43a9-a356-f38deb0a604a",
                                                                                  "763b0b95-2aa3-4e9a-9c4a-442590fa5a44",
                                                                                  "6111e5b6-9643-4e48-ad83-ed47d0f8c9d2",
                                                                                  "6726d0cc-470f-40b4-b080-8245a50347c0");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2.hashCode(), developercertificate1.hashCode());
            int hashCode = developercertificate1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, developercertificate1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeveloperCertificate developercertificate = new DeveloperCertificate("208949ee-3d6f-4629-8fc5-09da50fb377b",
                                                                             "9cf17a5c-c948-4323-a9fa-2833f5723315",
                                                                             new Date(1558096101262L),
                                                                             "099331f0-0cbe-4a19-9f05-0be3f8b55dfa",
                                                                             "fbc493dc-6352-40f1-8a87-1672e9d77adb",
                                                                             "53eda146-9083-42ca-9521-28bfbb377cb6",
                                                                             "84945cae-256e-4330-a270-7f71e8ff1ce1",
                                                                             "139b9132-bbda-4b9a-b507-15174ea027d8");
        assertTrue(developercertificate.isValid());
        DeveloperCertificate developercertificateInvalid = new DeveloperCertificate("9618e00e-a945-4322-8e94-cb6928f924ef",
                                                                                    "b5760a18-c350-43b2-8396-cd9ca850f107",
                                                                                    new Date(1558096102942L),
                                                                                    "89230e77-e8ea-4386-9825-34a15a4471bf",
                                                                                    "eba460f8-2cff-437c-9dee-cf2a0febc233",
                                                                                    "4e12936f-843c-48c3-a8da-603f519d5b21",
                                                                                    null,
                                                                                    "2b827597-e68a-44ce-af52-633c8defd93d");
        assertFalse(developercertificateInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("7dba0a4e-915a-46da-bc34-01018c2b1330",
                                                                                  "3c4683c5-cb20-4534-84f3-494ab8bb9e38",
                                                                                  new Date(1558096107492L),
                                                                                  "1fac5290-6504-41ec-b94b-696ab0c91b78",
                                                                                  "53d1446a-3668-491e-a95e-35c88f7e3919",
                                                                                  "2d3fbd32-7bdb-463e-86ff-af18fbf4bfa3",
                                                                                  "3b9a73b6-7452-415d-8c4e-3ebfeb59a7aa",
                                                                                  "c6333b11-e87c-40cf-9fb2-a02b123ea275");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("7dba0a4e-915a-46da-bc34-01018c2b1330",
                                                                                  "3c4683c5-cb20-4534-84f3-494ab8bb9e38",
                                                                                  new Date(1558096107492L),
                                                                                  "1fac5290-6504-41ec-b94b-696ab0c91b78",
                                                                                  "53d1446a-3668-491e-a95e-35c88f7e3919",
                                                                                  "2d3fbd32-7bdb-463e-86ff-af18fbf4bfa3",
                                                                                  "3b9a73b6-7452-415d-8c4e-3ebfeb59a7aa",
                                                                                  "c6333b11-e87c-40cf-9fb2-a02b123ea275");
            DeveloperCertificate developercertificate3 = new DeveloperCertificate("464839d9-a748-48d9-9f3b-b4da10e50a12",
                                                                                  "ff9c6016-79db-42ef-b25e-2eb4b3ad9a01",
                                                                                  new Date(1558096103496L),
                                                                                  "ac30a67b-3ad7-452a-9760-e941f61802c3",
                                                                                  "a27d719b-c0f1-4e7c-a038-ede38461b104",
                                                                                  "e88463de-f673-42ae-b9bc-aae434428fd9",
                                                                                  "3c04b9be-49ff-4104-ac49-fa2e3e444ca7",
                                                                                  "5a1fffdd-e3f6-4bcc-972d-c405252477f7");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotNull(developercertificate3);
            assertNotSame(developercertificate2, developercertificate1);
            assertNotSame(developercertificate3, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate1, developercertificate2);
            assertEquals(developercertificate1, developercertificate1);
            assertFalse(developercertificate1.equals(null));
            assertNotEquals(developercertificate3, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
