// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantUserInvitation.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantUserInvitation {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantUserInvitation subtenantuserinvitation1 = new SubtenantUserInvitation("bf46f5afa631cc54fbbfd0f5b5ecdbe9",
                                                                                           new Date(1558096109952L),
                                                                                           "0b9f2.d1e96@25140.me",
                                                                                           new Date(1558096104507L),
                                                                                           "bf46f5afa631cc54fbbfd0f5b5ecdbe9",
                                                                                           null,
                                                                                           new Date(1558096109343L),
                                                                                           "bf46f5afa631cc54fbbfd0f5b5ecdbe9");
            SubtenantUserInvitation subtenantuserinvitation2 = subtenantuserinvitation1.clone();
            assertNotNull(subtenantuserinvitation1);
            assertNotNull(subtenantuserinvitation2);
            assertNotSame(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantUserInvitation subtenantuserinvitation1 = new SubtenantUserInvitation("bf46f5afa631cc54fbbfd0f5b5ecdbe9",
                                                                                           new Date(1558096104112L),
                                                                                           "0bee8.a6b1c@79a85.me",
                                                                                           new Date(1558096106994L),
                                                                                           "bf46f5afa631cc54fbbfd0f5b5ecdbe9",
                                                                                           null,
                                                                                           new Date(1558096108320L),
                                                                                           "bf46f5afa631cc54fbbfd0f5b5ecdbe9");
            SubtenantUserInvitation subtenantuserinvitation2 = new SubtenantUserInvitation("bf46f5afa631cc54fbbfd0f5b5ecdbe9",
                                                                                           new Date(1558096104112L),
                                                                                           "0bee8.a6b1c@79a85.me",
                                                                                           new Date(1558096106994L),
                                                                                           "bf46f5afa631cc54fbbfd0f5b5ecdbe9",
                                                                                           null,
                                                                                           new Date(1558096108320L),
                                                                                           "bf46f5afa631cc54fbbfd0f5b5ecdbe9");
            assertNotNull(subtenantuserinvitation1);
            assertNotNull(subtenantuserinvitation2);
            assertNotSame(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2.hashCode(), subtenantuserinvitation1.hashCode());
            int hashCode = subtenantuserinvitation1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantuserinvitation1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantUserInvitation subtenantuserinvitation = new SubtenantUserInvitation("bf46f5afa631cc54fbbfd0f5b5ecdbe9",
                                                                                      new Date(1558096108805L),
                                                                                      "dde19.e2925@1c2b4.fr",
                                                                                      new Date(1558096106722L),
                                                                                      "bf46f5afa631cc54fbbfd0f5b5ecdbe9",
                                                                                      null, new Date(1558096106471L),
                                                                                      "bf46f5afa631cc54fbbfd0f5b5ecdbe9");
        assertTrue(subtenantuserinvitation.isValid());
        SubtenantUserInvitation subtenantuserinvitationInvalid = new SubtenantUserInvitation(null,
                                                                                             new Date(1558096107720L),
                                                                                             null,
                                                                                             new Date(1558096107880L),
                                                                                             "2@T^&72V2î‘£\u00112_8ã™?@7Mí›†C7#\u000e728N822?288=7æ‘ž\u0000*E8\u0005\u0014î†‰ì½´TK22Vï’ˆÓŸT@\u0001$$Y+\f87é¾§7å·­",
                                                                                             null,
                                                                                             new Date(1558096104499L),
                                                                                             "2@T^&72V2î‘£\u00112_8ã™?@7Mí›†C7#\u000e728N822?288=7æ‘ž\u0000*E8\u0005\u0014î†‰ì½´TK22Vï’ˆÓŸT@\u0001$$Y+\f87é¾§7å·­");
        assertFalse(subtenantuserinvitationInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantUserInvitation subtenantuserinvitation1 = new SubtenantUserInvitation("bf46f5afa631cc54fbbfd0f5b5ecdbe9",
                                                                                           new Date(1558096100603L),
                                                                                           "0843c.8854d@4a6d1.fr",
                                                                                           new Date(1558096104859L),
                                                                                           "bf46f5afa631cc54fbbfd0f5b5ecdbe9",
                                                                                           null,
                                                                                           new Date(1558096106599L),
                                                                                           "bf46f5afa631cc54fbbfd0f5b5ecdbe9");
            SubtenantUserInvitation subtenantuserinvitation2 = new SubtenantUserInvitation("bf46f5afa631cc54fbbfd0f5b5ecdbe9",
                                                                                           new Date(1558096100603L),
                                                                                           "0843c.8854d@4a6d1.fr",
                                                                                           new Date(1558096104859L),
                                                                                           "bf46f5afa631cc54fbbfd0f5b5ecdbe9",
                                                                                           null,
                                                                                           new Date(1558096106599L),
                                                                                           "bf46f5afa631cc54fbbfd0f5b5ecdbe9");
            SubtenantUserInvitation subtenantuserinvitation3 = new SubtenantUserInvitation("bf46f5afa631cc54fbbfd0f5b5ecdbe9",
                                                                                           new Date(1558096102165L),
                                                                                           "fce5e.50cd7@ed84b.fr",
                                                                                           new Date(1558096108362L),
                                                                                           "bf46f5afa631cc54fbbfd0f5b5ecdbe9",
                                                                                           null,
                                                                                           new Date(1558096108703L),
                                                                                           "bf46f5afa631cc54fbbfd0f5b5ecdbe9");
            assertNotNull(subtenantuserinvitation1);
            assertNotNull(subtenantuserinvitation2);
            assertNotNull(subtenantuserinvitation3);
            assertNotSame(subtenantuserinvitation2, subtenantuserinvitation1);
            assertNotSame(subtenantuserinvitation3, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation1, subtenantuserinvitation2);
            assertEquals(subtenantuserinvitation1, subtenantuserinvitation1);
            assertFalse(subtenantuserinvitation1.equals(null));
            assertNotEquals(subtenantuserinvitation3, subtenantuserinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
