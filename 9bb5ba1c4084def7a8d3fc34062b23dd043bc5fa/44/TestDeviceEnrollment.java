// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEnrollment.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEnrollment {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEnrollment deviceenrollment1 = new DeviceEnrollment("f560c224-0e4b-4851-9a3f-be6d5fe748d9",
                                                                      new Date(1558096103117L),
                                                                      new Date(1558096109613L),
                                                                      "3I69cP65e4aMk06ihO8TvU1j4Mt1U5P6",
                                                                      "A-6d20RBLUOlP47ScFuu9v076rn3U9qv8op5iA8bdm7pSifoC1ABHyAmBLpqRCO4:PIr4zRRava2dW9AmW56O6H3335GrrsVQ",
                                                                      new Date(1558096106603L),
                                                                      "3I69cP65e4aMk06ihO8TvU1j4Mt1U5P6");
            DeviceEnrollment deviceenrollment2 = deviceenrollment1.clone();
            assertNotNull(deviceenrollment1);
            assertNotNull(deviceenrollment2);
            assertNotSame(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEnrollment deviceenrollment1 = new DeviceEnrollment("bd9553a9-20fc-48dd-bd68-e5509daa1bf3",
                                                                      new Date(1558096102514L),
                                                                      new Date(1558096109908L),
                                                                      "3I69cP65e4aMk06ihO8TvU1j4Mt1U5P6",
                                                                      "A-6d20RBLUOlP47ScFuu9v076rn3U9qv8op5iA8bdm7pSifoC1ABHyAmBLpqRCO4:PIr4zRRava2dW9AmW56O6H3335GrrsVQ",
                                                                      new Date(1558096107492L),
                                                                      "3I69cP65e4aMk06ihO8TvU1j4Mt1U5P6");
            DeviceEnrollment deviceenrollment2 = new DeviceEnrollment("bd9553a9-20fc-48dd-bd68-e5509daa1bf3",
                                                                      new Date(1558096102514L),
                                                                      new Date(1558096109908L),
                                                                      "3I69cP65e4aMk06ihO8TvU1j4Mt1U5P6",
                                                                      "A-6d20RBLUOlP47ScFuu9v076rn3U9qv8op5iA8bdm7pSifoC1ABHyAmBLpqRCO4:PIr4zRRava2dW9AmW56O6H3335GrrsVQ",
                                                                      new Date(1558096107492L),
                                                                      "3I69cP65e4aMk06ihO8TvU1j4Mt1U5P6");
            assertNotNull(deviceenrollment1);
            assertNotNull(deviceenrollment2);
            assertNotSame(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2.hashCode(), deviceenrollment1.hashCode());
            int hashCode = deviceenrollment1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceenrollment1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEnrollment deviceenrollment = new DeviceEnrollment("07bc317f-9a34-4ed3-8e50-3520ac28bc50",
                                                                 new Date(1558096109396L), new Date(1558096100268L),
                                                                 "3I69cP65e4aMk06ihO8TvU1j4Mt1U5P6",
                                                                 "A-6d20RBLUOlP47ScFuu9v076rn3U9qv8op5iA8bdm7pSifoC1ABHyAmBLpqRCO4:PIr4zRRava2dW9AmW56O6H3335GrrsVQ",
                                                                 new Date(1558096102182L),
                                                                 "3I69cP65e4aMk06ihO8TvU1j4Mt1U5P6");
        assertTrue(deviceenrollment.isValid());
        DeviceEnrollment deviceenrollmentInvalid = new DeviceEnrollment("41cff2d1-7de7-4631-9609-e5e02f32a788",
                                                                        new Date(1558096104017L),
                                                                        new Date(1558096108999L),
                                                                        "QJ\u0006u7C7\u00152bS2>\u00002Jf22ìš‹Du2?u7Fé?¼7QJJ>dVQg`7ä–ºW2dbäŒªSLb7JQJuuã”¸uuN\u00042Kì¾?[7",
                                                                        null, new Date(1558096100709L),
                                                                        "QJ\u0006u7C7\u00152bS2>\u00002Jf22ìš‹Du2?u7Fé?¼7QJJ>dVQg`7ä–ºW2dbäŒªSLb7JQJuuã”¸uuN\u00042Kì¾?[7");
        assertFalse(deviceenrollmentInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEnrollment deviceenrollment1 = new DeviceEnrollment("ee0c5e49-1576-48ae-a8d2-52a6ed3a32f8",
                                                                      new Date(1558096102622L),
                                                                      new Date(1558096102229L),
                                                                      "3I69cP65e4aMk06ihO8TvU1j4Mt1U5P6",
                                                                      "A-6d20RBLUOlP47ScFuu9v076rn3U9qv8op5iA8bdm7pSifoC1ABHyAmBLpqRCO4:PIr4zRRava2dW9AmW56O6H3335GrrsVQ",
                                                                      new Date(1558096102672L),
                                                                      "3I69cP65e4aMk06ihO8TvU1j4Mt1U5P6");
            DeviceEnrollment deviceenrollment2 = new DeviceEnrollment("ee0c5e49-1576-48ae-a8d2-52a6ed3a32f8",
                                                                      new Date(1558096102622L),
                                                                      new Date(1558096102229L),
                                                                      "3I69cP65e4aMk06ihO8TvU1j4Mt1U5P6",
                                                                      "A-6d20RBLUOlP47ScFuu9v076rn3U9qv8op5iA8bdm7pSifoC1ABHyAmBLpqRCO4:PIr4zRRava2dW9AmW56O6H3335GrrsVQ",
                                                                      new Date(1558096102672L),
                                                                      "3I69cP65e4aMk06ihO8TvU1j4Mt1U5P6");
            DeviceEnrollment deviceenrollment3 = new DeviceEnrollment("0340cf83-bc24-433f-bb94-966d806823fb",
                                                                      new Date(1558096107625L),
                                                                      new Date(1558096101934L),
                                                                      "3I69cP65e4aMk06ihO8TvU1j4Mt1U5P6",
                                                                      "A-6d20RBLUOlP47ScFuu9v076rn3U9qv8op5iA8bdm7pSifoC1ABHyAmBLpqRCO4:PIr4zRRava2dW9AmW56O6H3335GrrsVQ",
                                                                      new Date(1558096100108L),
                                                                      "3I69cP65e4aMk06ihO8TvU1j4Mt1U5P6");
            assertNotNull(deviceenrollment1);
            assertNotNull(deviceenrollment2);
            assertNotNull(deviceenrollment3);
            assertNotSame(deviceenrollment2, deviceenrollment1);
            assertNotSame(deviceenrollment3, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment1, deviceenrollment2);
            assertEquals(deviceenrollment1, deviceenrollment1);
            assertFalse(deviceenrollment1.equals(null));
            assertNotEquals(deviceenrollment3, deviceenrollment1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
