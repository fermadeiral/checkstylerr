// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model User.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestUser {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            User user1 = new User("bf46f5afa631cc54fbbfd0f5b5ecdbe9", null, "52cd96e9-3693-43b2-abfe-7a8ba7b89fab",
                                  new Date(1558096108581L), 117, null, "caffc.ab5a8@f11be.me", false,
                                  "b45a49ec-cb9d-4204-9ad2-c024c4ef47d9", "bf46f5afa631cc54fbbfd0f5b5ecdbe9", false,
                                  false, true, 68, null, null, "7a0130c5-e77d-43c9-b152-a6bb1f3b4719", 65,
                                  "59f9f462-5176-4998-aa19-c9eb2bea29ee", UserStatus.getDefault(), null,
                                  new Date(1558096108020L), "P-_=Q8_1_");
            User user2 = user1.clone();
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotSame(user2, user1);
            assertEquals(user2, user1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            User user1 = new User("bf46f5afa631cc54fbbfd0f5b5ecdbe9", null, "4a1ac32f-008c-44e6-9c57-d9b6533fb59c",
                                  new Date(1558096107031L), -117, null, "13c0b.04ef4@ccbe5.me", false,
                                  "4deeed0c-b9e6-4b69-adbc-a5a1cc4c698f", "bf46f5afa631cc54fbbfd0f5b5ecdbe9", false,
                                  true, true, 99, null, null, "3e57951b-dc7c-435b-864e-af825b2565a7", 5,
                                  "856aa504-3223-4952-a04c-ffa305abd5e5", UserStatus.getDefault(), null,
                                  new Date(1558096107952L), "P-_=Q8_1_");
            User user2 = new User("bf46f5afa631cc54fbbfd0f5b5ecdbe9", null, "4a1ac32f-008c-44e6-9c57-d9b6533fb59c",
                                  new Date(1558096107031L), -117, null, "13c0b.04ef4@ccbe5.me", false,
                                  "4deeed0c-b9e6-4b69-adbc-a5a1cc4c698f", "bf46f5afa631cc54fbbfd0f5b5ecdbe9", false,
                                  true, true, 99, null, null, "3e57951b-dc7c-435b-864e-af825b2565a7", 5,
                                  "856aa504-3223-4952-a04c-ffa305abd5e5", UserStatus.getDefault(), null,
                                  new Date(1558096107952L), "P-_=Q8_1_");
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotSame(user2, user1);
            assertEquals(user2, user1);
            assertEquals(user2.hashCode(), user1.hashCode());
            int hashCode = user1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, user1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        User user = new User("bf46f5afa631cc54fbbfd0f5b5ecdbe9", null, "66c68746-49d2-4bc0-b441-ed854f233a3e",
                             new Date(1558096101218L), 6, null, "a7f01.2f2ba@e88bc.fr", true,
                             "d916e899-057f-4e3f-997d-e470c6731a89", "bf46f5afa631cc54fbbfd0f5b5ecdbe9", false, false,
                             false, -28, null, null, "8ed04490-d202-4b3b-8a19-7ebfb12531cc", -98,
                             "0a757c1e-6722-45af-881e-db08c920b23e", UserStatus.getDefault(), null,
                             new Date(1558096103601L), "P-_=Q8_1_");
        assertTrue(user.isValid());
        User userInvalid = new User("2@T^&72V2î‘£\u00112_8ã™?@7Mí›†C7#\u000e728N822?288=7æ‘ž\u0000*E8\u0005\u0014î†‰ì½´TK22Vï’ˆÓŸT@\u0001$$Y+\f87é¾§7å·­",
                                    null, "fb5fb6d2-26b1-4875-b085-d5a238c54364", new Date(1558096101806L), 92, null,
                                    null, false,
                                    "64e037f7-8fe6-4f29-86c7-ded5cf3a29e63258b25d-1e59-47c2-88e5-dea66aaa40b84d07d8fd-487f-4454-b68e-6c731797fe5b",
                                    "2@T^&72V2î‘£\u00112_8ã™?@7Mí›†C7#\u000e728N822?288=7æ‘ž\u0000*E8\u0005\u0014î†‰ì½´TK22Vï’ˆÓŸT@\u0001$$Y+\f87é¾§7å·­",
                                    true, true, false, -76, null, null, "f561fc02-8fb3-46c9-8c3c-e1126a089ca5", 117,
                                    "89bb5318-4654-4184-839d-46376c4517620e7f5a9c-0bd2-415e-b110-a6b3db36c99afbc05d42-71fa-41bd-8ed9-e71590be21db",
                                    UserStatus.getDefault(), null, new Date(1558096105428L),
                                    "Uë––'å?‚@5ç…•EL74<\u001d\u0002ë½·:F2Z)ï»­å‰°BZ7\u0000#XES<65ä·?EÆ§\u0007>\u001c95Z;.\u0015Í„\u0016;DNï˜ƒ4755^2 :\b94;â?”");
        assertFalse(userInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            User user1 = new User("bf46f5afa631cc54fbbfd0f5b5ecdbe9", null, "00d71cdb-7424-423b-81b3-304fb145188f",
                                  new Date(1558096101475L), -14, null, "7863e.8f4b7@27b08.me", true,
                                  "9244bd47-7ffa-404d-863a-6603b2f1083d", "bf46f5afa631cc54fbbfd0f5b5ecdbe9", false,
                                  false, false, 3, null, null, "8525aba4-7ae2-43ef-bd79-e12dff5f0d85", -41,
                                  "281cf5a3-67b4-447c-ae18-283aed2e1a30", UserStatus.getDefault(), null,
                                  new Date(1558096102293L), "P-_=Q8_1_");
            User user2 = new User("bf46f5afa631cc54fbbfd0f5b5ecdbe9", null, "00d71cdb-7424-423b-81b3-304fb145188f",
                                  new Date(1558096101475L), -14, null, "7863e.8f4b7@27b08.me", true,
                                  "9244bd47-7ffa-404d-863a-6603b2f1083d", "bf46f5afa631cc54fbbfd0f5b5ecdbe9", false,
                                  false, false, 3, null, null, "8525aba4-7ae2-43ef-bd79-e12dff5f0d85", -41,
                                  "281cf5a3-67b4-447c-ae18-283aed2e1a30", UserStatus.getDefault(), null,
                                  new Date(1558096102293L), "P-_=Q8_1_");
            User user3 = new User("bf46f5afa631cc54fbbfd0f5b5ecdbe9", null, "26f31b1b-fbb9-4316-ace3-ef15795128c3",
                                  new Date(1558096102601L), 11, null, "dba29.a8a2f@3c4fa.fr", true,
                                  "3e6c5566-249f-44cb-a9a9-086c3aac60b2", "bf46f5afa631cc54fbbfd0f5b5ecdbe9", false,
                                  false, false, 56, null, null, "d3f85854-3262-4a97-872e-2a8e0129296c", 14,
                                  "81828a96-9b45-4fff-845f-bdaa57cda4ae", UserStatus.getDefault(), null,
                                  new Date(1558096101722L), "P-_=Q8_1_");
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotNull(user3);
            assertNotSame(user2, user1);
            assertNotSame(user3, user1);
            assertEquals(user2, user1);
            assertEquals(user2, user1);
            assertEquals(user1, user2);
            assertEquals(user1, user1);
            assertFalse(user1.equals(null));
            assertNotEquals(user3, user1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
