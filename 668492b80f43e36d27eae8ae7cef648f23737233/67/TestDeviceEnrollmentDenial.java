// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEnrollmentDenial.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEnrollmentDenial {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("5cc1ad15aa5e8e57d330ac5269a987d5",
                                                                                        new Date(1562657750185L),
                                                                                        "03eaba44-ae8b-4199-af24-746b4c24489b",
                                                                                        "5cc1ad15aa5e8e57d330ac5269a987d5",
                                                                                        "5cc1ad15aa5e8e57d330ac5269a987d5");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = deviceenrollmentdenial1.clone();
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("5cc1ad15aa5e8e57d330ac5269a987d5",
                                                                                        new Date(1562657747664L),
                                                                                        "309e730b-30b7-4ea6-989d-faefe0d873d5",
                                                                                        "5cc1ad15aa5e8e57d330ac5269a987d5",
                                                                                        "5cc1ad15aa5e8e57d330ac5269a987d5");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = new DeviceEnrollmentDenial("5cc1ad15aa5e8e57d330ac5269a987d5",
                                                                                        new Date(1562657747664L),
                                                                                        "309e730b-30b7-4ea6-989d-faefe0d873d5",
                                                                                        "5cc1ad15aa5e8e57d330ac5269a987d5",
                                                                                        "5cc1ad15aa5e8e57d330ac5269a987d5");
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2.hashCode(), deviceenrollmentdenial1.hashCode());
            int hashCode = deviceenrollmentdenial1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceenrollmentdenial1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEnrollmentDenial deviceenrollmentdenial = new DeviceEnrollmentDenial("5cc1ad15aa5e8e57d330ac5269a987d5",
                                                                                   new Date(1562657743312L),
                                                                                   "b3d15dce-2c93-43d0-9654-54a9d572b668",
                                                                                   "5cc1ad15aa5e8e57d330ac5269a987d5",
                                                                                   "5cc1ad15aa5e8e57d330ac5269a987d5");
        assertTrue(deviceenrollmentdenial.isValid());
        DeviceEnrollmentDenial deviceenrollmentdenialInvalid = new DeviceEnrollmentDenial("\fbDå˜¯4Dæ½°?ã¸€?[M4Tî¨?4\u00114á‘Ÿ\u001bbî¾›bb\u00154b(-44î´Ÿ\u0013[b\u001eîž¼ëš¤<bb4\u001bb:U\u000e44b/bNb4\u001dçˆ±î¬™,\u001aì—™å‡ ^@",
                                                                                          new Date(1562657744570L),
                                                                                          "459818d6-166a-4f6d-b97c-a47108c1d4b9",
                                                                                          "\fbDå˜¯4Dæ½°?ã¸€?[M4Tî¨?4\u00114á‘Ÿ\u001bbî¾›bb\u00154b(-44î´Ÿ\u0013[b\u001eîž¼ëš¤<bb4\u001bb:U\u000e44b/bNb4\u001dçˆ±î¬™,\u001aì—™å‡ ^@",
                                                                                          "\fbDå˜¯4Dæ½°?ã¸€?[M4Tî¨?4\u00114á‘Ÿ\u001bbî¾›bb\u00154b(-44î´Ÿ\u0013[b\u001eîž¼ëš¤<bb4\u001bb:U\u000e44b/bNb4\u001dçˆ±î¬™,\u001aì—™å‡ ^@");
        assertFalse(deviceenrollmentdenialInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("5cc1ad15aa5e8e57d330ac5269a987d5",
                                                                                        new Date(1562657749627L),
                                                                                        "a50c6e22-5aa1-41e6-8cda-1c342c063410",
                                                                                        "5cc1ad15aa5e8e57d330ac5269a987d5",
                                                                                        "5cc1ad15aa5e8e57d330ac5269a987d5");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = new DeviceEnrollmentDenial("5cc1ad15aa5e8e57d330ac5269a987d5",
                                                                                        new Date(1562657749627L),
                                                                                        "a50c6e22-5aa1-41e6-8cda-1c342c063410",
                                                                                        "5cc1ad15aa5e8e57d330ac5269a987d5",
                                                                                        "5cc1ad15aa5e8e57d330ac5269a987d5");
            DeviceEnrollmentDenial deviceenrollmentdenial3 = new DeviceEnrollmentDenial("5cc1ad15aa5e8e57d330ac5269a987d5",
                                                                                        new Date(1562657743915L),
                                                                                        "74f76f88-9dec-40de-b513-bf1a18e8e2aa",
                                                                                        "5cc1ad15aa5e8e57d330ac5269a987d5",
                                                                                        "5cc1ad15aa5e8e57d330ac5269a987d5");
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotNull(deviceenrollmentdenial3);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertNotSame(deviceenrollmentdenial3, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial1, deviceenrollmentdenial2);
            assertEquals(deviceenrollmentdenial1, deviceenrollmentdenial1);
            assertFalse(deviceenrollmentdenial1.equals(null));
            assertNotEquals(deviceenrollmentdenial3, deviceenrollmentdenial1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
