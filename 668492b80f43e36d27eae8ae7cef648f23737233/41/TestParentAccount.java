// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model ParentAccount.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestParentAccount {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("236a9.020ad@342d8.fr",
                                                             "9151a217-704b-47d5-a2dc-bc4a072149ad",
                                                             "5cc1ad15aa5e8e57d330ac5269a987d5");
            ParentAccount parentaccount2 = parentaccount1.clone();
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotSame(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("d38cb.064a2@2abd0.me",
                                                             "0bbb3e28-d173-4d69-b09a-efb82fa2302c",
                                                             "5cc1ad15aa5e8e57d330ac5269a987d5");
            ParentAccount parentaccount2 = new ParentAccount("d38cb.064a2@2abd0.me",
                                                             "0bbb3e28-d173-4d69-b09a-efb82fa2302c",
                                                             "5cc1ad15aa5e8e57d330ac5269a987d5");
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotSame(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount2.hashCode(), parentaccount1.hashCode());
            int hashCode = parentaccount1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, parentaccount1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ParentAccount parentaccount = new ParentAccount("df965.52268@63257.fr", "745945c2-a848-478e-80dc-7d5bfb655ec7",
                                                        "5cc1ad15aa5e8e57d330ac5269a987d5");
        assertTrue(parentaccount.isValid());
        ParentAccount parentaccountInvalid = new ParentAccount("î˜«è¢¢ä—–>æœ—éŽ”é??5é”?å?•é“¹éŒ¶â?œé”¢?á›¡à®™âŠˆéƒ›\u0010>è«´ä‰·2è¶£à œ4ä›”é„ŽäŽ >é‘®é…£éŽ‚é‰·åŒ´\u001d3å­•ë€£é¨…â°…å¤“äž·éº?\fä§?è­ŠéŒ ;èµšéƒ¹%\u000fè´‘î½´å½¨5â‰Ÿ8è£º\u0013\u0015",
                                                               "34f45408-bd68-4426-89e4-fb5031a8e001fad982db-44e8-455b-91de-7f7a4e28fdab5dd16ed3-3c2a-44ff-8c4d-8538f0ce1015",
                                                               "\fbDå˜¯4Dæ½°?ã¸€?[M4Tî¨?4\u00114á‘Ÿ\u001bbî¾›bb\u00154b(-44î´Ÿ\u0013[b\u001eîž¼ëš¤<bb4\u001bb:U\u000e44b/bNb4\u001dçˆ±î¬™,\u001aì—™å‡ ^@");
        assertFalse(parentaccountInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("32c06.68cf3@a3823.fr",
                                                             "84277fca-5d37-4a7e-ac6c-2d24da7e8af5",
                                                             "5cc1ad15aa5e8e57d330ac5269a987d5");
            ParentAccount parentaccount2 = new ParentAccount("32c06.68cf3@a3823.fr",
                                                             "84277fca-5d37-4a7e-ac6c-2d24da7e8af5",
                                                             "5cc1ad15aa5e8e57d330ac5269a987d5");
            ParentAccount parentaccount3 = new ParentAccount("380d0.86d17@bfc58.fr",
                                                             "07f2a77a-ee7a-418f-a140-64d4897f5c62",
                                                             "5cc1ad15aa5e8e57d330ac5269a987d5");
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotNull(parentaccount3);
            assertNotSame(parentaccount2, parentaccount1);
            assertNotSame(parentaccount3, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount1, parentaccount2);
            assertEquals(parentaccount1, parentaccount1);
            assertFalse(parentaccount1.equals(null));
            assertNotEquals(parentaccount3, parentaccount1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
