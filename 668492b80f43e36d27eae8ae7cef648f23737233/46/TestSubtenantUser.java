// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantUser.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantUser {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("5cc1ad15aa5e8e57d330ac5269a987d5", null,
                                                             "2d68ab67-cc69-4546-9c15-e35910d269d9",
                                                             new Date(1562657749915L), -1, null, "f115f.6d7fc@29f42.fr",
                                                             false, "a40b3598-9582-48f4-9a08-49d12258355e",
                                                             "5cc1ad15aa5e8e57d330ac5269a987d5", false, false, true, 14,
                                                             null, null, "8d613ed0-a1bf-4921-8731-803f15e6b4e2", 114,
                                                             "e5504637-ca30-4699-8e64-5ae38e416d66",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1562657747722L), "._5._K");
            SubtenantUser subtenantuser2 = subtenantuser1.clone();
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("5cc1ad15aa5e8e57d330ac5269a987d5", null,
                                                             "f7b4fec9-238d-4e87-bcc6-3f10055d5c04",
                                                             new Date(1562657745989L), -128, null,
                                                             "18880.b7ee9@e9047.fr", false,
                                                             "98aa74c1-51c6-42f5-945b-c722a43bae57",
                                                             "5cc1ad15aa5e8e57d330ac5269a987d5", true, true, false, -3,
                                                             null, null, "46bc11e1-f94b-4544-a208-aeab29991adb", 15,
                                                             "510af7d7-1f0b-471a-8e7e-a0515bc67555",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1562657743633L), "._5._K");
            SubtenantUser subtenantuser2 = new SubtenantUser("5cc1ad15aa5e8e57d330ac5269a987d5", null,
                                                             "f7b4fec9-238d-4e87-bcc6-3f10055d5c04",
                                                             new Date(1562657745989L), -128, null,
                                                             "18880.b7ee9@e9047.fr", false,
                                                             "98aa74c1-51c6-42f5-945b-c722a43bae57",
                                                             "5cc1ad15aa5e8e57d330ac5269a987d5", true, true, false, -3,
                                                             null, null, "46bc11e1-f94b-4544-a208-aeab29991adb", 15,
                                                             "510af7d7-1f0b-471a-8e7e-a0515bc67555",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1562657743633L), "._5._K");
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2.hashCode(), subtenantuser1.hashCode());
            int hashCode = subtenantuser1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantuser1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantUser subtenantuser = new SubtenantUser("5cc1ad15aa5e8e57d330ac5269a987d5", null,
                                                        "c8bd1f0e-7c90-43e7-9285-911477c9300d",
                                                        new Date(1562657747259L), -114, null, "de9d2.1da58@0042a.me",
                                                        true, "2abca64c-49e8-48e1-b779-8c245dbe6636",
                                                        "5cc1ad15aa5e8e57d330ac5269a987d5", false, true, true, 118,
                                                        null, null, "a291eca7-a211-41f7-991b-2d16ef7d5b0c", -29,
                                                        "8ead0e7e-9ca0-470c-9b0c-fa0624a32487",
                                                        SubtenantUserStatus.getDefault(), null,
                                                        new Date(1562657749355L), "._5._K");
        assertTrue(subtenantuser.isValid());
        SubtenantUser subtenantuserInvalid = new SubtenantUser(null, null, "e1224d48-76e7-40b6-becc-94d92b4e2790",
                                                               new Date(1562657747023L), -47, null, null, false,
                                                               "891cc2f6-f08d-494e-bbc9-60f49c4c836c85056f47-a6a0-4524-bf5f-bf66217600b8896dd7e7-41a1-4b46-8163-85e401da9e8b",
                                                               "\fbDå˜¯4Dæ½°?ã¸€?[M4Tî¨?4\u00114á‘Ÿ\u001bbî¾›bb\u00154b(-44î´Ÿ\u0013[b\u001eîž¼ëš¤<bb4\u001bb:U\u000e44b/bNb4\u001dçˆ±î¬™,\u001aì—™å‡ ^@",
                                                               false, false, false, -12, null, null,
                                                               "8758318d-3a10-4b56-9d26-58380bf0ecbe", -106,
                                                               "b51bb07a-3e44-4a7b-9aa8-5162395b270f17b98fbf-7733-4524-b19a-05ce56fc272aa2d801db-e66a-44b7-8e5e-d2bc47a641a0",
                                                               SubtenantUserStatus.getDefault(), null,
                                                               new Date(1562657751048L),
                                                               "1ï—¾IE\u0000BâŽ‚0F9á°¥1ì„¯Vì¹”3:0äž°O1\u0000[:9/\u0013[D2T3,/F7Tâ„¹DT3G\f\u0017^\u0004\u001d:7D]2è³—J\u0002:ìœµAUQ\u001c\u001b9>");
        assertFalse(subtenantuserInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("5cc1ad15aa5e8e57d330ac5269a987d5", null,
                                                             "b95395b7-0155-4a79-8b86-7fe689a8ae08",
                                                             new Date(1562657750980L), 99, null, "8855a.079a5@0d300.me",
                                                             false, "3539c247-3e04-40ee-b104-0d836544c599",
                                                             "5cc1ad15aa5e8e57d330ac5269a987d5", false, true, true, 40,
                                                             null, null, "31776f44-bb34-4b1d-9679-fbbd80678649", -9,
                                                             "65d65013-b707-4f41-8ae4-891e8224848d",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1562657751657L), "._5._K");
            SubtenantUser subtenantuser2 = new SubtenantUser("5cc1ad15aa5e8e57d330ac5269a987d5", null,
                                                             "b95395b7-0155-4a79-8b86-7fe689a8ae08",
                                                             new Date(1562657750980L), 99, null, "8855a.079a5@0d300.me",
                                                             false, "3539c247-3e04-40ee-b104-0d836544c599",
                                                             "5cc1ad15aa5e8e57d330ac5269a987d5", false, true, true, 40,
                                                             null, null, "31776f44-bb34-4b1d-9679-fbbd80678649", -9,
                                                             "65d65013-b707-4f41-8ae4-891e8224848d",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1562657751657L), "._5._K");
            SubtenantUser subtenantuser3 = new SubtenantUser("5cc1ad15aa5e8e57d330ac5269a987d5", null,
                                                             "72ac376a-cd59-4990-91b6-7c9d27594b05",
                                                             new Date(1562657748976L), -47, null,
                                                             "86e6c.7e32e@df7c1.me", false,
                                                             "59ca710b-66be-4f42-8f4f-d30ed52a79d4",
                                                             "5cc1ad15aa5e8e57d330ac5269a987d5", false, true, true, 59,
                                                             null, null, "9b0829c5-89c2-4f86-8953-d282bcb731a6", 43,
                                                             "ff8bf947-898b-4b4b-9ae3-cc9efbb5e881",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1562657748805L), "._5._K");
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotNull(subtenantuser3);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertNotSame(subtenantuser3, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser1, subtenantuser2);
            assertEquals(subtenantuser1, subtenantuser1);
            assertFalse(subtenantuser1.equals(null));
            assertNotEquals(subtenantuser3, subtenantuser1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
