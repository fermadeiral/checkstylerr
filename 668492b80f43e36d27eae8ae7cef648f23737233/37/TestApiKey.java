// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model ApiKey.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestApiKey {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ApiKey apikey1 = new ApiKey("5cc1ad15aa5e8e57d330ac5269a987d5", new Date(1562657742769L), -39,
                                        "5cc1ad15aa5e8e57d330ac5269a987d5", "25780db3-134f-4963-9fe4-1477436d51a5", -3,
                                        "dbeee0a9-39be-45b3-a0e5-2c92dee9bad7", "5cc1ad15aa5e8e57d330ac5269a987d5",
                                        ApiKeyStatus.getDefault(), new Date(1562657745535L));
            ApiKey apikey2 = apikey1.clone();
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotSame(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ApiKey apikey1 = new ApiKey("5cc1ad15aa5e8e57d330ac5269a987d5", new Date(1562657743160L), 22,
                                        "5cc1ad15aa5e8e57d330ac5269a987d5", "2bf6e568-2d26-433f-8fbb-99172b10e142", -26,
                                        "e3f23d22-73f3-420f-99cd-4cf182f007b2", "5cc1ad15aa5e8e57d330ac5269a987d5",
                                        ApiKeyStatus.getDefault(), new Date(1562657748813L));
            ApiKey apikey2 = new ApiKey("5cc1ad15aa5e8e57d330ac5269a987d5", new Date(1562657743160L), 22,
                                        "5cc1ad15aa5e8e57d330ac5269a987d5", "2bf6e568-2d26-433f-8fbb-99172b10e142", -26,
                                        "e3f23d22-73f3-420f-99cd-4cf182f007b2", "5cc1ad15aa5e8e57d330ac5269a987d5",
                                        ApiKeyStatus.getDefault(), new Date(1562657748813L));
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotSame(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey2.hashCode(), apikey1.hashCode());
            int hashCode = apikey1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, apikey1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ApiKey apikey = new ApiKey("5cc1ad15aa5e8e57d330ac5269a987d5", new Date(1562657747884L), -42,
                                   "5cc1ad15aa5e8e57d330ac5269a987d5", "86df1871-c6b7-4cde-b343-4489d7613aac", -69,
                                   "203c1921-e3a2-4a1a-babd-83dff60ed4ae", "5cc1ad15aa5e8e57d330ac5269a987d5",
                                   ApiKeyStatus.getDefault(), new Date(1562657743698L));
        assertTrue(apikey.isValid());
        ApiKey apikeyInvalid = new ApiKey("\fbDå˜¯4Dæ½°?ã¸€?[M4Tî¨?4\u00114á‘Ÿ\u001bbî¾›bb\u00154b(-44î´Ÿ\u0013[b\u001eîž¼ëš¤<bb4\u001bb:U\u000e44b/bNb4\u001dçˆ±î¬™,\u001aì—™å‡ ^@",
                                          new Date(1562657750657L), -86,
                                          "\fbDå˜¯4Dæ½°?ã¸€?[M4Tî¨?4\u00114á‘Ÿ\u001bbî¾›bb\u00154b(-44î´Ÿ\u0013[b\u001eîž¼ëš¤<bb4\u001bb:U\u000e44b/bNb4\u001dçˆ±î¬™,\u001aì—™å‡ ^@",
                                          "b09bbab6-2dcb-42a5-812d-860001a4f37e", 55, null,
                                          "\fbDå˜¯4Dæ½°?ã¸€?[M4Tî¨?4\u00114á‘Ÿ\u001bbî¾›bb\u00154b(-44î´Ÿ\u0013[b\u001eîž¼ëš¤<bb4\u001bb:U\u000e44b/bNb4\u001dçˆ±î¬™,\u001aì—™å‡ ^@",
                                          ApiKeyStatus.getDefault(), new Date(1562657748081L));
        assertFalse(apikeyInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ApiKey apikey1 = new ApiKey("5cc1ad15aa5e8e57d330ac5269a987d5", new Date(1562657750194L), 20,
                                        "5cc1ad15aa5e8e57d330ac5269a987d5", "cfe1a721-e295-4331-a8dc-cd816a7d0bca", 54,
                                        "98923c8d-c0ee-49d7-af44-2129a27379c1", "5cc1ad15aa5e8e57d330ac5269a987d5",
                                        ApiKeyStatus.getDefault(), new Date(1562657744727L));
            ApiKey apikey2 = new ApiKey("5cc1ad15aa5e8e57d330ac5269a987d5", new Date(1562657750194L), 20,
                                        "5cc1ad15aa5e8e57d330ac5269a987d5", "cfe1a721-e295-4331-a8dc-cd816a7d0bca", 54,
                                        "98923c8d-c0ee-49d7-af44-2129a27379c1", "5cc1ad15aa5e8e57d330ac5269a987d5",
                                        ApiKeyStatus.getDefault(), new Date(1562657744727L));
            ApiKey apikey3 = new ApiKey("5cc1ad15aa5e8e57d330ac5269a987d5", new Date(1562657749864L), -60,
                                        "5cc1ad15aa5e8e57d330ac5269a987d5", "c758000c-ca0d-47cb-bdd5-2e2796c92385",
                                        -120, "dc6fb0ef-07d8-47fb-bd0a-16c50a40324f",
                                        "5cc1ad15aa5e8e57d330ac5269a987d5", ApiKeyStatus.getDefault(),
                                        new Date(1562657747097L));
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotNull(apikey3);
            assertNotSame(apikey2, apikey1);
            assertNotSame(apikey3, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey1, apikey2);
            assertEquals(apikey1, apikey1);
            assertFalse(apikey1.equals(null));
            assertNotEquals(apikey3, apikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
