// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEvents.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEvents {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1562657751793L), null,
                                                          new Date(1562657746917L),
                                                          "8993f264-baf2-4098-9aa2-247f2edf80ec",
                                                          "aa063f88-b1be-443f-a7df-ec81e8c446e6",
                                                          "45691584-d00c-4553-a623-34ea9307368c",
                                                          "dd3b4289-9045-409d-8344-06d13b36737a",
                                                          "9ba09e24-17cf-45db-bfb9-95b87a2741a1",
                                                          "78d0a152-f744-412f-a299-e0063105cf4a", false);
            DeviceEvents deviceevents2 = deviceevents1.clone();
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1562657742804L), null,
                                                          new Date(1562657751557L),
                                                          "fe55abd0-4de4-423f-b800-cd844e566d0a",
                                                          "cd9a7eec-c13f-41c1-b25a-d5c393fc487e",
                                                          "47e2e355-ec1e-498f-b79a-080a5f83161c",
                                                          "a658278e-f41a-4e0c-91ab-41df5fd43fd3",
                                                          "67605821-a40a-45a3-9752-49f60b8de977",
                                                          "d747a232-e4a2-4f65-b5f6-5d28fff7537f", false);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1562657742804L), null,
                                                          new Date(1562657751557L),
                                                          "fe55abd0-4de4-423f-b800-cd844e566d0a",
                                                          "cd9a7eec-c13f-41c1-b25a-d5c393fc487e",
                                                          "47e2e355-ec1e-498f-b79a-080a5f83161c",
                                                          "a658278e-f41a-4e0c-91ab-41df5fd43fd3",
                                                          "67605821-a40a-45a3-9752-49f60b8de977",
                                                          "d747a232-e4a2-4f65-b5f6-5d28fff7537f", false);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2.hashCode(), deviceevents1.hashCode());
            int hashCode = deviceevents1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceevents1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEvents deviceevents = new DeviceEvents(null, new Date(1562657746544L), null, new Date(1562657746868L),
                                                     "ec5b0a4c-1057-4f16-b036-35e700db63e1",
                                                     "593a167c-5338-487e-878d-9108827116d7",
                                                     "50a04a35-519b-4065-bf61-27f6b0682314",
                                                     "f4d69ab9-a278-4929-9736-cdb2f153a2ef",
                                                     "baef5a16-daea-466f-915b-5769c4773a12",
                                                     "3ade3ba2-3ac9-4bd1-99a5-631589285ca8", false);
        assertTrue(deviceevents.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1562657748001L), null,
                                                          new Date(1562657749092L),
                                                          "581c2559-b9f0-419b-9840-7f1d257e7d59",
                                                          "9b95854c-1252-48e2-8a8e-5958b5d16654",
                                                          "4db2a6db-8a1b-4251-927b-328a1acb119a",
                                                          "f2ff9ba6-036d-4cec-98f0-0b8fc2f1830e",
                                                          "f6c2c83d-ec4b-45af-a391-d5d7e539604c",
                                                          "6b77f8f4-f6d8-47dd-9305-8a39a48b2015", true);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1562657748001L), null,
                                                          new Date(1562657749092L),
                                                          "581c2559-b9f0-419b-9840-7f1d257e7d59",
                                                          "9b95854c-1252-48e2-8a8e-5958b5d16654",
                                                          "4db2a6db-8a1b-4251-927b-328a1acb119a",
                                                          "f2ff9ba6-036d-4cec-98f0-0b8fc2f1830e",
                                                          "f6c2c83d-ec4b-45af-a391-d5d7e539604c",
                                                          "6b77f8f4-f6d8-47dd-9305-8a39a48b2015", true);
            DeviceEvents deviceevents3 = new DeviceEvents(null, new Date(1562657745383L), null,
                                                          new Date(1562657745970L),
                                                          "f1f4b11c-4c32-4b8f-a6c8-ec1cb7484398",
                                                          "af887bc1-bee9-4436-a457-de27213934d4",
                                                          "4ed3d9d1-a583-4397-8bfa-2910a88fabc8",
                                                          "dee1ebf6-d510-4ca7-8780-fb72c01f54f3",
                                                          "008ff9a7-23ef-4a68-87fb-eec0a88a3d0c",
                                                          "306cc190-3c2a-42d9-a2f4-07b2cd2fd1b5", true);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotNull(deviceevents3);
            assertNotSame(deviceevents2, deviceevents1);
            assertNotSame(deviceevents3, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents1, deviceevents2);
            assertEquals(deviceevents1, deviceevents1);
            assertFalse(deviceevents1.equals(null));
            assertNotEquals(deviceevents3, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
