// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model ActiveSession.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestActiveSession {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ActiveSession activesession1 = new ActiveSession("5cc1ad15aa5e8e57d330ac5269a987d5",
                                                             "2f2de157-6799-4ba4-b9e9-129d4311dcee",
                                                             new Date(1562657750135L),
                                                             "e265697e-3b1e-4b7f-a9f0-370f37469fd1",
                                                             "ff77e7f4-6961-402b-bb88-95db9305340e");
            ActiveSession activesession2 = activesession1.clone();
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotSame(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ActiveSession activesession1 = new ActiveSession("5cc1ad15aa5e8e57d330ac5269a987d5",
                                                             "75c16d07-25e7-4da4-adf0-c97decad2161",
                                                             new Date(1562657746014L),
                                                             "2e87fd75-2a33-47ea-bf24-ee8a4483eaef",
                                                             "16fd003c-10d5-4a9c-ab1b-c89d045aeda7");
            ActiveSession activesession2 = new ActiveSession("5cc1ad15aa5e8e57d330ac5269a987d5",
                                                             "75c16d07-25e7-4da4-adf0-c97decad2161",
                                                             new Date(1562657746014L),
                                                             "2e87fd75-2a33-47ea-bf24-ee8a4483eaef",
                                                             "16fd003c-10d5-4a9c-ab1b-c89d045aeda7");
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotSame(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession2.hashCode(), activesession1.hashCode());
            int hashCode = activesession1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, activesession1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ActiveSession activesession = new ActiveSession("5cc1ad15aa5e8e57d330ac5269a987d5",
                                                        "5f08e683-b7fd-46e0-be67-98f73dcb2c5e",
                                                        new Date(1562657746815L),
                                                        "fe7f4659-faa6-4646-9f77-6a8b70da1e08",
                                                        "8a84e232-3749-4315-9f8f-d6e7f9e28098");
        assertTrue(activesession.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ActiveSession activesession1 = new ActiveSession("5cc1ad15aa5e8e57d330ac5269a987d5",
                                                             "75551295-fec7-430c-9e2c-013cd796e925",
                                                             new Date(1562657746931L),
                                                             "f126cbb9-0fe9-4500-b86f-543c2659f910",
                                                             "0e44a7cd-a738-4d7c-9e4f-8c9255b3d801");
            ActiveSession activesession2 = new ActiveSession("5cc1ad15aa5e8e57d330ac5269a987d5",
                                                             "75551295-fec7-430c-9e2c-013cd796e925",
                                                             new Date(1562657746931L),
                                                             "f126cbb9-0fe9-4500-b86f-543c2659f910",
                                                             "0e44a7cd-a738-4d7c-9e4f-8c9255b3d801");
            ActiveSession activesession3 = new ActiveSession("5cc1ad15aa5e8e57d330ac5269a987d5",
                                                             "21985f9a-8273-4f8f-bd3a-c78b4c9baae4",
                                                             new Date(1562657743828L),
                                                             "5c164cc6-91e2-43ec-8917-fb65c1641786",
                                                             "d6328324-3fef-4565-a679-67d7af256e1f");
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotNull(activesession3);
            assertNotSame(activesession2, activesession1);
            assertNotSame(activesession3, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession1, activesession2);
            assertEquals(activesession1, activesession1);
            assertFalse(activesession1.equals(null));
            assertNotEquals(activesession3, activesession1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
