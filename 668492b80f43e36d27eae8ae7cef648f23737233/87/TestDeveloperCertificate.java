// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.security.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeveloperCertificate.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeveloperCertificate {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("1fbfda32-9c95-4ddc-8a59-03da6514e107",
                                                                                  "cdd6cdd6-ef67-490b-a680-8c8855f41e4f",
                                                                                  new Date(1562657751816L),
                                                                                  "d0d19e4a-6839-4398-a4d1-662e3e4cdb15",
                                                                                  "5161395b-aa11-4bb3-ad7e-2b3e69201fc2",
                                                                                  "ae4efb81-57ed-419e-9039-83a9fbb0bd05",
                                                                                  "ca879f8c-b34c-44c2-ba0b-a0586c96afbb",
                                                                                  "f5c3e9a9-f6c6-4b50-a1dd-911ccd98d731");
            DeveloperCertificate developercertificate2 = developercertificate1.clone();
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("17958c1c-25aa-41b5-ab88-b692be2172b6",
                                                                                  "19158456-e8fd-4586-b92d-d44803c8ed10",
                                                                                  new Date(1562657742719L),
                                                                                  "618f796a-bb76-4df0-be86-f9533ac23bf2",
                                                                                  "338b4374-e54a-47ba-a1da-aacb13ee9c9e",
                                                                                  "f656f455-4710-48dd-a138-926b10f8996e",
                                                                                  "33f071f1-7e8c-4e76-96d9-7f60b66be360",
                                                                                  "84d8bb88-53de-4c15-b07a-a3f5197d81f8");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("17958c1c-25aa-41b5-ab88-b692be2172b6",
                                                                                  "19158456-e8fd-4586-b92d-d44803c8ed10",
                                                                                  new Date(1562657742719L),
                                                                                  "618f796a-bb76-4df0-be86-f9533ac23bf2",
                                                                                  "338b4374-e54a-47ba-a1da-aacb13ee9c9e",
                                                                                  "f656f455-4710-48dd-a138-926b10f8996e",
                                                                                  "33f071f1-7e8c-4e76-96d9-7f60b66be360",
                                                                                  "84d8bb88-53de-4c15-b07a-a3f5197d81f8");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2.hashCode(), developercertificate1.hashCode());
            int hashCode = developercertificate1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, developercertificate1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeveloperCertificate developercertificate = new DeveloperCertificate("1bb52d25-ac60-46d2-a9c0-3a94e25c678c",
                                                                             "4fa6f2df-be48-4bd7-bee5-1a895c606e58",
                                                                             new Date(1562657745070L),
                                                                             "05edafc8-87bc-40d9-a9f2-42aa229e0c99",
                                                                             "bb2f25be-a8a7-4d1a-8a76-d387ab416863",
                                                                             "3eab8387-68c4-4498-9f4b-413423a0e51b",
                                                                             "e35bbbe6-e02c-43d3-859e-02204a80dec2",
                                                                             "6ac6bbb5-0654-4013-94b6-73dc9c2a151e");
        assertTrue(developercertificate.isValid());
        DeveloperCertificate developercertificateInvalid = new DeveloperCertificate("b64f1938-a843-4a24-b780-26f5c4777290",
                                                                                    "a7131710-fb26-451f-8314-aa9c0bbfa9a9",
                                                                                    new Date(1562657744324L),
                                                                                    "93a49cdf-8b31-4088-a2c2-c1596a994584",
                                                                                    "165509e8-7eed-4b88-87ff-af8241a5ac5c",
                                                                                    "8eb4503a-7728-410d-8ef2-ba4ab5a34bed",
                                                                                    null,
                                                                                    "8bab06c8-9b0d-4ddd-a674-69f461e332bf");
        assertFalse(developercertificateInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("b0325eab-c5ae-4e4b-9dfa-f0956536e8f6",
                                                                                  "75c8cdf3-a450-4d35-b976-e6fa0a823165",
                                                                                  new Date(1562657750131L),
                                                                                  "d4c69a27-0430-42e0-8e3d-6ee27b8ba0f5",
                                                                                  "1354342a-cad0-4909-b67c-52bcff268cc4",
                                                                                  "65db98df-ef58-4b30-91de-eae9ce5a1278",
                                                                                  "002fe291-c1d7-4b76-b69c-f4609cdec775",
                                                                                  "8d054eaa-96d7-4ae0-8ed5-bf5d3d132eb8");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("b0325eab-c5ae-4e4b-9dfa-f0956536e8f6",
                                                                                  "75c8cdf3-a450-4d35-b976-e6fa0a823165",
                                                                                  new Date(1562657750131L),
                                                                                  "d4c69a27-0430-42e0-8e3d-6ee27b8ba0f5",
                                                                                  "1354342a-cad0-4909-b67c-52bcff268cc4",
                                                                                  "65db98df-ef58-4b30-91de-eae9ce5a1278",
                                                                                  "002fe291-c1d7-4b76-b69c-f4609cdec775",
                                                                                  "8d054eaa-96d7-4ae0-8ed5-bf5d3d132eb8");
            DeveloperCertificate developercertificate3 = new DeveloperCertificate("be791c6c-ee6c-4282-8b86-eb09ee231d89",
                                                                                  "d4c88e00-7e49-4a5b-8e5c-4fe1208d1b3d",
                                                                                  new Date(1562657744758L),
                                                                                  "91f39c6f-82bc-49a8-b3be-f3796538b05b",
                                                                                  "23cf7c2b-13ae-455d-bdcd-330d706b2591",
                                                                                  "ddd0191d-da96-42ef-872f-63d504891935",
                                                                                  "a0ee07a7-4878-431a-ad67-e8595c05439e",
                                                                                  "de2a7cb7-c67c-4900-b9e5-0b6ffd4ad787");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotNull(developercertificate3);
            assertNotSame(developercertificate2, developercertificate1);
            assertNotSame(developercertificate3, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate1, developercertificate2);
            assertEquals(developercertificate1, developercertificate1);
            assertFalse(developercertificate1.equals(null));
            assertNotEquals(developercertificate3, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
