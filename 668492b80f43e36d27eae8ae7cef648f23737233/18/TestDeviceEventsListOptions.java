// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import com.arm.mbed.cloud.sdk.common.Order;
import com.arm.mbed.cloud.sdk.common.listing.ListOptionsEncoder;
import com.arm.mbed.cloud.sdk.common.listing.filtering.FilterOperator;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEventsListOptions.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEventsListOptions {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEventsListOptions deviceeventslistoptions1 = new DeviceEventsListOptions(Integer.valueOf(-38),
                                                                                           Long.valueOf(40),
                                                                                           Order.getDefault(),
                                                                                           "7f52fd7a-ddaa-471f-98bd-99ed811444e4",
                                                                                           null, null);
            DeviceEventsListOptions deviceeventslistoptions2 = deviceeventslistoptions1.clone();
            assertNotNull(deviceeventslistoptions1);
            assertNotNull(deviceeventslistoptions2);
            assertNotSame(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2, deviceeventslistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the filters method.
     */
    @SuppressWarnings({ "boxing", "resource" })
    @Test
    public void testFilters() {
        try {
            DeviceEventsListOptions option = new DeviceEventsListOptions().equalToDeviceId("38ba8ecb-3094-4769-82c7-143fbeea702f")
                                                                          .notEqualToDeviceId("8938513a-72e9-402e-bec9-2c0e7aeed28e")
                                                                          .inDeviceIds(Arrays.asList("76d76df4-3904-48a7-8e2f-b27d19b8daac"))
                                                                          .notInDeviceIds(Arrays.asList("a82cc0ce-270b-4347-8bb2-241f5c064c2c",
                                                                                                        "b74e9354-d897-4113-85d5-fa989cdd8682"))
                                                                          .equalToDescription("3d546d41-0d7d-4e5b-8074-533477a7a81b")
                                                                          .notEqualToDescription("c7e4c554-3bf7-4188-9979-2aa5d7a9074e")
                                                                          .inDescriptions(Arrays.asList("27af1fc7-958f-4e65-b7e3-256424abb695",
                                                                                                        "ff8d065b-7d38-4c0c-a501-8b4332c63ba6",
                                                                                                        "3715db8f-1d1f-4c2f-bfc4-1c4f5bd4e77f",
                                                                                                        "4fb1262a-7c8c-40e1-8d4f-a40a151f1213",
                                                                                                        "f6193a79-8600-4ece-8e0b-45d8d83b45a2",
                                                                                                        "5f91f110-1e15-4e4f-9142-d872a4499a6e",
                                                                                                        "b40717e8-5573-44d8-a8a4-abdcefd6a14c",
                                                                                                        "d4d81261-2e92-490b-ab8a-e92e2af0e8df"))
                                                                          .notInDescriptions(Arrays.asList("0d28c6e6-e7bf-4761-a485-4b58ed635ec1",
                                                                                                           "487c7e63-c9eb-45d9-957b-384fd607d21b",
                                                                                                           "fa752a3c-9fb9-45b0-97d0-0ebaa94e2aef",
                                                                                                           "b84c00bd-3b3f-4bbb-981f-18cdc276dd13",
                                                                                                           "da30b79d-e5d1-46d7-b9a4-3d4826c6526b",
                                                                                                           "a41e2b78-974c-4f4f-bc37-e84d1cca02db"))
                                                                          .inDateTimes(Arrays.asList(new Date(1562657753203L),
                                                                                                     new Date(1562657749259L),
                                                                                                     new Date(1562657747674L),
                                                                                                     new Date(1562657753795L),
                                                                                                     new Date(1562657747131L),
                                                                                                     new Date(1562657744336L),
                                                                                                     new Date(1562657746198L),
                                                                                                     new Date(1562657747428L)))
                                                                          .notInDateTimes(Arrays.asList(new Date(1562657752866L),
                                                                                                        new Date(1562657744629L),
                                                                                                        new Date(1562657753284L),
                                                                                                        new Date(1562657750726L),
                                                                                                        new Date(1562657750169L),
                                                                                                        new Date(1562657747778L),
                                                                                                        new Date(1562657751549L),
                                                                                                        new Date(1562657748734L)))
                                                                          .lessThanDateTime(new Date(1562657748911L))
                                                                          .greaterThanDateTime(new Date(1562657748997L))
                                                                          .equalToStateChange(Boolean.FALSE)
                                                                          .notEqualToStateChange(Boolean.TRUE)
                                                                          .equalToId("346445c6-5e7a-42a5-8266-4722a9762d7c")
                                                                          .notEqualToId("7e71d5d2-d8b0-439a-9495-c2f733e512b1")
                                                                          .inIds(Arrays.asList("ed7354f2-6673-4fa4-8ea4-5ca28d779c6f",
                                                                                               "b4d80140-d575-446e-b86f-58829ac3d21e",
                                                                                               "35a2bc4a-fe73-4366-b2e7-e0e551b14aeb",
                                                                                               "a0971b9a-5121-4025-a4ad-32e40f809551",
                                                                                               "68cee64e-106e-4dbb-9824-d0b60c202a95",
                                                                                               "bf264f55-23e6-489c-8003-e46a9efdfafb",
                                                                                               "aebd631d-354f-425c-a611-c8c1999b5b09",
                                                                                               "5ad0989c-e4c9-4e0c-a91b-97f2716a2f36"))
                                                                          .notInIds(Arrays.asList("a7bdec04-89f1-41b1-8784-c3244dec9f61",
                                                                                                  "4811f088-7cf8-4d38-b323-586fbcafcfb9"))
                                                                          .equalToEventType("d4704f85-0b32-47b2-9c5b-5121867b97e2")
                                                                          .notEqualToEventType("d6e1171c-7efd-46d4-98eb-b996aab9329a")
                                                                          .inEventTypes(Arrays.asList("3f13c029-c573-4b69-8f48-6b76b2ec5b41"))
                                                                          .notInEventTypes(Arrays.asList("14bcbbd7-34bc-4658-a268-263c33884aaf",
                                                                                                         "917f1f30-2eff-49f2-ad7d-66201d1763d1",
                                                                                                         "1e182e1b-cc20-40ca-b45e-4a8eb75dd7dd",
                                                                                                         "c20ff561-26ba-4419-b797-212a20bfd45c",
                                                                                                         "95418109-7aa3-45b6-8294-f51ea819eed4",
                                                                                                         "0c9d684d-d18a-4009-8929-2156be9c877b",
                                                                                                         "62262846-179b-4b20-9c18-53c5ec3d62ed",
                                                                                                         "9dc91748-e6e9-4dfd-b963-4b7745a8da95"));
            assertTrue(option.hasFilters());
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID, FilterOperator.EQUAL));
            assertNotNull(option.getDeviceIdFilters());
            assertEquals("38ba8ecb-3094-4769-82c7-143fbeea702f",
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDeviceIdFilters());
            assertEquals("8938513a-72e9-402e-bec9-2c0e7aeed28e",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID, FilterOperator.IN));
            assertNotNull(option.getDeviceIdFilters());
            assertEquals(Arrays.asList("76d76df4-3904-48a7-8e2f-b27d19b8daac"),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID,
                                                                 List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getDeviceIdFilters());
            assertEquals(Arrays.asList("a82cc0ce-270b-4347-8bb2-241f5c064c2c", "b74e9354-d897-4113-85d5-fa989cdd8682"),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID,
                                                                    List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("3d546d41-0d7d-4e5b-8074-533477a7a81b",
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("c7e4c554-3bf7-4188-9979-2aa5d7a9074e",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                       String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("27af1fc7-958f-4e65-b7e3-256424abb695", "ff8d065b-7d38-4c0c-a501-8b4332c63ba6",
                                       "3715db8f-1d1f-4c2f-bfc4-1c4f5bd4e77f", "4fb1262a-7c8c-40e1-8d4f-a40a151f1213",
                                       "f6193a79-8600-4ece-8e0b-45d8d83b45a2", "5f91f110-1e15-4e4f-9142-d872a4499a6e",
                                       "b40717e8-5573-44d8-a8a4-abdcefd6a14c", "d4d81261-2e92-490b-ab8a-e92e2af0e8df"),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                 List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("0d28c6e6-e7bf-4761-a485-4b58ed635ec1", "487c7e63-c9eb-45d9-957b-384fd607d21b",
                                       "fa752a3c-9fb9-45b0-97d0-0ebaa94e2aef", "b84c00bd-3b3f-4bbb-981f-18cdc276dd13",
                                       "da30b79d-e5d1-46d7-b9a4-3d4826c6526b", "a41e2b78-974c-4f4f-bc37-e84d1cca02db"),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME, FilterOperator.IN));
            assertNotNull(option.getDateTimeFilters());
            assertEquals(Arrays.asList(new Date(1562657753203L), new Date(1562657749259L), new Date(1562657747674L),
                                       new Date(1562657753795L), new Date(1562657747131L), new Date(1562657744336L),
                                       new Date(1562657746198L), new Date(1562657747428L)),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME,
                                                                 List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME, FilterOperator.NOT_IN));
            assertNotNull(option.getDateTimeFilters());
            assertEquals(Arrays.asList(new Date(1562657752866L), new Date(1562657744629L), new Date(1562657753284L),
                                       new Date(1562657750726L), new Date(1562657750169L), new Date(1562657747778L),
                                       new Date(1562657751549L), new Date(1562657748734L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME,
                                                                    List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME, FilterOperator.LESS_THAN));
            assertNotNull(option.getDateTimeFilters());
            assertEquals(new Date(1562657748911L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME, FilterOperator.GREATER_THAN));
            assertNotNull(option.getDateTimeFilters());
            assertEquals(new Date(1562657748997L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE, FilterOperator.EQUAL));
            assertNotNull(option.getStateChangeFilters());
            assertEquals(Boolean.FALSE,
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE,
                                                                    Boolean.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getStateChangeFilters());
            assertEquals(Boolean.TRUE,
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE,
                                                                       Boolean.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, FilterOperator.EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("346445c6-5e7a-42a5-8266-4722a9762d7c",
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("7e71d5d2-d8b0-439a-9495-c2f733e512b1",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, FilterOperator.IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("ed7354f2-6673-4fa4-8ea4-5ca28d779c6f", "b4d80140-d575-446e-b86f-58829ac3d21e",
                                       "35a2bc4a-fe73-4366-b2e7-e0e551b14aeb", "a0971b9a-5121-4025-a4ad-32e40f809551",
                                       "68cee64e-106e-4dbb-9824-d0b60c202a95", "bf264f55-23e6-489c-8003-e46a9efdfafb",
                                       "aebd631d-354f-425c-a611-c8c1999b5b09", "5ad0989c-e4c9-4e0c-a91b-97f2716a2f36"),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, List.class,
                                                                 option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("a7bdec04-89f1-41b1-8784-c3244dec9f61", "4811f088-7cf8-4d38-b323-586fbcafcfb9"),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID,
                                                                    List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE, FilterOperator.EQUAL));
            assertNotNull(option.getEventTypeFilters());
            assertEquals("d4704f85-0b32-47b2-9c5b-5121867b97e2",
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE,
                                                                    String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getEventTypeFilters());
            assertEquals("d6e1171c-7efd-46d4-98eb-b996aab9329a",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE,
                                                                       String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE, FilterOperator.IN));
            assertNotNull(option.getEventTypeFilters());
            assertEquals(Arrays.asList("3f13c029-c573-4b69-8f48-6b76b2ec5b41"),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE,
                                                                 List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE, FilterOperator.NOT_IN));
            assertNotNull(option.getEventTypeFilters());
            assertEquals(Arrays.asList("14bcbbd7-34bc-4658-a268-263c33884aaf", "917f1f30-2eff-49f2-ad7d-66201d1763d1",
                                       "1e182e1b-cc20-40ca-b45e-4a8eb75dd7dd", "c20ff561-26ba-4419-b797-212a20bfd45c",
                                       "95418109-7aa3-45b6-8294-f51ea819eed4", "0c9d684d-d18a-4009-8929-2156be9c877b",
                                       "62262846-179b-4b20-9c18-53c5ec3d62ed", "9dc91748-e6e9-4dfd-b963-4b7745a8da95"),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE,
                                                                    List.class, option));
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEventsListOptions deviceeventslistoptions1 = new DeviceEventsListOptions(Integer.valueOf(-14),
                                                                                           Long.valueOf(9),
                                                                                           Order.getDefault(),
                                                                                           "ecd0e18e-7759-416e-83fd-520b9950bf11",
                                                                                           null, null);
            DeviceEventsListOptions deviceeventslistoptions2 = new DeviceEventsListOptions(Integer.valueOf(-14),
                                                                                           Long.valueOf(9),
                                                                                           Order.getDefault(),
                                                                                           "ecd0e18e-7759-416e-83fd-520b9950bf11",
                                                                                           null, null);
            assertNotNull(deviceeventslistoptions1);
            assertNotNull(deviceeventslistoptions2);
            assertNotSame(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2.hashCode(), deviceeventslistoptions1.hashCode());
            int hashCode = deviceeventslistoptions1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceeventslistoptions1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEventsListOptions deviceeventslistoptions1 = new DeviceEventsListOptions(Integer.valueOf(-66),
                                                                                           Long.valueOf(-86),
                                                                                           Order.getDefault(),
                                                                                           "f4a14592-ed15-42c7-a646-e8732ad1346d",
                                                                                           null, null);
            DeviceEventsListOptions deviceeventslistoptions2 = new DeviceEventsListOptions(Integer.valueOf(-66),
                                                                                           Long.valueOf(-86),
                                                                                           Order.getDefault(),
                                                                                           "f4a14592-ed15-42c7-a646-e8732ad1346d",
                                                                                           null, null);
            DeviceEventsListOptions deviceeventslistoptions3 = new DeviceEventsListOptions(Integer.valueOf(-77),
                                                                                           Long.valueOf(99),
                                                                                           Order.getDefault(),
                                                                                           "85d073ab-9a46-4a6c-b594-cbdfccf00a42",
                                                                                           null, null);
            assertNotNull(deviceeventslistoptions1);
            assertNotNull(deviceeventslistoptions2);
            assertNotNull(deviceeventslistoptions3);
            assertNotSame(deviceeventslistoptions2, deviceeventslistoptions1);
            assertNotSame(deviceeventslistoptions3, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions1, deviceeventslistoptions2);
            assertEquals(deviceeventslistoptions1, deviceeventslistoptions1);
            assertFalse(deviceeventslistoptions1.equals(null));
            assertNotEquals(deviceeventslistoptions3, deviceeventslistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
