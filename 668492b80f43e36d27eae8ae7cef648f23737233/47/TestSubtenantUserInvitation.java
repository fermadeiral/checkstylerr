// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantUserInvitation.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantUserInvitation {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantUserInvitation subtenantuserinvitation1 = new SubtenantUserInvitation("5cc1ad15aa5e8e57d330ac5269a987d5",
                                                                                           new Date(1562657749877L),
                                                                                           "ab9e9.0ea50@ed87e.me",
                                                                                           new Date(1562657751050L),
                                                                                           "5cc1ad15aa5e8e57d330ac5269a987d5",
                                                                                           null,
                                                                                           new Date(1562657751749L),
                                                                                           "5cc1ad15aa5e8e57d330ac5269a987d5");
            SubtenantUserInvitation subtenantuserinvitation2 = subtenantuserinvitation1.clone();
            assertNotNull(subtenantuserinvitation1);
            assertNotNull(subtenantuserinvitation2);
            assertNotSame(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantUserInvitation subtenantuserinvitation1 = new SubtenantUserInvitation("5cc1ad15aa5e8e57d330ac5269a987d5",
                                                                                           new Date(1562657750781L),
                                                                                           "d15fd.a67b0@28708.me",
                                                                                           new Date(1562657749811L),
                                                                                           "5cc1ad15aa5e8e57d330ac5269a987d5",
                                                                                           null,
                                                                                           new Date(1562657748962L),
                                                                                           "5cc1ad15aa5e8e57d330ac5269a987d5");
            SubtenantUserInvitation subtenantuserinvitation2 = new SubtenantUserInvitation("5cc1ad15aa5e8e57d330ac5269a987d5",
                                                                                           new Date(1562657750781L),
                                                                                           "d15fd.a67b0@28708.me",
                                                                                           new Date(1562657749811L),
                                                                                           "5cc1ad15aa5e8e57d330ac5269a987d5",
                                                                                           null,
                                                                                           new Date(1562657748962L),
                                                                                           "5cc1ad15aa5e8e57d330ac5269a987d5");
            assertNotNull(subtenantuserinvitation1);
            assertNotNull(subtenantuserinvitation2);
            assertNotSame(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2.hashCode(), subtenantuserinvitation1.hashCode());
            int hashCode = subtenantuserinvitation1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantuserinvitation1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantUserInvitation subtenantuserinvitation = new SubtenantUserInvitation("5cc1ad15aa5e8e57d330ac5269a987d5",
                                                                                      new Date(1562657744520L),
                                                                                      "15e79.74e8a@5c1b0.me",
                                                                                      new Date(1562657750922L),
                                                                                      "5cc1ad15aa5e8e57d330ac5269a987d5",
                                                                                      null, new Date(1562657748595L),
                                                                                      "5cc1ad15aa5e8e57d330ac5269a987d5");
        assertTrue(subtenantuserinvitation.isValid());
        SubtenantUserInvitation subtenantuserinvitationInvalid = new SubtenantUserInvitation(null,
                                                                                             new Date(1562657745384L),
                                                                                             null,
                                                                                             new Date(1562657752386L),
                                                                                             "\fbDå˜¯4Dæ½°?ã¸€?[M4Tî¨?4\u00114á‘Ÿ\u001bbî¾›bb\u00154b(-44î´Ÿ\u0013[b\u001eîž¼ëš¤<bb4\u001bb:U\u000e44b/bNb4\u001dçˆ±î¬™,\u001aì—™å‡ ^@",
                                                                                             null,
                                                                                             new Date(1562657748011L),
                                                                                             "\fbDå˜¯4Dæ½°?ã¸€?[M4Tî¨?4\u00114á‘Ÿ\u001bbî¾›bb\u00154b(-44î´Ÿ\u0013[b\u001eîž¼ëš¤<bb4\u001bb:U\u000e44b/bNb4\u001dçˆ±î¬™,\u001aì—™å‡ ^@");
        assertFalse(subtenantuserinvitationInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantUserInvitation subtenantuserinvitation1 = new SubtenantUserInvitation("5cc1ad15aa5e8e57d330ac5269a987d5",
                                                                                           new Date(1562657750593L),
                                                                                           "36c6c.59439@d1b88.me",
                                                                                           new Date(1562657745857L),
                                                                                           "5cc1ad15aa5e8e57d330ac5269a987d5",
                                                                                           null,
                                                                                           new Date(1562657750966L),
                                                                                           "5cc1ad15aa5e8e57d330ac5269a987d5");
            SubtenantUserInvitation subtenantuserinvitation2 = new SubtenantUserInvitation("5cc1ad15aa5e8e57d330ac5269a987d5",
                                                                                           new Date(1562657750593L),
                                                                                           "36c6c.59439@d1b88.me",
                                                                                           new Date(1562657745857L),
                                                                                           "5cc1ad15aa5e8e57d330ac5269a987d5",
                                                                                           null,
                                                                                           new Date(1562657750966L),
                                                                                           "5cc1ad15aa5e8e57d330ac5269a987d5");
            SubtenantUserInvitation subtenantuserinvitation3 = new SubtenantUserInvitation("5cc1ad15aa5e8e57d330ac5269a987d5",
                                                                                           new Date(1562657748214L),
                                                                                           "bfac6.95f3c@0242b.me",
                                                                                           new Date(1562657751295L),
                                                                                           "5cc1ad15aa5e8e57d330ac5269a987d5",
                                                                                           null,
                                                                                           new Date(1562657745536L),
                                                                                           "5cc1ad15aa5e8e57d330ac5269a987d5");
            assertNotNull(subtenantuserinvitation1);
            assertNotNull(subtenantuserinvitation2);
            assertNotNull(subtenantuserinvitation3);
            assertNotSame(subtenantuserinvitation2, subtenantuserinvitation1);
            assertNotSame(subtenantuserinvitation3, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation1, subtenantuserinvitation2);
            assertEquals(subtenantuserinvitation1, subtenantuserinvitation1);
            assertFalse(subtenantuserinvitation1.equals(null));
            assertNotEquals(subtenantuserinvitation3, subtenantuserinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
