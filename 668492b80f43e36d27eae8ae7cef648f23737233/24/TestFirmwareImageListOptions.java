// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.deviceupdate.model;

import static org.junit.Assert.*;

import com.arm.mbed.cloud.sdk.common.Order;
import com.arm.mbed.cloud.sdk.common.listing.ListOptionsEncoder;
import com.arm.mbed.cloud.sdk.common.listing.filtering.FilterOperator;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import org.junit.Test;

/**
 * Unit tests for Model FirmwareImageListOptions.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestFirmwareImageListOptions {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            FirmwareImageListOptions firmwareimagelistoptions1 = new FirmwareImageListOptions(Integer.valueOf(125),
                                                                                              Long.valueOf(-110),
                                                                                              Order.getDefault(),
                                                                                              "80b72b4c-cea5-462d-927f-44e62b3b71cc",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions2 = firmwareimagelistoptions1.clone();
            assertNotNull(firmwareimagelistoptions1);
            assertNotNull(firmwareimagelistoptions2);
            assertNotSame(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the filters method.
     */
    @SuppressWarnings({ "boxing", "resource" })
    @Test
    public void testFilters() {
        try {
            FirmwareImageListOptions option = new FirmwareImageListOptions().inUpdatedAts(Arrays.asList(new Date(1562657746824L),
                                                                                                        new Date(1562657751959L),
                                                                                                        new Date(1562657750415L),
                                                                                                        new Date(1562657746765L),
                                                                                                        new Date(1562657749272L)))
                                                                            .notInUpdatedAts(Arrays.asList(new Date(1562657750868L),
                                                                                                           new Date(1562657744727L)))
                                                                            .lessThanUpdatedAt(new Date(1562657749447L))
                                                                            .greaterThanUpdatedAt(new Date(1562657753919L))
                                                                            .equalToName("af6274f3-2b60-470d-9110-d0f3c0b80e94")
                                                                            .notEqualToName("99830230-9a73-4050-8081-a4ef96df5130")
                                                                            .inNames(Arrays.asList("b07c27e8-03fe-4993-9c93-fdb7d9d870f3",
                                                                                                   "d254d69a-6ab4-4271-955d-852cd5760200",
                                                                                                   "9dc82c40-d642-457f-aac2-12e0348c4cbb",
                                                                                                   "a03d5c71-2053-4006-bd2d-f97283730dc6",
                                                                                                   "0bde0366-286c-4586-a07a-867c14bf09b5",
                                                                                                   "675ecfe6-9f8f-4866-a48f-df1b1df46abd",
                                                                                                   "6df71313-b082-43ea-a0f5-0d7aea48fd3f",
                                                                                                   "cbb51d3d-2e99-45ac-bddf-6f440bedac01",
                                                                                                   "24b9d87a-b225-4790-833a-ce9a9b94a59c"))
                                                                            .notInNames(Arrays.asList("1a018a16-6fd2-4188-bfc2-1c7f6bf0437b"))
                                                                            .equalToDescription("c0a094f3-6f4a-4302-9a63-97af6b065833")
                                                                            .notEqualToDescription("adcc8c30-316f-4dad-bbf9-1720ddee8951")
                                                                            .inDescriptions(Arrays.asList("f5d68ba1-8978-49f2-ae14-fb32bc632d7a",
                                                                                                          "a50d5743-b6ed-4fbb-a4d0-5732d788d01f",
                                                                                                          "46242a69-3899-4176-8492-2711bf17a37b",
                                                                                                          "d8152d8f-6191-487c-a93e-48eebfaf2720",
                                                                                                          "9ba7f390-9c4f-49b9-82fa-de8211120b10",
                                                                                                          "869b03aa-201a-4f6f-9e9d-0401a6d739e9"))
                                                                            .notInDescriptions(Arrays.asList("69d087b6-54cc-422a-9523-398c2b07c0a3",
                                                                                                             "47259c34-4660-4aba-82db-c0cf452df6d1",
                                                                                                             "2e29fece-796d-43d7-b246-b1bb5e7ecff5",
                                                                                                             "f439cd69-9b69-423f-b881-4d5a8d5acede",
                                                                                                             "aaf26d85-8463-442e-8c8e-630728dd34af",
                                                                                                             "edceb47e-dff9-4711-9c00-8becf37b95d6"))
                                                                            .inCreatedAts(Arrays.asList(new Date(1562657754260L)))
                                                                            .notInCreatedAts(Arrays.asList(new Date(1562657752494L),
                                                                                                           new Date(1562657754228L),
                                                                                                           new Date(1562657750463L),
                                                                                                           new Date(1562657745893L),
                                                                                                           new Date(1562657754102L)))
                                                                            .lessThanCreatedAt(new Date(1562657750460L))
                                                                            .greaterThanCreatedAt(new Date(1562657744895L))
                                                                            .equalToDatafileUrl("aa6b1682-b561-48a6-9de4-b8ac60ff1422")
                                                                            .notEqualToDatafileUrl("7f285881-9a6f-4f4c-b394-47c8e104b91a")
                                                                            .inDatafileUrls(Arrays.asList("53637e10-8ca8-42d5-b4ef-5ac6ea26472e",
                                                                                                          "72f8b600-410f-4bf5-8fad-2cbe579a6b84",
                                                                                                          "78e96ace-91fd-425e-9311-ddea527e1969",
                                                                                                          "51db12eb-4a05-4399-a7a3-a00f0ee55e64",
                                                                                                          "cf1342a6-742b-45a4-8757-aec94912f5f6",
                                                                                                          "1245c295-2751-45f7-87b8-c2daf2836565",
                                                                                                          "d1d42912-36eb-436b-9a71-b6dffd54ac96"))
                                                                            .notInDatafileUrls(Arrays.asList("e1cb250b-e4df-4420-8166-676a18925ad9",
                                                                                                             "8fd9ec54-0b9d-4dd7-b929-302ec5e08752"))
                                                                            .equalToDatafileSize(Long.valueOf(116))
                                                                            .notEqualToDatafileSize(Long.valueOf(-119))
                                                                            .inDatafileSizes(Arrays.asList(Long.valueOf(14),
                                                                                                           Long.valueOf(8),
                                                                                                           Long.valueOf(-16),
                                                                                                           Long.valueOf(-70)))
                                                                            .notInDatafileSizes(Arrays.asList(Long.valueOf(83),
                                                                                                              Long.valueOf(-27),
                                                                                                              Long.valueOf(6),
                                                                                                              Long.valueOf(-121),
                                                                                                              Long.valueOf(59),
                                                                                                              Long.valueOf(46),
                                                                                                              Long.valueOf(4),
                                                                                                              Long.valueOf(42)))
                                                                            .equalToDatafileChecksum("33295dc2-c0ef-48c2-960e-a1af33a8aadf")
                                                                            .notEqualToDatafileChecksum("f9dfe400-516f-4698-b718-e31fb56c2f36")
                                                                            .inDatafileChecksums(Arrays.asList("eaaf2657-15b5-49d9-b260-ebeb5e8ada73",
                                                                                                               "9201fd40-da43-453a-a435-86e67ab1b083"))
                                                                            .notInDatafileChecksums(Arrays.asList("87f02836-7d69-49f6-a5d7-6b5e9a357d86",
                                                                                                                  "baf7d994-6fe9-479a-9bf0-be52e8e276ef"))
                                                                            .equalToId("acbe9228-ae9b-46aa-93eb-2769dd478a69")
                                                                            .notEqualToId("050f9151-335d-4d0f-8358-669f7953716e")
                                                                            .inIds(Arrays.asList("ecc54196-e3ee-4788-aafe-b8470ddcd3fd",
                                                                                                 "9d715ffc-bd0d-40f6-93bd-48b045ab3c87",
                                                                                                 "4406a156-e7c3-49a6-9d68-36be3ccb8bd7",
                                                                                                 "2e771b85-ab75-4275-96a3-2c03af9fdf83",
                                                                                                 "152b29a4-3be3-4009-8106-e38f77adbc56",
                                                                                                 "8e6c510a-5341-4395-b656-713a4a64ea04",
                                                                                                 "272b141c-6a76-40cd-bf49-e5d29f5afc10",
                                                                                                 "fa45ab99-5bdb-43be-9261-0f28f509e132",
                                                                                                 "edf5461b-b242-4c24-9f61-d26741dc367d"))
                                                                            .notInIds(Arrays.asList("a73f7ee1-4104-4090-b9b8-adf3607eaa23",
                                                                                                    "bc440b81-5e93-4982-a579-748fd55bb104",
                                                                                                    "a3c567fb-3c75-4342-895e-61091060d160",
                                                                                                    "71cb06f4-0011-4249-bb67-c9ad526d4a0d",
                                                                                                    "ce833476-e78a-42f3-8326-1af26b0b3656",
                                                                                                    "02277c10-0649-4f10-8f2e-1f8fdf853d5d",
                                                                                                    "db2e98ca-78b2-4861-bbab-764dced276b3"));
            assertTrue(option.hasFilters());
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1562657746824L), new Date(1562657751959L), new Date(1562657750415L),
                                       new Date(1562657746765L), new Date(1562657749272L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1562657750868L), new Date(1562657744727L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.LESS_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1562657749447L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1562657753919L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("af6274f3-2b60-470d-9110-d0f3c0b80e94",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("99830230-9a73-4050-8081-a4ef96df5130",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("b07c27e8-03fe-4993-9c93-fdb7d9d870f3", "d254d69a-6ab4-4271-955d-852cd5760200",
                                       "9dc82c40-d642-457f-aac2-12e0348c4cbb", "a03d5c71-2053-4006-bd2d-f97283730dc6",
                                       "0bde0366-286c-4586-a07a-867c14bf09b5", "675ecfe6-9f8f-4866-a48f-df1b1df46abd",
                                       "6df71313-b082-43ea-a0f5-0d7aea48fd3f", "cbb51d3d-2e99-45ac-bddf-6f440bedac01",
                                       "24b9d87a-b225-4790-833a-ce9a9b94a59c"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("1a018a16-6fd2-4188-bfc2-1c7f6bf0437b"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("c0a094f3-6f4a-4302-9a63-97af6b065833",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("adcc8c30-316f-4dad-bbf9-1720ddee8951",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("f5d68ba1-8978-49f2-ae14-fb32bc632d7a", "a50d5743-b6ed-4fbb-a4d0-5732d788d01f",
                                       "46242a69-3899-4176-8492-2711bf17a37b", "d8152d8f-6191-487c-a93e-48eebfaf2720",
                                       "9ba7f390-9c4f-49b9-82fa-de8211120b10", "869b03aa-201a-4f6f-9e9d-0401a6d739e9"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("69d087b6-54cc-422a-9523-398c2b07c0a3", "47259c34-4660-4aba-82db-c0cf452df6d1",
                                       "2e29fece-796d-43d7-b246-b1bb5e7ecff5", "f439cd69-9b69-423f-b881-4d5a8d5acede",
                                       "aaf26d85-8463-442e-8c8e-630728dd34af", "edceb47e-dff9-4711-9c00-8becf37b95d6"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1562657754260L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1562657752494L), new Date(1562657754228L), new Date(1562657750463L),
                                       new Date(1562657745893L), new Date(1562657754102L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.LESS_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1562657750460L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1562657744895L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("aa6b1682-b561-48a6-9de4-b8ac60ff1422",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("7f285881-9a6f-4f4c-b394-47c8e104b91a",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("53637e10-8ca8-42d5-b4ef-5ac6ea26472e", "72f8b600-410f-4bf5-8fad-2cbe579a6b84",
                                       "78e96ace-91fd-425e-9311-ddea527e1969", "51db12eb-4a05-4399-a7a3-a00f0ee55e64",
                                       "cf1342a6-742b-45a4-8757-aec94912f5f6", "1245c295-2751-45f7-87b8-c2daf2836565",
                                       "d1d42912-36eb-436b-9a71-b6dffd54ac96"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("e1cb250b-e4df-4420-8166-676a18925ad9", "8fd9ec54-0b9d-4dd7-b929-302ec5e08752"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(116),
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    Long.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(-119),
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                       Long.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(14), Long.valueOf(8), Long.valueOf(-16), Long.valueOf(-70)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(83), Long.valueOf(-27), Long.valueOf(6), Long.valueOf(-121),
                                       Long.valueOf(59), Long.valueOf(46), Long.valueOf(4), Long.valueOf(42)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                        FilterOperator.EQUAL));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals("33295dc2-c0ef-48c2-960e-a1af33a8aadf",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals("f9dfe400-516f-4698-b718-e31fb56c2f36",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM, FilterOperator.IN));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals(Arrays.asList("eaaf2657-15b5-49d9-b260-ebeb5e8ada73", "9201fd40-da43-453a-a435-86e67ab1b083"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                        FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals(Arrays.asList("87f02836-7d69-49f6-a5d7-6b5e9a357d86", "baf7d994-6fe9-479a-9bf0-be52e8e276ef"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("acbe9228-ae9b-46aa-93eb-2769dd478a69",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("050f9151-335d-4d0f-8358-669f7953716e",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("ecc54196-e3ee-4788-aafe-b8470ddcd3fd", "9d715ffc-bd0d-40f6-93bd-48b045ab3c87",
                                       "4406a156-e7c3-49a6-9d68-36be3ccb8bd7", "2e771b85-ab75-4275-96a3-2c03af9fdf83",
                                       "152b29a4-3be3-4009-8106-e38f77adbc56", "8e6c510a-5341-4395-b656-713a4a64ea04",
                                       "272b141c-6a76-40cd-bf49-e5d29f5afc10", "fa45ab99-5bdb-43be-9261-0f28f509e132",
                                       "edf5461b-b242-4c24-9f61-d26741dc367d"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, List.class,
                                                                 option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("a73f7ee1-4104-4090-b9b8-adf3607eaa23", "bc440b81-5e93-4982-a579-748fd55bb104",
                                       "a3c567fb-3c75-4342-895e-61091060d160", "71cb06f4-0011-4249-bb67-c9ad526d4a0d",
                                       "ce833476-e78a-42f3-8326-1af26b0b3656", "02277c10-0649-4f10-8f2e-1f8fdf853d5d",
                                       "db2e98ca-78b2-4861-bbab-764dced276b3"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID,
                                                                    List.class, option));
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            FirmwareImageListOptions firmwareimagelistoptions1 = new FirmwareImageListOptions(Integer.valueOf(-30),
                                                                                              Long.valueOf(59),
                                                                                              Order.getDefault(),
                                                                                              "af65e470-8f6f-4324-be77-2f134aa6606a",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions2 = new FirmwareImageListOptions(Integer.valueOf(-30),
                                                                                              Long.valueOf(59),
                                                                                              Order.getDefault(),
                                                                                              "af65e470-8f6f-4324-be77-2f134aa6606a",
                                                                                              null, null);
            assertNotNull(firmwareimagelistoptions1);
            assertNotNull(firmwareimagelistoptions2);
            assertNotSame(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2.hashCode(), firmwareimagelistoptions1.hashCode());
            int hashCode = firmwareimagelistoptions1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, firmwareimagelistoptions1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            FirmwareImageListOptions firmwareimagelistoptions1 = new FirmwareImageListOptions(Integer.valueOf(-48),
                                                                                              Long.valueOf(18),
                                                                                              Order.getDefault(),
                                                                                              "fa50923f-4b6a-4546-9e35-dbfd56bde75e",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions2 = new FirmwareImageListOptions(Integer.valueOf(-48),
                                                                                              Long.valueOf(18),
                                                                                              Order.getDefault(),
                                                                                              "fa50923f-4b6a-4546-9e35-dbfd56bde75e",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions3 = new FirmwareImageListOptions(Integer.valueOf(116),
                                                                                              Long.valueOf(19),
                                                                                              Order.getDefault(),
                                                                                              "74d8cb96-0445-402f-b428-2d805fd4abbc",
                                                                                              null, null);
            assertNotNull(firmwareimagelistoptions1);
            assertNotNull(firmwareimagelistoptions2);
            assertNotNull(firmwareimagelistoptions3);
            assertNotSame(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertNotSame(firmwareimagelistoptions3, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions1, firmwareimagelistoptions2);
            assertEquals(firmwareimagelistoptions1, firmwareimagelistoptions1);
            assertFalse(firmwareimagelistoptions1.equals(null));
            assertNotEquals(firmwareimagelistoptions3, firmwareimagelistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
