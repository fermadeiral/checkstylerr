// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import com.arm.mbed.cloud.sdk.common.Order;
import com.arm.mbed.cloud.sdk.common.listing.ListOptionsEncoder;
import com.arm.mbed.cloud.sdk.common.listing.filtering.FilterOperator;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import org.junit.Test;

/**
 * Unit tests for Model DeviceGroupListOptions.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceGroupListOptions {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceGroupListOptions devicegrouplistoptions1 = new DeviceGroupListOptions(Integer.valueOf(-73),
                                                                                        Long.valueOf(21),
                                                                                        Order.getDefault(),
                                                                                        "5a1c5844-daf5-40e7-a2ef-018f7870569f",
                                                                                        null, null);
            DeviceGroupListOptions devicegrouplistoptions2 = devicegrouplistoptions1.clone();
            assertNotNull(devicegrouplistoptions1);
            assertNotNull(devicegrouplistoptions2);
            assertNotSame(devicegrouplistoptions2, devicegrouplistoptions1);
            assertEquals(devicegrouplistoptions2, devicegrouplistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the filters method.
     */
    @SuppressWarnings({ "boxing", "resource" })
    @Test
    public void testFilters() {
        try {
            DeviceGroupListOptions option = new DeviceGroupListOptions().inUpdatedAts(Arrays.asList(new Date(1562657750462L),
                                                                                                    new Date(1562657749342L),
                                                                                                    new Date(1562657748392L)))
                                                                        .notInUpdatedAts(Arrays.asList(new Date(1562657753461L),
                                                                                                       new Date(1562657754043L)))
                                                                        .lessThanUpdatedAt(new Date(1562657753792L))
                                                                        .greaterThanUpdatedAt(new Date(1562657754084L))
                                                                        .equalToName("0c4f16d6-7cd2-426b-ba09-50e002aa4e87")
                                                                        .notEqualToName("3d4e3eb3-6145-4a5a-b83d-e67f30a33d55")
                                                                        .inNames(Arrays.asList("8dff3e60-5aad-4981-aa9a-9df76b8f5537",
                                                                                               "d1c5313a-9b08-4ffa-acb4-790e1668b96f",
                                                                                               "8a8c59ac-16bc-4038-933c-3945a484f89a",
                                                                                               "8b8ece5b-8088-4cd7-a55f-d56893af238c",
                                                                                               "735fbf14-1037-4089-a361-8699c937c1c0"))
                                                                        .notInNames(Arrays.asList("af364ce3-b93c-4e18-8da8-896ddcc9867d",
                                                                                                  "b80a717a-e866-4d45-988f-f2477adeb16b",
                                                                                                  "cb03f197-ba04-40ee-88c7-bd4ccac768d7",
                                                                                                  "5314a069-8731-4df7-b8e5-992691e2132e",
                                                                                                  "d932d338-8d4f-4f25-bd84-71026464892e"))
                                                                        .equalToDevicesCount(Integer.valueOf(-24))
                                                                        .notEqualToDevicesCount(Integer.valueOf(87))
                                                                        .inDevicesCounts(Arrays.asList(Integer.valueOf(89),
                                                                                                       Integer.valueOf(-109),
                                                                                                       Integer.valueOf(45)))
                                                                        .notInDevicesCounts(Arrays.asList(Integer.valueOf(-48)))
                                                                        .lessThanDevicesCount(Integer.valueOf(-50))
                                                                        .greaterThanDevicesCount(Integer.valueOf(27))
                                                                        .inCreatedAts(Arrays.asList(new Date(1562657752383L),
                                                                                                    new Date(1562657745700L),
                                                                                                    new Date(1562657746973L),
                                                                                                    new Date(1562657747444L)))
                                                                        .notInCreatedAts(Arrays.asList(new Date(1562657751719L),
                                                                                                       new Date(1562657751761L),
                                                                                                       new Date(1562657750090L),
                                                                                                       new Date(1562657746823L),
                                                                                                       new Date(1562657753625L)))
                                                                        .lessThanCreatedAt(new Date(1562657749357L))
                                                                        .greaterThanCreatedAt(new Date(1562657744789L))
                                                                        .equalToId("2b9c8ab5-8d32-48cb-b77c-0c29caa6c557")
                                                                        .notEqualToId("7fc28961-2ea3-44e9-81d9-e004e63ec087")
                                                                        .inIds(Arrays.asList("ab6cfdde-d6c4-4214-84b7-b9d5d34b94b3",
                                                                                             "243e09be-6d69-468a-94c5-5c3df17c4b5f",
                                                                                             "dd2486ef-1066-4bbb-858c-db1025bf4e01",
                                                                                             "732c0bc8-1a92-4bcb-bf6a-4644252683f5",
                                                                                             "3f9f0f4c-5e8d-4d73-b512-f3f2e414113b",
                                                                                             "61b08e10-1347-4c9b-b59a-b55154ab1d98",
                                                                                             "3e90a3e0-098c-40e3-9fd5-84a67db3b6e2"))
                                                                        .notInIds(Arrays.asList("e3c2845b-e25a-4e81-bb9f-9731ad95d318",
                                                                                                "812c2a32-990a-4b70-9da8-570aaeb8d670",
                                                                                                "2e756d1f-fb03-4202-a54e-f2eabbf4865f"));
            assertTrue(option.hasFilters());
            assertTrue(option.hasFilters(DeviceGroupListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(DeviceGroupListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1562657750462L), new Date(1562657749342L), new Date(1562657748392L)),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceGroupListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(DeviceGroupListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(DeviceGroupListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1562657753461L), new Date(1562657754043L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceGroupListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(DeviceGroupListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(DeviceGroupListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.LESS_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1562657753792L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(DeviceGroupListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(DeviceGroupListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(DeviceGroupListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.GREATER_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1562657754084L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(DeviceGroupListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(DeviceGroupListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(DeviceGroupListOptions.TAG_FILTER_BY_NAME, FilterOperator.EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("0c4f16d6-7cd2-426b-ba09-50e002aa4e87",
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceGroupListOptions.TAG_FILTER_BY_NAME,
                                                                    String.class, option));
            assertTrue(option.hasFilters(DeviceGroupListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(DeviceGroupListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("3d4e3eb3-6145-4a5a-b83d-e67f30a33d55",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceGroupListOptions.TAG_FILTER_BY_NAME,
                                                                       String.class, option));
            assertTrue(option.hasFilters(DeviceGroupListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(DeviceGroupListOptions.TAG_FILTER_BY_NAME, FilterOperator.IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("8dff3e60-5aad-4981-aa9a-9df76b8f5537", "d1c5313a-9b08-4ffa-acb4-790e1668b96f",
                                       "8a8c59ac-16bc-4038-933c-3945a484f89a", "8b8ece5b-8088-4cd7-a55f-d56893af238c",
                                       "735fbf14-1037-4089-a361-8699c937c1c0"),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceGroupListOptions.TAG_FILTER_BY_NAME, List.class,
                                                                 option));
            assertTrue(option.hasFilters(DeviceGroupListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(DeviceGroupListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("af364ce3-b93c-4e18-8da8-896ddcc9867d", "b80a717a-e866-4d45-988f-f2477adeb16b",
                                       "cb03f197-ba04-40ee-88c7-bd4ccac768d7", "5314a069-8731-4df7-b8e5-992691e2132e",
                                       "d932d338-8d4f-4f25-bd84-71026464892e"),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceGroupListOptions.TAG_FILTER_BY_NAME,
                                                                    List.class, option));
            assertTrue(option.hasFilters(DeviceGroupListOptions.TAG_FILTER_BY_DEVICES_COUNT));
            assertTrue(option.hasFilter(DeviceGroupListOptions.TAG_FILTER_BY_DEVICES_COUNT, FilterOperator.EQUAL));
            assertNotNull(option.getDevicesCountFilters());
            assertEquals(Integer.valueOf(-24),
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceGroupListOptions.TAG_FILTER_BY_DEVICES_COUNT,
                                                                    Integer.class, option));
            assertTrue(option.hasFilters(DeviceGroupListOptions.TAG_FILTER_BY_DEVICES_COUNT));
            assertTrue(option.hasFilter(DeviceGroupListOptions.TAG_FILTER_BY_DEVICES_COUNT, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDevicesCountFilters());
            assertEquals(Integer.valueOf(87),
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceGroupListOptions.TAG_FILTER_BY_DEVICES_COUNT,
                                                                       Integer.class, option));
            assertTrue(option.hasFilters(DeviceGroupListOptions.TAG_FILTER_BY_DEVICES_COUNT));
            assertTrue(option.hasFilter(DeviceGroupListOptions.TAG_FILTER_BY_DEVICES_COUNT, FilterOperator.IN));
            assertNotNull(option.getDevicesCountFilters());
            assertEquals(Arrays.asList(Integer.valueOf(89), Integer.valueOf(-109), Integer.valueOf(45)),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceGroupListOptions.TAG_FILTER_BY_DEVICES_COUNT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(DeviceGroupListOptions.TAG_FILTER_BY_DEVICES_COUNT));
            assertTrue(option.hasFilter(DeviceGroupListOptions.TAG_FILTER_BY_DEVICES_COUNT, FilterOperator.NOT_IN));
            assertNotNull(option.getDevicesCountFilters());
            assertEquals(Arrays.asList(Integer.valueOf(-48)),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceGroupListOptions.TAG_FILTER_BY_DEVICES_COUNT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(DeviceGroupListOptions.TAG_FILTER_BY_DEVICES_COUNT));
            assertTrue(option.hasFilter(DeviceGroupListOptions.TAG_FILTER_BY_DEVICES_COUNT, FilterOperator.LESS_THAN));
            assertNotNull(option.getDevicesCountFilters());
            assertEquals(Integer.valueOf(-50),
                         ListOptionsEncoder.encodeSingleLessThanFilter(DeviceGroupListOptions.TAG_FILTER_BY_DEVICES_COUNT,
                                                                       Integer.class, option));
            assertTrue(option.hasFilters(DeviceGroupListOptions.TAG_FILTER_BY_DEVICES_COUNT));
            assertTrue(option.hasFilter(DeviceGroupListOptions.TAG_FILTER_BY_DEVICES_COUNT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getDevicesCountFilters());
            assertEquals(Integer.valueOf(27),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(DeviceGroupListOptions.TAG_FILTER_BY_DEVICES_COUNT,
                                                                          Integer.class, option));
            assertTrue(option.hasFilters(DeviceGroupListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(DeviceGroupListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1562657752383L), new Date(1562657745700L), new Date(1562657746973L),
                                       new Date(1562657747444L)),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceGroupListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(DeviceGroupListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(DeviceGroupListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1562657751719L), new Date(1562657751761L), new Date(1562657750090L),
                                       new Date(1562657746823L), new Date(1562657753625L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceGroupListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(DeviceGroupListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(DeviceGroupListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.LESS_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1562657749357L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(DeviceGroupListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(DeviceGroupListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(DeviceGroupListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.GREATER_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1562657744789L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(DeviceGroupListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(DeviceGroupListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(DeviceGroupListOptions.TAG_FILTER_BY_ID, FilterOperator.EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("2b9c8ab5-8d32-48cb-b77c-0c29caa6c557",
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceGroupListOptions.TAG_FILTER_BY_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(DeviceGroupListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(DeviceGroupListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("7fc28961-2ea3-44e9-81d9-e004e63ec087",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceGroupListOptions.TAG_FILTER_BY_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(DeviceGroupListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(DeviceGroupListOptions.TAG_FILTER_BY_ID, FilterOperator.IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("ab6cfdde-d6c4-4214-84b7-b9d5d34b94b3", "243e09be-6d69-468a-94c5-5c3df17c4b5f",
                                       "dd2486ef-1066-4bbb-858c-db1025bf4e01", "732c0bc8-1a92-4bcb-bf6a-4644252683f5",
                                       "3f9f0f4c-5e8d-4d73-b512-f3f2e414113b", "61b08e10-1347-4c9b-b59a-b55154ab1d98",
                                       "3e90a3e0-098c-40e3-9fd5-84a67db3b6e2"),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceGroupListOptions.TAG_FILTER_BY_ID, List.class,
                                                                 option));
            assertTrue(option.hasFilters(DeviceGroupListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(DeviceGroupListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("e3c2845b-e25a-4e81-bb9f-9731ad95d318", "812c2a32-990a-4b70-9da8-570aaeb8d670",
                                       "2e756d1f-fb03-4202-a54e-f2eabbf4865f"),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceGroupListOptions.TAG_FILTER_BY_ID, List.class,
                                                                    option));
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceGroupListOptions devicegrouplistoptions1 = new DeviceGroupListOptions(Integer.valueOf(77),
                                                                                        Long.valueOf(22),
                                                                                        Order.getDefault(),
                                                                                        "9116e509-c6f4-4a39-b9d5-64f0a0ace8b8",
                                                                                        null, null);
            DeviceGroupListOptions devicegrouplistoptions2 = new DeviceGroupListOptions(Integer.valueOf(77),
                                                                                        Long.valueOf(22),
                                                                                        Order.getDefault(),
                                                                                        "9116e509-c6f4-4a39-b9d5-64f0a0ace8b8",
                                                                                        null, null);
            assertNotNull(devicegrouplistoptions1);
            assertNotNull(devicegrouplistoptions2);
            assertNotSame(devicegrouplistoptions2, devicegrouplistoptions1);
            assertEquals(devicegrouplistoptions2, devicegrouplistoptions1);
            assertEquals(devicegrouplistoptions2.hashCode(), devicegrouplistoptions1.hashCode());
            int hashCode = devicegrouplistoptions1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, devicegrouplistoptions1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceGroupListOptions devicegrouplistoptions1 = new DeviceGroupListOptions(Integer.valueOf(83),
                                                                                        Long.valueOf(124),
                                                                                        Order.getDefault(),
                                                                                        "d15ce414-7d0c-4eb2-9851-5e2a0ecb4286",
                                                                                        null, null);
            DeviceGroupListOptions devicegrouplistoptions2 = new DeviceGroupListOptions(Integer.valueOf(83),
                                                                                        Long.valueOf(124),
                                                                                        Order.getDefault(),
                                                                                        "d15ce414-7d0c-4eb2-9851-5e2a0ecb4286",
                                                                                        null, null);
            DeviceGroupListOptions devicegrouplistoptions3 = new DeviceGroupListOptions(Integer.valueOf(-102),
                                                                                        Long.valueOf(-3),
                                                                                        Order.getDefault(),
                                                                                        "18eea399-f813-4ba8-9aa0-9e9a57216940",
                                                                                        null, null);
            assertNotNull(devicegrouplistoptions1);
            assertNotNull(devicegrouplistoptions2);
            assertNotNull(devicegrouplistoptions3);
            assertNotSame(devicegrouplistoptions2, devicegrouplistoptions1);
            assertNotSame(devicegrouplistoptions3, devicegrouplistoptions1);
            assertEquals(devicegrouplistoptions2, devicegrouplistoptions1);
            assertEquals(devicegrouplistoptions2, devicegrouplistoptions1);
            assertEquals(devicegrouplistoptions1, devicegrouplistoptions2);
            assertEquals(devicegrouplistoptions1, devicegrouplistoptions1);
            assertFalse(devicegrouplistoptions1.equals(null));
            assertNotEquals(devicegrouplistoptions3, devicegrouplistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
