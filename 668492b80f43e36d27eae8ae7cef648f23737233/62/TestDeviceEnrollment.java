// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEnrollment.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEnrollment {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEnrollment deviceenrollment1 = new DeviceEnrollment("17742b77-fc85-44ba-93a1-5724d217407d",
                                                                      new Date(1562657749992L),
                                                                      new Date(1562657744560L),
                                                                      "T6ebmifPLl4HtYTN3kH9mwdSgMkSjmq6",
                                                                      "A-l2NVe09yMWt97MWCRJ1Yj8w27BiSknWb2aTy8ue:gGd:6BY5UW9V7cNO86:T8O7G48wZ91d5KhMckvJ6WpIENG7vtVF818H",
                                                                      new Date(1562657747622L),
                                                                      "T6ebmifPLl4HtYTN3kH9mwdSgMkSjmq6");
            DeviceEnrollment deviceenrollment2 = deviceenrollment1.clone();
            assertNotNull(deviceenrollment1);
            assertNotNull(deviceenrollment2);
            assertNotSame(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEnrollment deviceenrollment1 = new DeviceEnrollment("ad6eb66c-65ba-4d3b-8718-0422136479b5",
                                                                      new Date(1562657745708L),
                                                                      new Date(1562657745795L),
                                                                      "T6ebmifPLl4HtYTN3kH9mwdSgMkSjmq6",
                                                                      "A-l2NVe09yMWt97MWCRJ1Yj8w27BiSknWb2aTy8ue:gGd:6BY5UW9V7cNO86:T8O7G48wZ91d5KhMckvJ6WpIENG7vtVF818H",
                                                                      new Date(1562657752471L),
                                                                      "T6ebmifPLl4HtYTN3kH9mwdSgMkSjmq6");
            DeviceEnrollment deviceenrollment2 = new DeviceEnrollment("ad6eb66c-65ba-4d3b-8718-0422136479b5",
                                                                      new Date(1562657745708L),
                                                                      new Date(1562657745795L),
                                                                      "T6ebmifPLl4HtYTN3kH9mwdSgMkSjmq6",
                                                                      "A-l2NVe09yMWt97MWCRJ1Yj8w27BiSknWb2aTy8ue:gGd:6BY5UW9V7cNO86:T8O7G48wZ91d5KhMckvJ6WpIENG7vtVF818H",
                                                                      new Date(1562657752471L),
                                                                      "T6ebmifPLl4HtYTN3kH9mwdSgMkSjmq6");
            assertNotNull(deviceenrollment1);
            assertNotNull(deviceenrollment2);
            assertNotSame(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2.hashCode(), deviceenrollment1.hashCode());
            int hashCode = deviceenrollment1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceenrollment1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEnrollment deviceenrollment = new DeviceEnrollment("bc4ce854-dda1-48cb-95f2-dbca2b5847b1",
                                                                 new Date(1562657750007L), new Date(1562657750698L),
                                                                 "T6ebmifPLl4HtYTN3kH9mwdSgMkSjmq6",
                                                                 "A-l2NVe09yMWt97MWCRJ1Yj8w27BiSknWb2aTy8ue:gGd:6BY5UW9V7cNO86:T8O7G48wZ91d5KhMckvJ6WpIENG7vtVF818H",
                                                                 new Date(1562657745175L),
                                                                 "T6ebmifPLl4HtYTN3kH9mwdSgMkSjmq6");
        assertTrue(deviceenrollment.isValid());
        DeviceEnrollment deviceenrollmentInvalid = new DeviceEnrollment("a937430c-dd5f-4fe3-a88a-72a78313b60e",
                                                                        new Date(1562657745767L),
                                                                        new Date(1562657744198L),
                                                                        "nO5JGWnrcI7_IoGQ5_7nh]>Fuc7OF5OvpOO8\\\\8[\u001av+cnhpKJKc8cu8=\u0010sX>h7Q\u0011",
                                                                        null, new Date(1562657751973L),
                                                                        "nO5JGWnrcI7_IoGQ5_7nh]>Fuc7OF5OvpOO8\\\\8[\u001av+cnhpKJKc8cu8=\u0010sX>h7Q\u0011");
        assertFalse(deviceenrollmentInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEnrollment deviceenrollment1 = new DeviceEnrollment("547e346f-3160-4219-b3b5-cb1fa3ab8695",
                                                                      new Date(1562657747767L),
                                                                      new Date(1562657746002L),
                                                                      "T6ebmifPLl4HtYTN3kH9mwdSgMkSjmq6",
                                                                      "A-l2NVe09yMWt97MWCRJ1Yj8w27BiSknWb2aTy8ue:gGd:6BY5UW9V7cNO86:T8O7G48wZ91d5KhMckvJ6WpIENG7vtVF818H",
                                                                      new Date(1562657742532L),
                                                                      "T6ebmifPLl4HtYTN3kH9mwdSgMkSjmq6");
            DeviceEnrollment deviceenrollment2 = new DeviceEnrollment("547e346f-3160-4219-b3b5-cb1fa3ab8695",
                                                                      new Date(1562657747767L),
                                                                      new Date(1562657746002L),
                                                                      "T6ebmifPLl4HtYTN3kH9mwdSgMkSjmq6",
                                                                      "A-l2NVe09yMWt97MWCRJ1Yj8w27BiSknWb2aTy8ue:gGd:6BY5UW9V7cNO86:T8O7G48wZ91d5KhMckvJ6WpIENG7vtVF818H",
                                                                      new Date(1562657742532L),
                                                                      "T6ebmifPLl4HtYTN3kH9mwdSgMkSjmq6");
            DeviceEnrollment deviceenrollment3 = new DeviceEnrollment("1bc4797f-ca3d-4228-801d-e55c3cd38034",
                                                                      new Date(1562657748422L),
                                                                      new Date(1562657744567L),
                                                                      "T6ebmifPLl4HtYTN3kH9mwdSgMkSjmq6",
                                                                      "A-l2NVe09yMWt97MWCRJ1Yj8w27BiSknWb2aTy8ue:gGd:6BY5UW9V7cNO86:T8O7G48wZ91d5KhMckvJ6WpIENG7vtVF818H",
                                                                      new Date(1562657748242L),
                                                                      "T6ebmifPLl4HtYTN3kH9mwdSgMkSjmq6");
            assertNotNull(deviceenrollment1);
            assertNotNull(deviceenrollment2);
            assertNotNull(deviceenrollment3);
            assertNotSame(deviceenrollment2, deviceenrollment1);
            assertNotSame(deviceenrollment3, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment1, deviceenrollment2);
            assertEquals(deviceenrollment1, deviceenrollment1);
            assertFalse(deviceenrollment1.equals(null));
            assertNotEquals(deviceenrollment3, deviceenrollment1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
