// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantApiKey.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantApiKey {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("5cc1ad15aa5e8e57d330ac5269a987d5",
                                                                   new Date(1562657749765L), -54,
                                                                   "5cc1ad15aa5e8e57d330ac5269a987d5",
                                                                   "f8a5c0ef-66df-4fdb-88ae-c386db210236", -98,
                                                                   "3148591c-3548-40ed-ae0a-e6a53c465306",
                                                                   "5cc1ad15aa5e8e57d330ac5269a987d5",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1562657746985L));
            SubtenantApiKey subtenantapikey2 = subtenantapikey1.clone();
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("5cc1ad15aa5e8e57d330ac5269a987d5",
                                                                   new Date(1562657746618L), -77,
                                                                   "5cc1ad15aa5e8e57d330ac5269a987d5",
                                                                   "71b77cfa-c01d-4c66-a813-0e7e61e8d414", -100,
                                                                   "2bd38510-119b-4590-862b-70b24543690c",
                                                                   "5cc1ad15aa5e8e57d330ac5269a987d5",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1562657751801L));
            SubtenantApiKey subtenantapikey2 = new SubtenantApiKey("5cc1ad15aa5e8e57d330ac5269a987d5",
                                                                   new Date(1562657746618L), -77,
                                                                   "5cc1ad15aa5e8e57d330ac5269a987d5",
                                                                   "71b77cfa-c01d-4c66-a813-0e7e61e8d414", -100,
                                                                   "2bd38510-119b-4590-862b-70b24543690c",
                                                                   "5cc1ad15aa5e8e57d330ac5269a987d5",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1562657751801L));
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2.hashCode(), subtenantapikey1.hashCode());
            int hashCode = subtenantapikey1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantapikey1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantApiKey subtenantapikey = new SubtenantApiKey("5cc1ad15aa5e8e57d330ac5269a987d5",
                                                              new Date(1562657747309L), -53,
                                                              "5cc1ad15aa5e8e57d330ac5269a987d5",
                                                              "6a6f84fa-b4cc-48f5-ac9e-19435281a8e3", 89,
                                                              "e7e65702-9f28-4fbb-99e4-5aeff26e67cc",
                                                              "5cc1ad15aa5e8e57d330ac5269a987d5",
                                                              SubtenantApiKeyStatus.getDefault(),
                                                              new Date(1562657746691L));
        assertTrue(subtenantapikey.isValid());
        SubtenantApiKey subtenantapikeyInvalid = new SubtenantApiKey(null, new Date(1562657751240L), -20,
                                                                     "\fbDå˜¯4Dæ½°?ã¸€?[M4Tî¨?4\u00114á‘Ÿ\u001bbî¾›bb\u00154b(-44î´Ÿ\u0013[b\u001eîž¼ëš¤<bb4\u001bb:U\u000e44b/bNb4\u001dçˆ±î¬™,\u001aì—™å‡ ^@",
                                                                     "12b36cf9-af0a-44af-a4bd-bf29307c5584", -14, null,
                                                                     "\fbDå˜¯4Dæ½°?ã¸€?[M4Tî¨?4\u00114á‘Ÿ\u001bbî¾›bb\u00154b(-44î´Ÿ\u0013[b\u001eîž¼ëš¤<bb4\u001bb:U\u000e44b/bNb4\u001dçˆ±î¬™,\u001aì—™å‡ ^@",
                                                                     SubtenantApiKeyStatus.getDefault(),
                                                                     new Date(1562657751176L));
        assertFalse(subtenantapikeyInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("5cc1ad15aa5e8e57d330ac5269a987d5",
                                                                   new Date(1562657743716L), -36,
                                                                   "5cc1ad15aa5e8e57d330ac5269a987d5",
                                                                   "e66eae8b-7670-49db-938a-f456d784c585", 104,
                                                                   "3f38c5ae-4192-4081-8d95-16b3dfc6fe0a",
                                                                   "5cc1ad15aa5e8e57d330ac5269a987d5",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1562657745487L));
            SubtenantApiKey subtenantapikey2 = new SubtenantApiKey("5cc1ad15aa5e8e57d330ac5269a987d5",
                                                                   new Date(1562657743716L), -36,
                                                                   "5cc1ad15aa5e8e57d330ac5269a987d5",
                                                                   "e66eae8b-7670-49db-938a-f456d784c585", 104,
                                                                   "3f38c5ae-4192-4081-8d95-16b3dfc6fe0a",
                                                                   "5cc1ad15aa5e8e57d330ac5269a987d5",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1562657745487L));
            SubtenantApiKey subtenantapikey3 = new SubtenantApiKey("5cc1ad15aa5e8e57d330ac5269a987d5",
                                                                   new Date(1562657746419L), -26,
                                                                   "5cc1ad15aa5e8e57d330ac5269a987d5",
                                                                   "365f8f7f-4869-4834-abe0-8a849284e7ac", -68,
                                                                   "b6ae3936-6e2b-4585-996a-de21769f48a0",
                                                                   "5cc1ad15aa5e8e57d330ac5269a987d5",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1562657743036L));
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotNull(subtenantapikey3);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertNotSame(subtenantapikey3, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey1, subtenantapikey2);
            assertEquals(subtenantapikey1, subtenantapikey1);
            assertFalse(subtenantapikey1.equals(null));
            assertNotEquals(subtenantapikey3, subtenantapikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
