// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model User.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestUser {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            User user1 = new User("4fe3ed46883d07edae68d4aee4a2a477", null, "4e75adea-0d1e-4a4b-9727-8b6b79dfa640",
                                  new Date(1571831496650L), -63, null, "14086.688c1@2fddd.me", false,
                                  "c03b6569-31d7-4920-b2f3-a0e4049fb312", "4fe3ed46883d07edae68d4aee4a2a477", false,
                                  false, true, 13, null, null, "13ac6f07-4b3c-4c2b-aa65-5252b41f5d7e", 94,
                                  "cee7a0e3-1dd6-4ff8-beed-89bbb73ad8c4", UserStatus.getDefault(), null,
                                  new Date(1571831493566L), "=_Do-Z=");
            User user2 = user1.clone();
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotSame(user2, user1);
            assertEquals(user2, user1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            User user1 = new User("4fe3ed46883d07edae68d4aee4a2a477", null, "6e8e70f9-e34f-466b-bb87-0d6b1450bb48",
                                  new Date(1571831491148L), 3, null, "cac21.fcb09@bc5ce.me", false,
                                  "c8eb7ec8-66b9-4825-9b2b-53eb63b6f643", "4fe3ed46883d07edae68d4aee4a2a477", true,
                                  true, true, -94, null, null, "6e376692-fc9c-407e-9438-79e6adc0a588", 69,
                                  "5f2ef817-5778-42b6-915e-482e6a5f4650", UserStatus.getDefault(), null,
                                  new Date(1571831493343L), "=_Do-Z=");
            User user2 = new User("4fe3ed46883d07edae68d4aee4a2a477", null, "6e8e70f9-e34f-466b-bb87-0d6b1450bb48",
                                  new Date(1571831491148L), 3, null, "cac21.fcb09@bc5ce.me", false,
                                  "c8eb7ec8-66b9-4825-9b2b-53eb63b6f643", "4fe3ed46883d07edae68d4aee4a2a477", true,
                                  true, true, -94, null, null, "6e376692-fc9c-407e-9438-79e6adc0a588", 69,
                                  "5f2ef817-5778-42b6-915e-482e6a5f4650", UserStatus.getDefault(), null,
                                  new Date(1571831493343L), "=_Do-Z=");
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotSame(user2, user1);
            assertEquals(user2, user1);
            assertEquals(user2.hashCode(), user1.hashCode());
            int hashCode = user1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, user1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        User user = new User("4fe3ed46883d07edae68d4aee4a2a477", null, "15f5ae5b-e7a2-4ee0-afb3-a96e4c4c3893",
                             new Date(1571831494690L), 63, null, "347a6.32f4f@65ee3.fr", false,
                             "5f2f622f-702a-4dd3-aeb2-78af07beb086", "4fe3ed46883d07edae68d4aee4a2a477", true, false,
                             false, -30, null, null, "0d4afe6c-10d1-4ea1-bca8-020892508c45", 95,
                             "dd19ecf6-c419-45bb-925e-8a1b3c16a033", UserStatus.getDefault(), null,
                             new Date(1571831487278L), "=_Do-Z=");
        assertTrue(user.isValid());
        User userInvalid = new User("111bb155cà³…51?15â¦’15ZJcbbQc#é ·1\u0010\u001fFC55?O5á«¢D5\u0001å³°5*â‡´=c15cB5cDbá°²5?5ã¼ºèˆ¦1b1",
                                    null, "d739102e-cf45-46c8-9dfc-0c0fd461d143", new Date(1571831492045L), -90, null,
                                    null, true,
                                    "31e6b8fa-5e3a-4669-8d3a-4616303094f930d1828d-7813-4be1-bc0d-ca400b4a8fe0a28d1c45-4330-4d97-8e9d-e116d6db9d31",
                                    "111bb155cà³…51?15â¦’15ZJcbbQc#é ·1\u0010\u001fFC55?O5á«¢D5\u0001å³°5*â‡´=c15cB5cDbá°²5?5ã¼ºèˆ¦1b1",
                                    true, false, true, 73, null, null, "f3505d8b-ab1c-46fe-a181-54326b3613d1", 8,
                                    "e0d50f4a-7e84-4059-8d37-d4b4b4a561ba462dd57a-417f-4cb4-b6ab-53918c2912e13161a034-d0ef-4c69-8e51-1c996c8b5996",
                                    UserStatus.getDefault(), null, new Date(1571831493632L),
                                    "äž”ië?—A\u001b8\u0006]hdMK[^AaSLà³¢IT\u0007OO^ëº«)5â‰?:fmè‚?\\\\\u000eKK[@á˜„6ä™•`3@&Vl?(ç?›?^`ì¸”[I\u0010âŒ‰`6næ“?h");
        assertFalse(userInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            User user1 = new User("4fe3ed46883d07edae68d4aee4a2a477", null, "599a7275-8104-480e-a56e-468280156b33",
                                  new Date(1571831495756L), -38, null, "19d22.b8a49@9c6b9.me", false,
                                  "b86fa486-cf74-48ca-a4e6-8ee82a2110bc", "4fe3ed46883d07edae68d4aee4a2a477", false,
                                  true, true, -41, null, null, "cbcac77a-23d5-4dd4-ad11-0fb44fb82fde", -85,
                                  "cd86164a-3873-4c42-9e6e-f8476d55728a", UserStatus.getDefault(), null,
                                  new Date(1571831488344L), "=_Do-Z=");
            User user2 = new User("4fe3ed46883d07edae68d4aee4a2a477", null, "599a7275-8104-480e-a56e-468280156b33",
                                  new Date(1571831495756L), -38, null, "19d22.b8a49@9c6b9.me", false,
                                  "b86fa486-cf74-48ca-a4e6-8ee82a2110bc", "4fe3ed46883d07edae68d4aee4a2a477", false,
                                  true, true, -41, null, null, "cbcac77a-23d5-4dd4-ad11-0fb44fb82fde", -85,
                                  "cd86164a-3873-4c42-9e6e-f8476d55728a", UserStatus.getDefault(), null,
                                  new Date(1571831488344L), "=_Do-Z=");
            User user3 = new User("4fe3ed46883d07edae68d4aee4a2a477", null, "460f018a-7ea8-482e-ad60-2dd8a8761137",
                                  new Date(1571831487009L), 16, null, "76aa5.e624c@224e6.fr", false,
                                  "23884112-ad18-4685-8eb0-069967bdc646", "4fe3ed46883d07edae68d4aee4a2a477", false,
                                  true, true, -36, null, null, "9a87700a-c574-4f94-9641-81f85b1464a2", 85,
                                  "de792b44-cc35-4cd9-ac00-8c9bbadd68c6", UserStatus.getDefault(), null,
                                  new Date(1571831491539L), "=_Do-Z=");
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotNull(user3);
            assertNotSame(user2, user1);
            assertNotSame(user3, user1);
            assertEquals(user2, user1);
            assertEquals(user2, user1);
            assertEquals(user1, user2);
            assertEquals(user1, user1);
            assertFalse(user1.equals(null));
            assertNotEquals(user3, user1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
