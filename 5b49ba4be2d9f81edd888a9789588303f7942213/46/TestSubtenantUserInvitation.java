// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantUserInvitation.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantUserInvitation {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantUserInvitation subtenantuserinvitation1 = new SubtenantUserInvitation("4fe3ed46883d07edae68d4aee4a2a477",
                                                                                           new Date(1571831494572L),
                                                                                           "d20b1.332b3@908eb.fr",
                                                                                           new Date(1571831494421L),
                                                                                           "4fe3ed46883d07edae68d4aee4a2a477",
                                                                                           null,
                                                                                           new Date(1571831490348L),
                                                                                           "4fe3ed46883d07edae68d4aee4a2a477");
            SubtenantUserInvitation subtenantuserinvitation2 = subtenantuserinvitation1.clone();
            assertNotNull(subtenantuserinvitation1);
            assertNotNull(subtenantuserinvitation2);
            assertNotSame(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantUserInvitation subtenantuserinvitation1 = new SubtenantUserInvitation("4fe3ed46883d07edae68d4aee4a2a477",
                                                                                           new Date(1571831493769L),
                                                                                           "ee30d.ae4b9@364a4.fr",
                                                                                           new Date(1571831489385L),
                                                                                           "4fe3ed46883d07edae68d4aee4a2a477",
                                                                                           null,
                                                                                           new Date(1571831496118L),
                                                                                           "4fe3ed46883d07edae68d4aee4a2a477");
            SubtenantUserInvitation subtenantuserinvitation2 = new SubtenantUserInvitation("4fe3ed46883d07edae68d4aee4a2a477",
                                                                                           new Date(1571831493769L),
                                                                                           "ee30d.ae4b9@364a4.fr",
                                                                                           new Date(1571831489385L),
                                                                                           "4fe3ed46883d07edae68d4aee4a2a477",
                                                                                           null,
                                                                                           new Date(1571831496118L),
                                                                                           "4fe3ed46883d07edae68d4aee4a2a477");
            assertNotNull(subtenantuserinvitation1);
            assertNotNull(subtenantuserinvitation2);
            assertNotSame(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2.hashCode(), subtenantuserinvitation1.hashCode());
            int hashCode = subtenantuserinvitation1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantuserinvitation1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantUserInvitation subtenantuserinvitation = new SubtenantUserInvitation("4fe3ed46883d07edae68d4aee4a2a477",
                                                                                      new Date(1571831490723L),
                                                                                      "5c0c1.3be97@eba1b.fr",
                                                                                      new Date(1571831492971L),
                                                                                      "4fe3ed46883d07edae68d4aee4a2a477",
                                                                                      null, new Date(1571831496478L),
                                                                                      "4fe3ed46883d07edae68d4aee4a2a477");
        assertTrue(subtenantuserinvitation.isValid());
        SubtenantUserInvitation subtenantuserinvitationInvalid = new SubtenantUserInvitation(null,
                                                                                             new Date(1571831493872L),
                                                                                             null,
                                                                                             new Date(1571831491010L),
                                                                                             "111bb155c೅51?15⦒15ZJcbbQc#頷1\u0010\u001fFC55?O5᫢D5\u0001峰5*⇴=c15cB5cDbᰲ5?5㼺舦1b1",
                                                                                             null,
                                                                                             new Date(1571831492160L),
                                                                                             "111bb155c೅51?15⦒15ZJcbbQc#頷1\u0010\u001fFC55?O5᫢D5\u0001峰5*⇴=c15cB5cDbᰲ5?5㼺舦1b1");
        assertFalse(subtenantuserinvitationInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantUserInvitation subtenantuserinvitation1 = new SubtenantUserInvitation("4fe3ed46883d07edae68d4aee4a2a477",
                                                                                           new Date(1571831487336L),
                                                                                           "8ce5f.3ee87@fd2fb.fr",
                                                                                           new Date(1571831489094L),
                                                                                           "4fe3ed46883d07edae68d4aee4a2a477",
                                                                                           null,
                                                                                           new Date(1571831496353L),
                                                                                           "4fe3ed46883d07edae68d4aee4a2a477");
            SubtenantUserInvitation subtenantuserinvitation2 = new SubtenantUserInvitation("4fe3ed46883d07edae68d4aee4a2a477",
                                                                                           new Date(1571831487336L),
                                                                                           "8ce5f.3ee87@fd2fb.fr",
                                                                                           new Date(1571831489094L),
                                                                                           "4fe3ed46883d07edae68d4aee4a2a477",
                                                                                           null,
                                                                                           new Date(1571831496353L),
                                                                                           "4fe3ed46883d07edae68d4aee4a2a477");
            SubtenantUserInvitation subtenantuserinvitation3 = new SubtenantUserInvitation("4fe3ed46883d07edae68d4aee4a2a477",
                                                                                           new Date(1571831494108L),
                                                                                           "f1013.2b956@60111.fr",
                                                                                           new Date(1571831496532L),
                                                                                           "4fe3ed46883d07edae68d4aee4a2a477",
                                                                                           null,
                                                                                           new Date(1571831488972L),
                                                                                           "4fe3ed46883d07edae68d4aee4a2a477");
            assertNotNull(subtenantuserinvitation1);
            assertNotNull(subtenantuserinvitation2);
            assertNotNull(subtenantuserinvitation3);
            assertNotSame(subtenantuserinvitation2, subtenantuserinvitation1);
            assertNotSame(subtenantuserinvitation3, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation1, subtenantuserinvitation2);
            assertEquals(subtenantuserinvitation1, subtenantuserinvitation1);
            assertFalse(subtenantuserinvitation1.equals(null));
            assertNotEquals(subtenantuserinvitation3, subtenantuserinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
