// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantApiKey.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantApiKey {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("4fe3ed46883d07edae68d4aee4a2a477",
                                                                   new Date(1571831491198L), -20,
                                                                   "4fe3ed46883d07edae68d4aee4a2a477",
                                                                   "23839c28-b76a-4b0c-a549-859dac0328c8", -49,
                                                                   "2d345058-fbcd-4daa-a116-eeb677f99d89",
                                                                   "4fe3ed46883d07edae68d4aee4a2a477",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1571831495133L));
            SubtenantApiKey subtenantapikey2 = subtenantapikey1.clone();
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("4fe3ed46883d07edae68d4aee4a2a477",
                                                                   new Date(1571831494803L), 9,
                                                                   "4fe3ed46883d07edae68d4aee4a2a477",
                                                                   "80a84901-c2f3-46f6-b533-ac5d026486e2", 49,
                                                                   "ea6347bf-ac76-472e-9fc1-79ba935c7409",
                                                                   "4fe3ed46883d07edae68d4aee4a2a477",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1571831495736L));
            SubtenantApiKey subtenantapikey2 = new SubtenantApiKey("4fe3ed46883d07edae68d4aee4a2a477",
                                                                   new Date(1571831494803L), 9,
                                                                   "4fe3ed46883d07edae68d4aee4a2a477",
                                                                   "80a84901-c2f3-46f6-b533-ac5d026486e2", 49,
                                                                   "ea6347bf-ac76-472e-9fc1-79ba935c7409",
                                                                   "4fe3ed46883d07edae68d4aee4a2a477",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1571831495736L));
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2.hashCode(), subtenantapikey1.hashCode());
            int hashCode = subtenantapikey1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantapikey1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantApiKey subtenantapikey = new SubtenantApiKey("4fe3ed46883d07edae68d4aee4a2a477",
                                                              new Date(1571831495636L), 71,
                                                              "4fe3ed46883d07edae68d4aee4a2a477",
                                                              "747f9234-b0f2-4214-a312-7cbf27889312", 45,
                                                              "a622825d-9150-42b3-b908-b910d894e62e",
                                                              "4fe3ed46883d07edae68d4aee4a2a477",
                                                              SubtenantApiKeyStatus.getDefault(),
                                                              new Date(1571831487704L));
        assertTrue(subtenantapikey.isValid());
        SubtenantApiKey subtenantapikeyInvalid = new SubtenantApiKey(null, new Date(1571831492115L), -34,
                                                                     "111bb155c೅51?15⦒15ZJcbbQc#頷1\u0010\u001fFC55?O5᫢D5\u0001峰5*⇴=c15cB5cDbᰲ5?5㼺舦1b1",
                                                                     "73d1fa63-074a-42c4-ab2f-951f517d8671", -103, null,
                                                                     "111bb155c೅51?15⦒15ZJcbbQc#頷1\u0010\u001fFC55?O5᫢D5\u0001峰5*⇴=c15cB5cDbᰲ5?5㼺舦1b1",
                                                                     SubtenantApiKeyStatus.getDefault(),
                                                                     new Date(1571831491994L));
        assertFalse(subtenantapikeyInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("4fe3ed46883d07edae68d4aee4a2a477",
                                                                   new Date(1571831492054L), -49,
                                                                   "4fe3ed46883d07edae68d4aee4a2a477",
                                                                   "16e65d8c-6781-41c3-85f4-55c4f9f042b1", -38,
                                                                   "d7897079-6bb9-4539-b746-0d50072ff0f2",
                                                                   "4fe3ed46883d07edae68d4aee4a2a477",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1571831492207L));
            SubtenantApiKey subtenantapikey2 = new SubtenantApiKey("4fe3ed46883d07edae68d4aee4a2a477",
                                                                   new Date(1571831492054L), -49,
                                                                   "4fe3ed46883d07edae68d4aee4a2a477",
                                                                   "16e65d8c-6781-41c3-85f4-55c4f9f042b1", -38,
                                                                   "d7897079-6bb9-4539-b746-0d50072ff0f2",
                                                                   "4fe3ed46883d07edae68d4aee4a2a477",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1571831492207L));
            SubtenantApiKey subtenantapikey3 = new SubtenantApiKey("4fe3ed46883d07edae68d4aee4a2a477",
                                                                   new Date(1571831493515L), -65,
                                                                   "4fe3ed46883d07edae68d4aee4a2a477",
                                                                   "22f1a679-c251-406f-8402-67104ed860b3", 41,
                                                                   "339fabe6-0b9e-4f52-bd40-cece3dc416b6",
                                                                   "4fe3ed46883d07edae68d4aee4a2a477",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1571831493885L));
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotNull(subtenantapikey3);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertNotSame(subtenantapikey3, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey1, subtenantapikey2);
            assertEquals(subtenantapikey1, subtenantapikey1);
            assertFalse(subtenantapikey1.equals(null));
            assertNotEquals(subtenantapikey3, subtenantapikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
