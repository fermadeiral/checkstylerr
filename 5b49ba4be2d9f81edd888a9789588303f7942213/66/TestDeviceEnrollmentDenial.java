// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEnrollmentDenial.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEnrollmentDenial {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("4fe3ed46883d07edae68d4aee4a2a477",
                                                                                        new Date(1571831488339L),
                                                                                        "b2497c93-eb56-46c6-ab71-7b30d12fabfd",
                                                                                        "4fe3ed46883d07edae68d4aee4a2a477",
                                                                                        "4fe3ed46883d07edae68d4aee4a2a477");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = deviceenrollmentdenial1.clone();
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("4fe3ed46883d07edae68d4aee4a2a477",
                                                                                        new Date(1571831493941L),
                                                                                        "4076e8ab-1e61-42e5-8d31-88675389631c",
                                                                                        "4fe3ed46883d07edae68d4aee4a2a477",
                                                                                        "4fe3ed46883d07edae68d4aee4a2a477");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = new DeviceEnrollmentDenial("4fe3ed46883d07edae68d4aee4a2a477",
                                                                                        new Date(1571831493941L),
                                                                                        "4076e8ab-1e61-42e5-8d31-88675389631c",
                                                                                        "4fe3ed46883d07edae68d4aee4a2a477",
                                                                                        "4fe3ed46883d07edae68d4aee4a2a477");
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2.hashCode(), deviceenrollmentdenial1.hashCode());
            int hashCode = deviceenrollmentdenial1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceenrollmentdenial1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEnrollmentDenial deviceenrollmentdenial = new DeviceEnrollmentDenial("4fe3ed46883d07edae68d4aee4a2a477",
                                                                                   new Date(1571831494583L),
                                                                                   "d2e35e74-e5dc-4c6d-b872-547457355513",
                                                                                   "4fe3ed46883d07edae68d4aee4a2a477",
                                                                                   "4fe3ed46883d07edae68d4aee4a2a477");
        assertTrue(deviceenrollmentdenial.isValid());
        DeviceEnrollmentDenial deviceenrollmentdenialInvalid = new DeviceEnrollmentDenial("111bb155c೅51?15⦒15ZJcbbQc#頷1\u0010\u001fFC55?O5᫢D5\u0001峰5*⇴=c15cB5cDbᰲ5?5㼺舦1b1",
                                                                                          new Date(1571831487467L),
                                                                                          "1140a0e8-1c7b-4439-9b91-5bc60e26ad32",
                                                                                          "111bb155c೅51?15⦒15ZJcbbQc#頷1\u0010\u001fFC55?O5᫢D5\u0001峰5*⇴=c15cB5cDbᰲ5?5㼺舦1b1",
                                                                                          "111bb155c೅51?15⦒15ZJcbbQc#頷1\u0010\u001fFC55?O5᫢D5\u0001峰5*⇴=c15cB5cDbᰲ5?5㼺舦1b1");
        assertFalse(deviceenrollmentdenialInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("4fe3ed46883d07edae68d4aee4a2a477",
                                                                                        new Date(1571831492081L),
                                                                                        "900f394e-c6fe-4720-9d72-65c33fba0668",
                                                                                        "4fe3ed46883d07edae68d4aee4a2a477",
                                                                                        "4fe3ed46883d07edae68d4aee4a2a477");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = new DeviceEnrollmentDenial("4fe3ed46883d07edae68d4aee4a2a477",
                                                                                        new Date(1571831492081L),
                                                                                        "900f394e-c6fe-4720-9d72-65c33fba0668",
                                                                                        "4fe3ed46883d07edae68d4aee4a2a477",
                                                                                        "4fe3ed46883d07edae68d4aee4a2a477");
            DeviceEnrollmentDenial deviceenrollmentdenial3 = new DeviceEnrollmentDenial("4fe3ed46883d07edae68d4aee4a2a477",
                                                                                        new Date(1571831492547L),
                                                                                        "d6e35734-47e3-4367-9cab-1e4473c4318a",
                                                                                        "4fe3ed46883d07edae68d4aee4a2a477",
                                                                                        "4fe3ed46883d07edae68d4aee4a2a477");
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotNull(deviceenrollmentdenial3);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertNotSame(deviceenrollmentdenial3, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial1, deviceenrollmentdenial2);
            assertEquals(deviceenrollmentdenial1, deviceenrollmentdenial1);
            assertFalse(deviceenrollmentdenial1.equals(null));
            assertNotEquals(deviceenrollmentdenial3, deviceenrollmentdenial1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
