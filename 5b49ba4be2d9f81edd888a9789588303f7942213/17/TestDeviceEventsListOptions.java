// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import com.arm.mbed.cloud.sdk.common.Order;
import com.arm.mbed.cloud.sdk.common.listing.ListOptionsEncoder;
import com.arm.mbed.cloud.sdk.common.listing.filtering.FilterOperator;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEventsListOptions.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEventsListOptions {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEventsListOptions deviceeventslistoptions1 = new DeviceEventsListOptions(Integer.valueOf(-48),
                                                                                           Long.valueOf(-33),
                                                                                           Order.getDefault(),
                                                                                           "a3c1576c-2961-4b85-b2f1-310aa038e3df",
                                                                                           null, null);
            DeviceEventsListOptions deviceeventslistoptions2 = deviceeventslistoptions1.clone();
            assertNotNull(deviceeventslistoptions1);
            assertNotNull(deviceeventslistoptions2);
            assertNotSame(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2, deviceeventslistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the filters method.
     */
    @SuppressWarnings({ "boxing", "resource" })
    @Test
    public void testFilters() {
        try {
            DeviceEventsListOptions option = new DeviceEventsListOptions().equalToDeviceId("d610f251-b92f-473c-80c1-b2c65428c3b4")
                                                                          .notEqualToDeviceId("720c1421-f688-4bea-8891-451f45e5741f")
                                                                          .inDeviceIds(Arrays.asList("1a8bd3fa-ee74-48b4-abd5-cc0407a0f319",
                                                                                                     "b5517685-e5f9-497d-86e9-c24794996b16",
                                                                                                     "c3cff635-719c-4d38-885f-9ef457e501a6",
                                                                                                     "e6113641-defd-4997-9d42-5e8fb4fff6df"))
                                                                          .notInDeviceIds(Arrays.asList("f10f7344-31ea-41ae-959c-063a409d8e7b",
                                                                                                        "cb25fd07-df88-4b75-aa92-e352b32f581a"))
                                                                          .equalToDescription("b455ee30-9998-42d9-855a-7f2656dfc70c")
                                                                          .notEqualToDescription("f1e92d01-4766-40ef-b1f1-5d6957720dad")
                                                                          .inDescriptions(Arrays.asList("192aca3d-e438-48cc-a119-ae69865afcd8",
                                                                                                        "16c6f229-a943-4a11-8ac9-4bd264969057",
                                                                                                        "c484d41f-98b2-4b1f-9104-f5820a039c2c",
                                                                                                        "fd1be313-b8b2-428f-926a-f67313828582",
                                                                                                        "2d31f611-a903-421a-83b2-aa34a0f02f30",
                                                                                                        "020701dc-7c4b-45e8-8e25-ea3b97d193db"))
                                                                          .notInDescriptions(Arrays.asList("f62845fd-6c3b-4342-80cc-9e32abeab78d",
                                                                                                           "7d2101e7-0394-451d-bae1-57ef14a409be",
                                                                                                           "00a6ea4c-9cfb-482b-9450-bd72e8087a06",
                                                                                                           "f9f7b7d5-7441-4a3e-9f21-beb33d84d38e",
                                                                                                           "c993fd53-e136-4c2e-870b-c96e2273d370"))
                                                                          .inDateTimes(Arrays.asList(new Date(1571831492411L),
                                                                                                     new Date(1571831494367L),
                                                                                                     new Date(1571831489290L),
                                                                                                     new Date(1571831498022L)))
                                                                          .notInDateTimes(Arrays.asList(new Date(1571831495863L),
                                                                                                        new Date(1571831495921L),
                                                                                                        new Date(1571831490379L),
                                                                                                        new Date(1571831497548L),
                                                                                                        new Date(1571831490031L)))
                                                                          .lessThanDateTime(new Date(1571831495911L))
                                                                          .greaterThanDateTime(new Date(1571831497033L))
                                                                          .equalToStateChange(Boolean.FALSE)
                                                                          .notEqualToStateChange(Boolean.FALSE)
                                                                          .equalToId("4a86a29b-3fe4-4665-a45b-8dab6391932e")
                                                                          .notEqualToId("3e3df3af-4b29-4cd3-ab76-6dd82fa6bc78")
                                                                          .inIds(Arrays.asList("b6690be0-734c-4179-a4b0-483e22db2fcc",
                                                                                               "9a097473-6b37-4028-857f-873b63556b36",
                                                                                               "3e41d11c-a37c-4091-ac4b-83c1e35b84a2",
                                                                                               "59da3c89-944d-4a39-a501-40b384294ce0",
                                                                                               "6d5b81cd-8018-4ba8-981a-22c9344d9f45"))
                                                                          .notInIds(Arrays.asList("52a6e8a1-8651-4d9f-b8f3-2a2aeb3536bd",
                                                                                                  "6b5d4b8f-6a4e-4afe-a039-d3a22d921930",
                                                                                                  "2be1fccb-e05a-4e6b-9b5f-0dc964df033a",
                                                                                                  "31ba2395-12ae-42da-b9dc-f6d981e9e6a3",
                                                                                                  "0d6ad3f4-21f6-4b5b-b608-eac4c6601abd",
                                                                                                  "aebc8fda-34da-4af9-9ec1-3c67a0b7041f",
                                                                                                  "b9c4f85e-1c22-4e1c-8672-43810d1cda35",
                                                                                                  "1f8326ad-1e38-48a3-9227-a5817db55754"))
                                                                          .equalToEventType("8f71d0b4-ff1b-4a08-af2e-b2192ab87fb4")
                                                                          .notEqualToEventType("3fe6fe29-7a4c-4fb1-b637-a92a94083050")
                                                                          .inEventTypes(Arrays.asList("e166fea3-976e-4c3f-b3d5-45ad96051393",
                                                                                                      "b5471cb7-a5f9-48a5-8446-391a3fe98684",
                                                                                                      "d503369a-90d4-4bf0-8147-15003a001089",
                                                                                                      "985f0b87-3977-438c-877b-241f5f6adae5"))
                                                                          .notInEventTypes(Arrays.asList("5cb971e0-8e16-430f-9d26-608a14fcccbc",
                                                                                                         "55236904-7ff1-4793-b4e4-ab9bb2f1777f",
                                                                                                         "4a656183-36e1-4632-9eff-16f01e648b54",
                                                                                                         "d83b6039-e790-42fe-906d-f51ead482410",
                                                                                                         "13ac7f5a-3ce6-48cb-968e-81124f612052"));
            assertTrue(option.hasFilters());
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID, FilterOperator.EQUAL));
            assertNotNull(option.getDeviceIdFilters());
            assertEquals("d610f251-b92f-473c-80c1-b2c65428c3b4",
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDeviceIdFilters());
            assertEquals("720c1421-f688-4bea-8891-451f45e5741f",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID, FilterOperator.IN));
            assertNotNull(option.getDeviceIdFilters());
            assertEquals(Arrays.asList("1a8bd3fa-ee74-48b4-abd5-cc0407a0f319", "b5517685-e5f9-497d-86e9-c24794996b16",
                                       "c3cff635-719c-4d38-885f-9ef457e501a6", "e6113641-defd-4997-9d42-5e8fb4fff6df"),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID,
                                                                 List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getDeviceIdFilters());
            assertEquals(Arrays.asList("f10f7344-31ea-41ae-959c-063a409d8e7b", "cb25fd07-df88-4b75-aa92-e352b32f581a"),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID,
                                                                    List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("b455ee30-9998-42d9-855a-7f2656dfc70c",
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("f1e92d01-4766-40ef-b1f1-5d6957720dad",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                       String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("192aca3d-e438-48cc-a119-ae69865afcd8", "16c6f229-a943-4a11-8ac9-4bd264969057",
                                       "c484d41f-98b2-4b1f-9104-f5820a039c2c", "fd1be313-b8b2-428f-926a-f67313828582",
                                       "2d31f611-a903-421a-83b2-aa34a0f02f30", "020701dc-7c4b-45e8-8e25-ea3b97d193db"),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                 List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("f62845fd-6c3b-4342-80cc-9e32abeab78d", "7d2101e7-0394-451d-bae1-57ef14a409be",
                                       "00a6ea4c-9cfb-482b-9450-bd72e8087a06", "f9f7b7d5-7441-4a3e-9f21-beb33d84d38e",
                                       "c993fd53-e136-4c2e-870b-c96e2273d370"),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME, FilterOperator.IN));
            assertNotNull(option.getDateTimeFilters());
            assertEquals(Arrays.asList(new Date(1571831492411L), new Date(1571831494367L), new Date(1571831489290L),
                                       new Date(1571831498022L)),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME,
                                                                 List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME, FilterOperator.NOT_IN));
            assertNotNull(option.getDateTimeFilters());
            assertEquals(Arrays.asList(new Date(1571831495863L), new Date(1571831495921L), new Date(1571831490379L),
                                       new Date(1571831497548L), new Date(1571831490031L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME,
                                                                    List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME, FilterOperator.LESS_THAN));
            assertNotNull(option.getDateTimeFilters());
            assertEquals(new Date(1571831495911L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME, FilterOperator.GREATER_THAN));
            assertNotNull(option.getDateTimeFilters());
            assertEquals(new Date(1571831497033L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE, FilterOperator.EQUAL));
            assertNotNull(option.getStateChangeFilters());
            assertEquals(Boolean.FALSE,
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE,
                                                                    Boolean.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getStateChangeFilters());
            assertEquals(Boolean.FALSE,
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE,
                                                                       Boolean.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, FilterOperator.EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("4a86a29b-3fe4-4665-a45b-8dab6391932e",
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("3e3df3af-4b29-4cd3-ab76-6dd82fa6bc78",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, FilterOperator.IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("b6690be0-734c-4179-a4b0-483e22db2fcc", "9a097473-6b37-4028-857f-873b63556b36",
                                       "3e41d11c-a37c-4091-ac4b-83c1e35b84a2", "59da3c89-944d-4a39-a501-40b384294ce0",
                                       "6d5b81cd-8018-4ba8-981a-22c9344d9f45"),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, List.class,
                                                                 option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("52a6e8a1-8651-4d9f-b8f3-2a2aeb3536bd", "6b5d4b8f-6a4e-4afe-a039-d3a22d921930",
                                       "2be1fccb-e05a-4e6b-9b5f-0dc964df033a", "31ba2395-12ae-42da-b9dc-f6d981e9e6a3",
                                       "0d6ad3f4-21f6-4b5b-b608-eac4c6601abd", "aebc8fda-34da-4af9-9ec1-3c67a0b7041f",
                                       "b9c4f85e-1c22-4e1c-8672-43810d1cda35", "1f8326ad-1e38-48a3-9227-a5817db55754"),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID,
                                                                    List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE, FilterOperator.EQUAL));
            assertNotNull(option.getEventTypeFilters());
            assertEquals("8f71d0b4-ff1b-4a08-af2e-b2192ab87fb4",
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE,
                                                                    String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getEventTypeFilters());
            assertEquals("3fe6fe29-7a4c-4fb1-b637-a92a94083050",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE,
                                                                       String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE, FilterOperator.IN));
            assertNotNull(option.getEventTypeFilters());
            assertEquals(Arrays.asList("e166fea3-976e-4c3f-b3d5-45ad96051393", "b5471cb7-a5f9-48a5-8446-391a3fe98684",
                                       "d503369a-90d4-4bf0-8147-15003a001089", "985f0b87-3977-438c-877b-241f5f6adae5"),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE,
                                                                 List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE, FilterOperator.NOT_IN));
            assertNotNull(option.getEventTypeFilters());
            assertEquals(Arrays.asList("5cb971e0-8e16-430f-9d26-608a14fcccbc", "55236904-7ff1-4793-b4e4-ab9bb2f1777f",
                                       "4a656183-36e1-4632-9eff-16f01e648b54", "d83b6039-e790-42fe-906d-f51ead482410",
                                       "13ac7f5a-3ce6-48cb-968e-81124f612052"),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE,
                                                                    List.class, option));
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEventsListOptions deviceeventslistoptions1 = new DeviceEventsListOptions(Integer.valueOf(-85),
                                                                                           Long.valueOf(43),
                                                                                           Order.getDefault(),
                                                                                           "8a88884f-fa66-4840-b88d-27649d63638c",
                                                                                           null, null);
            DeviceEventsListOptions deviceeventslistoptions2 = new DeviceEventsListOptions(Integer.valueOf(-85),
                                                                                           Long.valueOf(43),
                                                                                           Order.getDefault(),
                                                                                           "8a88884f-fa66-4840-b88d-27649d63638c",
                                                                                           null, null);
            assertNotNull(deviceeventslistoptions1);
            assertNotNull(deviceeventslistoptions2);
            assertNotSame(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2.hashCode(), deviceeventslistoptions1.hashCode());
            int hashCode = deviceeventslistoptions1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceeventslistoptions1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEventsListOptions deviceeventslistoptions1 = new DeviceEventsListOptions(Integer.valueOf(104),
                                                                                           Long.valueOf(61),
                                                                                           Order.getDefault(),
                                                                                           "d79071b3-223f-41f6-9463-74f3e1293bde",
                                                                                           null, null);
            DeviceEventsListOptions deviceeventslistoptions2 = new DeviceEventsListOptions(Integer.valueOf(104),
                                                                                           Long.valueOf(61),
                                                                                           Order.getDefault(),
                                                                                           "d79071b3-223f-41f6-9463-74f3e1293bde",
                                                                                           null, null);
            DeviceEventsListOptions deviceeventslistoptions3 = new DeviceEventsListOptions(Integer.valueOf(-67),
                                                                                           Long.valueOf(-44),
                                                                                           Order.getDefault(),
                                                                                           "10490c00-0c4a-49e0-87b1-dbecacac486d",
                                                                                           null, null);
            assertNotNull(deviceeventslistoptions1);
            assertNotNull(deviceeventslistoptions2);
            assertNotNull(deviceeventslistoptions3);
            assertNotSame(deviceeventslistoptions2, deviceeventslistoptions1);
            assertNotSame(deviceeventslistoptions3, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions1, deviceeventslistoptions2);
            assertEquals(deviceeventslistoptions1, deviceeventslistoptions1);
            assertFalse(deviceeventslistoptions1.equals(null));
            assertNotEquals(deviceeventslistoptions3, deviceeventslistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
