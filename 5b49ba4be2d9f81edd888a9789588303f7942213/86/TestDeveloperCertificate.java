// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.security.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeveloperCertificate.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeveloperCertificate {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("99050f8f-bf20-4a55-961c-00f8a3f111b0",
                                                                                  "c9bc1641-bec4-43f4-9087-7b32962e26d6",
                                                                                  new Date(1571831491235L),
                                                                                  "e81143f4-be47-4903-8e60-87bd3438faa6",
                                                                                  "407d47c6-fc54-4d49-b3c5-329c8c7c4118",
                                                                                  "4f53d522-6cd3-4388-ad07-f49d9172d713",
                                                                                  "0ff0ec85-228e-4dad-a56d-5190f1e13e8a",
                                                                                  "507f8381-96cc-4ef5-871d-cc0311824f71");
            DeveloperCertificate developercertificate2 = developercertificate1.clone();
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("7319ea2f-461b-4e1c-90d2-7206c8762532",
                                                                                  "7b50e47f-aca7-4e69-a5f5-7e0cb4025e49",
                                                                                  new Date(1571831489812L),
                                                                                  "9ad6b665-d869-4062-886a-243922bebc21",
                                                                                  "34a9a86e-8c43-4695-bada-5ae3d4512de9",
                                                                                  "dc338c12-0982-414d-ac7c-667914bfe8e5",
                                                                                  "554b30ae-f93c-4633-8079-7f20a443d1cf",
                                                                                  "72aed467-f191-40bc-bf0f-833cc203eec0");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("7319ea2f-461b-4e1c-90d2-7206c8762532",
                                                                                  "7b50e47f-aca7-4e69-a5f5-7e0cb4025e49",
                                                                                  new Date(1571831489812L),
                                                                                  "9ad6b665-d869-4062-886a-243922bebc21",
                                                                                  "34a9a86e-8c43-4695-bada-5ae3d4512de9",
                                                                                  "dc338c12-0982-414d-ac7c-667914bfe8e5",
                                                                                  "554b30ae-f93c-4633-8079-7f20a443d1cf",
                                                                                  "72aed467-f191-40bc-bf0f-833cc203eec0");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2.hashCode(), developercertificate1.hashCode());
            int hashCode = developercertificate1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, developercertificate1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeveloperCertificate developercertificate = new DeveloperCertificate("aa62039e-091b-4b75-bbc8-a22b23a14535",
                                                                             "463971f3-6a6f-4cbf-8383-81f74126d6d6",
                                                                             new Date(1571831490653L),
                                                                             "9f24d87a-970b-49b4-ba45-d014be7f2660",
                                                                             "02ad97f9-a382-4b5a-a052-1ea4d68a90fe",
                                                                             "dee7ce9d-a78e-43c2-940b-c61e6271b9a0",
                                                                             "c654062c-9135-48b1-8a69-b3c0620a2d95",
                                                                             "93a81a58-7006-46a8-8c75-683e269d8837");
        assertTrue(developercertificate.isValid());
        DeveloperCertificate developercertificateInvalid = new DeveloperCertificate("0ec979bf-d6b2-40ca-9236-0c89939dc0b7",
                                                                                    "4e138afa-b399-4e2d-b1ba-337dbe96c1ff",
                                                                                    new Date(1571831487426L),
                                                                                    "42af754a-56b9-4663-add6-a21042418cc1",
                                                                                    "2da3bacc-7f44-4724-a401-38381d70cc04",
                                                                                    "561f5e02-193a-400a-9acb-8f56a13916de",
                                                                                    null,
                                                                                    "f1e6910f-70bb-4e05-85fc-012108c78626");
        assertFalse(developercertificateInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("c5825d2a-1957-4e19-93f8-6071f4594f99",
                                                                                  "d2eba9e9-6959-4db3-8db9-9398b973dce6",
                                                                                  new Date(1571831494094L),
                                                                                  "ce485d90-a892-4eea-90da-f7293d3f3d1c",
                                                                                  "f2ec4091-540b-44c0-b5d4-e9979d061024",
                                                                                  "fc063810-1eaf-448a-9f4e-51faf47ceac3",
                                                                                  "6bef7040-0329-4b4a-a7ec-56a576962305",
                                                                                  "1f12d6a4-6b28-4400-ad8a-7c6b5f66b908");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("c5825d2a-1957-4e19-93f8-6071f4594f99",
                                                                                  "d2eba9e9-6959-4db3-8db9-9398b973dce6",
                                                                                  new Date(1571831494094L),
                                                                                  "ce485d90-a892-4eea-90da-f7293d3f3d1c",
                                                                                  "f2ec4091-540b-44c0-b5d4-e9979d061024",
                                                                                  "fc063810-1eaf-448a-9f4e-51faf47ceac3",
                                                                                  "6bef7040-0329-4b4a-a7ec-56a576962305",
                                                                                  "1f12d6a4-6b28-4400-ad8a-7c6b5f66b908");
            DeveloperCertificate developercertificate3 = new DeveloperCertificate("fabd3c7a-7dd8-47a0-87b6-6a8ef2e14ff3",
                                                                                  "8194e87b-1f29-4612-9bd5-a978a89a589c",
                                                                                  new Date(1571831491655L),
                                                                                  "8b162fb5-448e-45e6-8d68-fc4ce08ba25f",
                                                                                  "12e7af8e-e3de-43bf-bbb2-4282ceb69138",
                                                                                  "f78448f5-5666-43f9-844d-88c648440432",
                                                                                  "04dd355d-e479-421d-9b55-7524685478e5",
                                                                                  "0eeaf137-da51-41b2-822f-cdda87ab244b");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotNull(developercertificate3);
            assertNotSame(developercertificate2, developercertificate1);
            assertNotSame(developercertificate3, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate1, developercertificate2);
            assertEquals(developercertificate1, developercertificate1);
            assertFalse(developercertificate1.equals(null));
            assertNotEquals(developercertificate3, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
