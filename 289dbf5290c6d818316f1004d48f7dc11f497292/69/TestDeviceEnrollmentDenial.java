// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEnrollmentDenial.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEnrollmentDenial {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("d59604e858bddb5f6cc558017117112a",
                                                                                        new Date(1563781720378L),
                                                                                        "07ea2ce7-4e30-4a38-9ed9-1983b28af35e",
                                                                                        "d59604e858bddb5f6cc558017117112a",
                                                                                        "d59604e858bddb5f6cc558017117112a");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = deviceenrollmentdenial1.clone();
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("d59604e858bddb5f6cc558017117112a",
                                                                                        new Date(1563781715024L),
                                                                                        "c9dda4e8-ff99-4514-b244-885713903271",
                                                                                        "d59604e858bddb5f6cc558017117112a",
                                                                                        "d59604e858bddb5f6cc558017117112a");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = new DeviceEnrollmentDenial("d59604e858bddb5f6cc558017117112a",
                                                                                        new Date(1563781715024L),
                                                                                        "c9dda4e8-ff99-4514-b244-885713903271",
                                                                                        "d59604e858bddb5f6cc558017117112a",
                                                                                        "d59604e858bddb5f6cc558017117112a");
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2.hashCode(), deviceenrollmentdenial1.hashCode());
            int hashCode = deviceenrollmentdenial1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceenrollmentdenial1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEnrollmentDenial deviceenrollmentdenial = new DeviceEnrollmentDenial("d59604e858bddb5f6cc558017117112a",
                                                                                   new Date(1563781714712L),
                                                                                   "0ece852b-b3f6-4b52-aaed-efa2bf6bee35",
                                                                                   "d59604e858bddb5f6cc558017117112a",
                                                                                   "d59604e858bddb5f6cc558017117112a");
        assertTrue(deviceenrollmentdenial.isValid());
        DeviceEnrollmentDenial deviceenrollmentdenialInvalid = new DeviceEnrollmentDenial("ï¦†\u0006\u0007Åžç™°B3\u0014\u001c!;á¶¨\u0016'3N`\u00003\f3C3[Î¯3;3ã‘™í?¼Ë§\u0002\u0004'å³ 3%\u001cæ‡º\bXëŒ‘ä¨‰\u000bRW=/ã¥‚\u0004å©¯Z\u000e\u0018\u001c\u001b$$Eã‰ 33ï¹“è?œ",
                                                                                          new Date(1563781723815L),
                                                                                          "9769e2b6-9290-4809-84f3-7864d7c0eeb4",
                                                                                          "ï¦†\u0006\u0007Åžç™°B3\u0014\u001c!;á¶¨\u0016'3N`\u00003\f3C3[Î¯3;3ã‘™í?¼Ë§\u0002\u0004'å³ 3%\u001cæ‡º\bXëŒ‘ä¨‰\u000bRW=/ã¥‚\u0004å©¯Z\u000e\u0018\u001c\u001b$$Eã‰ 33ï¹“è?œ",
                                                                                          "ï¦†\u0006\u0007Åžç™°B3\u0014\u001c!;á¶¨\u0016'3N`\u00003\f3C3[Î¯3;3ã‘™í?¼Ë§\u0002\u0004'å³ 3%\u001cæ‡º\bXëŒ‘ä¨‰\u000bRW=/ã¥‚\u0004å©¯Z\u000e\u0018\u001c\u001b$$Eã‰ 33ï¹“è?œ");
        assertFalse(deviceenrollmentdenialInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("d59604e858bddb5f6cc558017117112a",
                                                                                        new Date(1563781718418L),
                                                                                        "66a420d4-e9d1-4538-b1bc-37fab981c4ae",
                                                                                        "d59604e858bddb5f6cc558017117112a",
                                                                                        "d59604e858bddb5f6cc558017117112a");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = new DeviceEnrollmentDenial("d59604e858bddb5f6cc558017117112a",
                                                                                        new Date(1563781718418L),
                                                                                        "66a420d4-e9d1-4538-b1bc-37fab981c4ae",
                                                                                        "d59604e858bddb5f6cc558017117112a",
                                                                                        "d59604e858bddb5f6cc558017117112a");
            DeviceEnrollmentDenial deviceenrollmentdenial3 = new DeviceEnrollmentDenial("d59604e858bddb5f6cc558017117112a",
                                                                                        new Date(1563781719630L),
                                                                                        "6eb29d30-9d8e-4a51-be51-d6e06a93d8af",
                                                                                        "d59604e858bddb5f6cc558017117112a",
                                                                                        "d59604e858bddb5f6cc558017117112a");
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotNull(deviceenrollmentdenial3);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertNotSame(deviceenrollmentdenial3, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial1, deviceenrollmentdenial2);
            assertEquals(deviceenrollmentdenial1, deviceenrollmentdenial1);
            assertFalse(deviceenrollmentdenial1.equals(null));
            assertNotEquals(deviceenrollmentdenial3, deviceenrollmentdenial1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
