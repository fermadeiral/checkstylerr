// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantUserInvitation.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantUserInvitation {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantUserInvitation subtenantuserinvitation1 = new SubtenantUserInvitation("d59604e858bddb5f6cc558017117112a",
                                                                                           new Date(1563781717384L),
                                                                                           "3be85.2bc09@b6712.fr",
                                                                                           new Date(1563781715765L),
                                                                                           "d59604e858bddb5f6cc558017117112a",
                                                                                           null,
                                                                                           new Date(1563781718756L),
                                                                                           "d59604e858bddb5f6cc558017117112a");
            SubtenantUserInvitation subtenantuserinvitation2 = subtenantuserinvitation1.clone();
            assertNotNull(subtenantuserinvitation1);
            assertNotNull(subtenantuserinvitation2);
            assertNotSame(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantUserInvitation subtenantuserinvitation1 = new SubtenantUserInvitation("d59604e858bddb5f6cc558017117112a",
                                                                                           new Date(1563781721251L),
                                                                                           "1fd63.e5309@fce0f.fr",
                                                                                           new Date(1563781716839L),
                                                                                           "d59604e858bddb5f6cc558017117112a",
                                                                                           null,
                                                                                           new Date(1563781715047L),
                                                                                           "d59604e858bddb5f6cc558017117112a");
            SubtenantUserInvitation subtenantuserinvitation2 = new SubtenantUserInvitation("d59604e858bddb5f6cc558017117112a",
                                                                                           new Date(1563781721251L),
                                                                                           "1fd63.e5309@fce0f.fr",
                                                                                           new Date(1563781716839L),
                                                                                           "d59604e858bddb5f6cc558017117112a",
                                                                                           null,
                                                                                           new Date(1563781715047L),
                                                                                           "d59604e858bddb5f6cc558017117112a");
            assertNotNull(subtenantuserinvitation1);
            assertNotNull(subtenantuserinvitation2);
            assertNotSame(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2.hashCode(), subtenantuserinvitation1.hashCode());
            int hashCode = subtenantuserinvitation1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantuserinvitation1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantUserInvitation subtenantuserinvitation = new SubtenantUserInvitation("d59604e858bddb5f6cc558017117112a",
                                                                                      new Date(1563781719015L),
                                                                                      "2a39f.f94b4@edb47.me",
                                                                                      new Date(1563781723217L),
                                                                                      "d59604e858bddb5f6cc558017117112a",
                                                                                      null, new Date(1563781717079L),
                                                                                      "d59604e858bddb5f6cc558017117112a");
        assertTrue(subtenantuserinvitation.isValid());
        SubtenantUserInvitation subtenantuserinvitationInvalid = new SubtenantUserInvitation(null,
                                                                                             new Date(1563781717191L),
                                                                                             null,
                                                                                             new Date(1563781714838L),
                                                                                             "ï¦†\u0006\u0007Åžç™°B3\u0014\u001c!;á¶¨\u0016'3N`\u00003\f3C3[Î¯3;3ã‘™í?¼Ë§\u0002\u0004'å³ 3%\u001cæ‡º\bXëŒ‘ä¨‰\u000bRW=/ã¥‚\u0004å©¯Z\u000e\u0018\u001c\u001b$$Eã‰ 33ï¹“è?œ",
                                                                                             null,
                                                                                             new Date(1563781722519L),
                                                                                             "ï¦†\u0006\u0007Åžç™°B3\u0014\u001c!;á¶¨\u0016'3N`\u00003\f3C3[Î¯3;3ã‘™í?¼Ë§\u0002\u0004'å³ 3%\u001cæ‡º\bXëŒ‘ä¨‰\u000bRW=/ã¥‚\u0004å©¯Z\u000e\u0018\u001c\u001b$$Eã‰ 33ï¹“è?œ");
        assertFalse(subtenantuserinvitationInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantUserInvitation subtenantuserinvitation1 = new SubtenantUserInvitation("d59604e858bddb5f6cc558017117112a",
                                                                                           new Date(1563781721348L),
                                                                                           "027e4.2961f@81e5f.me",
                                                                                           new Date(1563781715477L),
                                                                                           "d59604e858bddb5f6cc558017117112a",
                                                                                           null,
                                                                                           new Date(1563781714610L),
                                                                                           "d59604e858bddb5f6cc558017117112a");
            SubtenantUserInvitation subtenantuserinvitation2 = new SubtenantUserInvitation("d59604e858bddb5f6cc558017117112a",
                                                                                           new Date(1563781721348L),
                                                                                           "027e4.2961f@81e5f.me",
                                                                                           new Date(1563781715477L),
                                                                                           "d59604e858bddb5f6cc558017117112a",
                                                                                           null,
                                                                                           new Date(1563781714610L),
                                                                                           "d59604e858bddb5f6cc558017117112a");
            SubtenantUserInvitation subtenantuserinvitation3 = new SubtenantUserInvitation("d59604e858bddb5f6cc558017117112a",
                                                                                           new Date(1563781714798L),
                                                                                           "63eac.da32a@c5c36.me",
                                                                                           new Date(1563781723395L),
                                                                                           "d59604e858bddb5f6cc558017117112a",
                                                                                           null,
                                                                                           new Date(1563781724314L),
                                                                                           "d59604e858bddb5f6cc558017117112a");
            assertNotNull(subtenantuserinvitation1);
            assertNotNull(subtenantuserinvitation2);
            assertNotNull(subtenantuserinvitation3);
            assertNotSame(subtenantuserinvitation2, subtenantuserinvitation1);
            assertNotSame(subtenantuserinvitation3, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation1, subtenantuserinvitation2);
            assertEquals(subtenantuserinvitation1, subtenantuserinvitation1);
            assertFalse(subtenantuserinvitation1.equals(null));
            assertNotEquals(subtenantuserinvitation3, subtenantuserinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
