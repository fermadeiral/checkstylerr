// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.security.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeveloperCertificate.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeveloperCertificate {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("7991f872-0548-41f6-bde5-fd9049d704c1",
                                                                                  "687f0eba-586d-46bf-81d2-d9412158e3b1",
                                                                                  new Date(1563781721490L),
                                                                                  "3a283dd5-31ae-4899-a398-ef61dffcee38",
                                                                                  "99b21e5a-a8c1-42ea-b3c3-8571ed4e9ad7",
                                                                                  "b6f7790a-e13c-4cbb-a788-4ee7eafe2612",
                                                                                  "5ea3c45d-5d11-4027-8666-37ec49bc4818",
                                                                                  "a154c9e9-c658-4646-ab14-edd96a61fa19");
            DeveloperCertificate developercertificate2 = developercertificate1.clone();
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("06ddbd34-dcb4-4c38-ad07-65e620a237b4",
                                                                                  "7fea0eb0-da36-46ce-8c0c-bfff752e5d9d",
                                                                                  new Date(1563781717776L),
                                                                                  "ba43a888-9a9d-4094-9021-0b253766e640",
                                                                                  "6e2c9e98-d907-40ee-b2f5-2ad6aac86ebe",
                                                                                  "f5054779-5bd8-4bfe-9d84-595ede1926b2",
                                                                                  "559abb11-5ab4-498b-adbb-c722763e02ae",
                                                                                  "c6476a28-0769-4a38-9bfa-ff5a42167f1a");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("06ddbd34-dcb4-4c38-ad07-65e620a237b4",
                                                                                  "7fea0eb0-da36-46ce-8c0c-bfff752e5d9d",
                                                                                  new Date(1563781717776L),
                                                                                  "ba43a888-9a9d-4094-9021-0b253766e640",
                                                                                  "6e2c9e98-d907-40ee-b2f5-2ad6aac86ebe",
                                                                                  "f5054779-5bd8-4bfe-9d84-595ede1926b2",
                                                                                  "559abb11-5ab4-498b-adbb-c722763e02ae",
                                                                                  "c6476a28-0769-4a38-9bfa-ff5a42167f1a");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2.hashCode(), developercertificate1.hashCode());
            int hashCode = developercertificate1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, developercertificate1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeveloperCertificate developercertificate = new DeveloperCertificate("f3957e94-ab89-4bd8-a54a-d56951d33bad",
                                                                             "d7dd3a0e-57c0-480a-81fc-8c24d8719ee5",
                                                                             new Date(1563781722577L),
                                                                             "122c2ef8-0616-45cd-8998-9b1ef7b684e4",
                                                                             "538acdd4-1bcf-4304-a157-a7c6c09d0098",
                                                                             "a93ebaab-d39f-45df-9e03-2443a10f0556",
                                                                             "c0faaddb-e6f0-462f-a9f5-e6a9342329dc",
                                                                             "573b35c6-60a1-4428-b50e-bdebcb5ac31c");
        assertTrue(developercertificate.isValid());
        DeveloperCertificate developercertificateInvalid = new DeveloperCertificate("95d62c72-8a6b-44ca-8b42-ca6d39e2a070",
                                                                                    "359c3b60-90a9-4799-850a-c20bb5a7e766",
                                                                                    new Date(1563781718066L),
                                                                                    "28e3df19-67e3-4fef-b88d-88fd34fb0bc5",
                                                                                    "f6f20e52-3fc4-4bcd-929c-896aa7f54cc7",
                                                                                    "9eac3b30-6535-4f79-a8ef-584d3524522e",
                                                                                    null,
                                                                                    "b6b90e53-eccd-4d17-a1ad-3f2f4d7093bd");
        assertFalse(developercertificateInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("95090cb6-29f1-4701-84a9-79c8d7c131b9",
                                                                                  "54a007a9-a566-4a14-999a-a39ad599532f",
                                                                                  new Date(1563781716178L),
                                                                                  "9079d549-9112-4792-811e-5c46002901ca",
                                                                                  "4dd4f33f-adf4-4312-a594-f41e62f797da",
                                                                                  "77bca143-90bc-4e4d-b7a5-4487d6959c48",
                                                                                  "41710434-9781-4601-b09c-927eae19f2ff",
                                                                                  "0fc0ec09-b9a9-4e3b-814c-55c1d2d378f3");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("95090cb6-29f1-4701-84a9-79c8d7c131b9",
                                                                                  "54a007a9-a566-4a14-999a-a39ad599532f",
                                                                                  new Date(1563781716178L),
                                                                                  "9079d549-9112-4792-811e-5c46002901ca",
                                                                                  "4dd4f33f-adf4-4312-a594-f41e62f797da",
                                                                                  "77bca143-90bc-4e4d-b7a5-4487d6959c48",
                                                                                  "41710434-9781-4601-b09c-927eae19f2ff",
                                                                                  "0fc0ec09-b9a9-4e3b-814c-55c1d2d378f3");
            DeveloperCertificate developercertificate3 = new DeveloperCertificate("3da428ad-eac9-4d2c-8b82-808d09393526",
                                                                                  "f7841e4c-3b4c-4c94-a2af-be93bc8e6b65",
                                                                                  new Date(1563781723042L),
                                                                                  "a1b86a30-eaf3-448b-a1cc-c86535c880af",
                                                                                  "8be90929-b9ae-445d-b45a-d76c0b8fe555",
                                                                                  "22c81035-8680-499b-84d9-08e81dd1f1d6",
                                                                                  "9777f792-61fb-4c26-a137-f3649411ed3f",
                                                                                  "95d6c0a6-affc-43a5-bd01-685da748a4ad");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotNull(developercertificate3);
            assertNotSame(developercertificate2, developercertificate1);
            assertNotSame(developercertificate3, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate1, developercertificate2);
            assertEquals(developercertificate1, developercertificate1);
            assertFalse(developercertificate1.equals(null));
            assertNotEquals(developercertificate3, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
