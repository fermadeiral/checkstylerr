// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model ActiveSession.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestActiveSession {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ActiveSession activesession1 = new ActiveSession("d59604e858bddb5f6cc558017117112a",
                                                             "1fd690db-ff11-4a36-a782-5339844a119b",
                                                             new Date(1563781718939L),
                                                             "0d5dec85-4a2f-483b-aa85-dde71abdf303",
                                                             "9f4d43d1-3b13-42ab-8c18-b52ae33b4c7b");
            ActiveSession activesession2 = activesession1.clone();
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotSame(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ActiveSession activesession1 = new ActiveSession("d59604e858bddb5f6cc558017117112a",
                                                             "4908f618-9260-4d24-97cb-4c3be161f60c",
                                                             new Date(1563781721775L),
                                                             "a783d4fe-72ee-4d1f-87e6-a07bb84720fc",
                                                             "e53f78c2-2493-403c-8181-992fd2606899");
            ActiveSession activesession2 = new ActiveSession("d59604e858bddb5f6cc558017117112a",
                                                             "4908f618-9260-4d24-97cb-4c3be161f60c",
                                                             new Date(1563781721775L),
                                                             "a783d4fe-72ee-4d1f-87e6-a07bb84720fc",
                                                             "e53f78c2-2493-403c-8181-992fd2606899");
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotSame(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession2.hashCode(), activesession1.hashCode());
            int hashCode = activesession1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, activesession1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ActiveSession activesession = new ActiveSession("d59604e858bddb5f6cc558017117112a",
                                                        "7f2de679-1766-4a92-8b64-a4a4145bfc25",
                                                        new Date(1563781722965L),
                                                        "0ebb11de-b8c1-4e3e-821d-da9d30ba8f70",
                                                        "6238a8a9-56e6-46fc-8670-8e66acc6736e");
        assertTrue(activesession.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ActiveSession activesession1 = new ActiveSession("d59604e858bddb5f6cc558017117112a",
                                                             "64b09a19-2c80-4fb4-87c2-9b833290e812",
                                                             new Date(1563781720422L),
                                                             "f87ba3ca-ae6c-4136-a94b-c99c368d0a43",
                                                             "a5e740c9-9d72-462e-93de-a74bd1366893");
            ActiveSession activesession2 = new ActiveSession("d59604e858bddb5f6cc558017117112a",
                                                             "64b09a19-2c80-4fb4-87c2-9b833290e812",
                                                             new Date(1563781720422L),
                                                             "f87ba3ca-ae6c-4136-a94b-c99c368d0a43",
                                                             "a5e740c9-9d72-462e-93de-a74bd1366893");
            ActiveSession activesession3 = new ActiveSession("d59604e858bddb5f6cc558017117112a",
                                                             "8cafb5e7-7f78-4ced-9e5c-530004a8a8b2",
                                                             new Date(1563781723271L),
                                                             "f4a6f405-998d-48fd-978f-c5301ceecf58",
                                                             "974bf986-7cb4-45ee-a90a-8c7993e6b070");
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotNull(activesession3);
            assertNotSame(activesession2, activesession1);
            assertNotSame(activesession3, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession1, activesession2);
            assertEquals(activesession1, activesession1);
            assertFalse(activesession1.equals(null));
            assertNotEquals(activesession3, activesession1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
