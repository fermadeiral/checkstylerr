// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantApiKey.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantApiKey {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("d59604e858bddb5f6cc558017117112a",
                                                                   new Date(1563781718749L), -70,
                                                                   "d59604e858bddb5f6cc558017117112a",
                                                                   "eda0552a-8e07-46d7-b9fa-95c8ac3f5235", 97,
                                                                   "7d33bbbf-efd7-4ce9-a22a-2ec0b570334b",
                                                                   "d59604e858bddb5f6cc558017117112a",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1563781720920L));
            SubtenantApiKey subtenantapikey2 = subtenantapikey1.clone();
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("d59604e858bddb5f6cc558017117112a",
                                                                   new Date(1563781723910L), 81,
                                                                   "d59604e858bddb5f6cc558017117112a",
                                                                   "a57c4c59-fb7e-4ef1-a801-50c8c4c15ac3", 99,
                                                                   "575e716d-37d8-4905-9fcd-fc7d7711f734",
                                                                   "d59604e858bddb5f6cc558017117112a",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1563781721647L));
            SubtenantApiKey subtenantapikey2 = new SubtenantApiKey("d59604e858bddb5f6cc558017117112a",
                                                                   new Date(1563781723910L), 81,
                                                                   "d59604e858bddb5f6cc558017117112a",
                                                                   "a57c4c59-fb7e-4ef1-a801-50c8c4c15ac3", 99,
                                                                   "575e716d-37d8-4905-9fcd-fc7d7711f734",
                                                                   "d59604e858bddb5f6cc558017117112a",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1563781721647L));
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2.hashCode(), subtenantapikey1.hashCode());
            int hashCode = subtenantapikey1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantapikey1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantApiKey subtenantapikey = new SubtenantApiKey("d59604e858bddb5f6cc558017117112a",
                                                              new Date(1563781717646L), -54,
                                                              "d59604e858bddb5f6cc558017117112a",
                                                              "649c8202-1558-4b99-ae36-0a40a03d2e82", 89,
                                                              "b57512bc-c693-4b69-a025-74b674847879",
                                                              "d59604e858bddb5f6cc558017117112a",
                                                              SubtenantApiKeyStatus.getDefault(),
                                                              new Date(1563781720529L));
        assertTrue(subtenantapikey.isValid());
        SubtenantApiKey subtenantapikeyInvalid = new SubtenantApiKey(null, new Date(1563781722154L), 12,
                                                                     "ï¦†\u0006\u0007Åžç™°B3\u0014\u001c!;á¶¨\u0016'3N`\u00003\f3C3[Î¯3;3ã‘™í?¼Ë§\u0002\u0004'å³ 3%\u001cæ‡º\bXëŒ‘ä¨‰\u000bRW=/ã¥‚\u0004å©¯Z\u000e\u0018\u001c\u001b$$Eã‰ 33ï¹“è?œ",
                                                                     "8200a8b1-a3fa-42e1-80b9-0989252c7f2c", -97, null,
                                                                     "ï¦†\u0006\u0007Åžç™°B3\u0014\u001c!;á¶¨\u0016'3N`\u00003\f3C3[Î¯3;3ã‘™í?¼Ë§\u0002\u0004'å³ 3%\u001cæ‡º\bXëŒ‘ä¨‰\u000bRW=/ã¥‚\u0004å©¯Z\u000e\u0018\u001c\u001b$$Eã‰ 33ï¹“è?œ",
                                                                     SubtenantApiKeyStatus.getDefault(),
                                                                     new Date(1563781720136L));
        assertFalse(subtenantapikeyInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("d59604e858bddb5f6cc558017117112a",
                                                                   new Date(1563781717750L), -62,
                                                                   "d59604e858bddb5f6cc558017117112a",
                                                                   "779bdadd-151a-4c0b-8a43-6355faa6a93e", -70,
                                                                   "57461d9e-9af4-46b3-924b-fed28c6a35fd",
                                                                   "d59604e858bddb5f6cc558017117112a",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1563781715467L));
            SubtenantApiKey subtenantapikey2 = new SubtenantApiKey("d59604e858bddb5f6cc558017117112a",
                                                                   new Date(1563781717750L), -62,
                                                                   "d59604e858bddb5f6cc558017117112a",
                                                                   "779bdadd-151a-4c0b-8a43-6355faa6a93e", -70,
                                                                   "57461d9e-9af4-46b3-924b-fed28c6a35fd",
                                                                   "d59604e858bddb5f6cc558017117112a",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1563781715467L));
            SubtenantApiKey subtenantapikey3 = new SubtenantApiKey("d59604e858bddb5f6cc558017117112a",
                                                                   new Date(1563781719840L), 34,
                                                                   "d59604e858bddb5f6cc558017117112a",
                                                                   "84be1fbf-20b8-4043-ba34-403ebe5bc5dc", 53,
                                                                   "1ad3d4c5-5e34-452b-adeb-a45ece75316d",
                                                                   "d59604e858bddb5f6cc558017117112a",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1563781719177L));
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotNull(subtenantapikey3);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertNotSame(subtenantapikey3, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey1, subtenantapikey2);
            assertEquals(subtenantapikey1, subtenantapikey1);
            assertFalse(subtenantapikey1.equals(null));
            assertNotEquals(subtenantapikey3, subtenantapikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
