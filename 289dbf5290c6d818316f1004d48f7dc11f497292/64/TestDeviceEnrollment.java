// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEnrollment.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEnrollment {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEnrollment deviceenrollment1 = new DeviceEnrollment("32b6ea9e-f07f-4d67-8b41-5ab17eecbcbb",
                                                                      new Date(1563781714538L),
                                                                      new Date(1563781714823L),
                                                                      "LSRh5B3K5893sv7tY8E9I2G7jkJ8KXHH",
                                                                      "A-ho2QHLqXM080FOPwC6Gm12a:587dSdEt:Lkh4321T8KI6jXThJgi7E0oLwcGUXgtr27cI8tQfHM7r0P3mdd43a6w2:C3LC4",
                                                                      new Date(1563781716923L),
                                                                      "LSRh5B3K5893sv7tY8E9I2G7jkJ8KXHH");
            DeviceEnrollment deviceenrollment2 = deviceenrollment1.clone();
            assertNotNull(deviceenrollment1);
            assertNotNull(deviceenrollment2);
            assertNotSame(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEnrollment deviceenrollment1 = new DeviceEnrollment("640df205-fec4-4989-bc9d-44c823bdace2",
                                                                      new Date(1563781722796L),
                                                                      new Date(1563781715672L),
                                                                      "LSRh5B3K5893sv7tY8E9I2G7jkJ8KXHH",
                                                                      "A-ho2QHLqXM080FOPwC6Gm12a:587dSdEt:Lkh4321T8KI6jXThJgi7E0oLwcGUXgtr27cI8tQfHM7r0P3mdd43a6w2:C3LC4",
                                                                      new Date(1563781716472L),
                                                                      "LSRh5B3K5893sv7tY8E9I2G7jkJ8KXHH");
            DeviceEnrollment deviceenrollment2 = new DeviceEnrollment("640df205-fec4-4989-bc9d-44c823bdace2",
                                                                      new Date(1563781722796L),
                                                                      new Date(1563781715672L),
                                                                      "LSRh5B3K5893sv7tY8E9I2G7jkJ8KXHH",
                                                                      "A-ho2QHLqXM080FOPwC6Gm12a:587dSdEt:Lkh4321T8KI6jXThJgi7E0oLwcGUXgtr27cI8tQfHM7r0P3mdd43a6w2:C3LC4",
                                                                      new Date(1563781716472L),
                                                                      "LSRh5B3K5893sv7tY8E9I2G7jkJ8KXHH");
            assertNotNull(deviceenrollment1);
            assertNotNull(deviceenrollment2);
            assertNotSame(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2.hashCode(), deviceenrollment1.hashCode());
            int hashCode = deviceenrollment1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceenrollment1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEnrollment deviceenrollment = new DeviceEnrollment("1282e569-b6c1-4322-add8-e289d74e5c4f",
                                                                 new Date(1563781720089L), new Date(1563781716201L),
                                                                 "LSRh5B3K5893sv7tY8E9I2G7jkJ8KXHH",
                                                                 "A-ho2QHLqXM080FOPwC6Gm12a:587dSdEt:Lkh4321T8KI6jXThJgi7E0oLwcGUXgtr27cI8tQfHM7r0P3mdd43a6w2:C3LC4",
                                                                 new Date(1563781721114L),
                                                                 "LSRh5B3K5893sv7tY8E9I2G7jkJ8KXHH");
        assertTrue(deviceenrollment.isValid());
        DeviceEnrollment deviceenrollmentInvalid = new DeviceEnrollment("d6f68888-3062-4cc3-85c2-67457c38ed3f",
                                                                        new Date(1563781722693L),
                                                                        new Date(1563781719504L),
                                                                        "DPFá§¢<ë„¸\u0007Vê´·MpuTgë§Ž4ã‚¤Pi6uFVFuFçµ¿4QF`\u0004ä?±:@VP<á¸³FPFlì¬’=Ci46DVF4iVuNrå™¯rn1Ti",
                                                                        null, new Date(1563781720051L),
                                                                        "DPFá§¢<ë„¸\u0007Vê´·MpuTgë§Ž4ã‚¤Pi6uFVFuFçµ¿4QF`\u0004ä?±:@VP<á¸³FPFlì¬’=Ci46DVF4iVuNrå™¯rn1Ti");
        assertFalse(deviceenrollmentInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEnrollment deviceenrollment1 = new DeviceEnrollment("463d00fa-fa23-4df7-9432-09b7f55095ee",
                                                                      new Date(1563781720913L),
                                                                      new Date(1563781715889L),
                                                                      "LSRh5B3K5893sv7tY8E9I2G7jkJ8KXHH",
                                                                      "A-ho2QHLqXM080FOPwC6Gm12a:587dSdEt:Lkh4321T8KI6jXThJgi7E0oLwcGUXgtr27cI8tQfHM7r0P3mdd43a6w2:C3LC4",
                                                                      new Date(1563781715447L),
                                                                      "LSRh5B3K5893sv7tY8E9I2G7jkJ8KXHH");
            DeviceEnrollment deviceenrollment2 = new DeviceEnrollment("463d00fa-fa23-4df7-9432-09b7f55095ee",
                                                                      new Date(1563781720913L),
                                                                      new Date(1563781715889L),
                                                                      "LSRh5B3K5893sv7tY8E9I2G7jkJ8KXHH",
                                                                      "A-ho2QHLqXM080FOPwC6Gm12a:587dSdEt:Lkh4321T8KI6jXThJgi7E0oLwcGUXgtr27cI8tQfHM7r0P3mdd43a6w2:C3LC4",
                                                                      new Date(1563781715447L),
                                                                      "LSRh5B3K5893sv7tY8E9I2G7jkJ8KXHH");
            DeviceEnrollment deviceenrollment3 = new DeviceEnrollment("a1ef3e86-95f4-4ff6-970c-73b5a37e65f8",
                                                                      new Date(1563781721626L),
                                                                      new Date(1563781719408L),
                                                                      "LSRh5B3K5893sv7tY8E9I2G7jkJ8KXHH",
                                                                      "A-ho2QHLqXM080FOPwC6Gm12a:587dSdEt:Lkh4321T8KI6jXThJgi7E0oLwcGUXgtr27cI8tQfHM7r0P3mdd43a6w2:C3LC4",
                                                                      new Date(1563781720664L),
                                                                      "LSRh5B3K5893sv7tY8E9I2G7jkJ8KXHH");
            assertNotNull(deviceenrollment1);
            assertNotNull(deviceenrollment2);
            assertNotNull(deviceenrollment3);
            assertNotSame(deviceenrollment2, deviceenrollment1);
            assertNotSame(deviceenrollment3, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment1, deviceenrollment2);
            assertEquals(deviceenrollment1, deviceenrollment1);
            assertFalse(deviceenrollment1.equals(null));
            assertNotEquals(deviceenrollment3, deviceenrollment1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
