// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.deviceupdate.model;

import static org.junit.Assert.*;

import com.arm.mbed.cloud.sdk.common.Order;
import com.arm.mbed.cloud.sdk.common.listing.ListOptionsEncoder;
import com.arm.mbed.cloud.sdk.common.listing.filtering.FilterOperator;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import org.junit.Test;

/**
 * Unit tests for Model FirmwareImageListOptions.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestFirmwareImageListOptions {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            FirmwareImageListOptions firmwareimagelistoptions1 = new FirmwareImageListOptions(Integer.valueOf(70),
                                                                                              Long.valueOf(-62),
                                                                                              Order.getDefault(),
                                                                                              "d7f4e220-b2da-4b31-8903-9314bae591d9",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions2 = firmwareimagelistoptions1.clone();
            assertNotNull(firmwareimagelistoptions1);
            assertNotNull(firmwareimagelistoptions2);
            assertNotSame(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the filters method.
     */
    @SuppressWarnings({ "boxing", "resource" })
    @Test
    public void testFilters() {
        try {
            FirmwareImageListOptions option = new FirmwareImageListOptions().inUpdatedAts(Arrays.asList(new Date(1563781717093L),
                                                                                                        new Date(1563781719773L),
                                                                                                        new Date(1563781724233L),
                                                                                                        new Date(1563781720426L),
                                                                                                        new Date(1563781717613L),
                                                                                                        new Date(1563781721958L),
                                                                                                        new Date(1563781719262L),
                                                                                                        new Date(1563781715858L)))
                                                                            .notInUpdatedAts(Arrays.asList(new Date(1563781724308L),
                                                                                                           new Date(1563781720991L),
                                                                                                           new Date(1563781722550L),
                                                                                                           new Date(1563781723007L),
                                                                                                           new Date(1563781717414L),
                                                                                                           new Date(1563781721835L),
                                                                                                           new Date(1563781720501L),
                                                                                                           new Date(1563781723944L)))
                                                                            .lessThanUpdatedAt(new Date(1563781719501L))
                                                                            .greaterThanUpdatedAt(new Date(1563781724570L))
                                                                            .equalToName("04154b66-82b9-4460-91ce-e855b54888de")
                                                                            .notEqualToName("d267b29e-da94-44de-a3e4-bb96ae9eefa2")
                                                                            .inNames(Arrays.asList("15c086bf-6b1b-4ec2-9f7e-5c218c4c90c8"))
                                                                            .notInNames(Arrays.asList("64a83117-2a84-4146-8908-bbb6d9b23652",
                                                                                                      "ef789d64-ad8f-4c46-beaa-cea7aff7494e",
                                                                                                      "78a44952-bbff-4b2a-a5b1-ebf779365ec5",
                                                                                                      "60bbbb74-5c63-44af-8b32-3a1214bc49be",
                                                                                                      "81964c35-9637-4fce-90ba-ea6f2088cf5c",
                                                                                                      "11f2ffa7-95ef-4561-86c2-79f4ff79daf2",
                                                                                                      "6ed48549-e171-477c-8aa1-cd60326b7df6",
                                                                                                      "a082953d-caba-4e72-a875-06928824cf33"))
                                                                            .equalToDescription("d03d7c52-1903-43a8-bff0-c5481f97244b")
                                                                            .notEqualToDescription("744037e1-7b0f-4205-a936-339da365c01d")
                                                                            .inDescriptions(Arrays.asList("f6954b94-1fa1-41d6-b92e-667d88b3f160"))
                                                                            .notInDescriptions(Arrays.asList("308175d6-d892-4a3a-b510-068f3a2153b1",
                                                                                                             "92d080c5-8c1e-4a9b-bb30-fa3523afceeb",
                                                                                                             "36c284bf-db8e-4ccc-b11a-3ff3345e63b4",
                                                                                                             "b9668324-fe89-45c9-b8f6-12f3a4adca26",
                                                                                                             "f8c46cbc-2316-4662-8324-f55a630e89f4"))
                                                                            .inCreatedAts(Arrays.asList(new Date(1563781719916L),
                                                                                                        new Date(1563781720055L),
                                                                                                        new Date(1563781723952L),
                                                                                                        new Date(1563781725522L),
                                                                                                        new Date(1563781723608L),
                                                                                                        new Date(1563781717278L),
                                                                                                        new Date(1563781718477L),
                                                                                                        new Date(1563781724110L),
                                                                                                        new Date(1563781724637L)))
                                                                            .notInCreatedAts(Arrays.asList(new Date(1563781724494L),
                                                                                                           new Date(1563781717325L),
                                                                                                           new Date(1563781721998L),
                                                                                                           new Date(1563781725226L),
                                                                                                           new Date(1563781716562L),
                                                                                                           new Date(1563781719580L)))
                                                                            .lessThanCreatedAt(new Date(1563781720639L))
                                                                            .greaterThanCreatedAt(new Date(1563781723894L))
                                                                            .equalToDatafileUrl("c94cb181-2782-4ea4-b428-23521a389256")
                                                                            .notEqualToDatafileUrl("a8c051e3-588c-4b86-b768-449a66ab8c43")
                                                                            .inDatafileUrls(Arrays.asList("a10666ff-abdb-46a7-b526-f6389cd0ef90",
                                                                                                          "44e46927-6b17-4a7a-a56a-dcf821d527b0",
                                                                                                          "c8e15900-de5a-4fad-bd00-95df79dd6420",
                                                                                                          "ebf437bf-ac95-4e11-8279-f1a88236d7b6",
                                                                                                          "cf3ce474-250f-4494-820d-7eb489294bd3",
                                                                                                          "ff8de43b-f474-408d-9025-a90528046e18",
                                                                                                          "b9a7601d-742b-4e05-bd52-d55af7278399"))
                                                                            .notInDatafileUrls(Arrays.asList("2e85eef6-8647-47ac-be7e-ae3311dd7df0",
                                                                                                             "b6eac848-5257-4a6b-8b9e-ff235f02db9c",
                                                                                                             "1e5a4d99-fe4c-457e-be2d-d9a3c16cb2bd",
                                                                                                             "a4bfe540-19bc-4e33-97e0-cca6e105f6dd"))
                                                                            .equalToDatafileSize(Long.valueOf(93))
                                                                            .notEqualToDatafileSize(Long.valueOf(51))
                                                                            .inDatafileSizes(Arrays.asList(Long.valueOf(42),
                                                                                                           Long.valueOf(-78),
                                                                                                           Long.valueOf(-70),
                                                                                                           Long.valueOf(12),
                                                                                                           Long.valueOf(121),
                                                                                                           Long.valueOf(-99)))
                                                                            .notInDatafileSizes(Arrays.asList(Long.valueOf(-61),
                                                                                                              Long.valueOf(113),
                                                                                                              Long.valueOf(32)))
                                                                            .equalToDatafileChecksum("1d9959ed-e258-45ba-bd55-cd80d9e2b259")
                                                                            .notEqualToDatafileChecksum("253cf739-cf51-4118-b87a-8c80d0a13229")
                                                                            .inDatafileChecksums(Arrays.asList("a95a3073-f471-4bdd-ac4e-6c35addeac89",
                                                                                                               "5aab962b-62e3-47fe-a16f-73009e8d0371",
                                                                                                               "602d1436-6c0e-4320-9c85-f56435cbf907",
                                                                                                               "676cf582-ebe0-43e5-ad05-20b950c25c12"))
                                                                            .notInDatafileChecksums(Arrays.asList("b5608261-a5d0-4db2-ad6f-fae33ca27edd",
                                                                                                                  "ff737d00-f450-429f-8dfd-c83252aa6208",
                                                                                                                  "9a14ba9c-5d76-4b88-bf55-adf72b7627ac"))
                                                                            .equalToId("e9acf376-aaf3-4ada-a1c6-3deda3994153")
                                                                            .notEqualToId("7e17c60e-6f53-4074-8829-39c49ea40852")
                                                                            .inIds(Arrays.asList("937c2da4-dcba-47fe-ad8d-a56b57849983",
                                                                                                 "4aaf11a3-39e8-4eeb-aeba-f21e76677afe",
                                                                                                 "ab3f70e4-2b52-46d1-a9c1-9029be80b948",
                                                                                                 "193a5d49-eecd-46f3-8137-9414fcd407cb",
                                                                                                 "894e9bcc-5404-4473-8f3f-786301ab467d",
                                                                                                 "a9ca1414-5ed6-488e-bd8b-9fa53c901284",
                                                                                                 "2687204c-cd17-46b2-8c4e-e0bece14a6a0",
                                                                                                 "ac9722aa-6d80-4dc9-abad-41c29651bcc8",
                                                                                                 "be41b02a-9e4c-4568-9e6e-8794e0b74e19"))
                                                                            .notInIds(Arrays.asList("d756d16b-37a6-4155-ac1a-5275e0610f25",
                                                                                                    "ce08e610-a25e-4328-bf78-31139d37c6fc",
                                                                                                    "3971b42c-3e73-4664-aa9f-e69a4fb2b417"));
            assertTrue(option.hasFilters());
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1563781717093L), new Date(1563781719773L), new Date(1563781724233L),
                                       new Date(1563781720426L), new Date(1563781717613L), new Date(1563781721958L),
                                       new Date(1563781719262L), new Date(1563781715858L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1563781724308L), new Date(1563781720991L), new Date(1563781722550L),
                                       new Date(1563781723007L), new Date(1563781717414L), new Date(1563781721835L),
                                       new Date(1563781720501L), new Date(1563781723944L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.LESS_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1563781719501L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1563781724570L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("04154b66-82b9-4460-91ce-e855b54888de",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("d267b29e-da94-44de-a3e4-bb96ae9eefa2",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("15c086bf-6b1b-4ec2-9f7e-5c218c4c90c8"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("64a83117-2a84-4146-8908-bbb6d9b23652", "ef789d64-ad8f-4c46-beaa-cea7aff7494e",
                                       "78a44952-bbff-4b2a-a5b1-ebf779365ec5", "60bbbb74-5c63-44af-8b32-3a1214bc49be",
                                       "81964c35-9637-4fce-90ba-ea6f2088cf5c", "11f2ffa7-95ef-4561-86c2-79f4ff79daf2",
                                       "6ed48549-e171-477c-8aa1-cd60326b7df6", "a082953d-caba-4e72-a875-06928824cf33"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("d03d7c52-1903-43a8-bff0-c5481f97244b",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("744037e1-7b0f-4205-a936-339da365c01d",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("f6954b94-1fa1-41d6-b92e-667d88b3f160"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("308175d6-d892-4a3a-b510-068f3a2153b1", "92d080c5-8c1e-4a9b-bb30-fa3523afceeb",
                                       "36c284bf-db8e-4ccc-b11a-3ff3345e63b4", "b9668324-fe89-45c9-b8f6-12f3a4adca26",
                                       "f8c46cbc-2316-4662-8324-f55a630e89f4"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1563781719916L), new Date(1563781720055L), new Date(1563781723952L),
                                       new Date(1563781725522L), new Date(1563781723608L), new Date(1563781717278L),
                                       new Date(1563781718477L), new Date(1563781724110L), new Date(1563781724637L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1563781724494L), new Date(1563781717325L), new Date(1563781721998L),
                                       new Date(1563781725226L), new Date(1563781716562L), new Date(1563781719580L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.LESS_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1563781720639L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1563781723894L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("c94cb181-2782-4ea4-b428-23521a389256",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("a8c051e3-588c-4b86-b768-449a66ab8c43",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("a10666ff-abdb-46a7-b526-f6389cd0ef90", "44e46927-6b17-4a7a-a56a-dcf821d527b0",
                                       "c8e15900-de5a-4fad-bd00-95df79dd6420", "ebf437bf-ac95-4e11-8279-f1a88236d7b6",
                                       "cf3ce474-250f-4494-820d-7eb489294bd3", "ff8de43b-f474-408d-9025-a90528046e18",
                                       "b9a7601d-742b-4e05-bd52-d55af7278399"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("2e85eef6-8647-47ac-be7e-ae3311dd7df0", "b6eac848-5257-4a6b-8b9e-ff235f02db9c",
                                       "1e5a4d99-fe4c-457e-be2d-d9a3c16cb2bd", "a4bfe540-19bc-4e33-97e0-cca6e105f6dd"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(93),
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    Long.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(51),
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                       Long.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(42), Long.valueOf(-78), Long.valueOf(-70), Long.valueOf(12),
                                       Long.valueOf(121), Long.valueOf(-99)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(-61), Long.valueOf(113), Long.valueOf(32)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                        FilterOperator.EQUAL));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals("1d9959ed-e258-45ba-bd55-cd80d9e2b259",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals("253cf739-cf51-4118-b87a-8c80d0a13229",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM, FilterOperator.IN));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals(Arrays.asList("a95a3073-f471-4bdd-ac4e-6c35addeac89", "5aab962b-62e3-47fe-a16f-73009e8d0371",
                                       "602d1436-6c0e-4320-9c85-f56435cbf907", "676cf582-ebe0-43e5-ad05-20b950c25c12"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                        FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals(Arrays.asList("b5608261-a5d0-4db2-ad6f-fae33ca27edd", "ff737d00-f450-429f-8dfd-c83252aa6208",
                                       "9a14ba9c-5d76-4b88-bf55-adf72b7627ac"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("e9acf376-aaf3-4ada-a1c6-3deda3994153",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("7e17c60e-6f53-4074-8829-39c49ea40852",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("937c2da4-dcba-47fe-ad8d-a56b57849983", "4aaf11a3-39e8-4eeb-aeba-f21e76677afe",
                                       "ab3f70e4-2b52-46d1-a9c1-9029be80b948", "193a5d49-eecd-46f3-8137-9414fcd407cb",
                                       "894e9bcc-5404-4473-8f3f-786301ab467d", "a9ca1414-5ed6-488e-bd8b-9fa53c901284",
                                       "2687204c-cd17-46b2-8c4e-e0bece14a6a0", "ac9722aa-6d80-4dc9-abad-41c29651bcc8",
                                       "be41b02a-9e4c-4568-9e6e-8794e0b74e19"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, List.class,
                                                                 option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("d756d16b-37a6-4155-ac1a-5275e0610f25", "ce08e610-a25e-4328-bf78-31139d37c6fc",
                                       "3971b42c-3e73-4664-aa9f-e69a4fb2b417"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID,
                                                                    List.class, option));
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            FirmwareImageListOptions firmwareimagelistoptions1 = new FirmwareImageListOptions(Integer.valueOf(56),
                                                                                              Long.valueOf(58),
                                                                                              Order.getDefault(),
                                                                                              "8aecaea4-ba46-43e2-bcfa-d628a61bd35b",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions2 = new FirmwareImageListOptions(Integer.valueOf(56),
                                                                                              Long.valueOf(58),
                                                                                              Order.getDefault(),
                                                                                              "8aecaea4-ba46-43e2-bcfa-d628a61bd35b",
                                                                                              null, null);
            assertNotNull(firmwareimagelistoptions1);
            assertNotNull(firmwareimagelistoptions2);
            assertNotSame(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2.hashCode(), firmwareimagelistoptions1.hashCode());
            int hashCode = firmwareimagelistoptions1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, firmwareimagelistoptions1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            FirmwareImageListOptions firmwareimagelistoptions1 = new FirmwareImageListOptions(Integer.valueOf(-103),
                                                                                              Long.valueOf(-123),
                                                                                              Order.getDefault(),
                                                                                              "d9bc1cb0-0b3c-4947-a44b-458c5bf89e00",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions2 = new FirmwareImageListOptions(Integer.valueOf(-103),
                                                                                              Long.valueOf(-123),
                                                                                              Order.getDefault(),
                                                                                              "d9bc1cb0-0b3c-4947-a44b-458c5bf89e00",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions3 = new FirmwareImageListOptions(Integer.valueOf(119),
                                                                                              Long.valueOf(31),
                                                                                              Order.getDefault(),
                                                                                              "5551c8c2-485e-4210-9cb8-b82ce5d527c9",
                                                                                              null, null);
            assertNotNull(firmwareimagelistoptions1);
            assertNotNull(firmwareimagelistoptions2);
            assertNotNull(firmwareimagelistoptions3);
            assertNotSame(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertNotSame(firmwareimagelistoptions3, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions1, firmwareimagelistoptions2);
            assertEquals(firmwareimagelistoptions1, firmwareimagelistoptions1);
            assertFalse(firmwareimagelistoptions1.equals(null));
            assertNotEquals(firmwareimagelistoptions3, firmwareimagelistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
