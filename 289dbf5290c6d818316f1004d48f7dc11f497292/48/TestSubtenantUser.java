// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantUser.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantUser {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("d59604e858bddb5f6cc558017117112a", null,
                                                             "7c1223c9-8519-41f8-974e-783c4a5c26ca",
                                                             new Date(1563781723985L), -108, null,
                                                             "68d91.b5bde@29c7a.fr", true,
                                                             "f8803e90-d721-4342-a0a5-7f5f427c9fdc",
                                                             "d59604e858bddb5f6cc558017117112a", true, true, true, 116,
                                                             null, null, "318b4896-430c-4b97-9c6a-477580698dda", 84,
                                                             "5c3e2179-4145-4dd6-83c7-70e8dcf995e5",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1563781723287L), "=9F3=KB_i");
            SubtenantUser subtenantuser2 = subtenantuser1.clone();
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("d59604e858bddb5f6cc558017117112a", null,
                                                             "dfa97be9-73b5-4293-8352-9e76ebb427a6",
                                                             new Date(1563781718414L), -57, null,
                                                             "1220c.975e1@41581.fr", true,
                                                             "11e1b650-620c-499e-9863-a74d71a79c44",
                                                             "d59604e858bddb5f6cc558017117112a", true, false, true, -28,
                                                             null, null, "a582e257-6b91-4855-94c1-96447bd5943b", 73,
                                                             "a838aeaf-8d66-459f-8335-f1e4e9c47bfd",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1563781723059L), "=9F3=KB_i");
            SubtenantUser subtenantuser2 = new SubtenantUser("d59604e858bddb5f6cc558017117112a", null,
                                                             "dfa97be9-73b5-4293-8352-9e76ebb427a6",
                                                             new Date(1563781718414L), -57, null,
                                                             "1220c.975e1@41581.fr", true,
                                                             "11e1b650-620c-499e-9863-a74d71a79c44",
                                                             "d59604e858bddb5f6cc558017117112a", true, false, true, -28,
                                                             null, null, "a582e257-6b91-4855-94c1-96447bd5943b", 73,
                                                             "a838aeaf-8d66-459f-8335-f1e4e9c47bfd",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1563781723059L), "=9F3=KB_i");
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2.hashCode(), subtenantuser1.hashCode());
            int hashCode = subtenantuser1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantuser1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantUser subtenantuser = new SubtenantUser("d59604e858bddb5f6cc558017117112a", null,
                                                        "e3104ab6-3270-4c65-8b36-a79eac116e68",
                                                        new Date(1563781719105L), 81, null, "e1f1e.1c851@a3736.me",
                                                        true, "e16dc76b-8bc2-4e8e-9d17-5b14121375a6",
                                                        "d59604e858bddb5f6cc558017117112a", true, false, true, 96, null,
                                                        null, "5c205be6-70d1-4c28-a5a7-33eaf25b22ac", 17,
                                                        "c1129cf5-adb8-4aea-ac12-92eaa0e2d1dc",
                                                        SubtenantUserStatus.getDefault(), null,
                                                        new Date(1563781718923L), "=9F3=KB_i");
        assertTrue(subtenantuser.isValid());
        SubtenantUser subtenantuserInvalid = new SubtenantUser(null, null, "cc94b3f0-9af2-462e-aaf3-8ac70c01fa0e",
                                                               new Date(1563781722044L), 117, null, null, false,
                                                               "035a77f6-6926-45a5-8547-a299d27bda974f5c3785-5687-4133-a5f4-c47e0d8480abd87502a1-cfb3-4ec6-8424-0e94348f5a7a",
                                                               "ï¦†\u0006\u0007Åžç™°B3\u0014\u001c!;á¶¨\u0016'3N`\u00003\f3C3[Î¯3;3ã‘™í?¼Ë§\u0002\u0004'å³ 3%\u001cæ‡º\bXëŒ‘ä¨‰\u000bRW=/ã¥‚\u0004å©¯Z\u000e\u0018\u001c\u001b$$Eã‰ 33ï¹“è?œ",
                                                               false, false, false, 41, null, null,
                                                               "7a33c8d5-a8b5-43e6-96ee-ef84f493162e", -17,
                                                               "d7d81f16-9f80-45b4-aaea-a2d9d33e2d1f404e48e4-a6f4-4cd6-8409-b48e30d593734c81c00f-d4f3-42ab-a534-6a9f94d8fa8f",
                                                               SubtenantUserStatus.getDefault(), null,
                                                               new Date(1563781716556L),
                                                               "<7A>];d8.>à¨ XE8LA\u000fA7\u0000H\u00004åªž?CS7A\u001bHCç§¡6C&ë‹?87ë˜—\tDd;\u001c7@;CN<`6IJDä¡»7>aí—¢é±†L\u0005");
        assertFalse(subtenantuserInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("d59604e858bddb5f6cc558017117112a", null,
                                                             "f0f7d488-2696-444d-8d1b-3b01eba62386",
                                                             new Date(1563781717011L), -19, null,
                                                             "3c825.dbca6@c5f6b.fr", false,
                                                             "e548e941-ec25-4bfb-80e1-2780b8d87287",
                                                             "d59604e858bddb5f6cc558017117112a", true, false, false,
                                                             120, null, null, "964a066c-01ca-4ada-a50a-86ae180e3c94",
                                                             120, "aaa853df-f47e-4e5e-882a-f908d231a24e",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1563781720688L), "=9F3=KB_i");
            SubtenantUser subtenantuser2 = new SubtenantUser("d59604e858bddb5f6cc558017117112a", null,
                                                             "f0f7d488-2696-444d-8d1b-3b01eba62386",
                                                             new Date(1563781717011L), -19, null,
                                                             "3c825.dbca6@c5f6b.fr", false,
                                                             "e548e941-ec25-4bfb-80e1-2780b8d87287",
                                                             "d59604e858bddb5f6cc558017117112a", true, false, false,
                                                             120, null, null, "964a066c-01ca-4ada-a50a-86ae180e3c94",
                                                             120, "aaa853df-f47e-4e5e-882a-f908d231a24e",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1563781720688L), "=9F3=KB_i");
            SubtenantUser subtenantuser3 = new SubtenantUser("d59604e858bddb5f6cc558017117112a", null,
                                                             "e2140018-0550-456d-9182-ca047af3784d",
                                                             new Date(1563781717890L), -17, null,
                                                             "70a70.e6f64@7eb4b.fr", false,
                                                             "4080fd10-13bf-40c9-9758-4597bbd463b2",
                                                             "d59604e858bddb5f6cc558017117112a", true, false, false,
                                                             -88, null, null, "17494c71-63e2-4b50-acc6-7aa3152115a6",
                                                             33, "58ccf0c9-ea73-4625-a308-0b48bb44cca7",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1563781714775L), "=9F3=KB_i");
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotNull(subtenantuser3);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertNotSame(subtenantuser3, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser1, subtenantuser2);
            assertEquals(subtenantuser1, subtenantuser1);
            assertFalse(subtenantuser1.equals(null));
            assertNotEquals(subtenantuser3, subtenantuser1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
