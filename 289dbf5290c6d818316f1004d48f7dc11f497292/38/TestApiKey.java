// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model ApiKey.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestApiKey {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ApiKey apikey1 = new ApiKey("d59604e858bddb5f6cc558017117112a", new Date(1563781721445L), 43,
                                        "d59604e858bddb5f6cc558017117112a", "ecc7ee23-0118-4a75-b7b6-a3728d3fb06e", 79,
                                        "9fd5270b-9e9c-4209-8f2a-50def8661534", "d59604e858bddb5f6cc558017117112a",
                                        ApiKeyStatus.getDefault(), new Date(1563781720827L));
            ApiKey apikey2 = apikey1.clone();
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotSame(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ApiKey apikey1 = new ApiKey("d59604e858bddb5f6cc558017117112a", new Date(1563781721716L), 7,
                                        "d59604e858bddb5f6cc558017117112a", "3982e560-cbc0-4dd3-965d-9f6f29284e02", 50,
                                        "473f5cbb-d538-4fca-b98a-6d945a0713b9", "d59604e858bddb5f6cc558017117112a",
                                        ApiKeyStatus.getDefault(), new Date(1563781720212L));
            ApiKey apikey2 = new ApiKey("d59604e858bddb5f6cc558017117112a", new Date(1563781721716L), 7,
                                        "d59604e858bddb5f6cc558017117112a", "3982e560-cbc0-4dd3-965d-9f6f29284e02", 50,
                                        "473f5cbb-d538-4fca-b98a-6d945a0713b9", "d59604e858bddb5f6cc558017117112a",
                                        ApiKeyStatus.getDefault(), new Date(1563781720212L));
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotSame(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey2.hashCode(), apikey1.hashCode());
            int hashCode = apikey1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, apikey1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ApiKey apikey = new ApiKey("d59604e858bddb5f6cc558017117112a", new Date(1563781724391L), 117,
                                   "d59604e858bddb5f6cc558017117112a", "6bf2b73d-b200-4f9b-b08d-4d82f73774ba", 95,
                                   "ce96ae2e-7d22-47ef-9111-c8fdf6b1aa19", "d59604e858bddb5f6cc558017117112a",
                                   ApiKeyStatus.getDefault(), new Date(1563781718965L));
        assertTrue(apikey.isValid());
        ApiKey apikeyInvalid = new ApiKey("ï¦†\u0006\u0007Åžç™°B3\u0014\u001c!;á¶¨\u0016'3N`\u00003\f3C3[Î¯3;3ã‘™í?¼Ë§\u0002\u0004'å³ 3%\u001cæ‡º\bXëŒ‘ä¨‰\u000bRW=/ã¥‚\u0004å©¯Z\u000e\u0018\u001c\u001b$$Eã‰ 33ï¹“è?œ",
                                          new Date(1563781723298L), 117,
                                          "ï¦†\u0006\u0007Åžç™°B3\u0014\u001c!;á¶¨\u0016'3N`\u00003\f3C3[Î¯3;3ã‘™í?¼Ë§\u0002\u0004'å³ 3%\u001cæ‡º\bXëŒ‘ä¨‰\u000bRW=/ã¥‚\u0004å©¯Z\u000e\u0018\u001c\u001b$$Eã‰ 33ï¹“è?œ",
                                          "cedf06a5-051d-41bb-8fe4-6d007de8c98d", -119, null,
                                          "ï¦†\u0006\u0007Åžç™°B3\u0014\u001c!;á¶¨\u0016'3N`\u00003\f3C3[Î¯3;3ã‘™í?¼Ë§\u0002\u0004'å³ 3%\u001cæ‡º\bXëŒ‘ä¨‰\u000bRW=/ã¥‚\u0004å©¯Z\u000e\u0018\u001c\u001b$$Eã‰ 33ï¹“è?œ",
                                          ApiKeyStatus.getDefault(), new Date(1563781722082L));
        assertFalse(apikeyInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ApiKey apikey1 = new ApiKey("d59604e858bddb5f6cc558017117112a", new Date(1563781719061L), -50,
                                        "d59604e858bddb5f6cc558017117112a", "b2fc28a6-327b-4f7d-96e6-47b3011530ad", -13,
                                        "90853d2b-044b-474c-a0da-1856f6a39b37", "d59604e858bddb5f6cc558017117112a",
                                        ApiKeyStatus.getDefault(), new Date(1563781722976L));
            ApiKey apikey2 = new ApiKey("d59604e858bddb5f6cc558017117112a", new Date(1563781719061L), -50,
                                        "d59604e858bddb5f6cc558017117112a", "b2fc28a6-327b-4f7d-96e6-47b3011530ad", -13,
                                        "90853d2b-044b-474c-a0da-1856f6a39b37", "d59604e858bddb5f6cc558017117112a",
                                        ApiKeyStatus.getDefault(), new Date(1563781722976L));
            ApiKey apikey3 = new ApiKey("d59604e858bddb5f6cc558017117112a", new Date(1563781714962L), -24,
                                        "d59604e858bddb5f6cc558017117112a", "ceef4303-40d6-41e8-97a5-53568b92d45f",
                                        -110, "f6f45e98-6ff1-480a-bfda-d98b855d1149",
                                        "d59604e858bddb5f6cc558017117112a", ApiKeyStatus.getDefault(),
                                        new Date(1563781719697L));
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotNull(apikey3);
            assertNotSame(apikey2, apikey1);
            assertNotSame(apikey3, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey1, apikey2);
            assertEquals(apikey1, apikey1);
            assertFalse(apikey1.equals(null));
            assertNotEquals(apikey3, apikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
