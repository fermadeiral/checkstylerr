// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model User.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestUser {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            User user1 = new User("d59604e858bddb5f6cc558017117112a", null, "805aaaf5-3ca3-4c1c-aeb3-27696fef39d7",
                                  new Date(1563781720162L), 40, null, "49026.5ee08@951c9.fr", true,
                                  "3da3975a-50d9-42cd-bca8-2b4525f8eb01", "d59604e858bddb5f6cc558017117112a", false,
                                  true, false, 92, null, null, "96a048a7-3dc2-4ff5-bc93-c40dabf44ab5", 91,
                                  "e1d58363-b2ba-4d37-a0cb-9aa9f8ba7376", UserStatus.getDefault(), null,
                                  new Date(1563781716872L), "=9F3=KB_i");
            User user2 = user1.clone();
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotSame(user2, user1);
            assertEquals(user2, user1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            User user1 = new User("d59604e858bddb5f6cc558017117112a", null, "aa8752c6-b7b7-4f09-ad96-95bf54b04a5a",
                                  new Date(1563781716954L), 3, null, "d0fa8.e9ec8@979dc.fr", true,
                                  "bfa5f23b-666b-4b59-9228-5ba463a24d35", "d59604e858bddb5f6cc558017117112a", false,
                                  true, true, 43, null, null, "cfed11b4-ef8c-4227-a954-568a5994ade3", 68,
                                  "befb2ba0-b43d-4ebf-8458-6ff825602153", UserStatus.getDefault(), null,
                                  new Date(1563781719163L), "=9F3=KB_i");
            User user2 = new User("d59604e858bddb5f6cc558017117112a", null, "aa8752c6-b7b7-4f09-ad96-95bf54b04a5a",
                                  new Date(1563781716954L), 3, null, "d0fa8.e9ec8@979dc.fr", true,
                                  "bfa5f23b-666b-4b59-9228-5ba463a24d35", "d59604e858bddb5f6cc558017117112a", false,
                                  true, true, 43, null, null, "cfed11b4-ef8c-4227-a954-568a5994ade3", 68,
                                  "befb2ba0-b43d-4ebf-8458-6ff825602153", UserStatus.getDefault(), null,
                                  new Date(1563781719163L), "=9F3=KB_i");
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotSame(user2, user1);
            assertEquals(user2, user1);
            assertEquals(user2.hashCode(), user1.hashCode());
            int hashCode = user1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, user1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        User user = new User("d59604e858bddb5f6cc558017117112a", null, "8a8cbfc9-4fde-4e6c-9f8c-39b93e63d720",
                             new Date(1563781716431L), 112, null, "ce8ad.15898@3c43c.fr", true,
                             "04e64e60-7500-4ce6-9230-2da5411d73ee", "d59604e858bddb5f6cc558017117112a", true, true,
                             false, -98, null, null, "a7579adc-1800-434e-ada8-fa7d1a7ce926", -123,
                             "f112df64-545a-4363-a336-442fb4cbe24b", UserStatus.getDefault(), null,
                             new Date(1563781718032L), "=9F3=KB_i");
        assertTrue(user.isValid());
        User userInvalid = new User("ï¦†\u0006\u0007Åžç™°B3\u0014\u001c!;á¶¨\u0016'3N`\u00003\f3C3[Î¯3;3ã‘™í?¼Ë§\u0002\u0004'å³ 3%\u001cæ‡º\bXëŒ‘ä¨‰\u000bRW=/ã¥‚\u0004å©¯Z\u000e\u0018\u001c\u001b$$Eã‰ 33ï¹“è?œ",
                                    null, "9f6e4f3c-02d1-427a-908e-ec6055ce8b0d", new Date(1563781717638L), -100, null,
                                    null, false,
                                    "fa71b06d-af1b-4480-bdbe-4ccab9a0e2863affbd93-d133-4a26-bc85-056eff70e16ee128192a-5eb4-46ac-916b-67d60885ee60",
                                    "ï¦†\u0006\u0007Åžç™°B3\u0014\u001c!;á¶¨\u0016'3N`\u00003\f3C3[Î¯3;3ã‘™í?¼Ë§\u0002\u0004'å³ 3%\u001cæ‡º\bXëŒ‘ä¨‰\u000bRW=/ã¥‚\u0004å©¯Z\u000e\u0018\u001c\u001b$$Eã‰ 33ï¹“è?œ",
                                    false, false, true, -80, null, null, "1e70bea3-e485-40f6-a57b-0f86420132e7", -60,
                                    "7d4d340d-bc0f-4356-a14e-876fdda0d5c4d17caf49-b180-4353-9c4c-1c5f7c72e454ec5fc05c-afc1-4f30-ad55-c61602cdaae8",
                                    UserStatus.getDefault(), null, new Date(1563781719213L),
                                    "<7A>];d8.>à¨ XE8LA\u000fA7\u0000H\u00004åªž?CS7A\u001bHCç§¡6C&ë‹?87ë˜—\tDd;\u001c7@;CN<`6IJDä¡»7>aí—¢é±†L\u0005");
        assertFalse(userInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            User user1 = new User("d59604e858bddb5f6cc558017117112a", null, "8a54ee94-9bce-45b6-b784-2c5effae16b0",
                                  new Date(1563781723571L), -42, null, "85629.94c9e@2a401.me", true,
                                  "0423dbe2-b8c8-452c-a3c6-96b542617e6a", "d59604e858bddb5f6cc558017117112a", false,
                                  true, true, -50, null, null, "558210f4-0b4f-409e-8968-9d5d987a8926", 50,
                                  "436eccf9-34b9-4773-86b1-cdf664354bc8", UserStatus.getDefault(), null,
                                  new Date(1563781721665L), "=9F3=KB_i");
            User user2 = new User("d59604e858bddb5f6cc558017117112a", null, "8a54ee94-9bce-45b6-b784-2c5effae16b0",
                                  new Date(1563781723571L), -42, null, "85629.94c9e@2a401.me", true,
                                  "0423dbe2-b8c8-452c-a3c6-96b542617e6a", "d59604e858bddb5f6cc558017117112a", false,
                                  true, true, -50, null, null, "558210f4-0b4f-409e-8968-9d5d987a8926", 50,
                                  "436eccf9-34b9-4773-86b1-cdf664354bc8", UserStatus.getDefault(), null,
                                  new Date(1563781721665L), "=9F3=KB_i");
            User user3 = new User("d59604e858bddb5f6cc558017117112a", null, "b74fa74f-0f7c-48a8-8f3e-1b11588a462c",
                                  new Date(1563781715133L), -64, null, "69c12.530ed@d80fd.me", true,
                                  "1dfe3b73-e4df-4089-bdfe-42c5cdf23d27", "d59604e858bddb5f6cc558017117112a", false,
                                  true, true, 50, null, null, "cddd2917-c9d6-4b76-8b42-6efedb2c86cc", -98,
                                  "16735c2a-fa9c-4440-a802-dde8bc77e41d", UserStatus.getDefault(), null,
                                  new Date(1563781716164L), "=9F3=KB_i");
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotNull(user3);
            assertNotSame(user2, user1);
            assertNotSame(user3, user1);
            assertEquals(user2, user1);
            assertEquals(user2, user1);
            assertEquals(user1, user2);
            assertEquals(user1, user1);
            assertFalse(user1.equals(null));
            assertNotEquals(user3, user1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
