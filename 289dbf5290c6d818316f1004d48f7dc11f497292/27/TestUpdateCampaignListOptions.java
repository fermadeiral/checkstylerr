// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.deviceupdate.model;

import static org.junit.Assert.*;

import com.arm.mbed.cloud.sdk.common.Order;
import com.arm.mbed.cloud.sdk.common.listing.ListOptionsEncoder;
import com.arm.mbed.cloud.sdk.common.listing.filtering.FilterOperator;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import org.junit.Test;

/**
 * Unit tests for Model UpdateCampaignListOptions.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestUpdateCampaignListOptions {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            UpdateCampaignListOptions updatecampaignlistoptions1 = new UpdateCampaignListOptions(Integer.valueOf(56),
                                                                                                 Long.valueOf(48),
                                                                                                 Order.getDefault(),
                                                                                                 "10067f5c-b298-42dd-b70c-cfbf684c987d",
                                                                                                 null, null);
            UpdateCampaignListOptions updatecampaignlistoptions2 = updatecampaignlistoptions1.clone();
            assertNotNull(updatecampaignlistoptions1);
            assertNotNull(updatecampaignlistoptions2);
            assertNotSame(updatecampaignlistoptions2, updatecampaignlistoptions1);
            assertEquals(updatecampaignlistoptions2, updatecampaignlistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the filters method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testFilters() {
        try {
            UpdateCampaignListOptions option = new UpdateCampaignListOptions().inCreatedAts(Arrays.asList(new Date(1563781723953L),
                                                                                                          new Date(1563781724971L),
                                                                                                          new Date(1563781715952L),
                                                                                                          new Date(1563781720061L),
                                                                                                          new Date(1563781723678L)))
                                                                              .notInCreatedAts(Arrays.asList(new Date(1563781723887L),
                                                                                                             new Date(1563781717162L),
                                                                                                             new Date(1563781717960L),
                                                                                                             new Date(1563781720021L),
                                                                                                             new Date(1563781722267L),
                                                                                                             new Date(1563781720417L),
                                                                                                             new Date(1563781717346L),
                                                                                                             new Date(1563781721170L)))
                                                                              .lessThanCreatedAt(new Date(1563781722407L))
                                                                              .greaterThanCreatedAt(new Date(1563781724275L))
                                                                              .equalToName("b07aa401-267f-400b-a9cf-491de4a02854")
                                                                              .notEqualToName("0fadfe91-33f5-484e-a344-5f68b4cfad13")
                                                                              .inNames(Arrays.asList("6f58b560-989f-4694-9178-655ebba2fa3d",
                                                                                                     "f21837ef-9365-490c-85f3-9efc7861cb90",
                                                                                                     "37260f84-a0fb-45f2-a235-8b8de44766d5",
                                                                                                     "357346a7-e978-47bc-9507-ad56672a073e",
                                                                                                     "4b55b33f-b12d-43f2-a8af-263896552ee3",
                                                                                                     "9cee1855-f9e8-49f9-99e3-dd7320449f44",
                                                                                                     "dd0fb066-1f78-4aa5-ab47-96d81f324a29",
                                                                                                     "85756c43-8b3f-425c-b5d9-7f569a37b04e"))
                                                                              .notInNames(Arrays.asList("e77d018b-8dbc-4a0f-844c-c77b6671ae69",
                                                                                                        "182e1b5d-869f-4cc5-9ded-6ab6307d6f43",
                                                                                                        "0ad2a473-60ef-467e-b77d-2aa2683c26cc",
                                                                                                        "c30cd1b1-6df9-4b04-a759-627f762eecb0",
                                                                                                        "e055845f-16c8-428b-a373-793c4b439468"))
                                                                              .equalToId("e94ee77c-4f56-4d43-9697-36328494f86c")
                                                                              .notEqualToId("9e4209aa-ebf3-404f-b372-35a0200f250b")
                                                                              .inIds(Arrays.asList("4e25c370-3afc-4a84-a5b7-5d09f09c47df",
                                                                                                   "737a3330-830c-4ee1-a724-8890f02da974",
                                                                                                   "da2648ea-8ad9-478c-9d5e-17e84f949d60",
                                                                                                   "e3d78aa5-7149-4029-9aa2-193c42feef80",
                                                                                                   "03df1a3b-3d94-40c9-9c39-173760578b81",
                                                                                                   "b8643bc0-f3da-4f57-b07a-c82a6515f708",
                                                                                                   "18ec79b0-c35b-4c48-9408-4fc91f3c96ef"))
                                                                              .notInIds(Arrays.asList("e25da185-60cb-4197-a7c7-194a70400911",
                                                                                                      "c3027f33-d425-4ab3-a395-7963574b57a5",
                                                                                                      "5e594df7-48f9-4f9d-8233-40b259658378",
                                                                                                      "9ff448d6-9bc9-4786-9942-8475117f8015",
                                                                                                      "3c27464c-9295-417c-ab9e-0cd96a2ebbf7",
                                                                                                      "bd1014fe-0ad7-461b-a7ac-701613019f25"))
                                                                              .equalToDeviceFilter("5b24e6c9-d96c-4dfc-b70d-83096e0a4f44")
                                                                              .notEqualToDeviceFilter("527ddb90-1473-4256-932f-970983e1e033")
                                                                              .inDeviceFilters(Arrays.asList("78e11be4-1acc-4662-a7dc-b55d0c84ce7d",
                                                                                                             "cdcf6f07-2ea4-4afb-8b5f-7436efc50d07",
                                                                                                             "0f323ead-b38c-4412-af6c-e50794d89912",
                                                                                                             "85786f32-6a18-43dc-9f76-cc05506a5d34"))
                                                                              .notInDeviceFilters(Arrays.asList("b8e314f5-a8ac-4387-b2bb-7fd9d14e0acc",
                                                                                                                "1eae4918-13aa-4a8e-88ba-4b5fc6104f3a",
                                                                                                                "2444c565-5a9b-4eb9-a1c3-30d494f95cd6",
                                                                                                                "d540a410-93e4-4340-a4ac-574aa62e1a0b",
                                                                                                                "c977db03-5d83-42e3-b22b-ba70e2a83b2b",
                                                                                                                "27f4b4ee-78d1-49ef-a01a-2fc900aa8224",
                                                                                                                "9e9e30d0-c9b5-4ba5-afde-f90f9fcf3062",
                                                                                                                "179dbffa-fdc5-4ba7-875d-b5fdb753bc1c"))
                                                                              .inFinisheds(Arrays.asList(new Date(1563781715904L),
                                                                                                         new Date(1563781716127L),
                                                                                                         new Date(1563781722689L)))
                                                                              .notInFinisheds(Arrays.asList(new Date(1563781722293L),
                                                                                                            new Date(1563781720574L),
                                                                                                            new Date(1563781725513L),
                                                                                                            new Date(1563781722397L),
                                                                                                            new Date(1563781720400L),
                                                                                                            new Date(1563781716061L),
                                                                                                            new Date(1563781720501L)))
                                                                              .lessThanFinished(new Date(1563781718023L))
                                                                              .greaterThanFinished(new Date(1563781717768L))
                                                                              .inStartedAts(Arrays.asList(new Date(1563781716753L),
                                                                                                          new Date(1563781720472L),
                                                                                                          new Date(1563781722696L),
                                                                                                          new Date(1563781715972L)))
                                                                              .notInStartedAts(Arrays.asList(new Date(1563781719978L),
                                                                                                             new Date(1563781718899L),
                                                                                                             new Date(1563781716289L),
                                                                                                             new Date(1563781719815L)))
                                                                              .lessThanStartedAt(new Date(1563781716890L))
                                                                              .greaterThanStartedAt(new Date(1563781723344L))
                                                                              .inWhens(Arrays.asList(new Date(1563781721387L),
                                                                                                     new Date(1563781725469L),
                                                                                                     new Date(1563781718474L),
                                                                                                     new Date(1563781723544L),
                                                                                                     new Date(1563781717065L),
                                                                                                     new Date(1563781720738L),
                                                                                                     new Date(1563781718513L),
                                                                                                     new Date(1563781717709L)))
                                                                              .notInWhens(Arrays.asList(new Date(1563781718832L),
                                                                                                        new Date(1563781725762L),
                                                                                                        new Date(1563781716518L),
                                                                                                        new Date(1563781720424L),
                                                                                                        new Date(1563781717444L),
                                                                                                        new Date(1563781716899L),
                                                                                                        new Date(1563781724558L),
                                                                                                        new Date(1563781724299L)))
                                                                              .lessThanWhen(new Date(1563781724496L))
                                                                              .greaterThanWhen(new Date(1563781721168L))
                                                                              .inUpdatedAts(Arrays.asList(new Date(1563781722258L),
                                                                                                          new Date(1563781719917L),
                                                                                                          new Date(1563781722042L),
                                                                                                          new Date(1563781720759L),
                                                                                                          new Date(1563781725756L),
                                                                                                          new Date(1563781717590L)))
                                                                              .notInUpdatedAts(Arrays.asList(new Date(1563781723946L),
                                                                                                             new Date(1563781723424L),
                                                                                                             new Date(1563781721907L),
                                                                                                             new Date(1563781721019L),
                                                                                                             new Date(1563781720310L),
                                                                                                             new Date(1563781723148L)))
                                                                              .lessThanUpdatedAt(new Date(1563781716154L))
                                                                              .greaterThanUpdatedAt(new Date(1563781717776L))
                                                                              .equalToRootManifestId("871b073c-f196-414c-be6b-573d789a6126")
                                                                              .notEqualToRootManifestId("c251ae64-058e-4985-9267-78cafcf45d54")
                                                                              .inRootManifestIds(Arrays.asList("eb67b1e5-0b63-4287-8351-eb7b17a1c467",
                                                                                                               "bf4108be-c8d4-4a08-a2ca-fc656781c1cf"))
                                                                              .notInRootManifestIds(Arrays.asList("d48cd86e-ffcb-479b-9e72-0241feafc515"))
                                                                              .equalToDescription("30a2e352-012f-4524-bc89-d05c3e3d0e99")
                                                                              .notEqualToDescription("f813b2bf-5188-4f46-bfe9-7bff418e58cf")
                                                                              .inDescriptions(Arrays.asList("28bee768-a375-49ce-a2e1-8d1137f583c5",
                                                                                                            "b545b835-042a-44db-bb41-a5ae77a93ed8"))
                                                                              .notInDescriptions(Arrays.asList("6841bd97-9b37-47d4-b9a7-db63288d392a",
                                                                                                               "b1b32b81-7d1a-4ba8-9eb1-7be8ca502b89",
                                                                                                               "12c34539-b7a5-44fc-8776-2be8e6d1b189",
                                                                                                               "b20025e0-bc97-4d5d-8054-b1ba159d490d",
                                                                                                               "8e9abdef-785a-451e-b484-ba7ef5a8db7a",
                                                                                                               "4958cc64-b17a-4354-998d-83a7a4555f0d",
                                                                                                               "93040c04-7ab0-4246-8a2c-92e9f7c8e4c0"));
            assertTrue(option.hasFilters());
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1563781723953L), new Date(1563781724971L), new Date(1563781715952L),
                                       new Date(1563781720061L), new Date(1563781723678L)),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1563781723887L), new Date(1563781717162L), new Date(1563781717960L),
                                       new Date(1563781720021L), new Date(1563781722267L), new Date(1563781720417L),
                                       new Date(1563781717346L), new Date(1563781721170L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.LESS_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1563781722407L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1563781724275L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME, FilterOperator.EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("b07aa401-267f-400b-a9cf-491de4a02854",
                         ListOptionsEncoder.encodeSingleEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME,
                                                                    String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("0fadfe91-33f5-484e-a344-5f68b4cfad13",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME,
                                                                       String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME, FilterOperator.IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("6f58b560-989f-4694-9178-655ebba2fa3d", "f21837ef-9365-490c-85f3-9efc7861cb90",
                                       "37260f84-a0fb-45f2-a235-8b8de44766d5", "357346a7-e978-47bc-9507-ad56672a073e",
                                       "4b55b33f-b12d-43f2-a8af-263896552ee3", "9cee1855-f9e8-49f9-99e3-dd7320449f44",
                                       "dd0fb066-1f78-4aa5-ab47-96d81f324a29", "85756c43-8b3f-425c-b5d9-7f569a37b04e"),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("e77d018b-8dbc-4a0f-844c-c77b6671ae69", "182e1b5d-869f-4cc5-9ded-6ab6307d6f43",
                                       "0ad2a473-60ef-467e-b77d-2aa2683c26cc", "c30cd1b1-6df9-4b04-a759-627f762eecb0",
                                       "e055845f-16c8-428b-a373-793c4b439468"),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_NAME,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID, FilterOperator.EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("e94ee77c-4f56-4d43-9697-36328494f86c",
                         ListOptionsEncoder.encodeSingleEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("9e4209aa-ebf3-404f-b372-35a0200f250b",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID, FilterOperator.IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("4e25c370-3afc-4a84-a5b7-5d09f09c47df", "737a3330-830c-4ee1-a724-8890f02da974",
                                       "da2648ea-8ad9-478c-9d5e-17e84f949d60", "e3d78aa5-7149-4029-9aa2-193c42feef80",
                                       "03df1a3b-3d94-40c9-9c39-173760578b81", "b8643bc0-f3da-4f57-b07a-c82a6515f708",
                                       "18ec79b0-c35b-4c48-9408-4fc91f3c96ef"),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID, List.class,
                                                                 option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("e25da185-60cb-4197-a7c7-194a70400911", "c3027f33-d425-4ab3-a395-7963574b57a5",
                                       "5e594df7-48f9-4f9d-8233-40b259658378", "9ff448d6-9bc9-4786-9942-8475117f8015",
                                       "3c27464c-9295-417c-ab9e-0cd96a2ebbf7", "bd1014fe-0ad7-461b-a7ac-701613019f25"),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ID,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER, FilterOperator.EQUAL));
            assertNotNull(option.getDeviceFilterFilters());
            assertEquals("5b24e6c9-d96c-4dfc-b70d-83096e0a4f44",
                         ListOptionsEncoder.encodeSingleEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER,
                                                                    String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDeviceFilterFilters());
            assertEquals("527ddb90-1473-4256-932f-970983e1e033",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER,
                                                                       String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER, FilterOperator.IN));
            assertNotNull(option.getDeviceFilterFilters());
            assertEquals(Arrays.asList("78e11be4-1acc-4662-a7dc-b55d0c84ce7d", "cdcf6f07-2ea4-4afb-8b5f-7436efc50d07",
                                       "0f323ead-b38c-4412-af6c-e50794d89912", "85786f32-6a18-43dc-9f76-cc05506a5d34"),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER, FilterOperator.NOT_IN));
            assertNotNull(option.getDeviceFilterFilters());
            assertEquals(Arrays.asList("b8e314f5-a8ac-4387-b2bb-7fd9d14e0acc", "1eae4918-13aa-4a8e-88ba-4b5fc6104f3a",
                                       "2444c565-5a9b-4eb9-a1c3-30d494f95cd6", "d540a410-93e4-4340-a4ac-574aa62e1a0b",
                                       "c977db03-5d83-42e3-b22b-ba70e2a83b2b", "27f4b4ee-78d1-49ef-a01a-2fc900aa8224",
                                       "9e9e30d0-c9b5-4ba5-afde-f90f9fcf3062", "179dbffa-fdc5-4ba7-875d-b5fdb753bc1c"),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DEVICE_FILTER,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED, FilterOperator.IN));
            assertNotNull(option.getFinishedFilters());
            assertEquals(Arrays.asList(new Date(1563781715904L), new Date(1563781716127L), new Date(1563781722689L)),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED, FilterOperator.NOT_IN));
            assertNotNull(option.getFinishedFilters());
            assertEquals(Arrays.asList(new Date(1563781722293L), new Date(1563781720574L), new Date(1563781725513L),
                                       new Date(1563781722397L), new Date(1563781720400L), new Date(1563781716061L),
                                       new Date(1563781720501L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED, FilterOperator.LESS_THAN));
            assertNotNull(option.getFinishedFilters());
            assertEquals(new Date(1563781718023L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED, FilterOperator.GREATER_THAN));
            assertNotNull(option.getFinishedFilters());
            assertEquals(new Date(1563781717768L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_FINISHED,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT, FilterOperator.IN));
            assertNotNull(option.getStartedAtFilters());
            assertEquals(Arrays.asList(new Date(1563781716753L), new Date(1563781720472L), new Date(1563781722696L),
                                       new Date(1563781715972L)),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getStartedAtFilters());
            assertEquals(Arrays.asList(new Date(1563781719978L), new Date(1563781718899L), new Date(1563781716289L),
                                       new Date(1563781719815L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT, FilterOperator.LESS_THAN));
            assertNotNull(option.getStartedAtFilters());
            assertEquals(new Date(1563781716890L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getStartedAtFilters());
            assertEquals(new Date(1563781723344L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_STARTED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN, FilterOperator.IN));
            assertNotNull(option.getWhenFilters());
            assertEquals(Arrays.asList(new Date(1563781721387L), new Date(1563781725469L), new Date(1563781718474L),
                                       new Date(1563781723544L), new Date(1563781717065L), new Date(1563781720738L),
                                       new Date(1563781718513L), new Date(1563781717709L)),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN, FilterOperator.NOT_IN));
            assertNotNull(option.getWhenFilters());
            assertEquals(Arrays.asList(new Date(1563781718832L), new Date(1563781725762L), new Date(1563781716518L),
                                       new Date(1563781720424L), new Date(1563781717444L), new Date(1563781716899L),
                                       new Date(1563781724558L), new Date(1563781724299L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN, FilterOperator.LESS_THAN));
            assertNotNull(option.getWhenFilters());
            assertEquals(new Date(1563781724496L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN, FilterOperator.GREATER_THAN));
            assertNotNull(option.getWhenFilters());
            assertEquals(new Date(1563781721168L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_WHEN,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1563781722258L), new Date(1563781719917L), new Date(1563781722042L),
                                       new Date(1563781720759L), new Date(1563781725756L), new Date(1563781717590L)),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1563781723946L), new Date(1563781723424L), new Date(1563781721907L),
                                       new Date(1563781721019L), new Date(1563781720310L), new Date(1563781723148L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.LESS_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1563781716154L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1563781717776L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(UpdateCampaignListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID,
                                        FilterOperator.EQUAL));
            assertNotNull(option.getRootManifestIdFilters());
            assertEquals("871b073c-f196-414c-be6b-573d789a6126",
                         ListOptionsEncoder.encodeSingleEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getRootManifestIdFilters());
            assertEquals("c251ae64-058e-4985-9267-78cafcf45d54",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID, FilterOperator.IN));
            assertNotNull(option.getRootManifestIdFilters());
            assertEquals(Arrays.asList("eb67b1e5-0b63-4287-8351-eb7b17a1c467", "bf4108be-c8d4-4a08-a2ca-fc656781c1cf"),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID,
                                        FilterOperator.NOT_IN));
            assertNotNull(option.getRootManifestIdFilters());
            assertEquals(Arrays.asList("d48cd86e-ffcb-479b-9e72-0241feafc515"),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_ROOT_MANIFEST_ID,
                                                                    List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("30a2e352-012f-4524-bc89-d05c3e3d0e99",
                         ListOptionsEncoder.encodeSingleEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("f813b2bf-5188-4f46-bfe9-7bff418e58cf",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                       String.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("28bee768-a375-49ce-a2e1-8d1137f583c5", "b545b835-042a-44db-bb41-a5ae77a93ed8"),
                         ListOptionsEncoder.encodeSingleInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                 List.class, option));
            assertTrue(option.hasFilters(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("6841bd97-9b37-47d4-b9a7-db63288d392a", "b1b32b81-7d1a-4ba8-9eb1-7be8ca502b89",
                                       "12c34539-b7a5-44fc-8776-2be8e6d1b189", "b20025e0-bc97-4d5d-8054-b1ba159d490d",
                                       "8e9abdef-785a-451e-b484-ba7ef5a8db7a", "4958cc64-b17a-4354-998d-83a7a4555f0d",
                                       "93040c04-7ab0-4246-8a2c-92e9f7c8e4c0"),
                         ListOptionsEncoder.encodeSingleNotInFilter(UpdateCampaignListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    List.class, option));
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            UpdateCampaignListOptions updatecampaignlistoptions1 = new UpdateCampaignListOptions(Integer.valueOf(-109),
                                                                                                 Long.valueOf(-71),
                                                                                                 Order.getDefault(),
                                                                                                 "2ec1786d-5daa-4b94-bcbb-2d5130195d4c",
                                                                                                 null, null);
            UpdateCampaignListOptions updatecampaignlistoptions2 = new UpdateCampaignListOptions(Integer.valueOf(-109),
                                                                                                 Long.valueOf(-71),
                                                                                                 Order.getDefault(),
                                                                                                 "2ec1786d-5daa-4b94-bcbb-2d5130195d4c",
                                                                                                 null, null);
            assertNotNull(updatecampaignlistoptions1);
            assertNotNull(updatecampaignlistoptions2);
            assertNotSame(updatecampaignlistoptions2, updatecampaignlistoptions1);
            assertEquals(updatecampaignlistoptions2, updatecampaignlistoptions1);
            assertEquals(updatecampaignlistoptions2.hashCode(), updatecampaignlistoptions1.hashCode());
            int hashCode = updatecampaignlistoptions1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, updatecampaignlistoptions1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            UpdateCampaignListOptions updatecampaignlistoptions1 = new UpdateCampaignListOptions(Integer.valueOf(117),
                                                                                                 Long.valueOf(118),
                                                                                                 Order.getDefault(),
                                                                                                 "1d81ccc8-8b40-494e-a860-5be40692b204",
                                                                                                 null, null);
            UpdateCampaignListOptions updatecampaignlistoptions2 = new UpdateCampaignListOptions(Integer.valueOf(117),
                                                                                                 Long.valueOf(118),
                                                                                                 Order.getDefault(),
                                                                                                 "1d81ccc8-8b40-494e-a860-5be40692b204",
                                                                                                 null, null);
            UpdateCampaignListOptions updatecampaignlistoptions3 = new UpdateCampaignListOptions(Integer.valueOf(18),
                                                                                                 Long.valueOf(-24),
                                                                                                 Order.getDefault(),
                                                                                                 "17be484e-77b4-4b67-8331-4518b90ecb98",
                                                                                                 null, null);
            assertNotNull(updatecampaignlistoptions1);
            assertNotNull(updatecampaignlistoptions2);
            assertNotNull(updatecampaignlistoptions3);
            assertNotSame(updatecampaignlistoptions2, updatecampaignlistoptions1);
            assertNotSame(updatecampaignlistoptions3, updatecampaignlistoptions1);
            assertEquals(updatecampaignlistoptions2, updatecampaignlistoptions1);
            assertEquals(updatecampaignlistoptions2, updatecampaignlistoptions1);
            assertEquals(updatecampaignlistoptions1, updatecampaignlistoptions2);
            assertEquals(updatecampaignlistoptions1, updatecampaignlistoptions1);
            assertFalse(updatecampaignlistoptions1.equals(null));
            assertNotEquals(updatecampaignlistoptions3, updatecampaignlistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
