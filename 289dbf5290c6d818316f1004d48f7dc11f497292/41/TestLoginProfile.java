// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model LoginProfile.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestLoginProfile {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            LoginProfile loginprofile1 = new LoginProfile("97380efb-1c4b-43d9-9c9b-430f7c7b9a1a",
                                                          "990de839-b192-4db8-84d0-f54045924eab");
            LoginProfile loginprofile2 = loginprofile1.clone();
            assertNotNull(loginprofile1);
            assertNotNull(loginprofile2);
            assertNotSame(loginprofile2, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            LoginProfile loginprofile1 = new LoginProfile("54dfff19-2259-473e-9ff1-ddff4006bebe",
                                                          "980b7f48-1d7a-4e70-8427-ff207439d35a");
            LoginProfile loginprofile2 = new LoginProfile("54dfff19-2259-473e-9ff1-ddff4006bebe",
                                                          "980b7f48-1d7a-4e70-8427-ff207439d35a");
            assertNotNull(loginprofile1);
            assertNotNull(loginprofile2);
            assertNotSame(loginprofile2, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
            assertEquals(loginprofile2.hashCode(), loginprofile1.hashCode());
            int hashCode = loginprofile1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, loginprofile1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        LoginProfile loginprofile = new LoginProfile("9b4d4db3-b070-4a51-a239-2f92bae6d309",
                                                     "deeeb3b2-416b-4ad2-98c6-246d526574d2");
        assertTrue(loginprofile.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            LoginProfile loginprofile1 = new LoginProfile("1446983b-5e5e-4852-af0f-a93b274ad967",
                                                          "90668883-0d36-46bc-bd41-e7adbda41fd1");
            LoginProfile loginprofile2 = new LoginProfile("1446983b-5e5e-4852-af0f-a93b274ad967",
                                                          "90668883-0d36-46bc-bd41-e7adbda41fd1");
            LoginProfile loginprofile3 = new LoginProfile("1406f4e8-a4d1-44b4-9504-deb958600c1b",
                                                          "5f8c10b1-1ed0-4dd6-980b-4b7e688b96c4");
            assertNotNull(loginprofile1);
            assertNotNull(loginprofile2);
            assertNotNull(loginprofile3);
            assertNotSame(loginprofile2, loginprofile1);
            assertNotSame(loginprofile3, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
            assertEquals(loginprofile1, loginprofile2);
            assertEquals(loginprofile1, loginprofile1);
            assertFalse(loginprofile1.equals(null));
            assertNotEquals(loginprofile3, loginprofile1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
