// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model UserInvitation.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestUserInvitation {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("a2460a11b07ab6ba3b25a51e92b72dc7",
                                                                new Date(1559835559490L), "d99b8.4c265@862d8.me",
                                                                new Date(1559835557401L),
                                                                "a2460a11b07ab6ba3b25a51e92b72dc7", null,
                                                                new Date(1559835556476L),
                                                                "a2460a11b07ab6ba3b25a51e92b72dc7");
            UserInvitation userinvitation2 = userinvitation1.clone();
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotSame(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("a2460a11b07ab6ba3b25a51e92b72dc7",
                                                                new Date(1559835555970L), "1aea4.5f6c3@7b67f.me",
                                                                new Date(1559835557202L),
                                                                "a2460a11b07ab6ba3b25a51e92b72dc7", null,
                                                                new Date(1559835558321L),
                                                                "a2460a11b07ab6ba3b25a51e92b72dc7");
            UserInvitation userinvitation2 = new UserInvitation("a2460a11b07ab6ba3b25a51e92b72dc7",
                                                                new Date(1559835555970L), "1aea4.5f6c3@7b67f.me",
                                                                new Date(1559835557202L),
                                                                "a2460a11b07ab6ba3b25a51e92b72dc7", null,
                                                                new Date(1559835558321L),
                                                                "a2460a11b07ab6ba3b25a51e92b72dc7");
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotSame(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation2.hashCode(), userinvitation1.hashCode());
            int hashCode = userinvitation1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, userinvitation1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        UserInvitation userinvitation = new UserInvitation("a2460a11b07ab6ba3b25a51e92b72dc7", new Date(1559835558878L),
                                                           "16d2e.3d090@d4d37.fr", new Date(1559835551451L),
                                                           "a2460a11b07ab6ba3b25a51e92b72dc7", null,
                                                           new Date(1559835554047L),
                                                           "a2460a11b07ab6ba3b25a51e92b72dc7");
        assertTrue(userinvitation.isValid());
        UserInvitation userinvitationInvalid = new UserInvitation("8\u001aN8<8\u0014%Gâ ­888Oè˜”8U\u000f88888C88B\u001bê½?I[\u0018WéŽ?\u001cç›™êº‹é··M8&\f\u0005)èœ½88TGï¾Ž8A8$$Bâž -8ç?Œ8\u0002\u0002.R",
                                                                  new Date(1559835555781L), null,
                                                                  new Date(1559835556277L),
                                                                  "8\u001aN8<8\u0014%Gâ ­888Oè˜”8U\u000f88888C88B\u001bê½?I[\u0018WéŽ?\u001cç›™êº‹é··M8&\f\u0005)èœ½88TGï¾Ž8A8$$Bâž -8ç?Œ8\u0002\u0002.R",
                                                                  null, new Date(1559835554487L),
                                                                  "8\u001aN8<8\u0014%Gâ ­888Oè˜”8U\u000f88888C88B\u001bê½?I[\u0018WéŽ?\u001cç›™êº‹é··M8&\f\u0005)èœ½88TGï¾Ž8A8$$Bâž -8ç?Œ8\u0002\u0002.R");
        assertFalse(userinvitationInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("a2460a11b07ab6ba3b25a51e92b72dc7",
                                                                new Date(1559835556298L), "14eeb.f9514@0f27a.me",
                                                                new Date(1559835559716L),
                                                                "a2460a11b07ab6ba3b25a51e92b72dc7", null,
                                                                new Date(1559835559363L),
                                                                "a2460a11b07ab6ba3b25a51e92b72dc7");
            UserInvitation userinvitation2 = new UserInvitation("a2460a11b07ab6ba3b25a51e92b72dc7",
                                                                new Date(1559835556298L), "14eeb.f9514@0f27a.me",
                                                                new Date(1559835559716L),
                                                                "a2460a11b07ab6ba3b25a51e92b72dc7", null,
                                                                new Date(1559835559363L),
                                                                "a2460a11b07ab6ba3b25a51e92b72dc7");
            UserInvitation userinvitation3 = new UserInvitation("a2460a11b07ab6ba3b25a51e92b72dc7",
                                                                new Date(1559835554209L), "820d3.9521c@03b9a.fr",
                                                                new Date(1559835552360L),
                                                                "a2460a11b07ab6ba3b25a51e92b72dc7", null,
                                                                new Date(1559835552897L),
                                                                "a2460a11b07ab6ba3b25a51e92b72dc7");
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotNull(userinvitation3);
            assertNotSame(userinvitation2, userinvitation1);
            assertNotSame(userinvitation3, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation1, userinvitation2);
            assertEquals(userinvitation1, userinvitation1);
            assertFalse(userinvitation1.equals(null));
            assertNotEquals(userinvitation3, userinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
