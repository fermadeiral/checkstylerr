// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantUser.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantUser {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("a2460a11b07ab6ba3b25a51e92b72dc7", null,
                                                             "b3b666f9-0622-4f38-b0cd-bc5c67d60864",
                                                             new Date(1559835552432L), -63, null,
                                                             "c72a3.701df@f7d12.fr", false,
                                                             "4e9978cf-1ce1-418d-b83b-22bbcd1354f9",
                                                             "a2460a11b07ab6ba3b25a51e92b72dc7", false, true, true, 63,
                                                             null, null, "03f6cd16-fb3a-4a75-9255-b2575fb1d5cd", -39,
                                                             "3048fe65-76ce-4644-a215-73eaa9c7fd04",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1559835560275L), ",+,o-.");
            SubtenantUser subtenantuser2 = subtenantuser1.clone();
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("a2460a11b07ab6ba3b25a51e92b72dc7", null,
                                                             "6f1aef8d-173a-42f3-8e95-cf381a010a46",
                                                             new Date(1559835554757L), -24, null,
                                                             "fdc7b.cf498@418be.fr", true,
                                                             "e29fe2c9-4421-4a1e-9976-84bf5fe753ca",
                                                             "a2460a11b07ab6ba3b25a51e92b72dc7", true, true, false, 13,
                                                             null, null, "e78b9f51-075d-47ba-a890-b3ce9b483835", 109,
                                                             "46110ae7-53d6-4ff7-bd1b-23724f1970fb",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1559835551411L), ",+,o-.");
            SubtenantUser subtenantuser2 = new SubtenantUser("a2460a11b07ab6ba3b25a51e92b72dc7", null,
                                                             "6f1aef8d-173a-42f3-8e95-cf381a010a46",
                                                             new Date(1559835554757L), -24, null,
                                                             "fdc7b.cf498@418be.fr", true,
                                                             "e29fe2c9-4421-4a1e-9976-84bf5fe753ca",
                                                             "a2460a11b07ab6ba3b25a51e92b72dc7", true, true, false, 13,
                                                             null, null, "e78b9f51-075d-47ba-a890-b3ce9b483835", 109,
                                                             "46110ae7-53d6-4ff7-bd1b-23724f1970fb",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1559835551411L), ",+,o-.");
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2.hashCode(), subtenantuser1.hashCode());
            int hashCode = subtenantuser1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantuser1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantUser subtenantuser = new SubtenantUser("a2460a11b07ab6ba3b25a51e92b72dc7", null,
                                                        "47ac1d0d-5070-4333-838a-24986b5c2c8f",
                                                        new Date(1559835553749L), -109, null, "910b8.72ce5@1cc20.fr",
                                                        false, "ac501e8f-a7b7-4f51-bd8c-3592284156d9",
                                                        "a2460a11b07ab6ba3b25a51e92b72dc7", false, true, false, 45,
                                                        null, null, "b6a25cf8-1f20-474d-a8c8-300f63d1b265", -24,
                                                        "2b08d055-3bfa-4440-bcf3-be1210618043",
                                                        SubtenantUserStatus.getDefault(), null,
                                                        new Date(1559835558857L), ",+,o-.");
        assertTrue(subtenantuser.isValid());
        SubtenantUser subtenantuserInvalid = new SubtenantUser(null, null, "fa7894a7-ac84-4368-b421-8e732d258165",
                                                               new Date(1559835554574L), -51, null, null, false,
                                                               "2c8f22a5-1e94-4d4c-b13a-240fde75004180ee6f9a-c06f-45e4-801e-f51850632a5b7fff887f-6d16-4039-9318-fbec95a399e7",
                                                               "8\u001aN8<8\u0014%Gâ ­888Oè˜”8U\u000f88888C88B\u001bê½?I[\u0018WéŽ?\u001cç›™êº‹é··M8&\f\u0005)èœ½88TGï¾Ž8A8$$Bâž -8ç?Œ8\u0002\u0002.R",
                                                               true, false, true, -13, null, null,
                                                               "3c8e8c2c-d8e9-4a75-819c-148d902c0184", 31,
                                                               "f2a9e1ef-4531-4975-8f8b-ae5a4ec98f274b2331a2-ec26-494a-8abb-76519e178a1afae243f7-6298-4d78-a4b9-b32e50449fe1",
                                                               SubtenantUserStatus.getDefault(), null,
                                                               new Date(1559835559075L),
                                                               "\u0003\u0014----Që•Šëšž--kæ—§W'îšƒ\u0003î¶µQKâ§œU\u000eë¶¶æ?¨-å??-S-è“?F\u0013î€¥l$$-à¼º-è†»--æ¨«\u001a--P--âª… _á©œ\u0012U\u0013-\u0016>--n-\b");
        assertFalse(subtenantuserInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("a2460a11b07ab6ba3b25a51e92b72dc7", null,
                                                             "1e758635-cf26-4a46-8d49-b3e48dd21643",
                                                             new Date(1559835551342L), 4, null, "d6bda.bc319@ad9ce.fr",
                                                             true, "c5f31463-6486-43f9-84ed-c6541e49a11c",
                                                             "a2460a11b07ab6ba3b25a51e92b72dc7", true, false, false,
                                                             -76, null, null, "1a740ea5-4878-4a4d-ad89-a11e25bd5f8c",
                                                             -4, "c2f9a8cc-9611-462c-93e1-dc584dbf9958",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1559835557039L), ",+,o-.");
            SubtenantUser subtenantuser2 = new SubtenantUser("a2460a11b07ab6ba3b25a51e92b72dc7", null,
                                                             "1e758635-cf26-4a46-8d49-b3e48dd21643",
                                                             new Date(1559835551342L), 4, null, "d6bda.bc319@ad9ce.fr",
                                                             true, "c5f31463-6486-43f9-84ed-c6541e49a11c",
                                                             "a2460a11b07ab6ba3b25a51e92b72dc7", true, false, false,
                                                             -76, null, null, "1a740ea5-4878-4a4d-ad89-a11e25bd5f8c",
                                                             -4, "c2f9a8cc-9611-462c-93e1-dc584dbf9958",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1559835557039L), ",+,o-.");
            SubtenantUser subtenantuser3 = new SubtenantUser("a2460a11b07ab6ba3b25a51e92b72dc7", null,
                                                             "1eb90613-4ae1-433c-a574-038ad6680027",
                                                             new Date(1559835555621L), -9, null, "3e5aa.f4810@fcee7.me",
                                                             true, "5250d215-710c-4cb2-93b8-9b30717665fe",
                                                             "a2460a11b07ab6ba3b25a51e92b72dc7", true, false, false,
                                                             -124, null, null, "c243aa43-5d05-434f-9639-d38fadee2edf",
                                                             64, "3de162d9-4327-4864-bdff-155c1c9da45e",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1559835557338L), ",+,o-.");
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotNull(subtenantuser3);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertNotSame(subtenantuser3, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser1, subtenantuser2);
            assertEquals(subtenantuser1, subtenantuser1);
            assertFalse(subtenantuser1.equals(null));
            assertNotEquals(subtenantuser3, subtenantuser1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
