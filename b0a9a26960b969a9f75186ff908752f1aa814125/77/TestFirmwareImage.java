// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.deviceupdate.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model FirmwareImage.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestFirmwareImage {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            FirmwareImage firmwareimage1 = new FirmwareImage(new Date(1561383442122L),
                                                             "1c476efa-67d6-4026-b7eb-1f03bf91d163", 103,
                                                             "722e409a-2495-496d-902d-0096746393a7",
                                                             "e7778dc0-3658-48ac-84aa-78882ebe7e53",
                                                             "b7e1c4d2-e0ab-49fb-95a2-986fd434f85c",
                                                             "33f62e49-dd05-42d2-b366-4746b5e47579",
                                                             new Date(1561383444282L));
            FirmwareImage firmwareimage2 = firmwareimage1.clone();
            assertNotNull(firmwareimage1);
            assertNotNull(firmwareimage2);
            assertNotSame(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage2, firmwareimage1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            FirmwareImage firmwareimage1 = new FirmwareImage(new Date(1561383449232L),
                                                             "29d88f54-e962-4021-858b-fa730265fb53", 60,
                                                             "41ebc197-b5f3-468a-9897-9ec88d799c83",
                                                             "04a20944-3736-4caa-8450-86dd1d958df1",
                                                             "118d0575-44eb-41b3-b03f-e5cc69da360d",
                                                             "393f6d4a-351c-4070-9048-de96a89c96a4",
                                                             new Date(1561383445552L));
            FirmwareImage firmwareimage2 = new FirmwareImage(new Date(1561383449232L),
                                                             "29d88f54-e962-4021-858b-fa730265fb53", 60,
                                                             "41ebc197-b5f3-468a-9897-9ec88d799c83",
                                                             "04a20944-3736-4caa-8450-86dd1d958df1",
                                                             "118d0575-44eb-41b3-b03f-e5cc69da360d",
                                                             "393f6d4a-351c-4070-9048-de96a89c96a4",
                                                             new Date(1561383445552L));
            assertNotNull(firmwareimage1);
            assertNotNull(firmwareimage2);
            assertNotSame(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage2.hashCode(), firmwareimage1.hashCode());
            int hashCode = firmwareimage1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, firmwareimage1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        FirmwareImage firmwareimage = new FirmwareImage(new Date(1561383442631L),
                                                        "3a4d7d2c-5a07-4a67-bb33-e0592e76ac95", -86,
                                                        "14eb5660-47ec-43f2-b1d0-8ba39c310db8",
                                                        "a09f1fbd-28c3-40c5-9224-f066b5b6a303",
                                                        "00d4a99d-9419-4fb8-8f0a-5f382bae7da1",
                                                        "595e3a39-dd81-4570-ad3d-e27a299da189",
                                                        new Date(1561383442870L));
        assertTrue(firmwareimage.isValid());
        FirmwareImage firmwareimageInvalid = new FirmwareImage(new Date(1561383448947L),
                                                               "20b351ca-3e22-4783-8e06-198d4e3e5adc", 14,
                                                               "dd9eed62-5fec-4c51-babb-58090b8c723f",
                                                               "5edb1834-c7cd-4bcd-ab66-2fd933572fe767da096c-a16c-4236-b9fb-84129731ecc169ae92f0-bbb1-4b3c-8170-0ffc38f8eb50aa882770-28a8-4b40-98e8-0b8eef26a3bf8ac1a7c9-d9aa-4cf8-ba45-b32fad7ffe74e9aa5f05-3313-4a98-be53-974ee7f71861369186e1-05bb-49c6-911b-c815808363be797589f7-0dd5-4a23-bff2-4e48e801568a792882f4-468c-4a0c-a0ba-eb85bde060dd47824f8d-3bd0-49a2-8d2e-e3116fc733da095644b1-e83f-483f-a18e-c12f44a8ccecc7098e87-770d-46dd-9b0b-176ba5df48db2c187b85-199f-4468-bb5c-a0627971b1b3141dcefe-de9d-4c51-b3fd-51d4e778a9a576f5cf79-c2cc-4af4-8bad-2c83f23583e3d928d06e-53d3-401e-a67c-b02d231ee2bc3d0a2621-b02a-4052-a658-394357b31b1f44ade355-5bf6-4e4b-9330-4c50b8a9b57be8fb3cb9-903e-4b66-8adc-0817f3952e93345ede25-3894-4e20-9a34-21bed0d4cd4a9ff88f8e-dd24-4d25-8fdd-74a7b9b039f1b8ea9073-da60-4927-9727-e30750c1f4d5869fda3d-bc88-448e-b722-79787d1ec16e00ceebc7-6352-4e31-885a-e6e656f6b26fcf1a3086-46d0-4c7b-8d8e-c7c8e6652edf62c35773-90cb-4b9d-9bf4-8e9b541f97c3bf0f9a29-f3bc-4f1a-a244-1697908b7b6744316657-3d97-45c6-9932-19d0a2a981bc096baae7-1e20-4304-893f-e6495660621e9a0d4028-c98c-4b37-84b3-54430c4deabe28298a23-29b0-48ae-80d3-03fe3b47f52844f229f7-4409-4d28-8036-40916155e6652afbf9cb-50a7-45e4-a5c4-b2e0b505d8495d0c2e05-19b7-4160-852e-04019497af51198f52b7-b912-4dc2-9814-6ea3917ac2ffd9a3f757-3b36-4a5e-a7fd-a59573dcd671ff020bcd-8fc2-46fe-bbff-404541a95b127ea082a0-cfbd-485b-9d26-23f0b993d67b72f94ddb-cbe0-478a-b03c-c8b39397a299675d2e37-b293-485c-95aa-ec535f8975d5c0824a1e-a692-4903-b2c9-59fa215214555feedabd-e3d7-4bea-bcdd-342283be0ef10f803399-dd51-444f-9195-622d35cc6e235b843965-7a32-4a7e-b889-c68dff8afca7fdcc5831-11ce-4d75-8d0e-b1448a5b4895bcb4335e-7798-4441-b56c-cf19d5a26e8aea0d3921-3dd0-44cc-bc06-92ee7751080539c90d62-6dae-433f-93ce-e2dfbd6893b54c76bf98-84cd-4afa-9417-2569e0dd145d3e09f74c-ffc2-4c61-a431-2b6783c76a2f842ce59d-84a3-4220-82a6-3fc4e60b00b99fac2ee6-1756-4e86-b661-b2aa496a3b1c711d1a3d-ba03-4398-b740-08177225fd9c8449d9df-e091-4bf2-8cee-d3d1167ad0668ea2a52b-4cf9-4423-b259-544c5cf5e9371049bb67-0d62-4a7b-b2f3-fa5a348d7af1",
                                                               "8256a5df-2429-4b94-a2ab-0016deb32e9a",
                                                               "4ef9e6d5-a200-403d-bf0f-af17166664d451ccdb3a-23e7-4419-89ed-422d430557bb2004f9de-6e74-43ea-b28e-88cb9699117c9686960e-319c-4030-808a-8b8bca235e4c",
                                                               new Date(1561383448083L));
        assertFalse(firmwareimageInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            FirmwareImage firmwareimage1 = new FirmwareImage(new Date(1561383442786L),
                                                             "b1638126-07ed-4a43-8858-0ec3997dfb78", -87,
                                                             "fc84190c-b7d9-4799-bfce-9f1b5525c71f",
                                                             "958a0ca5-a328-4813-a91b-51848588c25e",
                                                             "3f46e3d8-6096-4bbc-9c52-ccd29f4050c2",
                                                             "5174bc23-2708-42be-98e0-ee903a8514fa",
                                                             new Date(1561383446408L));
            FirmwareImage firmwareimage2 = new FirmwareImage(new Date(1561383442786L),
                                                             "b1638126-07ed-4a43-8858-0ec3997dfb78", -87,
                                                             "fc84190c-b7d9-4799-bfce-9f1b5525c71f",
                                                             "958a0ca5-a328-4813-a91b-51848588c25e",
                                                             "3f46e3d8-6096-4bbc-9c52-ccd29f4050c2",
                                                             "5174bc23-2708-42be-98e0-ee903a8514fa",
                                                             new Date(1561383446408L));
            FirmwareImage firmwareimage3 = new FirmwareImage(new Date(1561383442488L),
                                                             "dfdfef01-0a66-430d-a4c4-35da36281cb2", 118,
                                                             "fdd01ddb-26af-4b71-99eb-5d18eba7b25f",
                                                             "29f00104-844a-4eaf-bf42-13b3ef0a27d9",
                                                             "79acd2ba-d577-4088-a057-85aa239ccc5d",
                                                             "15562fed-637c-4bbd-a660-3e2106e0c33c",
                                                             new Date(1561383446906L));
            assertNotNull(firmwareimage1);
            assertNotNull(firmwareimage2);
            assertNotNull(firmwareimage3);
            assertNotSame(firmwareimage2, firmwareimage1);
            assertNotSame(firmwareimage3, firmwareimage1);
            assertEquals(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage1, firmwareimage2);
            assertEquals(firmwareimage1, firmwareimage1);
            assertFalse(firmwareimage1.equals(null));
            assertNotEquals(firmwareimage3, firmwareimage1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
