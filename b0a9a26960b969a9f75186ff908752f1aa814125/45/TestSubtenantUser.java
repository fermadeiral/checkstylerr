// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantUser.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantUser {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("6db86c0a205f4061b6e4796773e6aba1", null,
                                                             "a38a3442-13af-479c-8fbb-6e83a881dac6",
                                                             new Date(1561383450190L), 44, null, "0cf86.c24e6@3bdad.me",
                                                             false, "12707e86-0dd5-447c-879e-cb03c8a382d8",
                                                             "6db86c0a205f4061b6e4796773e6aba1", true, true, false, 42,
                                                             null, null, "0bd8d2c3-a981-4c45-9e79-d170567e098e", 17,
                                                             "a763333b-b828-48c7-8e4e-6904be3308e1",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1561383440671L), "=@e_h");
            SubtenantUser subtenantuser2 = subtenantuser1.clone();
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("6db86c0a205f4061b6e4796773e6aba1", null,
                                                             "63230067-0407-47a9-8913-184a3802fe98",
                                                             new Date(1561383444026L), -82, null,
                                                             "33145.dba68@8da25.fr", true,
                                                             "62ba8371-54f1-4910-a962-3cd250aba998",
                                                             "6db86c0a205f4061b6e4796773e6aba1", true, true, true, 42,
                                                             null, null, "5c7a9c8a-dd78-47ce-998e-4d0468ecfeed", -23,
                                                             "e70b9616-8384-421b-9a1a-efe7c21c808d",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1561383445779L), "=@e_h");
            SubtenantUser subtenantuser2 = new SubtenantUser("6db86c0a205f4061b6e4796773e6aba1", null,
                                                             "63230067-0407-47a9-8913-184a3802fe98",
                                                             new Date(1561383444026L), -82, null,
                                                             "33145.dba68@8da25.fr", true,
                                                             "62ba8371-54f1-4910-a962-3cd250aba998",
                                                             "6db86c0a205f4061b6e4796773e6aba1", true, true, true, 42,
                                                             null, null, "5c7a9c8a-dd78-47ce-998e-4d0468ecfeed", -23,
                                                             "e70b9616-8384-421b-9a1a-efe7c21c808d",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1561383445779L), "=@e_h");
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2.hashCode(), subtenantuser1.hashCode());
            int hashCode = subtenantuser1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantuser1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantUser subtenantuser = new SubtenantUser("6db86c0a205f4061b6e4796773e6aba1", null,
                                                        "336decb4-cd23-49e0-8574-7b4f0a00cde3",
                                                        new Date(1561383440875L), 22, null, "62c42.f1764@8eea6.me",
                                                        false, "764f2f46-4d50-4503-be6b-510d2cdfb5f2",
                                                        "6db86c0a205f4061b6e4796773e6aba1", true, true, false, -94,
                                                        null, null, "33b3474a-8674-4dbe-8563-4e8fd8d49ca1", 72,
                                                        "648292fb-5f1d-4d8a-a928-df7e117a13da",
                                                        SubtenantUserStatus.getDefault(), null,
                                                        new Date(1561383445229L), "=@e_h");
        assertTrue(subtenantuser.isValid());
        SubtenantUser subtenantuserInvalid = new SubtenantUser(null, null, "77c41cc7-6efb-4131-9281-2f7aaddde1de",
                                                               new Date(1561383450555L), 91, null, null, false,
                                                               "694f0f15-6515-433f-87f1-37978b180181d87c92fc-e070-44ed-b2b7-bfcf2dcdc4aa68ffb066-e84a-43b8-9e39-385f2256b4aa",
                                                               "à°¸&ã«“E\u0011\u0014Pá?Ž\u001bï¢´î¬‘ëˆ·æ?«O_çµ˜\u0017_\u0001^Mí”‰T] á„ºJ\u0012;\f.ç³®?Z-\u001bä›¤\fã½¯D=)\u0013 `^/Vì„¼=\u0001T[\u0010D>[\u001eä°?\u0000=è”•",
                                                               false, true, false, -91, null, null,
                                                               "a7bdef6b-22f9-4205-b17d-5fb932fc31de", -12,
                                                               "a507724f-ba01-4b98-a2bd-a77934053435f7db11ca-ce35-44ac-9fee-9318e406aa50e9a08c90-7b21-40c4-8323-d187803a4496",
                                                               SubtenantUserStatus.getDefault(), null,
                                                               new Date(1561383448972L),
                                                               "aS\u0014W/fg```?F>ï‰ƒgë´›á°ˆ >é¶?\u0013>ä¼ŒK\f\\\\VagFì™–fPRb0;;Fé³›gãºˆdfdMaç²©Ufaæ±?fB\u0014f\u0014\\\\f?`??V");
        assertFalse(subtenantuserInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("6db86c0a205f4061b6e4796773e6aba1", null,
                                                             "2b60415f-9422-4571-98b2-432e2d4f4206",
                                                             new Date(1561383448110L), -76, null,
                                                             "087ed.5c9c9@affdb.fr", true,
                                                             "1691cd2b-fa0a-444e-80c3-6d81652ab3d0",
                                                             "6db86c0a205f4061b6e4796773e6aba1", false, false, false,
                                                             -12, null, null, "3fd3fa13-5c77-428b-9303-e63fec439ed2",
                                                             107, "1923d582-6fc1-4220-a966-8a1a487960ff",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1561383441973L), "=@e_h");
            SubtenantUser subtenantuser2 = new SubtenantUser("6db86c0a205f4061b6e4796773e6aba1", null,
                                                             "2b60415f-9422-4571-98b2-432e2d4f4206",
                                                             new Date(1561383448110L), -76, null,
                                                             "087ed.5c9c9@affdb.fr", true,
                                                             "1691cd2b-fa0a-444e-80c3-6d81652ab3d0",
                                                             "6db86c0a205f4061b6e4796773e6aba1", false, false, false,
                                                             -12, null, null, "3fd3fa13-5c77-428b-9303-e63fec439ed2",
                                                             107, "1923d582-6fc1-4220-a966-8a1a487960ff",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1561383441973L), "=@e_h");
            SubtenantUser subtenantuser3 = new SubtenantUser("6db86c0a205f4061b6e4796773e6aba1", null,
                                                             "d55842b9-47cc-48a6-8fe4-fee94c74a4d3",
                                                             new Date(1561383448261L), 75, null, "a554b.c9e3c@6ce8a.me",
                                                             true, "eec94ed5-2e92-4204-b75b-bd5abb83b80a",
                                                             "6db86c0a205f4061b6e4796773e6aba1", false, false, false,
                                                             -26, null, null, "26b7888c-1f7d-4804-84ee-a968ed758710",
                                                             -106, "0ccd48f0-6b5b-48e1-b885-395cad87e876",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1561383450205L), "=@e_h");
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotNull(subtenantuser3);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertNotSame(subtenantuser3, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser1, subtenantuser2);
            assertEquals(subtenantuser1, subtenantuser1);
            assertFalse(subtenantuser1.equals(null));
            assertNotEquals(subtenantuser3, subtenantuser1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
