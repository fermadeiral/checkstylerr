// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model ActiveSession.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestActiveSession {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ActiveSession activesession1 = new ActiveSession("6db86c0a205f4061b6e4796773e6aba1",
                                                             "c7503202-cbd5-48c9-b427-557ab3bbe591",
                                                             new Date(1561383444045L),
                                                             "e1ed5db3-fa70-488f-97d2-423f77c28002",
                                                             "34d559fd-368e-4308-99ee-4c592f905827");
            ActiveSession activesession2 = activesession1.clone();
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotSame(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ActiveSession activesession1 = new ActiveSession("6db86c0a205f4061b6e4796773e6aba1",
                                                             "c0986bbb-20e0-4731-a93d-9a2cb8bf62bc",
                                                             new Date(1561383441690L),
                                                             "4329b206-3bc6-411f-a672-99d936c38c49",
                                                             "d9d951b7-cc28-4934-b272-a147db956bf6");
            ActiveSession activesession2 = new ActiveSession("6db86c0a205f4061b6e4796773e6aba1",
                                                             "c0986bbb-20e0-4731-a93d-9a2cb8bf62bc",
                                                             new Date(1561383441690L),
                                                             "4329b206-3bc6-411f-a672-99d936c38c49",
                                                             "d9d951b7-cc28-4934-b272-a147db956bf6");
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotSame(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession2.hashCode(), activesession1.hashCode());
            int hashCode = activesession1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, activesession1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ActiveSession activesession = new ActiveSession("6db86c0a205f4061b6e4796773e6aba1",
                                                        "fcacb87e-74b3-4adb-bb15-7d47dc39cfb0",
                                                        new Date(1561383449692L),
                                                        "4f34dc06-7cab-4709-adbf-491900de8fdc",
                                                        "6b610959-67ca-4d45-8daa-48606f9ba3c6");
        assertTrue(activesession.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ActiveSession activesession1 = new ActiveSession("6db86c0a205f4061b6e4796773e6aba1",
                                                             "637b70af-12bc-4b75-8cae-22f31254a604",
                                                             new Date(1561383448562L),
                                                             "9c40bac4-fc99-44ca-bbb9-ffdcc6df0335",
                                                             "6bea3d7b-2bbd-43dd-96fd-e6e728246eaf");
            ActiveSession activesession2 = new ActiveSession("6db86c0a205f4061b6e4796773e6aba1",
                                                             "637b70af-12bc-4b75-8cae-22f31254a604",
                                                             new Date(1561383448562L),
                                                             "9c40bac4-fc99-44ca-bbb9-ffdcc6df0335",
                                                             "6bea3d7b-2bbd-43dd-96fd-e6e728246eaf");
            ActiveSession activesession3 = new ActiveSession("6db86c0a205f4061b6e4796773e6aba1",
                                                             "62bdffa4-18d8-440c-a560-c3d2b4b06157",
                                                             new Date(1561383447753L),
                                                             "e91e2905-c20f-401e-ad86-a0d6b1ac6428",
                                                             "be6f4b81-39b9-402d-97ed-b1a3a0873b70");
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotNull(activesession3);
            assertNotSame(activesession2, activesession1);
            assertNotSame(activesession3, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession1, activesession2);
            assertEquals(activesession1, activesession1);
            assertFalse(activesession1.equals(null));
            assertNotEquals(activesession3, activesession1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
