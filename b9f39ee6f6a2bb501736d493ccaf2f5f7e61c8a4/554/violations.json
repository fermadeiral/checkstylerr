[
    {
        "line": "2",
        "severity": "error",
        "message": "Line does not match expected header line of ' \\* Licensed to the Apache Software Foundation \\(ASF\\) under one or more'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.header.RegexpHeaderCheck"
    },
    {
        "line": "24",
        "severity": "warning",
        "message": "Wrong order for 'org.apache.commons.lang.RandomStringUtils' import.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheck"
    },
    {
        "line": "25",
        "severity": "warning",
        "message": "'org.apache.usergrid.persistence.qakka.core.QueueMessage' should be separated from previous imports.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheck"
    },
    {
        "line": "26",
        "severity": "warning",
        "message": "'org.junit.Assert' should be separated from previous imports.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheck"
    },
    {
        "line": "32",
        "severity": "warning",
        "message": "Wrong order for 'javax.ws.rs.client.Client' import.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheck"
    },
    {
        "line": "38",
        "severity": "warning",
        "message": "Wrong order for 'java.net.URISyntaxException' import.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheck"
    },
    {
        "line": "39",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - java.util.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "43",
        "column": "33",
        "severity": "warning",
        "message": "Name 'logger' must match pattern '^([A-Z](_?[A-Z0-9]+)*)|(log)$'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.naming.ConstantNameCheck"
    },
    {
        "line": "45",
        "severity": "warning",
        "message": "Line has trailing spaces.",
        "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
    },
    {
        "line": "51",
        "severity": "warning",
        "message": "Line has trailing spaces.",
        "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
    },
    {
        "line": "53",
        "severity": "warning",
        "message": "Line has trailing spaces.",
        "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
    },
    {
        "line": "57",
        "column": "99",
        "severity": "warning",
        "message": "Only one statement per line allowed.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
    },
    {
        "line": "63",
        "column": "9",
        "severity": "warning",
        "message": "Avoid nested blocks.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.AvoidNestedBlocksCheck"
    },
    {
        "line": "68",
        "severity": "warning",
        "message": "Line has trailing spaces.",
        "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
    },
    {
        "line": "92",
        "column": "21",
        "severity": "warning",
        "message": "'{' at column 21 should have line break after.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
    },
    {
        "line": "92",
        "column": "40",
        "severity": "warning",
        "message": "'}' at column 40 should be alone on a line.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
    },
    {
        "line": "92",
        "column": "83",
        "severity": "warning",
        "message": "Empty catch block.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.EmptyBlockCheck"
    },
    {
        "line": "92",
        "column": "84",
        "severity": "warning",
        "message": "'{' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "92",
        "column": "84",
        "severity": "warning",
        "message": "'}' at column 84 should be alone on a line.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
    },
    {
        "line": "92",
        "column": "84",
        "severity": "warning",
        "message": "'}' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "92",
        "column": "85",
        "severity": "warning",
        "message": "Empty statement.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.EmptyStatementCheck"
    },
    {
        "line": "100",
        "severity": "warning",
        "message": "Line has trailing spaces.",
        "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
    },
    {
        "line": "106",
        "column": "9",
        "severity": "warning",
        "message": "Avoid nested blocks.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.AvoidNestedBlocksCheck"
    },
    {
        "line": "111",
        "severity": "warning",
        "message": "Line has trailing spaces.",
        "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
    },
    {
        "line": "122",
        "severity": "warning",
        "message": "Line has trailing spaces.",
        "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
    },
    {
        "line": "133",
        "column": "17",
        "severity": "warning",
        "message": "'}' at column 17 should be alone on a line.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
    },
    {
        "line": "144",
        "severity": "warning",
        "message": "Line has trailing spaces.",
        "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
    }
]