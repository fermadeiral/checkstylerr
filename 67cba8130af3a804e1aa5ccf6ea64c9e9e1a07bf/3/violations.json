[
    {
        "line": "18",
        "severity": "warning",
        "message": "'package' should be separated from previous statement.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
    },
    {
        "line": "23",
        "severity": "warning",
        "message": "Using the '.*' form of import should be avoided - org.apache.metron.indexing.dao.search.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "33",
        "severity": "warning",
        "message": "Wrong lexicographical order for 'java.util.Arrays' import. Should be before 'org.mockito.Mock'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.CustomImportOrderCheck"
    },
    {
        "line": "34",
        "severity": "warning",
        "message": "Wrong lexicographical order for 'java.util.HashMap' import. Should be before 'org.mockito.Mock'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.CustomImportOrderCheck"
    },
    {
        "line": "35",
        "severity": "warning",
        "message": "Wrong lexicographical order for 'java.util.List' import. Should be before 'org.mockito.Mock'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.CustomImportOrderCheck"
    },
    {
        "line": "37",
        "severity": "warning",
        "message": "Import statement for 'org.junit.Assert.assertEquals' is in the wrong order. Should be in the 'STATIC' group, expecting not assigned imports on this line.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.CustomImportOrderCheck"
    },
    {
        "line": "38",
        "severity": "warning",
        "message": "Import statement for 'org.mockito.Matchers.any' is in the wrong order. Should be in the 'STATIC' group, expecting not assigned imports on this line.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.CustomImportOrderCheck"
    },
    {
        "line": "39",
        "severity": "warning",
        "message": "Import statement for 'org.mockito.Matchers.argThat' is in the wrong order. Should be in the 'STATIC' group, expecting not assigned imports on this line.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.CustomImportOrderCheck"
    },
    {
        "line": "40",
        "severity": "warning",
        "message": "Import statement for 'org.mockito.Mockito.*' is in the wrong order. Should be in the 'STATIC' group, expecting not assigned imports on this line.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.CustomImportOrderCheck"
    },
    {
        "line": "40",
        "severity": "warning",
        "message": "Using the '.*' form of import should be avoided - org.mockito.Mockito.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "49",
        "column": "3",
        "severity": "warning",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "63",
        "severity": "warning",
        "message": "Line is longer than 100 characters (found 104).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "63",
        "column": "74",
        "severity": "warning",
        "message": "WhitespaceAround: '{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "63",
        "column": "101",
        "severity": "warning",
        "message": "'}' at column 101 should be alone on a line.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
    },
    {
        "line": "63",
        "column": "104",
        "severity": "warning",
        "message": "Only one statement per line allowed.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
    },
    {
        "line": "68",
        "severity": "warning",
        "message": "Line is longer than 100 characters (found 104).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "68",
        "column": "74",
        "severity": "warning",
        "message": "WhitespaceAround: '{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "68",
        "column": "101",
        "severity": "warning",
        "message": "'}' at column 101 should be alone on a line.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
    },
    {
        "line": "68",
        "column": "104",
        "severity": "warning",
        "message": "Only one statement per line allowed.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.OneStatementPerLineCheck"
    },
    {
        "line": "75",
        "severity": "warning",
        "message": "Line is longer than 100 characters (found 134).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "101",
        "severity": "warning",
        "message": "Line is longer than 100 characters (found 110).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "128",
        "column": "5",
        "severity": "warning",
        "message": "'}' at column 5 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally).",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
    },
    {
        "line": "129",
        "column": "10",
        "severity": "warning",
        "message": "WhitespaceAround: 'catch' is not followed by whitespace. Empty blocks may only be represented as {} when not part of a multi-block statement (4.1.3)",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    }
]