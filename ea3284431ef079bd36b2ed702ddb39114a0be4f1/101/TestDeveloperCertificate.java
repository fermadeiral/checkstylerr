// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.security.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeveloperCertificate.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeveloperCertificate {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("13163af5-bd1f-4a0c-8038-28e864d9f864",
                                                                                  "8397e297-6cb1-40ff-aea9-3c78caa4f965",
                                                                                  new Date(1552426066966L),
                                                                                  "cf32360e-c920-4ac8-bf61-ab5308ec6c6b",
                                                                                  "912348fc-0784-45bd-86e8-d1b398e697f2",
                                                                                  "e1d8ea3f-33c4-4109-8166-475bf3233e1c",
                                                                                  "b4c851d2-976a-4d47-bd58-a7e224b44f50");
            DeveloperCertificate developercertificate2 = developercertificate1.clone();
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("d54beaa9-8325-43e6-90bc-1128ea80a721",
                                                                                  "39349a75-057f-4493-9cd1-367711666720",
                                                                                  new Date(1552426065296L),
                                                                                  "0b37d5b0-c401-447d-97e7-861eaab430c2",
                                                                                  "d9f364e8-8f83-48fc-bade-fc82adf06be6",
                                                                                  "61749e1b-0334-442f-b85e-1e0e2abf7382",
                                                                                  "54f22ddc-c8cf-4d3a-b4b8-1daa74c3d569");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("d54beaa9-8325-43e6-90bc-1128ea80a721",
                                                                                  "39349a75-057f-4493-9cd1-367711666720",
                                                                                  new Date(1552426065296L),
                                                                                  "0b37d5b0-c401-447d-97e7-861eaab430c2",
                                                                                  "d9f364e8-8f83-48fc-bade-fc82adf06be6",
                                                                                  "61749e1b-0334-442f-b85e-1e0e2abf7382",
                                                                                  "54f22ddc-c8cf-4d3a-b4b8-1daa74c3d569");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2.hashCode(), developercertificate1.hashCode());
            int hashCode = developercertificate1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, developercertificate1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeveloperCertificate developercertificate = new DeveloperCertificate("8c0431df-ab22-4023-a14c-3dfe22534d13",
                                                                             "cfa61ddf-3457-45a2-b369-2bdb95aa80f4",
                                                                             new Date(1552426063432L),
                                                                             "b160a5a3-cabe-4554-ac07-eac30048e4e2",
                                                                             "e31e7000-f42c-4282-856b-6c154227c0d5",
                                                                             "943e6d8f-5dec-4b49-857e-97a0c9a71a84",
                                                                             "2a975293-1de1-449c-b2b3-dc4ab3a4bc9a");
        assertTrue(developercertificate.isValid());
        DeveloperCertificate developercertificateInvalid = new DeveloperCertificate("a2a4b4b1-9391-4a2f-a9cb-e5d41fc4719e",
                                                                                    "24c47aac-7955-40bf-ad5d-377e4312b2df",
                                                                                    new Date(1552426063859L),
                                                                                    "9016693f-c435-4ac9-a58a-c830c8f8f438",
                                                                                    "9672c3d9-058f-42bb-91df-b3306e82e3d9",
                                                                                    null,
                                                                                    "5057ac42-6c2e-4a66-84d0-337e67190906");
        assertFalse(developercertificateInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("b978ec40-01cf-4a5b-84d1-fa5367b7bbb9",
                                                                                  "4e203ebc-6ab3-49ef-8d24-c262cf8c651b",
                                                                                  new Date(1552426070015L),
                                                                                  "2b2c1efe-1b9a-47e5-8367-5203ebc59786",
                                                                                  "ed109acf-b96b-4263-b569-606360b56b24",
                                                                                  "3dccc24e-ac69-4a2e-8a52-6208162644b7",
                                                                                  "e144687c-b65b-4450-a20e-5ef9d6f387e7");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("b978ec40-01cf-4a5b-84d1-fa5367b7bbb9",
                                                                                  "4e203ebc-6ab3-49ef-8d24-c262cf8c651b",
                                                                                  new Date(1552426070015L),
                                                                                  "2b2c1efe-1b9a-47e5-8367-5203ebc59786",
                                                                                  "ed109acf-b96b-4263-b569-606360b56b24",
                                                                                  "3dccc24e-ac69-4a2e-8a52-6208162644b7",
                                                                                  "e144687c-b65b-4450-a20e-5ef9d6f387e7");
            DeveloperCertificate developercertificate3 = new DeveloperCertificate("08f6485e-9d0c-41d9-bc87-0349c756e400",
                                                                                  "5daae729-3a4e-4b4a-9c39-1fe6e1bfb52a",
                                                                                  new Date(1552426066065L),
                                                                                  "692fb65a-885d-4ade-8b4a-f76720492791",
                                                                                  "2a6ebdfd-cbad-4d7d-a1e9-21b5fedbf23b",
                                                                                  "8efef320-e281-4cfb-bcee-73f201ab3f86",
                                                                                  "f8c60490-60fc-4619-8a67-e1d58cddf817");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotNull(developercertificate3);
            assertNotSame(developercertificate2, developercertificate1);
            assertNotSame(developercertificate3, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate1, developercertificate2);
            assertEquals(developercertificate1, developercertificate1);
            assertFalse(developercertificate1.equals(null));
            assertNotEquals(developercertificate3, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
