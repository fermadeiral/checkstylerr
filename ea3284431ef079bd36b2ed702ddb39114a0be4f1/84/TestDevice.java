// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model Device.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDevice {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            Device device1 = new Device("6c82d6ec-5514-4161-9296-a5b5e4b7f8e4", false, new Date(1552426068135L),
                                        new Date(1552426068314L), "ed53f3f4-02dd-4b6e-ad6c-daea925b2cc0",
                                        new Date(1552426064541L), new Date(1552426069537L), null,
                                        DeviceDeployedState.getDefault(), "717a65ce-1bea-4b0b-955a-b5975d5dd6fc",
                                        "3ca3baed-933f-4b9b-9866-70da3583f7fa", "fc88b255-f969-4e8c-8ec8-621f23e9d1a5",
                                        83, "2a1de0c3-2ad8-4a3d-b3fb-6fe7f7aceadf",
                                        "b18e6b7e-b2f4-4868-8699-a0a02c906936", "7ba09f04-f3a1-4269-a2c0-bf1c7029547d",
                                        new Date(1552426069490L), "61506659-1956-41cf-ad7b-87787b9ff8f0",
                                        "1b718768-169e-4d4f-ade1-59b680c6b4ec", "236825d2-67f8-4a14-ba3e-04122b4f4437",
                                        "b0f8c263-3f4d-46ec-99f4-0cc444a23c6b", new Date(1552426072169L),
                                        DeviceMechanism.getDefault(), "e28261d5-adaa-4c2a-8fce-67711250a18d",
                                        "6d547051-fdc8-44a4-94d9-6758ad5863eb", "77bbf6e0-1a33-49fa-a5e5-f214a9cefd37",
                                        DeviceState.getDefault(), new Date(1552426064170L),
                                        "74e06a84-3790-483e-ae3a-d3fb8760431a");
            Device device2 = device1.clone();
            assertNotNull(device1);
            assertNotNull(device2);
            assertNotSame(device2, device1);
            assertEquals(device2, device1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            Device device1 = new Device("57367903-c631-42bc-8105-1caf2d0e5e6b", false, new Date(1552426071950L),
                                        new Date(1552426065527L), "e5f483ab-304d-4833-a1c0-9718b8ab9a59",
                                        new Date(1552426070620L), new Date(1552426066482L), null,
                                        DeviceDeployedState.getDefault(), "73b8a6ac-faf6-450c-9beb-bd6a84f631b8",
                                        "068388a4-2c4e-4865-814d-e0cfba93d4e9", "f4eb6473-1f63-4f98-8d8e-ae6ec578e142",
                                        -28, "4eac9ebb-f6ba-4e91-85a5-044ba4c8b329",
                                        "b57d0ca8-927d-4216-969a-34fb48b2308f", "69c53662-5879-48fb-8b39-b5188ecc48fb",
                                        new Date(1552426069442L), "1de642f5-5127-48eb-b162-f60661bf8deb",
                                        "1c777c76-607f-429b-a156-6fe381518384", "62268447-f241-4806-9aca-e92291e06e9b",
                                        "6b3450d5-3567-43bb-b684-03bd78f49bc8", new Date(1552426063415L),
                                        DeviceMechanism.getDefault(), "663c0221-0fdd-4a53-b68a-685302f5bb67",
                                        "3c1772cf-9b95-45e9-a40e-d7d035bb3a86", "563d7353-32e6-42bb-a5d6-eef4c0486a6c",
                                        DeviceState.getDefault(), new Date(1552426066550L),
                                        "7a00412f-033d-481a-8e82-fd6a38f5a5ce");
            Device device2 = new Device("57367903-c631-42bc-8105-1caf2d0e5e6b", false, new Date(1552426071950L),
                                        new Date(1552426065527L), "e5f483ab-304d-4833-a1c0-9718b8ab9a59",
                                        new Date(1552426070620L), new Date(1552426066482L), null,
                                        DeviceDeployedState.getDefault(), "73b8a6ac-faf6-450c-9beb-bd6a84f631b8",
                                        "068388a4-2c4e-4865-814d-e0cfba93d4e9", "f4eb6473-1f63-4f98-8d8e-ae6ec578e142",
                                        -28, "4eac9ebb-f6ba-4e91-85a5-044ba4c8b329",
                                        "b57d0ca8-927d-4216-969a-34fb48b2308f", "69c53662-5879-48fb-8b39-b5188ecc48fb",
                                        new Date(1552426069442L), "1de642f5-5127-48eb-b162-f60661bf8deb",
                                        "1c777c76-607f-429b-a156-6fe381518384", "62268447-f241-4806-9aca-e92291e06e9b",
                                        "6b3450d5-3567-43bb-b684-03bd78f49bc8", new Date(1552426063415L),
                                        DeviceMechanism.getDefault(), "663c0221-0fdd-4a53-b68a-685302f5bb67",
                                        "3c1772cf-9b95-45e9-a40e-d7d035bb3a86", "563d7353-32e6-42bb-a5d6-eef4c0486a6c",
                                        DeviceState.getDefault(), new Date(1552426066550L),
                                        "7a00412f-033d-481a-8e82-fd6a38f5a5ce");
            assertNotNull(device1);
            assertNotNull(device2);
            assertNotSame(device2, device1);
            assertEquals(device2, device1);
            assertEquals(device2.hashCode(), device1.hashCode());
            int hashCode = device1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, device1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        Device device = new Device("d35f63be-d04d-4d52-9f46-848fc71da322", false, new Date(1552426068587L),
                                   new Date(1552426072827L), "0f64c4c3-3f4d-4d46-8559-9c280ad414ec",
                                   new Date(1552426065056L), new Date(1552426070085L), null,
                                   DeviceDeployedState.getDefault(), "4c7185db-4c76-42fc-b9d3-1c2af8031bb6",
                                   "1a161d3e-0833-40ae-923e-47b5cb4de92a", "2e22d5c6-f0e8-4131-a895-4c3f7ca125d7", -45,
                                   "f335c47b-fce9-4f38-8060-1313e0c8f846", "ef4af1d0-490c-4937-9fef-e425014a5846",
                                   "e710569e-2f17-4e61-af7b-d0f3f76c95d6", new Date(1552426064937L),
                                   "fc4c5806-50de-4b67-9057-24ff87218355", "009094e5-731c-47bc-b36f-bdff62fb756d",
                                   "21ddfcd4-0985-449e-9e1b-a79025f7931c", "2d136f31-62eb-4611-8477-cb3db4da8d37",
                                   new Date(1552426072476L), DeviceMechanism.getDefault(),
                                   "d7c7e2a2-eb43-4666-a510-cea574f9fd25", "ac9e7815-4d37-435d-b8aa-f9b797160cfb",
                                   "e99d1639-a655-4c08-a4c3-68793a1f8feb", DeviceState.getDefault(),
                                   new Date(1552426071006L), "32c8467a-9755-45d1-a954-4b20151d66bf");
        assertTrue(device.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            Device device1 = new Device("70eb3d77-20e0-4d29-a711-90d66dcb1985", true, new Date(1552426067603L),
                                        new Date(1552426066887L), "5c9b0696-760e-4178-a90b-ae0cffbf8d40",
                                        new Date(1552426064912L), new Date(1552426068566L), null,
                                        DeviceDeployedState.getDefault(), "42564e54-61cd-49ab-aa05-f5550cee0c50",
                                        "fb68291c-d810-4712-8175-822dc82f1971", "5be447d7-4474-4285-99e5-d9f3cb649d81",
                                        -23, "e852931e-31e2-4a71-94c2-0175eaa1a0ef",
                                        "4e02d691-9e33-4ca2-a48f-a219dcd52475", "85697c3c-6ea6-4921-bf9a-b140ba948fcc",
                                        new Date(1552426068331L), "137b499f-698a-4196-9959-6b35703485b2",
                                        "69e5a145-b907-4235-9f49-802157542a58", "54e61fc9-b8ef-44b4-8322-b8f6b15063a3",
                                        "17210f2d-bba2-495b-b2c4-0111be1d4076", new Date(1552426067439L),
                                        DeviceMechanism.getDefault(), "35a3c387-c80b-4a93-b9f3-c253525b8f66",
                                        "126a55ba-fe47-47c8-ad1f-d202460d5131", "e461231a-522c-4a3c-a91a-c36bbf69e27b",
                                        DeviceState.getDefault(), new Date(1552426064579L),
                                        "0168e111-87cf-48cf-9669-ddbf15b0f109");
            Device device2 = new Device("70eb3d77-20e0-4d29-a711-90d66dcb1985", true, new Date(1552426067603L),
                                        new Date(1552426066887L), "5c9b0696-760e-4178-a90b-ae0cffbf8d40",
                                        new Date(1552426064912L), new Date(1552426068566L), null,
                                        DeviceDeployedState.getDefault(), "42564e54-61cd-49ab-aa05-f5550cee0c50",
                                        "fb68291c-d810-4712-8175-822dc82f1971", "5be447d7-4474-4285-99e5-d9f3cb649d81",
                                        -23, "e852931e-31e2-4a71-94c2-0175eaa1a0ef",
                                        "4e02d691-9e33-4ca2-a48f-a219dcd52475", "85697c3c-6ea6-4921-bf9a-b140ba948fcc",
                                        new Date(1552426068331L), "137b499f-698a-4196-9959-6b35703485b2",
                                        "69e5a145-b907-4235-9f49-802157542a58", "54e61fc9-b8ef-44b4-8322-b8f6b15063a3",
                                        "17210f2d-bba2-495b-b2c4-0111be1d4076", new Date(1552426067439L),
                                        DeviceMechanism.getDefault(), "35a3c387-c80b-4a93-b9f3-c253525b8f66",
                                        "126a55ba-fe47-47c8-ad1f-d202460d5131", "e461231a-522c-4a3c-a91a-c36bbf69e27b",
                                        DeviceState.getDefault(), new Date(1552426064579L),
                                        "0168e111-87cf-48cf-9669-ddbf15b0f109");
            Device device3 = new Device("08de1fd6-63d2-4a72-9ffd-70a5921415ae", true, new Date(1552426064953L),
                                        new Date(1552426064276L), "82242005-73fd-47cc-83c4-0465a7333617",
                                        new Date(1552426068487L), new Date(1552426064976L), null,
                                        DeviceDeployedState.getDefault(), "aedf5b0c-ea9a-4379-bebe-0cd7d1dc7bfe",
                                        "0ddd7e15-effb-42ce-93a1-46a80c79b66b", "29b831c1-0bf1-467f-9d27-4f8194593123",
                                        20, "f8663f28-d7d2-4537-9be5-e6049186d584",
                                        "b868e50a-b665-4503-9ea4-20af6e0e0db0", "3fdf55b3-9993-4c47-a12b-128f9d0a23e6",
                                        new Date(1552426070098L), "f35b1cce-7a63-4d15-a4ce-03ea34017945",
                                        "da14acff-4b50-4caa-81ca-e27134ccf3da", "85096bdf-1bf6-4964-8ba5-83d47f80e46e",
                                        "a20c04e9-a1b9-4f6a-b07e-dc828a21fd55", new Date(1552426067628L),
                                        DeviceMechanism.getDefault(), "30393da8-a758-41bd-8c98-4086ece611d1",
                                        "066f4d2e-2cf5-4258-a3f2-e93774757512", "d7aa9dfd-9895-4994-ac82-1f45c0498bdd",
                                        DeviceState.getDefault(), new Date(1552426065911L),
                                        "75563939-a969-4e22-8395-dcc3a59129a9");
            assertNotNull(device1);
            assertNotNull(device2);
            assertNotNull(device3);
            assertNotSame(device2, device1);
            assertNotSame(device3, device1);
            assertEquals(device2, device1);
            assertEquals(device2, device1);
            assertEquals(device1, device2);
            assertEquals(device1, device1);
            assertFalse(device1.equals(null));
            assertNotEquals(device3, device1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
