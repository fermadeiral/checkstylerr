// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model UserInvitation.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestUserInvitation {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("1b4d93ff-cf2e-43c7-84c1-9bd7db161600",
                                                                new Date(1552426069871L),
                                                                "bca2c9cc-d94e-4611-ba68-b7da9f017ae6",
                                                                new Date(1552426070778L),
                                                                "d2be6391-2704-41e2-9c4c-ccb0616d84af", null,
                                                                new Date(1552426071611L),
                                                                "d5a67c5e-6193-4c3c-a2fb-dd4b812cd165");
            UserInvitation userinvitation2 = userinvitation1.clone();
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotSame(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("5d88aaf6-e755-4ca9-9958-e5ab531ffe77",
                                                                new Date(1552426063747L),
                                                                "bf46f174-9eed-49b2-9263-94e9d0195bb0",
                                                                new Date(1552426064881L),
                                                                "d4ca526f-393b-4b52-b9fe-b46cb04b6ddd", null,
                                                                new Date(1552426065775L),
                                                                "5cb07d6c-161a-42b7-8316-fdb2b7c9adbd");
            UserInvitation userinvitation2 = new UserInvitation("5d88aaf6-e755-4ca9-9958-e5ab531ffe77",
                                                                new Date(1552426063747L),
                                                                "bf46f174-9eed-49b2-9263-94e9d0195bb0",
                                                                new Date(1552426064881L),
                                                                "d4ca526f-393b-4b52-b9fe-b46cb04b6ddd", null,
                                                                new Date(1552426065775L),
                                                                "5cb07d6c-161a-42b7-8316-fdb2b7c9adbd");
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotSame(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation2.hashCode(), userinvitation1.hashCode());
            int hashCode = userinvitation1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, userinvitation1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        UserInvitation userinvitation = new UserInvitation("91002fd0-0a87-4c11-9877-7576d5156fac",
                                                           new Date(1552426070453L),
                                                           "c0282eed-b5b6-4421-9845-0be07ad6c1e3",
                                                           new Date(1552426069773L),
                                                           "a3bb7122-2b7e-4422-8a4b-e7d313b6bb02", null,
                                                           new Date(1552426067768L),
                                                           "33bcd222-630b-492b-b3ee-560796a7089a");
        assertTrue(userinvitation.isValid());
        UserInvitation userinvitationInvalid = new UserInvitation("351dcaa2-e5c4-4aef-a3e8-5ec4aec3c724",
                                                                  new Date(1552426069897L), null,
                                                                  new Date(1552426072022L),
                                                                  "951b0497-0f51-4b58-861f-0df634873bf8", null,
                                                                  new Date(1552426069997L),
                                                                  "281d47a2-163a-44bb-9ec8-c803c1946f2c");
        assertFalse(userinvitationInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("dd782bb8-a2b3-488b-a618-e34018fb0a4f",
                                                                new Date(1552426066224L),
                                                                "84f7383e-759a-44b9-9439-b2fd8920fc30",
                                                                new Date(1552426065090L),
                                                                "dd83e3e3-197e-4695-a67c-0bbb8535b60d", null,
                                                                new Date(1552426068951L),
                                                                "ea0a7409-334b-41b1-99b5-ae72aebc72c4");
            UserInvitation userinvitation2 = new UserInvitation("dd782bb8-a2b3-488b-a618-e34018fb0a4f",
                                                                new Date(1552426066224L),
                                                                "84f7383e-759a-44b9-9439-b2fd8920fc30",
                                                                new Date(1552426065090L),
                                                                "dd83e3e3-197e-4695-a67c-0bbb8535b60d", null,
                                                                new Date(1552426068951L),
                                                                "ea0a7409-334b-41b1-99b5-ae72aebc72c4");
            UserInvitation userinvitation3 = new UserInvitation("05400c4e-1e1b-4de9-b824-cdfcf412ea31",
                                                                new Date(1552426066479L),
                                                                "27c47ce8-0d14-4a78-a27d-62c907a42941",
                                                                new Date(1552426072750L),
                                                                "16f22f7f-a008-48d1-84a1-82be5a7855bd", null,
                                                                new Date(1552426069944L),
                                                                "e3527eac-c35c-4155-8631-9f80dda5aa99");
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotNull(userinvitation3);
            assertNotSame(userinvitation2, userinvitation1);
            assertNotSame(userinvitation3, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation1, userinvitation2);
            assertEquals(userinvitation1, userinvitation1);
            assertFalse(userinvitation1.equals(null));
            assertNotEquals(userinvitation3, userinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
