// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEvents.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEvents {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1552426070135L), null,
                                                          new Date(1552426072398L),
                                                          "34939ccc-32d8-468c-bdea-cb2c092b7bc7",
                                                          "03f89e31-c4ac-4dbd-8a12-44ee0848d190",
                                                          "668d33d1-1715-4447-9ef6-016053a26ace",
                                                          "fce4c8f4-c0d7-4664-90f9-c681c8414962",
                                                          "2c519d83-23fd-43e3-8137-71aa893fb7e6",
                                                          "82e48243-fca4-4eb3-aea3-2f488d8ebe33", true);
            DeviceEvents deviceevents2 = deviceevents1.clone();
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1552426063761L), null,
                                                          new Date(1552426072108L),
                                                          "faaae4dd-8b17-4630-8c8e-9ccb836efb8d",
                                                          "3c660bba-a820-4820-b0f3-d045678137c6",
                                                          "e445dee4-67e7-41fa-9605-5b394feb63d3",
                                                          "c096581b-248e-4bfa-9fff-5b614482ca52",
                                                          "14ae74ef-5407-4de3-8881-e39a40bbb7f6",
                                                          "c1357840-4be7-4b4b-9183-545b3719c17a", false);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1552426063761L), null,
                                                          new Date(1552426072108L),
                                                          "faaae4dd-8b17-4630-8c8e-9ccb836efb8d",
                                                          "3c660bba-a820-4820-b0f3-d045678137c6",
                                                          "e445dee4-67e7-41fa-9605-5b394feb63d3",
                                                          "c096581b-248e-4bfa-9fff-5b614482ca52",
                                                          "14ae74ef-5407-4de3-8881-e39a40bbb7f6",
                                                          "c1357840-4be7-4b4b-9183-545b3719c17a", false);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2.hashCode(), deviceevents1.hashCode());
            int hashCode = deviceevents1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceevents1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEvents deviceevents = new DeviceEvents(null, new Date(1552426067390L), null, new Date(1552426065644L),
                                                     "522e1dad-c9d1-430e-9a84-bfab3bc42514",
                                                     "431667c2-5db5-487d-92b3-ceb46bb08712",
                                                     "e79ac683-f503-447d-ba09-d2c83040e2c8",
                                                     "71031dd8-a831-4327-a3fa-435160c0facf",
                                                     "0ae16f57-677d-488c-a3d3-dddba27a4bef",
                                                     "260bec4c-fb5e-4fac-b3b1-98fd2643b631", false);
        assertTrue(deviceevents.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1552426064767L), null,
                                                          new Date(1552426065502L),
                                                          "c3bcf973-93c9-44f7-81b6-8974a8e13cb6",
                                                          "7fee5e51-ede3-4a0b-9cd5-854d7df04213",
                                                          "2128b3e3-c5a4-4b5e-b605-84d807eea5ca",
                                                          "a0dfb85c-798f-48f5-8995-c698cecb0648",
                                                          "960b572e-abb0-41f7-808f-3fa7630124a8",
                                                          "e015df84-4460-4c6f-8aaa-a5405859b868", false);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1552426064767L), null,
                                                          new Date(1552426065502L),
                                                          "c3bcf973-93c9-44f7-81b6-8974a8e13cb6",
                                                          "7fee5e51-ede3-4a0b-9cd5-854d7df04213",
                                                          "2128b3e3-c5a4-4b5e-b605-84d807eea5ca",
                                                          "a0dfb85c-798f-48f5-8995-c698cecb0648",
                                                          "960b572e-abb0-41f7-808f-3fa7630124a8",
                                                          "e015df84-4460-4c6f-8aaa-a5405859b868", false);
            DeviceEvents deviceevents3 = new DeviceEvents(null, new Date(1552426070649L), null,
                                                          new Date(1552426065487L),
                                                          "cf6d24ab-3d12-42b8-a784-20bcf9eb266b",
                                                          "fcbe0afb-1fbd-4513-9b85-e2c7dfb9f275",
                                                          "d52ec5e7-422b-44e0-b725-53326d63bc15",
                                                          "aea72fe3-d064-4c43-9221-8aaac58e6b22",
                                                          "fa525542-410e-47e8-83af-e235b7926e3e",
                                                          "11094c46-2e91-4e98-bf5f-72c61c4dccc3", false);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotNull(deviceevents3);
            assertNotSame(deviceevents2, deviceevents1);
            assertNotSame(deviceevents3, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents1, deviceevents2);
            assertEquals(deviceevents1, deviceevents1);
            assertFalse(deviceevents1.equals(null));
            assertNotEquals(deviceevents3, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
