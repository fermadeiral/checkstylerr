// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEnrollment.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEnrollment {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEnrollment deviceenrollment1 = new DeviceEnrollment("ed2832fa-be1d-456b-b479-99a2f0b1ee09",
                                                                      new Date(1552426072136L),
                                                                      new Date(1552426071516L),
                                                                      "L1xQ4R0pMbh35uFMM93WPskgex16uBA2",
                                                                      "A-goLe6JG80wT8IE98l:u5xVg2Xo9w680cc1q8OA1GncH2ENTkhU:7xuZr1cibVxUWli2E:ZrXowj4xAX1qkonFkvRm5vxbgo",
                                                                      new Date(1552426072447L),
                                                                      "O2DC6h8sdS97iyOlz3o500x21U779B70");
            DeviceEnrollment deviceenrollment2 = deviceenrollment1.clone();
            assertNotNull(deviceenrollment1);
            assertNotNull(deviceenrollment2);
            assertNotSame(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEnrollment deviceenrollment1 = new DeviceEnrollment("70dad09b-0717-484b-aeb8-6926f28621f3",
                                                                      new Date(1552426068506L),
                                                                      new Date(1552426066060L),
                                                                      "PM3ncSQe1Xg236z5lB93oUqb5esY8X7v",
                                                                      "A-G7Y0Y27Suo:F9E24EGx1eHuV3kl6HnzE8EVQfbdpd4hqoI2yzNU5EXNGRDrM8w:SZ4bRw1MrpL4:Xp4z85phEI1PtirLzh4",
                                                                      new Date(1552426065642L),
                                                                      "fMg7cL980sW8E7a9Ru28py7NYnMZ1DC9");
            DeviceEnrollment deviceenrollment2 = new DeviceEnrollment("70dad09b-0717-484b-aeb8-6926f28621f3",
                                                                      new Date(1552426068506L),
                                                                      new Date(1552426066060L),
                                                                      "PM3ncSQe1Xg236z5lB93oUqb5esY8X7v",
                                                                      "A-G7Y0Y27Suo:F9E24EGx1eHuV3kl6HnzE8EVQfbdpd4hqoI2yzNU5EXNGRDrM8w:SZ4bRw1MrpL4:Xp4z85phEI1PtirLzh4",
                                                                      new Date(1552426065642L),
                                                                      "fMg7cL980sW8E7a9Ru28py7NYnMZ1DC9");
            assertNotNull(deviceenrollment1);
            assertNotNull(deviceenrollment2);
            assertNotSame(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2.hashCode(), deviceenrollment1.hashCode());
            int hashCode = deviceenrollment1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceenrollment1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEnrollment deviceenrollment = new DeviceEnrollment("8a6002b8-15f1-46da-9666-9fc6c0acc82d",
                                                                 new Date(1552426069562L), new Date(1552426065137L),
                                                                 "7CVl9L02o4w31hfkxXbH61eu3Ekyj7ys",
                                                                 "A-h4gLD5Dblc3X2mSeqOgA2KyhqkwgdKxJmxR89r5UQh6kvtI0bvnW39ALqk2V88hxYQIlO:dw0G8LZ2MViJ5aCrg9pMM7K5N",
                                                                 new Date(1552426068226L),
                                                                 "ue8483ii33RthsYqOdOEg4L9EH2t4aAO");
        assertTrue(deviceenrollment.isValid());
        DeviceEnrollment deviceenrollmentInvalid = new DeviceEnrollment("70b17c4f-bb94-488d-b0cc-e4cd5d959ba2",
                                                                        new Date(1552426063837L),
                                                                        new Date(1552426071431L),
                                                                        "Fj:qTRTîˆ¦5g:6à»?as^222TC\u0001^5â†­mv66ï°šT\u001dMgT66s5g5[@æ?—gn\u0019j%v\u000252g2]]2T5QgTäŠ®",
                                                                        null, new Date(1552426071163L),
                                                                        "Goo\\\\NGKr\u0004OKvVuGF@jS\u001bK>ä•·CFå?“1^\u0016KbDuujuG^1ä¶?líŸ«FNXå–?pGSni^GF1äŠ‡lKKDvìˆ‡ìª‘K");
        assertFalse(deviceenrollmentInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEnrollment deviceenrollment1 = new DeviceEnrollment("f274f9c0-df8b-4167-a611-d6951094abb5",
                                                                      new Date(1552426065546L),
                                                                      new Date(1552426070977L),
                                                                      "T5gP5jM98QAag3hdpLRtPrhH1N03yF28",
                                                                      "A-:E:cLRE2B7l32KKrezfkUVh2N2KJH7p36Nk7w4Vu0V90o34Z5H07fko:k::eOPWoqsA11K1I1T4A6LfbOVVvb7lSPH1hEE9",
                                                                      new Date(1552426072371L),
                                                                      "t0qxAQBsZW8Um1U54Oc9Leehb20QNwL1");
            DeviceEnrollment deviceenrollment2 = new DeviceEnrollment("f274f9c0-df8b-4167-a611-d6951094abb5",
                                                                      new Date(1552426065546L),
                                                                      new Date(1552426070977L),
                                                                      "T5gP5jM98QAag3hdpLRtPrhH1N03yF28",
                                                                      "A-:E:cLRE2B7l32KKrezfkUVh2N2KJH7p36Nk7w4Vu0V90o34Z5H07fko:k::eOPWoqsA11K1I1T4A6LfbOVVvb7lSPH1hEE9",
                                                                      new Date(1552426072371L),
                                                                      "t0qxAQBsZW8Um1U54Oc9Leehb20QNwL1");
            DeviceEnrollment deviceenrollment3 = new DeviceEnrollment("4f57bfbd-b23a-4cc2-9e82-1ee7eeee09c6",
                                                                      new Date(1552426067142L),
                                                                      new Date(1552426065060L),
                                                                      "k0N370YB0PXM8U8Y2lpK4f722zK3Rd15",
                                                                      "A-wSy0H:yi65N2Gs9J25fAkxnj720gdZMmJ4C3BO3pppk8dee1a6:7COuBxd3zWvc:m:e78QK98PkZ1MRqF6L0JV6a024hELF",
                                                                      new Date(1552426070433L),
                                                                      "Hgcs07hmbt62n72ItwyNYe3F970yez6y");
            assertNotNull(deviceenrollment1);
            assertNotNull(deviceenrollment2);
            assertNotNull(deviceenrollment3);
            assertNotSame(deviceenrollment2, deviceenrollment1);
            assertNotSame(deviceenrollment3, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment1, deviceenrollment2);
            assertEquals(deviceenrollment1, deviceenrollment1);
            assertFalse(deviceenrollment1.equals(null));
            assertNotEquals(deviceenrollment3, deviceenrollment1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
