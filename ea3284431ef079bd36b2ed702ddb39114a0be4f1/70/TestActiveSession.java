// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model ActiveSession.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestActiveSession {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ActiveSession activesession1 = new ActiveSession("1a08d5b4-d51a-4953-8218-405ec06ccb6b",
                                                             "29ba09ef-e2e9-47e0-8d9f-2ac3891c14fb",
                                                             new Date(1552426064050L),
                                                             "13f61386-9dfd-4f9c-9d05-eb759007ad0e",
                                                             "cabd5259-9b18-469e-9976-f5a664e8d672");
            ActiveSession activesession2 = activesession1.clone();
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotSame(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ActiveSession activesession1 = new ActiveSession("91636f39-aced-47fc-be0e-9329d3ec90be",
                                                             "31613408-bb00-4ba7-b866-1a5b8b6505d7",
                                                             new Date(1552426070703L),
                                                             "08d2efae-a364-49cf-9bb5-ef6ad12049fe",
                                                             "5dfec90f-855c-4e19-9633-197018a6a9e0");
            ActiveSession activesession2 = new ActiveSession("91636f39-aced-47fc-be0e-9329d3ec90be",
                                                             "31613408-bb00-4ba7-b866-1a5b8b6505d7",
                                                             new Date(1552426070703L),
                                                             "08d2efae-a364-49cf-9bb5-ef6ad12049fe",
                                                             "5dfec90f-855c-4e19-9633-197018a6a9e0");
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotSame(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession2.hashCode(), activesession1.hashCode());
            int hashCode = activesession1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, activesession1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ActiveSession activesession = new ActiveSession("ae26f53a-7df4-4900-8899-1750f7cb36c1",
                                                        "58aab111-5a78-471c-bfae-72084ada09d6",
                                                        new Date(1552426064652L),
                                                        "98196845-f1b5-4de6-8ecb-1e7904475020",
                                                        "54f9b678-95df-4830-a0e5-2f3fdcee2fde");
        assertTrue(activesession.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ActiveSession activesession1 = new ActiveSession("6a19897b-5f8e-4c34-9bf8-268a0d504a7a",
                                                             "218e67ce-6d44-4bc2-8dc0-33dc38cb5406",
                                                             new Date(1552426065113L),
                                                             "543795b2-17fc-4c93-a6f4-a9d901a9e856",
                                                             "14f07f3b-faa0-4495-9e3c-da0874a35d1c");
            ActiveSession activesession2 = new ActiveSession("6a19897b-5f8e-4c34-9bf8-268a0d504a7a",
                                                             "218e67ce-6d44-4bc2-8dc0-33dc38cb5406",
                                                             new Date(1552426065113L),
                                                             "543795b2-17fc-4c93-a6f4-a9d901a9e856",
                                                             "14f07f3b-faa0-4495-9e3c-da0874a35d1c");
            ActiveSession activesession3 = new ActiveSession("4593ac6d-c55e-4d74-82dc-dcdeafa63c33",
                                                             "724c166c-23a9-4d36-8f03-5700eb414d64",
                                                             new Date(1552426067503L),
                                                             "cfc7d7a4-5625-4f77-a78a-f85892d6ac89",
                                                             "6edfa997-4a9f-43b7-876c-5b4ebde001f3");
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotNull(activesession3);
            assertNotSame(activesession2, activesession1);
            assertNotSame(activesession3, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession1, activesession2);
            assertEquals(activesession1, activesession1);
            assertFalse(activesession1.equals(null));
            assertNotEquals(activesession3, activesession1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
