// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.security.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeveloperCertificate.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeveloperCertificate {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("9d3d383f-5228-4985-953e-cde138169c4b",
                                                                                  "fe7ec578-ff4d-48e9-9e44-56e51fc77657",
                                                                                  new Date(1553793330709L),
                                                                                  "914a80c4-6656-4b8c-ace6-761ea0720c20",
                                                                                  "d2deff3d-76c9-4c70-842a-b35ff8679d55",
                                                                                  "39f3be3c-1278-4755-bd5a-c77e2201939b",
                                                                                  "8b46951d-4f1a-4348-8ff8-2f2bb5590151");
            DeveloperCertificate developercertificate2 = developercertificate1.clone();
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("4a38362d-6a28-4300-9fe2-840bc1c20217",
                                                                                  "7825b791-f476-4b1d-b7db-04ab09f70454",
                                                                                  new Date(1553793327730L),
                                                                                  "900146cb-09d0-4fdf-80af-8bba4fd862f8",
                                                                                  "2c48de29-7485-49b1-9955-01b496630f22",
                                                                                  "8cfdad76-54ee-4c30-a7de-2470048ab10b",
                                                                                  "4c8c8dc4-ed23-4a27-8693-f1b9686fdd98");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("4a38362d-6a28-4300-9fe2-840bc1c20217",
                                                                                  "7825b791-f476-4b1d-b7db-04ab09f70454",
                                                                                  new Date(1553793327730L),
                                                                                  "900146cb-09d0-4fdf-80af-8bba4fd862f8",
                                                                                  "2c48de29-7485-49b1-9955-01b496630f22",
                                                                                  "8cfdad76-54ee-4c30-a7de-2470048ab10b",
                                                                                  "4c8c8dc4-ed23-4a27-8693-f1b9686fdd98");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2.hashCode(), developercertificate1.hashCode());
            int hashCode = developercertificate1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, developercertificate1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeveloperCertificate developercertificate = new DeveloperCertificate("88ac7487-31f8-457c-ad82-7174575695d7",
                                                                             "e509a518-f173-4d07-a19b-7fc9b324787a",
                                                                             new Date(1553793329387L),
                                                                             "64cddc86-a989-47a4-8afb-76aecc0dcbdb",
                                                                             "e10cfa5c-61b3-4887-a4b2-de14546fcd40",
                                                                             "a2aa4ba5-ed86-4c0c-ade0-35a14744153b",
                                                                             "642fc3d8-9ef9-4103-b2f4-5971ebed9a8a");
        assertTrue(developercertificate.isValid());
        DeveloperCertificate developercertificateInvalid = new DeveloperCertificate("f07ec93d-6a22-49c7-840a-938e8980784b",
                                                                                    "489b0a78-c60f-43d6-8494-33af644462c6",
                                                                                    new Date(1553793336099L),
                                                                                    "c8a422a9-59ae-4caf-9a07-7de15ef8024f",
                                                                                    "4bdb4b3a-3415-40dc-9bde-b6beb00d060e",
                                                                                    null,
                                                                                    "c896fa70-8120-43a0-8644-ee15c348ea0e");
        assertFalse(developercertificateInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("5d8dbdca-1699-4316-9e57-6ac34a534529",
                                                                                  "78a88d2e-83b4-4c78-8ff2-9b723f255113",
                                                                                  new Date(1553793335769L),
                                                                                  "4873e545-42f5-4023-a8bf-9c0e7a550072",
                                                                                  "c5a7e8fa-9766-42e2-8463-9fc07074f84e",
                                                                                  "fe173286-2e43-49a5-bf54-c2e6ed7cba0d",
                                                                                  "b2fe34ac-ff8f-459b-a8de-fd042dd9cd1a");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("5d8dbdca-1699-4316-9e57-6ac34a534529",
                                                                                  "78a88d2e-83b4-4c78-8ff2-9b723f255113",
                                                                                  new Date(1553793335769L),
                                                                                  "4873e545-42f5-4023-a8bf-9c0e7a550072",
                                                                                  "c5a7e8fa-9766-42e2-8463-9fc07074f84e",
                                                                                  "fe173286-2e43-49a5-bf54-c2e6ed7cba0d",
                                                                                  "b2fe34ac-ff8f-459b-a8de-fd042dd9cd1a");
            DeveloperCertificate developercertificate3 = new DeveloperCertificate("669e1a36-94ca-435e-a615-46e3ace3f8f6",
                                                                                  "1b236691-4728-4de8-ab42-bcc734e65ea8",
                                                                                  new Date(1553793332797L),
                                                                                  "e9629502-7a19-4fcb-b1c7-6762c36cb2ca",
                                                                                  "1e25d081-f54a-4db6-b2ba-1366ad41e0b1",
                                                                                  "7a28239d-8615-4c5a-9d72-26984a1d50a5",
                                                                                  "02542e04-e819-44f9-96f2-ef3a98b5ea89");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotNull(developercertificate3);
            assertNotSame(developercertificate2, developercertificate1);
            assertNotSame(developercertificate3, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate1, developercertificate2);
            assertEquals(developercertificate1, developercertificate1);
            assertFalse(developercertificate1.equals(null));
            assertNotEquals(developercertificate3, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
