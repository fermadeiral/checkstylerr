// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model UserInvitation.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestUserInvitation {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("11f12a15-187f-43c2-942c-9371d1b97f45",
                                                                new Date(1553793335527L),
                                                                "bb424e35-e508-406d-bca6-44ea88ea9edf",
                                                                new Date(1553793336109L),
                                                                "8895a2ec-e7a2-4a51-b53d-cdd131834de2", null,
                                                                new Date(1553793330502L),
                                                                "f0dc0ca4-0d36-4abd-873b-c5533bcd3253");
            UserInvitation userinvitation2 = userinvitation1.clone();
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotSame(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("dcf96551-d9da-43f6-993b-8577bdce7b53",
                                                                new Date(1553793329889L),
                                                                "9bace5d8-5d4a-4a26-abb6-85091b0cb4ec",
                                                                new Date(1553793328309L),
                                                                "3b015de5-13b9-4ef9-9f23-1f5ad588383e", null,
                                                                new Date(1553793330805L),
                                                                "d92e2006-2c08-4232-bdad-dbd4cd5a4e63");
            UserInvitation userinvitation2 = new UserInvitation("dcf96551-d9da-43f6-993b-8577bdce7b53",
                                                                new Date(1553793329889L),
                                                                "9bace5d8-5d4a-4a26-abb6-85091b0cb4ec",
                                                                new Date(1553793328309L),
                                                                "3b015de5-13b9-4ef9-9f23-1f5ad588383e", null,
                                                                new Date(1553793330805L),
                                                                "d92e2006-2c08-4232-bdad-dbd4cd5a4e63");
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotSame(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation2.hashCode(), userinvitation1.hashCode());
            int hashCode = userinvitation1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, userinvitation1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        UserInvitation userinvitation = new UserInvitation("5e171e33-1941-43e1-ae69-703b5c0e0795",
                                                           new Date(1553793336936L),
                                                           "eba535ac-db44-4f8b-b3f3-35ed63a3f1d6",
                                                           new Date(1553793328043L),
                                                           "a0facad8-2af7-4c5a-9d6f-4ac0e1bf34d2", null,
                                                           new Date(1553793335591L),
                                                           "a10fe644-b626-4f4c-bcf5-720f85453beb");
        assertTrue(userinvitation.isValid());
        UserInvitation userinvitationInvalid = new UserInvitation("16e28015-9082-4ebb-ad93-d7c329219941",
                                                                  new Date(1553793332039L), null,
                                                                  new Date(1553793334042L),
                                                                  "46ae6515-c35a-49e7-9730-afcb1018e386", null,
                                                                  new Date(1553793333550L),
                                                                  "029c2e01-1b1c-4f6c-a1cd-9a93320cdc94");
        assertFalse(userinvitationInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("1d39ee4e-0a53-416f-808c-fe48bffae73f",
                                                                new Date(1553793329506L),
                                                                "b48f3a7d-a8df-499f-8f98-0029432e10a0",
                                                                new Date(1553793329413L),
                                                                "619fc769-240c-47b1-92fc-1af8a0840183", null,
                                                                new Date(1553793336757L),
                                                                "7e94c4d8-5d28-461f-a021-d3ccbae4c582");
            UserInvitation userinvitation2 = new UserInvitation("1d39ee4e-0a53-416f-808c-fe48bffae73f",
                                                                new Date(1553793329506L),
                                                                "b48f3a7d-a8df-499f-8f98-0029432e10a0",
                                                                new Date(1553793329413L),
                                                                "619fc769-240c-47b1-92fc-1af8a0840183", null,
                                                                new Date(1553793336757L),
                                                                "7e94c4d8-5d28-461f-a021-d3ccbae4c582");
            UserInvitation userinvitation3 = new UserInvitation("a05f0e05-56e8-4c45-8c7e-a995fd9ca2ee",
                                                                new Date(1553793334716L),
                                                                "002ff3cc-dc6b-4efe-8b84-a95069883b69",
                                                                new Date(1553793336062L),
                                                                "25663901-7b36-4686-8305-1c5822f5c87c", null,
                                                                new Date(1553793336334L),
                                                                "4d01ee4c-1cb3-41a3-a0e2-0875eabca22d");
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotNull(userinvitation3);
            assertNotSame(userinvitation2, userinvitation1);
            assertNotSame(userinvitation3, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation1, userinvitation2);
            assertEquals(userinvitation1, userinvitation1);
            assertFalse(userinvitation1.equals(null));
            assertNotEquals(userinvitation3, userinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
