// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantApiKey.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantApiKey {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("6db86c0a205f4061b6e4796773e6aba1",
                                                                   new Date(1561383444416L), -100,
                                                                   "6db86c0a205f4061b6e4796773e6aba1",
                                                                   "3499a41a-ed74-4976-8443-21ac02d130bb", 25,
                                                                   "92c36ee2-d13f-45ec-89ec-e7eed72559bf",
                                                                   "6db86c0a205f4061b6e4796773e6aba1",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1561383444182L));
            SubtenantApiKey subtenantapikey2 = subtenantapikey1.clone();
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("6db86c0a205f4061b6e4796773e6aba1",
                                                                   new Date(1561383445139L), 64,
                                                                   "6db86c0a205f4061b6e4796773e6aba1",
                                                                   "550d46df-6eda-42a7-8094-14a23631a244", 45,
                                                                   "d461df1c-5575-45bb-92ec-929c459c4225",
                                                                   "6db86c0a205f4061b6e4796773e6aba1",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1561383449517L));
            SubtenantApiKey subtenantapikey2 = new SubtenantApiKey("6db86c0a205f4061b6e4796773e6aba1",
                                                                   new Date(1561383445139L), 64,
                                                                   "6db86c0a205f4061b6e4796773e6aba1",
                                                                   "550d46df-6eda-42a7-8094-14a23631a244", 45,
                                                                   "d461df1c-5575-45bb-92ec-929c459c4225",
                                                                   "6db86c0a205f4061b6e4796773e6aba1",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1561383449517L));
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2.hashCode(), subtenantapikey1.hashCode());
            int hashCode = subtenantapikey1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantapikey1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantApiKey subtenantapikey = new SubtenantApiKey("6db86c0a205f4061b6e4796773e6aba1",
                                                              new Date(1561383441537L), 34,
                                                              "6db86c0a205f4061b6e4796773e6aba1",
                                                              "19660103-58ad-4364-b644-1bb3b3327443", -4,
                                                              "a51d2297-bcfd-4101-b1b5-a5ebf27797d1",
                                                              "6db86c0a205f4061b6e4796773e6aba1",
                                                              SubtenantApiKeyStatus.getDefault(),
                                                              new Date(1561383448585L));
        assertTrue(subtenantapikey.isValid());
        SubtenantApiKey subtenantapikeyInvalid = new SubtenantApiKey(null, new Date(1561383445422L), -79,
                                                                     "స&㫓E\u0011\u0014P�?�\u001b눷�?�O_絘\u0017_\u0001^M픉T] ᄺJ\u0012;\f.糮?Z-\u001b䛤\f㽯D=)\u0013 `^/V센=\u0001T[\u0010D>[\u001e�?\u0000=蔕",
                                                                     "adf89ef5-7445-404d-9448-571e9dfb7ba7", -99, null,
                                                                     "స&㫓E\u0011\u0014P�?�\u001b눷�?�O_絘\u0017_\u0001^M픉T] ᄺJ\u0012;\f.糮?Z-\u001b䛤\f㽯D=)\u0013 `^/V센=\u0001T[\u0010D>[\u001e�?\u0000=蔕",
                                                                     SubtenantApiKeyStatus.getDefault(),
                                                                     new Date(1561383449231L));
        assertFalse(subtenantapikeyInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("6db86c0a205f4061b6e4796773e6aba1",
                                                                   new Date(1561383445954L), -62,
                                                                   "6db86c0a205f4061b6e4796773e6aba1",
                                                                   "26e17d59-6516-46af-9d9c-aa0905deef63", -17,
                                                                   "11ed1255-b027-4d48-83ea-f7d6aafa6cd5",
                                                                   "6db86c0a205f4061b6e4796773e6aba1",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1561383449637L));
            SubtenantApiKey subtenantapikey2 = new SubtenantApiKey("6db86c0a205f4061b6e4796773e6aba1",
                                                                   new Date(1561383445954L), -62,
                                                                   "6db86c0a205f4061b6e4796773e6aba1",
                                                                   "26e17d59-6516-46af-9d9c-aa0905deef63", -17,
                                                                   "11ed1255-b027-4d48-83ea-f7d6aafa6cd5",
                                                                   "6db86c0a205f4061b6e4796773e6aba1",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1561383449637L));
            SubtenantApiKey subtenantapikey3 = new SubtenantApiKey("6db86c0a205f4061b6e4796773e6aba1",
                                                                   new Date(1561383446238L), -25,
                                                                   "6db86c0a205f4061b6e4796773e6aba1",
                                                                   "1f82ee7d-c08a-49f8-8085-39d539ac4b07", -12,
                                                                   "0eed431f-499a-49fd-ad31-cccb777a2798",
                                                                   "6db86c0a205f4061b6e4796773e6aba1",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1561383446601L));
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotNull(subtenantapikey3);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertNotSame(subtenantapikey3, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey1, subtenantapikey2);
            assertEquals(subtenantapikey1, subtenantapikey1);
            assertFalse(subtenantapikey1.equals(null));
            assertNotEquals(subtenantapikey3, subtenantapikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
