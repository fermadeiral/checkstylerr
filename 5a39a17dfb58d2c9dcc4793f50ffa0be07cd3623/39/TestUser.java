// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model User.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestUser {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            User user1 = new User("96151c6cca95ea57eac2ba8ede214aed", null, "794c008b-63e5-4471-b893-8485fa450783",
                                  new Date(1558000751492L), -71, null, "e39fd.9a899@b6ff3.me", true,
                                  "8529d192-d3c0-4ebe-95e5-1efb65bbd653", "96151c6cca95ea57eac2ba8ede214aed", true,
                                  true, false, 108, null, null, "59b42f81-ad50-46f4-b0f9-dacf1cd85124", -46,
                                  "02cd9c72-94a8-4f12-8894-b564a1ef8940", UserStatus.getDefault(), null,
                                  new Date(1558000751570L), "9_6E");
            User user2 = user1.clone();
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotSame(user2, user1);
            assertEquals(user2, user1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            User user1 = new User("96151c6cca95ea57eac2ba8ede214aed", null, "e189c5b7-7ca6-4e37-83ab-043b3b8ea749",
                                  new Date(1558000747203L), 119, null, "18f80.5a49a@0d263.fr", false,
                                  "cdabb33c-e732-48af-b644-28ab7e359689", "96151c6cca95ea57eac2ba8ede214aed", false,
                                  true, true, -7, null, null, "0b09ccc3-b6d3-4768-a427-bcab11fb8fe9", -73,
                                  "039f71c2-e8cc-4a21-9753-7dcb4cacf757", UserStatus.getDefault(), null,
                                  new Date(1558000746071L), "9_6E");
            User user2 = new User("96151c6cca95ea57eac2ba8ede214aed", null, "e189c5b7-7ca6-4e37-83ab-043b3b8ea749",
                                  new Date(1558000747203L), 119, null, "18f80.5a49a@0d263.fr", false,
                                  "cdabb33c-e732-48af-b644-28ab7e359689", "96151c6cca95ea57eac2ba8ede214aed", false,
                                  true, true, -7, null, null, "0b09ccc3-b6d3-4768-a427-bcab11fb8fe9", -73,
                                  "039f71c2-e8cc-4a21-9753-7dcb4cacf757", UserStatus.getDefault(), null,
                                  new Date(1558000746071L), "9_6E");
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotSame(user2, user1);
            assertEquals(user2, user1);
            assertEquals(user2.hashCode(), user1.hashCode());
            int hashCode = user1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, user1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        User user = new User("96151c6cca95ea57eac2ba8ede214aed", null, "a4fcdeb2-1043-4e93-a1bc-64652e824e01",
                             new Date(1558000751525L), 57, null, "157b3.0c71b@9763b.fr", false,
                             "25ca02e7-879a-4768-bd59-ba7bbae208ca", "96151c6cca95ea57eac2ba8ede214aed", true, true,
                             true, -124, null, null, "b08242db-229d-47fa-9488-0a044a8fe821", -77,
                             "c7b27bf6-e36a-4427-9c08-a91804f5f825", UserStatus.getDefault(), null,
                             new Date(1558000751246L), "9_6E");
        assertTrue(user.isValid());
        User userInvalid = new User("Z333î‚‘\u0007Q^D;3ìƒ?\u0010(ë±Ž0A333<3Zéµ…æ?µ3U3\u001d]3îŠ»3<3H3áŒƒ%3ä·¼3\u00053\u0001á‰–?`3\u0016(3ì¾™îˆ?3é¦›3S@Z3#3",
                                    null, "84fc2af0-7f92-45f1-b539-d4c3b271b3ba", new Date(1558000748061L), 103, null,
                                    null, false,
                                    "bd7e42b3-83a6-463b-9fab-0e609af9892ef9acd2f6-2130-4077-a42b-d916795b73721b0806d3-72a7-4dfe-a246-40d88fede77b",
                                    "Z333î‚‘\u0007Q^D;3ìƒ?\u0010(ë±Ž0A333<3Zéµ…æ?µ3U3\u001d]3îŠ»3<3H3áŒƒ%3ä·¼3\u00053\u0001á‰–?`3\u0016(3ì¾™îˆ?3é¦›3S@Z3#3",
                                    true, false, true, 61, null, null, "15aa6721-a13e-4dd6-8ffd-3a21cded88ac", 68,
                                    "c869998c-dbd6-478a-9ed0-41367d942912663f4c44-0fb9-4256-895b-db1dc520929dec06ac5e-977c-46c4-8ea6-434235d72a39",
                                    UserStatus.getDefault(), null, new Date(1558000747798L),
                                    "5åœ«70è„‡\tA\u000f7î?¿8<?8\tV@?å©¶77ã»¤\u0002Y8TL>!;Nìš­!\b8î“‡Q:>ï’¹Q!Též­âž½\u0004;G^7\u0014Uë«¸B\u0004?áˆ•8ê±­H<X:áª“");
        assertFalse(userInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            User user1 = new User("96151c6cca95ea57eac2ba8ede214aed", null, "16be0c06-fbd1-4d09-b234-1b1f222ebd87",
                                  new Date(1558000753042L), -109, null, "79fa3.00a8a@7ac31.me", false,
                                  "3dbd12b7-544c-468f-98d4-84bc1b948acf", "96151c6cca95ea57eac2ba8ede214aed", false,
                                  true, false, -31, null, null, "77e0291c-0ed3-4d19-a20e-f4541f702e3b", 123,
                                  "49e7d0a5-895d-43e7-ad3d-d0179ca1ba9a", UserStatus.getDefault(), null,
                                  new Date(1558000749554L), "9_6E");
            User user2 = new User("96151c6cca95ea57eac2ba8ede214aed", null, "16be0c06-fbd1-4d09-b234-1b1f222ebd87",
                                  new Date(1558000753042L), -109, null, "79fa3.00a8a@7ac31.me", false,
                                  "3dbd12b7-544c-468f-98d4-84bc1b948acf", "96151c6cca95ea57eac2ba8ede214aed", false,
                                  true, false, -31, null, null, "77e0291c-0ed3-4d19-a20e-f4541f702e3b", 123,
                                  "49e7d0a5-895d-43e7-ad3d-d0179ca1ba9a", UserStatus.getDefault(), null,
                                  new Date(1558000749554L), "9_6E");
            User user3 = new User("96151c6cca95ea57eac2ba8ede214aed", null, "cfe9d847-b543-4026-b395-cf3241d5dc69",
                                  new Date(1558000754160L), 60, null, "20c9f.d0320@690b6.me", false,
                                  "f0c83081-487a-464f-83d4-cc968778f3ae", "96151c6cca95ea57eac2ba8ede214aed", false,
                                  true, false, -79, null, null, "5dba14be-aeb0-447a-b539-9a3e5018e727", -44,
                                  "fe4c6a5d-0af6-47ed-ac0e-7b24e298647f", UserStatus.getDefault(), null,
                                  new Date(1558000750628L), "9_6E");
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotNull(user3);
            assertNotSame(user2, user1);
            assertNotSame(user3, user1);
            assertEquals(user2, user1);
            assertEquals(user2, user1);
            assertEquals(user1, user2);
            assertEquals(user1, user1);
            assertFalse(user1.equals(null));
            assertNotEquals(user3, user1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
