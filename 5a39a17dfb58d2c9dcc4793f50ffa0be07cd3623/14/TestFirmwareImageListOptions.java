// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.deviceupdate.model;

import static org.junit.Assert.*;

import com.arm.mbed.cloud.sdk.common.Order;
import com.arm.mbed.cloud.sdk.common.listing.ListOptionsEncoder;
import com.arm.mbed.cloud.sdk.common.listing.filtering.FilterOperator;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import org.junit.Test;

/**
 * Unit tests for Model FirmwareImageListOptions.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestFirmwareImageListOptions {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            FirmwareImageListOptions firmwareimagelistoptions1 = new FirmwareImageListOptions(Integer.valueOf(80),
                                                                                              Long.valueOf(38),
                                                                                              Order.getDefault(),
                                                                                              "38072a24-1b82-4d0c-98ef-017bc13df334",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions2 = firmwareimagelistoptions1.clone();
            assertNotNull(firmwareimagelistoptions1);
            assertNotNull(firmwareimagelistoptions2);
            assertNotSame(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the filters method.
     */
    @SuppressWarnings({ "boxing", "resource" })
    @Test
    public void testFilters() {
        try {
            FirmwareImageListOptions option = new FirmwareImageListOptions().inUpdatedAts(Arrays.asList(new Date(1558000749496L)))
                                                                            .notInUpdatedAts(Arrays.asList(new Date(1558000755732L),
                                                                                                           new Date(1558000751954L),
                                                                                                           new Date(1558000755771L),
                                                                                                           new Date(1558000755413L)))
                                                                            .lessThanUpdatedAt(new Date(1558000753147L))
                                                                            .greaterThanUpdatedAt(new Date(1558000753734L))
                                                                            .equalToName("f87a044b-2e6a-4431-9df6-8fe2e742cc57")
                                                                            .notEqualToName("5f558178-238b-4eae-9b3c-5ed1cc4f1b31")
                                                                            .inNames(Arrays.asList("2793f195-3e41-4380-a99d-62048c8de042",
                                                                                                   "06d42615-255e-438b-a26b-a64b69423c69",
                                                                                                   "33b32974-876f-436e-a93c-c8d99b1b1d90",
                                                                                                   "6fe18227-2762-434a-9f5d-9e812b760186"))
                                                                            .notInNames(Arrays.asList("e9186e92-a3fe-40f0-90c8-0ccb0d8655e3",
                                                                                                      "b194dd7f-acae-4a1f-93b9-da37b97c3517"))
                                                                            .equalToDescription("15382dfd-fa3e-4f8c-8219-03306f2c1a05")
                                                                            .notEqualToDescription("908cca79-1a47-4c0e-8dbd-4ad6017e9da6")
                                                                            .inDescriptions(Arrays.asList("ee50dcf7-2460-45c4-918b-e71b4378a25f",
                                                                                                          "02b9b799-0d45-48f2-ac6b-fb25d048b689",
                                                                                                          "9a0326f0-2868-4162-ba49-e9f1dcc43fe4",
                                                                                                          "6ac6a6e3-cd57-478b-8e74-d6fe0b127a79",
                                                                                                          "3b9de557-89b7-44f5-a4ec-7681d74ef68b",
                                                                                                          "89d658a8-5d02-4026-93c9-ed141dc6b447"))
                                                                            .notInDescriptions(Arrays.asList("f44594af-868a-4577-b907-dde5cde8c364",
                                                                                                             "eb3b1a16-42e4-4571-87e7-c34aaf98a36c",
                                                                                                             "37d4a6d9-85aa-4bbb-9121-ccc946f482c5",
                                                                                                             "26d95678-f6a8-4170-9193-0e95dff00acb",
                                                                                                             "3172583d-a8d0-4bb7-a123-50da4c12a8eb",
                                                                                                             "fb903987-0353-4fa9-afec-c2db91a92aa3",
                                                                                                             "ac00315c-30ef-4d5d-b79c-f9fe6c81e2e8",
                                                                                                             "d78810a6-31ff-4570-8ac3-c56fe24ee378"))
                                                                            .inCreatedAts(Arrays.asList(new Date(1558000757937L),
                                                                                                        new Date(1558000752030L),
                                                                                                        new Date(1558000750874L),
                                                                                                        new Date(1558000755509L),
                                                                                                        new Date(1558000748973L),
                                                                                                        new Date(1558000748569L),
                                                                                                        new Date(1558000755936L)))
                                                                            .notInCreatedAts(Arrays.asList(new Date(1558000748991L),
                                                                                                           new Date(1558000750265L)))
                                                                            .lessThanCreatedAt(new Date(1558000748900L))
                                                                            .greaterThanCreatedAt(new Date(1558000749976L))
                                                                            .equalToDatafileUrl("74b78ac1-97c9-4d77-8ac0-44c84edae20b")
                                                                            .notEqualToDatafileUrl("dbd874ac-40d5-43a6-9a40-6b11ec7012ad")
                                                                            .inDatafileUrls(Arrays.asList("45cec691-160c-4e6f-a992-885e5ef756d1",
                                                                                                          "964c06da-6aae-4864-a691-191ff143841f",
                                                                                                          "1d9754e1-3df3-4900-a452-05b2c70c0b7c",
                                                                                                          "c7e13d3e-6483-413f-b4fb-91f5520682f7"))
                                                                            .notInDatafileUrls(Arrays.asList("5b62b510-f10c-46a7-a92d-97909fe51fdd",
                                                                                                             "3858414f-d112-4281-9d99-9e5d6d117fe5",
                                                                                                             "51f66b7f-4859-4aa4-b537-e79b6b81c52e",
                                                                                                             "5e283936-d4bc-445b-a317-e5601e0e8bf6",
                                                                                                             "0f10c2de-02e0-4d60-bbed-f51be942644f",
                                                                                                             "22d0d657-d1a1-406c-bdb7-53c7d8d52a12"))
                                                                            .equalToDatafileSize(Long.valueOf(52))
                                                                            .notEqualToDatafileSize(Long.valueOf(-32))
                                                                            .inDatafileSizes(Arrays.asList(Long.valueOf(-112),
                                                                                                           Long.valueOf(115),
                                                                                                           Long.valueOf(38),
                                                                                                           Long.valueOf(75),
                                                                                                           Long.valueOf(79),
                                                                                                           Long.valueOf(-50),
                                                                                                           Long.valueOf(-59)))
                                                                            .notInDatafileSizes(Arrays.asList(Long.valueOf(-30),
                                                                                                              Long.valueOf(-87),
                                                                                                              Long.valueOf(-85),
                                                                                                              Long.valueOf(-52),
                                                                                                              Long.valueOf(-29),
                                                                                                              Long.valueOf(31)))
                                                                            .equalToDatafileChecksum("a805b337-b64f-4477-985a-5e16d0a8f94a")
                                                                            .notEqualToDatafileChecksum("31f653b4-8056-4338-b353-f63ac10097f4")
                                                                            .inDatafileChecksums(Arrays.asList("9eacb7c6-5da9-4525-842d-fcd504b54830",
                                                                                                               "9c087eb0-8aaa-4880-88ca-e8007a9305e5",
                                                                                                               "58cd1ef7-93ca-4cef-9574-fb6a34150565",
                                                                                                               "48b9f74f-a90b-4c48-b7d3-de93728d9f17"))
                                                                            .notInDatafileChecksums(Arrays.asList("40cac59f-4587-4376-ae28-e28650a5d1fc",
                                                                                                                  "54d38e8e-8cc0-4a47-9673-4bafe1525898"))
                                                                            .equalToId("65ff3a40-ac9b-45b8-9c3e-8ad4c0becd39")
                                                                            .notEqualToId("8d60fa39-e95f-4e5f-a99a-6e01d5ddaf6c")
                                                                            .inIds(Arrays.asList("35d72f12-97ea-4806-acdf-cddca7326d49"))
                                                                            .notInIds(Arrays.asList("ea0bc8c9-7aac-42fe-83ae-55eafce6c56b",
                                                                                                    "03e52967-db86-42ce-9c2c-5c62d94800dd",
                                                                                                    "edb2687b-7b28-432f-93e0-205cad4076cc",
                                                                                                    "0e3e088a-bef1-4e9f-bdc6-2bd8f2663c5e"));
            assertTrue(option.hasFilters());
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1558000749496L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1558000755732L), new Date(1558000751954L), new Date(1558000755771L),
                                       new Date(1558000755413L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.LESS_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1558000753147L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1558000753734L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("f87a044b-2e6a-4431-9df6-8fe2e742cc57",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("5f558178-238b-4eae-9b3c-5ed1cc4f1b31",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("2793f195-3e41-4380-a99d-62048c8de042", "06d42615-255e-438b-a26b-a64b69423c69",
                                       "33b32974-876f-436e-a93c-c8d99b1b1d90", "6fe18227-2762-434a-9f5d-9e812b760186"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("e9186e92-a3fe-40f0-90c8-0ccb0d8655e3", "b194dd7f-acae-4a1f-93b9-da37b97c3517"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("15382dfd-fa3e-4f8c-8219-03306f2c1a05",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("908cca79-1a47-4c0e-8dbd-4ad6017e9da6",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("ee50dcf7-2460-45c4-918b-e71b4378a25f", "02b9b799-0d45-48f2-ac6b-fb25d048b689",
                                       "9a0326f0-2868-4162-ba49-e9f1dcc43fe4", "6ac6a6e3-cd57-478b-8e74-d6fe0b127a79",
                                       "3b9de557-89b7-44f5-a4ec-7681d74ef68b", "89d658a8-5d02-4026-93c9-ed141dc6b447"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("f44594af-868a-4577-b907-dde5cde8c364", "eb3b1a16-42e4-4571-87e7-c34aaf98a36c",
                                       "37d4a6d9-85aa-4bbb-9121-ccc946f482c5", "26d95678-f6a8-4170-9193-0e95dff00acb",
                                       "3172583d-a8d0-4bb7-a123-50da4c12a8eb", "fb903987-0353-4fa9-afec-c2db91a92aa3",
                                       "ac00315c-30ef-4d5d-b79c-f9fe6c81e2e8", "d78810a6-31ff-4570-8ac3-c56fe24ee378"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1558000757937L), new Date(1558000752030L), new Date(1558000750874L),
                                       new Date(1558000755509L), new Date(1558000748973L), new Date(1558000748569L),
                                       new Date(1558000755936L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1558000748991L), new Date(1558000750265L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.LESS_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1558000748900L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1558000749976L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("74b78ac1-97c9-4d77-8ac0-44c84edae20b",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("dbd874ac-40d5-43a6-9a40-6b11ec7012ad",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("45cec691-160c-4e6f-a992-885e5ef756d1", "964c06da-6aae-4864-a691-191ff143841f",
                                       "1d9754e1-3df3-4900-a452-05b2c70c0b7c", "c7e13d3e-6483-413f-b4fb-91f5520682f7"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("5b62b510-f10c-46a7-a92d-97909fe51fdd", "3858414f-d112-4281-9d99-9e5d6d117fe5",
                                       "51f66b7f-4859-4aa4-b537-e79b6b81c52e", "5e283936-d4bc-445b-a317-e5601e0e8bf6",
                                       "0f10c2de-02e0-4d60-bbed-f51be942644f", "22d0d657-d1a1-406c-bdb7-53c7d8d52a12"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(52),
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    Long.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(-32),
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                       Long.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(-112), Long.valueOf(115), Long.valueOf(38), Long.valueOf(75),
                                       Long.valueOf(79), Long.valueOf(-50), Long.valueOf(-59)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(-30), Long.valueOf(-87), Long.valueOf(-85), Long.valueOf(-52),
                                       Long.valueOf(-29), Long.valueOf(31)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                        FilterOperator.EQUAL));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals("a805b337-b64f-4477-985a-5e16d0a8f94a",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals("31f653b4-8056-4338-b353-f63ac10097f4",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM, FilterOperator.IN));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals(Arrays.asList("9eacb7c6-5da9-4525-842d-fcd504b54830", "9c087eb0-8aaa-4880-88ca-e8007a9305e5",
                                       "58cd1ef7-93ca-4cef-9574-fb6a34150565", "48b9f74f-a90b-4c48-b7d3-de93728d9f17"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                        FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals(Arrays.asList("40cac59f-4587-4376-ae28-e28650a5d1fc", "54d38e8e-8cc0-4a47-9673-4bafe1525898"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("65ff3a40-ac9b-45b8-9c3e-8ad4c0becd39",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("8d60fa39-e95f-4e5f-a99a-6e01d5ddaf6c",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("35d72f12-97ea-4806-acdf-cddca7326d49"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, List.class,
                                                                 option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("ea0bc8c9-7aac-42fe-83ae-55eafce6c56b", "03e52967-db86-42ce-9c2c-5c62d94800dd",
                                       "edb2687b-7b28-432f-93e0-205cad4076cc", "0e3e088a-bef1-4e9f-bdc6-2bd8f2663c5e"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID,
                                                                    List.class, option));
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            FirmwareImageListOptions firmwareimagelistoptions1 = new FirmwareImageListOptions(Integer.valueOf(15),
                                                                                              Long.valueOf(41),
                                                                                              Order.getDefault(),
                                                                                              "1e000d75-b0d9-41cd-a1ae-67b9927a3eef",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions2 = new FirmwareImageListOptions(Integer.valueOf(15),
                                                                                              Long.valueOf(41),
                                                                                              Order.getDefault(),
                                                                                              "1e000d75-b0d9-41cd-a1ae-67b9927a3eef",
                                                                                              null, null);
            assertNotNull(firmwareimagelistoptions1);
            assertNotNull(firmwareimagelistoptions2);
            assertNotSame(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2.hashCode(), firmwareimagelistoptions1.hashCode());
            int hashCode = firmwareimagelistoptions1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, firmwareimagelistoptions1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            FirmwareImageListOptions firmwareimagelistoptions1 = new FirmwareImageListOptions(Integer.valueOf(49),
                                                                                              Long.valueOf(44),
                                                                                              Order.getDefault(),
                                                                                              "1c4b2c83-0b8c-4257-bb7c-1edb68023f1c",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions2 = new FirmwareImageListOptions(Integer.valueOf(49),
                                                                                              Long.valueOf(44),
                                                                                              Order.getDefault(),
                                                                                              "1c4b2c83-0b8c-4257-bb7c-1edb68023f1c",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions3 = new FirmwareImageListOptions(Integer.valueOf(-98),
                                                                                              Long.valueOf(-104),
                                                                                              Order.getDefault(),
                                                                                              "4fbf5eb6-cda3-4686-b096-d79438542a8f",
                                                                                              null, null);
            assertNotNull(firmwareimagelistoptions1);
            assertNotNull(firmwareimagelistoptions2);
            assertNotNull(firmwareimagelistoptions3);
            assertNotSame(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertNotSame(firmwareimagelistoptions3, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions1, firmwareimagelistoptions2);
            assertEquals(firmwareimagelistoptions1, firmwareimagelistoptions1);
            assertFalse(firmwareimagelistoptions1.equals(null));
            assertNotEquals(firmwareimagelistoptions3, firmwareimagelistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
