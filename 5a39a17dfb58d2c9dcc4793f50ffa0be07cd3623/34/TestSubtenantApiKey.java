// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantApiKey.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantApiKey {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("96151c6cca95ea57eac2ba8ede214aed",
                                                                   new Date(1558000750151L), -32,
                                                                   "96151c6cca95ea57eac2ba8ede214aed",
                                                                   "2597b7eb-f5fd-49aa-a7a3-c2c9e77f0346", 122,
                                                                   "bbbc474c-3d18-4943-9dc6-efb18ea5320e",
                                                                   "96151c6cca95ea57eac2ba8ede214aed",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1558000755116L));
            SubtenantApiKey subtenantapikey2 = subtenantapikey1.clone();
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("96151c6cca95ea57eac2ba8ede214aed",
                                                                   new Date(1558000748781L), -46,
                                                                   "96151c6cca95ea57eac2ba8ede214aed",
                                                                   "acf45b8a-c2ab-4836-bdc0-271e07ebcb85", -23,
                                                                   "0d98f1fa-fa3c-4fd4-a385-165f875b6346",
                                                                   "96151c6cca95ea57eac2ba8ede214aed",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1558000747623L));
            SubtenantApiKey subtenantapikey2 = new SubtenantApiKey("96151c6cca95ea57eac2ba8ede214aed",
                                                                   new Date(1558000748781L), -46,
                                                                   "96151c6cca95ea57eac2ba8ede214aed",
                                                                   "acf45b8a-c2ab-4836-bdc0-271e07ebcb85", -23,
                                                                   "0d98f1fa-fa3c-4fd4-a385-165f875b6346",
                                                                   "96151c6cca95ea57eac2ba8ede214aed",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1558000747623L));
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2.hashCode(), subtenantapikey1.hashCode());
            int hashCode = subtenantapikey1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantapikey1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantApiKey subtenantapikey = new SubtenantApiKey("96151c6cca95ea57eac2ba8ede214aed",
                                                              new Date(1558000752760L), -105,
                                                              "96151c6cca95ea57eac2ba8ede214aed",
                                                              "83f5b60b-df48-4362-983c-249338ff4408", 76,
                                                              "7058584e-8547-4287-bf23-64f9787e5765",
                                                              "96151c6cca95ea57eac2ba8ede214aed",
                                                              SubtenantApiKeyStatus.getDefault(),
                                                              new Date(1558000750998L));
        assertTrue(subtenantapikey.isValid());
        SubtenantApiKey subtenantapikeyInvalid = new SubtenantApiKey(null, new Date(1558000753873L), -125,
                                                                     "Z333î‚‘\u0007Q^D;3ìƒ?\u0010(ë±Ž0A333<3Zéµ…æ?µ3U3\u001d]3îŠ»3<3H3áŒƒ%3ä·¼3\u00053\u0001á‰–?`3\u0016(3ì¾™îˆ?3é¦›3S@Z3#3",
                                                                     "3889798f-1502-4e1e-8229-5f79ddcf2148", 123, null,
                                                                     "Z333î‚‘\u0007Q^D;3ìƒ?\u0010(ë±Ž0A333<3Zéµ…æ?µ3U3\u001d]3îŠ»3<3H3áŒƒ%3ä·¼3\u00053\u0001á‰–?`3\u0016(3ì¾™îˆ?3é¦›3S@Z3#3",
                                                                     SubtenantApiKeyStatus.getDefault(),
                                                                     new Date(1558000751706L));
        assertFalse(subtenantapikeyInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("96151c6cca95ea57eac2ba8ede214aed",
                                                                   new Date(1558000750349L), -71,
                                                                   "96151c6cca95ea57eac2ba8ede214aed",
                                                                   "8efeef8b-31fb-480d-b3d8-5e184386157d", -22,
                                                                   "c2071a43-3fa0-4e0b-9d71-d3519533a0c8",
                                                                   "96151c6cca95ea57eac2ba8ede214aed",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1558000751443L));
            SubtenantApiKey subtenantapikey2 = new SubtenantApiKey("96151c6cca95ea57eac2ba8ede214aed",
                                                                   new Date(1558000750349L), -71,
                                                                   "96151c6cca95ea57eac2ba8ede214aed",
                                                                   "8efeef8b-31fb-480d-b3d8-5e184386157d", -22,
                                                                   "c2071a43-3fa0-4e0b-9d71-d3519533a0c8",
                                                                   "96151c6cca95ea57eac2ba8ede214aed",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1558000751443L));
            SubtenantApiKey subtenantapikey3 = new SubtenantApiKey("96151c6cca95ea57eac2ba8ede214aed",
                                                                   new Date(1558000754925L), 93,
                                                                   "96151c6cca95ea57eac2ba8ede214aed",
                                                                   "7747ec8b-c49f-49ce-87e9-3ffe9a1f517c", -81,
                                                                   "0232e12a-452c-4626-a5c2-8b3c2e023470",
                                                                   "96151c6cca95ea57eac2ba8ede214aed",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1558000747459L));
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotNull(subtenantapikey3);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertNotSame(subtenantapikey3, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey1, subtenantapikey2);
            assertEquals(subtenantapikey1, subtenantapikey1);
            assertFalse(subtenantapikey1.equals(null));
            assertNotEquals(subtenantapikey3, subtenantapikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
