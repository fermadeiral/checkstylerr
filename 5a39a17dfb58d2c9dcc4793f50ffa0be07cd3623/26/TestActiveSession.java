// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model ActiveSession.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestActiveSession {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ActiveSession activesession1 = new ActiveSession("96151c6cca95ea57eac2ba8ede214aed",
                                                             "d033bb5a-45d7-4e73-8ece-e2ea9b48b1d6",
                                                             new Date(1558000754483L),
                                                             "65a94242-0dc1-4b17-bfc8-6af218016ca8",
                                                             "5622c80b-d569-4b8b-bd3f-73666b22b689");
            ActiveSession activesession2 = activesession1.clone();
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotSame(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ActiveSession activesession1 = new ActiveSession("96151c6cca95ea57eac2ba8ede214aed",
                                                             "39e6cd09-69ff-4e67-bcc8-abd8f1e9f186",
                                                             new Date(1558000748870L),
                                                             "dd4277c0-350e-44fd-924f-f3ccf91d488a",
                                                             "846d7134-3b63-4f61-9238-31a694853dfc");
            ActiveSession activesession2 = new ActiveSession("96151c6cca95ea57eac2ba8ede214aed",
                                                             "39e6cd09-69ff-4e67-bcc8-abd8f1e9f186",
                                                             new Date(1558000748870L),
                                                             "dd4277c0-350e-44fd-924f-f3ccf91d488a",
                                                             "846d7134-3b63-4f61-9238-31a694853dfc");
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotSame(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession2.hashCode(), activesession1.hashCode());
            int hashCode = activesession1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, activesession1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ActiveSession activesession = new ActiveSession("96151c6cca95ea57eac2ba8ede214aed",
                                                        "f8654a79-6d77-47b6-a3ee-33bd0b69966f",
                                                        new Date(1558000751244L),
                                                        "2366f0e9-fc16-4eb3-93de-589fcc0a7806",
                                                        "5374a95b-7fcd-48f2-8423-b49f0c027b8f");
        assertTrue(activesession.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ActiveSession activesession1 = new ActiveSession("96151c6cca95ea57eac2ba8ede214aed",
                                                             "8a6db7a7-8446-4761-bf38-966e723835d8",
                                                             new Date(1558000746211L),
                                                             "6001503d-f72b-4be9-a81d-1a28ee2c6627",
                                                             "38275ba5-b06d-4cfa-81b8-25ea3f7ce3ed");
            ActiveSession activesession2 = new ActiveSession("96151c6cca95ea57eac2ba8ede214aed",
                                                             "8a6db7a7-8446-4761-bf38-966e723835d8",
                                                             new Date(1558000746211L),
                                                             "6001503d-f72b-4be9-a81d-1a28ee2c6627",
                                                             "38275ba5-b06d-4cfa-81b8-25ea3f7ce3ed");
            ActiveSession activesession3 = new ActiveSession("96151c6cca95ea57eac2ba8ede214aed",
                                                             "39f58f76-a138-4530-8c00-00133bbcad49",
                                                             new Date(1558000747740L),
                                                             "b5045f29-e161-4b56-81c0-6e75ef1ca99b",
                                                             "98b2b7a3-8d9b-4bb2-bf17-81bc84d4fbe7");
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotNull(activesession3);
            assertNotSame(activesession2, activesession1);
            assertNotSame(activesession3, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession1, activesession2);
            assertEquals(activesession1, activesession1);
            assertFalse(activesession1.equals(null));
            assertNotEquals(activesession3, activesession1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
