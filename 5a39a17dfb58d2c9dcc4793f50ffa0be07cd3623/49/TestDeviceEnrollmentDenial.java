// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEnrollmentDenial.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEnrollmentDenial {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("96151c6cca95ea57eac2ba8ede214aed",
                                                                                        new Date(1558000747538L),
                                                                                        "a9ddf747-dd92-45f9-82e6-dc27a93fac20",
                                                                                        "96151c6cca95ea57eac2ba8ede214aed",
                                                                                        "96151c6cca95ea57eac2ba8ede214aed");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = deviceenrollmentdenial1.clone();
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("96151c6cca95ea57eac2ba8ede214aed",
                                                                                        new Date(1558000747963L),
                                                                                        "064700fa-06b3-43ad-bf46-7d91d3ae636c",
                                                                                        "96151c6cca95ea57eac2ba8ede214aed",
                                                                                        "96151c6cca95ea57eac2ba8ede214aed");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = new DeviceEnrollmentDenial("96151c6cca95ea57eac2ba8ede214aed",
                                                                                        new Date(1558000747963L),
                                                                                        "064700fa-06b3-43ad-bf46-7d91d3ae636c",
                                                                                        "96151c6cca95ea57eac2ba8ede214aed",
                                                                                        "96151c6cca95ea57eac2ba8ede214aed");
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2.hashCode(), deviceenrollmentdenial1.hashCode());
            int hashCode = deviceenrollmentdenial1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceenrollmentdenial1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEnrollmentDenial deviceenrollmentdenial = new DeviceEnrollmentDenial("96151c6cca95ea57eac2ba8ede214aed",
                                                                                   new Date(1558000746246L),
                                                                                   "343a8a44-033a-482f-a57c-b6d802a6af19",
                                                                                   "96151c6cca95ea57eac2ba8ede214aed",
                                                                                   "96151c6cca95ea57eac2ba8ede214aed");
        assertTrue(deviceenrollmentdenial.isValid());
        DeviceEnrollmentDenial deviceenrollmentdenialInvalid = new DeviceEnrollmentDenial("Z333î‚‘\u0007Q^D;3ìƒ?\u0010(ë±Ž0A333<3Zéµ…æ?µ3U3\u001d]3îŠ»3<3H3áŒƒ%3ä·¼3\u00053\u0001á‰–?`3\u0016(3ì¾™îˆ?3é¦›3S@Z3#3",
                                                                                          new Date(1558000747618L),
                                                                                          "6f4fb1b6-2ee9-4506-ab95-e2a4ee945b89",
                                                                                          "Z333î‚‘\u0007Q^D;3ìƒ?\u0010(ë±Ž0A333<3Zéµ…æ?µ3U3\u001d]3îŠ»3<3H3áŒƒ%3ä·¼3\u00053\u0001á‰–?`3\u0016(3ì¾™îˆ?3é¦›3S@Z3#3",
                                                                                          "Z333î‚‘\u0007Q^D;3ìƒ?\u0010(ë±Ž0A333<3Zéµ…æ?µ3U3\u001d]3îŠ»3<3H3áŒƒ%3ä·¼3\u00053\u0001á‰–?`3\u0016(3ì¾™îˆ?3é¦›3S@Z3#3");
        assertFalse(deviceenrollmentdenialInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("96151c6cca95ea57eac2ba8ede214aed",
                                                                                        new Date(1558000750223L),
                                                                                        "57f2f56c-ea0b-4719-9af7-969acde52b6e",
                                                                                        "96151c6cca95ea57eac2ba8ede214aed",
                                                                                        "96151c6cca95ea57eac2ba8ede214aed");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = new DeviceEnrollmentDenial("96151c6cca95ea57eac2ba8ede214aed",
                                                                                        new Date(1558000750223L),
                                                                                        "57f2f56c-ea0b-4719-9af7-969acde52b6e",
                                                                                        "96151c6cca95ea57eac2ba8ede214aed",
                                                                                        "96151c6cca95ea57eac2ba8ede214aed");
            DeviceEnrollmentDenial deviceenrollmentdenial3 = new DeviceEnrollmentDenial("96151c6cca95ea57eac2ba8ede214aed",
                                                                                        new Date(1558000749059L),
                                                                                        "48ae431e-f5b3-4484-b8fc-6c64f42f4b8a",
                                                                                        "96151c6cca95ea57eac2ba8ede214aed",
                                                                                        "96151c6cca95ea57eac2ba8ede214aed");
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotNull(deviceenrollmentdenial3);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertNotSame(deviceenrollmentdenial3, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial1, deviceenrollmentdenial2);
            assertEquals(deviceenrollmentdenial1, deviceenrollmentdenial1);
            assertFalse(deviceenrollmentdenial1.equals(null));
            assertNotEquals(deviceenrollmentdenial3, deviceenrollmentdenial1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
