// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantUserInvitation.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantUserInvitation {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantUserInvitation subtenantuserinvitation1 = new SubtenantUserInvitation("96151c6cca95ea57eac2ba8ede214aed",
                                                                                           new Date(1558000749086L),
                                                                                           "002a0.6d104@1b9dc.fr",
                                                                                           new Date(1558000755534L),
                                                                                           "96151c6cca95ea57eac2ba8ede214aed",
                                                                                           null,
                                                                                           new Date(1558000747053L),
                                                                                           "96151c6cca95ea57eac2ba8ede214aed");
            SubtenantUserInvitation subtenantuserinvitation2 = subtenantuserinvitation1.clone();
            assertNotNull(subtenantuserinvitation1);
            assertNotNull(subtenantuserinvitation2);
            assertNotSame(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantUserInvitation subtenantuserinvitation1 = new SubtenantUserInvitation("96151c6cca95ea57eac2ba8ede214aed",
                                                                                           new Date(1558000748062L),
                                                                                           "41fd7.4ce12@82f43.me",
                                                                                           new Date(1558000752479L),
                                                                                           "96151c6cca95ea57eac2ba8ede214aed",
                                                                                           null,
                                                                                           new Date(1558000750395L),
                                                                                           "96151c6cca95ea57eac2ba8ede214aed");
            SubtenantUserInvitation subtenantuserinvitation2 = new SubtenantUserInvitation("96151c6cca95ea57eac2ba8ede214aed",
                                                                                           new Date(1558000748062L),
                                                                                           "41fd7.4ce12@82f43.me",
                                                                                           new Date(1558000752479L),
                                                                                           "96151c6cca95ea57eac2ba8ede214aed",
                                                                                           null,
                                                                                           new Date(1558000750395L),
                                                                                           "96151c6cca95ea57eac2ba8ede214aed");
            assertNotNull(subtenantuserinvitation1);
            assertNotNull(subtenantuserinvitation2);
            assertNotSame(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2.hashCode(), subtenantuserinvitation1.hashCode());
            int hashCode = subtenantuserinvitation1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantuserinvitation1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantUserInvitation subtenantuserinvitation = new SubtenantUserInvitation("96151c6cca95ea57eac2ba8ede214aed",
                                                                                      new Date(1558000750341L),
                                                                                      "441cf.06bb3@4f942.fr",
                                                                                      new Date(1558000747296L),
                                                                                      "96151c6cca95ea57eac2ba8ede214aed",
                                                                                      null, new Date(1558000745849L),
                                                                                      "96151c6cca95ea57eac2ba8ede214aed");
        assertTrue(subtenantuserinvitation.isValid());
        SubtenantUserInvitation subtenantuserinvitationInvalid = new SubtenantUserInvitation(null,
                                                                                             new Date(1558000746558L),
                                                                                             null,
                                                                                             new Date(1558000752263L),
                                                                                             "Z333î‚‘\u0007Q^D;3ìƒ?\u0010(ë±Ž0A333<3Zéµ…æ?µ3U3\u001d]3îŠ»3<3H3áŒƒ%3ä·¼3\u00053\u0001á‰–?`3\u0016(3ì¾™îˆ?3é¦›3S@Z3#3",
                                                                                             null,
                                                                                             new Date(1558000747450L),
                                                                                             "Z333î‚‘\u0007Q^D;3ìƒ?\u0010(ë±Ž0A333<3Zéµ…æ?µ3U3\u001d]3îŠ»3<3H3áŒƒ%3ä·¼3\u00053\u0001á‰–?`3\u0016(3ì¾™îˆ?3é¦›3S@Z3#3");
        assertFalse(subtenantuserinvitationInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantUserInvitation subtenantuserinvitation1 = new SubtenantUserInvitation("96151c6cca95ea57eac2ba8ede214aed",
                                                                                           new Date(1558000750112L),
                                                                                           "00f6a.df63f@6f179.me",
                                                                                           new Date(1558000746130L),
                                                                                           "96151c6cca95ea57eac2ba8ede214aed",
                                                                                           null,
                                                                                           new Date(1558000751673L),
                                                                                           "96151c6cca95ea57eac2ba8ede214aed");
            SubtenantUserInvitation subtenantuserinvitation2 = new SubtenantUserInvitation("96151c6cca95ea57eac2ba8ede214aed",
                                                                                           new Date(1558000750112L),
                                                                                           "00f6a.df63f@6f179.me",
                                                                                           new Date(1558000746130L),
                                                                                           "96151c6cca95ea57eac2ba8ede214aed",
                                                                                           null,
                                                                                           new Date(1558000751673L),
                                                                                           "96151c6cca95ea57eac2ba8ede214aed");
            SubtenantUserInvitation subtenantuserinvitation3 = new SubtenantUserInvitation("96151c6cca95ea57eac2ba8ede214aed",
                                                                                           new Date(1558000749999L),
                                                                                           "d40c4.d49d6@fb45c.me",
                                                                                           new Date(1558000751534L),
                                                                                           "96151c6cca95ea57eac2ba8ede214aed",
                                                                                           null,
                                                                                           new Date(1558000752861L),
                                                                                           "96151c6cca95ea57eac2ba8ede214aed");
            assertNotNull(subtenantuserinvitation1);
            assertNotNull(subtenantuserinvitation2);
            assertNotNull(subtenantuserinvitation3);
            assertNotSame(subtenantuserinvitation2, subtenantuserinvitation1);
            assertNotSame(subtenantuserinvitation3, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation1, subtenantuserinvitation2);
            assertEquals(subtenantuserinvitation1, subtenantuserinvitation1);
            assertFalse(subtenantuserinvitation1.equals(null));
            assertNotEquals(subtenantuserinvitation3, subtenantuserinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
