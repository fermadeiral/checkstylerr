// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model User.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestUser {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            User user1 = new User("c9e40e3b45da8196a8db5943d0f9acbd", null, "f4540508-4e36-4c5c-a6c6-598bb67b7b60",
                                  new Date(1561627145385L), 62, null, "ede09.1b75f@a27f4.fr", false,
                                  "e728a72f-7792-4798-ab69-86a1aaa936fe", "c9e40e3b45da8196a8db5943d0f9acbd", false,
                                  false, true, -117, null, null, "c7575b58-e99a-4561-9d41-053d59929f01", 75,
                                  "e7a76392-d317-4b2a-b114-1286b5d84695", UserStatus.getDefault(), null,
                                  new Date(1561627150549L), "13+_3f");
            User user2 = user1.clone();
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotSame(user2, user1);
            assertEquals(user2, user1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            User user1 = new User("c9e40e3b45da8196a8db5943d0f9acbd", null, "4a35fff9-9397-42f4-8f78-f5ddc54e518e",
                                  new Date(1561627145734L), -39, null, "1d44a.a682a@5ccf3.fr", true,
                                  "b538a523-2ba2-47cc-aeb9-907e0e452a17", "c9e40e3b45da8196a8db5943d0f9acbd", false,
                                  true, true, -55, null, null, "c1dfbf7b-bf9e-4203-8ee8-a2c51ce97680", 88,
                                  "added310-5bfa-4899-8eea-fa19ce04562e", UserStatus.getDefault(), null,
                                  new Date(1561627146113L), "13+_3f");
            User user2 = new User("c9e40e3b45da8196a8db5943d0f9acbd", null, "4a35fff9-9397-42f4-8f78-f5ddc54e518e",
                                  new Date(1561627145734L), -39, null, "1d44a.a682a@5ccf3.fr", true,
                                  "b538a523-2ba2-47cc-aeb9-907e0e452a17", "c9e40e3b45da8196a8db5943d0f9acbd", false,
                                  true, true, -55, null, null, "c1dfbf7b-bf9e-4203-8ee8-a2c51ce97680", 88,
                                  "added310-5bfa-4899-8eea-fa19ce04562e", UserStatus.getDefault(), null,
                                  new Date(1561627146113L), "13+_3f");
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotSame(user2, user1);
            assertEquals(user2, user1);
            assertEquals(user2.hashCode(), user1.hashCode());
            int hashCode = user1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, user1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        User user = new User("c9e40e3b45da8196a8db5943d0f9acbd", null, "ff5a235c-92cd-4816-941d-a9b2653bcccc",
                             new Date(1561627142457L), -127, null, "b3852.ad516@efa04.me", true,
                             "2c721304-d141-4038-80e1-91dffc6d3b82", "c9e40e3b45da8196a8db5943d0f9acbd", false, false,
                             false, -12, null, null, "7f5787a0-b106-4f8a-8966-962b3707e5cf", 27,
                             "000f3d38-d705-465a-b3fe-d820c2c0eaba", UserStatus.getDefault(), null,
                             new Date(1561627148231L), "13+_3f");
        assertTrue(user.isValid());
        User userInvalid = new User("2K2Uê¸Ÿ777727'_2.ç©„á»›G72\u0011[\u0010Dã­˜Câ?µ\t77ê­ˆë”¡æ„”2'7í??7M\b\u0014ä¡­+2.à­ 72_V7277]à¾·2\u0010\u00032Z\u00157I",
                                    null, "b8b3287e-5bea-4c86-896c-413feabb4c3a", new Date(1561627144780L), -15, null,
                                    null, true,
                                    "5a675018-1308-4ca0-9f83-c9d4f25eff8acadef3ec-79e7-434e-8330-d87ec3d3ee819e2fd3b5-4fc5-4e80-8d1b-cfd890f04510",
                                    "2K2Uê¸Ÿ777727'_2.ç©„á»›G72\u0011[\u0010Dã­˜Câ?µ\t77ê­ˆë”¡æ„”2'7í??7M\b\u0014ä¡­+2.à­ 72_V7277]à¾·2\u0010\u00032Z\u00157I",
                                    true, true, true, -104, null, null, "15dfbd82-95ec-4dab-9f55-9b5cb156a626", -121,
                                    "761e82a8-8f75-4f0e-a7fd-7c03d6067cc14239de37-3148-45bd-8b58-55edb28d63bdf5f647bd-0e1e-4208-add0-2d62138412b2",
                                    UserStatus.getDefault(), null, new Date(1561627148261L),
                                    "cä“‡2\u001fï®Ÿ2]/'ê??.î£±`\u0006$$b\u0012ä—½ -èƒŽG2be\u001eä ‹db*0daå¨‹#âªµî´?26å‘±02,2Gd..28åœ¿c/22]2H\b2`2W");
        assertFalse(userInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            User user1 = new User("c9e40e3b45da8196a8db5943d0f9acbd", null, "e6011236-7195-4a62-b7b5-3ee9869ae757",
                                  new Date(1561627149626L), -126, null, "fb5a4.c339d@ff41b.fr", true,
                                  "483de7e1-12fb-428c-a684-7a2a9b2ce74b", "c9e40e3b45da8196a8db5943d0f9acbd", true,
                                  true, true, 108, null, null, "9bd39149-0cd6-4332-a55d-bf1093b57fe2", 101,
                                  "c8715ec6-3183-4abf-8227-fc4ff9414f11", UserStatus.getDefault(), null,
                                  new Date(1561627147838L), "13+_3f");
            User user2 = new User("c9e40e3b45da8196a8db5943d0f9acbd", null, "e6011236-7195-4a62-b7b5-3ee9869ae757",
                                  new Date(1561627149626L), -126, null, "fb5a4.c339d@ff41b.fr", true,
                                  "483de7e1-12fb-428c-a684-7a2a9b2ce74b", "c9e40e3b45da8196a8db5943d0f9acbd", true,
                                  true, true, 108, null, null, "9bd39149-0cd6-4332-a55d-bf1093b57fe2", 101,
                                  "c8715ec6-3183-4abf-8227-fc4ff9414f11", UserStatus.getDefault(), null,
                                  new Date(1561627147838L), "13+_3f");
            User user3 = new User("c9e40e3b45da8196a8db5943d0f9acbd", null, "0d36dfc9-df6e-428b-80de-0719e5758ac4",
                                  new Date(1561627143127L), -103, null, "87932.d1e2c@56ff8.me", true,
                                  "21bad85f-fe1c-4934-b236-94bbe1e259f1", "c9e40e3b45da8196a8db5943d0f9acbd", true,
                                  true, true, 76, null, null, "a0e9a9d5-17e4-4656-a539-c9cdfe1b8d0f", -95,
                                  "ff2e01bf-18c7-405f-9975-bae95ffcebb2", UserStatus.getDefault(), null,
                                  new Date(1561627146568L), "13+_3f");
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotNull(user3);
            assertNotSame(user2, user1);
            assertNotSame(user3, user1);
            assertEquals(user2, user1);
            assertEquals(user2, user1);
            assertEquals(user1, user2);
            assertEquals(user1, user1);
            assertFalse(user1.equals(null));
            assertNotEquals(user3, user1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
