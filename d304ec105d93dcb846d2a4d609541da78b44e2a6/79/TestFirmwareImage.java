// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.deviceupdate.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model FirmwareImage.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestFirmwareImage {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            FirmwareImage firmwareimage1 = new FirmwareImage(new Date(1561627150640L),
                                                             "1f5cf786-5b0d-4a2c-90e9-56d5ffb35573", 57,
                                                             "214eac4c-2d67-42a7-a95c-fb48d2cc1e02",
                                                             "66b94670-5d06-4714-a8a0-fa9b14fc2f85",
                                                             "3e8ed24e-2590-4af4-9b11-9ebf967f95a8",
                                                             "8c65387b-f973-4634-8da4-2373147637fc",
                                                             new Date(1561627150748L));
            FirmwareImage firmwareimage2 = firmwareimage1.clone();
            assertNotNull(firmwareimage1);
            assertNotNull(firmwareimage2);
            assertNotSame(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage2, firmwareimage1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            FirmwareImage firmwareimage1 = new FirmwareImage(new Date(1561627148604L),
                                                             "da1a3841-cdcc-45ad-9e3e-92679b6a018f", 12,
                                                             "c2c46306-781b-494b-a4d8-78287686e277",
                                                             "4aaac8f4-e08b-48af-b329-647bde63dc10",
                                                             "163f219e-844f-4622-b70a-3f96b45bde69",
                                                             "6e968f3f-ddb7-40eb-9084-494fd4880baf",
                                                             new Date(1561627151471L));
            FirmwareImage firmwareimage2 = new FirmwareImage(new Date(1561627148604L),
                                                             "da1a3841-cdcc-45ad-9e3e-92679b6a018f", 12,
                                                             "c2c46306-781b-494b-a4d8-78287686e277",
                                                             "4aaac8f4-e08b-48af-b329-647bde63dc10",
                                                             "163f219e-844f-4622-b70a-3f96b45bde69",
                                                             "6e968f3f-ddb7-40eb-9084-494fd4880baf",
                                                             new Date(1561627151471L));
            assertNotNull(firmwareimage1);
            assertNotNull(firmwareimage2);
            assertNotSame(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage2.hashCode(), firmwareimage1.hashCode());
            int hashCode = firmwareimage1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, firmwareimage1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        FirmwareImage firmwareimage = new FirmwareImage(new Date(1561627144840L),
                                                        "35e74e6c-304e-45e3-a13b-14a79a1be8a0", 13,
                                                        "94bd45a2-b9b5-4e89-b391-8e0601ab04e7",
                                                        "3b990433-800c-4d64-b779-95b83c90a369",
                                                        "12ff8154-e6f1-4686-bd57-0f7276d1bec6",
                                                        "352092bc-4418-4e6c-97d3-bc4e15365a64",
                                                        new Date(1561627148142L));
        assertTrue(firmwareimage.isValid());
        FirmwareImage firmwareimageInvalid = new FirmwareImage(new Date(1561627144613L),
                                                               "d4a8ddcb-7053-4596-a72d-19253dde3e15", -106,
                                                               "c04bf463-7cbd-4c51-91f6-3c13d738b8fd",
                                                               "c680fbc6-9c0d-47b7-b5b5-6609d93f4fd2129edb95-4dd4-4f89-a0d4-90826b63178190471577-b4f7-4703-abab-9b0fdbc2d3475f989da4-bb58-40b7-b7f4-cac54027a18e5334743a-458d-4906-9c04-505b5e9d3482bda42311-1e58-411c-82a7-d0cb5c0d3d1568d7d4fb-768c-47e5-abda-6fbe287751cfec9f4999-853e-49a2-9f42-bee71acefd0628c54a7b-27bc-4f73-b0c8-61b7a5c73d293450050a-c6d8-4cba-88d2-b44022de47ea66967997-1613-4b9e-bfff-b865a46fd08c31f0b95c-6d74-48f5-ba72-0b3fd8cc5f8db3d01c0f-d492-4733-9c3d-e2aed23809e490079e31-406a-4c01-b942-71f9ef375ed88245886c-fbfb-4bf6-8dc7-a592fbebc0cc78026aca-75a9-459c-b5a4-8595ae1ef233d21a95a6-e323-4e79-afc7-0077359646e2e41d12a6-e2a5-4d13-86e9-5de4210828f2772f583a-0ff2-4a38-baf6-9915df34533e384d79c0-ecfd-484d-9f8a-20fe2f3185702925be0d-eea1-49f8-9832-c02e8a9040456adb0665-09b1-44a0-a588-299078bab1140c47215a-f290-45a1-ac83-0be6410eb17639ba4a50-022a-4851-a62a-a826d65cf896eaf71c6c-70d7-4779-b9d5-1a6c8a4a693c4f9c6d73-40e9-448e-ba88-7262c4e52d2b9f677ba4-43c1-4ca9-9658-e4df15dfa337cd96de3e-965e-409f-b0f5-c8f86a93982eeb1ac156-a2bb-44e0-b415-3817faba749633cb45fa-36a2-445b-9334-dbb2749d64b44aeb6b83-9838-4137-9ddd-4ceede11bee49a14a388-b15a-49fb-947e-33f94f032b2e37d0a300-33db-4e8c-b2dc-4bcb962844f97e8bafed-d03c-4d99-b704-447fea8bd34c7529a79b-2b69-47b3-8b31-456775e402102941aec2-720a-4c86-887f-52bbc1c2739cfe24c2f1-0656-41bf-8be1-55a6ae3afba65e55221b-1e5f-4b98-a7df-f7a7f55b9bec8ee2bc83-1c7e-4934-815b-d786c9b7d37e5f072685-eab1-40cb-8b81-e39d56ad8167bb6e5c65-6a8c-4c3a-8b05-1523941a46d9d56dca0e-865d-41a4-9230-872a3f80c3e2938bbb33-31de-4500-9167-151bbc09930324d6b87f-de52-4fe3-94a2-64ef730d80aa550bbb47-f5c8-4499-8fbc-bdd83d90717dfbeefe5e-bf9e-4408-ab22-010cd68be751fbe72afe-4243-4bf2-8852-8bea81f04b1ef7b685e6-cbde-4c76-8448-3ebcc3e7c8fb0da796fb-8c14-47d8-9f93-6696f67efca5fd5383a7-c4bc-45d2-be64-9e8b8c66871c7d839786-3e16-45cb-879e-091d1ab22edf64996361-30e4-4473-a64f-cca8ae4704a8c3667449-d857-4654-abe4-b05ddba22829a2d69dc4-6f06-4629-b4e3-4c200346b1f19450c9fb-65f1-4d10-aae5-5cff73e0c18a80e21dc1-30b7-4c27-bc46-b0b138fc2840",
                                                               "61659261-c56c-4ae7-af7e-5284e8d2df34",
                                                               "208f3aa5-c3e5-42cb-8aab-9a329175e61403b6b565-b678-4ab4-bf9f-82c1fe2c0d9b043a1def-eb88-44f1-a721-afbbaf836490f131d9e4-cdfa-41b7-a4cc-5ff28b264365",
                                                               new Date(1561627146458L));
        assertFalse(firmwareimageInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            FirmwareImage firmwareimage1 = new FirmwareImage(new Date(1561627148097L),
                                                             "66059dff-7925-4bbf-918d-78f850a16872", -6,
                                                             "70107e33-183e-47d6-bbe6-4c2fc14ececd",
                                                             "02897bc6-5c41-46db-ba8f-a461d309df65",
                                                             "73fc47f7-ab63-422f-b108-485283722a12",
                                                             "e9f101d2-15ad-4fa8-85aa-c5618c0dd862",
                                                             new Date(1561627144984L));
            FirmwareImage firmwareimage2 = new FirmwareImage(new Date(1561627148097L),
                                                             "66059dff-7925-4bbf-918d-78f850a16872", -6,
                                                             "70107e33-183e-47d6-bbe6-4c2fc14ececd",
                                                             "02897bc6-5c41-46db-ba8f-a461d309df65",
                                                             "73fc47f7-ab63-422f-b108-485283722a12",
                                                             "e9f101d2-15ad-4fa8-85aa-c5618c0dd862",
                                                             new Date(1561627144984L));
            FirmwareImage firmwareimage3 = new FirmwareImage(new Date(1561627144758L),
                                                             "8d565a2a-8ce5-4837-a0fe-68e922f6999f", -102,
                                                             "4ae19318-20f3-48f3-bb33-da0c0631d6fd",
                                                             "8c5105da-fc76-40f5-9ace-e9fbaed890d1",
                                                             "4548fa57-9c94-41f6-9c40-cd272a671616",
                                                             "5140ce91-7bd9-4ff1-9c49-2b56fac1ae1e",
                                                             new Date(1561627143059L));
            assertNotNull(firmwareimage1);
            assertNotNull(firmwareimage2);
            assertNotNull(firmwareimage3);
            assertNotSame(firmwareimage2, firmwareimage1);
            assertNotSame(firmwareimage3, firmwareimage1);
            assertEquals(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage1, firmwareimage2);
            assertEquals(firmwareimage1, firmwareimage1);
            assertFalse(firmwareimage1.equals(null));
            assertNotEquals(firmwareimage3, firmwareimage1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
