// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.security.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeveloperCertificate.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeveloperCertificate {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("72eabbed-0d8f-4933-b469-16b086c81e4a",
                                                                                  "30b8a14f-f5fa-41ca-8cae-09329f963a1a",
                                                                                  new Date(1561627142569L),
                                                                                  "ce94b10d-cfd8-42ff-b98a-73f3ac9d6c6c",
                                                                                  "ed101dda-94bb-4450-af20-8ecd4ccba238",
                                                                                  "8396912c-83e3-4ba1-8481-2a25c3cbad75",
                                                                                  "b6d8bf47-fc73-40e8-8470-e5b4a2190b31",
                                                                                  "bc6ea8f6-123f-49d6-bc00-be643cad2f96");
            DeveloperCertificate developercertificate2 = developercertificate1.clone();
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("58638c86-1b29-43e1-996e-7dfc0a8a7158",
                                                                                  "5ee05799-571d-475b-ac9a-22a7ca8a8163",
                                                                                  new Date(1561627152004L),
                                                                                  "7d5d348b-4141-4e1f-aba9-a495423d2dae",
                                                                                  "ae74c3bb-510f-40f6-9ddb-42d59b39ea5e",
                                                                                  "6ad868e9-472f-4cb0-bc76-c3cba3d017e1",
                                                                                  "8f35c348-3ca4-44c5-a07a-b91294fe6795",
                                                                                  "99cbe244-0163-4d38-8447-11f41f01ba11");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("58638c86-1b29-43e1-996e-7dfc0a8a7158",
                                                                                  "5ee05799-571d-475b-ac9a-22a7ca8a8163",
                                                                                  new Date(1561627152004L),
                                                                                  "7d5d348b-4141-4e1f-aba9-a495423d2dae",
                                                                                  "ae74c3bb-510f-40f6-9ddb-42d59b39ea5e",
                                                                                  "6ad868e9-472f-4cb0-bc76-c3cba3d017e1",
                                                                                  "8f35c348-3ca4-44c5-a07a-b91294fe6795",
                                                                                  "99cbe244-0163-4d38-8447-11f41f01ba11");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2.hashCode(), developercertificate1.hashCode());
            int hashCode = developercertificate1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, developercertificate1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeveloperCertificate developercertificate = new DeveloperCertificate("39e52cf0-c6dd-4d64-a043-f3cba5af3f8a",
                                                                             "a302efc2-f515-4c44-94e6-54a618004a8a",
                                                                             new Date(1561627146190L),
                                                                             "49f32018-578c-4302-b56b-3dea21439d53",
                                                                             "4f625b11-b36d-4295-998a-bf1cc4c27d39",
                                                                             "8e2f8d1b-4324-4cd2-b5f3-beac532b9bf5",
                                                                             "3b4829d8-2e61-4a03-abbe-50e9f4d98e03",
                                                                             "750ace4f-3302-49a9-8ae2-b3ac33ec3a11");
        assertTrue(developercertificate.isValid());
        DeveloperCertificate developercertificateInvalid = new DeveloperCertificate("de70c2f4-bc45-4bd9-bdaf-4860d00efedd",
                                                                                    "fa40e48c-dc24-4806-80c4-74d3e0ce2797",
                                                                                    new Date(1561627144516L),
                                                                                    "95a4f67b-a715-450b-82fc-af517c4f408b",
                                                                                    "5ded774c-be6b-4df3-a11b-b836ada0ce1e",
                                                                                    "15945004-81f6-45cb-a9b5-e5972edbe949",
                                                                                    null,
                                                                                    "ec651d6d-1447-4ebd-b9d8-b63f17edb73b");
        assertFalse(developercertificateInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("edbba9df-6c0e-44a5-b856-cab757aa251e",
                                                                                  "710b8981-a87e-43dc-be79-82e7ef40730b",
                                                                                  new Date(1561627151359L),
                                                                                  "e314374a-9030-4b0c-bdd9-690349c4cc6e",
                                                                                  "c3dce562-c9ca-4078-8251-9c768bb8b9e2",
                                                                                  "606a8a31-e9b5-4d34-9090-d15ce6f6445d",
                                                                                  "b9d53ef1-c6db-4d14-874d-92d6b65fbbf4",
                                                                                  "24bad47d-cf04-48c0-9710-5803b1e6fc04");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("edbba9df-6c0e-44a5-b856-cab757aa251e",
                                                                                  "710b8981-a87e-43dc-be79-82e7ef40730b",
                                                                                  new Date(1561627151359L),
                                                                                  "e314374a-9030-4b0c-bdd9-690349c4cc6e",
                                                                                  "c3dce562-c9ca-4078-8251-9c768bb8b9e2",
                                                                                  "606a8a31-e9b5-4d34-9090-d15ce6f6445d",
                                                                                  "b9d53ef1-c6db-4d14-874d-92d6b65fbbf4",
                                                                                  "24bad47d-cf04-48c0-9710-5803b1e6fc04");
            DeveloperCertificate developercertificate3 = new DeveloperCertificate("d0c4dbed-a5f8-463a-80cb-960d1a4dd3b7",
                                                                                  "74c1ded8-a337-4db0-a369-b867e48c9634",
                                                                                  new Date(1561627143645L),
                                                                                  "7da5cf0d-eb59-447d-a0ed-11b833e92e44",
                                                                                  "3156a1be-92f3-46f4-a27c-e83b7d705635",
                                                                                  "34df26ca-4f7a-468a-9efd-5ae7644326d7",
                                                                                  "0348d8c8-6be2-40e6-9a64-af2748361991",
                                                                                  "a13e16ac-bec4-4758-868e-dd8726f07417");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotNull(developercertificate3);
            assertNotSame(developercertificate2, developercertificate1);
            assertNotSame(developercertificate3, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate1, developercertificate2);
            assertEquals(developercertificate1, developercertificate1);
            assertFalse(developercertificate1.equals(null));
            assertNotEquals(developercertificate3, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
