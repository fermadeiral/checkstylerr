// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import com.arm.mbed.cloud.sdk.common.Order;
import com.arm.mbed.cloud.sdk.common.listing.ListOptionsEncoder;
import com.arm.mbed.cloud.sdk.common.listing.filtering.FilterOperator;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEventsListOptions.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEventsListOptions {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEventsListOptions deviceeventslistoptions1 = new DeviceEventsListOptions(Integer.valueOf(-91),
                                                                                           Long.valueOf(93),
                                                                                           Order.getDefault(),
                                                                                           "4baa5796-2d7e-4378-80bc-4a6973361eb9",
                                                                                           null, null);
            DeviceEventsListOptions deviceeventslistoptions2 = deviceeventslistoptions1.clone();
            assertNotNull(deviceeventslistoptions1);
            assertNotNull(deviceeventslistoptions2);
            assertNotSame(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2, deviceeventslistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the filters method.
     */
    @SuppressWarnings({ "boxing", "resource" })
    @Test
    public void testFilters() {
        try {
            DeviceEventsListOptions option = new DeviceEventsListOptions().equalToDeviceId("75402892-f90c-45c0-a388-485ffe5b94de")
                                                                          .notEqualToDeviceId("633ce920-2dad-4b2d-a156-fa98c9f44842")
                                                                          .inDeviceIds(Arrays.asList("5456beb6-11d0-433d-95ea-8f9f646a6f47",
                                                                                                     "1c66b218-e04c-486d-a7d2-01985bffd2fd",
                                                                                                     "7ab3d2bc-12b2-4221-aad2-ffafb2d0cf46",
                                                                                                     "6cc4a89f-1d54-47d5-919b-a73f28f7e0b0"))
                                                                          .notInDeviceIds(Arrays.asList("f507f76e-1ef0-4a78-8905-a8aaae1045f2",
                                                                                                        "3c32c4a8-db75-4e3b-84d9-c794d7bbe197",
                                                                                                        "6be7c791-3162-4d99-921d-3212fbcf532c",
                                                                                                        "3d0c2c29-ce16-480d-8897-86a1866ab8bd",
                                                                                                        "fa17a71a-9fb8-43d4-b22b-23aebc1f6a82"))
                                                                          .equalToDescription("4c229003-6f0f-40af-ae9c-9dcb572c2e52")
                                                                          .notEqualToDescription("ec851274-c94d-46e9-857d-d57480d8a4ef")
                                                                          .inDescriptions(Arrays.asList("c8deeab5-ddb2-485a-8771-d677ecf261b0",
                                                                                                        "0c7ba96d-0d82-4811-bf60-7906bffdbdba",
                                                                                                        "7d9f60d6-850b-48e9-96e6-aa5a4d34f3a9",
                                                                                                        "ee809c1a-9841-4886-954e-df61efdaa029",
                                                                                                        "5ef7ab5f-b72b-4544-80e8-051078d5c0c7",
                                                                                                        "c991c862-d0f9-4484-965b-c91ebb2c51e7",
                                                                                                        "7a8c5646-705f-43fa-9d07-3f595b14537c",
                                                                                                        "817b9222-b111-4017-9ac3-65cb62b2b0f7",
                                                                                                        "103ce960-8e39-461c-900b-66f4e46ebb7e"))
                                                                          .notInDescriptions(Arrays.asList("735ad1a3-3f42-4fd8-9887-04401b0e99bb",
                                                                                                           "dfb4d3d3-ed2f-417a-a27a-bcd1e252118a",
                                                                                                           "a08a390b-2df9-4add-badc-34e4def0d2f8"))
                                                                          .inDateTimes(Arrays.asList(new Date(1561627146449L),
                                                                                                     new Date(1561627152005L),
                                                                                                     new Date(1561627151549L),
                                                                                                     new Date(1561627146958L),
                                                                                                     new Date(1561627147563L)))
                                                                          .notInDateTimes(Arrays.asList(new Date(1561627144622L),
                                                                                                        new Date(1561627151386L),
                                                                                                        new Date(1561627151144L)))
                                                                          .lessThanDateTime(new Date(1561627152064L))
                                                                          .greaterThanDateTime(new Date(1561627148314L))
                                                                          .equalToStateChange(Boolean.TRUE)
                                                                          .notEqualToStateChange(Boolean.FALSE)
                                                                          .equalToId("db17467f-2da6-4395-ab5f-ea1404f57cb2")
                                                                          .notEqualToId("ef73c7d7-2a34-4b87-9725-38be6151b4a8")
                                                                          .inIds(Arrays.asList("e81a92ed-714a-4ade-95c8-74cf95c6f3d5",
                                                                                               "d97ec282-253c-4bfa-bef0-5623badf9cb4",
                                                                                               "b1a7cd1c-d1d3-47b7-9a09-b66e0b374979",
                                                                                               "ec20f499-8185-4282-a1bc-43ef1d52fff2"))
                                                                          .notInIds(Arrays.asList("0a9e45f6-6d8e-4fde-bfed-2f2273d57202",
                                                                                                  "c993d2ce-896c-4004-8ed1-d4dbb64aa086",
                                                                                                  "df5a92f9-614f-417c-b34e-d471a0015f15",
                                                                                                  "08e4d43d-3b44-43d8-8f42-b4a16f621b81",
                                                                                                  "c4c86f80-420f-4211-b296-7a94081fe74b",
                                                                                                  "7cb24d7a-b4d2-4ee2-9f5d-424f705fb781"))
                                                                          .equalToEventType("d8b60ed0-086a-4eaa-8049-b25da0002953")
                                                                          .notEqualToEventType("340489f6-3602-439f-9d36-e64b1ebcb990")
                                                                          .inEventTypes(Arrays.asList("803e0c8d-6e16-425b-a25c-b9f1ff07faef"))
                                                                          .notInEventTypes(Arrays.asList("d6513b22-43ed-4ef6-8657-563e9d63fae1",
                                                                                                         "9a0846cf-ba5e-462d-a4fa-b05e06d4b9a9",
                                                                                                         "dc17cef2-d1d9-4632-89f2-a2f1667fc7e6",
                                                                                                         "14bd9002-417a-45a7-bfec-73f34f3ca2a0",
                                                                                                         "c0135519-9f76-4f1a-b2c4-7d3f32a237d5",
                                                                                                         "159c8666-f2c2-4142-a0b1-9790dddf55ae",
                                                                                                         "c6e59536-a0f8-4243-8367-885241824ffe"));
            assertTrue(option.hasFilters());
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID, FilterOperator.EQUAL));
            assertNotNull(option.getDeviceIdFilters());
            assertEquals("75402892-f90c-45c0-a388-485ffe5b94de",
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDeviceIdFilters());
            assertEquals("633ce920-2dad-4b2d-a156-fa98c9f44842",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID, FilterOperator.IN));
            assertNotNull(option.getDeviceIdFilters());
            assertEquals(Arrays.asList("5456beb6-11d0-433d-95ea-8f9f646a6f47", "1c66b218-e04c-486d-a7d2-01985bffd2fd",
                                       "7ab3d2bc-12b2-4221-aad2-ffafb2d0cf46", "6cc4a89f-1d54-47d5-919b-a73f28f7e0b0"),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID,
                                                                 List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getDeviceIdFilters());
            assertEquals(Arrays.asList("f507f76e-1ef0-4a78-8905-a8aaae1045f2", "3c32c4a8-db75-4e3b-84d9-c794d7bbe197",
                                       "6be7c791-3162-4d99-921d-3212fbcf532c", "3d0c2c29-ce16-480d-8897-86a1866ab8bd",
                                       "fa17a71a-9fb8-43d4-b22b-23aebc1f6a82"),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID,
                                                                    List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("4c229003-6f0f-40af-ae9c-9dcb572c2e52",
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("ec851274-c94d-46e9-857d-d57480d8a4ef",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                       String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("c8deeab5-ddb2-485a-8771-d677ecf261b0", "0c7ba96d-0d82-4811-bf60-7906bffdbdba",
                                       "7d9f60d6-850b-48e9-96e6-aa5a4d34f3a9", "ee809c1a-9841-4886-954e-df61efdaa029",
                                       "5ef7ab5f-b72b-4544-80e8-051078d5c0c7", "c991c862-d0f9-4484-965b-c91ebb2c51e7",
                                       "7a8c5646-705f-43fa-9d07-3f595b14537c", "817b9222-b111-4017-9ac3-65cb62b2b0f7",
                                       "103ce960-8e39-461c-900b-66f4e46ebb7e"),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                 List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("735ad1a3-3f42-4fd8-9887-04401b0e99bb", "dfb4d3d3-ed2f-417a-a27a-bcd1e252118a",
                                       "a08a390b-2df9-4add-badc-34e4def0d2f8"),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME, FilterOperator.IN));
            assertNotNull(option.getDateTimeFilters());
            assertEquals(Arrays.asList(new Date(1561627146449L), new Date(1561627152005L), new Date(1561627151549L),
                                       new Date(1561627146958L), new Date(1561627147563L)),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME,
                                                                 List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME, FilterOperator.NOT_IN));
            assertNotNull(option.getDateTimeFilters());
            assertEquals(Arrays.asList(new Date(1561627144622L), new Date(1561627151386L), new Date(1561627151144L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME,
                                                                    List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME, FilterOperator.LESS_THAN));
            assertNotNull(option.getDateTimeFilters());
            assertEquals(new Date(1561627152064L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME, FilterOperator.GREATER_THAN));
            assertNotNull(option.getDateTimeFilters());
            assertEquals(new Date(1561627148314L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE, FilterOperator.EQUAL));
            assertNotNull(option.getStateChangeFilters());
            assertEquals(Boolean.TRUE,
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE,
                                                                    Boolean.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getStateChangeFilters());
            assertEquals(Boolean.FALSE,
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE,
                                                                       Boolean.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, FilterOperator.EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("db17467f-2da6-4395-ab5f-ea1404f57cb2",
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("ef73c7d7-2a34-4b87-9725-38be6151b4a8",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, FilterOperator.IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("e81a92ed-714a-4ade-95c8-74cf95c6f3d5", "d97ec282-253c-4bfa-bef0-5623badf9cb4",
                                       "b1a7cd1c-d1d3-47b7-9a09-b66e0b374979", "ec20f499-8185-4282-a1bc-43ef1d52fff2"),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, List.class,
                                                                 option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("0a9e45f6-6d8e-4fde-bfed-2f2273d57202", "c993d2ce-896c-4004-8ed1-d4dbb64aa086",
                                       "df5a92f9-614f-417c-b34e-d471a0015f15", "08e4d43d-3b44-43d8-8f42-b4a16f621b81",
                                       "c4c86f80-420f-4211-b296-7a94081fe74b", "7cb24d7a-b4d2-4ee2-9f5d-424f705fb781"),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID,
                                                                    List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE, FilterOperator.EQUAL));
            assertNotNull(option.getEventTypeFilters());
            assertEquals("d8b60ed0-086a-4eaa-8049-b25da0002953",
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE,
                                                                    String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getEventTypeFilters());
            assertEquals("340489f6-3602-439f-9d36-e64b1ebcb990",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE,
                                                                       String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE, FilterOperator.IN));
            assertNotNull(option.getEventTypeFilters());
            assertEquals(Arrays.asList("803e0c8d-6e16-425b-a25c-b9f1ff07faef"),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE,
                                                                 List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE, FilterOperator.NOT_IN));
            assertNotNull(option.getEventTypeFilters());
            assertEquals(Arrays.asList("d6513b22-43ed-4ef6-8657-563e9d63fae1", "9a0846cf-ba5e-462d-a4fa-b05e06d4b9a9",
                                       "dc17cef2-d1d9-4632-89f2-a2f1667fc7e6", "14bd9002-417a-45a7-bfec-73f34f3ca2a0",
                                       "c0135519-9f76-4f1a-b2c4-7d3f32a237d5", "159c8666-f2c2-4142-a0b1-9790dddf55ae",
                                       "c6e59536-a0f8-4243-8367-885241824ffe"),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE,
                                                                    List.class, option));
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEventsListOptions deviceeventslistoptions1 = new DeviceEventsListOptions(Integer.valueOf(96),
                                                                                           Long.valueOf(-77),
                                                                                           Order.getDefault(),
                                                                                           "8083aa8b-3457-4d3e-93d7-6c1a7d51c920",
                                                                                           null, null);
            DeviceEventsListOptions deviceeventslistoptions2 = new DeviceEventsListOptions(Integer.valueOf(96),
                                                                                           Long.valueOf(-77),
                                                                                           Order.getDefault(),
                                                                                           "8083aa8b-3457-4d3e-93d7-6c1a7d51c920",
                                                                                           null, null);
            assertNotNull(deviceeventslistoptions1);
            assertNotNull(deviceeventslistoptions2);
            assertNotSame(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2.hashCode(), deviceeventslistoptions1.hashCode());
            int hashCode = deviceeventslistoptions1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceeventslistoptions1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEventsListOptions deviceeventslistoptions1 = new DeviceEventsListOptions(Integer.valueOf(86),
                                                                                           Long.valueOf(-80),
                                                                                           Order.getDefault(),
                                                                                           "76e723b1-38d8-41d0-8ee3-15041a9cdc86",
                                                                                           null, null);
            DeviceEventsListOptions deviceeventslistoptions2 = new DeviceEventsListOptions(Integer.valueOf(86),
                                                                                           Long.valueOf(-80),
                                                                                           Order.getDefault(),
                                                                                           "76e723b1-38d8-41d0-8ee3-15041a9cdc86",
                                                                                           null, null);
            DeviceEventsListOptions deviceeventslistoptions3 = new DeviceEventsListOptions(Integer.valueOf(-123),
                                                                                           Long.valueOf(116),
                                                                                           Order.getDefault(),
                                                                                           "a2a8321b-3ba8-4188-a99d-5ce7383c27c9",
                                                                                           null, null);
            assertNotNull(deviceeventslistoptions1);
            assertNotNull(deviceeventslistoptions2);
            assertNotNull(deviceeventslistoptions3);
            assertNotSame(deviceeventslistoptions2, deviceeventslistoptions1);
            assertNotSame(deviceeventslistoptions3, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions1, deviceeventslistoptions2);
            assertEquals(deviceeventslistoptions1, deviceeventslistoptions1);
            assertFalse(deviceeventslistoptions1.equals(null));
            assertNotEquals(deviceeventslistoptions3, deviceeventslistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
