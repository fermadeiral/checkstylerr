// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantApiKey.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantApiKey {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("c9e40e3b45da8196a8db5943d0f9acbd",
                                                                   new Date(1561627151395L), 116,
                                                                   "c9e40e3b45da8196a8db5943d0f9acbd",
                                                                   "f09ad62d-3083-4ad1-8fcd-bc3f716a9728", 56,
                                                                   "94c2927a-0787-44b5-bb67-0d42fd46c488",
                                                                   "c9e40e3b45da8196a8db5943d0f9acbd",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1561627149340L));
            SubtenantApiKey subtenantapikey2 = subtenantapikey1.clone();
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("c9e40e3b45da8196a8db5943d0f9acbd",
                                                                   new Date(1561627149450L), 110,
                                                                   "c9e40e3b45da8196a8db5943d0f9acbd",
                                                                   "14d73d80-84e6-4c8a-967b-bdfb95adfb2c", 79,
                                                                   "b9a02f2c-d141-49ca-8ab5-336e3cf187ae",
                                                                   "c9e40e3b45da8196a8db5943d0f9acbd",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1561627151054L));
            SubtenantApiKey subtenantapikey2 = new SubtenantApiKey("c9e40e3b45da8196a8db5943d0f9acbd",
                                                                   new Date(1561627149450L), 110,
                                                                   "c9e40e3b45da8196a8db5943d0f9acbd",
                                                                   "14d73d80-84e6-4c8a-967b-bdfb95adfb2c", 79,
                                                                   "b9a02f2c-d141-49ca-8ab5-336e3cf187ae",
                                                                   "c9e40e3b45da8196a8db5943d0f9acbd",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1561627151054L));
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2.hashCode(), subtenantapikey1.hashCode());
            int hashCode = subtenantapikey1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantapikey1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantApiKey subtenantapikey = new SubtenantApiKey("c9e40e3b45da8196a8db5943d0f9acbd",
                                                              new Date(1561627149294L), 77,
                                                              "c9e40e3b45da8196a8db5943d0f9acbd",
                                                              "27b02259-bd04-44c0-86e0-51f645e6e2c1", 64,
                                                              "d288f350-afef-4954-8cb4-d5ceb12b6187",
                                                              "c9e40e3b45da8196a8db5943d0f9acbd",
                                                              SubtenantApiKeyStatus.getDefault(),
                                                              new Date(1561627150099L));
        assertTrue(subtenantapikey.isValid());
        SubtenantApiKey subtenantapikeyInvalid = new SubtenantApiKey(null, new Date(1561627144794L), -98,
                                                                     "2K2Uê¸Ÿ777727'_2.ç©„á»›G72\u0011[\u0010Dã­˜Câ?µ\t77ê­ˆë”¡æ„”2'7í??7M\b\u0014ä¡­+2.à­ 72_V7277]à¾·2\u0010\u00032Z\u00157I",
                                                                     "c75f9dba-40db-4b23-aa44-4e5b08dac913", 46, null,
                                                                     "2K2Uê¸Ÿ777727'_2.ç©„á»›G72\u0011[\u0010Dã­˜Câ?µ\t77ê­ˆë”¡æ„”2'7í??7M\b\u0014ä¡­+2.à­ 72_V7277]à¾·2\u0010\u00032Z\u00157I",
                                                                     SubtenantApiKeyStatus.getDefault(),
                                                                     new Date(1561627142660L));
        assertFalse(subtenantapikeyInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("c9e40e3b45da8196a8db5943d0f9acbd",
                                                                   new Date(1561627148793L), 65,
                                                                   "c9e40e3b45da8196a8db5943d0f9acbd",
                                                                   "b3d01e7b-9d70-4957-b5bb-c1ccca343d37", 97,
                                                                   "8eb24419-c1a3-47b8-a427-b45f1fc4ae7c",
                                                                   "c9e40e3b45da8196a8db5943d0f9acbd",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1561627147941L));
            SubtenantApiKey subtenantapikey2 = new SubtenantApiKey("c9e40e3b45da8196a8db5943d0f9acbd",
                                                                   new Date(1561627148793L), 65,
                                                                   "c9e40e3b45da8196a8db5943d0f9acbd",
                                                                   "b3d01e7b-9d70-4957-b5bb-c1ccca343d37", 97,
                                                                   "8eb24419-c1a3-47b8-a427-b45f1fc4ae7c",
                                                                   "c9e40e3b45da8196a8db5943d0f9acbd",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1561627147941L));
            SubtenantApiKey subtenantapikey3 = new SubtenantApiKey("c9e40e3b45da8196a8db5943d0f9acbd",
                                                                   new Date(1561627151398L), 6,
                                                                   "c9e40e3b45da8196a8db5943d0f9acbd",
                                                                   "bb26e772-b4c3-45b1-8b67-f6bbc8450b5d", 49,
                                                                   "ecb90042-4e95-46a5-b6c8-2f319449af75",
                                                                   "c9e40e3b45da8196a8db5943d0f9acbd",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1561627143718L));
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotNull(subtenantapikey3);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertNotSame(subtenantapikey3, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey1, subtenantapikey2);
            assertEquals(subtenantapikey1, subtenantapikey1);
            assertFalse(subtenantapikey1.equals(null));
            assertNotEquals(subtenantapikey3, subtenantapikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
