// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model ParentAccount.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestParentAccount {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("ee028.35d1d@243be.me",
                                                             "e56f3ef0-9d91-43e9-b520-578fb27496fb",
                                                             "c9e40e3b45da8196a8db5943d0f9acbd");
            ParentAccount parentaccount2 = parentaccount1.clone();
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotSame(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("744f8.46b28@57958.me",
                                                             "63283186-f8df-4a70-9186-d0f4e406299e",
                                                             "c9e40e3b45da8196a8db5943d0f9acbd");
            ParentAccount parentaccount2 = new ParentAccount("744f8.46b28@57958.me",
                                                             "63283186-f8df-4a70-9186-d0f4e406299e",
                                                             "c9e40e3b45da8196a8db5943d0f9acbd");
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotSame(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount2.hashCode(), parentaccount1.hashCode());
            int hashCode = parentaccount1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, parentaccount1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ParentAccount parentaccount = new ParentAccount("bd9e7.580d6@df323.me", "dfcf2799-e948-4090-b1ab-7502ddb27c7a",
                                                        "c9e40e3b45da8196a8db5943d0f9acbd");
        assertTrue(parentaccount.isValid());
        ParentAccount parentaccountInvalid = new ParentAccount("ï¾—\u000b\u0007\u0015ì’‡>>>ï«šëª‘,ê½?0à»žë³‚\u0014ï?”ï®¹ï•¼ç??ï°³é‚‘ä›œï ?ç¿¦ïŽ‹?ï—®æŸ?é¸ºéŠ§\u001fé?„ëŠ®é²”ï»”ëºµï¹?é„¬ïŒ‡ï½¯ï ´>é?²ë°—ï€€ï»²ï„§é?¹ê­˜ê¨®å¢œîŠ?>(á ªë›¶*>\u001bí„¯á¬¦ï¸?ê?­",
                                                               "63073821-43cb-4821-8e15-7de1091d7ead2e51e02d-c0c8-40d9-bdfb-532ef0399f14399fa865-ef16-425f-a4ed-decc4f9b457f",
                                                               "2K2Uê¸Ÿ777727'_2.ç©„á»›G72\u0011[\u0010Dã­˜Câ?µ\t77ê­ˆë”¡æ„”2'7í??7M\b\u0014ä¡­+2.à­ 72_V7277]à¾·2\u0010\u00032Z\u00157I");
        assertFalse(parentaccountInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("877c4.d1520@35f19.me",
                                                             "fd848239-2c88-4788-aecf-344616ecd269",
                                                             "c9e40e3b45da8196a8db5943d0f9acbd");
            ParentAccount parentaccount2 = new ParentAccount("877c4.d1520@35f19.me",
                                                             "fd848239-2c88-4788-aecf-344616ecd269",
                                                             "c9e40e3b45da8196a8db5943d0f9acbd");
            ParentAccount parentaccount3 = new ParentAccount("3b6d1.eb575@5bfeb.me",
                                                             "cbbf2f12-4248-4785-905e-b5a319a6be03",
                                                             "c9e40e3b45da8196a8db5943d0f9acbd");
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotNull(parentaccount3);
            assertNotSame(parentaccount2, parentaccount1);
            assertNotSame(parentaccount3, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount1, parentaccount2);
            assertEquals(parentaccount1, parentaccount1);
            assertFalse(parentaccount1.equals(null));
            assertNotEquals(parentaccount3, parentaccount1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
