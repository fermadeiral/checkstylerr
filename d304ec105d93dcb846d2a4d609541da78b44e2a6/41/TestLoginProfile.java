// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model LoginProfile.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestLoginProfile {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            LoginProfile loginprofile1 = new LoginProfile("dec8c953-7c7f-4b55-aeed-9baa1493f7d5",
                                                          "ed00a29d-0eb1-45f2-8d97-16bf15e65194");
            LoginProfile loginprofile2 = loginprofile1.clone();
            assertNotNull(loginprofile1);
            assertNotNull(loginprofile2);
            assertNotSame(loginprofile2, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            LoginProfile loginprofile1 = new LoginProfile("a985fab2-a959-4207-abd0-07c09c82610d",
                                                          "2f739562-141b-498d-8e86-6af831029ae0");
            LoginProfile loginprofile2 = new LoginProfile("a985fab2-a959-4207-abd0-07c09c82610d",
                                                          "2f739562-141b-498d-8e86-6af831029ae0");
            assertNotNull(loginprofile1);
            assertNotNull(loginprofile2);
            assertNotSame(loginprofile2, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
            assertEquals(loginprofile2.hashCode(), loginprofile1.hashCode());
            int hashCode = loginprofile1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, loginprofile1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        LoginProfile loginprofile = new LoginProfile("e437e8fc-6043-435a-9a75-2dc594cb8384",
                                                     "34f80667-6fc1-4fa4-b0ca-19c0ecd67e90");
        assertTrue(loginprofile.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            LoginProfile loginprofile1 = new LoginProfile("1dec2beb-1796-4fd0-a859-e321d7c0ccae",
                                                          "27fe79aa-40ad-4f89-a8ce-a4af64a87d4e");
            LoginProfile loginprofile2 = new LoginProfile("1dec2beb-1796-4fd0-a859-e321d7c0ccae",
                                                          "27fe79aa-40ad-4f89-a8ce-a4af64a87d4e");
            LoginProfile loginprofile3 = new LoginProfile("31f6d331-dd41-40c4-9dba-a8bcd99901a8",
                                                          "b0fb4924-bb2d-4e5e-a22b-bf070617c110");
            assertNotNull(loginprofile1);
            assertNotNull(loginprofile2);
            assertNotNull(loginprofile3);
            assertNotSame(loginprofile2, loginprofile1);
            assertNotSame(loginprofile3, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
            assertEquals(loginprofile1, loginprofile2);
            assertEquals(loginprofile1, loginprofile1);
            assertFalse(loginprofile1.equals(null));
            assertNotEquals(loginprofile3, loginprofile1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
