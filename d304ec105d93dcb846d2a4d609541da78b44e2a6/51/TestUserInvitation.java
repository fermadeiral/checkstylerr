// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model UserInvitation.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestUserInvitation {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("c9e40e3b45da8196a8db5943d0f9acbd",
                                                                new Date(1561627147869L), "fff91.c64ff@75737.fr",
                                                                new Date(1561627142221L),
                                                                "c9e40e3b45da8196a8db5943d0f9acbd", null,
                                                                new Date(1561627145299L),
                                                                "c9e40e3b45da8196a8db5943d0f9acbd");
            UserInvitation userinvitation2 = userinvitation1.clone();
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotSame(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("c9e40e3b45da8196a8db5943d0f9acbd",
                                                                new Date(1561627150249L), "b7f32.e0b33@0b1e7.me",
                                                                new Date(1561627151089L),
                                                                "c9e40e3b45da8196a8db5943d0f9acbd", null,
                                                                new Date(1561627150748L),
                                                                "c9e40e3b45da8196a8db5943d0f9acbd");
            UserInvitation userinvitation2 = new UserInvitation("c9e40e3b45da8196a8db5943d0f9acbd",
                                                                new Date(1561627150249L), "b7f32.e0b33@0b1e7.me",
                                                                new Date(1561627151089L),
                                                                "c9e40e3b45da8196a8db5943d0f9acbd", null,
                                                                new Date(1561627150748L),
                                                                "c9e40e3b45da8196a8db5943d0f9acbd");
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotSame(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation2.hashCode(), userinvitation1.hashCode());
            int hashCode = userinvitation1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, userinvitation1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        UserInvitation userinvitation = new UserInvitation("c9e40e3b45da8196a8db5943d0f9acbd", new Date(1561627148671L),
                                                           "a0736.fd894@f01e8.fr", new Date(1561627150178L),
                                                           "c9e40e3b45da8196a8db5943d0f9acbd", null,
                                                           new Date(1561627150662L),
                                                           "c9e40e3b45da8196a8db5943d0f9acbd");
        assertTrue(userinvitation.isValid());
        UserInvitation userinvitationInvalid = new UserInvitation("2K2Uê¸Ÿ777727'_2.ç©„á»›G72\u0011[\u0010Dã­˜Câ?µ\t77ê­ˆë”¡æ„”2'7í??7M\b\u0014ä¡­+2.à­ 72_V7277]à¾·2\u0010\u00032Z\u00157I",
                                                                  new Date(1561627150000L), null,
                                                                  new Date(1561627150965L),
                                                                  "2K2Uê¸Ÿ777727'_2.ç©„á»›G72\u0011[\u0010Dã­˜Câ?µ\t77ê­ˆë”¡æ„”2'7í??7M\b\u0014ä¡­+2.à­ 72_V7277]à¾·2\u0010\u00032Z\u00157I",
                                                                  null, new Date(1561627143155L),
                                                                  "2K2Uê¸Ÿ777727'_2.ç©„á»›G72\u0011[\u0010Dã­˜Câ?µ\t77ê­ˆë”¡æ„”2'7í??7M\b\u0014ä¡­+2.à­ 72_V7277]à¾·2\u0010\u00032Z\u00157I");
        assertFalse(userinvitationInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("c9e40e3b45da8196a8db5943d0f9acbd",
                                                                new Date(1561627144594L), "d710f.1d7a9@5659f.fr",
                                                                new Date(1561627145356L),
                                                                "c9e40e3b45da8196a8db5943d0f9acbd", null,
                                                                new Date(1561627144296L),
                                                                "c9e40e3b45da8196a8db5943d0f9acbd");
            UserInvitation userinvitation2 = new UserInvitation("c9e40e3b45da8196a8db5943d0f9acbd",
                                                                new Date(1561627144594L), "d710f.1d7a9@5659f.fr",
                                                                new Date(1561627145356L),
                                                                "c9e40e3b45da8196a8db5943d0f9acbd", null,
                                                                new Date(1561627144296L),
                                                                "c9e40e3b45da8196a8db5943d0f9acbd");
            UserInvitation userinvitation3 = new UserInvitation("c9e40e3b45da8196a8db5943d0f9acbd",
                                                                new Date(1561627151827L), "c0510.451ba@94141.me",
                                                                new Date(1561627150839L),
                                                                "c9e40e3b45da8196a8db5943d0f9acbd", null,
                                                                new Date(1561627149936L),
                                                                "c9e40e3b45da8196a8db5943d0f9acbd");
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotNull(userinvitation3);
            assertNotSame(userinvitation2, userinvitation1);
            assertNotSame(userinvitation3, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation1, userinvitation2);
            assertEquals(userinvitation1, userinvitation1);
            assertFalse(userinvitation1.equals(null));
            assertNotEquals(userinvitation3, userinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
