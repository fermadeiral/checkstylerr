// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model ActiveSession.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestActiveSession {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ActiveSession activesession1 = new ActiveSession("c9e40e3b45da8196a8db5943d0f9acbd",
                                                             "247ef281-1a26-46d4-ba2d-d091a57716b5",
                                                             new Date(1561627142817L),
                                                             "4b947d69-ee58-4fca-ba4e-f7e0b81a1cd7",
                                                             "57f868cf-73b5-444a-852b-645630225c6d");
            ActiveSession activesession2 = activesession1.clone();
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotSame(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ActiveSession activesession1 = new ActiveSession("c9e40e3b45da8196a8db5943d0f9acbd",
                                                             "16f483ca-1aa2-43c9-bf2b-463404098ccb",
                                                             new Date(1561627149719L),
                                                             "2f5bab87-9744-4bd8-bc2b-997aa08a521d",
                                                             "32bb20b7-1e92-4a79-ad21-7a5cea743911");
            ActiveSession activesession2 = new ActiveSession("c9e40e3b45da8196a8db5943d0f9acbd",
                                                             "16f483ca-1aa2-43c9-bf2b-463404098ccb",
                                                             new Date(1561627149719L),
                                                             "2f5bab87-9744-4bd8-bc2b-997aa08a521d",
                                                             "32bb20b7-1e92-4a79-ad21-7a5cea743911");
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotSame(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession2.hashCode(), activesession1.hashCode());
            int hashCode = activesession1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, activesession1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ActiveSession activesession = new ActiveSession("c9e40e3b45da8196a8db5943d0f9acbd",
                                                        "299af855-b0c7-4f6a-869e-c2bc965d8de3",
                                                        new Date(1561627145892L),
                                                        "bdc9fe3d-29c5-4c76-a4fb-ab3738b45703",
                                                        "51fec965-0b7d-4c30-8836-d2830a486917");
        assertTrue(activesession.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ActiveSession activesession1 = new ActiveSession("c9e40e3b45da8196a8db5943d0f9acbd",
                                                             "af0cdc68-13b6-4990-9db5-39260611d7be",
                                                             new Date(1561627146472L),
                                                             "ab10bf81-649f-4839-aa0e-c2682345e5c9",
                                                             "71976990-7f2a-47e6-8a93-b02bc52e0e7e");
            ActiveSession activesession2 = new ActiveSession("c9e40e3b45da8196a8db5943d0f9acbd",
                                                             "af0cdc68-13b6-4990-9db5-39260611d7be",
                                                             new Date(1561627146472L),
                                                             "ab10bf81-649f-4839-aa0e-c2682345e5c9",
                                                             "71976990-7f2a-47e6-8a93-b02bc52e0e7e");
            ActiveSession activesession3 = new ActiveSession("c9e40e3b45da8196a8db5943d0f9acbd",
                                                             "daa23a74-69a9-4028-9f9e-e0bc764c0296",
                                                             new Date(1561627144466L),
                                                             "615fac92-3be5-4906-a69f-5cb82886c59b",
                                                             "f31b4af4-b0bc-4257-9b14-13341610c80c");
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotNull(activesession3);
            assertNotSame(activesession2, activesession1);
            assertNotSame(activesession3, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession1, activesession2);
            assertEquals(activesession1, activesession1);
            assertFalse(activesession1.equals(null));
            assertNotEquals(activesession3, activesession1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
