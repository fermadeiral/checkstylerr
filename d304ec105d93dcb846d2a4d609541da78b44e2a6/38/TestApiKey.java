// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model ApiKey.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestApiKey {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ApiKey apikey1 = new ApiKey("c9e40e3b45da8196a8db5943d0f9acbd", new Date(1561627142255L), 99,
                                        "c9e40e3b45da8196a8db5943d0f9acbd", "bdfef3ad-4068-4d34-a6f6-10ca191da319", -57,
                                        "e20056c7-14b6-4a23-9f1d-9ed99775f304", "c9e40e3b45da8196a8db5943d0f9acbd",
                                        ApiKeyStatus.getDefault(), new Date(1561627145717L));
            ApiKey apikey2 = apikey1.clone();
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotSame(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ApiKey apikey1 = new ApiKey("c9e40e3b45da8196a8db5943d0f9acbd", new Date(1561627148809L), -64,
                                        "c9e40e3b45da8196a8db5943d0f9acbd", "c54bb6b1-941b-4ecc-8633-1b768ebd42bc", -4,
                                        "2ee986c6-cc3e-4e38-8879-167fb4261bf4", "c9e40e3b45da8196a8db5943d0f9acbd",
                                        ApiKeyStatus.getDefault(), new Date(1561627145573L));
            ApiKey apikey2 = new ApiKey("c9e40e3b45da8196a8db5943d0f9acbd", new Date(1561627148809L), -64,
                                        "c9e40e3b45da8196a8db5943d0f9acbd", "c54bb6b1-941b-4ecc-8633-1b768ebd42bc", -4,
                                        "2ee986c6-cc3e-4e38-8879-167fb4261bf4", "c9e40e3b45da8196a8db5943d0f9acbd",
                                        ApiKeyStatus.getDefault(), new Date(1561627145573L));
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotSame(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey2.hashCode(), apikey1.hashCode());
            int hashCode = apikey1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, apikey1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ApiKey apikey = new ApiKey("c9e40e3b45da8196a8db5943d0f9acbd", new Date(1561627143297L), 35,
                                   "c9e40e3b45da8196a8db5943d0f9acbd", "f9a19602-3ac7-42b5-b6f9-82133e188fd8", -125,
                                   "f1c2edde-331b-4f38-9e56-bf9c63ef69bb", "c9e40e3b45da8196a8db5943d0f9acbd",
                                   ApiKeyStatus.getDefault(), new Date(1561627142314L));
        assertTrue(apikey.isValid());
        ApiKey apikeyInvalid = new ApiKey("2K2Uê¸Ÿ777727'_2.ç©„á»›G72\u0011[\u0010Dã­˜Câ?µ\t77ê­ˆë”¡æ„”2'7í??7M\b\u0014ä¡­+2.à­ 72_V7277]à¾·2\u0010\u00032Z\u00157I",
                                          new Date(1561627143096L), 85,
                                          "2K2Uê¸Ÿ777727'_2.ç©„á»›G72\u0011[\u0010Dã­˜Câ?µ\t77ê­ˆë”¡æ„”2'7í??7M\b\u0014ä¡­+2.à­ 72_V7277]à¾·2\u0010\u00032Z\u00157I",
                                          "a46c89da-dbaf-47c1-becc-3d8af72718bb", 53, null,
                                          "2K2Uê¸Ÿ777727'_2.ç©„á»›G72\u0011[\u0010Dã­˜Câ?µ\t77ê­ˆë”¡æ„”2'7í??7M\b\u0014ä¡­+2.à­ 72_V7277]à¾·2\u0010\u00032Z\u00157I",
                                          ApiKeyStatus.getDefault(), new Date(1561627145475L));
        assertFalse(apikeyInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ApiKey apikey1 = new ApiKey("c9e40e3b45da8196a8db5943d0f9acbd", new Date(1561627142172L), -119,
                                        "c9e40e3b45da8196a8db5943d0f9acbd", "4e3b5e3e-c7c5-493c-b231-97b14cb85a6b", 44,
                                        "96f13d0e-4828-424e-8d63-f16c80246b04", "c9e40e3b45da8196a8db5943d0f9acbd",
                                        ApiKeyStatus.getDefault(), new Date(1561627146808L));
            ApiKey apikey2 = new ApiKey("c9e40e3b45da8196a8db5943d0f9acbd", new Date(1561627142172L), -119,
                                        "c9e40e3b45da8196a8db5943d0f9acbd", "4e3b5e3e-c7c5-493c-b231-97b14cb85a6b", 44,
                                        "96f13d0e-4828-424e-8d63-f16c80246b04", "c9e40e3b45da8196a8db5943d0f9acbd",
                                        ApiKeyStatus.getDefault(), new Date(1561627146808L));
            ApiKey apikey3 = new ApiKey("c9e40e3b45da8196a8db5943d0f9acbd", new Date(1561627145816L), 60,
                                        "c9e40e3b45da8196a8db5943d0f9acbd", "66384e81-b6a0-4333-a43d-e343c75b25f7", -63,
                                        "744f3818-8724-490e-9865-a938683d3fa5", "c9e40e3b45da8196a8db5943d0f9acbd",
                                        ApiKeyStatus.getDefault(), new Date(1561627144425L));
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotNull(apikey3);
            assertNotSame(apikey2, apikey1);
            assertNotSame(apikey3, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey1, apikey2);
            assertEquals(apikey1, apikey1);
            assertFalse(apikey1.equals(null));
            assertNotEquals(apikey3, apikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
