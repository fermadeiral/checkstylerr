// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model UserInvitation.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestUserInvitation {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("3e6f517e-362d-4913-aebb-4e9b52bb9bf6",
                                                                new Date(1553200102228L),
                                                                "42961fae-115f-4754-b64e-d23ed0bb11f7",
                                                                new Date(1553200101123L),
                                                                "dbf8c281-29cb-4154-8d60-ed54c7d958e8", null,
                                                                new Date(1553200102738L),
                                                                "258c46fc-e87e-4daf-b0a4-50e0c1c009fe");
            UserInvitation userinvitation2 = userinvitation1.clone();
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotSame(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("715d37b8-eb0a-4ee6-b759-d9dc6f8e31dc",
                                                                new Date(1553200093710L),
                                                                "76921a9f-36ba-4435-bef2-086e9116407d",
                                                                new Date(1553200095737L),
                                                                "c00b3270-55cd-45eb-9ecd-09db04143750", null,
                                                                new Date(1553200096399L),
                                                                "c99810ad-6af6-41c1-ac49-471158128429");
            UserInvitation userinvitation2 = new UserInvitation("715d37b8-eb0a-4ee6-b759-d9dc6f8e31dc",
                                                                new Date(1553200093710L),
                                                                "76921a9f-36ba-4435-bef2-086e9116407d",
                                                                new Date(1553200095737L),
                                                                "c00b3270-55cd-45eb-9ecd-09db04143750", null,
                                                                new Date(1553200096399L),
                                                                "c99810ad-6af6-41c1-ac49-471158128429");
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotSame(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation2.hashCode(), userinvitation1.hashCode());
            int hashCode = userinvitation1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, userinvitation1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        UserInvitation userinvitation = new UserInvitation("5fb66a27-bbd6-4d8b-ae94-5766d7b8fdc6",
                                                           new Date(1553200100246L),
                                                           "351cb048-581e-4a5b-bce4-55fa5b6e9ec5",
                                                           new Date(1553200095536L),
                                                           "7078cb64-6b2b-4204-8eb3-bf991dc7356d", null,
                                                           new Date(1553200099502L),
                                                           "6724db1f-fa69-48c6-a645-21431d0b1525");
        assertTrue(userinvitation.isValid());
        UserInvitation userinvitationInvalid = new UserInvitation("6b55d9d4-4b32-49ac-a3ac-892737651605",
                                                                  new Date(1553200099831L), null,
                                                                  new Date(1553200100635L),
                                                                  "cd8c6c95-d370-4742-8210-5dc7a438f218", null,
                                                                  new Date(1553200102931L),
                                                                  "6c394aa5-2a8d-470c-b671-d18bcc39cafd");
        assertFalse(userinvitationInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("293fc9d6-7b16-48e5-9138-8c45df02c069",
                                                                new Date(1553200102901L),
                                                                "a5bd649d-7bad-45ab-ae10-a90b1f09766e",
                                                                new Date(1553200096380L),
                                                                "cff0e59f-4699-4c53-b085-7e13f1b64a1d", null,
                                                                new Date(1553200098987L),
                                                                "53bb445d-c0da-4a49-8d08-7a8ef91e6647");
            UserInvitation userinvitation2 = new UserInvitation("293fc9d6-7b16-48e5-9138-8c45df02c069",
                                                                new Date(1553200102901L),
                                                                "a5bd649d-7bad-45ab-ae10-a90b1f09766e",
                                                                new Date(1553200096380L),
                                                                "cff0e59f-4699-4c53-b085-7e13f1b64a1d", null,
                                                                new Date(1553200098987L),
                                                                "53bb445d-c0da-4a49-8d08-7a8ef91e6647");
            UserInvitation userinvitation3 = new UserInvitation("2c83fcf5-4433-4476-9600-bae0aeaa2380",
                                                                new Date(1553200099992L),
                                                                "e97ad17a-b76d-4a43-8d54-54aec82c20e2",
                                                                new Date(1553200096843L),
                                                                "3421dca1-fad0-4a6d-9237-e024d82e5a35", null,
                                                                new Date(1553200094050L),
                                                                "e78b0648-cad8-4717-a4d4-4f57359feecd");
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotNull(userinvitation3);
            assertNotSame(userinvitation2, userinvitation1);
            assertNotSame(userinvitation3, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation1, userinvitation2);
            assertEquals(userinvitation1, userinvitation1);
            assertFalse(userinvitation1.equals(null));
            assertNotEquals(userinvitation3, userinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
