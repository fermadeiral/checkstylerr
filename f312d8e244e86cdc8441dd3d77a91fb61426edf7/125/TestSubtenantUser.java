// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantUser.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantUser {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("d50f20c6-4d35-40fb-b951-311746d68272", null,
                                                             "54bef5be-f399-4577-8370-c814fc115a83",
                                                             new Date(1553200101882L), -115, null,
                                                             "b659c421-315a-4a46-868e-c98100bd6a03", false,
                                                             "15e94260-253d-4155-82df-be81f85e5510",
                                                             "392190d3-2213-400b-980d-a891d915b6f9", -39, null, null,
                                                             true, "d5577982-e111-45d8-90ff-b98df374f570", -105,
                                                             "43ddd578-74ee-474a-b131-c3fbdd03c6d5",
                                                             SubtenantUserStatus.getDefault(), true, null, true,
                                                             new Date(1553200094839L),
                                                             "c1720d6e-360f-4fa4-8437-48513eede1fd");
            SubtenantUser subtenantuser2 = subtenantuser1.clone();
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("19d84a90-87ce-4dd2-aee9-77620a79c820", null,
                                                             "3edc984d-2983-4ad9-9e77-64723bd668cd",
                                                             new Date(1553200097740L), 73, null,
                                                             "26059f6a-fefb-486b-95d3-e144d25d71cd", true,
                                                             "599b5f5d-e372-4cfb-a03d-a6e412eee60c",
                                                             "81b988c8-aa62-4488-bc5a-fd763cb1e03b", 45, null, null,
                                                             false, "ccd56d40-4658-4d60-80fc-4b63b7124c84", -117,
                                                             "507bb574-e60f-48a4-bfee-db0879062d89",
                                                             SubtenantUserStatus.getDefault(), false, null, true,
                                                             new Date(1553200100886L),
                                                             "62a418d3-e8d6-4afa-ac5c-0588a2fe819e");
            SubtenantUser subtenantuser2 = new SubtenantUser("19d84a90-87ce-4dd2-aee9-77620a79c820", null,
                                                             "3edc984d-2983-4ad9-9e77-64723bd668cd",
                                                             new Date(1553200097740L), 73, null,
                                                             "26059f6a-fefb-486b-95d3-e144d25d71cd", true,
                                                             "599b5f5d-e372-4cfb-a03d-a6e412eee60c",
                                                             "81b988c8-aa62-4488-bc5a-fd763cb1e03b", 45, null, null,
                                                             false, "ccd56d40-4658-4d60-80fc-4b63b7124c84", -117,
                                                             "507bb574-e60f-48a4-bfee-db0879062d89",
                                                             SubtenantUserStatus.getDefault(), false, null, true,
                                                             new Date(1553200100886L),
                                                             "62a418d3-e8d6-4afa-ac5c-0588a2fe819e");
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2.hashCode(), subtenantuser1.hashCode());
            int hashCode = subtenantuser1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantuser1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantUser subtenantuser = new SubtenantUser("a52f1391-58e6-44a8-b5ae-c6de1188bf3f", null,
                                                        "c0350bfd-cc69-45cc-b847-6a73246bdecd",
                                                        new Date(1553200096399L), -99, null,
                                                        "69b50db7-63c4-4aec-a1f2-e8dbd3449a02", false,
                                                        "f3529b13-4211-4027-92cb-6504ec445429",
                                                        "c904d7f5-7fb8-422e-bb42-493bfcb965f4", -17, null, null, false,
                                                        "20e72e11-cb43-4db8-938c-e77a75aac839", -46,
                                                        "5eccfb4d-6651-4f3a-886f-652e06be1ab6",
                                                        SubtenantUserStatus.getDefault(), false, null, false,
                                                        new Date(1553200100836L),
                                                        "55e5f86c-56b6-48d5-94a5-1baceffc8100");
        assertTrue(subtenantuser.isValid());
        SubtenantUser subtenantuserInvalid = new SubtenantUser(null, null, "0faee49f-255f-412b-9be7-0daf03aefb41",
                                                               new Date(1553200102418L), -106, null, null, false,
                                                               "b92fcb65-089f-471f-923f-2d5b1b6e9a75",
                                                               "d2aa60c5-284b-4b25-bd03-770fc555ca03", 66, null, null,
                                                               true, "b3c72d1a-db41-4587-a5fd-d53fa8466b0c", 95,
                                                               "7091eab0-a06f-450d-aae8-6bb92db48bf8",
                                                               SubtenantUserStatus.getDefault(), false, null, false,
                                                               new Date(1553200093057L),
                                                               "e80cdd7b-9e5a-4a11-80fd-4ab59deb8593");
        assertFalse(subtenantuserInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("28d8386a-27d5-4690-8b44-de5c2e254f23", null,
                                                             "e5a76b6c-41c0-4af2-8672-4b11085297ff",
                                                             new Date(1553200095818L), -26, null,
                                                             "e8db54f0-9a79-46c7-a069-4abf36779e7d", true,
                                                             "79c39b1c-fa05-4417-8ca2-e094bae20190",
                                                             "557507c9-4fbc-4f8c-a467-188f9d467902", 104, null, null,
                                                             true, "f184cf06-ae34-45cb-8d4d-9db9557310ad", -33,
                                                             "5c446338-9654-40a1-9a49-ed8a3c8a718d",
                                                             SubtenantUserStatus.getDefault(), true, null, false,
                                                             new Date(1553200102861L),
                                                             "ff7a4694-8779-443a-9ae9-fecbce2a62c9");
            SubtenantUser subtenantuser2 = new SubtenantUser("28d8386a-27d5-4690-8b44-de5c2e254f23", null,
                                                             "e5a76b6c-41c0-4af2-8672-4b11085297ff",
                                                             new Date(1553200095818L), -26, null,
                                                             "e8db54f0-9a79-46c7-a069-4abf36779e7d", true,
                                                             "79c39b1c-fa05-4417-8ca2-e094bae20190",
                                                             "557507c9-4fbc-4f8c-a467-188f9d467902", 104, null, null,
                                                             true, "f184cf06-ae34-45cb-8d4d-9db9557310ad", -33,
                                                             "5c446338-9654-40a1-9a49-ed8a3c8a718d",
                                                             SubtenantUserStatus.getDefault(), true, null, false,
                                                             new Date(1553200102861L),
                                                             "ff7a4694-8779-443a-9ae9-fecbce2a62c9");
            SubtenantUser subtenantuser3 = new SubtenantUser("9dbbce92-a58c-4fea-bc49-a8a5e67ecb62", null,
                                                             "2c59cefb-dafc-4dae-ad66-c4a117f247cd",
                                                             new Date(1553200098711L), -85, null,
                                                             "335e8f9a-92fa-4354-bf92-e08a50475ba0", true,
                                                             "ca3d736d-555e-4529-b0b2-ad80039358a0",
                                                             "aeed75e8-1cbc-480e-a385-f683c78e9b9b", 86, null, null,
                                                             true, "79b4f042-434a-4db9-b7d2-678e50ac6824", 88,
                                                             "6bf74552-1321-4e69-b17f-bc9aa5bed6d1",
                                                             SubtenantUserStatus.getDefault(), true, null, false,
                                                             new Date(1553200096304L),
                                                             "72993285-06e2-4a52-a1b0-d71e741030fa");
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotNull(subtenantuser3);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertNotSame(subtenantuser3, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser1, subtenantuser2);
            assertEquals(subtenantuser1, subtenantuser1);
            assertFalse(subtenantuser1.equals(null));
            assertNotEquals(subtenantuser3, subtenantuser1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
