// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model LoginProfile.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestLoginProfile {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            LoginProfile loginprofile1 = new LoginProfile("30cb6937-7031-4174-8827-a181843501db",
                                                          "604d4c6b-dba5-4e60-8d1b-e821dbc54f12");
            LoginProfile loginprofile2 = loginprofile1.clone();
            assertNotNull(loginprofile1);
            assertNotNull(loginprofile2);
            assertNotSame(loginprofile2, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            LoginProfile loginprofile1 = new LoginProfile("87bb8225-49dc-4986-8c0a-53b012afeae9",
                                                          "6fe01ca2-7342-4d35-ba46-1cc24129356c");
            LoginProfile loginprofile2 = new LoginProfile("87bb8225-49dc-4986-8c0a-53b012afeae9",
                                                          "6fe01ca2-7342-4d35-ba46-1cc24129356c");
            assertNotNull(loginprofile1);
            assertNotNull(loginprofile2);
            assertNotSame(loginprofile2, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
            assertEquals(loginprofile2.hashCode(), loginprofile1.hashCode());
            int hashCode = loginprofile1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, loginprofile1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        LoginProfile loginprofile = new LoginProfile("32b1c0b0-d366-4378-88c2-b2ff497575c9",
                                                     "f02fd27e-f07c-4a12-b1a6-29aa65ba0f51");
        assertTrue(loginprofile.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            LoginProfile loginprofile1 = new LoginProfile("730434d7-46dd-4a06-8ba2-431f83b66e49",
                                                          "5d1bf1d4-586b-4d56-956b-68d53f7f777f");
            LoginProfile loginprofile2 = new LoginProfile("730434d7-46dd-4a06-8ba2-431f83b66e49",
                                                          "5d1bf1d4-586b-4d56-956b-68d53f7f777f");
            LoginProfile loginprofile3 = new LoginProfile("99fa2f9b-6e71-4bfe-a617-29a9d8f348db",
                                                          "182e5b29-ae52-4d0f-b3cf-0d2c57be8b93");
            assertNotNull(loginprofile1);
            assertNotNull(loginprofile2);
            assertNotNull(loginprofile3);
            assertNotSame(loginprofile2, loginprofile1);
            assertNotSame(loginprofile3, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
            assertEquals(loginprofile1, loginprofile2);
            assertEquals(loginprofile1, loginprofile1);
            assertFalse(loginprofile1.equals(null));
            assertNotEquals(loginprofile3, loginprofile1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
