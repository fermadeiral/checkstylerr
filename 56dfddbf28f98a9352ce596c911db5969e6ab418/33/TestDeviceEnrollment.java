// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEnrollment.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEnrollment {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEnrollment deviceenrollment1 = new DeviceEnrollment("5c2f1491-c0ba-481a-be93-eed96b134b9e",
                                                                      new Date(1553467843181L),
                                                                      new Date(1553467844819L),
                                                                      "euX7AiUKFzwB1rle0x83RV9b5Nwlu0Q6",
                                                                      "A-LNPR8PcmW3028YWwxDmu9KA8X46vKCA2PB8:bHCc0054DWj4V8K8dvfQYf9b0Zm2ek4ZH0gUBtw1MvpMZ2w:8rNPaAgZtR5",
                                                                      new Date(1553467845469L),
                                                                      "9k5BBIuXN8w78hqFecBwD4Yc9s0kD56U");
            DeviceEnrollment deviceenrollment2 = deviceenrollment1.clone();
            assertNotNull(deviceenrollment1);
            assertNotNull(deviceenrollment2);
            assertNotSame(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEnrollment deviceenrollment1 = new DeviceEnrollment("f11e30cd-ee4c-470e-af72-1d2fcdb2751f",
                                                                      new Date(1553467847009L),
                                                                      new Date(1553467840677L),
                                                                      "UBx9sS12HQ5n7DKahy50VAEAOr9ihHc8",
                                                                      "A-g9br3tcc7BpCbi26CrNrG8qZ33E2rKka1e59JfL90ZUxalqEgYkPe0zg7lVd0zUM:xe9T46BOsRVP8AcFJo64ktKL8V8jgL",
                                                                      new Date(1553467846000L),
                                                                      "CPB0o740IDi6sX7VpXCz0DVb6zhwTdvi");
            DeviceEnrollment deviceenrollment2 = new DeviceEnrollment("f11e30cd-ee4c-470e-af72-1d2fcdb2751f",
                                                                      new Date(1553467847009L),
                                                                      new Date(1553467840677L),
                                                                      "UBx9sS12HQ5n7DKahy50VAEAOr9ihHc8",
                                                                      "A-g9br3tcc7BpCbi26CrNrG8qZ33E2rKka1e59JfL90ZUxalqEgYkPe0zg7lVd0zUM:xe9T46BOsRVP8AcFJo64ktKL8V8jgL",
                                                                      new Date(1553467846000L),
                                                                      "CPB0o740IDi6sX7VpXCz0DVb6zhwTdvi");
            assertNotNull(deviceenrollment1);
            assertNotNull(deviceenrollment2);
            assertNotSame(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2.hashCode(), deviceenrollment1.hashCode());
            int hashCode = deviceenrollment1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceenrollment1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEnrollment deviceenrollment = new DeviceEnrollment("eaac27c1-a122-4dd4-86bc-422a3b9bebba",
                                                                 new Date(1553467843431L), new Date(1553467841339L),
                                                                 "0Q5583OrwFLuRVuO4Ru0963xd50B9xQM",
                                                                 "A-O6G:n668nB7I5hbCPETOi73ilNcfg0s6s57B2Xa0eiwjRYIEP7bayx978v9t::4o4XYiW4OWjj3aP1WVVGBS1H0ED6MLa49",
                                                                 new Date(1553467844241L),
                                                                 "gPGRXZH4v95V92i778I5c3y6v4s1iSn2");
        assertTrue(deviceenrollment.isValid());
        DeviceEnrollment deviceenrollmentInvalid = new DeviceEnrollment("9bd53537-e0f5-4cdc-92a4-4474265e87cb",
                                                                        new Date(1553467838468L),
                                                                        new Date(1553467846947L),
                                                                        "9ã°¸\tbvu\u0005kDêš?kM]å¸‚bdwã?¾RMR?Rkbktv:qiukDRvi>áŸ»2q93[vkH\u0003ifAq3G2kbUR]1RdR",
                                                                        null, new Date(1553467846546L),
                                                                        "hrU_\\\\EVHe`@\\\\>Ià¼¤m]há¿›VU8é²©å‡©SXrhc8r^ä«?^8[Ij]>QIBO88mSKrëš?FKQL8iocCLé«–");
        assertFalse(deviceenrollmentInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEnrollment deviceenrollment1 = new DeviceEnrollment("1fbdcb7d-a79c-4ddf-bce5-ddc05c344a98",
                                                                      new Date(1553467847221L),
                                                                      new Date(1553467846276L),
                                                                      "my3hrz2OdV1VS2ex05jh6Y5AjGeYGlwt",
                                                                      "A-9zgLdP8Se4ezUfcIeB537j6WK2LV:smL3le4221IqLHAid2nSzK709nH8R9IVxc5aKNS:W6HJA1T:AQM0r4e5YAB3T027:l",
                                                                      new Date(1553467841101L),
                                                                      "iN0LL8y9t8sd1d6Pm3OFdnmdy2uutO82");
            DeviceEnrollment deviceenrollment2 = new DeviceEnrollment("1fbdcb7d-a79c-4ddf-bce5-ddc05c344a98",
                                                                      new Date(1553467847221L),
                                                                      new Date(1553467846276L),
                                                                      "my3hrz2OdV1VS2ex05jh6Y5AjGeYGlwt",
                                                                      "A-9zgLdP8Se4ezUfcIeB537j6WK2LV:smL3le4221IqLHAid2nSzK709nH8R9IVxc5aKNS:W6HJA1T:AQM0r4e5YAB3T027:l",
                                                                      new Date(1553467841101L),
                                                                      "iN0LL8y9t8sd1d6Pm3OFdnmdy2uutO82");
            DeviceEnrollment deviceenrollment3 = new DeviceEnrollment("9933b384-110d-4d18-a40c-28b27a575a20",
                                                                      new Date(1553467843545L),
                                                                      new Date(1553467839731L),
                                                                      "w2wHkIDT3P5HJyW86A12ZF6RA0X76fhz",
                                                                      "A-UYo5h2VKAjSXuAB7:uXI1KiZKm8kqzHlJo9Xz6PtyLgKxGuJGztdd17Q4dQn3Jd:6NaXMJm7jJGmuVXS:l1JI7hyOPL78Vc",
                                                                      new Date(1553467841631L),
                                                                      "l9jrRdh594rtnW4Mngq7Nr0E181uAx7y");
            assertNotNull(deviceenrollment1);
            assertNotNull(deviceenrollment2);
            assertNotNull(deviceenrollment3);
            assertNotSame(deviceenrollment2, deviceenrollment1);
            assertNotSame(deviceenrollment3, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment1, deviceenrollment2);
            assertEquals(deviceenrollment1, deviceenrollment1);
            assertFalse(deviceenrollment1.equals(null));
            assertNotEquals(deviceenrollment3, deviceenrollment1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
