// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model ParentAccount.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestParentAccount {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("bc695c43-9062-4c2a-af9e-d29003e024b0",
                                                             "b31790ca-fdc5-4985-8fa4-8e7225803cb4",
                                                             "d0058e40-63c1-4a54-b316-164907815e65");
            ParentAccount parentaccount2 = parentaccount1.clone();
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotSame(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("a27c2cb4-ff5e-4f65-a755-14647f0bf822",
                                                             "b238e66f-bf6b-4982-a1d5-97d7e3de0756",
                                                             "4228b12c-b537-4d6e-8dd8-5e1650578d6d");
            ParentAccount parentaccount2 = new ParentAccount("a27c2cb4-ff5e-4f65-a755-14647f0bf822",
                                                             "b238e66f-bf6b-4982-a1d5-97d7e3de0756",
                                                             "4228b12c-b537-4d6e-8dd8-5e1650578d6d");
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotSame(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount2.hashCode(), parentaccount1.hashCode());
            int hashCode = parentaccount1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, parentaccount1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ParentAccount parentaccount = new ParentAccount("428c1cfe-56bf-4043-8370-da5e2d527247",
                                                        "74f36cfd-9b2d-46dc-9995-1b506b0b23d3",
                                                        "8f52d33d-9f0a-4d28-aead-0811068d1064");
        assertTrue(parentaccount.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("7d0964d0-6bde-4461-8043-e6e2fcd2a44f",
                                                             "15b8f7cd-c5f6-444a-9acb-bf087ce06fcf",
                                                             "8f6a3d4d-4b8f-4b78-bd47-a649022f0738");
            ParentAccount parentaccount2 = new ParentAccount("7d0964d0-6bde-4461-8043-e6e2fcd2a44f",
                                                             "15b8f7cd-c5f6-444a-9acb-bf087ce06fcf",
                                                             "8f6a3d4d-4b8f-4b78-bd47-a649022f0738");
            ParentAccount parentaccount3 = new ParentAccount("98e9f1f5-b67b-439c-924f-e811e4765dd1",
                                                             "5a7f7665-0167-4038-8021-b67f85dae0bf",
                                                             "f8fc86d0-1e6e-4a2c-b0cc-3ad365aa7849");
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotNull(parentaccount3);
            assertNotSame(parentaccount2, parentaccount1);
            assertNotSame(parentaccount3, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount1, parentaccount2);
            assertEquals(parentaccount1, parentaccount1);
            assertFalse(parentaccount1.equals(null));
            assertNotEquals(parentaccount3, parentaccount1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
