// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantUser.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantUser {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("e9975e9c-949a-486b-b092-3573245ff9af", null,
                                                             "db3b020b-54e8-46c1-9c70-9636e6fe53be",
                                                             new Date(1553467841356L), 51, null,
                                                             "42beb3cb-f90f-41c0-a939-4d69b857056e", false,
                                                             "352e6bfe-b9f9-4b95-97a3-795548d59b4d",
                                                             "e18ac7d3-e3f0-412b-a4af-da385cfce3cf", 15, null, null,
                                                             false, "71978d94-a944-41a3-a1d3-df722f52d168", -47,
                                                             "dc46892e-9c84-4a24-bf11-2c35b723b8e9",
                                                             SubtenantUserStatus.getDefault(), true, null, false,
                                                             new Date(1553467840212L),
                                                             "0e9505af-ef1a-4d78-ba79-db0c59b22a06");
            SubtenantUser subtenantuser2 = subtenantuser1.clone();
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("8608d35d-7b6b-493f-8656-1ac0401556c2", null,
                                                             "0ed0d96f-d6d0-48b4-9575-0e66962c9e30",
                                                             new Date(1553467846121L), 85, null,
                                                             "0a452190-bd24-460d-a55d-26508f4371a2", true,
                                                             "eccee757-7f59-4464-8e16-1e56d527dc51",
                                                             "8b27ef23-89d3-4ce6-98f3-00b70c65c5ea", 33, null, null,
                                                             true, "8e00216f-d105-466b-a575-0c47cab957f1", 112,
                                                             "0a94ab94-7142-415e-b201-f206e6e82268",
                                                             SubtenantUserStatus.getDefault(), false, null, false,
                                                             new Date(1553467839892L),
                                                             "dbb33db0-db4f-4da6-84f5-59d623a1a1e1");
            SubtenantUser subtenantuser2 = new SubtenantUser("8608d35d-7b6b-493f-8656-1ac0401556c2", null,
                                                             "0ed0d96f-d6d0-48b4-9575-0e66962c9e30",
                                                             new Date(1553467846121L), 85, null,
                                                             "0a452190-bd24-460d-a55d-26508f4371a2", true,
                                                             "eccee757-7f59-4464-8e16-1e56d527dc51",
                                                             "8b27ef23-89d3-4ce6-98f3-00b70c65c5ea", 33, null, null,
                                                             true, "8e00216f-d105-466b-a575-0c47cab957f1", 112,
                                                             "0a94ab94-7142-415e-b201-f206e6e82268",
                                                             SubtenantUserStatus.getDefault(), false, null, false,
                                                             new Date(1553467839892L),
                                                             "dbb33db0-db4f-4da6-84f5-59d623a1a1e1");
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2.hashCode(), subtenantuser1.hashCode());
            int hashCode = subtenantuser1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantuser1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantUser subtenantuser = new SubtenantUser("417ecce7-4493-4272-a15e-35a1361faef4", null,
                                                        "7a4d320b-a638-4c53-9d92-6420b474b9e1",
                                                        new Date(1553467846789L), -74, null,
                                                        "6d9e191a-9143-44e7-94ca-915656be1f7b", true,
                                                        "580496b8-acdd-4de9-8799-88864d825e46",
                                                        "234d8d47-2282-4db4-b670-45a1cbf1554f", -63, null, null, false,
                                                        "e9caa260-d146-4e2f-9ddc-d33fa23b8f4c", -123,
                                                        "2a34caae-4f57-4301-8a1f-7a3d82492149",
                                                        SubtenantUserStatus.getDefault(), false, null, false,
                                                        new Date(1553467840449L),
                                                        "4a5e95aa-5ed8-48dc-bc11-fbe347c1ce5f");
        assertTrue(subtenantuser.isValid());
        SubtenantUser subtenantuserInvalid = new SubtenantUser(null, null, "7cef4c4d-adbe-4f50-a287-0a6846e2f610",
                                                               new Date(1553467846977L), 58, null, null, false,
                                                               "601546b2-907a-473d-bfe2-da5e3a52ff8c",
                                                               "2514deb7-e4a6-470e-be7e-7c3779e50a1b", 121, null, null,
                                                               false, "fb6dce7b-50ca-465d-9ebf-0e5f84f1a76c", 121,
                                                               "26d5ce65-f583-43da-8c62-41932d50f6f6",
                                                               SubtenantUserStatus.getDefault(), false, null, false,
                                                               new Date(1553467846048L),
                                                               "3ac1cbcd-c173-4a05-8bde-e61e920442ef");
        assertFalse(subtenantuserInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("abdbc5b3-d817-4b96-8c20-1852731b8e6a", null,
                                                             "f6659273-4fd1-4bd1-a847-fd2ae2021fbf",
                                                             new Date(1553467838266L), -115, null,
                                                             "5fcbf89a-c914-4468-b3f4-f7585374445e", false,
                                                             "89bd72c2-3b94-4696-8b2f-20a184f4270d",
                                                             "50f54f05-d61c-4f95-ac86-0dd22f7b8899", 54, null, null,
                                                             false, "4d17f65a-6e19-4f28-a142-fc4715623bed", -69,
                                                             "3f9b7d4f-c69d-4f6e-b61c-b309e98f508d",
                                                             SubtenantUserStatus.getDefault(), false, null, true,
                                                             new Date(1553467844045L),
                                                             "4355d83e-f491-4a91-9fd6-8b73673d40b3");
            SubtenantUser subtenantuser2 = new SubtenantUser("abdbc5b3-d817-4b96-8c20-1852731b8e6a", null,
                                                             "f6659273-4fd1-4bd1-a847-fd2ae2021fbf",
                                                             new Date(1553467838266L), -115, null,
                                                             "5fcbf89a-c914-4468-b3f4-f7585374445e", false,
                                                             "89bd72c2-3b94-4696-8b2f-20a184f4270d",
                                                             "50f54f05-d61c-4f95-ac86-0dd22f7b8899", 54, null, null,
                                                             false, "4d17f65a-6e19-4f28-a142-fc4715623bed", -69,
                                                             "3f9b7d4f-c69d-4f6e-b61c-b309e98f508d",
                                                             SubtenantUserStatus.getDefault(), false, null, true,
                                                             new Date(1553467844045L),
                                                             "4355d83e-f491-4a91-9fd6-8b73673d40b3");
            SubtenantUser subtenantuser3 = new SubtenantUser("1b59b4bd-e3e4-4ada-8688-9a3603f4224f", null,
                                                             "4b14e103-3406-4717-8540-2a7e97d60542",
                                                             new Date(1553467843885L), -10, null,
                                                             "c569f627-dbed-4846-a9c6-06738257ff7e", false,
                                                             "fdd868df-7b57-4cf7-a369-093197baaa28",
                                                             "76e0dccc-3ed7-40b4-9df4-56a129b657aa", 90, null, null,
                                                             false, "51844fe1-f4e8-47eb-b79a-e4cbefe44ca0", 53,
                                                             "2e871649-f6f0-4ada-8cb5-99f66b9a254c",
                                                             SubtenantUserStatus.getDefault(), false, null, true,
                                                             new Date(1553467842939L),
                                                             "fc995c0d-5104-4af7-a9c3-5cf23b9b4a7f");
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotNull(subtenantuser3);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertNotSame(subtenantuser3, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser1, subtenantuser2);
            assertEquals(subtenantuser1, subtenantuser1);
            assertFalse(subtenantuser1.equals(null));
            assertNotEquals(subtenantuser3, subtenantuser1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
