// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEvents.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEvents {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1553467842480L), null,
                                                          new Date(1553467847747L),
                                                          "cb31260e-097d-4700-8b5b-a333647aae8d",
                                                          "2a9ada76-1307-46e2-b5db-8bea13e659cd",
                                                          "94f0a325-0aca-4f72-9b6c-538d85dd1362",
                                                          "72b11a88-b6f0-4689-9678-1935457a3cf3",
                                                          "96746ad8-b228-449f-aa40-1cc262f94a49",
                                                          "c070c67f-78a3-4227-96c8-bddbe3a24a6a", Boolean.TRUE);
            DeviceEvents deviceevents2 = deviceevents1.clone();
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1553467842270L), null,
                                                          new Date(1553467842291L),
                                                          "f25f2982-9946-40ad-ac7d-46ac786d25c9",
                                                          "7e955f14-3a57-4dad-aae6-6400cf6ee1c4",
                                                          "06630aa4-6843-4f95-9cf1-ea18285c97dc",
                                                          "41a0738c-5937-448f-8d26-ca7a9f8c8a1e",
                                                          "483f88d6-8d24-43d1-af88-0c33f93b05fe",
                                                          "7e98bec2-37ab-437f-81ba-2fec30a05de4", Boolean.FALSE);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1553467842270L), null,
                                                          new Date(1553467842291L),
                                                          "f25f2982-9946-40ad-ac7d-46ac786d25c9",
                                                          "7e955f14-3a57-4dad-aae6-6400cf6ee1c4",
                                                          "06630aa4-6843-4f95-9cf1-ea18285c97dc",
                                                          "41a0738c-5937-448f-8d26-ca7a9f8c8a1e",
                                                          "483f88d6-8d24-43d1-af88-0c33f93b05fe",
                                                          "7e98bec2-37ab-437f-81ba-2fec30a05de4", Boolean.FALSE);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2.hashCode(), deviceevents1.hashCode());
            int hashCode = deviceevents1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceevents1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEvents deviceevents = new DeviceEvents(null, new Date(1553467846326L), null, new Date(1553467847864L),
                                                     "e78fdce8-12b6-4f5f-9dcb-be4d8f520d84",
                                                     "266e87f3-b9f8-4fbe-85ef-aef8250ae611",
                                                     "4afd5235-66f8-4cef-a5a4-b1596a28fdb4",
                                                     "ce973d41-c481-4124-bff1-67a7bfba132a",
                                                     "e21645d5-0a5f-45d0-9258-c4ff51dd12c3",
                                                     "4cec66cd-f298-431f-b60c-17d2f31146a5", Boolean.TRUE);
        assertTrue(deviceevents.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1553467843569L), null,
                                                          new Date(1553467846838L),
                                                          "af268ac3-a3e3-4c49-a6d3-a82479054a44",
                                                          "04d82696-4fb8-4dee-8b4c-50147654b54d",
                                                          "04a676ac-c5e4-4b59-ae1e-a9e8890c30c8",
                                                          "cb11117f-a0e9-4379-a17b-c9eb7760b498",
                                                          "27b9e48e-e2c3-43ed-bf15-75b48482b56f",
                                                          "25001065-8f1a-4b3b-a695-0234347f82fc", Boolean.TRUE);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1553467843569L), null,
                                                          new Date(1553467846838L),
                                                          "af268ac3-a3e3-4c49-a6d3-a82479054a44",
                                                          "04d82696-4fb8-4dee-8b4c-50147654b54d",
                                                          "04a676ac-c5e4-4b59-ae1e-a9e8890c30c8",
                                                          "cb11117f-a0e9-4379-a17b-c9eb7760b498",
                                                          "27b9e48e-e2c3-43ed-bf15-75b48482b56f",
                                                          "25001065-8f1a-4b3b-a695-0234347f82fc", Boolean.TRUE);
            DeviceEvents deviceevents3 = new DeviceEvents(null, new Date(1553467847939L), null,
                                                          new Date(1553467844893L),
                                                          "18fd5635-0703-4830-b7d5-ae9c02d587b6",
                                                          "f4ff5c75-0052-4fbc-a7fc-43154eb50b7d",
                                                          "04533a55-74e3-4013-a33f-b7a6d97e1801",
                                                          "e10e7d66-b1ac-4233-858c-a860b91b5a56",
                                                          "552d7fce-9c81-4cf4-9c22-60cd9fd3fbad",
                                                          "b8d6e5ff-5c32-427b-8892-c30e6de9c6e9", Boolean.TRUE);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotNull(deviceevents3);
            assertNotSame(deviceevents2, deviceevents1);
            assertNotSame(deviceevents3, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents1, deviceevents2);
            assertEquals(deviceevents1, deviceevents1);
            assertFalse(deviceevents1.equals(null));
            assertNotEquals(deviceevents3, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
