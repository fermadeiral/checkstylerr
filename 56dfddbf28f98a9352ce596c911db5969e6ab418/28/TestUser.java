// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model User.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestUser {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            User user1 = new User("d4f4144b-32a4-4103-8c78-589577f31e54", null, "175b5f22-e5dc-42dd-8bf0-e002fe283a26",
                                  new Date(1553467843598L), 60, null, "6d52f7c4-2486-455d-9bf9-f57380598ee3", false,
                                  "d65dacea-18d6-4762-b49a-815d6eda0faa", "68e92c23-15c7-4a07-9434-cea85d7f17da", 49,
                                  null, null, true, "0c639476-a28e-4248-af60-870c64813d0d", -80,
                                  "2e9e78cb-5b9e-457f-8768-19368c8f4306", UserStatus.getDefault(), true, null, true,
                                  new Date(1553467843820L), "ca14f979-65be-400f-a951-44537ece1148");
            User user2 = user1.clone();
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotSame(user2, user1);
            assertEquals(user2, user1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            User user1 = new User("b341f8f7-04a6-4e7f-a447-38cb0132cc8c", null, "7bb016ba-66af-4040-80e9-4808c908b47d",
                                  new Date(1553467843104L), -72, null, "ac2a8f9f-61d4-494c-880d-3aeb7d1f0a38", true,
                                  "6123f549-afbc-46a5-a61e-87e04ffb4f67", "98f53725-8cec-4cc5-9c08-679afcfa489c", 63,
                                  null, null, false, "f3da6fd8-81d7-4356-95dc-006890cc0377", 101,
                                  "7b9f53fa-778b-40c5-932d-ce4fd7ccc191", UserStatus.getDefault(), true, null, false,
                                  new Date(1553467839980L), "644d07af-00bc-4437-bae7-ca3100a5a84d");
            User user2 = new User("b341f8f7-04a6-4e7f-a447-38cb0132cc8c", null, "7bb016ba-66af-4040-80e9-4808c908b47d",
                                  new Date(1553467843104L), -72, null, "ac2a8f9f-61d4-494c-880d-3aeb7d1f0a38", true,
                                  "6123f549-afbc-46a5-a61e-87e04ffb4f67", "98f53725-8cec-4cc5-9c08-679afcfa489c", 63,
                                  null, null, false, "f3da6fd8-81d7-4356-95dc-006890cc0377", 101,
                                  "7b9f53fa-778b-40c5-932d-ce4fd7ccc191", UserStatus.getDefault(), true, null, false,
                                  new Date(1553467839980L), "644d07af-00bc-4437-bae7-ca3100a5a84d");
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotSame(user2, user1);
            assertEquals(user2, user1);
            assertEquals(user2.hashCode(), user1.hashCode());
            int hashCode = user1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, user1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        User user = new User("1bf2105a-5364-47ba-8c6f-a71c945b0ac3", null, "5d7521fc-65a3-4f79-9464-161cbdbe9a15",
                             new Date(1553467839177L), -115, null, "efff6c88-e5f1-4bda-a636-10d3f8a53e35", false,
                             "c07c189d-2585-459b-868f-fa4e16913c78", "76f38d22-29a0-45a9-99ba-927bce7b5cb4", 65, null,
                             null, false, "443ab026-c816-4f17-b7bd-c090c2495ecf", 122,
                             "3f426387-ac1e-4c8c-8bac-2b26817fec3a", UserStatus.getDefault(), false, null, true,
                             new Date(1553467844602L), "43a49c7d-ff6f-4a96-84db-9f74f0486b20");
        assertTrue(user.isValid());
        User userInvalid = new User("c81b09d2-e7d0-443e-b493-7ecb8ac42555", null,
                                    "75f0d76a-3d3a-48a1-90f8-b8ad72fb5728", new Date(1553467842625L), 6, null, null,
                                    true, "de4ac4f6-ba81-44fa-99fb-9fd16c6d6fec",
                                    "e88ada26-d534-403d-8be3-eb0d1b8c7b83", 9, null, null, true,
                                    "be75e916-12ea-4f33-89a8-e62086647595", -46, "5102f30a-baad-4c0a-b2f2-4036fe00f822",
                                    UserStatus.getDefault(), false, null, false, new Date(1553467840582L),
                                    "76ab433b-20a4-4794-a5e9-775f7be7ae02");
        assertFalse(userInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            User user1 = new User("b6fcfd02-e34b-4ecd-94b7-de19223c96cb", null, "82e227ea-7df6-4151-94eb-72f1bca809b3",
                                  new Date(1553467838638L), 86, null, "85c652db-d0ee-4efd-a4a1-53bd22361a53", false,
                                  "4ec79215-287a-4f49-898a-74b7d8790f69", "d9d0e78c-2c95-4dc8-8d75-24367d9f9a09", -26,
                                  null, null, false, "7b3123ee-4f2d-4a85-aa8d-50a472289d96", 96,
                                  "9654b621-e118-4334-a5cb-8cea71fb4734", UserStatus.getDefault(), false, null, true,
                                  new Date(1553467844517L), "9318128b-b860-46d8-964f-74205b56a786");
            User user2 = new User("b6fcfd02-e34b-4ecd-94b7-de19223c96cb", null, "82e227ea-7df6-4151-94eb-72f1bca809b3",
                                  new Date(1553467838638L), 86, null, "85c652db-d0ee-4efd-a4a1-53bd22361a53", false,
                                  "4ec79215-287a-4f49-898a-74b7d8790f69", "d9d0e78c-2c95-4dc8-8d75-24367d9f9a09", -26,
                                  null, null, false, "7b3123ee-4f2d-4a85-aa8d-50a472289d96", 96,
                                  "9654b621-e118-4334-a5cb-8cea71fb4734", UserStatus.getDefault(), false, null, true,
                                  new Date(1553467844517L), "9318128b-b860-46d8-964f-74205b56a786");
            User user3 = new User("f34ca5a4-c0b3-4b6c-ba32-b933a6a060c6", null, "6f3c97e4-2b52-4032-a35d-dc84796d4ab3",
                                  new Date(1553467840445L), -38, null, "217046d0-74c2-404f-90f6-41017f0ecdc3", false,
                                  "d4996181-7bc5-4aeb-8a85-a088a01f702e", "a26ae3d8-b84c-4b5e-8e67-c6233bfd932c", 64,
                                  null, null, false, "687e1623-07fd-4b9f-a717-425d4190a3df", -106,
                                  "fa7a02cb-7a35-457b-a017-141b1843438b", UserStatus.getDefault(), false, null, true,
                                  new Date(1553467846602L), "55748d78-6bd5-466e-9e69-a7beafccedee");
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotNull(user3);
            assertNotSame(user2, user1);
            assertNotSame(user3, user1);
            assertEquals(user2, user1);
            assertEquals(user2, user1);
            assertEquals(user1, user2);
            assertEquals(user1, user1);
            assertFalse(user1.equals(null));
            assertNotEquals(user3, user1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
