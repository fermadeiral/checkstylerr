// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model UserInvitation.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestUserInvitation {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("5bb194f3-a82c-4df6-9b98-9fbff7458ef5",
                                                                new Date(1553467844371L),
                                                                "47db5835-28b4-485e-adec-4fd1d6aa4d51",
                                                                new Date(1553467841410L),
                                                                "348b1626-1ec6-41ec-9e55-54dafe13fd61", null,
                                                                new Date(1553467845049L),
                                                                "9ce7d39e-9e11-4e43-b915-a85419e874da");
            UserInvitation userinvitation2 = userinvitation1.clone();
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotSame(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("8e8ab1b8-c0cb-4511-a321-c1a8d299a572",
                                                                new Date(1553467838808L),
                                                                "6cb81cb6-b04e-48a0-9df1-11e71868a8de",
                                                                new Date(1553467840237L),
                                                                "8dc239c3-8538-47a3-b10f-6d4f14fc5082", null,
                                                                new Date(1553467844891L),
                                                                "67d4bd2a-ead9-4eac-a334-6489de6f3da4");
            UserInvitation userinvitation2 = new UserInvitation("8e8ab1b8-c0cb-4511-a321-c1a8d299a572",
                                                                new Date(1553467838808L),
                                                                "6cb81cb6-b04e-48a0-9df1-11e71868a8de",
                                                                new Date(1553467840237L),
                                                                "8dc239c3-8538-47a3-b10f-6d4f14fc5082", null,
                                                                new Date(1553467844891L),
                                                                "67d4bd2a-ead9-4eac-a334-6489de6f3da4");
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotSame(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation2.hashCode(), userinvitation1.hashCode());
            int hashCode = userinvitation1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, userinvitation1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        UserInvitation userinvitation = new UserInvitation("5829e72d-e97d-4c63-8635-8cca1405a9ec",
                                                           new Date(1553467843471L),
                                                           "c9d62ea5-0b78-4e58-9c07-673304f6b909",
                                                           new Date(1553467844431L),
                                                           "7e4adc2c-df36-414a-ab33-4392d052a9c0", null,
                                                           new Date(1553467841195L),
                                                           "26ad6235-6b2b-4ef6-a54a-3849b41fc7a6");
        assertTrue(userinvitation.isValid());
        UserInvitation userinvitationInvalid = new UserInvitation("f4470849-7e50-44ca-9bfa-0c7f6983456c",
                                                                  new Date(1553467842165L), null,
                                                                  new Date(1553467843712L),
                                                                  "0a0805ff-1d88-4aff-aab9-c75107fe9afc", null,
                                                                  new Date(1553467846734L),
                                                                  "3c0e8c1a-09f8-495c-ae6a-a9526d25c7bf");
        assertFalse(userinvitationInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("610fc80d-311a-494c-94de-16a65cfbcd3a",
                                                                new Date(1553467844817L),
                                                                "67e0eece-c364-49cf-90c1-b5abb1ec6479",
                                                                new Date(1553467843996L),
                                                                "fbc0a480-fd94-4133-86f8-df9883fc9dc2", null,
                                                                new Date(1553467844512L),
                                                                "7dcc1075-8dac-4dbb-8f74-7b6562714b29");
            UserInvitation userinvitation2 = new UserInvitation("610fc80d-311a-494c-94de-16a65cfbcd3a",
                                                                new Date(1553467844817L),
                                                                "67e0eece-c364-49cf-90c1-b5abb1ec6479",
                                                                new Date(1553467843996L),
                                                                "fbc0a480-fd94-4133-86f8-df9883fc9dc2", null,
                                                                new Date(1553467844512L),
                                                                "7dcc1075-8dac-4dbb-8f74-7b6562714b29");
            UserInvitation userinvitation3 = new UserInvitation("f33a6fc1-c171-4b5d-89dd-88778d7f7b0d",
                                                                new Date(1553467841661L),
                                                                "d74a1f42-78ff-48dc-8a24-b61d7e9c4a74",
                                                                new Date(1553467842782L),
                                                                "b05590e5-48f1-4ec2-86c2-53c3560c75da", null,
                                                                new Date(1553467847941L),
                                                                "7c253daf-f801-4ea5-93a3-e919ffaac003");
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotNull(userinvitation3);
            assertNotSame(userinvitation2, userinvitation1);
            assertNotSame(userinvitation3, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation1, userinvitation2);
            assertEquals(userinvitation1, userinvitation1);
            assertFalse(userinvitation1.equals(null));
            assertNotEquals(userinvitation3, userinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
