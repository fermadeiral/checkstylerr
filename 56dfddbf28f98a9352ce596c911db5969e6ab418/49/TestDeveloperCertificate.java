// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.security.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeveloperCertificate.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeveloperCertificate {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("fba386d9-e0e1-4e2f-b60b-10cd668715af",
                                                                                  "0edfb0da-8df8-41a3-9d05-2371fe1c39bc",
                                                                                  new Date(1553467839004L),
                                                                                  "8f4083ba-df47-4922-a8e3-bb8d2360da47",
                                                                                  "48369579-2c9f-41a3-917d-bf0ac47b9d63",
                                                                                  "08c16f2f-f7b9-48a6-b396-3863bfbd2bb4",
                                                                                  "08955d6e-973b-4251-8597-69b5850dec11");
            DeveloperCertificate developercertificate2 = developercertificate1.clone();
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("54c20588-f274-4241-a88f-6d8e7fa869c1",
                                                                                  "e07677cd-49aa-4ecd-a2a8-73ffae7a2a80",
                                                                                  new Date(1553467843663L),
                                                                                  "b5ccfdef-2387-46e9-90f4-07a572aecaf6",
                                                                                  "b9a036d2-87bf-4fd8-a2d7-b4d7aad51455",
                                                                                  "2918072b-cd78-4bc9-ae39-b6c5bd6f5dcd",
                                                                                  "ac308acf-48d8-4fe1-9eb2-96ee3d372fd4");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("54c20588-f274-4241-a88f-6d8e7fa869c1",
                                                                                  "e07677cd-49aa-4ecd-a2a8-73ffae7a2a80",
                                                                                  new Date(1553467843663L),
                                                                                  "b5ccfdef-2387-46e9-90f4-07a572aecaf6",
                                                                                  "b9a036d2-87bf-4fd8-a2d7-b4d7aad51455",
                                                                                  "2918072b-cd78-4bc9-ae39-b6c5bd6f5dcd",
                                                                                  "ac308acf-48d8-4fe1-9eb2-96ee3d372fd4");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2.hashCode(), developercertificate1.hashCode());
            int hashCode = developercertificate1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, developercertificate1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeveloperCertificate developercertificate = new DeveloperCertificate("186546d3-6323-4518-938a-40bc7ceb4b5f",
                                                                             "09e6a0bc-cf04-42fb-978d-9dced517ee28",
                                                                             new Date(1553467843816L),
                                                                             "f6063547-a4f0-4c4d-9748-bd508291d0b2",
                                                                             "158c4ba1-38d2-4b4b-9bbb-7ab04d0889c9",
                                                                             "0b44d45a-6d67-414f-8cbd-e30e079b959a",
                                                                             "2ed09a67-4ea3-4848-9685-65f3f95d92e4");
        assertTrue(developercertificate.isValid());
        DeveloperCertificate developercertificateInvalid = new DeveloperCertificate("29e09bae-f784-473c-ae54-7e57b86d343d",
                                                                                    "3f73334d-3060-494d-8c98-532b0c1a14ae",
                                                                                    new Date(1553467847234L),
                                                                                    "1d487035-b3aa-45f0-a2d1-b111803ad60e",
                                                                                    "ee990542-e3f4-4c6d-a803-1baf948078e8",
                                                                                    null,
                                                                                    "db36aad3-2e11-413d-adf8-a317365fac8e");
        assertFalse(developercertificateInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("3bae7aec-bc62-4a8a-a8aa-171fd29e3de8",
                                                                                  "78aee72f-ccde-4e7a-824c-cb23ad478bf1",
                                                                                  new Date(1553467844542L),
                                                                                  "5a38450b-c0e2-4d95-9318-f0423b83dbeb",
                                                                                  "1f6fcb1a-2674-4164-829c-12a405df8388",
                                                                                  "ff8836ec-ec2e-4c7d-8cec-5a212e4406e0",
                                                                                  "2fb2af78-58d7-4fa3-a325-badf48420784");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("3bae7aec-bc62-4a8a-a8aa-171fd29e3de8",
                                                                                  "78aee72f-ccde-4e7a-824c-cb23ad478bf1",
                                                                                  new Date(1553467844542L),
                                                                                  "5a38450b-c0e2-4d95-9318-f0423b83dbeb",
                                                                                  "1f6fcb1a-2674-4164-829c-12a405df8388",
                                                                                  "ff8836ec-ec2e-4c7d-8cec-5a212e4406e0",
                                                                                  "2fb2af78-58d7-4fa3-a325-badf48420784");
            DeveloperCertificate developercertificate3 = new DeveloperCertificate("21f331d3-087e-4ed7-82f7-f4ad898a9614",
                                                                                  "e189e59a-0f62-42d2-957e-f1b7d69705fd",
                                                                                  new Date(1553467843745L),
                                                                                  "dcc87c62-50f0-4dac-ae01-6dd15cbb8990",
                                                                                  "cd31c12e-6c38-4aa6-ac18-0769e1e0a657",
                                                                                  "79687513-6f31-44a3-b791-58e0966998bd",
                                                                                  "20c5a613-05e0-40e7-9617-912addedd30b");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotNull(developercertificate3);
            assertNotSame(developercertificate2, developercertificate1);
            assertNotSame(developercertificate3, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate1, developercertificate2);
            assertEquals(developercertificate1, developercertificate1);
            assertFalse(developercertificate1.equals(null));
            assertNotEquals(developercertificate3, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
