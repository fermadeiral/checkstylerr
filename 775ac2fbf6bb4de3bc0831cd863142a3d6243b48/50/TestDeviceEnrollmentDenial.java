// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEnrollmentDenial.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEnrollmentDenial {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("4bf30ac1dc0de7dfb375b7ebbbecdd2e",
                                                                                        new Date(1559143721116L),
                                                                                        "c6991959-317b-4bcf-ad41-deba61da3d64",
                                                                                        "4bf30ac1dc0de7dfb375b7ebbbecdd2e",
                                                                                        "4bf30ac1dc0de7dfb375b7ebbbecdd2e");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = deviceenrollmentdenial1.clone();
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("4bf30ac1dc0de7dfb375b7ebbbecdd2e",
                                                                                        new Date(1559143720203L),
                                                                                        "ba781ed2-17bd-492b-92b4-1828a252ba7d",
                                                                                        "4bf30ac1dc0de7dfb375b7ebbbecdd2e",
                                                                                        "4bf30ac1dc0de7dfb375b7ebbbecdd2e");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = new DeviceEnrollmentDenial("4bf30ac1dc0de7dfb375b7ebbbecdd2e",
                                                                                        new Date(1559143720203L),
                                                                                        "ba781ed2-17bd-492b-92b4-1828a252ba7d",
                                                                                        "4bf30ac1dc0de7dfb375b7ebbbecdd2e",
                                                                                        "4bf30ac1dc0de7dfb375b7ebbbecdd2e");
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2.hashCode(), deviceenrollmentdenial1.hashCode());
            int hashCode = deviceenrollmentdenial1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceenrollmentdenial1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEnrollmentDenial deviceenrollmentdenial = new DeviceEnrollmentDenial("4bf30ac1dc0de7dfb375b7ebbbecdd2e",
                                                                                   new Date(1559143714874L),
                                                                                   "a0fa1e83-66ea-4912-af13-ec62dc8747ea",
                                                                                   "4bf30ac1dc0de7dfb375b7ebbbecdd2e",
                                                                                   "4bf30ac1dc0de7dfb375b7ebbbecdd2e");
        assertTrue(deviceenrollmentdenial.isValid());
        DeviceEnrollmentDenial deviceenrollmentdenialInvalid = new DeviceEnrollmentDenial("+]\u0016%6`îµ„6\u001366ã…°é„š$$?6é®“A@6ã®¾6\u0010å‘«\u0003á¾ªNï†?66QVä¸½@è”£666>ã¸›\b\u001b[W\u001a6\u001c\u001f6+ê»²6F'6\u001669å¡Š\u0015)",
                                                                                          new Date(1559143714707L),
                                                                                          "206e56dc-77e9-4363-88b4-ac4fd1d23feb",
                                                                                          "+]\u0016%6`îµ„6\u001366ã…°é„š$$?6é®“A@6ã®¾6\u0010å‘«\u0003á¾ªNï†?66QVä¸½@è”£666>ã¸›\b\u001b[W\u001a6\u001c\u001f6+ê»²6F'6\u001669å¡Š\u0015)",
                                                                                          "+]\u0016%6`îµ„6\u001366ã…°é„š$$?6é®“A@6ã®¾6\u0010å‘«\u0003á¾ªNï†?66QVä¸½@è”£666>ã¸›\b\u001b[W\u001a6\u001c\u001f6+ê»²6F'6\u001669å¡Š\u0015)");
        assertFalse(deviceenrollmentdenialInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("4bf30ac1dc0de7dfb375b7ebbbecdd2e",
                                                                                        new Date(1559143721507L),
                                                                                        "b757f44c-a730-4d20-9e65-a34c7e3389d1",
                                                                                        "4bf30ac1dc0de7dfb375b7ebbbecdd2e",
                                                                                        "4bf30ac1dc0de7dfb375b7ebbbecdd2e");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = new DeviceEnrollmentDenial("4bf30ac1dc0de7dfb375b7ebbbecdd2e",
                                                                                        new Date(1559143721507L),
                                                                                        "b757f44c-a730-4d20-9e65-a34c7e3389d1",
                                                                                        "4bf30ac1dc0de7dfb375b7ebbbecdd2e",
                                                                                        "4bf30ac1dc0de7dfb375b7ebbbecdd2e");
            DeviceEnrollmentDenial deviceenrollmentdenial3 = new DeviceEnrollmentDenial("4bf30ac1dc0de7dfb375b7ebbbecdd2e",
                                                                                        new Date(1559143720993L),
                                                                                        "6adb87c3-75fa-4656-891e-507d1d3c057d",
                                                                                        "4bf30ac1dc0de7dfb375b7ebbbecdd2e",
                                                                                        "4bf30ac1dc0de7dfb375b7ebbbecdd2e");
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotNull(deviceenrollmentdenial3);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertNotSame(deviceenrollmentdenial3, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial1, deviceenrollmentdenial2);
            assertEquals(deviceenrollmentdenial1, deviceenrollmentdenial1);
            assertFalse(deviceenrollmentdenial1.equals(null));
            assertNotEquals(deviceenrollmentdenial3, deviceenrollmentdenial1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
