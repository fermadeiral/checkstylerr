// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantUser.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantUser {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("4bf30ac1dc0de7dfb375b7ebbbecdd2e", null,
                                                             "ebddc8d4-ddbf-4376-9f19-be8b97d7e3de",
                                                             new Date(1559143718437L), -70, null,
                                                             "e58b9.09645@b9dc0.fr", false,
                                                             "1ca2f53f-9be3-49b6-9ab0-dc735de49cbc",
                                                             "4bf30ac1dc0de7dfb375b7ebbbecdd2e", true, true, false, -98,
                                                             null, null, "81474665-384e-4121-a3ec-f8fd70266d31", -56,
                                                             "f0db5ebf-5530-40bb-8e49-fb7d2438e603",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1559143719136L), "D15v4");
            SubtenantUser subtenantuser2 = subtenantuser1.clone();
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("4bf30ac1dc0de7dfb375b7ebbbecdd2e", null,
                                                             "eda8c863-cf56-4663-9e4e-ad65c21cdc98",
                                                             new Date(1559143720697L), -89, null,
                                                             "cc262.66db6@6ee20.me", true,
                                                             "4b43b174-804d-4291-9b1e-ea989d0f3552",
                                                             "4bf30ac1dc0de7dfb375b7ebbbecdd2e", true, false, true, 56,
                                                             null, null, "47ee4688-74b9-4cc9-9c56-4865f4091fb9", 0,
                                                             "f2f4de40-a04b-4262-b117-d04e8ea610d9",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1559143714786L), "D15v4");
            SubtenantUser subtenantuser2 = new SubtenantUser("4bf30ac1dc0de7dfb375b7ebbbecdd2e", null,
                                                             "eda8c863-cf56-4663-9e4e-ad65c21cdc98",
                                                             new Date(1559143720697L), -89, null,
                                                             "cc262.66db6@6ee20.me", true,
                                                             "4b43b174-804d-4291-9b1e-ea989d0f3552",
                                                             "4bf30ac1dc0de7dfb375b7ebbbecdd2e", true, false, true, 56,
                                                             null, null, "47ee4688-74b9-4cc9-9c56-4865f4091fb9", 0,
                                                             "f2f4de40-a04b-4262-b117-d04e8ea610d9",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1559143714786L), "D15v4");
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2.hashCode(), subtenantuser1.hashCode());
            int hashCode = subtenantuser1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantuser1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantUser subtenantuser = new SubtenantUser("4bf30ac1dc0de7dfb375b7ebbbecdd2e", null,
                                                        "64a98e1c-13de-45be-a899-4c11818c7435",
                                                        new Date(1559143715203L), -92, null, "bf613.f0cf7@da8d9.me",
                                                        false, "ced40dd1-d140-4b84-a64b-907273254b3c",
                                                        "4bf30ac1dc0de7dfb375b7ebbbecdd2e", true, false, true, 17, null,
                                                        null, "8d248525-38c1-4af1-b99d-add07f6cdf08", 95,
                                                        "4f05f5ea-b8da-4029-9556-077eefb8aae7",
                                                        SubtenantUserStatus.getDefault(), null,
                                                        new Date(1559143720389L), "D15v4");
        assertTrue(subtenantuser.isValid());
        SubtenantUser subtenantuserInvalid = new SubtenantUser(null, null, "c0a4784e-f1bf-4df4-8533-560027c93f92",
                                                               new Date(1559143719091L), 29, null, null, true,
                                                               "18d87182-dcd0-47f0-b900-d934424f5f549f809e4c-afab-4862-981e-fc7674407d090e3d453c-842a-4c15-9fdd-bea49869fd41",
                                                               "+]\u0016%6`îµ„6\u001366ã…°é„š$$?6é®“A@6ã®¾6\u0010å‘«\u0003á¾ªNï†?66QVä¸½@è”£666>ã¸›\b\u001b[W\u001a6\u001c\u001f6+ê»²6F'6\u001669å¡Š\u0015)",
                                                               false, true, true, 64, null, null,
                                                               "72714f8d-646d-4364-afa6-af15995c05f3", -15,
                                                               "b2a2941f-6f9d-47e9-9817-2c34f7fab1f5f761980b-4417-4df0-878f-3c45756d4b2896c2aeae-4a56-4262-8092-917a08684077",
                                                               SubtenantUserStatus.getDefault(), null,
                                                               new Date(1559143722036L),
                                                               "@;gèˆ¬2I2Ì¿â»š\u000bGl_\u0014?\u001e<\u001dY3H(3'$$^P3á”“B23+Wá‹—ê‰¼Méƒ­*\u00072ç´Ÿ3Nçµ¾;;\u0010`\u0000[\u001e33a22a2>98âº¯d");
        assertFalse(subtenantuserInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("4bf30ac1dc0de7dfb375b7ebbbecdd2e", null,
                                                             "e4b893d6-78bc-4436-bd4f-39b10aeb43c3",
                                                             new Date(1559143714870L), -9, null, "948bc.8bcaf@b6e6a.fr",
                                                             true, "d3e6e21b-1aa4-4525-a33b-a32e5722be6b",
                                                             "4bf30ac1dc0de7dfb375b7ebbbecdd2e", false, false, false,
                                                             51, null, null, "412fa5f4-8949-40c7-b36c-bf4341a85784", 71,
                                                             "e70153f7-f774-4103-9946-7795446f893e",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1559143713427L), "D15v4");
            SubtenantUser subtenantuser2 = new SubtenantUser("4bf30ac1dc0de7dfb375b7ebbbecdd2e", null,
                                                             "e4b893d6-78bc-4436-bd4f-39b10aeb43c3",
                                                             new Date(1559143714870L), -9, null, "948bc.8bcaf@b6e6a.fr",
                                                             true, "d3e6e21b-1aa4-4525-a33b-a32e5722be6b",
                                                             "4bf30ac1dc0de7dfb375b7ebbbecdd2e", false, false, false,
                                                             51, null, null, "412fa5f4-8949-40c7-b36c-bf4341a85784", 71,
                                                             "e70153f7-f774-4103-9946-7795446f893e",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1559143713427L), "D15v4");
            SubtenantUser subtenantuser3 = new SubtenantUser("4bf30ac1dc0de7dfb375b7ebbbecdd2e", null,
                                                             "9fe09600-bcb2-4e84-8b51-0b289bee261f",
                                                             new Date(1559143718498L), -38, null,
                                                             "fe331.62648@8fe82.me", true,
                                                             "21a5683b-f601-4900-b881-5e164ea8b773",
                                                             "4bf30ac1dc0de7dfb375b7ebbbecdd2e", false, false, false,
                                                             110, null, null, "d6218c66-0351-435e-b1a8-3ade18fa61c6",
                                                             107, "0e215b1f-eac3-4e38-bf8a-4911942e5a24",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1559143716588L), "D15v4");
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotNull(subtenantuser3);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertNotSame(subtenantuser3, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser1, subtenantuser2);
            assertEquals(subtenantuser1, subtenantuser1);
            assertFalse(subtenantuser1.equals(null));
            assertNotEquals(subtenantuser3, subtenantuser1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
