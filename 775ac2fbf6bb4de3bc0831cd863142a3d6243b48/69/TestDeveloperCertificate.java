// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.security.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeveloperCertificate.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeveloperCertificate {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("cf002403-a2ae-41da-b161-378d40f49c71",
                                                                                  "4e446a31-90e6-4bcd-954e-8caab972d76d",
                                                                                  new Date(1559143714733L),
                                                                                  "827fca43-336b-4660-9c76-0ae29642f45c",
                                                                                  "dda6ab9b-5978-4b1f-a7f9-d45e60717823",
                                                                                  "139fb88e-687b-435f-b800-441e44a11ea8",
                                                                                  "64357b9c-cf0c-4a5c-88f8-a18504765b40",
                                                                                  "7591dbfe-6fba-45ca-8052-de09fbe6311a");
            DeveloperCertificate developercertificate2 = developercertificate1.clone();
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("9b0a0bfa-dd99-46ac-ba78-7480c955f06d",
                                                                                  "323aacac-c82a-4f3c-a043-cc36114c2070",
                                                                                  new Date(1559143721369L),
                                                                                  "12360d9a-05ae-4408-aac2-5c2297ac2db6",
                                                                                  "ab1aefb3-56af-4729-bc74-002e82b9b697",
                                                                                  "19795089-d91e-417c-9736-9b8019e576c7",
                                                                                  "249c78ee-6442-46ab-826a-60112b24762f",
                                                                                  "4944ab9c-85ce-46e3-b958-253579b89a48");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("9b0a0bfa-dd99-46ac-ba78-7480c955f06d",
                                                                                  "323aacac-c82a-4f3c-a043-cc36114c2070",
                                                                                  new Date(1559143721369L),
                                                                                  "12360d9a-05ae-4408-aac2-5c2297ac2db6",
                                                                                  "ab1aefb3-56af-4729-bc74-002e82b9b697",
                                                                                  "19795089-d91e-417c-9736-9b8019e576c7",
                                                                                  "249c78ee-6442-46ab-826a-60112b24762f",
                                                                                  "4944ab9c-85ce-46e3-b958-253579b89a48");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2.hashCode(), developercertificate1.hashCode());
            int hashCode = developercertificate1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, developercertificate1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeveloperCertificate developercertificate = new DeveloperCertificate("b77a113a-0205-48a5-9e39-b02cb0bcdc25",
                                                                             "56035452-92a6-4386-82b7-8bc01389f31b",
                                                                             new Date(1559143720845L),
                                                                             "c0475788-435e-4b8b-a317-4e075e581323",
                                                                             "ccaabf53-d6b5-4c59-8932-4fcbefb04f29",
                                                                             "bcd4796e-74bc-45ab-b7c9-fed3a6d7b80d",
                                                                             "51959417-7d4f-4644-970b-ecda2a1d99de",
                                                                             "3a27fdef-89c8-47ad-8131-ac3f19b6b0d0");
        assertTrue(developercertificate.isValid());
        DeveloperCertificate developercertificateInvalid = new DeveloperCertificate("3a4373b8-6538-4e78-9f5d-9a92eae4f8e1",
                                                                                    "4e87b7d3-ad0d-426e-a785-1d8a4585050f",
                                                                                    new Date(1559143716209L),
                                                                                    "d7fbc3e1-b46c-4589-b38f-82e9d4e7bf40",
                                                                                    "8c074023-bb93-4e4f-bd2a-4b1f2ca9c4fa",
                                                                                    "d9174c8f-65de-4289-b7dc-991a2508b329",
                                                                                    null,
                                                                                    "7a43d412-bd5e-4767-b5d3-2edfd8c9b222");
        assertFalse(developercertificateInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("2da3ca2b-9f07-4cfe-bda7-d9c76b69f072",
                                                                                  "4def5cf9-ce51-457b-ba30-8014b4af6fa4",
                                                                                  new Date(1559143714017L),
                                                                                  "48c07746-fdfb-4e3e-962b-68089291bbff",
                                                                                  "05ac06d8-3b34-437e-bdc8-6cb2ef7b23b9",
                                                                                  "c1fd8e84-c21d-4be8-b77c-e787e29e2db1",
                                                                                  "9bf13d80-6bef-47c1-ab19-1811cb006940",
                                                                                  "3d6bf47d-55ac-47f8-bfae-c59b3febcaf4");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("2da3ca2b-9f07-4cfe-bda7-d9c76b69f072",
                                                                                  "4def5cf9-ce51-457b-ba30-8014b4af6fa4",
                                                                                  new Date(1559143714017L),
                                                                                  "48c07746-fdfb-4e3e-962b-68089291bbff",
                                                                                  "05ac06d8-3b34-437e-bdc8-6cb2ef7b23b9",
                                                                                  "c1fd8e84-c21d-4be8-b77c-e787e29e2db1",
                                                                                  "9bf13d80-6bef-47c1-ab19-1811cb006940",
                                                                                  "3d6bf47d-55ac-47f8-bfae-c59b3febcaf4");
            DeveloperCertificate developercertificate3 = new DeveloperCertificate("0843f4af-1eb0-4ed7-a7cb-67e117c374ca",
                                                                                  "ad46d94c-4f3a-45b6-99aa-7e59fe82eb39",
                                                                                  new Date(1559143714331L),
                                                                                  "8a10da6b-8726-4827-9553-94e9e694eb1d",
                                                                                  "9f34c177-1eac-40f1-8ce7-fcf2b112d049",
                                                                                  "0168300c-adf0-45b2-9027-c237d0d80c2c",
                                                                                  "420b5e87-641a-4b11-a45e-e1bd8a9973e4",
                                                                                  "9a790357-605d-41cf-bc56-1ce5dada3b59");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotNull(developercertificate3);
            assertNotSame(developercertificate2, developercertificate1);
            assertNotSame(developercertificate3, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate1, developercertificate2);
            assertEquals(developercertificate1, developercertificate1);
            assertFalse(developercertificate1.equals(null));
            assertNotEquals(developercertificate3, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
