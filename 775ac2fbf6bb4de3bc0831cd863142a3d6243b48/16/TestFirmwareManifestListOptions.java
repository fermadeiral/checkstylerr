// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.deviceupdate.model;

import static org.junit.Assert.*;

import com.arm.mbed.cloud.sdk.common.Order;
import com.arm.mbed.cloud.sdk.common.listing.ListOptionsEncoder;
import com.arm.mbed.cloud.sdk.common.listing.filtering.FilterOperator;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import org.junit.Test;

/**
 * Unit tests for Model FirmwareManifestListOptions.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestFirmwareManifestListOptions {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            FirmwareManifestListOptions firmwaremanifestlistoptions1 = new FirmwareManifestListOptions(Integer.valueOf(-4),
                                                                                                       Long.valueOf(32),
                                                                                                       Order.getDefault(),
                                                                                                       "2c95d5d7-9d7f-40b9-abd4-a2eb3862bb85",
                                                                                                       null, null);
            FirmwareManifestListOptions firmwaremanifestlistoptions2 = firmwaremanifestlistoptions1.clone();
            assertNotNull(firmwaremanifestlistoptions1);
            assertNotNull(firmwaremanifestlistoptions2);
            assertNotSame(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the filters method.
     */
    @SuppressWarnings({ "boxing", "resource" })
    @Test
    public void testFilters() {
        try {
            FirmwareManifestListOptions option = new FirmwareManifestListOptions().inCreatedAts(Arrays.asList(new Date(1559143722701L)))
                                                                                  .notInCreatedAts(Arrays.asList(new Date(1559143715434L),
                                                                                                                 new Date(1559143714373L),
                                                                                                                 new Date(1559143717178L),
                                                                                                                 new Date(1559143716312L),
                                                                                                                 new Date(1559143719714L),
                                                                                                                 new Date(1559143720264L)))
                                                                                  .lessThanCreatedAt(new Date(1559143715622L))
                                                                                  .greaterThanCreatedAt(new Date(1559143713374L))
                                                                                  .equalToName("8db51639-6fd1-499c-b0d5-b0dd308ea020")
                                                                                  .notEqualToName("f6bd045a-2220-45cb-b6b6-c0363efbd372")
                                                                                  .inNames(Arrays.asList("107c9a84-c631-4c30-90f8-827e05080d0e",
                                                                                                         "8dbd193b-3e49-4f1a-9684-b9ec4b26e312"))
                                                                                  .notInNames(Arrays.asList("3bfdae7a-64a9-464f-a939-98858ef058b6"))
                                                                                  .equalToId("9681e8a7-3c75-44bf-ace7-a13968f2004d")
                                                                                  .notEqualToId("cff666cd-d1cb-4cc4-a440-1d2bd9c97736")
                                                                                  .inIds(Arrays.asList("241b36b0-a42a-4ee5-9458-127d63426aa5",
                                                                                                       "97df6165-d93d-4362-b973-0a1bd9189f6c",
                                                                                                       "b3709c53-cd02-4a0f-ad63-bde3eb4a06b1",
                                                                                                       "607fe146-ea6f-455a-92ca-e71534a45304",
                                                                                                       "b02ca65f-8ee1-4d83-bc42-37cd53660c39",
                                                                                                       "fa57dd21-97b3-44e3-a4af-84798e72af0d",
                                                                                                       "4e734e89-8f1f-47fb-a4b8-4ef4e434e81d"))
                                                                                  .notInIds(Arrays.asList("c1431f7e-dfdc-4680-9b8e-f7f964d0e0aa",
                                                                                                          "db086ff9-2bdf-406e-8524-d6229e277427"))
                                                                                  .equalToDatafileUrl("756520b2-1bdb-46a9-b79a-1a945001c31b")
                                                                                  .notEqualToDatafileUrl("9d068bdd-9d1b-42f7-973f-ae9308e67a9f")
                                                                                  .inDatafileUrls(Arrays.asList("4eb9df40-2104-4308-8367-ef55d5e487f4",
                                                                                                                "25c8f971-a1aa-4871-8d03-3795a6584e6b",
                                                                                                                "2ba77cb7-2405-4f63-947f-195388f3b090",
                                                                                                                "e553ca61-ab9b-4c9d-9ada-ac9aa96ea279",
                                                                                                                "4b9c0c50-43d1-4295-b348-dc462c39e810",
                                                                                                                "0d023061-4322-4368-a972-5fd2ebd8aa8d"))
                                                                                  .notInDatafileUrls(Arrays.asList("59993d32-9c24-4e26-b7e0-ab824655ee02",
                                                                                                                   "98789f36-ab54-42a2-ae58-02b9d7110e80",
                                                                                                                   "161a2876-f182-49bc-a1fa-444ac040fae3"))
                                                                                  .equalToDatafileSize(Long.valueOf(-45))
                                                                                  .notEqualToDatafileSize(Long.valueOf(88))
                                                                                  .inDatafileSizes(Arrays.asList(Long.valueOf(40),
                                                                                                                 Long.valueOf(85),
                                                                                                                 Long.valueOf(95),
                                                                                                                 Long.valueOf(-32),
                                                                                                                 Long.valueOf(-50),
                                                                                                                 Long.valueOf(58),
                                                                                                                 Long.valueOf(0),
                                                                                                                 Long.valueOf(-125)))
                                                                                  .notInDatafileSizes(Arrays.asList(Long.valueOf(113),
                                                                                                                    Long.valueOf(-65),
                                                                                                                    Long.valueOf(62),
                                                                                                                    Long.valueOf(17),
                                                                                                                    Long.valueOf(15)))
                                                                                  .equalToDeviceClass("522e76db-fa02-49cd-9378-7a5da37f95da")
                                                                                  .notEqualToDeviceClass("fd05d6c8-42e7-45fb-8782-5100aab613d9")
                                                                                  .inDeviceClass(Arrays.asList("df5a898d-fd52-49df-9573-8e5cdd6c8e04",
                                                                                                               "079c480d-33c7-4a58-b6e4-86d5871304a8",
                                                                                                               "dffcc8c3-d3c2-4bf2-8792-e10b18d9201c",
                                                                                                               "8195a8f1-470d-4202-8f3e-9cf2af819f5a",
                                                                                                               "c5ff7b35-e12f-4e18-9db7-c3f45570639d",
                                                                                                               "8a77b8c8-6801-4ee3-8f7e-16577b9c1974",
                                                                                                               "84b07a54-c841-40b0-870f-7ac1d126a48e",
                                                                                                               "b8f5cde2-942b-45d8-8165-8111ffea945f",
                                                                                                               "e01b97da-bf73-4332-89ad-1bc853065b7a"))
                                                                                  .notInDeviceClass(Arrays.asList("894ef935-812d-4511-bfbb-2efde2e919da",
                                                                                                                  "1b63ceea-f38b-4411-8905-184292c3ead9",
                                                                                                                  "55d8f827-3e34-47b1-8765-71944ed27bc7",
                                                                                                                  "997c3543-f9b8-4a73-b6b7-0a9f207c36a8",
                                                                                                                  "72f242ef-601c-40ac-9baf-e80ba11f39b2",
                                                                                                                  "7047a84e-365e-4bd6-a610-d198a8a452f3",
                                                                                                                  "5de38213-42e2-4c21-94e7-f34464f310e4",
                                                                                                                  "530d984a-eb27-45f3-acad-86e8cf0bd066",
                                                                                                                  "dc17cc3a-6684-4276-9e8f-29bf2ff614a4"))
                                                                                  .inTimestamps(Arrays.asList(new Date(1559143713393L)))
                                                                                  .notInTimestamps(Arrays.asList(new Date(1559143715057L),
                                                                                                                 new Date(1559143719011L),
                                                                                                                 new Date(1559143719807L),
                                                                                                                 new Date(1559143714247L),
                                                                                                                 new Date(1559143715674L),
                                                                                                                 new Date(1559143718103L)))
                                                                                  .lessThanTimestamp(new Date(1559143714962L))
                                                                                  .greaterThanTimestamp(new Date(1559143720158L))
                                                                                  .inUpdatedAts(Arrays.asList(new Date(1559143720805L)))
                                                                                  .notInUpdatedAts(Arrays.asList(new Date(1559143719597L),
                                                                                                                 new Date(1559143713624L),
                                                                                                                 new Date(1559143719635L),
                                                                                                                 new Date(1559143716538L),
                                                                                                                 new Date(1559143720488L),
                                                                                                                 new Date(1559143713973L),
                                                                                                                 new Date(1559143716535L)))
                                                                                  .lessThanUpdatedAt(new Date(1559143715426L))
                                                                                  .greaterThanUpdatedAt(new Date(1559143719876L))
                                                                                  .equalToDescription("fccac166-db07-489c-b790-1d5141090fd9")
                                                                                  .notEqualToDescription("1f095fc2-e0ae-4b42-ac8d-6b77ea4fa6bc")
                                                                                  .inDescriptions(Arrays.asList("12718d6e-8c0d-4ad9-9d16-197ac4a2600f",
                                                                                                                "34b6f8e4-210f-427d-9263-e68b5340a663"))
                                                                                  .notInDescriptions(Arrays.asList("d4d2069e-6765-4b7a-86a9-08d666bc00bf",
                                                                                                                   "0b41b821-1859-47a6-a639-4c65433276d3",
                                                                                                                   "3da8b2e1-b63c-4676-8c54-c5f75c077fdf",
                                                                                                                   "7368fda6-9dc5-45b3-a516-eafc7c484d1a",
                                                                                                                   "0452097f-f595-473d-8cf0-5ad0b7f8f683",
                                                                                                                   "303d14af-c73d-4b7f-b5bd-db5d96d812c8",
                                                                                                                   "f4919ee1-16ec-479d-a19c-584361ad7e6f",
                                                                                                                   "1924c247-ee00-4447-abc6-e4b6b79327a9"));
            assertTrue(option.hasFilters());
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559143722701L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559143715434L), new Date(1559143714373L), new Date(1559143717178L),
                                       new Date(1559143716312L), new Date(1559143719714L), new Date(1559143720264L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                        FilterOperator.LESS_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1559143715622L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1559143713374L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME, FilterOperator.EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("8db51639-6fd1-499c-b0d5-b0dd308ea020",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("f6bd045a-2220-45cb-b6b6-c0363efbd372",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME, FilterOperator.IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("107c9a84-c631-4c30-90f8-827e05080d0e", "8dbd193b-3e49-4f1a-9684-b9ec4b26e312"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("3bfdae7a-64a9-464f-a939-98858ef058b6"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID, FilterOperator.EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("9681e8a7-3c75-44bf-ace7-a13968f2004d",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("cff666cd-d1cb-4cc4-a440-1d2bd9c97736",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID, FilterOperator.IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("241b36b0-a42a-4ee5-9458-127d63426aa5", "97df6165-d93d-4362-b973-0a1bd9189f6c",
                                       "b3709c53-cd02-4a0f-ad63-bde3eb4a06b1", "607fe146-ea6f-455a-92ca-e71534a45304",
                                       "b02ca65f-8ee1-4d83-bc42-37cd53660c39", "fa57dd21-97b3-44e3-a4af-84798e72af0d",
                                       "4e734e89-8f1f-47fb-a4b8-4ef4e434e81d"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("c1431f7e-dfdc-4680-9b8e-f7f964d0e0aa", "db086ff9-2bdf-406e-8524-d6229e277427"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("756520b2-1bdb-46a9-b79a-1a945001c31b",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("9d068bdd-9d1b-42f7-973f-ae9308e67a9f",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("4eb9df40-2104-4308-8367-ef55d5e487f4", "25c8f971-a1aa-4871-8d03-3795a6584e6b",
                                       "2ba77cb7-2405-4f63-947f-195388f3b090", "e553ca61-ab9b-4c9d-9ada-ac9aa96ea279",
                                       "4b9c0c50-43d1-4295-b348-dc462c39e810", "0d023061-4322-4368-a972-5fd2ebd8aa8d"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("59993d32-9c24-4e26-b7e0-ab824655ee02", "98789f36-ab54-42a2-ae58-02b9d7110e80",
                                       "161a2876-f182-49bc-a1fa-444ac040fae3"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(-45),
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    Long.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(88),
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                       Long.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(40), Long.valueOf(85), Long.valueOf(95), Long.valueOf(-32),
                                       Long.valueOf(-50), Long.valueOf(58), Long.valueOf(0), Long.valueOf(-125)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                        FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(113), Long.valueOf(-65), Long.valueOf(62), Long.valueOf(17),
                                       Long.valueOf(15)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS, FilterOperator.EQUAL));
            assertNotNull(option.getDeviceClassFilters());
            assertEquals("522e76db-fa02-49cd-9378-7a5da37f95da",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDeviceClassFilters());
            assertEquals("fd05d6c8-42e7-45fb-8782-5100aab613d9",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS, FilterOperator.IN));
            assertNotNull(option.getDeviceClassFilters());
            assertEquals(Arrays.asList("df5a898d-fd52-49df-9573-8e5cdd6c8e04", "079c480d-33c7-4a58-b6e4-86d5871304a8",
                                       "dffcc8c3-d3c2-4bf2-8792-e10b18d9201c", "8195a8f1-470d-4202-8f3e-9cf2af819f5a",
                                       "c5ff7b35-e12f-4e18-9db7-c3f45570639d", "8a77b8c8-6801-4ee3-8f7e-16577b9c1974",
                                       "84b07a54-c841-40b0-870f-7ac1d126a48e", "b8f5cde2-942b-45d8-8165-8111ffea945f",
                                       "e01b97da-bf73-4332-89ad-1bc853065b7a"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS, FilterOperator.NOT_IN));
            assertNotNull(option.getDeviceClassFilters());
            assertEquals(Arrays.asList("894ef935-812d-4511-bfbb-2efde2e919da", "1b63ceea-f38b-4411-8905-184292c3ead9",
                                       "55d8f827-3e34-47b1-8765-71944ed27bc7", "997c3543-f9b8-4a73-b6b7-0a9f207c36a8",
                                       "72f242ef-601c-40ac-9baf-e80ba11f39b2", "7047a84e-365e-4bd6-a610-d198a8a452f3",
                                       "5de38213-42e2-4c21-94e7-f34464f310e4", "530d984a-eb27-45f3-acad-86e8cf0bd066",
                                       "dc17cc3a-6684-4276-9e8f-29bf2ff614a4"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP, FilterOperator.IN));
            assertNotNull(option.getTimestampFilters());
            assertEquals(Arrays.asList(new Date(1559143713393L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP, FilterOperator.NOT_IN));
            assertNotNull(option.getTimestampFilters());
            assertEquals(Arrays.asList(new Date(1559143715057L), new Date(1559143719011L), new Date(1559143719807L),
                                       new Date(1559143714247L), new Date(1559143715674L), new Date(1559143718103L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP, FilterOperator.LESS_THAN));
            assertNotNull(option.getTimestampFilters());
            assertEquals(new Date(1559143714962L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getTimestampFilters());
            assertEquals(new Date(1559143720158L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559143720805L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559143719597L), new Date(1559143713624L), new Date(1559143719635L),
                                       new Date(1559143716538L), new Date(1559143720488L), new Date(1559143713973L),
                                       new Date(1559143716535L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                        FilterOperator.LESS_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1559143715426L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1559143719876L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("fccac166-db07-489c-b790-1d5141090fd9",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("1f095fc2-e0ae-4b42-ac8d-6b77ea4fa6bc",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("12718d6e-8c0d-4ad9-9d16-197ac4a2600f", "34b6f8e4-210f-427d-9263-e68b5340a663"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("d4d2069e-6765-4b7a-86a9-08d666bc00bf", "0b41b821-1859-47a6-a639-4c65433276d3",
                                       "3da8b2e1-b63c-4676-8c54-c5f75c077fdf", "7368fda6-9dc5-45b3-a516-eafc7c484d1a",
                                       "0452097f-f595-473d-8cf0-5ad0b7f8f683", "303d14af-c73d-4b7f-b5bd-db5d96d812c8",
                                       "f4919ee1-16ec-479d-a19c-584361ad7e6f", "1924c247-ee00-4447-abc6-e4b6b79327a9"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    List.class, option));
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            FirmwareManifestListOptions firmwaremanifestlistoptions1 = new FirmwareManifestListOptions(Integer.valueOf(119),
                                                                                                       Long.valueOf(-118),
                                                                                                       Order.getDefault(),
                                                                                                       "aadaa20e-dc86-40ab-8751-b730793e598a",
                                                                                                       null, null);
            FirmwareManifestListOptions firmwaremanifestlistoptions2 = new FirmwareManifestListOptions(Integer.valueOf(119),
                                                                                                       Long.valueOf(-118),
                                                                                                       Order.getDefault(),
                                                                                                       "aadaa20e-dc86-40ab-8751-b730793e598a",
                                                                                                       null, null);
            assertNotNull(firmwaremanifestlistoptions1);
            assertNotNull(firmwaremanifestlistoptions2);
            assertNotSame(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2.hashCode(), firmwaremanifestlistoptions1.hashCode());
            int hashCode = firmwaremanifestlistoptions1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, firmwaremanifestlistoptions1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            FirmwareManifestListOptions firmwaremanifestlistoptions1 = new FirmwareManifestListOptions(Integer.valueOf(105),
                                                                                                       Long.valueOf(-97),
                                                                                                       Order.getDefault(),
                                                                                                       "ee9da102-19e3-4c84-970d-04f111df6176",
                                                                                                       null, null);
            FirmwareManifestListOptions firmwaremanifestlistoptions2 = new FirmwareManifestListOptions(Integer.valueOf(105),
                                                                                                       Long.valueOf(-97),
                                                                                                       Order.getDefault(),
                                                                                                       "ee9da102-19e3-4c84-970d-04f111df6176",
                                                                                                       null, null);
            FirmwareManifestListOptions firmwaremanifestlistoptions3 = new FirmwareManifestListOptions(Integer.valueOf(-105),
                                                                                                       Long.valueOf(100),
                                                                                                       Order.getDefault(),
                                                                                                       "99c37dde-562a-4c18-be18-7b2495e78391",
                                                                                                       null, null);
            assertNotNull(firmwaremanifestlistoptions1);
            assertNotNull(firmwaremanifestlistoptions2);
            assertNotNull(firmwaremanifestlistoptions3);
            assertNotSame(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertNotSame(firmwaremanifestlistoptions3, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions1, firmwaremanifestlistoptions2);
            assertEquals(firmwaremanifestlistoptions1, firmwaremanifestlistoptions1);
            assertFalse(firmwaremanifestlistoptions1.equals(null));
            assertNotEquals(firmwaremanifestlistoptions3, firmwaremanifestlistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
