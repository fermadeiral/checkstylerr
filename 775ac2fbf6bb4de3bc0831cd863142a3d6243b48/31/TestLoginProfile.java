// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model LoginProfile.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestLoginProfile {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            LoginProfile loginprofile1 = new LoginProfile("4f8b40de-5d32-4359-8b40-5f6ea4f19e65",
                                                          "d54a1fa2-32d3-48be-8fa5-5697e4a65462");
            LoginProfile loginprofile2 = loginprofile1.clone();
            assertNotNull(loginprofile1);
            assertNotNull(loginprofile2);
            assertNotSame(loginprofile2, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            LoginProfile loginprofile1 = new LoginProfile("e4fc677d-56f7-4fc5-ad7c-edb3aa46643f",
                                                          "3cd2bd2f-5ab6-4769-a91c-e62d0d97f7ad");
            LoginProfile loginprofile2 = new LoginProfile("e4fc677d-56f7-4fc5-ad7c-edb3aa46643f",
                                                          "3cd2bd2f-5ab6-4769-a91c-e62d0d97f7ad");
            assertNotNull(loginprofile1);
            assertNotNull(loginprofile2);
            assertNotSame(loginprofile2, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
            assertEquals(loginprofile2.hashCode(), loginprofile1.hashCode());
            int hashCode = loginprofile1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, loginprofile1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        LoginProfile loginprofile = new LoginProfile("44642bc2-cf18-45d1-903f-0ed2b3620e60",
                                                     "21cd93a4-66b0-4938-b651-346e4ea40cca");
        assertTrue(loginprofile.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            LoginProfile loginprofile1 = new LoginProfile("1015038d-302e-460c-9d8a-021ebe8b9cc7",
                                                          "a90b6d3c-3203-42f4-8edb-c1061a7ff760");
            LoginProfile loginprofile2 = new LoginProfile("1015038d-302e-460c-9d8a-021ebe8b9cc7",
                                                          "a90b6d3c-3203-42f4-8edb-c1061a7ff760");
            LoginProfile loginprofile3 = new LoginProfile("ecea9fed-a858-458c-853f-c005815ce9e7",
                                                          "cd4e2ced-a0de-4e32-ac85-8ab101e87d38");
            assertNotNull(loginprofile1);
            assertNotNull(loginprofile2);
            assertNotNull(loginprofile3);
            assertNotSame(loginprofile2, loginprofile1);
            assertNotSame(loginprofile3, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
            assertEquals(loginprofile1, loginprofile2);
            assertEquals(loginprofile1, loginprofile1);
            assertFalse(loginprofile1.equals(null));
            assertNotEquals(loginprofile3, loginprofile1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
