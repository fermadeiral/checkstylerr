// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model ParentAccount.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestParentAccount {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("cebc3.c8a86@b2087.me",
                                                             "e96f3c76-ea66-44ec-9e11-36829dd3c585",
                                                             "4bf30ac1dc0de7dfb375b7ebbbecdd2e");
            ParentAccount parentaccount2 = parentaccount1.clone();
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotSame(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("edf1b.cc3ec@924e9.fr",
                                                             "16d9d89e-aa96-4d2c-9808-c78f5fb0cb78",
                                                             "4bf30ac1dc0de7dfb375b7ebbbecdd2e");
            ParentAccount parentaccount2 = new ParentAccount("edf1b.cc3ec@924e9.fr",
                                                             "16d9d89e-aa96-4d2c-9808-c78f5fb0cb78",
                                                             "4bf30ac1dc0de7dfb375b7ebbbecdd2e");
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotSame(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount2.hashCode(), parentaccount1.hashCode());
            int hashCode = parentaccount1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, parentaccount1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ParentAccount parentaccount = new ParentAccount("50bb4.2946b@06ebc.me", "416d3a8c-67ea-477b-a0cc-88d6235b2a4c",
                                                        "4bf30ac1dc0de7dfb375b7ebbbecdd2e");
        assertTrue(parentaccount.isValid());
        ParentAccount parentaccountInvalid = new ParentAccount("î’¤á¦Ÿ\tç´‰æºˆæ•‰â¶‘î«Œ\u0000î¢¤ç¨®á¬?è›?çŸ‡>î·´î?–ã˜?à³¬ã³ 5\u0001ç¹™ï¡»âˆ©ï«›\u0011\u0002â‰¢âˆŒ>ï¬´îª­>î½ž\u001fè“ž\u0018å²ºä®›éœ¥>>æ²´\u001fë­¯î“…è?Žè”¹ì§¿ 0*ï”¡ã™—âŠ¸ï¼?ã´—îªŸâ„?ï„¾âˆŸ\u001cîœ°",
                                                               "053caa44-490c-451a-8ec1-fad30d7e1eaf9644a608-c8be-4143-b901-37855560a199445b4ac5-8010-4189-8f1a-4448fe7ccd26",
                                                               "+]\u0016%6`îµ„6\u001366ã…°é„š$$?6é®“A@6ã®¾6\u0010å‘«\u0003á¾ªNï†?66QVä¸½@è”£666>ã¸›\b\u001b[W\u001a6\u001c\u001f6+ê»²6F'6\u001669å¡Š\u0015)");
        assertFalse(parentaccountInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("314fb.51f2a@4fc72.me",
                                                             "0ceb6478-c4b7-47c4-9457-add6b07b56ac",
                                                             "4bf30ac1dc0de7dfb375b7ebbbecdd2e");
            ParentAccount parentaccount2 = new ParentAccount("314fb.51f2a@4fc72.me",
                                                             "0ceb6478-c4b7-47c4-9457-add6b07b56ac",
                                                             "4bf30ac1dc0de7dfb375b7ebbbecdd2e");
            ParentAccount parentaccount3 = new ParentAccount("e79e2.acf3f@f7f34.fr",
                                                             "86254600-2efb-4caf-9c3b-5d47410ad41d",
                                                             "4bf30ac1dc0de7dfb375b7ebbbecdd2e");
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotNull(parentaccount3);
            assertNotSame(parentaccount2, parentaccount1);
            assertNotSame(parentaccount3, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount1, parentaccount2);
            assertEquals(parentaccount1, parentaccount1);
            assertFalse(parentaccount1.equals(null));
            assertNotEquals(parentaccount3, parentaccount1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
