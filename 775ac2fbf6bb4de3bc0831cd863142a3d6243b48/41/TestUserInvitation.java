// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model UserInvitation.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestUserInvitation {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("4bf30ac1dc0de7dfb375b7ebbbecdd2e",
                                                                new Date(1559143714805L), "f2eef.e9607@a096f.me",
                                                                new Date(1559143716153L),
                                                                "4bf30ac1dc0de7dfb375b7ebbbecdd2e", null,
                                                                new Date(1559143722285L),
                                                                "4bf30ac1dc0de7dfb375b7ebbbecdd2e");
            UserInvitation userinvitation2 = userinvitation1.clone();
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotSame(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("4bf30ac1dc0de7dfb375b7ebbbecdd2e",
                                                                new Date(1559143715894L), "d88e0.dea82@63952.me",
                                                                new Date(1559143713702L),
                                                                "4bf30ac1dc0de7dfb375b7ebbbecdd2e", null,
                                                                new Date(1559143722348L),
                                                                "4bf30ac1dc0de7dfb375b7ebbbecdd2e");
            UserInvitation userinvitation2 = new UserInvitation("4bf30ac1dc0de7dfb375b7ebbbecdd2e",
                                                                new Date(1559143715894L), "d88e0.dea82@63952.me",
                                                                new Date(1559143713702L),
                                                                "4bf30ac1dc0de7dfb375b7ebbbecdd2e", null,
                                                                new Date(1559143722348L),
                                                                "4bf30ac1dc0de7dfb375b7ebbbecdd2e");
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotSame(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation2.hashCode(), userinvitation1.hashCode());
            int hashCode = userinvitation1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, userinvitation1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        UserInvitation userinvitation = new UserInvitation("4bf30ac1dc0de7dfb375b7ebbbecdd2e", new Date(1559143714707L),
                                                           "5b243.47c4e@17190.me", new Date(1559143719768L),
                                                           "4bf30ac1dc0de7dfb375b7ebbbecdd2e", null,
                                                           new Date(1559143715639L),
                                                           "4bf30ac1dc0de7dfb375b7ebbbecdd2e");
        assertTrue(userinvitation.isValid());
        UserInvitation userinvitationInvalid = new UserInvitation("+]\u0016%6`îµ„6\u001366ã…°é„š$$?6é®“A@6ã®¾6\u0010å‘«\u0003á¾ªNï†?66QVä¸½@è”£666>ã¸›\b\u001b[W\u001a6\u001c\u001f6+ê»²6F'6\u001669å¡Š\u0015)",
                                                                  new Date(1559143720498L), null,
                                                                  new Date(1559143718829L),
                                                                  "+]\u0016%6`îµ„6\u001366ã…°é„š$$?6é®“A@6ã®¾6\u0010å‘«\u0003á¾ªNï†?66QVä¸½@è”£666>ã¸›\b\u001b[W\u001a6\u001c\u001f6+ê»²6F'6\u001669å¡Š\u0015)",
                                                                  null, new Date(1559143716886L),
                                                                  "+]\u0016%6`îµ„6\u001366ã…°é„š$$?6é®“A@6ã®¾6\u0010å‘«\u0003á¾ªNï†?66QVä¸½@è”£666>ã¸›\b\u001b[W\u001a6\u001c\u001f6+ê»²6F'6\u001669å¡Š\u0015)");
        assertFalse(userinvitationInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("4bf30ac1dc0de7dfb375b7ebbbecdd2e",
                                                                new Date(1559143716309L), "b70f6.825da@010c7.me",
                                                                new Date(1559143718612L),
                                                                "4bf30ac1dc0de7dfb375b7ebbbecdd2e", null,
                                                                new Date(1559143713975L),
                                                                "4bf30ac1dc0de7dfb375b7ebbbecdd2e");
            UserInvitation userinvitation2 = new UserInvitation("4bf30ac1dc0de7dfb375b7ebbbecdd2e",
                                                                new Date(1559143716309L), "b70f6.825da@010c7.me",
                                                                new Date(1559143718612L),
                                                                "4bf30ac1dc0de7dfb375b7ebbbecdd2e", null,
                                                                new Date(1559143713975L),
                                                                "4bf30ac1dc0de7dfb375b7ebbbecdd2e");
            UserInvitation userinvitation3 = new UserInvitation("4bf30ac1dc0de7dfb375b7ebbbecdd2e",
                                                                new Date(1559143713626L), "62de6.bf4b3@42d9a.me",
                                                                new Date(1559143721586L),
                                                                "4bf30ac1dc0de7dfb375b7ebbbecdd2e", null,
                                                                new Date(1559143715493L),
                                                                "4bf30ac1dc0de7dfb375b7ebbbecdd2e");
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotNull(userinvitation3);
            assertNotSame(userinvitation2, userinvitation1);
            assertNotSame(userinvitation3, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation1, userinvitation2);
            assertEquals(userinvitation1, userinvitation1);
            assertFalse(userinvitation1.equals(null));
            assertNotEquals(userinvitation3, userinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
