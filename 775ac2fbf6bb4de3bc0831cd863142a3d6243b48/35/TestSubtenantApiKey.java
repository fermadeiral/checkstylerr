// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantApiKey.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantApiKey {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("4bf30ac1dc0de7dfb375b7ebbbecdd2e",
                                                                   new Date(1559143716028L), 125,
                                                                   "4bf30ac1dc0de7dfb375b7ebbbecdd2e",
                                                                   "b412aa63-a270-4e0c-8b53-db11b6d8a03d", -3,
                                                                   "ee5d3c4b-f1e2-430a-9b82-674f29375542",
                                                                   "4bf30ac1dc0de7dfb375b7ebbbecdd2e",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1559143719579L));
            SubtenantApiKey subtenantapikey2 = subtenantapikey1.clone();
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("4bf30ac1dc0de7dfb375b7ebbbecdd2e",
                                                                   new Date(1559143719584L), -43,
                                                                   "4bf30ac1dc0de7dfb375b7ebbbecdd2e",
                                                                   "311fe81c-a4fe-4701-9492-c7336eb9207d", 85,
                                                                   "6c259158-823e-4076-b266-cd3e36d733d9",
                                                                   "4bf30ac1dc0de7dfb375b7ebbbecdd2e",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1559143719783L));
            SubtenantApiKey subtenantapikey2 = new SubtenantApiKey("4bf30ac1dc0de7dfb375b7ebbbecdd2e",
                                                                   new Date(1559143719584L), -43,
                                                                   "4bf30ac1dc0de7dfb375b7ebbbecdd2e",
                                                                   "311fe81c-a4fe-4701-9492-c7336eb9207d", 85,
                                                                   "6c259158-823e-4076-b266-cd3e36d733d9",
                                                                   "4bf30ac1dc0de7dfb375b7ebbbecdd2e",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1559143719783L));
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2.hashCode(), subtenantapikey1.hashCode());
            int hashCode = subtenantapikey1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantapikey1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantApiKey subtenantapikey = new SubtenantApiKey("4bf30ac1dc0de7dfb375b7ebbbecdd2e",
                                                              new Date(1559143717425L), -115,
                                                              "4bf30ac1dc0de7dfb375b7ebbbecdd2e",
                                                              "7740f973-5c20-4b91-b373-81ba55e06abe", -3,
                                                              "2b63a3d2-3f20-465b-a615-eaa9ee833d0e",
                                                              "4bf30ac1dc0de7dfb375b7ebbbecdd2e",
                                                              SubtenantApiKeyStatus.getDefault(),
                                                              new Date(1559143716805L));
        assertTrue(subtenantapikey.isValid());
        SubtenantApiKey subtenantapikeyInvalid = new SubtenantApiKey(null, new Date(1559143713302L), 40,
                                                                     "+]\u0016%6`îµ„6\u001366ã…°é„š$$?6é®“A@6ã®¾6\u0010å‘«\u0003á¾ªNï†?66QVä¸½@è”£666>ã¸›\b\u001b[W\u001a6\u001c\u001f6+ê»²6F'6\u001669å¡Š\u0015)",
                                                                     "0bb51574-1e0d-464c-aefe-782897aba135", 65, null,
                                                                     "+]\u0016%6`îµ„6\u001366ã…°é„š$$?6é®“A@6ã®¾6\u0010å‘«\u0003á¾ªNï†?66QVä¸½@è”£666>ã¸›\b\u001b[W\u001a6\u001c\u001f6+ê»²6F'6\u001669å¡Š\u0015)",
                                                                     SubtenantApiKeyStatus.getDefault(),
                                                                     new Date(1559143719360L));
        assertFalse(subtenantapikeyInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("4bf30ac1dc0de7dfb375b7ebbbecdd2e",
                                                                   new Date(1559143718555L), -91,
                                                                   "4bf30ac1dc0de7dfb375b7ebbbecdd2e",
                                                                   "91fa297c-cd20-4ab4-b469-6b28d237d2c6", -113,
                                                                   "44a68a89-d673-49de-8c51-9f61f34a30fe",
                                                                   "4bf30ac1dc0de7dfb375b7ebbbecdd2e",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1559143715686L));
            SubtenantApiKey subtenantapikey2 = new SubtenantApiKey("4bf30ac1dc0de7dfb375b7ebbbecdd2e",
                                                                   new Date(1559143718555L), -91,
                                                                   "4bf30ac1dc0de7dfb375b7ebbbecdd2e",
                                                                   "91fa297c-cd20-4ab4-b469-6b28d237d2c6", -113,
                                                                   "44a68a89-d673-49de-8c51-9f61f34a30fe",
                                                                   "4bf30ac1dc0de7dfb375b7ebbbecdd2e",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1559143715686L));
            SubtenantApiKey subtenantapikey3 = new SubtenantApiKey("4bf30ac1dc0de7dfb375b7ebbbecdd2e",
                                                                   new Date(1559143717452L), 93,
                                                                   "4bf30ac1dc0de7dfb375b7ebbbecdd2e",
                                                                   "57aaab9e-b665-4436-bc03-cb3f96f98635", -106,
                                                                   "5f0a5880-f876-451d-8c2d-3d3242e6976e",
                                                                   "4bf30ac1dc0de7dfb375b7ebbbecdd2e",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1559143716718L));
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotNull(subtenantapikey3);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertNotSame(subtenantapikey3, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey1, subtenantapikey2);
            assertEquals(subtenantapikey1, subtenantapikey1);
            assertFalse(subtenantapikey1.equals(null));
            assertNotEquals(subtenantapikey3, subtenantapikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
