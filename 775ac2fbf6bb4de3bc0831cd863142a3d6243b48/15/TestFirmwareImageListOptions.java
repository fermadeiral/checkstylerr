// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.deviceupdate.model;

import static org.junit.Assert.*;

import com.arm.mbed.cloud.sdk.common.Order;
import com.arm.mbed.cloud.sdk.common.listing.ListOptionsEncoder;
import com.arm.mbed.cloud.sdk.common.listing.filtering.FilterOperator;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import org.junit.Test;

/**
 * Unit tests for Model FirmwareImageListOptions.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestFirmwareImageListOptions {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            FirmwareImageListOptions firmwareimagelistoptions1 = new FirmwareImageListOptions(Integer.valueOf(-93),
                                                                                              Long.valueOf(-98),
                                                                                              Order.getDefault(),
                                                                                              "243cb8e4-80a5-4f03-8c05-5a096a916527",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions2 = firmwareimagelistoptions1.clone();
            assertNotNull(firmwareimagelistoptions1);
            assertNotNull(firmwareimagelistoptions2);
            assertNotSame(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the filters method.
     */
    @SuppressWarnings({ "boxing", "resource" })
    @Test
    public void testFilters() {
        try {
            FirmwareImageListOptions option = new FirmwareImageListOptions().inUpdatedAts(Arrays.asList(new Date(1559143719059L),
                                                                                                        new Date(1559143713192L)))
                                                                            .notInUpdatedAts(Arrays.asList(new Date(1559143719510L),
                                                                                                           new Date(1559143719182L),
                                                                                                           new Date(1559143717644L),
                                                                                                           new Date(1559143717052L),
                                                                                                           new Date(1559143714420L),
                                                                                                           new Date(1559143719018L)))
                                                                            .lessThanUpdatedAt(new Date(1559143714611L))
                                                                            .greaterThanUpdatedAt(new Date(1559143714961L))
                                                                            .equalToName("42e0b47f-96e9-4f5e-a61a-4c78055cc5be")
                                                                            .notEqualToName("ac5e3a76-4f92-4759-8cd2-7e2f365b8bde")
                                                                            .inNames(Arrays.asList("fb36d421-d587-4cb1-888c-74e00104a4d3",
                                                                                                   "022ea6bf-886f-4c8b-9221-5a128eb0db2c",
                                                                                                   "7fa710dd-471f-4272-bd2a-6f424252bdf9",
                                                                                                   "6ce78720-8de4-4f76-bfb8-17a02f6c69ce"))
                                                                            .notInNames(Arrays.asList("1c240804-bffd-4687-8c68-c2a210062186",
                                                                                                      "ed81ecce-0205-47df-a9b9-9e4de9e76b45",
                                                                                                      "a4f506e0-c64f-4b9f-b934-5a3c4d346c3f",
                                                                                                      "12258741-4bd6-4988-b112-0d446cd8ac0e",
                                                                                                      "7d03aa32-030a-44fb-a00c-9d1eefa5a7d2",
                                                                                                      "c4518a01-3ca4-42b2-9431-d6b70d82509a",
                                                                                                      "205f3552-442b-4a56-8ead-d25a300f8f5c",
                                                                                                      "f25db1ce-abaa-4eda-a684-e68d61fb63b7",
                                                                                                      "34e18906-203b-4859-9901-3b5ab7495cda"))
                                                                            .equalToDescription("3b748832-bb67-4faa-8ecc-7f222af70554")
                                                                            .notEqualToDescription("5c4172f3-9eff-47be-8a44-0e13e4b94cfa")
                                                                            .inDescriptions(Arrays.asList("71a0d2e3-a8fa-4336-b8b3-4935b4c7d86c",
                                                                                                          "ac92f868-fef3-4ab8-9d85-8a4ae5ef8863",
                                                                                                          "748e92d8-0283-4ec2-b39b-6573641e9e60",
                                                                                                          "d19cb1be-1601-43a0-9617-725d54e5bcf5",
                                                                                                          "01680fdb-d0cc-4867-b2b2-05182b341066"))
                                                                            .notInDescriptions(Arrays.asList("f72b3374-ff3e-44c1-b89a-e6ed1f05cc7c",
                                                                                                             "5694d54e-fa48-4b94-9b5f-1a029f9259c6",
                                                                                                             "f9c7ffc0-5bf6-4e04-97dd-09ef6a69db31",
                                                                                                             "9341e5b0-44d6-40f4-aeaf-43fc86d91904",
                                                                                                             "338b6b76-7d56-41d4-b097-1c68e5b929bc",
                                                                                                             "9ed03196-066e-482c-b2d2-6fbd15257589",
                                                                                                             "8b7d9f43-79f3-48b9-af3b-380f0c5e4e4a",
                                                                                                             "7698cd8c-ab5c-4f50-810b-634b6a251627",
                                                                                                             "30a686ba-a19b-4c20-b5b7-c0bd1056698a"))
                                                                            .inCreatedAts(Arrays.asList(new Date(1559143716459L),
                                                                                                        new Date(1559143718835L),
                                                                                                        new Date(1559143721723L),
                                                                                                        new Date(1559143714981L),
                                                                                                        new Date(1559143716314L),
                                                                                                        new Date(1559143717359L),
                                                                                                        new Date(1559143716504L),
                                                                                                        new Date(1559143719935L)))
                                                                            .notInCreatedAts(Arrays.asList(new Date(1559143716220L),
                                                                                                           new Date(1559143719807L),
                                                                                                           new Date(1559143716465L)))
                                                                            .lessThanCreatedAt(new Date(1559143715261L))
                                                                            .greaterThanCreatedAt(new Date(1559143718762L))
                                                                            .equalToDatafileUrl("2ed0e8df-66fd-428f-85e2-57c06828e98e")
                                                                            .notEqualToDatafileUrl("6bfb2b31-a32a-4366-85f5-bb1626cfb282")
                                                                            .inDatafileUrls(Arrays.asList("e49c5b62-f915-4ef9-844c-520eb882b4b8",
                                                                                                          "f21ec94f-0e22-44ba-a4b4-f6a980fef1b3",
                                                                                                          "ffc2c93a-3d45-477a-8b7c-f76d647e7b43",
                                                                                                          "6bba0c9c-524e-4af8-89ac-fa9274fea565"))
                                                                            .notInDatafileUrls(Arrays.asList("c09642a0-dc8b-4c80-939e-6d21cc1514b8"))
                                                                            .equalToDatafileSize(Long.valueOf(40))
                                                                            .notEqualToDatafileSize(Long.valueOf(91))
                                                                            .inDatafileSizes(Arrays.asList(Long.valueOf(41),
                                                                                                           Long.valueOf(-27),
                                                                                                           Long.valueOf(-108),
                                                                                                           Long.valueOf(21),
                                                                                                           Long.valueOf(-83),
                                                                                                           Long.valueOf(-4)))
                                                                            .notInDatafileSizes(Arrays.asList(Long.valueOf(-60),
                                                                                                              Long.valueOf(111),
                                                                                                              Long.valueOf(-69),
                                                                                                              Long.valueOf(43),
                                                                                                              Long.valueOf(90)))
                                                                            .equalToDatafileChecksum("5a42cbd3-44df-4f84-829f-b8f60408925f")
                                                                            .notEqualToDatafileChecksum("11c119e8-6944-4e7e-b25d-05d703599948")
                                                                            .inDatafileChecksums(Arrays.asList("03fe185f-1c21-4612-b50d-9c68327d02fd",
                                                                                                               "5ba42e01-7211-4ac0-a5de-304bb4db7233",
                                                                                                               "1e837f77-b390-49fd-8671-b57d29fdbd20"))
                                                                            .notInDatafileChecksums(Arrays.asList("152467ca-b2f0-402a-a3ec-756ba9f52219",
                                                                                                                  "26157769-d050-4de1-a3d6-36780ff17ed2",
                                                                                                                  "c9b006ce-d699-4db6-a612-d050688be810",
                                                                                                                  "cd5dbf81-72b7-4623-9129-5525ed1f78df"))
                                                                            .equalToId("4ea750da-b285-4807-8c6c-f977fcc50740")
                                                                            .notEqualToId("be4194e5-47bf-41d5-8122-00350c54e1c9")
                                                                            .inIds(Arrays.asList("6d2ae7f5-7257-446a-8038-ee9c1832d56a",
                                                                                                 "3f43b7c6-d4b0-4a95-86bf-3b36bbbd26b7",
                                                                                                 "b901778d-7d7b-4036-bd72-8d7a7f561bad",
                                                                                                 "bba1a5b8-c6e6-4b60-ad75-7d407d5ff2fb"))
                                                                            .notInIds(Arrays.asList("471ea945-e51d-4ec9-afba-e440b1ed566e",
                                                                                                    "1f566ef9-3986-4336-aa0b-04ec18e287ae",
                                                                                                    "2e0bebec-cc84-4758-95da-3aef4832d649",
                                                                                                    "1f6ab354-6842-40f0-a36c-89f9e689c31e",
                                                                                                    "bffcf7e1-bdd4-4cd5-b207-0c190cea48b3",
                                                                                                    "3b23ff7f-4b8f-4ab7-aa60-010cb4ede091"));
            assertTrue(option.hasFilters());
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559143719059L), new Date(1559143713192L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559143719510L), new Date(1559143719182L), new Date(1559143717644L),
                                       new Date(1559143717052L), new Date(1559143714420L), new Date(1559143719018L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.LESS_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1559143714611L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1559143714961L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("42e0b47f-96e9-4f5e-a61a-4c78055cc5be",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("ac5e3a76-4f92-4759-8cd2-7e2f365b8bde",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("fb36d421-d587-4cb1-888c-74e00104a4d3", "022ea6bf-886f-4c8b-9221-5a128eb0db2c",
                                       "7fa710dd-471f-4272-bd2a-6f424252bdf9", "6ce78720-8de4-4f76-bfb8-17a02f6c69ce"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("1c240804-bffd-4687-8c68-c2a210062186", "ed81ecce-0205-47df-a9b9-9e4de9e76b45",
                                       "a4f506e0-c64f-4b9f-b934-5a3c4d346c3f", "12258741-4bd6-4988-b112-0d446cd8ac0e",
                                       "7d03aa32-030a-44fb-a00c-9d1eefa5a7d2", "c4518a01-3ca4-42b2-9431-d6b70d82509a",
                                       "205f3552-442b-4a56-8ead-d25a300f8f5c", "f25db1ce-abaa-4eda-a684-e68d61fb63b7",
                                       "34e18906-203b-4859-9901-3b5ab7495cda"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("3b748832-bb67-4faa-8ecc-7f222af70554",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("5c4172f3-9eff-47be-8a44-0e13e4b94cfa",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("71a0d2e3-a8fa-4336-b8b3-4935b4c7d86c", "ac92f868-fef3-4ab8-9d85-8a4ae5ef8863",
                                       "748e92d8-0283-4ec2-b39b-6573641e9e60", "d19cb1be-1601-43a0-9617-725d54e5bcf5",
                                       "01680fdb-d0cc-4867-b2b2-05182b341066"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("f72b3374-ff3e-44c1-b89a-e6ed1f05cc7c", "5694d54e-fa48-4b94-9b5f-1a029f9259c6",
                                       "f9c7ffc0-5bf6-4e04-97dd-09ef6a69db31", "9341e5b0-44d6-40f4-aeaf-43fc86d91904",
                                       "338b6b76-7d56-41d4-b097-1c68e5b929bc", "9ed03196-066e-482c-b2d2-6fbd15257589",
                                       "8b7d9f43-79f3-48b9-af3b-380f0c5e4e4a", "7698cd8c-ab5c-4f50-810b-634b6a251627",
                                       "30a686ba-a19b-4c20-b5b7-c0bd1056698a"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559143716459L), new Date(1559143718835L), new Date(1559143721723L),
                                       new Date(1559143714981L), new Date(1559143716314L), new Date(1559143717359L),
                                       new Date(1559143716504L), new Date(1559143719935L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1559143716220L), new Date(1559143719807L), new Date(1559143716465L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.LESS_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1559143715261L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1559143718762L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("2ed0e8df-66fd-428f-85e2-57c06828e98e",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("6bfb2b31-a32a-4366-85f5-bb1626cfb282",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("e49c5b62-f915-4ef9-844c-520eb882b4b8", "f21ec94f-0e22-44ba-a4b4-f6a980fef1b3",
                                       "ffc2c93a-3d45-477a-8b7c-f76d647e7b43", "6bba0c9c-524e-4af8-89ac-fa9274fea565"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("c09642a0-dc8b-4c80-939e-6d21cc1514b8"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(40),
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    Long.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(91),
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                       Long.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(41), Long.valueOf(-27), Long.valueOf(-108), Long.valueOf(21),
                                       Long.valueOf(-83), Long.valueOf(-4)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(-60), Long.valueOf(111), Long.valueOf(-69), Long.valueOf(43),
                                       Long.valueOf(90)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                        FilterOperator.EQUAL));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals("5a42cbd3-44df-4f84-829f-b8f60408925f",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals("11c119e8-6944-4e7e-b25d-05d703599948",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM, FilterOperator.IN));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals(Arrays.asList("03fe185f-1c21-4612-b50d-9c68327d02fd", "5ba42e01-7211-4ac0-a5de-304bb4db7233",
                                       "1e837f77-b390-49fd-8671-b57d29fdbd20"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                        FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals(Arrays.asList("152467ca-b2f0-402a-a3ec-756ba9f52219", "26157769-d050-4de1-a3d6-36780ff17ed2",
                                       "c9b006ce-d699-4db6-a612-d050688be810", "cd5dbf81-72b7-4623-9129-5525ed1f78df"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("4ea750da-b285-4807-8c6c-f977fcc50740",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("be4194e5-47bf-41d5-8122-00350c54e1c9",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("6d2ae7f5-7257-446a-8038-ee9c1832d56a", "3f43b7c6-d4b0-4a95-86bf-3b36bbbd26b7",
                                       "b901778d-7d7b-4036-bd72-8d7a7f561bad", "bba1a5b8-c6e6-4b60-ad75-7d407d5ff2fb"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, List.class,
                                                                 option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("471ea945-e51d-4ec9-afba-e440b1ed566e", "1f566ef9-3986-4336-aa0b-04ec18e287ae",
                                       "2e0bebec-cc84-4758-95da-3aef4832d649", "1f6ab354-6842-40f0-a36c-89f9e689c31e",
                                       "bffcf7e1-bdd4-4cd5-b207-0c190cea48b3", "3b23ff7f-4b8f-4ab7-aa60-010cb4ede091"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID,
                                                                    List.class, option));
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            FirmwareImageListOptions firmwareimagelistoptions1 = new FirmwareImageListOptions(Integer.valueOf(122),
                                                                                              Long.valueOf(-52),
                                                                                              Order.getDefault(),
                                                                                              "66fb7af6-1d44-4d67-a0c7-41ea85315273",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions2 = new FirmwareImageListOptions(Integer.valueOf(122),
                                                                                              Long.valueOf(-52),
                                                                                              Order.getDefault(),
                                                                                              "66fb7af6-1d44-4d67-a0c7-41ea85315273",
                                                                                              null, null);
            assertNotNull(firmwareimagelistoptions1);
            assertNotNull(firmwareimagelistoptions2);
            assertNotSame(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2.hashCode(), firmwareimagelistoptions1.hashCode());
            int hashCode = firmwareimagelistoptions1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, firmwareimagelistoptions1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            FirmwareImageListOptions firmwareimagelistoptions1 = new FirmwareImageListOptions(Integer.valueOf(111),
                                                                                              Long.valueOf(103),
                                                                                              Order.getDefault(),
                                                                                              "acffef24-6a88-4de3-b34e-57a886064db0",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions2 = new FirmwareImageListOptions(Integer.valueOf(111),
                                                                                              Long.valueOf(103),
                                                                                              Order.getDefault(),
                                                                                              "acffef24-6a88-4de3-b34e-57a886064db0",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions3 = new FirmwareImageListOptions(Integer.valueOf(111),
                                                                                              Long.valueOf(124),
                                                                                              Order.getDefault(),
                                                                                              "8932b30b-1367-4119-a2e4-a344a4028b84",
                                                                                              null, null);
            assertNotNull(firmwareimagelistoptions1);
            assertNotNull(firmwareimagelistoptions2);
            assertNotNull(firmwareimagelistoptions3);
            assertNotSame(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertNotSame(firmwareimagelistoptions3, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions1, firmwareimagelistoptions2);
            assertEquals(firmwareimagelistoptions1, firmwareimagelistoptions1);
            assertFalse(firmwareimagelistoptions1.equals(null));
            assertNotEquals(firmwareimagelistoptions3, firmwareimagelistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
