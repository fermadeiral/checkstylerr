// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEnrollment.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEnrollment {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEnrollment deviceenrollment1 = new DeviceEnrollment("5c532eb2-c4b2-40f3-ae2a-63322961e777",
                                                                      new Date(1559143721600L),
                                                                      new Date(1559143721362L),
                                                                      "1E09BtbpXj7EPHVfYcqt5HgaBiVRLp23",
                                                                      "A-mTAUT1yOF62NaeF1QZB0fzhDqOVmDaeW4nxi7P17KXe5cO5s3F6MEl1zD7Is4RuLKralLB4Qt:M72Wvw7t1Po9Cy0pJ:a3l",
                                                                      new Date(1559143716926L),
                                                                      "1E09BtbpXj7EPHVfYcqt5HgaBiVRLp23");
            DeviceEnrollment deviceenrollment2 = deviceenrollment1.clone();
            assertNotNull(deviceenrollment1);
            assertNotNull(deviceenrollment2);
            assertNotSame(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEnrollment deviceenrollment1 = new DeviceEnrollment("46c5a483-3d77-432b-bad6-6a80494dd79a",
                                                                      new Date(1559143721503L),
                                                                      new Date(1559143720794L),
                                                                      "1E09BtbpXj7EPHVfYcqt5HgaBiVRLp23",
                                                                      "A-mTAUT1yOF62NaeF1QZB0fzhDqOVmDaeW4nxi7P17KXe5cO5s3F6MEl1zD7Is4RuLKralLB4Qt:M72Wvw7t1Po9Cy0pJ:a3l",
                                                                      new Date(1559143721782L),
                                                                      "1E09BtbpXj7EPHVfYcqt5HgaBiVRLp23");
            DeviceEnrollment deviceenrollment2 = new DeviceEnrollment("46c5a483-3d77-432b-bad6-6a80494dd79a",
                                                                      new Date(1559143721503L),
                                                                      new Date(1559143720794L),
                                                                      "1E09BtbpXj7EPHVfYcqt5HgaBiVRLp23",
                                                                      "A-mTAUT1yOF62NaeF1QZB0fzhDqOVmDaeW4nxi7P17KXe5cO5s3F6MEl1zD7Is4RuLKralLB4Qt:M72Wvw7t1Po9Cy0pJ:a3l",
                                                                      new Date(1559143721782L),
                                                                      "1E09BtbpXj7EPHVfYcqt5HgaBiVRLp23");
            assertNotNull(deviceenrollment1);
            assertNotNull(deviceenrollment2);
            assertNotSame(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2.hashCode(), deviceenrollment1.hashCode());
            int hashCode = deviceenrollment1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceenrollment1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEnrollment deviceenrollment = new DeviceEnrollment("cef46a1d-d0ff-404d-b589-133ebd2f6dd1",
                                                                 new Date(1559143716029L), new Date(1559143714097L),
                                                                 "1E09BtbpXj7EPHVfYcqt5HgaBiVRLp23",
                                                                 "A-mTAUT1yOF62NaeF1QZB0fzhDqOVmDaeW4nxi7P17KXe5cO5s3F6MEl1zD7Is4RuLKralLB4Qt:M72Wvw7t1Po9Cy0pJ:a3l",
                                                                 new Date(1559143720288L),
                                                                 "1E09BtbpXj7EPHVfYcqt5HgaBiVRLp23");
        assertTrue(deviceenrollment.isValid());
        DeviceEnrollment deviceenrollmentInvalid = new DeviceEnrollment("0f233403-1fda-42b3-897f-578905894d61",
                                                                        new Date(1559143714378L),
                                                                        new Date(1559143718841L),
                                                                        "DhnsO왎IQDr6m:46@W慺h;Q欹K@S@dW8dIhW\u0011@4F䚟\u0004죃D#WC4U\\\\6hs8d힆4ds8hJ_GWsJ",
                                                                        null, new Date(1559143716911L),
                                                                        "DhnsO왎IQDr6m:46@W慺h;Q欹K@S@dW8dIhW\u0011@4F䚟\u0004죃D#WC4U\\\\6hs8d힆4ds8hJ_GWsJ");
        assertFalse(deviceenrollmentInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEnrollment deviceenrollment1 = new DeviceEnrollment("2f24d6ea-3116-4c88-a83f-ce78cf058fb5",
                                                                      new Date(1559143716114L),
                                                                      new Date(1559143718080L),
                                                                      "1E09BtbpXj7EPHVfYcqt5HgaBiVRLp23",
                                                                      "A-mTAUT1yOF62NaeF1QZB0fzhDqOVmDaeW4nxi7P17KXe5cO5s3F6MEl1zD7Is4RuLKralLB4Qt:M72Wvw7t1Po9Cy0pJ:a3l",
                                                                      new Date(1559143713755L),
                                                                      "1E09BtbpXj7EPHVfYcqt5HgaBiVRLp23");
            DeviceEnrollment deviceenrollment2 = new DeviceEnrollment("2f24d6ea-3116-4c88-a83f-ce78cf058fb5",
                                                                      new Date(1559143716114L),
                                                                      new Date(1559143718080L),
                                                                      "1E09BtbpXj7EPHVfYcqt5HgaBiVRLp23",
                                                                      "A-mTAUT1yOF62NaeF1QZB0fzhDqOVmDaeW4nxi7P17KXe5cO5s3F6MEl1zD7Is4RuLKralLB4Qt:M72Wvw7t1Po9Cy0pJ:a3l",
                                                                      new Date(1559143713755L),
                                                                      "1E09BtbpXj7EPHVfYcqt5HgaBiVRLp23");
            DeviceEnrollment deviceenrollment3 = new DeviceEnrollment("a1738d19-e962-4e77-b93b-ad5b94c044b8",
                                                                      new Date(1559143713105L),
                                                                      new Date(1559143714610L),
                                                                      "1E09BtbpXj7EPHVfYcqt5HgaBiVRLp23",
                                                                      "A-mTAUT1yOF62NaeF1QZB0fzhDqOVmDaeW4nxi7P17KXe5cO5s3F6MEl1zD7Is4RuLKralLB4Qt:M72Wvw7t1Po9Cy0pJ:a3l",
                                                                      new Date(1559143715403L),
                                                                      "1E09BtbpXj7EPHVfYcqt5HgaBiVRLp23");
            assertNotNull(deviceenrollment1);
            assertNotNull(deviceenrollment2);
            assertNotNull(deviceenrollment3);
            assertNotSame(deviceenrollment2, deviceenrollment1);
            assertNotSame(deviceenrollment3, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment1, deviceenrollment2);
            assertEquals(deviceenrollment1, deviceenrollment1);
            assertFalse(deviceenrollment1.equals(null));
            assertNotEquals(deviceenrollment3, deviceenrollment1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
