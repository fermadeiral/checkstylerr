// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceGroup.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceGroup {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceGroup devicegroup1 = new DeviceGroup(new Date(1570127621012L), null,
                                                       "bc5f8a60-47fb-4fdb-add1-33502e580b3c", -109,
                                                       "31c47238-b06f-42e1-b61e-0c227bfa815d",
                                                       "1bb356a7-84f0-40dd-9cdb-349570f9f466",
                                                       new Date(1570127625292L));
            DeviceGroup devicegroup2 = devicegroup1.clone();
            assertNotNull(devicegroup1);
            assertNotNull(devicegroup2);
            assertNotSame(devicegroup2, devicegroup1);
            assertEquals(devicegroup2, devicegroup1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceGroup devicegroup1 = new DeviceGroup(new Date(1570127621661L), null,
                                                       "8681ccd3-1e34-4069-8fe2-09d8adb995a2", -93,
                                                       "5a17b1e6-046c-4dab-a0b3-fb43756ff14a",
                                                       "862457ea-d441-4c45-8de5-c48af7c34bbd",
                                                       new Date(1570127626768L));
            DeviceGroup devicegroup2 = new DeviceGroup(new Date(1570127621661L), null,
                                                       "8681ccd3-1e34-4069-8fe2-09d8adb995a2", -93,
                                                       "5a17b1e6-046c-4dab-a0b3-fb43756ff14a",
                                                       "862457ea-d441-4c45-8de5-c48af7c34bbd",
                                                       new Date(1570127626768L));
            assertNotNull(devicegroup1);
            assertNotNull(devicegroup2);
            assertNotSame(devicegroup2, devicegroup1);
            assertEquals(devicegroup2, devicegroup1);
            assertEquals(devicegroup2.hashCode(), devicegroup1.hashCode());
            int hashCode = devicegroup1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, devicegroup1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceGroup devicegroup = new DeviceGroup(new Date(1570127620215L), null,
                                                  "393eaca0-05ea-46e1-8e54-22c8d14cf5a5", -27,
                                                  "5db0c15f-4324-4a67-8d5a-a85352d97461",
                                                  "96f513c8-1df0-47b0-ad45-3cd6bf69867c", new Date(1570127617581L));
        assertTrue(devicegroup.isValid());
        DeviceGroup devicegroupInvalid = new DeviceGroup(new Date(1570127623672L), null,
                                                         "543c69e5-42fa-4b6f-ad46-3ed9c05a3f70526b7dbc-1427-40ac-babf-54d5abebefc62f2df209-8602-4c48-bfa2-e96a4d684c08ebe25f32-202c-43f6-9d40-33bbd44985719900c821-0aa1-48d7-8662-444424d28fda78a58c06-eac6-4492-b2ec-1f5a479f08e1b04ac6bc-ecbf-4962-9ab7-75cb33954fe3476a695b-441c-46e0-a6e5-c3f173cabfdb09379e45-4af2-4e63-93a5-1e5e7aa265c55cb17ec1-67e5-4b3e-93d9-24caac78b5adbc747fa2-b139-4445-9c65-9026ddc76d2d29b7323f-c418-4ee4-8a24-f0bc9d980997d5d9595f-440b-4302-a1b0-8b95a53fa15cf75692d0-53fa-4e84-a839-bbcae9d49f54688c4160-b951-4fa9-8785-a4154251cfb095e71fe1-859b-442c-9da3-bff2251275b3e178b92a-dbdf-4862-b281-0987dc24da711e6d41c9-aed1-4b00-8372-94f54e5b78b3a75ed594-c55c-48a6-b881-249e068965d4e96bd2a1-2e76-4a5b-b397-b79eb29b263cab503f91-d451-4140-a868-dda0503f3addc01c9a52-8ef9-42a7-b38a-5128b960b127c2ad028f-2e5f-4044-964b-30bdb3bb8c90ca85ed08-0b1b-4891-89d9-68a1799725a21d5d5b5c-bc43-4f37-98d5-ce87d58124e319382db6-b916-45cd-8560-1a8cc41bdaecd820071b-42c7-4dc7-8d24-9a046a8c6601066ea7ad-0bf0-4c58-9531-748675e3b1d2975694b8-e8bb-460b-a5a9-516d9f842d0d24160589-2e29-4d8f-8b8c-356c0fc2c1aef5675e4e-6f0a-4ac7-a5bf-816f4e5f2b26713c080c-2499-47b8-9b48-d6cac21e0c4b1c2ec911-5157-4f4f-9d78-5aa4eda37e756cc4efac-d37c-405e-bd10-86f431328f71b7303339-960e-4efb-bacf-9d8711ff6224eb8db6ad-ac4b-4a29-8422-294fe24b779c1ad36c04-4927-4512-8aa3-4a963e596cd6031ef6f6-f2d6-4d00-b76b-a3c4d1a8641ef9fa4611-6ec3-49b5-a3b9-17e28b8e0cdae7add351-ce00-45a6-98fe-e3b84d80bce221152b45-8b71-43ec-a1ff-edf7beca71e7225433ec-2641-4cbc-b4ba-94436225507664fbe315-8725-4f30-923b-7912f1575ffdab6299b3-ef6f-4b12-81b0-cf213ead8b60532a16d6-2b1e-4b70-9a94-8ab3e4a22844516d6949-aa43-498c-b821-5aba758367f271fe06ff-b2a5-4abd-a013-61652a9216193299a672-c601-475e-b751-b52161c1d46251ce6b24-b0e0-493a-9428-a3ea3619d528ca4eca27-5e95-4af0-91e6-ae2ee93720dcb1186f8b-9fa7-47a9-a324-3c1b8cc9ebbc306b0745-d70f-4b08-b1e6-c180137c46236992478d-71a0-4aa0-a693-d687969408c36adae369-0554-479d-b29d-5765a9745ee8f6e8d717-0611-401a-8627-e5e99b1c05f6ee1b9cb0-9296-4aa3-b40d-9577d6f822b4",
                                                         -20, "373aa371-de71-4cf6-9863-3bb490b5d61e",
                                                         "0950fa5a-0587-4c01-8ddd-4486531018d80eabf0df-0c78-4756-92e2-a72cab2021fbdc807d3e-cc1d-4d71-91be-cec8ccc89ae4c5b851e7-31c1-41f3-9357-5f5ba6260f9d",
                                                         new Date(1570127620681L));
        assertFalse(devicegroupInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceGroup devicegroup1 = new DeviceGroup(new Date(1570127624595L), null,
                                                       "5b751fbc-7388-4add-9299-4dd9fcfe90f1", -87,
                                                       "d35939ec-c16c-4fe8-9872-2dd903aea5c8",
                                                       "963b3509-d2db-4d4f-afae-6ae7219470eb",
                                                       new Date(1570127621842L));
            DeviceGroup devicegroup2 = new DeviceGroup(new Date(1570127624595L), null,
                                                       "5b751fbc-7388-4add-9299-4dd9fcfe90f1", -87,
                                                       "d35939ec-c16c-4fe8-9872-2dd903aea5c8",
                                                       "963b3509-d2db-4d4f-afae-6ae7219470eb",
                                                       new Date(1570127621842L));
            DeviceGroup devicegroup3 = new DeviceGroup(new Date(1570127619482L), null,
                                                       "b770b0da-3fc8-4695-9e18-38d0ccd07d9e", -13,
                                                       "6719719a-0d51-457c-930a-7e00a7bcb6bf",
                                                       "6864c992-c7c7-4d12-b089-e20181497e3d",
                                                       new Date(1570127626870L));
            assertNotNull(devicegroup1);
            assertNotNull(devicegroup2);
            assertNotNull(devicegroup3);
            assertNotSame(devicegroup2, devicegroup1);
            assertNotSame(devicegroup3, devicegroup1);
            assertEquals(devicegroup2, devicegroup1);
            assertEquals(devicegroup2, devicegroup1);
            assertEquals(devicegroup1, devicegroup2);
            assertEquals(devicegroup1, devicegroup1);
            assertFalse(devicegroup1.equals(null));
            assertNotEquals(devicegroup3, devicegroup1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
