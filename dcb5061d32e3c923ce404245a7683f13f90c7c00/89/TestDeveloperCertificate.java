// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.security.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeveloperCertificate.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeveloperCertificate {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("8dae8329-a5a6-416e-a949-bdc640b6b405",
                                                                                  "dc34adef-47ae-4b5d-bcde-fd78f51a9cfa",
                                                                                  new Date(1570127620502L),
                                                                                  "e51ce024-6c58-43e5-85d4-e9a1d5cf8923",
                                                                                  "837fd58c-d876-4f2f-8383-f34422ddd542",
                                                                                  "240da13d-7d08-4190-b8b6-13141c319a74",
                                                                                  "fb29f137-05e4-4df2-a74a-aadffa303d80",
                                                                                  "28382b6a-02dd-4beb-a63e-12ddc39d83b0");
            DeveloperCertificate developercertificate2 = developercertificate1.clone();
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("6d82b6cc-77ef-4483-abb2-7c20b9e7663d",
                                                                                  "a3261b32-8771-4192-8c56-a07154043dc5",
                                                                                  new Date(1570127623752L),
                                                                                  "0547f18d-5eb1-494e-98aa-134559331796",
                                                                                  "c05b488a-8d0b-4221-8439-acaf96b9a387",
                                                                                  "256fa3b4-0690-4c05-88ec-dc36778df0d1",
                                                                                  "5a47f211-eecd-49a6-9536-a6629457a13e",
                                                                                  "5f5be6e0-9255-4f2a-a3b2-d521815b4b28");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("6d82b6cc-77ef-4483-abb2-7c20b9e7663d",
                                                                                  "a3261b32-8771-4192-8c56-a07154043dc5",
                                                                                  new Date(1570127623752L),
                                                                                  "0547f18d-5eb1-494e-98aa-134559331796",
                                                                                  "c05b488a-8d0b-4221-8439-acaf96b9a387",
                                                                                  "256fa3b4-0690-4c05-88ec-dc36778df0d1",
                                                                                  "5a47f211-eecd-49a6-9536-a6629457a13e",
                                                                                  "5f5be6e0-9255-4f2a-a3b2-d521815b4b28");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2.hashCode(), developercertificate1.hashCode());
            int hashCode = developercertificate1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, developercertificate1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeveloperCertificate developercertificate = new DeveloperCertificate("db1c6720-5fc5-4679-9532-5a748f5b1338",
                                                                             "e682d250-fef4-4228-89ee-d2140f5d02c0",
                                                                             new Date(1570127623486L),
                                                                             "811790c1-3873-4206-9ff9-9d5bccd5e8d2",
                                                                             "7c1830b2-416f-46bb-baa8-05648b8cbfb9",
                                                                             "3bab1156-e74c-448f-aec0-f0eb6fe54f11",
                                                                             "b8205956-d5a4-4340-8359-46e678e73c67",
                                                                             "33e138ae-7668-4e2b-8c6a-faea3e9a29ae");
        assertTrue(developercertificate.isValid());
        DeveloperCertificate developercertificateInvalid = new DeveloperCertificate("89c40bff-68c4-4f4a-8867-d7f316321e0c",
                                                                                    "e8cf9dea-93ad-4302-9dd4-854f12bd9adb",
                                                                                    new Date(1570127624306L),
                                                                                    "00154077-c42d-40be-8f1c-a54c2d9aea25",
                                                                                    "82cfaf23-3702-4bd9-aaad-0c14b33c7212",
                                                                                    "2dd4882d-5f7c-4fe0-8d1b-cdc81abd3467",
                                                                                    null,
                                                                                    "75d52ddc-d0a9-4a81-99ab-2947e652a474");
        assertFalse(developercertificateInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("7ddd5026-c0be-4e44-95e4-527244250cd2",
                                                                                  "5107a412-e93f-4614-9dde-c6bb8e0bac77",
                                                                                  new Date(1570127623080L),
                                                                                  "270a1d85-67bf-4f6e-9426-d59272fa1822",
                                                                                  "25a3f7de-633c-4d92-aac2-85ceeac96f91",
                                                                                  "23802dcb-f5c3-402c-8801-74d1cd6d0960",
                                                                                  "79de0b8d-8009-4e08-af18-232e2a239f34",
                                                                                  "623403f8-8340-487b-b0b7-b5aed95d5fc3");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("7ddd5026-c0be-4e44-95e4-527244250cd2",
                                                                                  "5107a412-e93f-4614-9dde-c6bb8e0bac77",
                                                                                  new Date(1570127623080L),
                                                                                  "270a1d85-67bf-4f6e-9426-d59272fa1822",
                                                                                  "25a3f7de-633c-4d92-aac2-85ceeac96f91",
                                                                                  "23802dcb-f5c3-402c-8801-74d1cd6d0960",
                                                                                  "79de0b8d-8009-4e08-af18-232e2a239f34",
                                                                                  "623403f8-8340-487b-b0b7-b5aed95d5fc3");
            DeveloperCertificate developercertificate3 = new DeveloperCertificate("1e49aad1-ec1d-4e3a-9afe-dc61b3b05fa3",
                                                                                  "308e436b-0b2f-4d5b-9077-13658c28b33f",
                                                                                  new Date(1570127621547L),
                                                                                  "5d426878-9002-4930-a8ea-8f4ac87137c2",
                                                                                  "8b3a213e-9c35-47a1-bc41-3db548e620d0",
                                                                                  "271dc338-54b6-4320-a6eb-765cb7e89ad2",
                                                                                  "561da917-d049-4902-9828-443d41dd95a4",
                                                                                  "211f7558-4131-4b49-a8fb-ca82d22db644");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotNull(developercertificate3);
            assertNotSame(developercertificate2, developercertificate1);
            assertNotSame(developercertificate3, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate1, developercertificate2);
            assertEquals(developercertificate1, developercertificate1);
            assertFalse(developercertificate1.equals(null));
            assertNotEquals(developercertificate3, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
