// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model User.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestUser {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            User user1 = new User("bd1f89fbddbde18d4244b748ca1d250b", null, "0e3c7116-6869-4a01-86a5-c7384778922a",
                                  new Date(1570127627332L), 103, null, "2b989.a4dd2@7b4b5.fr", false,
                                  "86e88be9-1a6d-4d69-ae37-60e3e6af5993", "bd1f89fbddbde18d4244b748ca1d250b", true,
                                  true, false, 1, null, null, "f7e2177c-07b5-4e80-ba06-54b257a13fbe", 0,
                                  "e5c53a47-c5f7-4d73-82e9-3cd6d5edb142", UserStatus.getDefault(), null,
                                  new Date(1570127624998L), "=Yv=_=S");
            User user2 = user1.clone();
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotSame(user2, user1);
            assertEquals(user2, user1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            User user1 = new User("bd1f89fbddbde18d4244b748ca1d250b", null, "af1b4eb4-b585-40e0-98ce-c09876fe369d",
                                  new Date(1570127620927L), -51, null, "9505c.1e307@01303.fr", true,
                                  "d7264bd5-781b-43c5-a6a3-220c41c2483b", "bd1f89fbddbde18d4244b748ca1d250b", false,
                                  true, false, 81, null, null, "f11a369e-6e3f-47ed-af45-6c1bdb2ad237", 56,
                                  "c30a0c5a-e019-4051-9e57-74f0d92e21cf", UserStatus.getDefault(), null,
                                  new Date(1570127623571L), "=Yv=_=S");
            User user2 = new User("bd1f89fbddbde18d4244b748ca1d250b", null, "af1b4eb4-b585-40e0-98ce-c09876fe369d",
                                  new Date(1570127620927L), -51, null, "9505c.1e307@01303.fr", true,
                                  "d7264bd5-781b-43c5-a6a3-220c41c2483b", "bd1f89fbddbde18d4244b748ca1d250b", false,
                                  true, false, 81, null, null, "f11a369e-6e3f-47ed-af45-6c1bdb2ad237", 56,
                                  "c30a0c5a-e019-4051-9e57-74f0d92e21cf", UserStatus.getDefault(), null,
                                  new Date(1570127623571L), "=Yv=_=S");
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotSame(user2, user1);
            assertEquals(user2, user1);
            assertEquals(user2.hashCode(), user1.hashCode());
            int hashCode = user1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, user1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        User user = new User("bd1f89fbddbde18d4244b748ca1d250b", null, "3a0b19dc-3dc0-4d52-bdfe-80379d1479c0",
                             new Date(1570127625738L), -68, null, "71c4c.2ea7c@f594e.me", false,
                             "8d099b48-a36f-4489-ab9b-24cc57c499c4", "bd1f89fbddbde18d4244b748ca1d250b", false, false,
                             false, -12, null, null, "9221f685-bd1e-4e5e-adfb-09552cf94867", -69,
                             "00aabb91-2be9-4016-9ef6-c2ce995eed9b", UserStatus.getDefault(), null,
                             new Date(1570127623066L), "=Yv=_=S");
        assertTrue(user.isValid());
        User userInvalid = new User("33D\u0007663æ¸§3F!\u00003îŒ½$$?R3YáŸ²636\u0011ì§¢3ã©º33àª„6\u0014\u0001\u001cK'+ë™½ë²™\u001c6\u0002\u0004ä‚…=O3\u00133 Xîª‡\u0010à¡›6_36Fá«µ\u001736",
                                    null, "2bc4120a-6211-46ce-8aa1-7aed8d98600c", new Date(1570127626672L), 2, null,
                                    null, true,
                                    "426cc822-d305-4a01-a063-e7a4b2cfab8b7bff2654-6a6f-4537-9fc3-d218e89b8bd86476b418-1125-46d4-8022-1b2f7bfad039",
                                    "33D\u0007663æ¸§3F!\u00003îŒ½$$?R3YáŸ²636\u0011ì§¢3ã©º33àª„6\u0014\u0001\u001cK'+ë™½ë²™\u001c6\u0002\u0004ä‚…=O3\u00133 Xîª‡\u0010à¡›6_36Fá«µ\u001736",
                                    false, true, true, -27, null, null, "fb3e9e54-211d-4470-a44d-009f4e9cd162", -62,
                                    "864a4604-6600-46ad-8ec0-d39d2fae6f11c45cee7f-a162-48aa-a4b2-000a2a5d74e8f30cdc4a-7dbe-405b-921c-6c1b0b7852de",
                                    UserStatus.getDefault(), null, new Date(1570127622388L),
                                    "mXnã³’TTé»Š]tO\u0006^í“¼[ã•¶î?žâ˜?\u000e`t\u0019ï«¸g^bFï®ˆ\u0006ë°¾ê¢¡Dì©žBs\u0007á«?Ju`VWlWpb.NT\u0003\u000fEã—ˆã‚£ZK]\u001d?G\u0003R8");
        assertFalse(userInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            User user1 = new User("bd1f89fbddbde18d4244b748ca1d250b", null, "f2c0cd4e-a3b1-4a9b-8c42-762049846ea0",
                                  new Date(1570127618053L), -120, null, "3e668.28fc2@b1f51.me", false,
                                  "d64e88ba-900e-4adf-ad07-cbfd797ec9d4", "bd1f89fbddbde18d4244b748ca1d250b", true,
                                  false, true, 18, null, null, "1fe89aa3-3735-4124-b1b6-e0102209c3bb", 108,
                                  "1b8bbd33-92d9-45de-b7ed-1cd6c39c12b2", UserStatus.getDefault(), null,
                                  new Date(1570127627380L), "=Yv=_=S");
            User user2 = new User("bd1f89fbddbde18d4244b748ca1d250b", null, "f2c0cd4e-a3b1-4a9b-8c42-762049846ea0",
                                  new Date(1570127618053L), -120, null, "3e668.28fc2@b1f51.me", false,
                                  "d64e88ba-900e-4adf-ad07-cbfd797ec9d4", "bd1f89fbddbde18d4244b748ca1d250b", true,
                                  false, true, 18, null, null, "1fe89aa3-3735-4124-b1b6-e0102209c3bb", 108,
                                  "1b8bbd33-92d9-45de-b7ed-1cd6c39c12b2", UserStatus.getDefault(), null,
                                  new Date(1570127627380L), "=Yv=_=S");
            User user3 = new User("bd1f89fbddbde18d4244b748ca1d250b", null, "2a5c5da9-18e4-4904-8dc5-690e326958cd",
                                  new Date(1570127624294L), -124, null, "85e70.12e98@f73ef.fr", false,
                                  "d5e21625-de83-4a61-927b-a16962f37038", "bd1f89fbddbde18d4244b748ca1d250b", true,
                                  false, true, 89, null, null, "ee008149-e146-4e22-a7f4-d77e18ef7d52", 103,
                                  "31c5823e-bcdf-45b0-ab0f-d64143be4ab0", UserStatus.getDefault(), null,
                                  new Date(1570127624275L), "=Yv=_=S");
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotNull(user3);
            assertNotSame(user2, user1);
            assertNotSame(user3, user1);
            assertEquals(user2, user1);
            assertEquals(user2, user1);
            assertEquals(user1, user2);
            assertEquals(user1, user1);
            assertFalse(user1.equals(null));
            assertNotEquals(user3, user1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
