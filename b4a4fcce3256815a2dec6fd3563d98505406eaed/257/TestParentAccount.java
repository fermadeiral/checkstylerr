// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model ParentAccount.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestParentAccount {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("46e71.f8811@d138e.me",
                                                             "4addf598-e2cb-46fc-af04-fd2c708b0841",
                                                             "4fe3ed46883d07edae68d4aee4a2a477");
            ParentAccount parentaccount2 = parentaccount1.clone();
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotSame(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("c05f2.8ef82@16a70.fr",
                                                             "84173a0c-1fa4-4350-9047-95e1efba2f4e",
                                                             "4fe3ed46883d07edae68d4aee4a2a477");
            ParentAccount parentaccount2 = new ParentAccount("c05f2.8ef82@16a70.fr",
                                                             "84173a0c-1fa4-4350-9047-95e1efba2f4e",
                                                             "4fe3ed46883d07edae68d4aee4a2a477");
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotSame(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount2.hashCode(), parentaccount1.hashCode());
            int hashCode = parentaccount1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, parentaccount1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ParentAccount parentaccount = new ParentAccount("01d4f.dcacb@e88b4.fr", "7af2adf6-b21e-413a-9de9-1b70a706526b",
                                                        "4fe3ed46883d07edae68d4aee4a2a477");
        assertTrue(parentaccount.isValid());
        ParentAccount parentaccountInvalid = new ParentAccount("ëˆ½åŠ‡ê‡—ï——?Ü„ãšªç?¶ê£®ëˆŸåŒšî¸©>î¯±ç©¢8\u0014æ—˜\u0015ï¯ƒ*\u0006ï‹€ãš†ë“„âµŸê™?\u001aë™™êˆ©éœªå ­ï¼?ã?¯ë¨¨ëŽ‘é’½åŠ¢à¼­>)ï‡‚ï¤«ï½Ÿï¢”î½º?êˆ¬ï°œæš€îµ¤+ä??&/àº¯ê‰„ç‹?ï½? ï…œë¯ˆë›Žì‘š",
                                                               "fa874d75-fbaa-4c1c-aeb7-8c693b99fb6b95d3c6d7-befa-49c4-bc28-1365118857fc0fb1ee11-2ce4-469c-8932-0c5ee9581fae",
                                                               "111bb155cà³…51?15â¦’15ZJcbbQc#é ·1\u0010\u001fFC55?O5á«¢D5\u0001å³°5*â‡´=c15cB5cDbá°²5?5ã¼ºèˆ¦1b1");
        assertFalse(parentaccountInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("dbc40.2e155@7d92b.fr",
                                                             "c8108769-84a4-4207-bc79-45a96692bd5f",
                                                             "4fe3ed46883d07edae68d4aee4a2a477");
            ParentAccount parentaccount2 = new ParentAccount("dbc40.2e155@7d92b.fr",
                                                             "c8108769-84a4-4207-bc79-45a96692bd5f",
                                                             "4fe3ed46883d07edae68d4aee4a2a477");
            ParentAccount parentaccount3 = new ParentAccount("54d82.43633@48595.fr",
                                                             "db26b949-0473-40d6-8093-76b41497800d",
                                                             "4fe3ed46883d07edae68d4aee4a2a477");
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotNull(parentaccount3);
            assertNotSame(parentaccount2, parentaccount1);
            assertNotSame(parentaccount3, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount1, parentaccount2);
            assertEquals(parentaccount1, parentaccount1);
            assertFalse(parentaccount1.equals(null));
            assertNotEquals(parentaccount3, parentaccount1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
