// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model LoginProfile.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestLoginProfile {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            LoginProfile loginprofile1 = new LoginProfile("de980e88-40c2-4c43-a3f3-c45639eb7b88",
                                                          "4ea662fa-c551-4d8f-9c3d-71ce2d7206c2");
            LoginProfile loginprofile2 = loginprofile1.clone();
            assertNotNull(loginprofile1);
            assertNotNull(loginprofile2);
            assertNotSame(loginprofile2, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            LoginProfile loginprofile1 = new LoginProfile("10206cbd-8707-4c87-b9f6-7b570bdb965f",
                                                          "1ef84dda-d838-4eeb-9c22-6a3a6172147e");
            LoginProfile loginprofile2 = new LoginProfile("10206cbd-8707-4c87-b9f6-7b570bdb965f",
                                                          "1ef84dda-d838-4eeb-9c22-6a3a6172147e");
            assertNotNull(loginprofile1);
            assertNotNull(loginprofile2);
            assertNotSame(loginprofile2, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
            assertEquals(loginprofile2.hashCode(), loginprofile1.hashCode());
            int hashCode = loginprofile1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, loginprofile1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        LoginProfile loginprofile = new LoginProfile("99f47b02-2dd7-4667-a4be-c88d57327a40",
                                                     "4e8c8c9c-2e92-41b4-a2e1-dba371a5a749");
        assertTrue(loginprofile.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            LoginProfile loginprofile1 = new LoginProfile("ac034831-6441-4624-919a-f00cf95f4fad",
                                                          "4dfff500-1495-4333-bab0-ecb4a05485c3");
            LoginProfile loginprofile2 = new LoginProfile("ac034831-6441-4624-919a-f00cf95f4fad",
                                                          "4dfff500-1495-4333-bab0-ecb4a05485c3");
            LoginProfile loginprofile3 = new LoginProfile("ff314447-87dc-4290-a3de-ed51b8c72c3b",
                                                          "87db4d40-cc8b-4872-bb5b-5cc8540269ab");
            assertNotNull(loginprofile1);
            assertNotNull(loginprofile2);
            assertNotNull(loginprofile3);
            assertNotSame(loginprofile2, loginprofile1);
            assertNotSame(loginprofile3, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
            assertEquals(loginprofile1, loginprofile2);
            assertEquals(loginprofile1, loginprofile1);
            assertFalse(loginprofile1.equals(null));
            assertNotEquals(loginprofile3, loginprofile1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
