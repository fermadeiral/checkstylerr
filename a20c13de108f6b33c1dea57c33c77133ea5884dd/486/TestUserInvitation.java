// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model UserInvitation.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestUserInvitation {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("bc05f908d0c49f1d35eb7cbe17ca2cb5",
                                                                new Date(1557969571313L), "f9bee.9c30e@3fd4a.me",
                                                                new Date(1557969577511L),
                                                                "bc05f908d0c49f1d35eb7cbe17ca2cb5", null,
                                                                new Date(1557969575643L),
                                                                "bc05f908d0c49f1d35eb7cbe17ca2cb5");
            UserInvitation userinvitation2 = userinvitation1.clone();
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotSame(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("bc05f908d0c49f1d35eb7cbe17ca2cb5",
                                                                new Date(1557969570717L), "d58b0.231ce@44472.fr",
                                                                new Date(1557969576638L),
                                                                "bc05f908d0c49f1d35eb7cbe17ca2cb5", null,
                                                                new Date(1557969573333L),
                                                                "bc05f908d0c49f1d35eb7cbe17ca2cb5");
            UserInvitation userinvitation2 = new UserInvitation("bc05f908d0c49f1d35eb7cbe17ca2cb5",
                                                                new Date(1557969570717L), "d58b0.231ce@44472.fr",
                                                                new Date(1557969576638L),
                                                                "bc05f908d0c49f1d35eb7cbe17ca2cb5", null,
                                                                new Date(1557969573333L),
                                                                "bc05f908d0c49f1d35eb7cbe17ca2cb5");
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotSame(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation2.hashCode(), userinvitation1.hashCode());
            int hashCode = userinvitation1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, userinvitation1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        UserInvitation userinvitation = new UserInvitation("bc05f908d0c49f1d35eb7cbe17ca2cb5", new Date(1557969576890L),
                                                           "742e6.8d6e6@c7a0f.fr", new Date(1557969575816L),
                                                           "bc05f908d0c49f1d35eb7cbe17ca2cb5", null,
                                                           new Date(1557969571181L),
                                                           "bc05f908d0c49f1d35eb7cbe17ca2cb5");
        assertTrue(userinvitation.isValid());
        UserInvitation userinvitationInvalid = new UserInvitation("/(6\u001b\u00166Y%N--\t66(-6è?ƒXI R\u000e6ï–‹è³ºè«¸<6-6]66è–¿\u001e6\u0003\u0006@?66;ê„¡P\u0013\u0002ê¢·B6#A6\u0016XMM]\u0018^à³¹",
                                                                  new Date(1557969578156L), null,
                                                                  new Date(1557969576765L),
                                                                  "/(6\u001b\u00166Y%N--\t66(-6è?ƒXI R\u000e6ï–‹è³ºè«¸<6-6]66è–¿\u001e6\u0003\u0006@?66;ê„¡P\u0013\u0002ê¢·B6#A6\u0016XMM]\u0018^à³¹",
                                                                  null, new Date(1557969575596L),
                                                                  "/(6\u001b\u00166Y%N--\t66(-6è?ƒXI R\u000e6ï–‹è³ºè«¸<6-6]66è–¿\u001e6\u0003\u0006@?66;ê„¡P\u0013\u0002ê¢·B6#A6\u0016XMM]\u0018^à³¹");
        assertFalse(userinvitationInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("bc05f908d0c49f1d35eb7cbe17ca2cb5",
                                                                new Date(1557969570225L), "1e222.36c99@8d6eb.me",
                                                                new Date(1557969579173L),
                                                                "bc05f908d0c49f1d35eb7cbe17ca2cb5", null,
                                                                new Date(1557969569505L),
                                                                "bc05f908d0c49f1d35eb7cbe17ca2cb5");
            UserInvitation userinvitation2 = new UserInvitation("bc05f908d0c49f1d35eb7cbe17ca2cb5",
                                                                new Date(1557969570225L), "1e222.36c99@8d6eb.me",
                                                                new Date(1557969579173L),
                                                                "bc05f908d0c49f1d35eb7cbe17ca2cb5", null,
                                                                new Date(1557969569505L),
                                                                "bc05f908d0c49f1d35eb7cbe17ca2cb5");
            UserInvitation userinvitation3 = new UserInvitation("bc05f908d0c49f1d35eb7cbe17ca2cb5",
                                                                new Date(1557969572505L), "8a982.ac63d@f100d.fr",
                                                                new Date(1557969571422L),
                                                                "bc05f908d0c49f1d35eb7cbe17ca2cb5", null,
                                                                new Date(1557969570768L),
                                                                "bc05f908d0c49f1d35eb7cbe17ca2cb5");
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotNull(userinvitation3);
            assertNotSame(userinvitation2, userinvitation1);
            assertNotSame(userinvitation3, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation1, userinvitation2);
            assertEquals(userinvitation1, userinvitation1);
            assertFalse(userinvitation1.equals(null));
            assertNotEquals(userinvitation3, userinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
