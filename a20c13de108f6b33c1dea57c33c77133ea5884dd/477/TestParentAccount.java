// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model ParentAccount.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestParentAccount {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("d0ff2.2bb05@f4a95.fr",
                                                             "ef7a380d-467d-4c99-a885-3eedc6a3611a",
                                                             "bc05f908d0c49f1d35eb7cbe17ca2cb5");
            ParentAccount parentaccount2 = parentaccount1.clone();
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotSame(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("b20e8.24d34@c4aad.fr",
                                                             "a781d088-6f89-4c87-9d79-8d758582ce80",
                                                             "bc05f908d0c49f1d35eb7cbe17ca2cb5");
            ParentAccount parentaccount2 = new ParentAccount("b20e8.24d34@c4aad.fr",
                                                             "a781d088-6f89-4c87-9d79-8d758582ce80",
                                                             "bc05f908d0c49f1d35eb7cbe17ca2cb5");
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotSame(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount2.hashCode(), parentaccount1.hashCode());
            int hashCode = parentaccount1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, parentaccount1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ParentAccount parentaccount = new ParentAccount("a6809.671bc@50e5e.fr", "7e365bb1-a364-44ca-8ee4-545260630721",
                                                        "bc05f908d0c49f1d35eb7cbe17ca2cb5");
        assertTrue(parentaccount.isValid());
        ParentAccount parentaccountInvalid = new ParentAccount("Ðµä±¨\u000b(æ•¥ä°¢<ç¢…1í›­Ï´å½–\u001cè› ä€˜>+\u0015>âš’èš—ç§—>æ¦’äž‚â‰¹ä¥‚\u0011à¯’\u001c>å½?ã½©\u001f\u0003ç‰Žä„ ,ë?´#>\u001cáŒ¹äƒ‰ã¨ºè?£\u000b\u0019\u0012ï›‰+,(ä–¡>ã¿ ç?‹å®§\u0003ä¹«î“”à±¿>ç¥Ž",
                                                               "87e610e7-8b66-4f02-8be9-117d85f1f995f2ed1991-4cd0-4386-ae06-40ca1dcc0b333b0f6e45-f06e-48fb-9b12-26b32532e2ff",
                                                               "/(6\u001b\u00166Y%N--\t66(-6è?ƒXI R\u000e6ï–‹è³ºè«¸<6-6]66è–¿\u001e6\u0003\u0006@?66;ê„¡P\u0013\u0002ê¢·B6#A6\u0016XMM]\u0018^à³¹");
        assertFalse(parentaccountInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("10188.183a4@47883.me",
                                                             "56dbda44-b642-4e78-8602-8b1cffaaf64b",
                                                             "bc05f908d0c49f1d35eb7cbe17ca2cb5");
            ParentAccount parentaccount2 = new ParentAccount("10188.183a4@47883.me",
                                                             "56dbda44-b642-4e78-8602-8b1cffaaf64b",
                                                             "bc05f908d0c49f1d35eb7cbe17ca2cb5");
            ParentAccount parentaccount3 = new ParentAccount("161e4.012af@48164.me",
                                                             "54171784-c8f4-4da2-b433-6933419f965f",
                                                             "bc05f908d0c49f1d35eb7cbe17ca2cb5");
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotNull(parentaccount3);
            assertNotSame(parentaccount2, parentaccount1);
            assertNotSame(parentaccount3, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount1, parentaccount2);
            assertEquals(parentaccount1, parentaccount1);
            assertFalse(parentaccount1.equals(null));
            assertNotEquals(parentaccount3, parentaccount1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
