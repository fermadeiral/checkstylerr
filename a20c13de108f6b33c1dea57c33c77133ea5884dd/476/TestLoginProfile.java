// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model LoginProfile.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestLoginProfile {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            LoginProfile loginprofile1 = new LoginProfile("8eb1176a-8e01-4031-af2b-cfc656560263",
                                                          "c59aa683-dab1-4f13-b318-ed0da323dfdc");
            LoginProfile loginprofile2 = loginprofile1.clone();
            assertNotNull(loginprofile1);
            assertNotNull(loginprofile2);
            assertNotSame(loginprofile2, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            LoginProfile loginprofile1 = new LoginProfile("d35a1442-2be5-44a5-b220-ed62c2562e39",
                                                          "bf07f18c-b1a9-42ef-aab4-6a3a349ec236");
            LoginProfile loginprofile2 = new LoginProfile("d35a1442-2be5-44a5-b220-ed62c2562e39",
                                                          "bf07f18c-b1a9-42ef-aab4-6a3a349ec236");
            assertNotNull(loginprofile1);
            assertNotNull(loginprofile2);
            assertNotSame(loginprofile2, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
            assertEquals(loginprofile2.hashCode(), loginprofile1.hashCode());
            int hashCode = loginprofile1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, loginprofile1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        LoginProfile loginprofile = new LoginProfile("0812ca6f-965f-455b-ae76-dc150023b012",
                                                     "4e76cb24-3026-4f2c-8aa6-1aa602ccdee7");
        assertTrue(loginprofile.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            LoginProfile loginprofile1 = new LoginProfile("619d5372-47c9-48b6-b43e-f67528bb4b41",
                                                          "bbc7dda2-7a6b-45f9-b41b-f336ff6e1287");
            LoginProfile loginprofile2 = new LoginProfile("619d5372-47c9-48b6-b43e-f67528bb4b41",
                                                          "bbc7dda2-7a6b-45f9-b41b-f336ff6e1287");
            LoginProfile loginprofile3 = new LoginProfile("2ddf6954-e730-41df-bce1-eef0ff43f53d",
                                                          "92228f6a-3db8-4a5e-89e5-eecc5ae58bad");
            assertNotNull(loginprofile1);
            assertNotNull(loginprofile2);
            assertNotNull(loginprofile3);
            assertNotSame(loginprofile2, loginprofile1);
            assertNotSame(loginprofile3, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
            assertEquals(loginprofile1, loginprofile2);
            assertEquals(loginprofile1, loginprofile1);
            assertFalse(loginprofile1.equals(null));
            assertNotEquals(loginprofile3, loginprofile1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
