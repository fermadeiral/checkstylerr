// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.deviceupdate.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model FirmwareImage.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestFirmwareImage {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            FirmwareImage firmwareimage1 = new FirmwareImage(new Date(1557969569481L),
                                                             "dd24af9e-6388-4d67-8260-790f50bf9ba1", 94,
                                                             "3c28891b-f9bd-43ae-be09-63e4d6d9b7c6",
                                                             "0c0bf933-d046-4409-8a3c-9df1d7772cef",
                                                             "3df862b0-9d73-4abb-9180-105ac3c4fc5e",
                                                             "87d4e6e0-96c2-45b7-977d-cee09dbff84c",
                                                             new Date(1557969570765L));
            FirmwareImage firmwareimage2 = firmwareimage1.clone();
            assertNotNull(firmwareimage1);
            assertNotNull(firmwareimage2);
            assertNotSame(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage2, firmwareimage1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            FirmwareImage firmwareimage1 = new FirmwareImage(new Date(1557969576386L),
                                                             "1c73443a-011e-4201-a258-5ff51f1e7f2e", 27,
                                                             "e4e77438-cc15-485b-a055-fe4864d23013",
                                                             "dc4ca807-30fc-4af6-a379-ca133ecdc255",
                                                             "db9770c1-e505-4a8d-90d9-5a6c620d97d1",
                                                             "05dbf766-5221-4077-97ed-5bc191a4a025",
                                                             new Date(1557969574283L));
            FirmwareImage firmwareimage2 = new FirmwareImage(new Date(1557969576386L),
                                                             "1c73443a-011e-4201-a258-5ff51f1e7f2e", 27,
                                                             "e4e77438-cc15-485b-a055-fe4864d23013",
                                                             "dc4ca807-30fc-4af6-a379-ca133ecdc255",
                                                             "db9770c1-e505-4a8d-90d9-5a6c620d97d1",
                                                             "05dbf766-5221-4077-97ed-5bc191a4a025",
                                                             new Date(1557969574283L));
            assertNotNull(firmwareimage1);
            assertNotNull(firmwareimage2);
            assertNotSame(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage2.hashCode(), firmwareimage1.hashCode());
            int hashCode = firmwareimage1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, firmwareimage1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        FirmwareImage firmwareimage = new FirmwareImage(new Date(1557969572245L),
                                                        "5ba21efd-0258-443a-9f8d-003fa8484620", 44,
                                                        "e2fd4cf3-335b-4860-b2a1-665fc02b7d8b",
                                                        "338ffa5d-400b-4711-9da8-dc0ffac6ff7f",
                                                        "c4c75b80-631f-4d5f-b5f0-4c0751cb37a2",
                                                        "dd87c22e-5a4b-4539-a037-435612481016",
                                                        new Date(1557969571672L));
        assertTrue(firmwareimage.isValid());
        FirmwareImage firmwareimageInvalid = new FirmwareImage(new Date(1557969570711L),
                                                               "3df357fd-39dd-4b22-af08-8d3eb83e8f6f", -63,
                                                               "ce07eae2-1a51-4ecb-939e-52e2878053a4",
                                                               "458a2cf0-fc24-4397-9b8a-bdd65687d148e04e3e6c-8729-422a-a3d9-2da938dc43f43f531f24-2c3c-402b-8a57-b0b9db3f1eb5e69477bc-8ef8-4895-9c2c-25cac6bd6f83e7253861-fc7b-44a5-9521-cc1dcf5ae2dfaa6cfab6-60c2-43d4-9c12-c918cef392e7afb2641e-de9e-4616-bf10-c05e65b04699b096f807-d663-4806-bca7-47fef52bc637dad23a12-73f0-4aad-aab5-b1deafead94ba57a6288-c278-4a38-94de-a493ca8ffde74b149a4e-ca41-4d57-96cb-9996516e369a48b09d0c-6fe2-4e0f-9d37-647523ec1644fc20246e-d254-4437-aa99-7f9185f9190e4cbacbe7-66bf-4323-9639-c3b4575923333cf4e981-ca07-4444-9379-29a47aeb538366e2bfaa-718f-46f6-9f1a-e6730456a51ed6de8a74-a709-4a9d-a08a-e42227ab387c42657c0e-f8f9-45cb-86f9-c9b9ea2f1c56080dee18-0964-4a7f-8797-84ae5a5a40294e782df0-75e1-40c0-a29c-f73c7e6babb6114b2978-f28a-4f25-a0a4-5193995bb91aff290e41-c21b-4d55-a7b8-fcce78bc72ac7e6b5171-0408-4a75-8a85-377366e25709289605a6-76be-41c6-a3ee-7f8036df2b41002a3e03-859a-40bc-b742-617f44019a537b7244a9-205c-42b3-99a0-fd732d2e60a3b074d168-27c3-4b76-9a42-9927441e4d0519d5f918-5cbd-486e-83d5-5bb0b33098633c4bf845-c837-4b12-bd92-7e76634b137c7f19e547-abad-49b0-8554-70beefc99909c1249eca-5bb7-41c8-ae3b-b4b62567d3b9e3766ba6-4d1e-4740-b27a-589589077a6509fed219-6a6c-4e0b-9529-f680e7702a7778ea8341-6616-49ea-bb14-f0e8786a0b9d2f5d609e-c357-4f5a-bfaf-f40f570daad90ef987ea-0cc5-49da-ba9c-48df33c52d4fd9f9c06c-0ed9-4415-bc95-4be26c6d705438ae3cf6-56fc-4dcc-a1fc-e56975f8d4f9fdef9c38-f4dc-4a89-8638-d78113637cf4bf34d512-e39a-4435-9c04-2698dabf34ec548939cb-0de7-44ed-8ad1-2006e90937dfc81a1e86-c063-4850-8edd-8ebd2e666998a04ca4a1-fe0d-42f0-855a-d7d480fab95e74491e7e-92d8-42d7-af7f-993c5b1c0d7034b95169-a91c-4e3b-81fc-04cbd9a0e3cf3c3af97c-d2e2-4331-a800-dbde880aa597064d2019-0a30-453e-8193-5db22ed81581b9a33996-b220-43fd-9bf3-c5e62c9f40c4664f9c3b-4178-4bf0-a5fd-c45d9c2a53f89200a904-889a-4241-b901-701c7fe1b2a9214fc30e-7398-469a-b47e-21aca137f09e9290481d-593f-4ce5-b76b-ca7600b47786591a4661-c84b-42e1-8a5d-efa33365b2d1969bf425-bb4f-4b06-88a5-cb21081480781c511666-d221-44b0-a9dc-eb9fe65fcff44690d686-5b90-4778-823a-71a75f696acb",
                                                               "ba45253f-e4d2-4a19-a0ec-03a9683813c2",
                                                               "bc8751f8-1b13-4561-bfc6-376d82da37aaaf0fadb8-ab50-4641-8504-118deb9f0ba777ba5387-e6fe-4c22-8cb7-dbb5f014217182240438-fa7b-49df-846a-4c21e510a90e",
                                                               new Date(1557969579072L));
        assertFalse(firmwareimageInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            FirmwareImage firmwareimage1 = new FirmwareImage(new Date(1557969577092L),
                                                             "8e8f6598-a515-48e5-a335-5fd2768d92cf", 7,
                                                             "4f56d9d7-0122-4f98-9364-0f660aea75ba",
                                                             "e53c95c3-dad8-4db5-92d2-8195e90d8f5e",
                                                             "39b86d55-262d-403c-bae6-e6bf788787b9",
                                                             "7d80d89e-0e73-4e80-8667-70aa67beab8a",
                                                             new Date(1557969569968L));
            FirmwareImage firmwareimage2 = new FirmwareImage(new Date(1557969577092L),
                                                             "8e8f6598-a515-48e5-a335-5fd2768d92cf", 7,
                                                             "4f56d9d7-0122-4f98-9364-0f660aea75ba",
                                                             "e53c95c3-dad8-4db5-92d2-8195e90d8f5e",
                                                             "39b86d55-262d-403c-bae6-e6bf788787b9",
                                                             "7d80d89e-0e73-4e80-8667-70aa67beab8a",
                                                             new Date(1557969569968L));
            FirmwareImage firmwareimage3 = new FirmwareImage(new Date(1557969571135L),
                                                             "09cde4d4-0526-4071-b87c-11fa7fdcc935", -56,
                                                             "98fb593d-6318-41ff-be11-0b51e73fed8b",
                                                             "5bf00f3d-9432-47ac-bd2a-b5fa40d05830",
                                                             "2dcc5863-b1ab-4eb5-8ac8-e10e4a48c1a1",
                                                             "14c8df14-5631-4990-8afb-2f2785084fca",
                                                             new Date(1557969573420L));
            assertNotNull(firmwareimage1);
            assertNotNull(firmwareimage2);
            assertNotNull(firmwareimage3);
            assertNotSame(firmwareimage2, firmwareimage1);
            assertNotSame(firmwareimage3, firmwareimage1);
            assertEquals(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage2, firmwareimage1);
            assertEquals(firmwareimage1, firmwareimage2);
            assertEquals(firmwareimage1, firmwareimage1);
            assertFalse(firmwareimage1.equals(null));
            assertNotEquals(firmwareimage3, firmwareimage1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
