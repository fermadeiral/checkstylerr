// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.deviceupdate.model;

import static org.junit.Assert.*;

import com.arm.mbed.cloud.sdk.common.Order;
import com.arm.mbed.cloud.sdk.common.listing.ListOptionsEncoder;
import com.arm.mbed.cloud.sdk.common.listing.filtering.FilterOperator;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import org.junit.Test;

/**
 * Unit tests for Model FirmwareImageListOptions.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestFirmwareImageListOptions {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            FirmwareImageListOptions firmwareimagelistoptions1 = new FirmwareImageListOptions(Integer.valueOf(-72),
                                                                                              Long.valueOf(-29),
                                                                                              Order.getDefault(),
                                                                                              "bef3294c-f641-4ce4-9a8a-41693bb6662f",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions2 = firmwareimagelistoptions1.clone();
            assertNotNull(firmwareimagelistoptions1);
            assertNotNull(firmwareimagelistoptions2);
            assertNotSame(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the filters method.
     */
    @SuppressWarnings({ "boxing", "resource" })
    @Test
    public void testFilters() {
        try {
            FirmwareImageListOptions option = new FirmwareImageListOptions().inUpdatedAts(Arrays.asList(new Date(1557969577175L),
                                                                                                        new Date(1557969572664L),
                                                                                                        new Date(1557969580407L),
                                                                                                        new Date(1557969575533L),
                                                                                                        new Date(1557969575968L),
                                                                                                        new Date(1557969571017L),
                                                                                                        new Date(1557969571183L),
                                                                                                        new Date(1557969580473L),
                                                                                                        new Date(1557969579914L)))
                                                                            .notInUpdatedAts(Arrays.asList(new Date(1557969578917L),
                                                                                                           new Date(1557969571407L),
                                                                                                           new Date(1557969574506L),
                                                                                                           new Date(1557969575356L),
                                                                                                           new Date(1557969579289L),
                                                                                                           new Date(1557969579141L),
                                                                                                           new Date(1557969576521L)))
                                                                            .lessThanUpdatedAt(new Date(1557969576783L))
                                                                            .greaterThanUpdatedAt(new Date(1557969571357L))
                                                                            .equalToName("c76368fb-686a-4d37-9960-d4800bd7edb6")
                                                                            .notEqualToName("368911ef-b37e-4abf-bc33-00fa22082308")
                                                                            .inNames(Arrays.asList("d0dc9391-abc2-4522-87d8-633d7d53f997",
                                                                                                   "9b0f33fc-328f-4c47-9421-a93c4c5129f6",
                                                                                                   "2a9c677d-76ac-47b0-a098-aab604946a12",
                                                                                                   "f7096c36-c084-48b9-b15b-3894b7f1f69c",
                                                                                                   "7457c5f5-2e42-46af-8471-bb111c50176e",
                                                                                                   "e1cf9aac-448e-43c2-be29-5b1c40542587",
                                                                                                   "9529bcd1-33e6-40f1-8fef-f5987dd93d13",
                                                                                                   "ee89bd6f-e24b-4656-bbd3-40e750e1e629"))
                                                                            .notInNames(Arrays.asList("ab6ca30b-ab61-41b6-97a0-01c9f84a4d69",
                                                                                                      "b58ddfb1-9820-4eb9-8029-4288661c4dd0",
                                                                                                      "978f1fbc-ef2e-4a00-b8ae-4a44f9c79a0e",
                                                                                                      "2001f6d6-63c6-44f4-9227-68ef64046166",
                                                                                                      "a48b7dc6-1ab9-4a82-b2b1-32b68c3a86ba",
                                                                                                      "0c89dd3c-5cc0-4485-b9f5-9b2e9f0d3668",
                                                                                                      "88aac5a2-8bf7-4a90-ac1b-acbac454a3c8"))
                                                                            .equalToDescription("1fb2e097-9b43-4e90-b5f8-8b16c020f55d")
                                                                            .notEqualToDescription("2d4b4103-addd-4eac-9279-8d6612af66ae")
                                                                            .inDescriptions(Arrays.asList("56a155fa-f421-4ab5-a8eb-9d73143059c0"))
                                                                            .notInDescriptions(Arrays.asList("9887f3ba-40fb-4a31-81e3-e445d3474332",
                                                                                                             "623dce55-d565-44de-8ed1-42014e74c335",
                                                                                                             "f4a9eb01-4f95-4e7c-b501-85122bd86741"))
                                                                            .inCreatedAts(Arrays.asList(new Date(1557969577492L),
                                                                                                        new Date(1557969579492L),
                                                                                                        new Date(1557969573280L),
                                                                                                        new Date(1557969574129L)))
                                                                            .notInCreatedAts(Arrays.asList(new Date(1557969578313L),
                                                                                                           new Date(1557969575075L),
                                                                                                           new Date(1557969572020L),
                                                                                                           new Date(1557969578721L),
                                                                                                           new Date(1557969577483L),
                                                                                                           new Date(1557969573714L),
                                                                                                           new Date(1557969578379L),
                                                                                                           new Date(1557969576701L),
                                                                                                           new Date(1557969578858L)))
                                                                            .lessThanCreatedAt(new Date(1557969573877L))
                                                                            .greaterThanCreatedAt(new Date(1557969575444L))
                                                                            .equalToDatafileUrl("ca908542-80ae-428d-b277-bb7314db1d3b")
                                                                            .notEqualToDatafileUrl("852f11b7-9303-4929-866f-0a6e66f31ed7")
                                                                            .inDatafileUrls(Arrays.asList("63a61fdb-be1d-4b88-995d-b180a50b018e"))
                                                                            .notInDatafileUrls(Arrays.asList("c10b6838-bf16-4f4f-82ba-930478cf7b17",
                                                                                                             "34bd7b0a-1841-4620-994c-4944154b8a0d",
                                                                                                             "1884983e-3147-4ca7-a92c-b023ff912145",
                                                                                                             "48b36abb-0b88-4d18-b11d-25185837c609",
                                                                                                             "69ef8ae0-3f57-408c-b59b-2315f0090bde"))
                                                                            .equalToDatafileSize(Long.valueOf(-15))
                                                                            .notEqualToDatafileSize(Long.valueOf(4))
                                                                            .inDatafileSizes(Arrays.asList(Long.valueOf(24),
                                                                                                           Long.valueOf(45),
                                                                                                           Long.valueOf(124),
                                                                                                           Long.valueOf(23)))
                                                                            .notInDatafileSizes(Arrays.asList(Long.valueOf(117),
                                                                                                              Long.valueOf(38),
                                                                                                              Long.valueOf(28),
                                                                                                              Long.valueOf(61),
                                                                                                              Long.valueOf(-124),
                                                                                                              Long.valueOf(126),
                                                                                                              Long.valueOf(112),
                                                                                                              Long.valueOf(-49),
                                                                                                              Long.valueOf(-101)))
                                                                            .equalToDatafileChecksum("c36611ac-1c2e-4f41-9427-849ef745d22f")
                                                                            .notEqualToDatafileChecksum("6e46ff22-7474-4f19-9eea-5eae5d8b5bbe")
                                                                            .inDatafileChecksums(Arrays.asList("28d769f8-cd54-4649-9eca-2ffbe60ad263",
                                                                                                               "8e300250-863d-4814-b306-82f55fbb5617",
                                                                                                               "df0fe001-444b-4d09-8107-6deed6636f70",
                                                                                                               "de166885-6a00-4bed-ada3-2042b3c7249b",
                                                                                                               "c0f7d7b1-b3df-41ca-ad54-6b9c88a69d7c",
                                                                                                               "f426827c-15c9-4b45-b421-3786bfde80ce",
                                                                                                               "60ff7157-8d4e-41ef-94da-dd9fcffbaaaf",
                                                                                                               "93a41ae4-5de7-4025-8fff-7f7d25ca1ebe",
                                                                                                               "85191ba6-d70e-499c-8c3d-bd8aff5ccef3"))
                                                                            .notInDatafileChecksums(Arrays.asList("749676fd-30e9-446d-b8b8-46139c60814f",
                                                                                                                  "14027afd-8e94-405a-803a-dd4352462197",
                                                                                                                  "49f62eb3-7fe2-4e6e-8768-4a6db8b703f6"))
                                                                            .equalToId("913d4e5c-a038-4639-bcad-5aa7c92775b3")
                                                                            .notEqualToId("e5925f32-7a8d-41cd-9ebb-48eae2ab27f6")
                                                                            .inIds(Arrays.asList("bc31ad8c-c69e-4756-bb61-7ea6f813e6f5",
                                                                                                 "5b2a8ae9-0b1c-41a7-b248-9c2666a48cbc",
                                                                                                 "94eaf571-d0a7-4f6f-be41-bab9b92e1202",
                                                                                                 "9047e7ea-96fc-48b3-a21f-c7f5436673d1",
                                                                                                 "1fd1e1fe-195e-4f0c-ab61-f55dadd1fbe4",
                                                                                                 "8f4c070e-b37e-4267-9436-1ff9cae3d6f1"))
                                                                            .notInIds(Arrays.asList("845d8c59-871d-412c-b021-8a66595fe00a",
                                                                                                    "e7dca0e2-a1b2-46d7-8ef1-103e97865679",
                                                                                                    "ff8074cb-d452-4944-8c50-1bdaa8a6e7b2",
                                                                                                    "8255ff3d-828a-4e2b-885d-4317880069b8",
                                                                                                    "0af96ae0-b4e6-4b98-8151-a55402fc413d",
                                                                                                    "7e267611-9de7-4b8c-a3d4-44ad980fe6c4",
                                                                                                    "d4af787b-4ca5-41ae-b198-293535b64d3c"));
            assertTrue(option.hasFilters());
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1557969577175L), new Date(1557969572664L), new Date(1557969580407L),
                                       new Date(1557969575533L), new Date(1557969575968L), new Date(1557969571017L),
                                       new Date(1557969571183L), new Date(1557969580473L), new Date(1557969579914L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1557969578917L), new Date(1557969571407L), new Date(1557969574506L),
                                       new Date(1557969575356L), new Date(1557969579289L), new Date(1557969579141L),
                                       new Date(1557969576521L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.LESS_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1557969576783L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1557969571357L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("c76368fb-686a-4d37-9960-d4800bd7edb6",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("368911ef-b37e-4abf-bc33-00fa22082308",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("d0dc9391-abc2-4522-87d8-633d7d53f997", "9b0f33fc-328f-4c47-9421-a93c4c5129f6",
                                       "2a9c677d-76ac-47b0-a098-aab604946a12", "f7096c36-c084-48b9-b15b-3894b7f1f69c",
                                       "7457c5f5-2e42-46af-8471-bb111c50176e", "e1cf9aac-448e-43c2-be29-5b1c40542587",
                                       "9529bcd1-33e6-40f1-8fef-f5987dd93d13", "ee89bd6f-e24b-4656-bbd3-40e750e1e629"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("ab6ca30b-ab61-41b6-97a0-01c9f84a4d69", "b58ddfb1-9820-4eb9-8029-4288661c4dd0",
                                       "978f1fbc-ef2e-4a00-b8ae-4a44f9c79a0e", "2001f6d6-63c6-44f4-9227-68ef64046166",
                                       "a48b7dc6-1ab9-4a82-b2b1-32b68c3a86ba", "0c89dd3c-5cc0-4485-b9f5-9b2e9f0d3668",
                                       "88aac5a2-8bf7-4a90-ac1b-acbac454a3c8"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("1fb2e097-9b43-4e90-b5f8-8b16c020f55d",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("2d4b4103-addd-4eac-9279-8d6612af66ae",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("56a155fa-f421-4ab5-a8eb-9d73143059c0"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("9887f3ba-40fb-4a31-81e3-e445d3474332", "623dce55-d565-44de-8ed1-42014e74c335",
                                       "f4a9eb01-4f95-4e7c-b501-85122bd86741"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1557969577492L), new Date(1557969579492L), new Date(1557969573280L),
                                       new Date(1557969574129L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1557969578313L), new Date(1557969575075L), new Date(1557969572020L),
                                       new Date(1557969578721L), new Date(1557969577483L), new Date(1557969573714L),
                                       new Date(1557969578379L), new Date(1557969576701L), new Date(1557969578858L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.LESS_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1557969573877L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1557969575444L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("ca908542-80ae-428d-b277-bb7314db1d3b",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("852f11b7-9303-4929-866f-0a6e66f31ed7",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("63a61fdb-be1d-4b88-995d-b180a50b018e"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("c10b6838-bf16-4f4f-82ba-930478cf7b17", "34bd7b0a-1841-4620-994c-4944154b8a0d",
                                       "1884983e-3147-4ca7-a92c-b023ff912145", "48b36abb-0b88-4d18-b11d-25185837c609",
                                       "69ef8ae0-3f57-408c-b59b-2315f0090bde"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(-15),
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    Long.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(4),
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                       Long.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(24), Long.valueOf(45), Long.valueOf(124), Long.valueOf(23)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(117), Long.valueOf(38), Long.valueOf(28), Long.valueOf(61),
                                       Long.valueOf(-124), Long.valueOf(126), Long.valueOf(112), Long.valueOf(-49),
                                       Long.valueOf(-101)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                        FilterOperator.EQUAL));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals("c36611ac-1c2e-4f41-9427-849ef745d22f",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals("6e46ff22-7474-4f19-9eea-5eae5d8b5bbe",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM, FilterOperator.IN));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals(Arrays.asList("28d769f8-cd54-4649-9eca-2ffbe60ad263", "8e300250-863d-4814-b306-82f55fbb5617",
                                       "df0fe001-444b-4d09-8107-6deed6636f70", "de166885-6a00-4bed-ada3-2042b3c7249b",
                                       "c0f7d7b1-b3df-41ca-ad54-6b9c88a69d7c", "f426827c-15c9-4b45-b421-3786bfde80ce",
                                       "60ff7157-8d4e-41ef-94da-dd9fcffbaaaf", "93a41ae4-5de7-4025-8fff-7f7d25ca1ebe",
                                       "85191ba6-d70e-499c-8c3d-bd8aff5ccef3"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                        FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals(Arrays.asList("749676fd-30e9-446d-b8b8-46139c60814f", "14027afd-8e94-405a-803a-dd4352462197",
                                       "49f62eb3-7fe2-4e6e-8768-4a6db8b703f6"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("913d4e5c-a038-4639-bcad-5aa7c92775b3",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("e5925f32-7a8d-41cd-9ebb-48eae2ab27f6",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("bc31ad8c-c69e-4756-bb61-7ea6f813e6f5", "5b2a8ae9-0b1c-41a7-b248-9c2666a48cbc",
                                       "94eaf571-d0a7-4f6f-be41-bab9b92e1202", "9047e7ea-96fc-48b3-a21f-c7f5436673d1",
                                       "1fd1e1fe-195e-4f0c-ab61-f55dadd1fbe4", "8f4c070e-b37e-4267-9436-1ff9cae3d6f1"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, List.class,
                                                                 option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("845d8c59-871d-412c-b021-8a66595fe00a", "e7dca0e2-a1b2-46d7-8ef1-103e97865679",
                                       "ff8074cb-d452-4944-8c50-1bdaa8a6e7b2", "8255ff3d-828a-4e2b-885d-4317880069b8",
                                       "0af96ae0-b4e6-4b98-8151-a55402fc413d", "7e267611-9de7-4b8c-a3d4-44ad980fe6c4",
                                       "d4af787b-4ca5-41ae-b198-293535b64d3c"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID,
                                                                    List.class, option));
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            FirmwareImageListOptions firmwareimagelistoptions1 = new FirmwareImageListOptions(Integer.valueOf(37),
                                                                                              Long.valueOf(-69),
                                                                                              Order.getDefault(),
                                                                                              "a4b35077-a2ca-4562-8e1e-826cc4a99a29",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions2 = new FirmwareImageListOptions(Integer.valueOf(37),
                                                                                              Long.valueOf(-69),
                                                                                              Order.getDefault(),
                                                                                              "a4b35077-a2ca-4562-8e1e-826cc4a99a29",
                                                                                              null, null);
            assertNotNull(firmwareimagelistoptions1);
            assertNotNull(firmwareimagelistoptions2);
            assertNotSame(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2.hashCode(), firmwareimagelistoptions1.hashCode());
            int hashCode = firmwareimagelistoptions1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, firmwareimagelistoptions1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            FirmwareImageListOptions firmwareimagelistoptions1 = new FirmwareImageListOptions(Integer.valueOf(-18),
                                                                                              Long.valueOf(104),
                                                                                              Order.getDefault(),
                                                                                              "caf52236-7fd8-4ba9-b51c-579d638b848f",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions2 = new FirmwareImageListOptions(Integer.valueOf(-18),
                                                                                              Long.valueOf(104),
                                                                                              Order.getDefault(),
                                                                                              "caf52236-7fd8-4ba9-b51c-579d638b848f",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions3 = new FirmwareImageListOptions(Integer.valueOf(-51),
                                                                                              Long.valueOf(56),
                                                                                              Order.getDefault(),
                                                                                              "edda6714-9c7b-445e-86c7-274d7863d5c8",
                                                                                              null, null);
            assertNotNull(firmwareimagelistoptions1);
            assertNotNull(firmwareimagelistoptions2);
            assertNotNull(firmwareimagelistoptions3);
            assertNotSame(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertNotSame(firmwareimagelistoptions3, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions1, firmwareimagelistoptions2);
            assertEquals(firmwareimagelistoptions1, firmwareimagelistoptions1);
            assertFalse(firmwareimagelistoptions1.equals(null));
            assertNotEquals(firmwareimagelistoptions3, firmwareimagelistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
