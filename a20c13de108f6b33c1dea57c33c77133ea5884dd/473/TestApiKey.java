// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model ApiKey.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestApiKey {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ApiKey apikey1 = new ApiKey("bc05f908d0c49f1d35eb7cbe17ca2cb5", new Date(1557969571190L), -96,
                                        "bc05f908d0c49f1d35eb7cbe17ca2cb5", "79d0bcfe-fe80-444a-ad76-0e59616d5663", 61,
                                        "2bc94529-095f-4455-b641-0dd453b1255b", "bc05f908d0c49f1d35eb7cbe17ca2cb5",
                                        ApiKeyStatus.getDefault(), new Date(1557969569395L));
            ApiKey apikey2 = apikey1.clone();
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotSame(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ApiKey apikey1 = new ApiKey("bc05f908d0c49f1d35eb7cbe17ca2cb5", new Date(1557969571569L), -76,
                                        "bc05f908d0c49f1d35eb7cbe17ca2cb5", "b0498cd3-54c1-4326-9399-f55105f56f3d", -91,
                                        "d76c0246-97cb-40c7-8e57-39ce91dfe82a", "bc05f908d0c49f1d35eb7cbe17ca2cb5",
                                        ApiKeyStatus.getDefault(), new Date(1557969569738L));
            ApiKey apikey2 = new ApiKey("bc05f908d0c49f1d35eb7cbe17ca2cb5", new Date(1557969571569L), -76,
                                        "bc05f908d0c49f1d35eb7cbe17ca2cb5", "b0498cd3-54c1-4326-9399-f55105f56f3d", -91,
                                        "d76c0246-97cb-40c7-8e57-39ce91dfe82a", "bc05f908d0c49f1d35eb7cbe17ca2cb5",
                                        ApiKeyStatus.getDefault(), new Date(1557969569738L));
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotSame(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey2.hashCode(), apikey1.hashCode());
            int hashCode = apikey1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, apikey1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ApiKey apikey = new ApiKey("bc05f908d0c49f1d35eb7cbe17ca2cb5", new Date(1557969571385L), 23,
                                   "bc05f908d0c49f1d35eb7cbe17ca2cb5", "e7eb4fed-32ab-49bf-8195-704bbaa66db0", 1,
                                   "758a59e3-f457-4b81-a82b-f5f3231b260d", "bc05f908d0c49f1d35eb7cbe17ca2cb5",
                                   ApiKeyStatus.getDefault(), new Date(1557969575350L));
        assertTrue(apikey.isValid());
        ApiKey apikeyInvalid = new ApiKey("/(6\u001b\u00166Y%N--\t66(-6è?ƒXI R\u000e6ï–‹è³ºè«¸<6-6]66è–¿\u001e6\u0003\u0006@?66;ê„¡P\u0013\u0002ê¢·B6#A6\u0016XMM]\u0018^à³¹",
                                          new Date(1557969576513L), -10,
                                          "/(6\u001b\u00166Y%N--\t66(-6è?ƒXI R\u000e6ï–‹è³ºè«¸<6-6]66è–¿\u001e6\u0003\u0006@?66;ê„¡P\u0013\u0002ê¢·B6#A6\u0016XMM]\u0018^à³¹",
                                          "bbb17ab7-ff22-49bc-98d5-d9d4e476779b", -123, null,
                                          "/(6\u001b\u00166Y%N--\t66(-6è?ƒXI R\u000e6ï–‹è³ºè«¸<6-6]66è–¿\u001e6\u0003\u0006@?66;ê„¡P\u0013\u0002ê¢·B6#A6\u0016XMM]\u0018^à³¹",
                                          ApiKeyStatus.getDefault(), new Date(1557969575300L));
        assertFalse(apikeyInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ApiKey apikey1 = new ApiKey("bc05f908d0c49f1d35eb7cbe17ca2cb5", new Date(1557969570926L), -22,
                                        "bc05f908d0c49f1d35eb7cbe17ca2cb5", "ef7477c8-1f10-4f18-94f4-2acfbb141a48", 9,
                                        "2a744bbf-2b41-4d13-964c-0592d3de8f54", "bc05f908d0c49f1d35eb7cbe17ca2cb5",
                                        ApiKeyStatus.getDefault(), new Date(1557969570671L));
            ApiKey apikey2 = new ApiKey("bc05f908d0c49f1d35eb7cbe17ca2cb5", new Date(1557969570926L), -22,
                                        "bc05f908d0c49f1d35eb7cbe17ca2cb5", "ef7477c8-1f10-4f18-94f4-2acfbb141a48", 9,
                                        "2a744bbf-2b41-4d13-964c-0592d3de8f54", "bc05f908d0c49f1d35eb7cbe17ca2cb5",
                                        ApiKeyStatus.getDefault(), new Date(1557969570671L));
            ApiKey apikey3 = new ApiKey("bc05f908d0c49f1d35eb7cbe17ca2cb5", new Date(1557969576189L), 117,
                                        "bc05f908d0c49f1d35eb7cbe17ca2cb5", "ff1067b0-68d0-4f11-bbcc-a94aef56f3cb", 82,
                                        "e9e5f515-6a18-4085-9c7a-7d5df2663c6e", "bc05f908d0c49f1d35eb7cbe17ca2cb5",
                                        ApiKeyStatus.getDefault(), new Date(1557969578011L));
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotNull(apikey3);
            assertNotSame(apikey2, apikey1);
            assertNotSame(apikey3, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey1, apikey2);
            assertEquals(apikey1, apikey1);
            assertFalse(apikey1.equals(null));
            assertNotEquals(apikey3, apikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
