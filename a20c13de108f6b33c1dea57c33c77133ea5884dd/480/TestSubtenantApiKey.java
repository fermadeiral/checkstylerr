// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantApiKey.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantApiKey {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("bc05f908d0c49f1d35eb7cbe17ca2cb5",
                                                                   new Date(1557969578176L), -98,
                                                                   "bc05f908d0c49f1d35eb7cbe17ca2cb5",
                                                                   "ee10b198-498d-44b1-8795-51e47cf81436", 47,
                                                                   "a6c4fca3-8e35-4c0c-b279-db4a0871f967",
                                                                   "bc05f908d0c49f1d35eb7cbe17ca2cb5",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1557969579056L));
            SubtenantApiKey subtenantapikey2 = subtenantapikey1.clone();
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("bc05f908d0c49f1d35eb7cbe17ca2cb5",
                                                                   new Date(1557969573769L), 71,
                                                                   "bc05f908d0c49f1d35eb7cbe17ca2cb5",
                                                                   "5e250379-b72f-40ce-8489-4a948508f61a", 110,
                                                                   "bcee6649-39c4-434a-8e86-8f1faddd86bd",
                                                                   "bc05f908d0c49f1d35eb7cbe17ca2cb5",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1557969576506L));
            SubtenantApiKey subtenantapikey2 = new SubtenantApiKey("bc05f908d0c49f1d35eb7cbe17ca2cb5",
                                                                   new Date(1557969573769L), 71,
                                                                   "bc05f908d0c49f1d35eb7cbe17ca2cb5",
                                                                   "5e250379-b72f-40ce-8489-4a948508f61a", 110,
                                                                   "bcee6649-39c4-434a-8e86-8f1faddd86bd",
                                                                   "bc05f908d0c49f1d35eb7cbe17ca2cb5",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1557969576506L));
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2.hashCode(), subtenantapikey1.hashCode());
            int hashCode = subtenantapikey1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantapikey1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantApiKey subtenantapikey = new SubtenantApiKey("bc05f908d0c49f1d35eb7cbe17ca2cb5",
                                                              new Date(1557969575476L), -98,
                                                              "bc05f908d0c49f1d35eb7cbe17ca2cb5",
                                                              "85f06cad-93e2-4f5c-8d93-0e5cc68954b1", -9,
                                                              "1cd41149-709e-4bc6-9e0a-dcc9ec20252c",
                                                              "bc05f908d0c49f1d35eb7cbe17ca2cb5",
                                                              SubtenantApiKeyStatus.getDefault(),
                                                              new Date(1557969572551L));
        assertTrue(subtenantapikey.isValid());
        SubtenantApiKey subtenantapikeyInvalid = new SubtenantApiKey(null, new Date(1557969578314L), 41,
                                                                     "/(6\u001b\u00166Y%N--\t66(-6è?ƒXI R\u000e6ï–‹è³ºè«¸<6-6]66è–¿\u001e6\u0003\u0006@?66;ê„¡P\u0013\u0002ê¢·B6#A6\u0016XMM]\u0018^à³¹",
                                                                     "ff25df26-85b6-4d5c-bed6-25197d476505", -66, null,
                                                                     "/(6\u001b\u00166Y%N--\t66(-6è?ƒXI R\u000e6ï–‹è³ºè«¸<6-6]66è–¿\u001e6\u0003\u0006@?66;ê„¡P\u0013\u0002ê¢·B6#A6\u0016XMM]\u0018^à³¹",
                                                                     SubtenantApiKeyStatus.getDefault(),
                                                                     new Date(1557969578560L));
        assertFalse(subtenantapikeyInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("bc05f908d0c49f1d35eb7cbe17ca2cb5",
                                                                   new Date(1557969578602L), 118,
                                                                   "bc05f908d0c49f1d35eb7cbe17ca2cb5",
                                                                   "4e765d7f-fed6-413c-9158-7aae9b464e55", 49,
                                                                   "d97afd47-a67d-4119-8f60-fed2e53624ef",
                                                                   "bc05f908d0c49f1d35eb7cbe17ca2cb5",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1557969576767L));
            SubtenantApiKey subtenantapikey2 = new SubtenantApiKey("bc05f908d0c49f1d35eb7cbe17ca2cb5",
                                                                   new Date(1557969578602L), 118,
                                                                   "bc05f908d0c49f1d35eb7cbe17ca2cb5",
                                                                   "4e765d7f-fed6-413c-9158-7aae9b464e55", 49,
                                                                   "d97afd47-a67d-4119-8f60-fed2e53624ef",
                                                                   "bc05f908d0c49f1d35eb7cbe17ca2cb5",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1557969576767L));
            SubtenantApiKey subtenantapikey3 = new SubtenantApiKey("bc05f908d0c49f1d35eb7cbe17ca2cb5",
                                                                   new Date(1557969574073L), 15,
                                                                   "bc05f908d0c49f1d35eb7cbe17ca2cb5",
                                                                   "1891375e-3f42-4bf0-8479-2a9a2bb2f046", 100,
                                                                   "e9592c79-e3b7-467b-ae7d-5dcad7e05574",
                                                                   "bc05f908d0c49f1d35eb7cbe17ca2cb5",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1557969577744L));
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotNull(subtenantapikey3);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertNotSame(subtenantapikey3, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey1, subtenantapikey2);
            assertEquals(subtenantapikey1, subtenantapikey1);
            assertFalse(subtenantapikey1.equals(null));
            assertNotEquals(subtenantapikey3, subtenantapikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
