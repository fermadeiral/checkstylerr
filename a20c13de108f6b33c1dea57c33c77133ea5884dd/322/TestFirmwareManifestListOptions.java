// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.deviceupdate.model;

import static org.junit.Assert.*;

import com.arm.mbed.cloud.sdk.common.Order;
import com.arm.mbed.cloud.sdk.common.listing.ListOptionsEncoder;
import com.arm.mbed.cloud.sdk.common.listing.filtering.FilterOperator;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import org.junit.Test;

/**
 * Unit tests for Model FirmwareManifestListOptions.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestFirmwareManifestListOptions {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            FirmwareManifestListOptions firmwaremanifestlistoptions1 = new FirmwareManifestListOptions(Integer.valueOf(-77),
                                                                                                       Long.valueOf(34),
                                                                                                       Order.getDefault(),
                                                                                                       "7fb1e6ee-7f3f-4bf4-a52a-26e9eb45a3c1",
                                                                                                       null, null);
            FirmwareManifestListOptions firmwaremanifestlistoptions2 = firmwaremanifestlistoptions1.clone();
            assertNotNull(firmwaremanifestlistoptions1);
            assertNotNull(firmwaremanifestlistoptions2);
            assertNotSame(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the filters method.
     */
    @SuppressWarnings({ "boxing", "resource" })
    @Test
    public void testFilters() {
        try {
            FirmwareManifestListOptions option = new FirmwareManifestListOptions().inCreatedAts(Arrays.asList(new Date(1557969570824L),
                                                                                                              new Date(1557969577269L),
                                                                                                              new Date(1557969578191L),
                                                                                                              new Date(1557969570635L),
                                                                                                              new Date(1557969579904L)))
                                                                                  .notInCreatedAts(Arrays.asList(new Date(1557969574565L)))
                                                                                  .lessThanCreatedAt(new Date(1557969576861L))
                                                                                  .greaterThanCreatedAt(new Date(1557969576260L))
                                                                                  .equalToName("dc4bbd6b-3216-4b82-bccc-af8d965a6152")
                                                                                  .notEqualToName("4c7ddaa6-b60a-4d15-bb04-9841e5c80658")
                                                                                  .inNames(Arrays.asList("966a1a33-5066-4323-ad4d-a71c918e9a71",
                                                                                                         "2284e2b1-8db5-4e2a-87aa-a8cc03603c18",
                                                                                                         "46357f41-fd1b-4020-8d63-e12b876db955",
                                                                                                         "db4bc4fb-e828-4022-8839-f2f5bfdd1d9b",
                                                                                                         "15115e93-7edb-4b14-9981-d8798f0b225f",
                                                                                                         "70663376-953c-46a4-ba60-a0dfae48c20c"))
                                                                                  .notInNames(Arrays.asList("752f3558-522e-4d48-9dab-a62b7f5064d3",
                                                                                                            "279c84bc-cedb-435d-a18e-c6dd21c3827c",
                                                                                                            "1cd2574a-9331-435c-b093-8d2d23316641",
                                                                                                            "8dadc608-e9c0-4529-b9ca-c72b0c26ab28"))
                                                                                  .equalToId("2c27768e-101a-4552-99b8-5fce67e738fa")
                                                                                  .notEqualToId("0d5d7617-0c78-4df3-ad4c-3a5014ba0c29")
                                                                                  .inIds(Arrays.asList("b1ac2b3d-a4e3-4fea-949b-9f2e155fca84",
                                                                                                       "b906428b-64ec-4083-a52e-52373945f3bb"))
                                                                                  .notInIds(Arrays.asList("0b27eee8-2da9-4269-b7a2-49f468d10588",
                                                                                                          "ea9da52d-979d-4eae-ae4e-2695e5528646",
                                                                                                          "d9c5ba3b-e9f6-4429-aca4-b48ad6a160c3",
                                                                                                          "af78822a-81c0-4292-8d70-c56a7fa7fe09",
                                                                                                          "560b18f4-a755-4cdf-a5a7-a5cdfca3c978",
                                                                                                          "44a101b4-0659-4278-80fb-63edfbd82fe6",
                                                                                                          "ed405922-6dfd-4b3f-ac32-f8569cdd27eb",
                                                                                                          "6befbf7c-86e2-4dfa-8402-76442b7a2d19"))
                                                                                  .equalToDatafileUrl("fc1cff56-9f25-47e0-89c1-aecfaad76b6a")
                                                                                  .notEqualToDatafileUrl("e0e2d976-e901-4aff-addc-111b8b5578e0")
                                                                                  .inDatafileUrls(Arrays.asList("7b0dc0e5-29d5-4b29-ad26-d87fd0c4a745",
                                                                                                                "83ececb4-44bf-4a25-8072-00645aea9cbf"))
                                                                                  .notInDatafileUrls(Arrays.asList("0caec92e-460b-407d-a42d-a85c8c91e73a",
                                                                                                                   "04299c52-a60d-4179-8de4-4270120e1cc3",
                                                                                                                   "cfc14b52-83d3-4cc4-9aa8-81f16b254583",
                                                                                                                   "5a4bc01f-4bb8-40eb-81a7-168d1aad9a8d",
                                                                                                                   "ea415a6c-27f6-4f7c-8c6b-bcae610cbc71",
                                                                                                                   "8b871973-750b-420d-ae7c-cc23e3d40878"))
                                                                                  .equalToDatafileSize(Long.valueOf(-89))
                                                                                  .notEqualToDatafileSize(Long.valueOf(20))
                                                                                  .inDatafileSizes(Arrays.asList(Long.valueOf(77),
                                                                                                                 Long.valueOf(96),
                                                                                                                 Long.valueOf(102),
                                                                                                                 Long.valueOf(-110),
                                                                                                                 Long.valueOf(34),
                                                                                                                 Long.valueOf(117),
                                                                                                                 Long.valueOf(-9),
                                                                                                                 Long.valueOf(-15),
                                                                                                                 Long.valueOf(9)))
                                                                                  .notInDatafileSizes(Arrays.asList(Long.valueOf(-35),
                                                                                                                    Long.valueOf(95),
                                                                                                                    Long.valueOf(-123),
                                                                                                                    Long.valueOf(57),
                                                                                                                    Long.valueOf(82)))
                                                                                  .equalToDeviceClass("6b39b71d-ed7c-4173-9374-83fbe8692881")
                                                                                  .notEqualToDeviceClass("b185c38d-eca1-4f50-9604-f86868fd1af2")
                                                                                  .inDeviceClass(Arrays.asList("a90215ec-3254-4ea8-8014-2e1ff0621c6f",
                                                                                                               "8eed8022-1032-4b16-9383-dd62e4542ab7",
                                                                                                               "6fb9ca42-4290-4708-9e7a-e1ab13f68d24",
                                                                                                               "a429fa1a-a13d-40dc-825a-bf06e932f21c",
                                                                                                               "94aca8cf-170d-4c29-897c-7d98173c5360",
                                                                                                               "74d6a50b-5ac5-4d44-a9bd-5c3a048c955b",
                                                                                                               "24da809f-8a8d-4551-b9f4-7ff7a4abce4f"))
                                                                                  .notInDeviceClass(Arrays.asList("34644e76-fc13-4721-b940-2797f0907f45"))
                                                                                  .inTimestamps(Arrays.asList(new Date(1557969575958L),
                                                                                                              new Date(1557969575710L),
                                                                                                              new Date(1557969571804L),
                                                                                                              new Date(1557969574949L),
                                                                                                              new Date(1557969570582L),
                                                                                                              new Date(1557969575145L),
                                                                                                              new Date(1557969579536L),
                                                                                                              new Date(1557969580391L)))
                                                                                  .notInTimestamps(Arrays.asList(new Date(1557969571513L),
                                                                                                                 new Date(1557969576174L),
                                                                                                                 new Date(1557969571834L),
                                                                                                                 new Date(1557969580243L),
                                                                                                                 new Date(1557969572367L)))
                                                                                  .lessThanTimestamp(new Date(1557969579909L))
                                                                                  .greaterThanTimestamp(new Date(1557969573008L))
                                                                                  .inUpdatedAts(Arrays.asList(new Date(1557969575684L),
                                                                                                              new Date(1557969572242L)))
                                                                                  .notInUpdatedAts(Arrays.asList(new Date(1557969576417L),
                                                                                                                 new Date(1557969575912L),
                                                                                                                 new Date(1557969579758L),
                                                                                                                 new Date(1557969571925L),
                                                                                                                 new Date(1557969573527L),
                                                                                                                 new Date(1557969571409L),
                                                                                                                 new Date(1557969579935L),
                                                                                                                 new Date(1557969571304L),
                                                                                                                 new Date(1557969576831L)))
                                                                                  .lessThanUpdatedAt(new Date(1557969573996L))
                                                                                  .greaterThanUpdatedAt(new Date(1557969576737L))
                                                                                  .equalToDescription("6ca429ea-7a3c-4444-88fd-7f00efc49dc2")
                                                                                  .notEqualToDescription("50a51763-bf3a-4046-aaa9-ae2468665fe2")
                                                                                  .inDescriptions(Arrays.asList("e8689c05-3afd-4fba-9208-ea8190dad4fd",
                                                                                                                "e03c4a7d-fcb1-4079-b5f2-e5385453b81e",
                                                                                                                "8e6debea-8192-41e0-93a3-0dc9153ab9bd",
                                                                                                                "34656fca-110e-4a6c-b6a7-5759d03a6a46",
                                                                                                                "f68ee66c-de51-474b-af7f-484a718cdf7b",
                                                                                                                "646c7809-5a24-4058-8b01-839c627fec8b"))
                                                                                  .notInDescriptions(Arrays.asList("7bab85d2-048c-4c35-aeb9-4dc0d10842ef",
                                                                                                                   "b77d32ba-96b8-4fd8-bf00-4e1053a1b2b8",
                                                                                                                   "3596baaa-44e5-4b13-a732-c9643f0c1306",
                                                                                                                   "6840679d-d9e1-471c-97f6-f46f826f37fe",
                                                                                                                   "16a9a9b0-e0f7-4f18-8c45-572b7eda6b8d",
                                                                                                                   "1b73dee0-cb77-4333-ae5e-57858c12bd4a"));
            assertTrue(option.hasFilters());
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1557969570824L), new Date(1557969577269L), new Date(1557969578191L),
                                       new Date(1557969570635L), new Date(1557969579904L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1557969574565L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                        FilterOperator.LESS_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1557969576861L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1557969576260L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME, FilterOperator.EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("dc4bbd6b-3216-4b82-bccc-af8d965a6152",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("4c7ddaa6-b60a-4d15-bb04-9841e5c80658",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME, FilterOperator.IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("966a1a33-5066-4323-ad4d-a71c918e9a71", "2284e2b1-8db5-4e2a-87aa-a8cc03603c18",
                                       "46357f41-fd1b-4020-8d63-e12b876db955", "db4bc4fb-e828-4022-8839-f2f5bfdd1d9b",
                                       "15115e93-7edb-4b14-9981-d8798f0b225f", "70663376-953c-46a4-ba60-a0dfae48c20c"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("752f3558-522e-4d48-9dab-a62b7f5064d3", "279c84bc-cedb-435d-a18e-c6dd21c3827c",
                                       "1cd2574a-9331-435c-b093-8d2d23316641", "8dadc608-e9c0-4529-b9ca-c72b0c26ab28"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID, FilterOperator.EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("2c27768e-101a-4552-99b8-5fce67e738fa",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("0d5d7617-0c78-4df3-ad4c-3a5014ba0c29",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID, FilterOperator.IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("b1ac2b3d-a4e3-4fea-949b-9f2e155fca84", "b906428b-64ec-4083-a52e-52373945f3bb"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("0b27eee8-2da9-4269-b7a2-49f468d10588", "ea9da52d-979d-4eae-ae4e-2695e5528646",
                                       "d9c5ba3b-e9f6-4429-aca4-b48ad6a160c3", "af78822a-81c0-4292-8d70-c56a7fa7fe09",
                                       "560b18f4-a755-4cdf-a5a7-a5cdfca3c978", "44a101b4-0659-4278-80fb-63edfbd82fe6",
                                       "ed405922-6dfd-4b3f-ac32-f8569cdd27eb", "6befbf7c-86e2-4dfa-8402-76442b7a2d19"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("fc1cff56-9f25-47e0-89c1-aecfaad76b6a",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("e0e2d976-e901-4aff-addc-111b8b5578e0",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("7b0dc0e5-29d5-4b29-ad26-d87fd0c4a745", "83ececb4-44bf-4a25-8072-00645aea9cbf"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("0caec92e-460b-407d-a42d-a85c8c91e73a", "04299c52-a60d-4179-8de4-4270120e1cc3",
                                       "cfc14b52-83d3-4cc4-9aa8-81f16b254583", "5a4bc01f-4bb8-40eb-81a7-168d1aad9a8d",
                                       "ea415a6c-27f6-4f7c-8c6b-bcae610cbc71", "8b871973-750b-420d-ae7c-cc23e3d40878"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(-89),
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    Long.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(20),
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                       Long.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(77), Long.valueOf(96), Long.valueOf(102), Long.valueOf(-110),
                                       Long.valueOf(34), Long.valueOf(117), Long.valueOf(-9), Long.valueOf(-15),
                                       Long.valueOf(9)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                        FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(-35), Long.valueOf(95), Long.valueOf(-123), Long.valueOf(57),
                                       Long.valueOf(82)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS, FilterOperator.EQUAL));
            assertNotNull(option.getDeviceClassFilters());
            assertEquals("6b39b71d-ed7c-4173-9374-83fbe8692881",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDeviceClassFilters());
            assertEquals("b185c38d-eca1-4f50-9604-f86868fd1af2",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS, FilterOperator.IN));
            assertNotNull(option.getDeviceClassFilters());
            assertEquals(Arrays.asList("a90215ec-3254-4ea8-8014-2e1ff0621c6f", "8eed8022-1032-4b16-9383-dd62e4542ab7",
                                       "6fb9ca42-4290-4708-9e7a-e1ab13f68d24", "a429fa1a-a13d-40dc-825a-bf06e932f21c",
                                       "94aca8cf-170d-4c29-897c-7d98173c5360", "74d6a50b-5ac5-4d44-a9bd-5c3a048c955b",
                                       "24da809f-8a8d-4551-b9f4-7ff7a4abce4f"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS, FilterOperator.NOT_IN));
            assertNotNull(option.getDeviceClassFilters());
            assertEquals(Arrays.asList("34644e76-fc13-4721-b940-2797f0907f45"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP, FilterOperator.IN));
            assertNotNull(option.getTimestampFilters());
            assertEquals(Arrays.asList(new Date(1557969575958L), new Date(1557969575710L), new Date(1557969571804L),
                                       new Date(1557969574949L), new Date(1557969570582L), new Date(1557969575145L),
                                       new Date(1557969579536L), new Date(1557969580391L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP, FilterOperator.NOT_IN));
            assertNotNull(option.getTimestampFilters());
            assertEquals(Arrays.asList(new Date(1557969571513L), new Date(1557969576174L), new Date(1557969571834L),
                                       new Date(1557969580243L), new Date(1557969572367L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP, FilterOperator.LESS_THAN));
            assertNotNull(option.getTimestampFilters());
            assertEquals(new Date(1557969579909L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getTimestampFilters());
            assertEquals(new Date(1557969573008L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1557969575684L), new Date(1557969572242L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1557969576417L), new Date(1557969575912L), new Date(1557969579758L),
                                       new Date(1557969571925L), new Date(1557969573527L), new Date(1557969571409L),
                                       new Date(1557969579935L), new Date(1557969571304L), new Date(1557969576831L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                        FilterOperator.LESS_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1557969573996L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1557969576737L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("6ca429ea-7a3c-4444-88fd-7f00efc49dc2",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("50a51763-bf3a-4046-aaa9-ae2468665fe2",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("e8689c05-3afd-4fba-9208-ea8190dad4fd", "e03c4a7d-fcb1-4079-b5f2-e5385453b81e",
                                       "8e6debea-8192-41e0-93a3-0dc9153ab9bd", "34656fca-110e-4a6c-b6a7-5759d03a6a46",
                                       "f68ee66c-de51-474b-af7f-484a718cdf7b", "646c7809-5a24-4058-8b01-839c627fec8b"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("7bab85d2-048c-4c35-aeb9-4dc0d10842ef", "b77d32ba-96b8-4fd8-bf00-4e1053a1b2b8",
                                       "3596baaa-44e5-4b13-a732-c9643f0c1306", "6840679d-d9e1-471c-97f6-f46f826f37fe",
                                       "16a9a9b0-e0f7-4f18-8c45-572b7eda6b8d", "1b73dee0-cb77-4333-ae5e-57858c12bd4a"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    List.class, option));
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            FirmwareManifestListOptions firmwaremanifestlistoptions1 = new FirmwareManifestListOptions(Integer.valueOf(13),
                                                                                                       Long.valueOf(66),
                                                                                                       Order.getDefault(),
                                                                                                       "02f395d0-5174-40f5-9265-4670dd239b45",
                                                                                                       null, null);
            FirmwareManifestListOptions firmwaremanifestlistoptions2 = new FirmwareManifestListOptions(Integer.valueOf(13),
                                                                                                       Long.valueOf(66),
                                                                                                       Order.getDefault(),
                                                                                                       "02f395d0-5174-40f5-9265-4670dd239b45",
                                                                                                       null, null);
            assertNotNull(firmwaremanifestlistoptions1);
            assertNotNull(firmwaremanifestlistoptions2);
            assertNotSame(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2.hashCode(), firmwaremanifestlistoptions1.hashCode());
            int hashCode = firmwaremanifestlistoptions1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, firmwaremanifestlistoptions1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            FirmwareManifestListOptions firmwaremanifestlistoptions1 = new FirmwareManifestListOptions(Integer.valueOf(65),
                                                                                                       Long.valueOf(60),
                                                                                                       Order.getDefault(),
                                                                                                       "5fa01388-6374-4f10-848c-15272c567e79",
                                                                                                       null, null);
            FirmwareManifestListOptions firmwaremanifestlistoptions2 = new FirmwareManifestListOptions(Integer.valueOf(65),
                                                                                                       Long.valueOf(60),
                                                                                                       Order.getDefault(),
                                                                                                       "5fa01388-6374-4f10-848c-15272c567e79",
                                                                                                       null, null);
            FirmwareManifestListOptions firmwaremanifestlistoptions3 = new FirmwareManifestListOptions(Integer.valueOf(-33),
                                                                                                       Long.valueOf(-115),
                                                                                                       Order.getDefault(),
                                                                                                       "f5dad5e7-6605-434b-9981-8edc21f53006",
                                                                                                       null, null);
            assertNotNull(firmwaremanifestlistoptions1);
            assertNotNull(firmwaremanifestlistoptions2);
            assertNotNull(firmwaremanifestlistoptions3);
            assertNotSame(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertNotSame(firmwaremanifestlistoptions3, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions1, firmwaremanifestlistoptions2);
            assertEquals(firmwaremanifestlistoptions1, firmwaremanifestlistoptions1);
            assertFalse(firmwaremanifestlistoptions1.equals(null));
            assertNotEquals(firmwaremanifestlistoptions3, firmwaremanifestlistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
