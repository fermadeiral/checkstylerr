// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import com.arm.mbed.cloud.sdk.common.Order;
import com.arm.mbed.cloud.sdk.common.listing.ListOptionsEncoder;
import com.arm.mbed.cloud.sdk.common.listing.filtering.FilterOperator;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEventsListOptions.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEventsListOptions {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEventsListOptions deviceeventslistoptions1 = new DeviceEventsListOptions(Integer.valueOf(72),
                                                                                           Long.valueOf(87),
                                                                                           Order.getDefault(),
                                                                                           "527b6dab-438b-4b91-8c66-5e57af85a845",
                                                                                           null, null);
            DeviceEventsListOptions deviceeventslistoptions2 = deviceeventslistoptions1.clone();
            assertNotNull(deviceeventslistoptions1);
            assertNotNull(deviceeventslistoptions2);
            assertNotSame(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2, deviceeventslistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the filters method.
     */
    @SuppressWarnings({ "boxing", "resource" })
    @Test
    public void testFilters() {
        try {
            DeviceEventsListOptions option = new DeviceEventsListOptions().equalToDeviceId("7e482aa1-a2d3-4189-8893-4f747d6d97ed")
                                                                          .notEqualToDeviceId("e9cf4811-9a80-4b19-a399-2474bb4bffa2")
                                                                          .inDeviceIds(Arrays.asList("ee24161e-87f8-4d20-9c1e-6c6e00b2f9ab",
                                                                                                     "3c7d05be-8451-41df-98b0-376a21b56a58",
                                                                                                     "94495a57-f824-42a0-9c60-0ce502dbf343",
                                                                                                     "6de4a47f-4efb-432d-b0f5-43f067f84a79",
                                                                                                     "b11585ba-bc60-4f95-b427-a445c9ede664",
                                                                                                     "d44fae44-d2ce-46c0-ab89-b8bfbf9ba803",
                                                                                                     "18287028-b201-485b-9738-e461bcb91a53"))
                                                                          .notInDeviceIds(Arrays.asList("fb4e7544-b525-476f-80c0-bc86c5898125",
                                                                                                        "5aa2b1dd-789b-4933-be29-b9093ae61bbe",
                                                                                                        "fb1e6531-bb1a-418e-b9c2-ace0a380d78b",
                                                                                                        "85f3569c-d287-406f-99a9-1ddb39d0cc13",
                                                                                                        "810e4853-91f5-49ca-8216-085c5b57534f",
                                                                                                        "f65a42ba-edd6-4e47-9193-c1ecbbd555c3"))
                                                                          .equalToDescription("2af61806-bb33-4596-ad0d-7d20e0939f3b")
                                                                          .notEqualToDescription("0976c8d5-53cf-4d38-ac97-0c64ee53ea4b")
                                                                          .inDescriptions(Arrays.asList("151f8100-3a63-4d6a-b39c-aa994f2b21bb",
                                                                                                        "73dba8e6-2887-4258-a1f5-2db9cc233e4d",
                                                                                                        "1a4cf75a-d8a3-4883-8e9f-4a53975b3d8a",
                                                                                                        "5ba6cb75-3efc-4609-9014-beb7cf353352",
                                                                                                        "7dd4617b-627f-4f60-9b80-4a845fa20f3a"))
                                                                          .notInDescriptions(Arrays.asList("d0325a40-164b-4e4b-99c6-3d3f3ddc9ba2"))
                                                                          .inDateTimes(Arrays.asList(new Date(1561632943058L),
                                                                                                     new Date(1561632943903L),
                                                                                                     new Date(1561632940947L),
                                                                                                     new Date(1561632936964L),
                                                                                                     new Date(1561632940594L),
                                                                                                     new Date(1561632938256L),
                                                                                                     new Date(1561632937733L),
                                                                                                     new Date(1561632937599L),
                                                                                                     new Date(1561632944255L)))
                                                                          .notInDateTimes(Arrays.asList(new Date(1561632942206L),
                                                                                                        new Date(1561632936150L)))
                                                                          .lessThanDateTime(new Date(1561632942860L))
                                                                          .greaterThanDateTime(new Date(1561632943216L))
                                                                          .equalToStateChange(Boolean.FALSE)
                                                                          .notEqualToStateChange(Boolean.TRUE)
                                                                          .equalToId("d02c4ebd-9194-4296-925b-7eeb5007506c")
                                                                          .notEqualToId("960a4e07-1e07-4917-8bc7-9fff6ce1fafc")
                                                                          .inIds(Arrays.asList("dd53d6ec-827f-4c77-8df9-913596a8c727",
                                                                                               "4b5d52a4-549e-4cda-b763-53df41ecbece",
                                                                                               "880e478b-4b86-4c0c-a2e0-f0b5ca8600ce",
                                                                                               "0d86ed19-0682-4efa-8c70-baf915edc170",
                                                                                               "6e72e214-f668-467b-830f-116476c03ab4",
                                                                                               "47cf7677-190e-4ce0-87df-e5b5742a0cce",
                                                                                               "b46d8c86-638d-4cca-b42c-655e31845d93",
                                                                                               "9b6b3750-e51a-4ebe-8fe6-bda575c08f04",
                                                                                               "6983ef05-3e33-43b1-8894-26429e1aaded"))
                                                                          .notInIds(Arrays.asList("57b90e47-f850-4dd9-adbf-2a81511923a4",
                                                                                                  "b69d223b-2517-4eec-bbe2-f797b70544e2",
                                                                                                  "f637c7b6-ba59-40a8-a427-3875dba78693",
                                                                                                  "24cde93c-432f-4cae-a9be-3b16a879031c",
                                                                                                  "b1a333fd-700b-44fc-8fa5-3ca6252d67ff",
                                                                                                  "672b3733-b9df-48e9-beb4-fe67675435b2",
                                                                                                  "515830f4-8509-42ba-a4c9-cfb4077efe1d"))
                                                                          .equalToEventType("6c6e3f1b-1f04-4952-ba0e-60a1d0ebe6ce")
                                                                          .notEqualToEventType("922829ea-2057-4531-a917-13c4004ef149")
                                                                          .inEventTypes(Arrays.asList("088ed261-085f-48f7-8f7e-dc76ad62f754",
                                                                                                      "04ebadd6-142d-4166-8294-08dae5e5b8c0",
                                                                                                      "4be4294a-a51a-402a-8a8e-8f543ae2bb48"))
                                                                          .notInEventTypes(Arrays.asList("892582d9-b4ce-42bd-b673-a59ccd47b8bc",
                                                                                                         "3a7d7d13-2922-40df-a193-44fa18220377",
                                                                                                         "163e8529-a8b5-4d75-9857-27b2534c5fb4",
                                                                                                         "75d6269e-a8b6-4c22-b4ec-31128b4ef0a2",
                                                                                                         "2276a2ab-f142-471e-ab42-21ac767c186b",
                                                                                                         "e637fcf2-6892-4d42-b05d-41832d77d7a4",
                                                                                                         "79a2ca07-c29e-4e0e-87cd-38d5e090ca8f"));
            assertTrue(option.hasFilters());
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID, FilterOperator.EQUAL));
            assertNotNull(option.getDeviceIdFilters());
            assertEquals("7e482aa1-a2d3-4189-8893-4f747d6d97ed",
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDeviceIdFilters());
            assertEquals("e9cf4811-9a80-4b19-a399-2474bb4bffa2",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID, FilterOperator.IN));
            assertNotNull(option.getDeviceIdFilters());
            assertEquals(Arrays.asList("ee24161e-87f8-4d20-9c1e-6c6e00b2f9ab", "3c7d05be-8451-41df-98b0-376a21b56a58",
                                       "94495a57-f824-42a0-9c60-0ce502dbf343", "6de4a47f-4efb-432d-b0f5-43f067f84a79",
                                       "b11585ba-bc60-4f95-b427-a445c9ede664", "d44fae44-d2ce-46c0-ab89-b8bfbf9ba803",
                                       "18287028-b201-485b-9738-e461bcb91a53"),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID,
                                                                 List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getDeviceIdFilters());
            assertEquals(Arrays.asList("fb4e7544-b525-476f-80c0-bc86c5898125", "5aa2b1dd-789b-4933-be29-b9093ae61bbe",
                                       "fb1e6531-bb1a-418e-b9c2-ace0a380d78b", "85f3569c-d287-406f-99a9-1ddb39d0cc13",
                                       "810e4853-91f5-49ca-8216-085c5b57534f", "f65a42ba-edd6-4e47-9193-c1ecbbd555c3"),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DEVICE_ID,
                                                                    List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("2af61806-bb33-4596-ad0d-7d20e0939f3b",
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("0976c8d5-53cf-4d38-ac97-0c64ee53ea4b",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                       String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("151f8100-3a63-4d6a-b39c-aa994f2b21bb", "73dba8e6-2887-4258-a1f5-2db9cc233e4d",
                                       "1a4cf75a-d8a3-4883-8e9f-4a53975b3d8a", "5ba6cb75-3efc-4609-9014-beb7cf353352",
                                       "7dd4617b-627f-4f60-9b80-4a845fa20f3a"),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                 List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("d0325a40-164b-4e4b-99c6-3d3f3ddc9ba2"),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME, FilterOperator.IN));
            assertNotNull(option.getDateTimeFilters());
            assertEquals(Arrays.asList(new Date(1561632943058L), new Date(1561632943903L), new Date(1561632940947L),
                                       new Date(1561632936964L), new Date(1561632940594L), new Date(1561632938256L),
                                       new Date(1561632937733L), new Date(1561632937599L), new Date(1561632944255L)),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME,
                                                                 List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME, FilterOperator.NOT_IN));
            assertNotNull(option.getDateTimeFilters());
            assertEquals(Arrays.asList(new Date(1561632942206L), new Date(1561632936150L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME,
                                                                    List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME, FilterOperator.LESS_THAN));
            assertNotNull(option.getDateTimeFilters());
            assertEquals(new Date(1561632942860L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME, FilterOperator.GREATER_THAN));
            assertNotNull(option.getDateTimeFilters());
            assertEquals(new Date(1561632943216L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(DeviceEventsListOptions.TAG_FILTER_BY_DATE_TIME,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE, FilterOperator.EQUAL));
            assertNotNull(option.getStateChangeFilters());
            assertEquals(Boolean.FALSE,
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE,
                                                                    Boolean.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getStateChangeFilters());
            assertEquals(Boolean.TRUE,
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_STATE_CHANGE,
                                                                       Boolean.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, FilterOperator.EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("d02c4ebd-9194-4296-925b-7eeb5007506c",
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("960a4e07-1e07-4917-8bc7-9fff6ce1fafc",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, FilterOperator.IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("dd53d6ec-827f-4c77-8df9-913596a8c727", "4b5d52a4-549e-4cda-b763-53df41ecbece",
                                       "880e478b-4b86-4c0c-a2e0-f0b5ca8600ce", "0d86ed19-0682-4efa-8c70-baf915edc170",
                                       "6e72e214-f668-467b-830f-116476c03ab4", "47cf7677-190e-4ce0-87df-e5b5742a0cce",
                                       "b46d8c86-638d-4cca-b42c-655e31845d93", "9b6b3750-e51a-4ebe-8fe6-bda575c08f04",
                                       "6983ef05-3e33-43b1-8894-26429e1aaded"),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, List.class,
                                                                 option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("57b90e47-f850-4dd9-adbf-2a81511923a4", "b69d223b-2517-4eec-bbe2-f797b70544e2",
                                       "f637c7b6-ba59-40a8-a427-3875dba78693", "24cde93c-432f-4cae-a9be-3b16a879031c",
                                       "b1a333fd-700b-44fc-8fa5-3ca6252d67ff", "672b3733-b9df-48e9-beb4-fe67675435b2",
                                       "515830f4-8509-42ba-a4c9-cfb4077efe1d"),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_ID,
                                                                    List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE, FilterOperator.EQUAL));
            assertNotNull(option.getEventTypeFilters());
            assertEquals("6c6e3f1b-1f04-4952-ba0e-60a1d0ebe6ce",
                         ListOptionsEncoder.encodeSingleEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE,
                                                                    String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getEventTypeFilters());
            assertEquals("922829ea-2057-4531-a917-13c4004ef149",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE,
                                                                       String.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE, FilterOperator.IN));
            assertNotNull(option.getEventTypeFilters());
            assertEquals(Arrays.asList("088ed261-085f-48f7-8f7e-dc76ad62f754", "04ebadd6-142d-4166-8294-08dae5e5b8c0",
                                       "4be4294a-a51a-402a-8a8e-8f543ae2bb48"),
                         ListOptionsEncoder.encodeSingleInFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE,
                                                                 List.class, option));
            assertTrue(option.hasFilters(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE));
            assertTrue(option.hasFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE, FilterOperator.NOT_IN));
            assertNotNull(option.getEventTypeFilters());
            assertEquals(Arrays.asList("892582d9-b4ce-42bd-b673-a59ccd47b8bc", "3a7d7d13-2922-40df-a193-44fa18220377",
                                       "163e8529-a8b5-4d75-9857-27b2534c5fb4", "75d6269e-a8b6-4c22-b4ec-31128b4ef0a2",
                                       "2276a2ab-f142-471e-ab42-21ac767c186b", "e637fcf2-6892-4d42-b05d-41832d77d7a4",
                                       "79a2ca07-c29e-4e0e-87cd-38d5e090ca8f"),
                         ListOptionsEncoder.encodeSingleNotInFilter(DeviceEventsListOptions.TAG_FILTER_BY_EVENT_TYPE,
                                                                    List.class, option));
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEventsListOptions deviceeventslistoptions1 = new DeviceEventsListOptions(Integer.valueOf(97),
                                                                                           Long.valueOf(97),
                                                                                           Order.getDefault(),
                                                                                           "5d116e0e-9b85-4adb-9251-975e83ab5ce8",
                                                                                           null, null);
            DeviceEventsListOptions deviceeventslistoptions2 = new DeviceEventsListOptions(Integer.valueOf(97),
                                                                                           Long.valueOf(97),
                                                                                           Order.getDefault(),
                                                                                           "5d116e0e-9b85-4adb-9251-975e83ab5ce8",
                                                                                           null, null);
            assertNotNull(deviceeventslistoptions1);
            assertNotNull(deviceeventslistoptions2);
            assertNotSame(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2.hashCode(), deviceeventslistoptions1.hashCode());
            int hashCode = deviceeventslistoptions1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceeventslistoptions1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEventsListOptions deviceeventslistoptions1 = new DeviceEventsListOptions(Integer.valueOf(-128),
                                                                                           Long.valueOf(119),
                                                                                           Order.getDefault(),
                                                                                           "999a25b6-1214-43a8-ae87-6e31bdf79c1b",
                                                                                           null, null);
            DeviceEventsListOptions deviceeventslistoptions2 = new DeviceEventsListOptions(Integer.valueOf(-128),
                                                                                           Long.valueOf(119),
                                                                                           Order.getDefault(),
                                                                                           "999a25b6-1214-43a8-ae87-6e31bdf79c1b",
                                                                                           null, null);
            DeviceEventsListOptions deviceeventslistoptions3 = new DeviceEventsListOptions(Integer.valueOf(-57),
                                                                                           Long.valueOf(-83),
                                                                                           Order.getDefault(),
                                                                                           "2a91fad1-e8b5-4f8b-a51a-f13ccd77deb5",
                                                                                           null, null);
            assertNotNull(deviceeventslistoptions1);
            assertNotNull(deviceeventslistoptions2);
            assertNotNull(deviceeventslistoptions3);
            assertNotSame(deviceeventslistoptions2, deviceeventslistoptions1);
            assertNotSame(deviceeventslistoptions3, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions2, deviceeventslistoptions1);
            assertEquals(deviceeventslistoptions1, deviceeventslistoptions2);
            assertEquals(deviceeventslistoptions1, deviceeventslistoptions1);
            assertFalse(deviceeventslistoptions1.equals(null));
            assertNotEquals(deviceeventslistoptions3, deviceeventslistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
