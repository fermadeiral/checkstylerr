// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEvents.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEvents {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1561632934166L), null,
                                                          new Date(1561632942682L),
                                                          "1c8c983b-ce08-4446-b137-df111e0b62aa",
                                                          "c4c05c76-82f6-4f13-8d92-61b0314df9f4",
                                                          "4da5e0a5-d21f-40a8-b394-eddca9d031d9",
                                                          "8c369be6-f156-41c5-8b6f-21ee5af77ab4",
                                                          "085d7a3c-53ec-4d59-a025-a97f8bacd8a7",
                                                          "c03bcaac-e5f0-4cab-868d-ba014e081171", true);
            DeviceEvents deviceevents2 = deviceevents1.clone();
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1561632941925L), null,
                                                          new Date(1561632939508L),
                                                          "84954d26-668c-41d1-a94c-eb9a7087c7b4",
                                                          "bf4f4c34-5471-415c-aa70-291ef2925b80",
                                                          "fc469ea5-193a-4ed2-aaf7-1b12813c70be",
                                                          "dd4522eb-3282-4526-a2a0-b41725148fd0",
                                                          "de96a782-f657-408c-849a-6b9a9b6a1742",
                                                          "88966155-a5c4-4319-80f4-64d3ec2700c3", false);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1561632941925L), null,
                                                          new Date(1561632939508L),
                                                          "84954d26-668c-41d1-a94c-eb9a7087c7b4",
                                                          "bf4f4c34-5471-415c-aa70-291ef2925b80",
                                                          "fc469ea5-193a-4ed2-aaf7-1b12813c70be",
                                                          "dd4522eb-3282-4526-a2a0-b41725148fd0",
                                                          "de96a782-f657-408c-849a-6b9a9b6a1742",
                                                          "88966155-a5c4-4319-80f4-64d3ec2700c3", false);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2.hashCode(), deviceevents1.hashCode());
            int hashCode = deviceevents1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceevents1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEvents deviceevents = new DeviceEvents(null, new Date(1561632935589L), null, new Date(1561632939114L),
                                                     "8176ea75-9466-458a-a23e-4b7b3a4eccde",
                                                     "3506cb95-f991-4ea0-9034-4ea684e06946",
                                                     "48b07c25-7fea-4913-ab5d-1cac747c1770",
                                                     "50f22689-d492-4593-94d7-ca3b06b22548",
                                                     "f72547df-1399-47fa-a8c1-409a159f9a1e",
                                                     "cb12eefa-3f52-4bb4-bc96-3d9c1b34b7a9", false);
        assertTrue(deviceevents.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1561632941734L), null,
                                                          new Date(1561632935662L),
                                                          "e0f85926-69ae-40d7-b2ba-43673275b166",
                                                          "3c5ad913-94f0-4ade-af58-463c91d6d46c",
                                                          "070efa0f-cf36-4ff1-9788-b5a3e593f28b",
                                                          "db2985ba-d31d-42fb-a95a-20bdb422e351",
                                                          "ab787590-1fea-4abb-80ef-bc78c307ad68",
                                                          "d1873e68-e82d-4020-933f-c87a7ec98e01", false);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1561632941734L), null,
                                                          new Date(1561632935662L),
                                                          "e0f85926-69ae-40d7-b2ba-43673275b166",
                                                          "3c5ad913-94f0-4ade-af58-463c91d6d46c",
                                                          "070efa0f-cf36-4ff1-9788-b5a3e593f28b",
                                                          "db2985ba-d31d-42fb-a95a-20bdb422e351",
                                                          "ab787590-1fea-4abb-80ef-bc78c307ad68",
                                                          "d1873e68-e82d-4020-933f-c87a7ec98e01", false);
            DeviceEvents deviceevents3 = new DeviceEvents(null, new Date(1561632934393L), null,
                                                          new Date(1561632937022L),
                                                          "67181368-eb3d-436d-9956-fdc5bb8122f7",
                                                          "7f362c18-a692-4778-a602-ad1dcaf01738",
                                                          "3014dd4f-0dbf-481d-8802-48f1512c350e",
                                                          "36eeb75e-7000-4421-b637-017e532c20aa",
                                                          "9b95b8e7-7b5e-4a8f-9691-5fd6ae5916be",
                                                          "b4d30a18-d7d0-47d5-a474-1f926b28ae90", false);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotNull(deviceevents3);
            assertNotSame(deviceevents2, deviceevents1);
            assertNotSame(deviceevents3, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents1, deviceevents2);
            assertEquals(deviceevents1, deviceevents1);
            assertFalse(deviceevents1.equals(null));
            assertNotEquals(deviceevents3, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
