// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantApiKey.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantApiKey {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("0ba2bdaa1a27dfa7cabb78466e8ea791",
                                                                   new Date(1561632942337L), -9,
                                                                   "0ba2bdaa1a27dfa7cabb78466e8ea791",
                                                                   "61135d10-9158-4282-bd13-aabbe12d45c0", 119,
                                                                   "be40a382-d98a-4abb-b940-ba709c30c6a8",
                                                                   "0ba2bdaa1a27dfa7cabb78466e8ea791",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1561632935848L));
            SubtenantApiKey subtenantapikey2 = subtenantapikey1.clone();
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("0ba2bdaa1a27dfa7cabb78466e8ea791",
                                                                   new Date(1561632936759L), -20,
                                                                   "0ba2bdaa1a27dfa7cabb78466e8ea791",
                                                                   "ae05bef0-55c9-4697-84a9-5fb7b0524c44", -59,
                                                                   "74c6eea7-8a5a-4527-bb62-02cb12f1f664",
                                                                   "0ba2bdaa1a27dfa7cabb78466e8ea791",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1561632933582L));
            SubtenantApiKey subtenantapikey2 = new SubtenantApiKey("0ba2bdaa1a27dfa7cabb78466e8ea791",
                                                                   new Date(1561632936759L), -20,
                                                                   "0ba2bdaa1a27dfa7cabb78466e8ea791",
                                                                   "ae05bef0-55c9-4697-84a9-5fb7b0524c44", -59,
                                                                   "74c6eea7-8a5a-4527-bb62-02cb12f1f664",
                                                                   "0ba2bdaa1a27dfa7cabb78466e8ea791",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1561632933582L));
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2.hashCode(), subtenantapikey1.hashCode());
            int hashCode = subtenantapikey1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantapikey1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantApiKey subtenantapikey = new SubtenantApiKey("0ba2bdaa1a27dfa7cabb78466e8ea791",
                                                              new Date(1561632941339L), -108,
                                                              "0ba2bdaa1a27dfa7cabb78466e8ea791",
                                                              "d271265f-0d20-43a0-b914-d890cfc8a78b", -102,
                                                              "a6aae174-e017-4c12-a302-328781856323",
                                                              "0ba2bdaa1a27dfa7cabb78466e8ea791",
                                                              SubtenantApiKeyStatus.getDefault(),
                                                              new Date(1561632940884L));
        assertTrue(subtenantapikey.isValid());
        SubtenantApiKey subtenantapikeyInvalid = new SubtenantApiKey(null, new Date(1561632933165L), -53,
                                                                     "3çµƒ\u001b3535`3!è»µI3 êµ§33BB3ê€€355àº”5çŸ˜5-á°¾55[5í†¤553,\u0017æ—’[3?ç­?35O\u0004:3;\u001d\u0015B3355æ§—5äŠ¨N",
                                                                     "fa44548a-6355-46f8-975c-1a0fea25d1ad", -72, null,
                                                                     "3çµƒ\u001b3535`3!è»µI3 êµ§33BB3ê€€355àº”5çŸ˜5-á°¾55[5í†¤553,\u0017æ—’[3?ç­?35O\u0004:3;\u001d\u0015B3355æ§—5äŠ¨N",
                                                                     SubtenantApiKeyStatus.getDefault(),
                                                                     new Date(1561632939084L));
        assertFalse(subtenantapikeyInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("0ba2bdaa1a27dfa7cabb78466e8ea791",
                                                                   new Date(1561632933245L), 21,
                                                                   "0ba2bdaa1a27dfa7cabb78466e8ea791",
                                                                   "b11506dc-5097-4cf6-9e27-4ef0111706ab", 21,
                                                                   "d4e8e569-df4e-4061-8091-81d67d73dd6b",
                                                                   "0ba2bdaa1a27dfa7cabb78466e8ea791",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1561632933322L));
            SubtenantApiKey subtenantapikey2 = new SubtenantApiKey("0ba2bdaa1a27dfa7cabb78466e8ea791",
                                                                   new Date(1561632933245L), 21,
                                                                   "0ba2bdaa1a27dfa7cabb78466e8ea791",
                                                                   "b11506dc-5097-4cf6-9e27-4ef0111706ab", 21,
                                                                   "d4e8e569-df4e-4061-8091-81d67d73dd6b",
                                                                   "0ba2bdaa1a27dfa7cabb78466e8ea791",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1561632933322L));
            SubtenantApiKey subtenantapikey3 = new SubtenantApiKey("0ba2bdaa1a27dfa7cabb78466e8ea791",
                                                                   new Date(1561632939123L), -119,
                                                                   "0ba2bdaa1a27dfa7cabb78466e8ea791",
                                                                   "30434621-9b28-4a6e-8909-9465cfef2634", 3,
                                                                   "bd823f07-7fc6-4a3c-9f4f-4eb39f2e0995",
                                                                   "0ba2bdaa1a27dfa7cabb78466e8ea791",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1561632940029L));
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotNull(subtenantapikey3);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertNotSame(subtenantapikey3, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey1, subtenantapikey2);
            assertEquals(subtenantapikey1, subtenantapikey1);
            assertFalse(subtenantapikey1.equals(null));
            assertNotEquals(subtenantapikey3, subtenantapikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
