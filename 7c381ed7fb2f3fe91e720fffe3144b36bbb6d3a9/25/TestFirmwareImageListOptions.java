// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.deviceupdate.model;

import static org.junit.Assert.*;

import com.arm.mbed.cloud.sdk.common.Order;
import com.arm.mbed.cloud.sdk.common.listing.ListOptionsEncoder;
import com.arm.mbed.cloud.sdk.common.listing.filtering.FilterOperator;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import org.junit.Test;

/**
 * Unit tests for Model FirmwareImageListOptions.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestFirmwareImageListOptions {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            FirmwareImageListOptions firmwareimagelistoptions1 = new FirmwareImageListOptions(Integer.valueOf(-21),
                                                                                              Long.valueOf(-94),
                                                                                              Order.getDefault(),
                                                                                              "2370a1f9-0d2c-48ce-9664-3e851be859e8",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions2 = firmwareimagelistoptions1.clone();
            assertNotNull(firmwareimagelistoptions1);
            assertNotNull(firmwareimagelistoptions2);
            assertNotSame(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the filters method.
     */
    @SuppressWarnings({ "boxing", "resource" })
    @Test
    public void testFilters() {
        try {
            FirmwareImageListOptions option = new FirmwareImageListOptions().inUpdatedAts(Arrays.asList(new Date(1561632942598L)))
                                                                            .notInUpdatedAts(Arrays.asList(new Date(1561632941026L),
                                                                                                           new Date(1561632936622L),
                                                                                                           new Date(1561632941475L),
                                                                                                           new Date(1561632937959L),
                                                                                                           new Date(1561632937234L),
                                                                                                           new Date(1561632942736L),
                                                                                                           new Date(1561632943009L)))
                                                                            .lessThanUpdatedAt(new Date(1561632935791L))
                                                                            .greaterThanUpdatedAt(new Date(1561632944704L))
                                                                            .equalToName("388a94b7-951e-467c-aa3e-37671b166518")
                                                                            .notEqualToName("5f9fae3a-f9e6-43f3-82ac-4bf8f8774ce0")
                                                                            .inNames(Arrays.asList("45e74323-6a02-4ecd-8734-3ee878fc311b",
                                                                                                   "0f4ecfff-96d2-4f91-93d5-e2834474c202",
                                                                                                   "6a68e87a-f69f-4e1d-8eef-f7ae33ea2d4f",
                                                                                                   "dea344ae-5194-46c3-9db8-c3669dd39889",
                                                                                                   "cc2d5336-d217-4c65-b2f8-2475ee4abde7",
                                                                                                   "acf32aa3-7332-44bf-85c1-3c28b47cb579",
                                                                                                   "572e3380-71d5-4ae4-84b3-8c3cc25eccf5",
                                                                                                   "2544bb5b-e2db-43a0-a24c-ce3cb57dd48b",
                                                                                                   "3a668c0f-8835-4622-841b-639b7f054ec4"))
                                                                            .notInNames(Arrays.asList("ccab6553-9226-461e-a385-05467a3c080e",
                                                                                                      "e763f2e5-ce10-44b1-858a-35cb3780fefa",
                                                                                                      "aac03f08-b56c-47ab-88ed-3c92f4479c8e",
                                                                                                      "932fe690-c4ec-4d73-a6ca-6d5cb4d44b91",
                                                                                                      "a664a393-db54-4cde-b347-e4c6c18a950f",
                                                                                                      "9ebe79a6-04f0-4780-8f1c-a311de512a91",
                                                                                                      "9762dfeb-1caa-4347-9b7e-7b10bf8a9f30",
                                                                                                      "ee0c8815-192e-4fd4-a73b-e7135bf10942"))
                                                                            .equalToDescription("b9d1b2bb-0af8-40d5-8410-6d5996705f6b")
                                                                            .notEqualToDescription("65b05772-c701-4a2b-91e3-5b833c2e678c")
                                                                            .inDescriptions(Arrays.asList("e8dceb8c-8eda-4b50-bdeb-31e12f703bae"))
                                                                            .notInDescriptions(Arrays.asList("cbbd6287-3060-49b4-ba13-8e0a09c35c92",
                                                                                                             "77ccef42-bad2-47d5-acd2-e5f18989de24",
                                                                                                             "bbab5d1c-270e-434c-a9e2-51372c6162fa",
                                                                                                             "916ca898-b254-4605-8eb7-77e4f28959cf",
                                                                                                             "1652ec3c-f01f-4efa-ba86-545b4053c126",
                                                                                                             "5ec33b39-73d1-40a5-86d2-68448ffdcee5"))
                                                                            .inCreatedAts(Arrays.asList(new Date(1561632937995L),
                                                                                                        new Date(1561632940011L),
                                                                                                        new Date(1561632940774L),
                                                                                                        new Date(1561632936834L),
                                                                                                        new Date(1561632938502L),
                                                                                                        new Date(1561632937560L)))
                                                                            .notInCreatedAts(Arrays.asList(new Date(1561632943180L),
                                                                                                           new Date(1561632935302L),
                                                                                                           new Date(1561632944260L),
                                                                                                           new Date(1561632941520L)))
                                                                            .lessThanCreatedAt(new Date(1561632939035L))
                                                                            .greaterThanCreatedAt(new Date(1561632942824L))
                                                                            .equalToDatafileUrl("28b34a52-c2fc-48a9-8de8-e25aab62fb23")
                                                                            .notEqualToDatafileUrl("adc38246-3c19-4e15-a746-9b3312672d43")
                                                                            .inDatafileUrls(Arrays.asList("5173ad79-f3e4-4ecf-b7b8-8a3ee17ddff1",
                                                                                                          "40885cf0-962e-4bec-9448-1c42f515dfe8",
                                                                                                          "712dc462-b1bf-4105-9352-a3ef87d09fe6",
                                                                                                          "68e90268-850d-48f7-8c34-de6f7fcece23",
                                                                                                          "bc1e67ce-a3fe-4002-b6ee-485d8237b722",
                                                                                                          "bb1e9324-dd84-4a88-b56f-208a35e8c8af",
                                                                                                          "f7b42928-b80b-452f-809b-a3a4a54e6f5a",
                                                                                                          "56bd3ec8-2b57-400f-b760-e999fedf79ea"))
                                                                            .notInDatafileUrls(Arrays.asList("543f1256-56ce-4ace-b81f-eef68abe8ed4"))
                                                                            .equalToDatafileSize(Long.valueOf(-30))
                                                                            .notEqualToDatafileSize(Long.valueOf(72))
                                                                            .inDatafileSizes(Arrays.asList(Long.valueOf(-74),
                                                                                                           Long.valueOf(-124),
                                                                                                           Long.valueOf(13)))
                                                                            .notInDatafileSizes(Arrays.asList(Long.valueOf(94),
                                                                                                              Long.valueOf(31),
                                                                                                              Long.valueOf(104),
                                                                                                              Long.valueOf(-33),
                                                                                                              Long.valueOf(-18),
                                                                                                              Long.valueOf(-66),
                                                                                                              Long.valueOf(109),
                                                                                                              Long.valueOf(48),
                                                                                                              Long.valueOf(-60)))
                                                                            .equalToDatafileChecksum("f1474e06-d7cc-4cd3-88cb-33dcc22a9fff")
                                                                            .notEqualToDatafileChecksum("8583733e-477f-4c29-95fb-02a345afa3a1")
                                                                            .inDatafileChecksums(Arrays.asList("6ecade75-4cd6-4514-acc6-4d3ad8145d62",
                                                                                                               "064e8b37-0027-4ccf-9074-78b733fc16a3"))
                                                                            .notInDatafileChecksums(Arrays.asList("ec82de02-ae59-41b0-8db1-5d8b1dc36d39",
                                                                                                                  "277b5edf-baec-415a-b24b-69bf730c55ea",
                                                                                                                  "8227abe6-9c88-4a44-82cd-6541dc7e7579"))
                                                                            .equalToId("370ba2d6-659c-43ad-babc-e3acb2aaab71")
                                                                            .notEqualToId("5b1fab49-766f-4a08-bed8-51be70aa9dcc")
                                                                            .inIds(Arrays.asList("949d8fc2-9043-4566-bf33-2f4d3db45cd9"))
                                                                            .notInIds(Arrays.asList("6a460526-d63a-498f-aa9c-307a99baea53",
                                                                                                    "c686d7f1-bfb6-416b-aef9-44e2769586d5",
                                                                                                    "332c878d-477b-4472-9995-e78ce3853e25",
                                                                                                    "8ea268d9-b2ee-4c1d-9fd3-3eef14005f15",
                                                                                                    "2cc2358e-7455-4118-98b2-d827045ed6e5",
                                                                                                    "1a55a1a1-fe31-4592-83c9-fd91fc3e45bd",
                                                                                                    "62333056-bec9-4613-9e6e-b99e305eea83",
                                                                                                    "bf8badd4-1602-4b37-88c1-9b005b645be9",
                                                                                                    "3c7fc7ba-8d28-4b81-84ca-26e95021f347"));
            assertTrue(option.hasFilters());
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1561632942598L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1561632941026L), new Date(1561632936622L), new Date(1561632941475L),
                                       new Date(1561632937959L), new Date(1561632937234L), new Date(1561632942736L),
                                       new Date(1561632943009L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.LESS_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1561632935791L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1561632944704L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("388a94b7-951e-467c-aa3e-37671b166518",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("5f9fae3a-f9e6-43f3-82ac-4bf8f8774ce0",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("45e74323-6a02-4ecd-8734-3ee878fc311b", "0f4ecfff-96d2-4f91-93d5-e2834474c202",
                                       "6a68e87a-f69f-4e1d-8eef-f7ae33ea2d4f", "dea344ae-5194-46c3-9db8-c3669dd39889",
                                       "cc2d5336-d217-4c65-b2f8-2475ee4abde7", "acf32aa3-7332-44bf-85c1-3c28b47cb579",
                                       "572e3380-71d5-4ae4-84b3-8c3cc25eccf5", "2544bb5b-e2db-43a0-a24c-ce3cb57dd48b",
                                       "3a668c0f-8835-4622-841b-639b7f054ec4"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("ccab6553-9226-461e-a385-05467a3c080e", "e763f2e5-ce10-44b1-858a-35cb3780fefa",
                                       "aac03f08-b56c-47ab-88ed-3c92f4479c8e", "932fe690-c4ec-4d73-a6ca-6d5cb4d44b91",
                                       "a664a393-db54-4cde-b347-e4c6c18a950f", "9ebe79a6-04f0-4780-8f1c-a311de512a91",
                                       "9762dfeb-1caa-4347-9b7e-7b10bf8a9f30", "ee0c8815-192e-4fd4-a73b-e7135bf10942"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("b9d1b2bb-0af8-40d5-8410-6d5996705f6b",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("65b05772-c701-4a2b-91e3-5b833c2e678c",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("e8dceb8c-8eda-4b50-bdeb-31e12f703bae"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("cbbd6287-3060-49b4-ba13-8e0a09c35c92", "77ccef42-bad2-47d5-acd2-e5f18989de24",
                                       "bbab5d1c-270e-434c-a9e2-51372c6162fa", "916ca898-b254-4605-8eb7-77e4f28959cf",
                                       "1652ec3c-f01f-4efa-ba86-545b4053c126", "5ec33b39-73d1-40a5-86d2-68448ffdcee5"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1561632937995L), new Date(1561632940011L), new Date(1561632940774L),
                                       new Date(1561632936834L), new Date(1561632938502L), new Date(1561632937560L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1561632943180L), new Date(1561632935302L), new Date(1561632944260L),
                                       new Date(1561632941520L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.LESS_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1561632939035L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1561632942824L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("28b34a52-c2fc-48a9-8de8-e25aab62fb23",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("adc38246-3c19-4e15-a746-9b3312672d43",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("5173ad79-f3e4-4ecf-b7b8-8a3ee17ddff1", "40885cf0-962e-4bec-9448-1c42f515dfe8",
                                       "712dc462-b1bf-4105-9352-a3ef87d09fe6", "68e90268-850d-48f7-8c34-de6f7fcece23",
                                       "bc1e67ce-a3fe-4002-b6ee-485d8237b722", "bb1e9324-dd84-4a88-b56f-208a35e8c8af",
                                       "f7b42928-b80b-452f-809b-a3a4a54e6f5a", "56bd3ec8-2b57-400f-b760-e999fedf79ea"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("543f1256-56ce-4ace-b81f-eef68abe8ed4"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(-30),
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    Long.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(72),
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                       Long.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(-74), Long.valueOf(-124), Long.valueOf(13)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(94), Long.valueOf(31), Long.valueOf(104), Long.valueOf(-33),
                                       Long.valueOf(-18), Long.valueOf(-66), Long.valueOf(109), Long.valueOf(48),
                                       Long.valueOf(-60)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                        FilterOperator.EQUAL));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals("f1474e06-d7cc-4cd3-88cb-33dcc22a9fff",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals("8583733e-477f-4c29-95fb-02a345afa3a1",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM, FilterOperator.IN));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals(Arrays.asList("6ecade75-4cd6-4514-acc6-4d3ad8145d62", "064e8b37-0027-4ccf-9074-78b733fc16a3"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                        FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals(Arrays.asList("ec82de02-ae59-41b0-8db1-5d8b1dc36d39", "277b5edf-baec-415a-b24b-69bf730c55ea",
                                       "8227abe6-9c88-4a44-82cd-6541dc7e7579"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("370ba2d6-659c-43ad-babc-e3acb2aaab71",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("5b1fab49-766f-4a08-bed8-51be70aa9dcc",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("949d8fc2-9043-4566-bf33-2f4d3db45cd9"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, List.class,
                                                                 option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("6a460526-d63a-498f-aa9c-307a99baea53", "c686d7f1-bfb6-416b-aef9-44e2769586d5",
                                       "332c878d-477b-4472-9995-e78ce3853e25", "8ea268d9-b2ee-4c1d-9fd3-3eef14005f15",
                                       "2cc2358e-7455-4118-98b2-d827045ed6e5", "1a55a1a1-fe31-4592-83c9-fd91fc3e45bd",
                                       "62333056-bec9-4613-9e6e-b99e305eea83", "bf8badd4-1602-4b37-88c1-9b005b645be9",
                                       "3c7fc7ba-8d28-4b81-84ca-26e95021f347"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID,
                                                                    List.class, option));
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            FirmwareImageListOptions firmwareimagelistoptions1 = new FirmwareImageListOptions(Integer.valueOf(103),
                                                                                              Long.valueOf(54),
                                                                                              Order.getDefault(),
                                                                                              "15be6bf9-28ed-4e10-a8d5-023a89daccce",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions2 = new FirmwareImageListOptions(Integer.valueOf(103),
                                                                                              Long.valueOf(54),
                                                                                              Order.getDefault(),
                                                                                              "15be6bf9-28ed-4e10-a8d5-023a89daccce",
                                                                                              null, null);
            assertNotNull(firmwareimagelistoptions1);
            assertNotNull(firmwareimagelistoptions2);
            assertNotSame(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2.hashCode(), firmwareimagelistoptions1.hashCode());
            int hashCode = firmwareimagelistoptions1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, firmwareimagelistoptions1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            FirmwareImageListOptions firmwareimagelistoptions1 = new FirmwareImageListOptions(Integer.valueOf(123),
                                                                                              Long.valueOf(78),
                                                                                              Order.getDefault(),
                                                                                              "bb1c4140-b849-476f-9908-e4f94187c40c",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions2 = new FirmwareImageListOptions(Integer.valueOf(123),
                                                                                              Long.valueOf(78),
                                                                                              Order.getDefault(),
                                                                                              "bb1c4140-b849-476f-9908-e4f94187c40c",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions3 = new FirmwareImageListOptions(Integer.valueOf(36),
                                                                                              Long.valueOf(54),
                                                                                              Order.getDefault(),
                                                                                              "c6bf4c5d-a9e0-4e2e-bba8-3c6d7ed65418",
                                                                                              null, null);
            assertNotNull(firmwareimagelistoptions1);
            assertNotNull(firmwareimagelistoptions2);
            assertNotNull(firmwareimagelistoptions3);
            assertNotSame(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertNotSame(firmwareimagelistoptions3, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions1, firmwareimagelistoptions2);
            assertEquals(firmwareimagelistoptions1, firmwareimagelistoptions1);
            assertFalse(firmwareimagelistoptions1.equals(null));
            assertNotEquals(firmwareimagelistoptions3, firmwareimagelistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
