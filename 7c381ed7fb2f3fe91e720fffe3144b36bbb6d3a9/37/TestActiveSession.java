// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model ActiveSession.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestActiveSession {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ActiveSession activesession1 = new ActiveSession("0ba2bdaa1a27dfa7cabb78466e8ea791",
                                                             "e3d3c21b-15ed-4d97-8c68-dac360b82cfb",
                                                             new Date(1561632942211L),
                                                             "2f52ae4c-2124-49e3-accc-cf72a113e698",
                                                             "31ffec74-1cb6-4a58-8a20-3e367cfafe6c");
            ActiveSession activesession2 = activesession1.clone();
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotSame(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ActiveSession activesession1 = new ActiveSession("0ba2bdaa1a27dfa7cabb78466e8ea791",
                                                             "798fd2c8-9fa5-4b04-86a8-2ea3d4beadd5",
                                                             new Date(1561632940668L),
                                                             "24884aa2-1e95-460a-8cf4-8a8437d1a9a2",
                                                             "e24e2a0b-2e8f-4514-b4a6-0d8fdbf920fd");
            ActiveSession activesession2 = new ActiveSession("0ba2bdaa1a27dfa7cabb78466e8ea791",
                                                             "798fd2c8-9fa5-4b04-86a8-2ea3d4beadd5",
                                                             new Date(1561632940668L),
                                                             "24884aa2-1e95-460a-8cf4-8a8437d1a9a2",
                                                             "e24e2a0b-2e8f-4514-b4a6-0d8fdbf920fd");
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotSame(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession2.hashCode(), activesession1.hashCode());
            int hashCode = activesession1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, activesession1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ActiveSession activesession = new ActiveSession("0ba2bdaa1a27dfa7cabb78466e8ea791",
                                                        "666746ae-f7fa-4c91-986f-1bfcf52bc913",
                                                        new Date(1561632940220L),
                                                        "ebc728ca-7b3b-4cff-b61f-6afd0190334e",
                                                        "79bca8b9-4911-41b4-8a30-a24cf00deada");
        assertTrue(activesession.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ActiveSession activesession1 = new ActiveSession("0ba2bdaa1a27dfa7cabb78466e8ea791",
                                                             "d88c3d1b-69e7-4caa-82a0-128ae3820f3b",
                                                             new Date(1561632941665L),
                                                             "08d901e4-b5ff-41ca-a65e-c02a7db72c79",
                                                             "44a2d5cc-f2b2-442b-bff2-951610b55e67");
            ActiveSession activesession2 = new ActiveSession("0ba2bdaa1a27dfa7cabb78466e8ea791",
                                                             "d88c3d1b-69e7-4caa-82a0-128ae3820f3b",
                                                             new Date(1561632941665L),
                                                             "08d901e4-b5ff-41ca-a65e-c02a7db72c79",
                                                             "44a2d5cc-f2b2-442b-bff2-951610b55e67");
            ActiveSession activesession3 = new ActiveSession("0ba2bdaa1a27dfa7cabb78466e8ea791",
                                                             "2207009f-3e2a-449f-a427-93837a57842a",
                                                             new Date(1561632941884L),
                                                             "89815bc0-e1ad-46a7-9c7c-0076befb3ea8",
                                                             "2a3f3077-ac13-41e7-aac7-e9775ec7ae54");
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotNull(activesession3);
            assertNotSame(activesession2, activesession1);
            assertNotSame(activesession3, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession1, activesession2);
            assertEquals(activesession1, activesession1);
            assertFalse(activesession1.equals(null));
            assertNotEquals(activesession3, activesession1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
