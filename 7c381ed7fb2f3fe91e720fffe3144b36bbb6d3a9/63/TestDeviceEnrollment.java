// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEnrollment.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEnrollment {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEnrollment deviceenrollment1 = new DeviceEnrollment("8c265e3e-9c2f-4b29-9eb8-4728e1fe03bb",
                                                                      new Date(1561632935603L),
                                                                      new Date(1561632936199L),
                                                                      "1L5hEIk12qV9S0JYN1adK3a7x9NswaNp",
                                                                      "A-oHq6D93Tj0tLZ0T2gF6ELubYVvYaI0OyC58nSAhqYLH67kW1bv3CQatFKwTu8s:LbvQ2n0v6xq6034yihSp:ST94WeMZ5:E",
                                                                      new Date(1561632935148L),
                                                                      "1L5hEIk12qV9S0JYN1adK3a7x9NswaNp");
            DeviceEnrollment deviceenrollment2 = deviceenrollment1.clone();
            assertNotNull(deviceenrollment1);
            assertNotNull(deviceenrollment2);
            assertNotSame(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEnrollment deviceenrollment1 = new DeviceEnrollment("f6a976e8-25c8-49d7-8623-b831083b4f5a",
                                                                      new Date(1561632937287L),
                                                                      new Date(1561632936837L),
                                                                      "1L5hEIk12qV9S0JYN1adK3a7x9NswaNp",
                                                                      "A-oHq6D93Tj0tLZ0T2gF6ELubYVvYaI0OyC58nSAhqYLH67kW1bv3CQatFKwTu8s:LbvQ2n0v6xq6034yihSp:ST94WeMZ5:E",
                                                                      new Date(1561632941559L),
                                                                      "1L5hEIk12qV9S0JYN1adK3a7x9NswaNp");
            DeviceEnrollment deviceenrollment2 = new DeviceEnrollment("f6a976e8-25c8-49d7-8623-b831083b4f5a",
                                                                      new Date(1561632937287L),
                                                                      new Date(1561632936837L),
                                                                      "1L5hEIk12qV9S0JYN1adK3a7x9NswaNp",
                                                                      "A-oHq6D93Tj0tLZ0T2gF6ELubYVvYaI0OyC58nSAhqYLH67kW1bv3CQatFKwTu8s:LbvQ2n0v6xq6034yihSp:ST94WeMZ5:E",
                                                                      new Date(1561632941559L),
                                                                      "1L5hEIk12qV9S0JYN1adK3a7x9NswaNp");
            assertNotNull(deviceenrollment1);
            assertNotNull(deviceenrollment2);
            assertNotSame(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2.hashCode(), deviceenrollment1.hashCode());
            int hashCode = deviceenrollment1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceenrollment1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEnrollment deviceenrollment = new DeviceEnrollment("120b139e-f111-4822-949f-0dd942a5ece2",
                                                                 new Date(1561632941879L), new Date(1561632936657L),
                                                                 "1L5hEIk12qV9S0JYN1adK3a7x9NswaNp",
                                                                 "A-oHq6D93Tj0tLZ0T2gF6ELubYVvYaI0OyC58nSAhqYLH67kW1bv3CQatFKwTu8s:LbvQ2n0v6xq6034yihSp:ST94WeMZ5:E",
                                                                 new Date(1561632942753L),
                                                                 "1L5hEIk12qV9S0JYN1adK3a7x9NswaNp");
        assertTrue(deviceenrollment.isValid());
        DeviceEnrollment deviceenrollmentInvalid = new DeviceEnrollment("edb6ba90-3fcd-47ea-91cb-f19ae434576e",
                                                                        new Date(1561632935880L),
                                                                        new Date(1561632939588L),
                                                                        "vQ6i8]8T6\u0001^6Rc@irj8FigR6W-f8`rcfä…‡WOfi6UrGr\fH4'rXRe4:ä”†P^4å?‘om\fQmr",
                                                                        null, new Date(1561632938797L),
                                                                        "vQ6i8]8T6\u0001^6Rc@irj8FigR6W-f8`rcfä…‡WOfi6UrGr\fH4'rXRe4:ä”†P^4å?‘om\fQmr");
        assertFalse(deviceenrollmentInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEnrollment deviceenrollment1 = new DeviceEnrollment("e7707b00-429f-4863-904f-657be5a8a117",
                                                                      new Date(1561632939071L),
                                                                      new Date(1561632941947L),
                                                                      "1L5hEIk12qV9S0JYN1adK3a7x9NswaNp",
                                                                      "A-oHq6D93Tj0tLZ0T2gF6ELubYVvYaI0OyC58nSAhqYLH67kW1bv3CQatFKwTu8s:LbvQ2n0v6xq6034yihSp:ST94WeMZ5:E",
                                                                      new Date(1561632937600L),
                                                                      "1L5hEIk12qV9S0JYN1adK3a7x9NswaNp");
            DeviceEnrollment deviceenrollment2 = new DeviceEnrollment("e7707b00-429f-4863-904f-657be5a8a117",
                                                                      new Date(1561632939071L),
                                                                      new Date(1561632941947L),
                                                                      "1L5hEIk12qV9S0JYN1adK3a7x9NswaNp",
                                                                      "A-oHq6D93Tj0tLZ0T2gF6ELubYVvYaI0OyC58nSAhqYLH67kW1bv3CQatFKwTu8s:LbvQ2n0v6xq6034yihSp:ST94WeMZ5:E",
                                                                      new Date(1561632937600L),
                                                                      "1L5hEIk12qV9S0JYN1adK3a7x9NswaNp");
            DeviceEnrollment deviceenrollment3 = new DeviceEnrollment("a56d1f89-0711-4b8b-837d-7fd6e58969d2",
                                                                      new Date(1561632936443L),
                                                                      new Date(1561632939021L),
                                                                      "1L5hEIk12qV9S0JYN1adK3a7x9NswaNp",
                                                                      "A-oHq6D93Tj0tLZ0T2gF6ELubYVvYaI0OyC58nSAhqYLH67kW1bv3CQatFKwTu8s:LbvQ2n0v6xq6034yihSp:ST94WeMZ5:E",
                                                                      new Date(1561632940380L),
                                                                      "1L5hEIk12qV9S0JYN1adK3a7x9NswaNp");
            assertNotNull(deviceenrollment1);
            assertNotNull(deviceenrollment2);
            assertNotNull(deviceenrollment3);
            assertNotSame(deviceenrollment2, deviceenrollment1);
            assertNotSame(deviceenrollment3, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment2, deviceenrollment1);
            assertEquals(deviceenrollment1, deviceenrollment2);
            assertEquals(deviceenrollment1, deviceenrollment1);
            assertFalse(deviceenrollment1.equals(null));
            assertNotEquals(deviceenrollment3, deviceenrollment1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
