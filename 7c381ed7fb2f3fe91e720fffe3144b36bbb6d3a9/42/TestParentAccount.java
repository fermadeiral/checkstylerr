// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model ParentAccount.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestParentAccount {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("6fa0e.37ef9@18ade.me",
                                                             "72cf9bb1-e18b-4dbc-bc8d-633b05d1db41",
                                                             "0ba2bdaa1a27dfa7cabb78466e8ea791");
            ParentAccount parentaccount2 = parentaccount1.clone();
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotSame(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("ef376.aa2a9@60504.fr",
                                                             "0c0ac7d1-5d1e-4cec-afad-1f64fee4ad97",
                                                             "0ba2bdaa1a27dfa7cabb78466e8ea791");
            ParentAccount parentaccount2 = new ParentAccount("ef376.aa2a9@60504.fr",
                                                             "0c0ac7d1-5d1e-4cec-afad-1f64fee4ad97",
                                                             "0ba2bdaa1a27dfa7cabb78466e8ea791");
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotSame(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount2.hashCode(), parentaccount1.hashCode());
            int hashCode = parentaccount1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, parentaccount1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ParentAccount parentaccount = new ParentAccount("968a4.c2a05@549e6.fr", "bffc94d4-6def-441b-99af-7bbd9f5c7965",
                                                        "0ba2bdaa1a27dfa7cabb78466e8ea791");
        assertTrue(parentaccount.isValid());
        ParentAccount parentaccountInvalid = new ParentAccount("ã?¶æ??ì¥ƒ>ï´Œ\u001f?>ê?Ÿ>\u000fëŽ”á€—ë…“î¯¾í„·â?¥ã¯‰>ê? ï•£ê‹žì¦ºê„¥ã¬žï´²ì?›>ê?•ã²?â†€ê‡Ÿê‘•ï¢¿ìƒ‘îŽ’ê±Žêƒ°ê?‹êŽ‡â¢…>\u0004>í“›ê‰?åŒ†ä’•î’¿ê‡©0ëµ¢ >ëºƒæ–±é„«?ã¤®ï£„â”„0äŠ ",
                                                               "ed73d595-b2e0-409b-917f-38c93a102f4eda5f3b62-5f42-4a2f-8fe1-17880229784065a2ebd6-11a1-438d-9916-cb26741c6879",
                                                               "3çµƒ\u001b3535`3!è»µI3 êµ§33BB3ê€€355àº”5çŸ˜5-á°¾55[5í†¤553,\u0017æ—’[3?ç­?35O\u0004:3;\u001d\u0015B3355æ§—5äŠ¨N");
        assertFalse(parentaccountInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("ca8f8.6fd5c@bc510.me",
                                                             "bfd4624e-e167-472b-8cf2-60b2c887c641",
                                                             "0ba2bdaa1a27dfa7cabb78466e8ea791");
            ParentAccount parentaccount2 = new ParentAccount("ca8f8.6fd5c@bc510.me",
                                                             "bfd4624e-e167-472b-8cf2-60b2c887c641",
                                                             "0ba2bdaa1a27dfa7cabb78466e8ea791");
            ParentAccount parentaccount3 = new ParentAccount("3b432.50fc5@cd305.fr",
                                                             "9ddbd031-77e4-4068-9927-128153c56e48",
                                                             "0ba2bdaa1a27dfa7cabb78466e8ea791");
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotNull(parentaccount3);
            assertNotSame(parentaccount2, parentaccount1);
            assertNotSame(parentaccount3, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount1, parentaccount2);
            assertEquals(parentaccount1, parentaccount1);
            assertFalse(parentaccount1.equals(null));
            assertNotEquals(parentaccount3, parentaccount1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
