// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model ApiKey.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestApiKey {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ApiKey apikey1 = new ApiKey("0ba2bdaa1a27dfa7cabb78466e8ea791", new Date(1561632936633L), 106,
                                        "0ba2bdaa1a27dfa7cabb78466e8ea791", "32b938ff-cff0-4f47-a7fe-da0e353c149b", -69,
                                        "21b92af6-d604-489e-8c69-a89295cb0d7e", "0ba2bdaa1a27dfa7cabb78466e8ea791",
                                        ApiKeyStatus.getDefault(), new Date(1561632937305L));
            ApiKey apikey2 = apikey1.clone();
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotSame(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ApiKey apikey1 = new ApiKey("0ba2bdaa1a27dfa7cabb78466e8ea791", new Date(1561632938643L), 101,
                                        "0ba2bdaa1a27dfa7cabb78466e8ea791", "5ece02f9-a104-4289-a207-17f8c46cef06", -66,
                                        "d981df78-6546-4d71-970a-1c1217c199bd", "0ba2bdaa1a27dfa7cabb78466e8ea791",
                                        ApiKeyStatus.getDefault(), new Date(1561632942919L));
            ApiKey apikey2 = new ApiKey("0ba2bdaa1a27dfa7cabb78466e8ea791", new Date(1561632938643L), 101,
                                        "0ba2bdaa1a27dfa7cabb78466e8ea791", "5ece02f9-a104-4289-a207-17f8c46cef06", -66,
                                        "d981df78-6546-4d71-970a-1c1217c199bd", "0ba2bdaa1a27dfa7cabb78466e8ea791",
                                        ApiKeyStatus.getDefault(), new Date(1561632942919L));
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotSame(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey2.hashCode(), apikey1.hashCode());
            int hashCode = apikey1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, apikey1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ApiKey apikey = new ApiKey("0ba2bdaa1a27dfa7cabb78466e8ea791", new Date(1561632935089L), -96,
                                   "0ba2bdaa1a27dfa7cabb78466e8ea791", "641d428b-5d46-4e80-8b62-2dbe8e7e3076", -36,
                                   "25cf0931-e09e-4842-a86e-236fc61ed389", "0ba2bdaa1a27dfa7cabb78466e8ea791",
                                   ApiKeyStatus.getDefault(), new Date(1561632939001L));
        assertTrue(apikey.isValid());
        ApiKey apikeyInvalid = new ApiKey("3çµƒ\u001b3535`3!è»µI3 êµ§33BB3ê€€355àº”5çŸ˜5-á°¾55[5í†¤553,\u0017æ—’[3?ç­?35O\u0004:3;\u001d\u0015B3355æ§—5äŠ¨N",
                                          new Date(1561632940702L), -66,
                                          "3çµƒ\u001b3535`3!è»µI3 êµ§33BB3ê€€355àº”5çŸ˜5-á°¾55[5í†¤553,\u0017æ—’[3?ç­?35O\u0004:3;\u001d\u0015B3355æ§—5äŠ¨N",
                                          "bdc6cb34-f2ad-4977-a707-30ccfe9a59e5", -107, null,
                                          "3çµƒ\u001b3535`3!è»µI3 êµ§33BB3ê€€355àº”5çŸ˜5-á°¾55[5í†¤553,\u0017æ—’[3?ç­?35O\u0004:3;\u001d\u0015B3355æ§—5äŠ¨N",
                                          ApiKeyStatus.getDefault(), new Date(1561632938670L));
        assertFalse(apikeyInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ApiKey apikey1 = new ApiKey("0ba2bdaa1a27dfa7cabb78466e8ea791", new Date(1561632941838L), 53,
                                        "0ba2bdaa1a27dfa7cabb78466e8ea791", "8619ccef-b539-4185-bb95-6a3686dfb01b", 68,
                                        "7af0d572-39bf-4d55-9200-ff6660b1a517", "0ba2bdaa1a27dfa7cabb78466e8ea791",
                                        ApiKeyStatus.getDefault(), new Date(1561632938171L));
            ApiKey apikey2 = new ApiKey("0ba2bdaa1a27dfa7cabb78466e8ea791", new Date(1561632941838L), 53,
                                        "0ba2bdaa1a27dfa7cabb78466e8ea791", "8619ccef-b539-4185-bb95-6a3686dfb01b", 68,
                                        "7af0d572-39bf-4d55-9200-ff6660b1a517", "0ba2bdaa1a27dfa7cabb78466e8ea791",
                                        ApiKeyStatus.getDefault(), new Date(1561632938171L));
            ApiKey apikey3 = new ApiKey("0ba2bdaa1a27dfa7cabb78466e8ea791", new Date(1561632938048L), 67,
                                        "0ba2bdaa1a27dfa7cabb78466e8ea791", "d06038fb-ee92-45c9-bd95-0be119defd9d", -38,
                                        "a5e5ff2e-5b97-4fc1-be70-713dffe5ef32", "0ba2bdaa1a27dfa7cabb78466e8ea791",
                                        ApiKeyStatus.getDefault(), new Date(1561632942849L));
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotNull(apikey3);
            assertNotSame(apikey2, apikey1);
            assertNotSame(apikey3, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey1, apikey2);
            assertEquals(apikey1, apikey1);
            assertFalse(apikey1.equals(null));
            assertNotEquals(apikey3, apikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
