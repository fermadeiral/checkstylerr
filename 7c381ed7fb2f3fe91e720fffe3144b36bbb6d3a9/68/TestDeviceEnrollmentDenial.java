// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEnrollmentDenial.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEnrollmentDenial {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("0ba2bdaa1a27dfa7cabb78466e8ea791",
                                                                                        new Date(1561632936518L),
                                                                                        "f5201455-30c1-4874-a41d-14651cd270fb",
                                                                                        "0ba2bdaa1a27dfa7cabb78466e8ea791",
                                                                                        "0ba2bdaa1a27dfa7cabb78466e8ea791");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = deviceenrollmentdenial1.clone();
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("0ba2bdaa1a27dfa7cabb78466e8ea791",
                                                                                        new Date(1561632933215L),
                                                                                        "df8c308d-8312-46e2-977d-87009f3a1156",
                                                                                        "0ba2bdaa1a27dfa7cabb78466e8ea791",
                                                                                        "0ba2bdaa1a27dfa7cabb78466e8ea791");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = new DeviceEnrollmentDenial("0ba2bdaa1a27dfa7cabb78466e8ea791",
                                                                                        new Date(1561632933215L),
                                                                                        "df8c308d-8312-46e2-977d-87009f3a1156",
                                                                                        "0ba2bdaa1a27dfa7cabb78466e8ea791",
                                                                                        "0ba2bdaa1a27dfa7cabb78466e8ea791");
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2.hashCode(), deviceenrollmentdenial1.hashCode());
            int hashCode = deviceenrollmentdenial1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceenrollmentdenial1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEnrollmentDenial deviceenrollmentdenial = new DeviceEnrollmentDenial("0ba2bdaa1a27dfa7cabb78466e8ea791",
                                                                                   new Date(1561632942588L),
                                                                                   "b95a6db9-7e21-4f8c-b68b-819faf271857",
                                                                                   "0ba2bdaa1a27dfa7cabb78466e8ea791",
                                                                                   "0ba2bdaa1a27dfa7cabb78466e8ea791");
        assertTrue(deviceenrollmentdenial.isValid());
        DeviceEnrollmentDenial deviceenrollmentdenialInvalid = new DeviceEnrollmentDenial("3çµƒ\u001b3535`3!è»µI3 êµ§33BB3ê€€355àº”5çŸ˜5-á°¾55[5í†¤553,\u0017æ—’[3?ç­?35O\u0004:3;\u001d\u0015B3355æ§—5äŠ¨N",
                                                                                          new Date(1561632938788L),
                                                                                          "04ebe55e-1f40-4870-aff9-99d4f75f0919",
                                                                                          "3çµƒ\u001b3535`3!è»µI3 êµ§33BB3ê€€355àº”5çŸ˜5-á°¾55[5í†¤553,\u0017æ—’[3?ç­?35O\u0004:3;\u001d\u0015B3355æ§—5äŠ¨N",
                                                                                          "3çµƒ\u001b3535`3!è»µI3 êµ§33BB3ê€€355àº”5çŸ˜5-á°¾55[5í†¤553,\u0017æ—’[3?ç­?35O\u0004:3;\u001d\u0015B3355æ§—5äŠ¨N");
        assertFalse(deviceenrollmentdenialInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("0ba2bdaa1a27dfa7cabb78466e8ea791",
                                                                                        new Date(1561632940595L),
                                                                                        "f28fd3e8-27a1-47b0-96a1-6873b51ae993",
                                                                                        "0ba2bdaa1a27dfa7cabb78466e8ea791",
                                                                                        "0ba2bdaa1a27dfa7cabb78466e8ea791");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = new DeviceEnrollmentDenial("0ba2bdaa1a27dfa7cabb78466e8ea791",
                                                                                        new Date(1561632940595L),
                                                                                        "f28fd3e8-27a1-47b0-96a1-6873b51ae993",
                                                                                        "0ba2bdaa1a27dfa7cabb78466e8ea791",
                                                                                        "0ba2bdaa1a27dfa7cabb78466e8ea791");
            DeviceEnrollmentDenial deviceenrollmentdenial3 = new DeviceEnrollmentDenial("0ba2bdaa1a27dfa7cabb78466e8ea791",
                                                                                        new Date(1561632940913L),
                                                                                        "c445699e-e573-4322-b5bf-a944dbc23c3b",
                                                                                        "0ba2bdaa1a27dfa7cabb78466e8ea791",
                                                                                        "0ba2bdaa1a27dfa7cabb78466e8ea791");
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotNull(deviceenrollmentdenial3);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertNotSame(deviceenrollmentdenial3, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial1, deviceenrollmentdenial2);
            assertEquals(deviceenrollmentdenial1, deviceenrollmentdenial1);
            assertFalse(deviceenrollmentdenial1.equals(null));
            assertNotEquals(deviceenrollmentdenial3, deviceenrollmentdenial1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
