// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantUserInvitation.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantUserInvitation {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantUserInvitation subtenantuserinvitation1 = new SubtenantUserInvitation("0ba2bdaa1a27dfa7cabb78466e8ea791",
                                                                                           new Date(1561632941838L),
                                                                                           "460c8.98e0e@38ccd.me",
                                                                                           new Date(1561632942799L),
                                                                                           "0ba2bdaa1a27dfa7cabb78466e8ea791",
                                                                                           null,
                                                                                           new Date(1561632939181L),
                                                                                           "0ba2bdaa1a27dfa7cabb78466e8ea791");
            SubtenantUserInvitation subtenantuserinvitation2 = subtenantuserinvitation1.clone();
            assertNotNull(subtenantuserinvitation1);
            assertNotNull(subtenantuserinvitation2);
            assertNotSame(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantUserInvitation subtenantuserinvitation1 = new SubtenantUserInvitation("0ba2bdaa1a27dfa7cabb78466e8ea791",
                                                                                           new Date(1561632938789L),
                                                                                           "969c0.5573f@9d66c.me",
                                                                                           new Date(1561632934677L),
                                                                                           "0ba2bdaa1a27dfa7cabb78466e8ea791",
                                                                                           null,
                                                                                           new Date(1561632939536L),
                                                                                           "0ba2bdaa1a27dfa7cabb78466e8ea791");
            SubtenantUserInvitation subtenantuserinvitation2 = new SubtenantUserInvitation("0ba2bdaa1a27dfa7cabb78466e8ea791",
                                                                                           new Date(1561632938789L),
                                                                                           "969c0.5573f@9d66c.me",
                                                                                           new Date(1561632934677L),
                                                                                           "0ba2bdaa1a27dfa7cabb78466e8ea791",
                                                                                           null,
                                                                                           new Date(1561632939536L),
                                                                                           "0ba2bdaa1a27dfa7cabb78466e8ea791");
            assertNotNull(subtenantuserinvitation1);
            assertNotNull(subtenantuserinvitation2);
            assertNotSame(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2.hashCode(), subtenantuserinvitation1.hashCode());
            int hashCode = subtenantuserinvitation1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantuserinvitation1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantUserInvitation subtenantuserinvitation = new SubtenantUserInvitation("0ba2bdaa1a27dfa7cabb78466e8ea791",
                                                                                      new Date(1561632938765L),
                                                                                      "59de1.50187@21496.me",
                                                                                      new Date(1561632936517L),
                                                                                      "0ba2bdaa1a27dfa7cabb78466e8ea791",
                                                                                      null, new Date(1561632939364L),
                                                                                      "0ba2bdaa1a27dfa7cabb78466e8ea791");
        assertTrue(subtenantuserinvitation.isValid());
        SubtenantUserInvitation subtenantuserinvitationInvalid = new SubtenantUserInvitation(null,
                                                                                             new Date(1561632935510L),
                                                                                             null,
                                                                                             new Date(1561632932999L),
                                                                                             "3çµƒ\u001b3535`3!è»µI3 êµ§33BB3ê€€355àº”5çŸ˜5-á°¾55[5í†¤553,\u0017æ—’[3?ç­?35O\u0004:3;\u001d\u0015B3355æ§—5äŠ¨N",
                                                                                             null,
                                                                                             new Date(1561632934540L),
                                                                                             "3çµƒ\u001b3535`3!è»µI3 êµ§33BB3ê€€355àº”5çŸ˜5-á°¾55[5í†¤553,\u0017æ—’[3?ç­?35O\u0004:3;\u001d\u0015B3355æ§—5äŠ¨N");
        assertFalse(subtenantuserinvitationInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantUserInvitation subtenantuserinvitation1 = new SubtenantUserInvitation("0ba2bdaa1a27dfa7cabb78466e8ea791",
                                                                                           new Date(1561632933909L),
                                                                                           "40ca9.59e06@0d437.me",
                                                                                           new Date(1561632938543L),
                                                                                           "0ba2bdaa1a27dfa7cabb78466e8ea791",
                                                                                           null,
                                                                                           new Date(1561632939028L),
                                                                                           "0ba2bdaa1a27dfa7cabb78466e8ea791");
            SubtenantUserInvitation subtenantuserinvitation2 = new SubtenantUserInvitation("0ba2bdaa1a27dfa7cabb78466e8ea791",
                                                                                           new Date(1561632933909L),
                                                                                           "40ca9.59e06@0d437.me",
                                                                                           new Date(1561632938543L),
                                                                                           "0ba2bdaa1a27dfa7cabb78466e8ea791",
                                                                                           null,
                                                                                           new Date(1561632939028L),
                                                                                           "0ba2bdaa1a27dfa7cabb78466e8ea791");
            SubtenantUserInvitation subtenantuserinvitation3 = new SubtenantUserInvitation("0ba2bdaa1a27dfa7cabb78466e8ea791",
                                                                                           new Date(1561632939533L),
                                                                                           "ef213.6a6a6@bbffa.me",
                                                                                           new Date(1561632940019L),
                                                                                           "0ba2bdaa1a27dfa7cabb78466e8ea791",
                                                                                           null,
                                                                                           new Date(1561632935362L),
                                                                                           "0ba2bdaa1a27dfa7cabb78466e8ea791");
            assertNotNull(subtenantuserinvitation1);
            assertNotNull(subtenantuserinvitation2);
            assertNotNull(subtenantuserinvitation3);
            assertNotSame(subtenantuserinvitation2, subtenantuserinvitation1);
            assertNotSame(subtenantuserinvitation3, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation2, subtenantuserinvitation1);
            assertEquals(subtenantuserinvitation1, subtenantuserinvitation2);
            assertEquals(subtenantuserinvitation1, subtenantuserinvitation1);
            assertFalse(subtenantuserinvitation1.equals(null));
            assertNotEquals(subtenantuserinvitation3, subtenantuserinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
