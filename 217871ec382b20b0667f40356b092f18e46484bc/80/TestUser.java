// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model User.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestUser {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            User user1 = new User("01429f42-606f-4c6c-abea-19504d1baba2", null, "fa877579-b34e-4d8c-ba59-7ad9c7d9c81e",
                                  new Date(1553524612971L), 4, null, "812dcad7-a9cd-42e6-931c-a4d146c0b14a", false,
                                  "cc653cb1-770d-489f-89a6-214a72a1fc65", "87b931d5-1c22-4e94-9e56-4e081c5964e1", 49,
                                  null, null, false, "717e4608-2582-4dd4-9e43-24119306b244", 69,
                                  "0168eece-61de-4566-bec2-0622ef95cd24", UserStatus.getDefault(), true, null, false,
                                  new Date(1553524610936L), "19c14f66-92a9-47b3-9644-221ec9cec745");
            User user2 = user1.clone();
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotSame(user2, user1);
            assertEquals(user2, user1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            User user1 = new User("172a158f-d6a7-4a72-969d-6fca8cb64845", null, "9efbffec-abc5-4594-b64e-7a4ffd9808ec",
                                  new Date(1553524612759L), -5, null, "b5e65a33-10cb-4932-ae63-ae7091f5e1b9", true,
                                  "e526c333-df0a-45b1-91ce-aca87be1d7b2", "5da982f2-419a-46e0-8c35-fbd25a040ed3", 117,
                                  null, null, false, "63566c8d-241f-4c11-a60b-5b9ca835a07e", 18,
                                  "7aa6c41b-664b-472f-8665-ccec7f29f2bd", UserStatus.getDefault(), false, null, true,
                                  new Date(1553524607287L), "cc9a65e4-40f8-4715-9268-35d46c0798e6");
            User user2 = new User("172a158f-d6a7-4a72-969d-6fca8cb64845", null, "9efbffec-abc5-4594-b64e-7a4ffd9808ec",
                                  new Date(1553524612759L), -5, null, "b5e65a33-10cb-4932-ae63-ae7091f5e1b9", true,
                                  "e526c333-df0a-45b1-91ce-aca87be1d7b2", "5da982f2-419a-46e0-8c35-fbd25a040ed3", 117,
                                  null, null, false, "63566c8d-241f-4c11-a60b-5b9ca835a07e", 18,
                                  "7aa6c41b-664b-472f-8665-ccec7f29f2bd", UserStatus.getDefault(), false, null, true,
                                  new Date(1553524607287L), "cc9a65e4-40f8-4715-9268-35d46c0798e6");
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotSame(user2, user1);
            assertEquals(user2, user1);
            assertEquals(user2.hashCode(), user1.hashCode());
            int hashCode = user1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, user1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        User user = new User("46c68779-45b4-4e2a-a9c3-3ec9e4f513d9", null, "363d8cd0-93e2-4fba-bc59-84b5926d6035",
                             new Date(1553524612050L), -34, null, "a3b4cf6f-6e1c-4b94-bf73-de3c6020f864", true,
                             "097ee9ef-00b1-4545-a027-bfc2b85de06d", "2fa684ec-db6a-4400-b7e7-3236391177d4", -52, null,
                             null, false, "aeb4e768-3f13-4684-879f-d10534b4644f", -128,
                             "b350eacd-ccb6-4683-8eef-d67e349bf31f", UserStatus.getDefault(), true, null, true,
                             new Date(1553524610467L), "ecba6c76-31e4-43e7-b1d4-520f5b11d044");
        assertTrue(user.isValid());
        User userInvalid = new User("4dc8856e-2030-4138-b893-13ccbd53e40e", null,
                                    "f1353d72-d081-4844-930a-fc67cdcf4180", new Date(1553524611055L), -32, null, null,
                                    false, "d80291b6-29b2-4528-ad0a-7d4bf0a08fb7",
                                    "1f57154d-8e74-4c3b-a3aa-dbd63fd90f91", -20, null, null, false,
                                    "a7fe1804-985a-4365-b7eb-28d735724a40", -108,
                                    "17c680f8-0c72-4fcc-8ebd-27fce65075ba", UserStatus.getDefault(), false, null, true,
                                    new Date(1553524606938L), "136eed6c-f216-4764-9cbf-1e423932644d");
        assertFalse(userInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            User user1 = new User("fe6ed9ab-a00e-4b1e-ab71-f886e53f7c94", null, "bda1977c-8de8-4da3-8c65-35ae6032fca9",
                                  new Date(1553524606729L), 104, null, "73aa718b-81fc-4910-98ee-cba0958b33bb", true,
                                  "c4605551-8767-4fa4-a4fe-884d6e4b5a09", "3dbc16fc-2ad2-4a86-aeb4-387fac241d8c", 3,
                                  null, null, true, "77ec950b-ade7-4c29-981c-deeb3af8858b", -20,
                                  "e904623c-4933-4634-a66b-627c4e212632", UserStatus.getDefault(), true, null, true,
                                  new Date(1553524604580L), "da8f2479-6eab-4827-9133-cc9087001d8c");
            User user2 = new User("fe6ed9ab-a00e-4b1e-ab71-f886e53f7c94", null, "bda1977c-8de8-4da3-8c65-35ae6032fca9",
                                  new Date(1553524606729L), 104, null, "73aa718b-81fc-4910-98ee-cba0958b33bb", true,
                                  "c4605551-8767-4fa4-a4fe-884d6e4b5a09", "3dbc16fc-2ad2-4a86-aeb4-387fac241d8c", 3,
                                  null, null, true, "77ec950b-ade7-4c29-981c-deeb3af8858b", -20,
                                  "e904623c-4933-4634-a66b-627c4e212632", UserStatus.getDefault(), true, null, true,
                                  new Date(1553524604580L), "da8f2479-6eab-4827-9133-cc9087001d8c");
            User user3 = new User("5dc6b671-f1f0-4b83-b912-78763bf8d2b9", null, "274d9181-8422-4dae-a2ea-2cb97baae40f",
                                  new Date(1553524607727L), -55, null, "363ae904-e82d-4bc6-ab11-0256f0f04b07", true,
                                  "f8ba2a23-a42c-474f-8faa-6c0f9b5d9bc5", "f38852b2-33d8-4c39-bfb7-26c0a0b8226a", 78,
                                  null, null, true, "8a68c749-e900-418e-8b34-87a0ffbc058a", -55,
                                  "37e35f18-17e6-4a84-9300-e09f49ee0e37", UserStatus.getDefault(), true, null, true,
                                  new Date(1553524607104L), "154e1d99-4e70-496f-aac1-aa48197c78cc");
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotNull(user3);
            assertNotSame(user2, user1);
            assertNotSame(user3, user1);
            assertEquals(user2, user1);
            assertEquals(user2, user1);
            assertEquals(user1, user2);
            assertEquals(user1, user1);
            assertFalse(user1.equals(null));
            assertNotEquals(user3, user1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
