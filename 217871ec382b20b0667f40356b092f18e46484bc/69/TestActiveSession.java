// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model ActiveSession.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestActiveSession {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ActiveSession activesession1 = new ActiveSession("61eaa2b0-8ae2-489f-bf73-33e59bdc9216",
                                                             "1d602b76-a0e2-4540-9ce7-dd23ac6540c8",
                                                             new Date(1553524603580L),
                                                             "a6e21b25-9613-43bb-99b3-52f21a4a69fe",
                                                             "d1d4b48a-9097-4097-8c5b-2faf168ca450");
            ActiveSession activesession2 = activesession1.clone();
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotSame(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ActiveSession activesession1 = new ActiveSession("83dd7a69-ff59-4f4b-98dc-cd8ed64c39a0",
                                                             "0454f351-b7d3-4d3b-8d37-f513d65592e5",
                                                             new Date(1553524608252L),
                                                             "66202fff-5db5-4f20-a7a9-f9747449b0cc",
                                                             "9079d5db-1590-496d-a401-3b15e5c66cab");
            ActiveSession activesession2 = new ActiveSession("83dd7a69-ff59-4f4b-98dc-cd8ed64c39a0",
                                                             "0454f351-b7d3-4d3b-8d37-f513d65592e5",
                                                             new Date(1553524608252L),
                                                             "66202fff-5db5-4f20-a7a9-f9747449b0cc",
                                                             "9079d5db-1590-496d-a401-3b15e5c66cab");
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotSame(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession2.hashCode(), activesession1.hashCode());
            int hashCode = activesession1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, activesession1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ActiveSession activesession = new ActiveSession("67e72b81-5e4c-4997-a739-623bd53e8fa1",
                                                        "3b06de6b-5aa2-4889-a0f8-2696fe036dde",
                                                        new Date(1553524610776L),
                                                        "efe49076-0a9b-40f8-b963-5aabedc9ee38",
                                                        "dca6c0ac-9893-42b4-b626-642c46181ec8");
        assertTrue(activesession.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ActiveSession activesession1 = new ActiveSession("d44d166c-3ac5-41c1-8e1e-95c30bced126",
                                                             "531e0d02-265d-4210-8862-daa442170b76",
                                                             new Date(1553524605683L),
                                                             "26672b15-81de-48f0-936b-4e3c92393725",
                                                             "34719ce8-a9fb-4a0a-8024-6954ba2b7a85");
            ActiveSession activesession2 = new ActiveSession("d44d166c-3ac5-41c1-8e1e-95c30bced126",
                                                             "531e0d02-265d-4210-8862-daa442170b76",
                                                             new Date(1553524605683L),
                                                             "26672b15-81de-48f0-936b-4e3c92393725",
                                                             "34719ce8-a9fb-4a0a-8024-6954ba2b7a85");
            ActiveSession activesession3 = new ActiveSession("8f06a3d2-9272-4f3f-a901-c3a685b5c88f",
                                                             "cfd875fd-73d7-4a7a-9777-eed27422bbbe",
                                                             new Date(1553524608453L),
                                                             "28195d40-49f7-4e45-8981-588ce61045b5",
                                                             "b03188f3-edf6-445e-b3ca-67d6c20c310f");
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotNull(activesession3);
            assertNotSame(activesession2, activesession1);
            assertNotSame(activesession3, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession1, activesession2);
            assertEquals(activesession1, activesession1);
            assertFalse(activesession1.equals(null));
            assertNotEquals(activesession3, activesession1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
