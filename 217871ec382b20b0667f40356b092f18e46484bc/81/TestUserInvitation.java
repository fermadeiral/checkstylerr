// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model UserInvitation.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestUserInvitation {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("40bb6c89-0265-4a6d-8bb1-ef1e4ce51735",
                                                                new Date(1553524607958L),
                                                                "bc1dc6c0-c7f6-4e5c-9fa6-00185572a8be",
                                                                new Date(1553524608863L),
                                                                "844cd995-c22e-4f9c-a6bd-3dda614bdeb2", null,
                                                                new Date(1553524608228L),
                                                                "fee2d331-cc36-4095-9d8f-223bec36adec");
            UserInvitation userinvitation2 = userinvitation1.clone();
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotSame(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("36ca897b-4439-4f3c-98b0-6bf823035abb",
                                                                new Date(1553524610561L),
                                                                "cb9bf245-adc9-44e3-8699-2d28ee5d89f3",
                                                                new Date(1553524609835L),
                                                                "4d179413-170c-445c-ae2a-3acfe990e952", null,
                                                                new Date(1553524609706L),
                                                                "1a764e0d-ebbb-4be1-9242-bc9559d0d62e");
            UserInvitation userinvitation2 = new UserInvitation("36ca897b-4439-4f3c-98b0-6bf823035abb",
                                                                new Date(1553524610561L),
                                                                "cb9bf245-adc9-44e3-8699-2d28ee5d89f3",
                                                                new Date(1553524609835L),
                                                                "4d179413-170c-445c-ae2a-3acfe990e952", null,
                                                                new Date(1553524609706L),
                                                                "1a764e0d-ebbb-4be1-9242-bc9559d0d62e");
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotSame(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation2.hashCode(), userinvitation1.hashCode());
            int hashCode = userinvitation1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, userinvitation1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        UserInvitation userinvitation = new UserInvitation("0c1369c6-292a-4006-8203-bb19bae9219c",
                                                           new Date(1553524604938L),
                                                           "57632de7-8cfa-4a6c-80da-d3ec376660ad",
                                                           new Date(1553524608326L),
                                                           "3d98c00d-2bf5-42e4-afef-bab1a83b5d19", null,
                                                           new Date(1553524607126L),
                                                           "661d1fa8-1acf-4f18-80ca-e91cf4d18c71");
        assertTrue(userinvitation.isValid());
        UserInvitation userinvitationInvalid = new UserInvitation("5ef41fe5-4c65-4844-bb4a-9c1842da9854",
                                                                  new Date(1553524609979L), null,
                                                                  new Date(1553524609385L),
                                                                  "bab479ad-e3ed-4e79-8037-c76c8dfcc59a", null,
                                                                  new Date(1553524610887L),
                                                                  "ba12ea8e-c5f2-4d42-ab26-d97543e45d66");
        assertFalse(userinvitationInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("7d5ae56b-1498-44f9-87c0-862f8de25548",
                                                                new Date(1553524607325L),
                                                                "9cf4979c-f0ef-4509-8d0e-092887f7e1b3",
                                                                new Date(1553524609771L),
                                                                "2fe1980c-fb0d-4bf1-bcab-e3da4e9b859a", null,
                                                                new Date(1553524605713L),
                                                                "f957faf8-ced0-4f1e-85b1-a1ab0c59bb01");
            UserInvitation userinvitation2 = new UserInvitation("7d5ae56b-1498-44f9-87c0-862f8de25548",
                                                                new Date(1553524607325L),
                                                                "9cf4979c-f0ef-4509-8d0e-092887f7e1b3",
                                                                new Date(1553524609771L),
                                                                "2fe1980c-fb0d-4bf1-bcab-e3da4e9b859a", null,
                                                                new Date(1553524605713L),
                                                                "f957faf8-ced0-4f1e-85b1-a1ab0c59bb01");
            UserInvitation userinvitation3 = new UserInvitation("dab4ea93-5036-4f3f-9f34-6fbcda9a89b7",
                                                                new Date(1553524607567L),
                                                                "3905a43a-be1c-4e6b-92a6-34b7381483cb",
                                                                new Date(1553524611192L),
                                                                "e8460c2b-40e6-442e-8116-a5cf9cea7c32", null,
                                                                new Date(1553524610798L),
                                                                "483ef6dd-b3f3-487f-a834-49862f2ce172");
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotNull(userinvitation3);
            assertNotSame(userinvitation2, userinvitation1);
            assertNotSame(userinvitation3, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation1, userinvitation2);
            assertEquals(userinvitation1, userinvitation1);
            assertFalse(userinvitation1.equals(null));
            assertNotEquals(userinvitation3, userinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
