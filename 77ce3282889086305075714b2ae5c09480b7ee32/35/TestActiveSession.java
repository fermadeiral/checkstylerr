// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model ActiveSession.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestActiveSession {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ActiveSession activesession1 = new ActiveSession("fc91ece4c663c84ce50ea8058379fe26",
                                                             "bd88b21f-075a-49f4-bf54-fa8b1edaa97f",
                                                             new Date(1561477832885L),
                                                             "fdc9a179-cc96-4d24-8a1e-fffb0d95e7e2",
                                                             "83b526fa-76a9-4d55-860c-ef1e45fe2903");
            ActiveSession activesession2 = activesession1.clone();
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotSame(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ActiveSession activesession1 = new ActiveSession("fc91ece4c663c84ce50ea8058379fe26",
                                                             "c8a1e370-1821-43bf-abf0-5249a3f1384f",
                                                             new Date(1561477836772L),
                                                             "0d2989d5-c7f9-4789-8e12-6546b23b79f2",
                                                             "c9dc6897-5a6b-4e6d-a14d-603af6942c0f");
            ActiveSession activesession2 = new ActiveSession("fc91ece4c663c84ce50ea8058379fe26",
                                                             "c8a1e370-1821-43bf-abf0-5249a3f1384f",
                                                             new Date(1561477836772L),
                                                             "0d2989d5-c7f9-4789-8e12-6546b23b79f2",
                                                             "c9dc6897-5a6b-4e6d-a14d-603af6942c0f");
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotSame(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession2.hashCode(), activesession1.hashCode());
            int hashCode = activesession1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, activesession1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ActiveSession activesession = new ActiveSession("fc91ece4c663c84ce50ea8058379fe26",
                                                        "69eda406-6f09-47d5-a702-f6e95de2af44",
                                                        new Date(1561477836256L),
                                                        "a1168dd8-4ff4-43f7-b721-db663def375d",
                                                        "61b0f6fa-441e-4de8-9494-750f4ed07544");
        assertTrue(activesession.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ActiveSession activesession1 = new ActiveSession("fc91ece4c663c84ce50ea8058379fe26",
                                                             "592a775b-63a7-4f5d-99e1-5719f161cd9f",
                                                             new Date(1561477840434L),
                                                             "09bb3533-e8b4-4370-b04d-05485c10d36f",
                                                             "c15bffad-027e-48b1-8270-7a3508d03db2");
            ActiveSession activesession2 = new ActiveSession("fc91ece4c663c84ce50ea8058379fe26",
                                                             "592a775b-63a7-4f5d-99e1-5719f161cd9f",
                                                             new Date(1561477840434L),
                                                             "09bb3533-e8b4-4370-b04d-05485c10d36f",
                                                             "c15bffad-027e-48b1-8270-7a3508d03db2");
            ActiveSession activesession3 = new ActiveSession("fc91ece4c663c84ce50ea8058379fe26",
                                                             "f563a985-3e78-41a3-a916-199d9a05a901",
                                                             new Date(1561477833953L),
                                                             "4c836b37-8323-4179-9787-9613243a610d",
                                                             "57e322b6-004d-4584-9b37-81d126c76a4b");
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotNull(activesession3);
            assertNotSame(activesession2, activesession1);
            assertNotSame(activesession3, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession1, activesession2);
            assertEquals(activesession1, activesession1);
            assertFalse(activesession1.equals(null));
            assertNotEquals(activesession3, activesession1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
