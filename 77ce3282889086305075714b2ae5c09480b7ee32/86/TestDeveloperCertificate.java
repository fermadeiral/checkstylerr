// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.security.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeveloperCertificate.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeveloperCertificate {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("e71251fd-4b18-4c06-b4fe-8a55634faefa",
                                                                                  "2b6df96b-5a7f-485a-b6fb-e74a8548bf71",
                                                                                  new Date(1561477836150L),
                                                                                  "574e9b98-493b-4801-918e-6267cb72dca2",
                                                                                  "f628cd09-b29c-4790-885a-6f0526994383",
                                                                                  "cbd592d3-4965-4c18-8098-2a6f77361e59",
                                                                                  "2e37a12a-e5b9-4538-883f-aa55b9ea9fba",
                                                                                  "378e4a92-393f-4009-b123-baab5e9d39bd");
            DeveloperCertificate developercertificate2 = developercertificate1.clone();
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("caab74c7-bd95-4828-8155-f4d9856ca239",
                                                                                  "da0021bc-40c0-48d9-ab69-20cb4d9cc6ec",
                                                                                  new Date(1561477836947L),
                                                                                  "c50ec9bc-3d48-44ea-b7fa-7ae883aaefca",
                                                                                  "2b4ac44c-5396-4dac-ad58-7d3dd0843cc0",
                                                                                  "565b2c4e-3a6b-4051-9d26-c65908529f21",
                                                                                  "2ab18fdd-0fac-47bd-a9cc-22e6cacd5c9e",
                                                                                  "ed514dd4-0a58-4dc5-986d-c159a9ec81ca");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("caab74c7-bd95-4828-8155-f4d9856ca239",
                                                                                  "da0021bc-40c0-48d9-ab69-20cb4d9cc6ec",
                                                                                  new Date(1561477836947L),
                                                                                  "c50ec9bc-3d48-44ea-b7fa-7ae883aaefca",
                                                                                  "2b4ac44c-5396-4dac-ad58-7d3dd0843cc0",
                                                                                  "565b2c4e-3a6b-4051-9d26-c65908529f21",
                                                                                  "2ab18fdd-0fac-47bd-a9cc-22e6cacd5c9e",
                                                                                  "ed514dd4-0a58-4dc5-986d-c159a9ec81ca");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2.hashCode(), developercertificate1.hashCode());
            int hashCode = developercertificate1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, developercertificate1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeveloperCertificate developercertificate = new DeveloperCertificate("cb7b7941-9a04-47ba-a861-8b41693abfef",
                                                                             "1229b801-f946-4301-8259-6d5f6da37f48",
                                                                             new Date(1561477836178L),
                                                                             "2309c395-19fe-4ba2-ad66-08bd997f514d",
                                                                             "93e3fb68-672b-46c9-99d3-05b431927d17",
                                                                             "aa05cf8a-e38c-48cf-a467-3edc9a84540b",
                                                                             "c96311b2-bb42-4b1b-9bc0-0aaf593a1055",
                                                                             "930cc2eb-4fe6-4deb-b462-b41191f2b40b");
        assertTrue(developercertificate.isValid());
        DeveloperCertificate developercertificateInvalid = new DeveloperCertificate("ca9df9d7-7370-4efb-a21c-16c1a0b85706",
                                                                                    "0fedace9-4bd2-4391-bab6-bcb1a2383823",
                                                                                    new Date(1561477834692L),
                                                                                    "2ddeec4a-7d8c-4583-b6fc-269f46d337d7",
                                                                                    "4c6c5cd4-eac4-4f72-8f2c-c1e1c70d94af",
                                                                                    "a26877a8-8b0c-4597-99cf-a08db894c98e",
                                                                                    null,
                                                                                    "8b5a7c2d-ccc8-48c1-aaa4-47e79e990e0e");
        assertFalse(developercertificateInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("3ce047ba-3019-4ab6-9aa0-3fdea7eab44b",
                                                                                  "f2013dc0-257a-4a4c-a538-3e9768747c9a",
                                                                                  new Date(1561477840798L),
                                                                                  "f72b7f23-0bb4-49df-8e86-e9fe171e48e0",
                                                                                  "ff49e1a2-b05b-47eb-b2c1-e69d9df124ce",
                                                                                  "736fa965-7fd3-4aac-ab67-6082be573216",
                                                                                  "1c73f090-ce3c-4445-a459-d5d68b81ecd2",
                                                                                  "70cb1420-d865-4def-a1da-66cce87d1958");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("3ce047ba-3019-4ab6-9aa0-3fdea7eab44b",
                                                                                  "f2013dc0-257a-4a4c-a538-3e9768747c9a",
                                                                                  new Date(1561477840798L),
                                                                                  "f72b7f23-0bb4-49df-8e86-e9fe171e48e0",
                                                                                  "ff49e1a2-b05b-47eb-b2c1-e69d9df124ce",
                                                                                  "736fa965-7fd3-4aac-ab67-6082be573216",
                                                                                  "1c73f090-ce3c-4445-a459-d5d68b81ecd2",
                                                                                  "70cb1420-d865-4def-a1da-66cce87d1958");
            DeveloperCertificate developercertificate3 = new DeveloperCertificate("3868d12d-23d7-4125-80c8-0d2fe49a8472",
                                                                                  "f102388f-34c0-49c1-bc21-a847c3fd1b38",
                                                                                  new Date(1561477840402L),
                                                                                  "516f99e4-1599-4723-ac60-3ec8ad7961aa",
                                                                                  "ee40da79-2507-4eba-b111-36625b74e9b6",
                                                                                  "4cc0b927-7b11-43d5-94f8-ae3094bd9c90",
                                                                                  "a28b7258-c546-4704-95d0-21cea3fce5a8",
                                                                                  "fc8da7d5-03fe-42f7-bbcd-a87889b86732");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotNull(developercertificate3);
            assertNotSame(developercertificate2, developercertificate1);
            assertNotSame(developercertificate3, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate1, developercertificate2);
            assertEquals(developercertificate1, developercertificate1);
            assertFalse(developercertificate1.equals(null));
            assertNotEquals(developercertificate3, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
