// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model ApiKey.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestApiKey {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ApiKey apikey1 = new ApiKey("fc91ece4c663c84ce50ea8058379fe26", new Date(1561477833678L), 37,
                                        "fc91ece4c663c84ce50ea8058379fe26", "f7dfdd75-ffe7-48ea-a9b3-394405c7691f", 4,
                                        "d030d737-358f-4a79-936b-7c7339d2e90a", "fc91ece4c663c84ce50ea8058379fe26",
                                        ApiKeyStatus.getDefault(), new Date(1561477832742L));
            ApiKey apikey2 = apikey1.clone();
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotSame(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ApiKey apikey1 = new ApiKey("fc91ece4c663c84ce50ea8058379fe26", new Date(1561477835254L), 9,
                                        "fc91ece4c663c84ce50ea8058379fe26", "20f57f42-c4f9-45d5-899c-13f672421f11", -33,
                                        "61bb908f-59f1-4d34-b605-878445a9030e", "fc91ece4c663c84ce50ea8058379fe26",
                                        ApiKeyStatus.getDefault(), new Date(1561477833478L));
            ApiKey apikey2 = new ApiKey("fc91ece4c663c84ce50ea8058379fe26", new Date(1561477835254L), 9,
                                        "fc91ece4c663c84ce50ea8058379fe26", "20f57f42-c4f9-45d5-899c-13f672421f11", -33,
                                        "61bb908f-59f1-4d34-b605-878445a9030e", "fc91ece4c663c84ce50ea8058379fe26",
                                        ApiKeyStatus.getDefault(), new Date(1561477833478L));
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotSame(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey2.hashCode(), apikey1.hashCode());
            int hashCode = apikey1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, apikey1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ApiKey apikey = new ApiKey("fc91ece4c663c84ce50ea8058379fe26", new Date(1561477841797L), -45,
                                   "fc91ece4c663c84ce50ea8058379fe26", "9f38abf9-e42c-4602-acb9-48e5bb86604e", 96,
                                   "ebe6475c-4c7a-4779-a87c-150b54fff39e", "fc91ece4c663c84ce50ea8058379fe26",
                                   ApiKeyStatus.getDefault(), new Date(1561477834742L));
        assertTrue(apikey.isValid());
        ApiKey apikeyInvalid = new ApiKey("\u001ed玿Z쒤㸃▦&'d\\\\d=/\u0001b]b冑쟄ddbbb@\u0019dd_:bd\u0014G,dd+\\\\dbbbE`涮b\u0013粔AUbbbK襊\bO>db",
                                          new Date(1561477838203L), -17,
                                          "\u001ed玿Z쒤㸃▦&'d\\\\d=/\u0001b]b冑쟄ddbbb@\u0019dd_:bd\u0014G,dd+\\\\dbbbE`涮b\u0013粔AUbbbK襊\bO>db",
                                          "df762247-aed3-46bb-8e29-bd25e84c9c30", 41, null,
                                          "\u001ed玿Z쒤㸃▦&'d\\\\d=/\u0001b]b冑쟄ddbbb@\u0019dd_:bd\u0014G,dd+\\\\dbbbE`涮b\u0013粔AUbbbK襊\bO>db",
                                          ApiKeyStatus.getDefault(), new Date(1561477838577L));
        assertFalse(apikeyInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ApiKey apikey1 = new ApiKey("fc91ece4c663c84ce50ea8058379fe26", new Date(1561477841089L), -83,
                                        "fc91ece4c663c84ce50ea8058379fe26", "3d2fd975-5187-4b05-8073-603f52a05714",
                                        -107, "f99b05b9-a3b0-4780-834a-98911d586d57",
                                        "fc91ece4c663c84ce50ea8058379fe26", ApiKeyStatus.getDefault(),
                                        new Date(1561477832957L));
            ApiKey apikey2 = new ApiKey("fc91ece4c663c84ce50ea8058379fe26", new Date(1561477841089L), -83,
                                        "fc91ece4c663c84ce50ea8058379fe26", "3d2fd975-5187-4b05-8073-603f52a05714",
                                        -107, "f99b05b9-a3b0-4780-834a-98911d586d57",
                                        "fc91ece4c663c84ce50ea8058379fe26", ApiKeyStatus.getDefault(),
                                        new Date(1561477832957L));
            ApiKey apikey3 = new ApiKey("fc91ece4c663c84ce50ea8058379fe26", new Date(1561477840933L), -9,
                                        "fc91ece4c663c84ce50ea8058379fe26", "1bd8d931-07cf-40a5-9052-bfcc60e4c413", 27,
                                        "ebadc2c5-01a8-471f-b277-9112bae8aedd", "fc91ece4c663c84ce50ea8058379fe26",
                                        ApiKeyStatus.getDefault(), new Date(1561477841861L));
            assertNotNull(apikey1);
            assertNotNull(apikey2);
            assertNotNull(apikey3);
            assertNotSame(apikey2, apikey1);
            assertNotSame(apikey3, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey2, apikey1);
            assertEquals(apikey1, apikey2);
            assertEquals(apikey1, apikey1);
            assertFalse(apikey1.equals(null));
            assertNotEquals(apikey3, apikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
