// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEvents.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEvents {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1561477842204L), null,
                                                          new Date(1561477835714L),
                                                          "8d819235-8715-43c8-8728-b5fe09332e87",
                                                          "ebef6c83-a21c-4943-866f-7a792117717f",
                                                          "1a4aa8bc-964d-4e96-ba84-d91a468c9c4b",
                                                          "bfbd6356-8fec-4997-aeea-4b1149491b0e",
                                                          "67dc1221-3fce-4606-8030-596bc78090d3",
                                                          "29b900e4-228c-4562-b48a-70074112fb9b", true);
            DeviceEvents deviceevents2 = deviceevents1.clone();
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1561477842298L), null,
                                                          new Date(1561477835754L),
                                                          "7d9c46ce-03a4-4fed-a808-fa19553ee82c",
                                                          "a1a0e608-24ed-4f6b-af1c-a22db8dd7781",
                                                          "c9534500-769e-477e-98ba-357d98831baf",
                                                          "353bd15f-a5a0-41de-aa4a-e3c4919f714e",
                                                          "99228933-a315-4654-94d8-95b61df17d13",
                                                          "3b0c43d1-2c8d-4cfc-995a-13ec6b66a88e", false);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1561477842298L), null,
                                                          new Date(1561477835754L),
                                                          "7d9c46ce-03a4-4fed-a808-fa19553ee82c",
                                                          "a1a0e608-24ed-4f6b-af1c-a22db8dd7781",
                                                          "c9534500-769e-477e-98ba-357d98831baf",
                                                          "353bd15f-a5a0-41de-aa4a-e3c4919f714e",
                                                          "99228933-a315-4654-94d8-95b61df17d13",
                                                          "3b0c43d1-2c8d-4cfc-995a-13ec6b66a88e", false);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2.hashCode(), deviceevents1.hashCode());
            int hashCode = deviceevents1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceevents1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEvents deviceevents = new DeviceEvents(null, new Date(1561477840756L), null, new Date(1561477838141L),
                                                     "acb31d4b-0a8d-45be-be55-461e1e0f1388",
                                                     "07c0428b-f4a8-407b-b58f-dfe1166d4ab1",
                                                     "cab0d5be-cc9c-409a-8cc3-199c0bd53810",
                                                     "0acad64d-48c9-44fc-892d-620d8bf38cdb",
                                                     "10231b81-4e4d-4b71-bfaf-83460bf872a0",
                                                     "88dbf36f-c2e3-4cfd-883a-514c580364ac", false);
        assertTrue(deviceevents.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1561477836338L), null,
                                                          new Date(1561477842214L),
                                                          "258b0b25-e96f-481a-824e-973d645bf250",
                                                          "805ee600-e26b-4e0a-878f-bca6189b8f93",
                                                          "a59b04a2-4a08-40de-b81c-08d99dc8d222",
                                                          "37845445-8d67-48d9-92f0-53c51d3c17c0",
                                                          "f859c506-593c-416b-ad12-fd25565da099",
                                                          "b9b2f852-85a2-4d56-af32-bc772bcbb37e", true);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1561477836338L), null,
                                                          new Date(1561477842214L),
                                                          "258b0b25-e96f-481a-824e-973d645bf250",
                                                          "805ee600-e26b-4e0a-878f-bca6189b8f93",
                                                          "a59b04a2-4a08-40de-b81c-08d99dc8d222",
                                                          "37845445-8d67-48d9-92f0-53c51d3c17c0",
                                                          "f859c506-593c-416b-ad12-fd25565da099",
                                                          "b9b2f852-85a2-4d56-af32-bc772bcbb37e", true);
            DeviceEvents deviceevents3 = new DeviceEvents(null, new Date(1561477833107L), null,
                                                          new Date(1561477834564L),
                                                          "2cdfe16d-e91f-44be-9607-94e6c6fa698f",
                                                          "d7dde8c3-dffd-4883-a369-f35df7256a79",
                                                          "7111030f-466a-4df9-b3fd-69a221c4f8b8",
                                                          "c67cf71d-7b9a-488c-98f8-8a3ba5602a95",
                                                          "a0bbd5cb-f529-4ec7-a380-d93736d229b2",
                                                          "32796077-f009-41e0-81c2-3898186e6781", true);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotNull(deviceevents3);
            assertNotSame(deviceevents2, deviceevents1);
            assertNotSame(deviceevents3, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents1, deviceevents2);
            assertEquals(deviceevents1, deviceevents1);
            assertFalse(deviceevents1.equals(null));
            assertNotEquals(deviceevents3, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
