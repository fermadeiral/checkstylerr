// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantUser.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantUser {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("e5bbd029672c41116bdebdc8edf9007e", null,
                                                             "b451f73b-1dc9-4b05-886b-7eb65c2004ef",
                                                             new Date(1557959065928L), 34, null, "dedcb.7426f@cae59.me",
                                                             false, "8ce58996-4d53-4d14-acc6-cfe143a8a9ba",
                                                             "e5bbd029672c41116bdebdc8edf9007e", false, false, false,
                                                             114, null, null, "faebefa7-f962-4680-a09c-d93b6d8f274c",
                                                             33, "4906a8dc-1caa-4ed4-8cbb-f6330afa2854",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1557959069218L), "v_Vj");
            SubtenantUser subtenantuser2 = subtenantuser1.clone();
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("e5bbd029672c41116bdebdc8edf9007e", null,
                                                             "4da68e8a-a213-46b9-abea-f027fa088331",
                                                             new Date(1557959064514L), 122, null,
                                                             "ba4f1.674d2@2a3bc.me", false,
                                                             "0b125afa-8fc0-4e5c-b426-f7223626ff85",
                                                             "e5bbd029672c41116bdebdc8edf9007e", false, false, true,
                                                             -56, null, null, "b87807db-4248-455b-9a81-d8881722ad87",
                                                             -105, "cdc3455d-98d9-40e2-b1e9-e8454fd033de",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1557959073673L), "v_Vj");
            SubtenantUser subtenantuser2 = new SubtenantUser("e5bbd029672c41116bdebdc8edf9007e", null,
                                                             "4da68e8a-a213-46b9-abea-f027fa088331",
                                                             new Date(1557959064514L), 122, null,
                                                             "ba4f1.674d2@2a3bc.me", false,
                                                             "0b125afa-8fc0-4e5c-b426-f7223626ff85",
                                                             "e5bbd029672c41116bdebdc8edf9007e", false, false, true,
                                                             -56, null, null, "b87807db-4248-455b-9a81-d8881722ad87",
                                                             -105, "cdc3455d-98d9-40e2-b1e9-e8454fd033de",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1557959073673L), "v_Vj");
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2.hashCode(), subtenantuser1.hashCode());
            int hashCode = subtenantuser1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantuser1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantUser subtenantuser = new SubtenantUser("e5bbd029672c41116bdebdc8edf9007e", null,
                                                        "bfb8306c-9f22-4647-ab1e-35462ced494a",
                                                        new Date(1557959064557L), -22, null, "e3b15.d0761@c6792.fr",
                                                        false, "3bd2fee8-4329-45be-9bf0-c7f9ec7b235d",
                                                        "e5bbd029672c41116bdebdc8edf9007e", false, false, true, -128,
                                                        null, null, "15c944cb-7a36-4bb9-8948-ba2a0eec3a46", 114,
                                                        "dec8abb8-30c6-4348-acba-3d111434d6a1",
                                                        SubtenantUserStatus.getDefault(), null,
                                                        new Date(1557959070853L), "v_Vj");
        assertTrue(subtenantuser.isValid());
        SubtenantUser subtenantuserInvalid = new SubtenantUser(null, null, "a3e0f38d-67a4-4df7-8c41-ef29aad882ff",
                                                               new Date(1557959069032L), 28, null, null, true,
                                                               "5b9010cb-3fb9-4a32-8b05-39a34a470d8b3b01d37a-fe47-4ecb-88f3-6bb4b96a8f7f31a05e89-642b-4af8-b0b8-9583e69ddccf",
                                                               "î‘¿33\u001a3\u00183Z\\\\E!ì¤?3ëŠ?â‰’æ“•\u001aî§›3@ìš¬ç£?3.$$W3à¡›3\u0015M+ê?‘\u0016\\\\3==W,\u0014ä²ªîˆ£A\u0019ì«µ\u00073ç™‡3ç›†î·³Iæ™ƒ\u0012.\u0006Pä²ŠB/Qá¶‡",
                                                               false, true, true, -14, null, null,
                                                               "8de83ab7-4a53-4c7d-b172-dd1b33cdf525", -88,
                                                               "818bfc1c-342a-4594-8831-d31f18623826a28239a4-140b-421a-a4a3-b9be0c8989764653bdb3-a569-4021-bc19-ecd3186c3dd1",
                                                               SubtenantUserStatus.getDefault(), null,
                                                               new Date(1557959072441L),
                                                               "l]ï±‘Zb\fâ±?\\\\ì½›\u0015iu[noå­›gp`WY\u001c`r\u001aîº“d]rr[^ã—?t0ib^#beYcX fçŽ¾rå°„iXh^\\\\q5f\u0002]êª¦p0éº¹î?‚");
        assertFalse(subtenantuserInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("e5bbd029672c41116bdebdc8edf9007e", null,
                                                             "26c28f21-b521-48d9-9897-55282bdf3a78",
                                                             new Date(1557959064371L), -20, null,
                                                             "ea678.73527@74702.fr", false,
                                                             "b4399b4d-3137-4c78-a3a1-ef66791c336c",
                                                             "e5bbd029672c41116bdebdc8edf9007e", true, true, true, -97,
                                                             null, null, "57d42cd9-2eb2-4cdb-8573-ef887968fd0b", 110,
                                                             "cb5db7b9-000f-4d51-94d6-aedb0fdeea6b",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1557959064663L), "v_Vj");
            SubtenantUser subtenantuser2 = new SubtenantUser("e5bbd029672c41116bdebdc8edf9007e", null,
                                                             "26c28f21-b521-48d9-9897-55282bdf3a78",
                                                             new Date(1557959064371L), -20, null,
                                                             "ea678.73527@74702.fr", false,
                                                             "b4399b4d-3137-4c78-a3a1-ef66791c336c",
                                                             "e5bbd029672c41116bdebdc8edf9007e", true, true, true, -97,
                                                             null, null, "57d42cd9-2eb2-4cdb-8573-ef887968fd0b", 110,
                                                             "cb5db7b9-000f-4d51-94d6-aedb0fdeea6b",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1557959064663L), "v_Vj");
            SubtenantUser subtenantuser3 = new SubtenantUser("e5bbd029672c41116bdebdc8edf9007e", null,
                                                             "2f7f1d6e-01b5-4736-8e74-1c0f8fc94bd3",
                                                             new Date(1557959068598L), -77, null,
                                                             "14f8a.5fd0d@b48ec.fr", false,
                                                             "f0cf7bf5-ac08-4243-9d5c-49f7ce72c45a",
                                                             "e5bbd029672c41116bdebdc8edf9007e", true, true, true, -28,
                                                             null, null, "0c267e82-9c89-4c39-8105-604ef1aac6a5", -10,
                                                             "d2ab1709-c650-400b-9833-ef6ee92e9f20",
                                                             SubtenantUserStatus.getDefault(), null,
                                                             new Date(1557959071476L), "v_Vj");
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotNull(subtenantuser3);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertNotSame(subtenantuser3, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser1, subtenantuser2);
            assertEquals(subtenantuser1, subtenantuser1);
            assertFalse(subtenantuser1.equals(null));
            assertNotEquals(subtenantuser3, subtenantuser1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
