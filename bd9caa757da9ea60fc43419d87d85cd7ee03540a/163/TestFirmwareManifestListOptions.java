// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.deviceupdate.model;

import static org.junit.Assert.*;

import com.arm.mbed.cloud.sdk.common.Order;
import com.arm.mbed.cloud.sdk.common.listing.ListOptionsEncoder;
import com.arm.mbed.cloud.sdk.common.listing.filtering.FilterOperator;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import org.junit.Test;

/**
 * Unit tests for Model FirmwareManifestListOptions.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestFirmwareManifestListOptions {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            FirmwareManifestListOptions firmwaremanifestlistoptions1 = new FirmwareManifestListOptions(Integer.valueOf(62),
                                                                                                       Long.valueOf(-1),
                                                                                                       Order.getDefault(),
                                                                                                       "bc038e41-715c-4986-8f88-a34722995c63",
                                                                                                       null, null);
            FirmwareManifestListOptions firmwaremanifestlistoptions2 = firmwaremanifestlistoptions1.clone();
            assertNotNull(firmwaremanifestlistoptions1);
            assertNotNull(firmwaremanifestlistoptions2);
            assertNotSame(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the filters method.
     */
    @SuppressWarnings({ "boxing", "resource" })
    @Test
    public void testFilters() {
        try {
            FirmwareManifestListOptions option = new FirmwareManifestListOptions().inCreatedAts(Arrays.asList(new Date(1557959065796L),
                                                                                                              new Date(1557959073015L),
                                                                                                              new Date(1557959073048L),
                                                                                                              new Date(1557959071872L),
                                                                                                              new Date(1557959065352L),
                                                                                                              new Date(1557959067171L),
                                                                                                              new Date(1557959068427L),
                                                                                                              new Date(1557959070690L)))
                                                                                  .notInCreatedAts(Arrays.asList(new Date(1557959074065L)))
                                                                                  .lessThanCreatedAt(new Date(1557959067108L))
                                                                                  .greaterThanCreatedAt(new Date(1557959065638L))
                                                                                  .equalToName("203ff515-4e52-4e63-a4e7-fb73adb1599d")
                                                                                  .notEqualToName("613639cb-4ed0-4c7c-918e-a05dbd744b06")
                                                                                  .inNames(Arrays.asList("03174637-e904-461a-ae64-1158c3be3ee6",
                                                                                                         "0276bc77-f8f0-41cb-acae-b8d2ec693616",
                                                                                                         "a76630df-1cb8-4582-b316-a980195431dd",
                                                                                                         "97eae7a5-39dd-4ac1-8385-c218d1a0f9ee"))
                                                                                  .notInNames(Arrays.asList("444ed578-5750-4d22-84eb-2aa9c6f3f2e6",
                                                                                                            "e64088bc-98ae-4ff4-a9ce-8c7ad5fdd624",
                                                                                                            "6e0fe20d-1903-4237-8aef-ac2c1fa141be",
                                                                                                            "e881573d-f9d9-4b50-83b1-ba86a05800df",
                                                                                                            "0eb25c5f-1e33-4383-8947-4ac897365682",
                                                                                                            "404f7bc8-8e21-47e3-b6a5-d0a6e2d93b43",
                                                                                                            "895b8ae3-ebe8-4d2a-b4ef-acb7a2119537",
                                                                                                            "5486ff44-9d57-4a3f-aedb-906d9942fc7c"))
                                                                                  .equalToId("67d08694-53ea-4bad-ad7e-f513c891618c")
                                                                                  .notEqualToId("6dcb15be-4d7c-4f83-adc0-83fd3863230c")
                                                                                  .inIds(Arrays.asList("9b2623c7-95c2-4628-a848-e61b16cf5d0d",
                                                                                                       "9917a2b1-805c-45d4-8eed-1371af913496",
                                                                                                       "472356ea-644e-4e1a-a953-437dc4559a4e"))
                                                                                  .notInIds(Arrays.asList("d0152cab-4038-4cb8-8ffd-aff5432e3ba4",
                                                                                                          "26ab591f-2a53-40db-a8b6-c7830c7e74a0",
                                                                                                          "40ab3ea1-3b06-482c-b278-3c164f69ef0d",
                                                                                                          "4e11406f-ae25-409f-8212-b50522ffc26d",
                                                                                                          "d37baaf1-1736-4cc1-901b-6dc2bf1ee67d",
                                                                                                          "33d37b93-56f2-414a-a4fd-258a051d1e29",
                                                                                                          "237c1fb6-bc7a-472a-af18-826f1fa80901"))
                                                                                  .equalToDatafileUrl("2c3d2b59-e403-4f82-8a3a-3393089fdc48")
                                                                                  .notEqualToDatafileUrl("4d2138c1-aaac-4ee5-a791-3a5c8d6fa658")
                                                                                  .inDatafileUrls(Arrays.asList("dc89f0fe-5384-4245-909d-cfddfcbad3e1"))
                                                                                  .notInDatafileUrls(Arrays.asList("60495f9d-755c-4578-883b-70bc7911dbac"))
                                                                                  .equalToDatafileSize(Long.valueOf(17))
                                                                                  .notEqualToDatafileSize(Long.valueOf(89))
                                                                                  .inDatafileSizes(Arrays.asList(Long.valueOf(-20)))
                                                                                  .notInDatafileSizes(Arrays.asList(Long.valueOf(2),
                                                                                                                    Long.valueOf(-128),
                                                                                                                    Long.valueOf(11),
                                                                                                                    Long.valueOf(-5),
                                                                                                                    Long.valueOf(61),
                                                                                                                    Long.valueOf(87),
                                                                                                                    Long.valueOf(-18)))
                                                                                  .equalToDeviceClass("4191c492-7d5a-4c3d-9b06-8c09537622ba")
                                                                                  .notEqualToDeviceClass("30b56216-3968-4e09-984d-7140eb9abff7")
                                                                                  .inDeviceClass(Arrays.asList("9a8aca6d-d3f0-490c-aac7-472bae1cb762",
                                                                                                               "0b53f6a2-7e98-4f3b-81d3-850360a386dc",
                                                                                                               "a8848b2b-70f4-4615-b71c-0b801a41f345",
                                                                                                               "529ac15f-12e2-4b6b-afc5-2fc60692eef8",
                                                                                                               "8760ecf2-a4b6-4d02-b0b9-0fec2fc8e7c6",
                                                                                                               "480f7f89-1baa-411d-8cf1-baa972cd1259",
                                                                                                               "767263dc-3442-4bd8-9de6-3fe45aed164c",
                                                                                                               "9ebd0819-c742-4548-a14a-5364bf8b213c",
                                                                                                               "24102a24-1c79-4c4d-9d17-b2d0cd34a0dc"))
                                                                                  .notInDeviceClass(Arrays.asList("711af03c-f513-4da8-b6ef-6dc7babc09ed",
                                                                                                                  "2b088096-b513-4bd4-b724-7e2e4ee85f90",
                                                                                                                  "f064917c-6bbe-4e68-896a-477363f8740f",
                                                                                                                  "aa3788cf-65be-4500-a8d5-fef82becb36c",
                                                                                                                  "8f82fe85-e440-4bae-9ef0-191f6de1589e",
                                                                                                                  "5c588dbd-6077-4c1d-9f22-b9901f15381e",
                                                                                                                  "ce1fd779-f063-493f-a312-7890ab723309"))
                                                                                  .inTimestamps(Arrays.asList(new Date(1557959068363L),
                                                                                                              new Date(1557959066405L),
                                                                                                              new Date(1557959073215L),
                                                                                                              new Date(1557959066957L),
                                                                                                              new Date(1557959066744L)))
                                                                                  .notInTimestamps(Arrays.asList(new Date(1557959071191L),
                                                                                                                 new Date(1557959070880L),
                                                                                                                 new Date(1557959067103L),
                                                                                                                 new Date(1557959067180L),
                                                                                                                 new Date(1557959065902L)))
                                                                                  .lessThanTimestamp(new Date(1557959073407L))
                                                                                  .greaterThanTimestamp(new Date(1557959069629L))
                                                                                  .inUpdatedAts(Arrays.asList(new Date(1557959065567L),
                                                                                                              new Date(1557959071916L),
                                                                                                              new Date(1557959068263L),
                                                                                                              new Date(1557959073028L),
                                                                                                              new Date(1557959070429L),
                                                                                                              new Date(1557959066969L),
                                                                                                              new Date(1557959066430L),
                                                                                                              new Date(1557959073033L),
                                                                                                              new Date(1557959072716L)))
                                                                                  .notInUpdatedAts(Arrays.asList(new Date(1557959071914L),
                                                                                                                 new Date(1557959065194L),
                                                                                                                 new Date(1557959065444L),
                                                                                                                 new Date(1557959069506L),
                                                                                                                 new Date(1557959070932L),
                                                                                                                 new Date(1557959072694L),
                                                                                                                 new Date(1557959068470L),
                                                                                                                 new Date(1557959067435L)))
                                                                                  .lessThanUpdatedAt(new Date(1557959065384L))
                                                                                  .greaterThanUpdatedAt(new Date(1557959073302L))
                                                                                  .equalToDescription("d62fb722-8795-4aa3-b633-f0de49bca4cb")
                                                                                  .notEqualToDescription("a1f4f2a5-03a0-4506-a693-675cbe21c3da")
                                                                                  .inDescriptions(Arrays.asList("a07aabea-5aa5-4168-9ee8-2f54ec49db40"))
                                                                                  .notInDescriptions(Arrays.asList("9607d665-aa52-4075-897a-5a1ab6ee3444",
                                                                                                                   "7ced5260-f3ba-467b-8a92-902bb9dbce72"));
            assertTrue(option.hasFilters());
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1557959065796L), new Date(1557959073015L), new Date(1557959073048L),
                                       new Date(1557959071872L), new Date(1557959065352L), new Date(1557959067171L),
                                       new Date(1557959068427L), new Date(1557959070690L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1557959074065L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                        FilterOperator.LESS_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1557959067108L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1557959065638L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME, FilterOperator.EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("203ff515-4e52-4e63-a4e7-fb73adb1599d",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("613639cb-4ed0-4c7c-918e-a05dbd744b06",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME, FilterOperator.IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("03174637-e904-461a-ae64-1158c3be3ee6", "0276bc77-f8f0-41cb-acae-b8d2ec693616",
                                       "a76630df-1cb8-4582-b316-a980195431dd", "97eae7a5-39dd-4ac1-8385-c218d1a0f9ee"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("444ed578-5750-4d22-84eb-2aa9c6f3f2e6", "e64088bc-98ae-4ff4-a9ce-8c7ad5fdd624",
                                       "6e0fe20d-1903-4237-8aef-ac2c1fa141be", "e881573d-f9d9-4b50-83b1-ba86a05800df",
                                       "0eb25c5f-1e33-4383-8947-4ac897365682", "404f7bc8-8e21-47e3-b6a5-d0a6e2d93b43",
                                       "895b8ae3-ebe8-4d2a-b4ef-acb7a2119537", "5486ff44-9d57-4a3f-aedb-906d9942fc7c"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_NAME,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID, FilterOperator.EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("67d08694-53ea-4bad-ad7e-f513c891618c",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("6dcb15be-4d7c-4f83-adc0-83fd3863230c",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID, FilterOperator.IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("9b2623c7-95c2-4628-a848-e61b16cf5d0d", "9917a2b1-805c-45d4-8eed-1371af913496",
                                       "472356ea-644e-4e1a-a953-437dc4559a4e"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("d0152cab-4038-4cb8-8ffd-aff5432e3ba4", "26ab591f-2a53-40db-a8b6-c7830c7e74a0",
                                       "40ab3ea1-3b06-482c-b278-3c164f69ef0d", "4e11406f-ae25-409f-8212-b50522ffc26d",
                                       "d37baaf1-1736-4cc1-901b-6dc2bf1ee67d", "33d37b93-56f2-414a-a4fd-258a051d1e29",
                                       "237c1fb6-bc7a-472a-af18-826f1fa80901"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_ID,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("2c3d2b59-e403-4f82-8a3a-3393089fdc48",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("4d2138c1-aaac-4ee5-a791-3a5c8d6fa658",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("dc89f0fe-5384-4245-909d-cfddfcbad3e1"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("60495f9d-755c-4578-883b-70bc7911dbac"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(17),
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    Long.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(89),
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                       Long.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(-20)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                        FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(2), Long.valueOf(-128), Long.valueOf(11), Long.valueOf(-5),
                                       Long.valueOf(61), Long.valueOf(87), Long.valueOf(-18)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS, FilterOperator.EQUAL));
            assertNotNull(option.getDeviceClassFilters());
            assertEquals("4191c492-7d5a-4c3d-9b06-8c09537622ba",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDeviceClassFilters());
            assertEquals("30b56216-3968-4e09-984d-7140eb9abff7",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS, FilterOperator.IN));
            assertNotNull(option.getDeviceClassFilters());
            assertEquals(Arrays.asList("9a8aca6d-d3f0-490c-aac7-472bae1cb762", "0b53f6a2-7e98-4f3b-81d3-850360a386dc",
                                       "a8848b2b-70f4-4615-b71c-0b801a41f345", "529ac15f-12e2-4b6b-afc5-2fc60692eef8",
                                       "8760ecf2-a4b6-4d02-b0b9-0fec2fc8e7c6", "480f7f89-1baa-411d-8cf1-baa972cd1259",
                                       "767263dc-3442-4bd8-9de6-3fe45aed164c", "9ebd0819-c742-4548-a14a-5364bf8b213c",
                                       "24102a24-1c79-4c4d-9d17-b2d0cd34a0dc"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS, FilterOperator.NOT_IN));
            assertNotNull(option.getDeviceClassFilters());
            assertEquals(Arrays.asList("711af03c-f513-4da8-b6ef-6dc7babc09ed", "2b088096-b513-4bd4-b724-7e2e4ee85f90",
                                       "f064917c-6bbe-4e68-896a-477363f8740f", "aa3788cf-65be-4500-a8d5-fef82becb36c",
                                       "8f82fe85-e440-4bae-9ef0-191f6de1589e", "5c588dbd-6077-4c1d-9f22-b9901f15381e",
                                       "ce1fd779-f063-493f-a312-7890ab723309"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DEVICE_CLASS,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP, FilterOperator.IN));
            assertNotNull(option.getTimestampFilters());
            assertEquals(Arrays.asList(new Date(1557959068363L), new Date(1557959066405L), new Date(1557959073215L),
                                       new Date(1557959066957L), new Date(1557959066744L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP, FilterOperator.NOT_IN));
            assertNotNull(option.getTimestampFilters());
            assertEquals(Arrays.asList(new Date(1557959071191L), new Date(1557959070880L), new Date(1557959067103L),
                                       new Date(1557959067180L), new Date(1557959065902L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP, FilterOperator.LESS_THAN));
            assertNotNull(option.getTimestampFilters());
            assertEquals(new Date(1557959073407L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getTimestampFilters());
            assertEquals(new Date(1557959069629L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_TIMESTAMP,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1557959065567L), new Date(1557959071916L), new Date(1557959068263L),
                                       new Date(1557959073028L), new Date(1557959070429L), new Date(1557959066969L),
                                       new Date(1557959066430L), new Date(1557959073033L), new Date(1557959072716L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1557959071914L), new Date(1557959065194L), new Date(1557959065444L),
                                       new Date(1557959069506L), new Date(1557959070932L), new Date(1557959072694L),
                                       new Date(1557959068470L), new Date(1557959067435L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                        FilterOperator.LESS_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1557959065384L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1557959073302L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareManifestListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("d62fb722-8795-4aa3-b633-f0de49bca4cb",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("a1f4f2a5-03a0-4506-a693-675cbe21c3da",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("a07aabea-5aa5-4168-9ee8-2f54ec49db40"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("9607d665-aa52-4075-897a-5a1ab6ee3444", "7ced5260-f3ba-467b-8a92-902bb9dbce72"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareManifestListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    List.class, option));
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            FirmwareManifestListOptions firmwaremanifestlistoptions1 = new FirmwareManifestListOptions(Integer.valueOf(-9),
                                                                                                       Long.valueOf(93),
                                                                                                       Order.getDefault(),
                                                                                                       "940ab713-ba32-42eb-915b-b77cd065e8bd",
                                                                                                       null, null);
            FirmwareManifestListOptions firmwaremanifestlistoptions2 = new FirmwareManifestListOptions(Integer.valueOf(-9),
                                                                                                       Long.valueOf(93),
                                                                                                       Order.getDefault(),
                                                                                                       "940ab713-ba32-42eb-915b-b77cd065e8bd",
                                                                                                       null, null);
            assertNotNull(firmwaremanifestlistoptions1);
            assertNotNull(firmwaremanifestlistoptions2);
            assertNotSame(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2.hashCode(), firmwaremanifestlistoptions1.hashCode());
            int hashCode = firmwaremanifestlistoptions1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, firmwaremanifestlistoptions1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            FirmwareManifestListOptions firmwaremanifestlistoptions1 = new FirmwareManifestListOptions(Integer.valueOf(-3),
                                                                                                       Long.valueOf(69),
                                                                                                       Order.getDefault(),
                                                                                                       "e904ef64-6bf1-45f0-9bff-8b985dee07c9",
                                                                                                       null, null);
            FirmwareManifestListOptions firmwaremanifestlistoptions2 = new FirmwareManifestListOptions(Integer.valueOf(-3),
                                                                                                       Long.valueOf(69),
                                                                                                       Order.getDefault(),
                                                                                                       "e904ef64-6bf1-45f0-9bff-8b985dee07c9",
                                                                                                       null, null);
            FirmwareManifestListOptions firmwaremanifestlistoptions3 = new FirmwareManifestListOptions(Integer.valueOf(-59),
                                                                                                       Long.valueOf(95),
                                                                                                       Order.getDefault(),
                                                                                                       "69d00bdd-9944-453b-86da-0aa2f7bfb002",
                                                                                                       null, null);
            assertNotNull(firmwaremanifestlistoptions1);
            assertNotNull(firmwaremanifestlistoptions2);
            assertNotNull(firmwaremanifestlistoptions3);
            assertNotSame(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertNotSame(firmwaremanifestlistoptions3, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions2, firmwaremanifestlistoptions1);
            assertEquals(firmwaremanifestlistoptions1, firmwaremanifestlistoptions2);
            assertEquals(firmwaremanifestlistoptions1, firmwaremanifestlistoptions1);
            assertFalse(firmwaremanifestlistoptions1.equals(null));
            assertNotEquals(firmwaremanifestlistoptions3, firmwaremanifestlistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
