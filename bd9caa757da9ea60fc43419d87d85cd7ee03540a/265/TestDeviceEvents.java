// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEvents.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEvents {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1557959072956L), null,
                                                          new Date(1557959069895L),
                                                          "55d04aba-65af-4478-b3f7-e0857ad3ec7c",
                                                          "fe2cb4fe-dc24-412a-906f-5937b23f5603",
                                                          "9837bb38-c083-455c-b025-f5a6adb16f26",
                                                          "ee1b5f08-a899-411f-b422-d7bf20444039",
                                                          "3accbd93-17dd-49d2-b59d-3f96feb6f9db",
                                                          "c4e23dfd-6e49-458d-8cfc-fc2c36124871", false);
            DeviceEvents deviceevents2 = deviceevents1.clone();
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1557959072796L), null,
                                                          new Date(1557959070710L),
                                                          "002fbbd8-1aa3-4319-b06d-1393e5d3a1b2",
                                                          "a9c1b5a2-7000-49c4-b4d9-c2a9046bf22f",
                                                          "76e708a4-aa5c-4847-96fe-c155e164b3f4",
                                                          "de507120-2fc6-49b3-82d8-cf2904611c37",
                                                          "a91e724b-0b4c-4de4-9d1f-eaa55ff582a1",
                                                          "9d2aa552-a681-4d73-99ab-b39d95e95269", true);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1557959072796L), null,
                                                          new Date(1557959070710L),
                                                          "002fbbd8-1aa3-4319-b06d-1393e5d3a1b2",
                                                          "a9c1b5a2-7000-49c4-b4d9-c2a9046bf22f",
                                                          "76e708a4-aa5c-4847-96fe-c155e164b3f4",
                                                          "de507120-2fc6-49b3-82d8-cf2904611c37",
                                                          "a91e724b-0b4c-4de4-9d1f-eaa55ff582a1",
                                                          "9d2aa552-a681-4d73-99ab-b39d95e95269", true);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2.hashCode(), deviceevents1.hashCode());
            int hashCode = deviceevents1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceevents1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEvents deviceevents = new DeviceEvents(null, new Date(1557959068239L), null, new Date(1557959072901L),
                                                     "c04123fa-1f4f-4f73-9f38-f38e0e3cb63e",
                                                     "44c4b8d5-7dc4-4eef-a3c0-67ec75798143",
                                                     "c3a0437b-60a1-4e9a-a1c5-057053a2b378",
                                                     "98a43a71-eac5-41a5-81d7-2a235308004c",
                                                     "9d26c884-dc6a-4b07-a907-c31d0c8e91e7",
                                                     "85d7b3f3-ce61-4b4d-be76-882d3748c788", true);
        assertTrue(deviceevents.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1557959067570L), null,
                                                          new Date(1557959071330L),
                                                          "f0bb3446-79ce-4ff5-bb3e-2d9f58dff26c",
                                                          "a25d6791-2ff1-438b-b670-04c830635fb6",
                                                          "44d8ee73-e233-43ff-8f33-52454ca47102",
                                                          "15a36526-6846-4cfe-9dfc-0d8750b732d2",
                                                          "9a19b961-222d-4d0c-9689-08424b9ee967",
                                                          "4d797cb0-e68b-4d10-b6e5-3dd44609085c", false);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1557959067570L), null,
                                                          new Date(1557959071330L),
                                                          "f0bb3446-79ce-4ff5-bb3e-2d9f58dff26c",
                                                          "a25d6791-2ff1-438b-b670-04c830635fb6",
                                                          "44d8ee73-e233-43ff-8f33-52454ca47102",
                                                          "15a36526-6846-4cfe-9dfc-0d8750b732d2",
                                                          "9a19b961-222d-4d0c-9689-08424b9ee967",
                                                          "4d797cb0-e68b-4d10-b6e5-3dd44609085c", false);
            DeviceEvents deviceevents3 = new DeviceEvents(null, new Date(1557959073340L), null,
                                                          new Date(1557959065298L),
                                                          "8c51defe-3371-4e0e-9852-8e6449c4d608",
                                                          "854a987c-cb9c-4b35-b0ea-aef8c76f68a3",
                                                          "a087f36b-573e-4c4f-a2d7-acbaaf0576d4",
                                                          "a6ec20e5-0351-4eb9-a844-e11074840a09",
                                                          "dbfa6250-60b0-4b83-9283-d591c12903db",
                                                          "d832fbec-37c7-4eab-a615-cbe8f73e4a87", false);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotNull(deviceevents3);
            assertNotSame(deviceevents2, deviceevents1);
            assertNotSame(deviceevents3, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents1, deviceevents2);
            assertEquals(deviceevents1, deviceevents1);
            assertFalse(deviceevents1.equals(null));
            assertNotEquals(deviceevents3, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
