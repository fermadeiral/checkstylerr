// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantApiKey.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantApiKey {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("e5bbd029672c41116bdebdc8edf9007e",
                                                                   new Date(1557959069576L), -63,
                                                                   "e5bbd029672c41116bdebdc8edf9007e",
                                                                   "54fe271f-dcb7-474e-8c1c-d171594bbde7", 85,
                                                                   "59bbee65-ba49-4000-a676-ee75b816af49",
                                                                   "e5bbd029672c41116bdebdc8edf9007e",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1557959070860L));
            SubtenantApiKey subtenantapikey2 = subtenantapikey1.clone();
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("e5bbd029672c41116bdebdc8edf9007e",
                                                                   new Date(1557959071122L), -70,
                                                                   "e5bbd029672c41116bdebdc8edf9007e",
                                                                   "49077ab8-aa79-4540-ab8d-c7c8782b316e", -53,
                                                                   "628afc65-d664-466a-8285-29eb302b2728",
                                                                   "e5bbd029672c41116bdebdc8edf9007e",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1557959068150L));
            SubtenantApiKey subtenantapikey2 = new SubtenantApiKey("e5bbd029672c41116bdebdc8edf9007e",
                                                                   new Date(1557959071122L), -70,
                                                                   "e5bbd029672c41116bdebdc8edf9007e",
                                                                   "49077ab8-aa79-4540-ab8d-c7c8782b316e", -53,
                                                                   "628afc65-d664-466a-8285-29eb302b2728",
                                                                   "e5bbd029672c41116bdebdc8edf9007e",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1557959068150L));
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2.hashCode(), subtenantapikey1.hashCode());
            int hashCode = subtenantapikey1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantapikey1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantApiKey subtenantapikey = new SubtenantApiKey("e5bbd029672c41116bdebdc8edf9007e",
                                                              new Date(1557959072115L), 116,
                                                              "e5bbd029672c41116bdebdc8edf9007e",
                                                              "12872291-d7bc-4c3c-a93b-a43e0535b5b8", -80,
                                                              "5f8459d8-b0c3-4a8f-ac75-d0adc587eae6",
                                                              "e5bbd029672c41116bdebdc8edf9007e",
                                                              SubtenantApiKeyStatus.getDefault(),
                                                              new Date(1557959070520L));
        assertTrue(subtenantapikey.isValid());
        SubtenantApiKey subtenantapikeyInvalid = new SubtenantApiKey(null, new Date(1557959073478L), -67,
                                                                     "î‘¿33\u001a3\u00183Z\\\\E!ì¤?3ëŠ?â‰’æ“•\u001aî§›3@ìš¬ç£?3.$$W3à¡›3\u0015M+ê?‘\u0016\\\\3==W,\u0014ä²ªîˆ£A\u0019ì«µ\u00073ç™‡3ç›†î·³Iæ™ƒ\u0012.\u0006Pä²ŠB/Qá¶‡",
                                                                     "cf4b2383-fdb3-4b91-b135-8148378c96fa", 83, null,
                                                                     "î‘¿33\u001a3\u00183Z\\\\E!ì¤?3ëŠ?â‰’æ“•\u001aî§›3@ìš¬ç£?3.$$W3à¡›3\u0015M+ê?‘\u0016\\\\3==W,\u0014ä²ªîˆ£A\u0019ì«µ\u00073ç™‡3ç›†î·³Iæ™ƒ\u0012.\u0006Pä²ŠB/Qá¶‡",
                                                                     SubtenantApiKeyStatus.getDefault(),
                                                                     new Date(1557959071096L));
        assertFalse(subtenantapikeyInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantApiKey subtenantapikey1 = new SubtenantApiKey("e5bbd029672c41116bdebdc8edf9007e",
                                                                   new Date(1557959067331L), -85,
                                                                   "e5bbd029672c41116bdebdc8edf9007e",
                                                                   "3507287b-8e5c-4f98-9f05-9d8bd90f482c", -40,
                                                                   "bbecf483-aedd-4173-a3ee-ed6c48e82407",
                                                                   "e5bbd029672c41116bdebdc8edf9007e",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1557959065429L));
            SubtenantApiKey subtenantapikey2 = new SubtenantApiKey("e5bbd029672c41116bdebdc8edf9007e",
                                                                   new Date(1557959067331L), -85,
                                                                   "e5bbd029672c41116bdebdc8edf9007e",
                                                                   "3507287b-8e5c-4f98-9f05-9d8bd90f482c", -40,
                                                                   "bbecf483-aedd-4173-a3ee-ed6c48e82407",
                                                                   "e5bbd029672c41116bdebdc8edf9007e",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1557959065429L));
            SubtenantApiKey subtenantapikey3 = new SubtenantApiKey("e5bbd029672c41116bdebdc8edf9007e",
                                                                   new Date(1557959072371L), -74,
                                                                   "e5bbd029672c41116bdebdc8edf9007e",
                                                                   "495a8f31-442e-49b6-80af-1b26c5078153", -34,
                                                                   "c3714061-98f6-4113-9e80-13fdb4200805",
                                                                   "e5bbd029672c41116bdebdc8edf9007e",
                                                                   SubtenantApiKeyStatus.getDefault(),
                                                                   new Date(1557959073607L));
            assertNotNull(subtenantapikey1);
            assertNotNull(subtenantapikey2);
            assertNotNull(subtenantapikey3);
            assertNotSame(subtenantapikey2, subtenantapikey1);
            assertNotSame(subtenantapikey3, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey2, subtenantapikey1);
            assertEquals(subtenantapikey1, subtenantapikey2);
            assertEquals(subtenantapikey1, subtenantapikey1);
            assertFalse(subtenantapikey1.equals(null));
            assertNotEquals(subtenantapikey3, subtenantapikey1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
