// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEnrollmentDenial.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEnrollmentDenial {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("e5bbd029672c41116bdebdc8edf9007e",
                                                                                        new Date(1557959071932L),
                                                                                        "244e7cb7-8a1b-4e03-9153-8446636b2372",
                                                                                        "e5bbd029672c41116bdebdc8edf9007e",
                                                                                        "e5bbd029672c41116bdebdc8edf9007e");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = deviceenrollmentdenial1.clone();
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("e5bbd029672c41116bdebdc8edf9007e",
                                                                                        new Date(1557959070207L),
                                                                                        "2a75a4a1-906e-44b4-9d7f-d148b1e5f234",
                                                                                        "e5bbd029672c41116bdebdc8edf9007e",
                                                                                        "e5bbd029672c41116bdebdc8edf9007e");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = new DeviceEnrollmentDenial("e5bbd029672c41116bdebdc8edf9007e",
                                                                                        new Date(1557959070207L),
                                                                                        "2a75a4a1-906e-44b4-9d7f-d148b1e5f234",
                                                                                        "e5bbd029672c41116bdebdc8edf9007e",
                                                                                        "e5bbd029672c41116bdebdc8edf9007e");
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2.hashCode(), deviceenrollmentdenial1.hashCode());
            int hashCode = deviceenrollmentdenial1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceenrollmentdenial1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEnrollmentDenial deviceenrollmentdenial = new DeviceEnrollmentDenial("e5bbd029672c41116bdebdc8edf9007e",
                                                                                   new Date(1557959064785L),
                                                                                   "23745f60-9908-4eb9-9740-9bed17fa9d67",
                                                                                   "e5bbd029672c41116bdebdc8edf9007e",
                                                                                   "e5bbd029672c41116bdebdc8edf9007e");
        assertTrue(deviceenrollmentdenial.isValid());
        DeviceEnrollmentDenial deviceenrollmentdenialInvalid = new DeviceEnrollmentDenial("î‘¿33\u001a3\u00183Z\\\\E!ì¤?3ëŠ?â‰’æ“•\u001aî§›3@ìš¬ç£?3.$$W3à¡›3\u0015M+ê?‘\u0016\\\\3==W,\u0014ä²ªîˆ£A\u0019ì«µ\u00073ç™‡3ç›†î·³Iæ™ƒ\u0012.\u0006Pä²ŠB/Qá¶‡",
                                                                                          new Date(1557959073264L),
                                                                                          "fce17125-e273-4a56-93e7-8b2212a8e2e3",
                                                                                          "î‘¿33\u001a3\u00183Z\\\\E!ì¤?3ëŠ?â‰’æ“•\u001aî§›3@ìš¬ç£?3.$$W3à¡›3\u0015M+ê?‘\u0016\\\\3==W,\u0014ä²ªîˆ£A\u0019ì«µ\u00073ç™‡3ç›†î·³Iæ™ƒ\u0012.\u0006Pä²ŠB/Qá¶‡",
                                                                                          "î‘¿33\u001a3\u00183Z\\\\E!ì¤?3ëŠ?â‰’æ“•\u001aî§›3@ìš¬ç£?3.$$W3à¡›3\u0015M+ê?‘\u0016\\\\3==W,\u0014ä²ªîˆ£A\u0019ì«µ\u00073ç™‡3ç›†î·³Iæ™ƒ\u0012.\u0006Pä²ŠB/Qá¶‡");
        assertFalse(deviceenrollmentdenialInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEnrollmentDenial deviceenrollmentdenial1 = new DeviceEnrollmentDenial("e5bbd029672c41116bdebdc8edf9007e",
                                                                                        new Date(1557959071950L),
                                                                                        "8b26b9db-a3c3-4cd8-a244-1139b89d7ce8",
                                                                                        "e5bbd029672c41116bdebdc8edf9007e",
                                                                                        "e5bbd029672c41116bdebdc8edf9007e");
            DeviceEnrollmentDenial deviceenrollmentdenial2 = new DeviceEnrollmentDenial("e5bbd029672c41116bdebdc8edf9007e",
                                                                                        new Date(1557959071950L),
                                                                                        "8b26b9db-a3c3-4cd8-a244-1139b89d7ce8",
                                                                                        "e5bbd029672c41116bdebdc8edf9007e",
                                                                                        "e5bbd029672c41116bdebdc8edf9007e");
            DeviceEnrollmentDenial deviceenrollmentdenial3 = new DeviceEnrollmentDenial("e5bbd029672c41116bdebdc8edf9007e",
                                                                                        new Date(1557959067372L),
                                                                                        "84380e9d-6cff-494d-842e-30bbc2134ce1",
                                                                                        "e5bbd029672c41116bdebdc8edf9007e",
                                                                                        "e5bbd029672c41116bdebdc8edf9007e");
            assertNotNull(deviceenrollmentdenial1);
            assertNotNull(deviceenrollmentdenial2);
            assertNotNull(deviceenrollmentdenial3);
            assertNotSame(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertNotSame(deviceenrollmentdenial3, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial2, deviceenrollmentdenial1);
            assertEquals(deviceenrollmentdenial1, deviceenrollmentdenial2);
            assertEquals(deviceenrollmentdenial1, deviceenrollmentdenial1);
            assertFalse(deviceenrollmentdenial1.equals(null));
            assertNotEquals(deviceenrollmentdenial3, deviceenrollmentdenial1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
