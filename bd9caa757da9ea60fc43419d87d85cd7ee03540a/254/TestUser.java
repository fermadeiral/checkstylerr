// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model User.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestUser {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            User user1 = new User("e5bbd029672c41116bdebdc8edf9007e", null, "a5fd70e4-d5ce-4612-9b90-168fd92e6203",
                                  new Date(1557959072922L), 101, null, "e1d12.8cb66@647ff.me", true,
                                  "ebb1124b-458d-4243-90d3-1842f318b556", "e5bbd029672c41116bdebdc8edf9007e", false,
                                  true, false, -79, null, null, "10473439-6297-4b94-9bb9-d95b801d2e8c", -86,
                                  "5386427f-e2b5-4993-8f2a-db48e8f7b537", UserStatus.getDefault(), null,
                                  new Date(1557959067338L), "v_Vj");
            User user2 = user1.clone();
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotSame(user2, user1);
            assertEquals(user2, user1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            User user1 = new User("e5bbd029672c41116bdebdc8edf9007e", null, "4e5a6048-2332-4713-8939-e26535e81b9f",
                                  new Date(1557959071975L), 87, null, "f36e3.5e45b@c7421.me", true,
                                  "a0dba404-92f8-4b4e-bf49-373dfaf4f319", "e5bbd029672c41116bdebdc8edf9007e", false,
                                  false, false, -33, null, null, "8de613ab-ebb8-48f0-b7fd-9e4038baf58c", -52,
                                  "ab9c7f24-5aa7-4844-8305-772a5f4590e9", UserStatus.getDefault(), null,
                                  new Date(1557959070693L), "v_Vj");
            User user2 = new User("e5bbd029672c41116bdebdc8edf9007e", null, "4e5a6048-2332-4713-8939-e26535e81b9f",
                                  new Date(1557959071975L), 87, null, "f36e3.5e45b@c7421.me", true,
                                  "a0dba404-92f8-4b4e-bf49-373dfaf4f319", "e5bbd029672c41116bdebdc8edf9007e", false,
                                  false, false, -33, null, null, "8de613ab-ebb8-48f0-b7fd-9e4038baf58c", -52,
                                  "ab9c7f24-5aa7-4844-8305-772a5f4590e9", UserStatus.getDefault(), null,
                                  new Date(1557959070693L), "v_Vj");
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotSame(user2, user1);
            assertEquals(user2, user1);
            assertEquals(user2.hashCode(), user1.hashCode());
            int hashCode = user1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, user1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        User user = new User("e5bbd029672c41116bdebdc8edf9007e", null, "78565e2f-08a1-4413-aa15-22f0e90c22b6",
                             new Date(1557959072753L), 96, null, "b985e.e7e0c@3476c.me", true,
                             "7a1937d1-9d38-4245-9072-c6f69b1a8b48", "e5bbd029672c41116bdebdc8edf9007e", true, false,
                             false, -126, null, null, "16bba446-3eb3-45fd-99b5-4d29df723a74", 97,
                             "8834671b-fc7d-41ff-a5a9-8df75976e9c6", UserStatus.getDefault(), null,
                             new Date(1557959070459L), "v_Vj");
        assertTrue(user.isValid());
        User userInvalid = new User("î‘¿33\u001a3\u00183Z\\\\E!ì¤?3ëŠ?â‰’æ“•\u001aî§›3@ìš¬ç£?3.$$W3à¡›3\u0015M+ê?‘\u0016\\\\3==W,\u0014ä²ªîˆ£A\u0019ì«µ\u00073ç™‡3ç›†î·³Iæ™ƒ\u0012.\u0006Pä²ŠB/Qá¶‡",
                                    null, "20348b51-c38a-41d0-8a8d-7220388f9596", new Date(1557959067816L), -108, null,
                                    null, false,
                                    "90cc4279-069a-4299-992a-251c91d7ea1f7490c09a-6374-4abd-be7d-65d16dc1efa9d8dff181-e633-4110-be23-621bb5bab76d",
                                    "î‘¿33\u001a3\u00183Z\\\\E!ì¤?3ëŠ?â‰’æ“•\u001aî§›3@ìš¬ç£?3.$$W3à¡›3\u0015M+ê?‘\u0016\\\\3==W,\u0014ä²ªîˆ£A\u0019ì«µ\u00073ç™‡3ç›†î·³Iæ™ƒ\u0012.\u0006Pä²ŠB/Qá¶‡",
                                    false, true, false, 60, null, null, "16c5e5ed-fc79-47e0-ab94-844924f9872d", -79,
                                    "0eedcd7b-7467-48ce-bc6a-6d214601a938cc525f01-b420-448d-b854-3817b7572c79fc4ebfd2-5160-4dd0-9262-11a45ed0aacd",
                                    UserStatus.getDefault(), null, new Date(1557959069805L),
                                    "l]ï±‘Zb\fâ±?\\\\ì½›\u0015iu[noå­›gp`WY\u001c`r\u001aîº“d]rr[^ã—?t0ib^#beYcX fçŽ¾rå°„iXh^\\\\q5f\u0002]êª¦p0éº¹î?‚");
        assertFalse(userInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            User user1 = new User("e5bbd029672c41116bdebdc8edf9007e", null, "ea460fb9-2dc0-49eb-ba5a-7419954d291d",
                                  new Date(1557959065883L), -36, null, "435f2.7be05@64e75.fr", false,
                                  "2d10e619-11d0-4b80-87b8-3e9d2ca982e8", "e5bbd029672c41116bdebdc8edf9007e", false,
                                  true, false, -3, null, null, "933d9aed-37bd-400d-9848-5c7bef612aa8", 41,
                                  "0f87e663-d631-468f-9296-ab50d98610d9", UserStatus.getDefault(), null,
                                  new Date(1557959071944L), "v_Vj");
            User user2 = new User("e5bbd029672c41116bdebdc8edf9007e", null, "ea460fb9-2dc0-49eb-ba5a-7419954d291d",
                                  new Date(1557959065883L), -36, null, "435f2.7be05@64e75.fr", false,
                                  "2d10e619-11d0-4b80-87b8-3e9d2ca982e8", "e5bbd029672c41116bdebdc8edf9007e", false,
                                  true, false, -3, null, null, "933d9aed-37bd-400d-9848-5c7bef612aa8", 41,
                                  "0f87e663-d631-468f-9296-ab50d98610d9", UserStatus.getDefault(), null,
                                  new Date(1557959071944L), "v_Vj");
            User user3 = new User("e5bbd029672c41116bdebdc8edf9007e", null, "4b34dde8-8564-44fb-b5c8-5384f266b548",
                                  new Date(1557959070806L), -10, null, "d0d2f.7567b@53106.fr", false,
                                  "349f6c2b-96e8-47a8-b3b7-807281562790", "e5bbd029672c41116bdebdc8edf9007e", false,
                                  true, false, -30, null, null, "fea96e35-613a-49b6-abba-52521d6761b3", 44,
                                  "88b067b3-d36b-4082-993e-9d2feb2b49b6", UserStatus.getDefault(), null,
                                  new Date(1557959065527L), "v_Vj");
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotNull(user3);
            assertNotSame(user2, user1);
            assertNotSame(user3, user1);
            assertEquals(user2, user1);
            assertEquals(user2, user1);
            assertEquals(user1, user2);
            assertEquals(user1, user1);
            assertFalse(user1.equals(null));
            assertNotEquals(user3, user1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
