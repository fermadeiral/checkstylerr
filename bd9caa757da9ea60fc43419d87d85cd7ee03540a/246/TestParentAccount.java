// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model ParentAccount.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestParentAccount {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("c4e9f.e6afc@01d28.me",
                                                             "d11067b6-b18a-4416-a54d-e78469a260ae",
                                                             "e5bbd029672c41116bdebdc8edf9007e");
            ParentAccount parentaccount2 = parentaccount1.clone();
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotSame(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("33f26.b8a3e@0378d.fr",
                                                             "a2fb7ea3-a790-4db9-9210-06431b8185b7",
                                                             "e5bbd029672c41116bdebdc8edf9007e");
            ParentAccount parentaccount2 = new ParentAccount("33f26.b8a3e@0378d.fr",
                                                             "a2fb7ea3-a790-4db9-9210-06431b8185b7",
                                                             "e5bbd029672c41116bdebdc8edf9007e");
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotSame(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount2.hashCode(), parentaccount1.hashCode());
            int hashCode = parentaccount1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, parentaccount1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ParentAccount parentaccount = new ParentAccount("2760e.795fd@ffcb8.fr", "d538cde1-6593-4a37-947e-aa3594924760",
                                                        "e5bbd029672c41116bdebdc8edf9007e");
        assertTrue(parentaccount.isValid());
        ParentAccount parentaccountInvalid = new ParentAccount("åŽ?èš¹å¡¡\u0019æ™™ë‹?æŒ«ã™ŠÇ¬á?›>æŒ‡å¡‡áž«æ€¸å ¶å?›âˆˆ:è«„ê•“æ†¤è ½á©¡çˆ?æ€“ì¹¸á¼’ç…²>áž»\u001eá?ª\u0012ç»Šç¹’.å£¹ç¸?/\u0019å›‰>>â?šîŠ’á³­)ê®©æ‘¶âŸ™æ?›âœ—æ”?â•¿åŒ€â­µèŽ£á²²â™¹î®°åŒ·á?›æ?¡",
                                                               "1c3ba48e-6f79-448c-9a58-8f3d61a76f49812345db-3821-4ecb-b7b4-7e2851db4753b0603fef-c077-4209-a39e-5a84069d28ad",
                                                               "î‘¿33\u001a3\u00183Z\\\\E!ì¤?3ëŠ?â‰’æ“•\u001aî§›3@ìš¬ç£?3.$$W3à¡›3\u0015M+ê?‘\u0016\\\\3==W,\u0014ä²ªîˆ£A\u0019ì«µ\u00073ç™‡3ç›†î·³Iæ™ƒ\u0012.\u0006Pä²ŠB/Qá¶‡");
        assertFalse(parentaccountInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("b819f.98ac9@fccec.me",
                                                             "bf60c6ba-bea1-4331-8411-a6c822538872",
                                                             "e5bbd029672c41116bdebdc8edf9007e");
            ParentAccount parentaccount2 = new ParentAccount("b819f.98ac9@fccec.me",
                                                             "bf60c6ba-bea1-4331-8411-a6c822538872",
                                                             "e5bbd029672c41116bdebdc8edf9007e");
            ParentAccount parentaccount3 = new ParentAccount("bcdd9.ddbc2@59139.me",
                                                             "e022edf6-1f91-4fbe-80d2-503a1443f844",
                                                             "e5bbd029672c41116bdebdc8edf9007e");
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotNull(parentaccount3);
            assertNotSame(parentaccount2, parentaccount1);
            assertNotSame(parentaccount3, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount1, parentaccount2);
            assertEquals(parentaccount1, parentaccount1);
            assertFalse(parentaccount1.equals(null));
            assertNotEquals(parentaccount3, parentaccount1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
