// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model UserInvitation.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestUserInvitation {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("e5bbd029672c41116bdebdc8edf9007e",
                                                                new Date(1557959065441L), "7a50a.52d98@b8ed4.fr",
                                                                new Date(1557959071908L),
                                                                "e5bbd029672c41116bdebdc8edf9007e", null,
                                                                new Date(1557959069862L),
                                                                "e5bbd029672c41116bdebdc8edf9007e");
            UserInvitation userinvitation2 = userinvitation1.clone();
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotSame(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("e5bbd029672c41116bdebdc8edf9007e",
                                                                new Date(1557959073192L), "fd15e.f2860@05601.me",
                                                                new Date(1557959066728L),
                                                                "e5bbd029672c41116bdebdc8edf9007e", null,
                                                                new Date(1557959066652L),
                                                                "e5bbd029672c41116bdebdc8edf9007e");
            UserInvitation userinvitation2 = new UserInvitation("e5bbd029672c41116bdebdc8edf9007e",
                                                                new Date(1557959073192L), "fd15e.f2860@05601.me",
                                                                new Date(1557959066728L),
                                                                "e5bbd029672c41116bdebdc8edf9007e", null,
                                                                new Date(1557959066652L),
                                                                "e5bbd029672c41116bdebdc8edf9007e");
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotSame(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation2.hashCode(), userinvitation1.hashCode());
            int hashCode = userinvitation1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, userinvitation1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        UserInvitation userinvitation = new UserInvitation("e5bbd029672c41116bdebdc8edf9007e", new Date(1557959071193L),
                                                           "008b1.aa66a@8fa32.me", new Date(1557959073343L),
                                                           "e5bbd029672c41116bdebdc8edf9007e", null,
                                                           new Date(1557959072655L),
                                                           "e5bbd029672c41116bdebdc8edf9007e");
        assertTrue(userinvitation.isValid());
        UserInvitation userinvitationInvalid = new UserInvitation("î‘¿33\u001a3\u00183Z\\\\E!ì¤?3ëŠ?â‰’æ“•\u001aî§›3@ìš¬ç£?3.$$W3à¡›3\u0015M+ê?‘\u0016\\\\3==W,\u0014ä²ªîˆ£A\u0019ì«µ\u00073ç™‡3ç›†î·³Iæ™ƒ\u0012.\u0006Pä²ŠB/Qá¶‡",
                                                                  new Date(1557959066530L), null,
                                                                  new Date(1557959068638L),
                                                                  "î‘¿33\u001a3\u00183Z\\\\E!ì¤?3ëŠ?â‰’æ“•\u001aî§›3@ìš¬ç£?3.$$W3à¡›3\u0015M+ê?‘\u0016\\\\3==W,\u0014ä²ªîˆ£A\u0019ì«µ\u00073ç™‡3ç›†î·³Iæ™ƒ\u0012.\u0006Pä²ŠB/Qá¶‡",
                                                                  null, new Date(1557959070159L),
                                                                  "î‘¿33\u001a3\u00183Z\\\\E!ì¤?3ëŠ?â‰’æ“•\u001aî§›3@ìš¬ç£?3.$$W3à¡›3\u0015M+ê?‘\u0016\\\\3==W,\u0014ä²ªîˆ£A\u0019ì«µ\u00073ç™‡3ç›†î·³Iæ™ƒ\u0012.\u0006Pä²ŠB/Qá¶‡");
        assertFalse(userinvitationInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("e5bbd029672c41116bdebdc8edf9007e",
                                                                new Date(1557959066647L), "a79ed.06659@93093.fr",
                                                                new Date(1557959072120L),
                                                                "e5bbd029672c41116bdebdc8edf9007e", null,
                                                                new Date(1557959069098L),
                                                                "e5bbd029672c41116bdebdc8edf9007e");
            UserInvitation userinvitation2 = new UserInvitation("e5bbd029672c41116bdebdc8edf9007e",
                                                                new Date(1557959066647L), "a79ed.06659@93093.fr",
                                                                new Date(1557959072120L),
                                                                "e5bbd029672c41116bdebdc8edf9007e", null,
                                                                new Date(1557959069098L),
                                                                "e5bbd029672c41116bdebdc8edf9007e");
            UserInvitation userinvitation3 = new UserInvitation("e5bbd029672c41116bdebdc8edf9007e",
                                                                new Date(1557959072072L), "3afab.6a369@b52d5.me",
                                                                new Date(1557959070031L),
                                                                "e5bbd029672c41116bdebdc8edf9007e", null,
                                                                new Date(1557959068435L),
                                                                "e5bbd029672c41116bdebdc8edf9007e");
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotNull(userinvitation3);
            assertNotSame(userinvitation2, userinvitation1);
            assertNotSame(userinvitation3, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation1, userinvitation2);
            assertEquals(userinvitation1, userinvitation1);
            assertFalse(userinvitation1.equals(null));
            assertNotEquals(userinvitation3, userinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
