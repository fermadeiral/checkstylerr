// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.deviceupdate.model;

import static org.junit.Assert.*;

import com.arm.mbed.cloud.sdk.common.Order;
import com.arm.mbed.cloud.sdk.common.listing.ListOptionsEncoder;
import com.arm.mbed.cloud.sdk.common.listing.filtering.FilterOperator;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import org.junit.Test;

/**
 * Unit tests for Model FirmwareImageListOptions.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestFirmwareImageListOptions {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            FirmwareImageListOptions firmwareimagelistoptions1 = new FirmwareImageListOptions(Integer.valueOf(-104),
                                                                                              Long.valueOf(-69),
                                                                                              Order.getDefault(),
                                                                                              "2eb840bc-aaf0-4bf6-ae22-65d599b7e640",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions2 = firmwareimagelistoptions1.clone();
            assertNotNull(firmwareimagelistoptions1);
            assertNotNull(firmwareimagelistoptions2);
            assertNotSame(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the filters method.
     */
    @SuppressWarnings({ "boxing", "resource" })
    @Test
    public void testFilters() {
        try {
            FirmwareImageListOptions option = new FirmwareImageListOptions().inUpdatedAts(Arrays.asList(new Date(1557959071434L)))
                                                                            .notInUpdatedAts(Arrays.asList(new Date(1557959069062L),
                                                                                                           new Date(1557959072045L),
                                                                                                           new Date(1557959066830L),
                                                                                                           new Date(1557959065728L),
                                                                                                           new Date(1557959069316L),
                                                                                                           new Date(1557959072014L),
                                                                                                           new Date(1557959071940L)))
                                                                            .lessThanUpdatedAt(new Date(1557959074024L))
                                                                            .greaterThanUpdatedAt(new Date(1557959074292L))
                                                                            .equalToName("6c81a0fb-3f19-4d54-9125-7c9fe372d21a")
                                                                            .notEqualToName("53426ea8-b104-48a0-b57c-1fbdf42aaa10")
                                                                            .inNames(Arrays.asList("3550b6fc-7699-426b-abdf-a616455dd854",
                                                                                                   "d5d3ef1f-70b1-48b3-a0d9-e8a34568f8b3",
                                                                                                   "32654eb4-9efd-4472-9bc0-2ac7ecbb0a5f",
                                                                                                   "a8876b63-d4df-4c9c-ade8-563c972ccdee",
                                                                                                   "e17f7b49-f763-49d1-b65c-36e7cf6ccc58",
                                                                                                   "042c6bf4-2c86-47e8-afbe-ab06cb57830d",
                                                                                                   "54b87978-c42a-43a0-90a8-4faba6ea50c9",
                                                                                                   "2e36aac0-2716-412a-8cec-a48ca319e3e1"))
                                                                            .notInNames(Arrays.asList("c531e0c3-a060-4161-972b-1908dd320a4d",
                                                                                                      "049bac4a-42e9-4b0a-b54f-0b1e0915278d",
                                                                                                      "c494bf18-e55d-4ed5-bf1d-88ae3f3659fa",
                                                                                                      "680f3b34-b4a8-4392-8148-8cec3d8cff82",
                                                                                                      "add25bc4-f159-45fc-bad7-f14fb12af6b0"))
                                                                            .equalToDescription("2007819e-b6ba-4075-9bb0-d8e7c35a9afe")
                                                                            .notEqualToDescription("ecba377d-1d6a-4d4f-b60e-34a08c97db75")
                                                                            .inDescriptions(Arrays.asList("e6bc9e50-be0d-484a-b12c-088be3d6d8a7",
                                                                                                          "3330e3e8-2b9c-4684-8854-8c45dfff054e",
                                                                                                          "681d4b85-beb7-4469-a31f-7cbfe1a48321",
                                                                                                          "0d9e124a-8861-474f-adf6-bb3d09f67f72",
                                                                                                          "56b058aa-2915-4c84-8a81-414dddcfe49d",
                                                                                                          "3b942df5-fb97-4087-8854-98420cbd3b64",
                                                                                                          "f6961bae-20b6-48c5-823f-8399299cb378"))
                                                                            .notInDescriptions(Arrays.asList("d2ae6e44-623c-48ef-956b-803016baebb6",
                                                                                                             "6692a9f0-d8c5-40a4-8c9d-06e8ad89ffdb",
                                                                                                             "614d2a0a-3a40-4207-abde-0500773019f0",
                                                                                                             "42cdd65a-7e2d-4e7f-8f68-51a734cb7fb6",
                                                                                                             "05bfe204-4aac-4fd5-9043-7f28625b4a84",
                                                                                                             "327c315f-8532-439c-9012-189d5b62cf11"))
                                                                            .inCreatedAts(Arrays.asList(new Date(1557959072487L),
                                                                                                        new Date(1557959066416L),
                                                                                                        new Date(1557959065380L)))
                                                                            .notInCreatedAts(Arrays.asList(new Date(1557959065923L),
                                                                                                           new Date(1557959073107L),
                                                                                                           new Date(1557959070750L),
                                                                                                           new Date(1557959069381L),
                                                                                                           new Date(1557959073865L),
                                                                                                           new Date(1557959065763L)))
                                                                            .lessThanCreatedAt(new Date(1557959074008L))
                                                                            .greaterThanCreatedAt(new Date(1557959070304L))
                                                                            .equalToDatafileUrl("505b005b-656f-4a9f-aab3-14f1c7904784")
                                                                            .notEqualToDatafileUrl("06b68a6a-9336-42ed-bd17-4984695cb766")
                                                                            .inDatafileUrls(Arrays.asList("adafc2d3-2c21-4776-9e05-d61032834b3a",
                                                                                                          "8f989fae-2a0a-475b-a465-75fe310f8c1d",
                                                                                                          "9c89a3b8-d58f-46dd-a017-e3a9a5608701",
                                                                                                          "51cf9160-0339-42c5-a5cc-64caef7af67b",
                                                                                                          "7153eeda-f7c0-4c0e-a7fc-7354682f9f55"))
                                                                            .notInDatafileUrls(Arrays.asList("25cfab67-dc25-4be7-bf4c-45c2aaebafbb",
                                                                                                             "0e9bfc24-fbf9-444d-8aee-5b63c874aa92",
                                                                                                             "c20d0434-ba59-4f00-8196-f85c1401aac9",
                                                                                                             "dc3a2b2e-538e-4256-8f18-531c775f7edc",
                                                                                                             "b50929bd-e7a5-4a2b-9d0b-d1bcdba0e7c6",
                                                                                                             "127d557e-d740-4676-b668-5e82916784bb",
                                                                                                             "0f4ade54-9cba-4234-bfde-6982d620bf75",
                                                                                                             "fea91775-3edc-4e3b-824b-83bfee251c2f"))
                                                                            .equalToDatafileSize(Long.valueOf(-17))
                                                                            .notEqualToDatafileSize(Long.valueOf(-59))
                                                                            .inDatafileSizes(Arrays.asList(Long.valueOf(-27),
                                                                                                           Long.valueOf(39),
                                                                                                           Long.valueOf(-95),
                                                                                                           Long.valueOf(24),
                                                                                                           Long.valueOf(-9),
                                                                                                           Long.valueOf(57),
                                                                                                           Long.valueOf(-113),
                                                                                                           Long.valueOf(-25),
                                                                                                           Long.valueOf(32)))
                                                                            .notInDatafileSizes(Arrays.asList(Long.valueOf(-21),
                                                                                                              Long.valueOf(95),
                                                                                                              Long.valueOf(-35),
                                                                                                              Long.valueOf(102),
                                                                                                              Long.valueOf(27),
                                                                                                              Long.valueOf(-27),
                                                                                                              Long.valueOf(-34),
                                                                                                              Long.valueOf(-19),
                                                                                                              Long.valueOf(-44)))
                                                                            .equalToDatafileChecksum("aa2fa734-9875-466e-b899-33e080618629")
                                                                            .notEqualToDatafileChecksum("c2d823ba-e31f-489e-a9a9-d05911e2b1fe")
                                                                            .inDatafileChecksums(Arrays.asList("4448a84f-4124-496b-8dfc-304fd8eddbe8",
                                                                                                               "0a82cb59-6916-4728-90d1-e9a6d2385664",
                                                                                                               "8deafbe8-92f9-4852-8f34-b1b07cab528a"))
                                                                            .notInDatafileChecksums(Arrays.asList("28e046b8-473d-4fbb-b50f-9689cb87d1f1",
                                                                                                                  "c0510bdc-afd0-404f-b833-ce10e13f7b3d",
                                                                                                                  "b99499b1-f762-49d0-a652-ad38aa740e73",
                                                                                                                  "80c9a8c2-7d8b-4c3d-ae5a-d5bc364545ab",
                                                                                                                  "bf0f36ba-daa1-4215-b8df-9a9c28d5c069",
                                                                                                                  "db0899ab-abf0-4fdd-a41d-49d2b1ff3549",
                                                                                                                  "2668ae70-3355-4673-bc8d-7f7109396b4e",
                                                                                                                  "ab7ba75a-7354-4468-b56f-a945d7006a10"))
                                                                            .equalToId("c00a6d3c-ef1c-4b37-b66e-ced6fdf72413")
                                                                            .notEqualToId("6f22ab49-7b09-4586-9cdb-f74ac29d952d")
                                                                            .inIds(Arrays.asList("491c1acc-33fc-4598-b3d5-e3e818227d04",
                                                                                                 "9d828f75-28b4-40f3-b15e-4a9b54304b66",
                                                                                                 "57a66082-8fe1-4a99-b7b6-c45778915007",
                                                                                                 "586003bd-371b-4688-b0e9-aa92bd003711",
                                                                                                 "08602132-6dc3-4a7b-b435-7fde8a746dcd",
                                                                                                 "906af254-2b5f-47f2-9296-d577d38b9e07"))
                                                                            .notInIds(Arrays.asList("578153ff-59d7-4dc5-9e06-c45ae37f1c97",
                                                                                                    "8c74583f-686e-44c6-b0f6-409b2f97e26d",
                                                                                                    "2afe2563-cd7b-4cc3-85d5-073c46cc520b",
                                                                                                    "25fdd4d3-f4f0-425a-9d02-69eca66f2265",
                                                                                                    "a7d2e48f-c12f-4f56-a888-bf626b87dc69"));
            assertTrue(option.hasFilters());
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1557959071434L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(Arrays.asList(new Date(1557959069062L), new Date(1557959072045L), new Date(1557959066830L),
                                       new Date(1557959065728L), new Date(1557959069316L), new Date(1557959072014L),
                                       new Date(1557959071940L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT, FilterOperator.LESS_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1557959074024L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getUpdatedAtFilters());
            assertEquals(new Date(1557959074292L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_UPDATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("6c81a0fb-3f19-4d54-9125-7c9fe372d21a",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getNameFilters());
            assertEquals("53426ea8-b104-48a0-b57c-1fbdf42aaa10",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("3550b6fc-7699-426b-abdf-a616455dd854", "d5d3ef1f-70b1-48b3-a0d9-e8a34568f8b3",
                                       "32654eb4-9efd-4472-9bc0-2ac7ecbb0a5f", "a8876b63-d4df-4c9c-ade8-563c972ccdee",
                                       "e17f7b49-f763-49d1-b65c-36e7cf6ccc58", "042c6bf4-2c86-47e8-afbe-ab06cb57830d",
                                       "54b87978-c42a-43a0-90a8-4faba6ea50c9", "2e36aac0-2716-412a-8cec-a48ca319e3e1"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_NAME));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME, FilterOperator.NOT_IN));
            assertNotNull(option.getNameFilters());
            assertEquals(Arrays.asList("c531e0c3-a060-4161-972b-1908dd320a4d", "049bac4a-42e9-4b0a-b54f-0b1e0915278d",
                                       "c494bf18-e55d-4ed5-bf1d-88ae3f3659fa", "680f3b34-b4a8-4392-8148-8cec3d8cff82",
                                       "add25bc4-f159-45fc-bad7-f14fb12af6b0"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_NAME,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("2007819e-b6ba-4075-9bb0-d8e7c35a9afe",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDescriptionFilters());
            assertEquals("ecba377d-1d6a-4d4f-b60e-34a08c97db75",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("e6bc9e50-be0d-484a-b12c-088be3d6d8a7", "3330e3e8-2b9c-4684-8854-8c45dfff054e",
                                       "681d4b85-beb7-4469-a31f-7cbfe1a48321", "0d9e124a-8861-474f-adf6-bb3d09f67f72",
                                       "56b058aa-2915-4c84-8a81-414dddcfe49d", "3b942df5-fb97-4087-8854-98420cbd3b64",
                                       "f6961bae-20b6-48c5-823f-8399299cb378"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION, FilterOperator.NOT_IN));
            assertNotNull(option.getDescriptionFilters());
            assertEquals(Arrays.asList("d2ae6e44-623c-48ef-956b-803016baebb6", "6692a9f0-d8c5-40a4-8c9d-06e8ad89ffdb",
                                       "614d2a0a-3a40-4207-abde-0500773019f0", "42cdd65a-7e2d-4e7f-8f68-51a734cb7fb6",
                                       "05bfe204-4aac-4fd5-9043-7f28625b4a84", "327c315f-8532-439c-9012-189d5b62cf11"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DESCRIPTION,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1557959072487L), new Date(1557959066416L), new Date(1557959065380L)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.NOT_IN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(Arrays.asList(new Date(1557959065923L), new Date(1557959073107L), new Date(1557959070750L),
                                       new Date(1557959069381L), new Date(1557959073865L), new Date(1557959065763L)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT, FilterOperator.LESS_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1557959074008L),
                         ListOptionsEncoder.encodeSingleLessThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                       Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                        FilterOperator.GREATER_THAN));
            assertNotNull(option.getCreatedAtFilters());
            assertEquals(new Date(1557959070304L),
                         ListOptionsEncoder.encodeSingleGreaterThanFilter(FirmwareImageListOptions.TAG_FILTER_BY_CREATED_AT,
                                                                          Date.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("505b005b-656f-4a9f-aab3-14f1c7904784",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals("06b68a6a-9336-42ed-bd17-4984695cb766",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("adafc2d3-2c21-4776-9e05-d61032834b3a", "8f989fae-2a0a-475b-a465-75fe310f8c1d",
                                       "9c89a3b8-d58f-46dd-a017-e3a9a5608701", "51cf9160-0339-42c5-a5cc-64caef7af67b",
                                       "7153eeda-f7c0-4c0e-a7fc-7354682f9f55"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL, FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileUrlFilters());
            assertEquals(Arrays.asList("25cfab67-dc25-4be7-bf4c-45c2aaebafbb", "0e9bfc24-fbf9-444d-8aee-5b63c874aa92",
                                       "c20d0434-ba59-4f00-8196-f85c1401aac9", "dc3a2b2e-538e-4256-8f18-531c775f7edc",
                                       "b50929bd-e7a5-4a2b-9d0b-d1bcdba0e7c6", "127d557e-d740-4676-b668-5e82916784bb",
                                       "0f4ade54-9cba-4234-bfde-6982d620bf75", "fea91775-3edc-4e3b-824b-83bfee251c2f"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_URL,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(-17),
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    Long.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Long.valueOf(-59),
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                       Long.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(-27), Long.valueOf(39), Long.valueOf(-95), Long.valueOf(24),
                                       Long.valueOf(-9), Long.valueOf(57), Long.valueOf(-113), Long.valueOf(-25),
                                       Long.valueOf(32)),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE, FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileSizeFilters());
            assertEquals(Arrays.asList(Long.valueOf(-21), Long.valueOf(95), Long.valueOf(-35), Long.valueOf(102),
                                       Long.valueOf(27), Long.valueOf(-27), Long.valueOf(-34), Long.valueOf(-19),
                                       Long.valueOf(-44)),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_SIZE,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                        FilterOperator.EQUAL));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals("aa2fa734-9875-466e-b899-33e080618629",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                        FilterOperator.NOT_EQUAL));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals("c2d823ba-e31f-489e-a9a9-d05911e2b1fe",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM, FilterOperator.IN));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals(Arrays.asList("4448a84f-4124-496b-8dfc-304fd8eddbe8", "0a82cb59-6916-4728-90d1-e9a6d2385664",
                                       "8deafbe8-92f9-4852-8f34-b1b07cab528a"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                 List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                        FilterOperator.NOT_IN));
            assertNotNull(option.getDatafileChecksumFilters());
            assertEquals(Arrays.asList("28e046b8-473d-4fbb-b50f-9689cb87d1f1", "c0510bdc-afd0-404f-b833-ce10e13f7b3d",
                                       "b99499b1-f762-49d0-a652-ad38aa740e73", "80c9a8c2-7d8b-4c3d-ae5a-d5bc364545ab",
                                       "bf0f36ba-daa1-4215-b8df-9a9c28d5c069", "db0899ab-abf0-4fdd-a41d-49d2b1ff3549",
                                       "2668ae70-3355-4673-bc8d-7f7109396b4e", "ab7ba75a-7354-4468-b56f-a945d7006a10"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_DATAFILE_CHECKSUM,
                                                                    List.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("c00a6d3c-ef1c-4b37-b66e-ced6fdf72413",
                         ListOptionsEncoder.encodeSingleEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID,
                                                                    String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_EQUAL));
            assertNotNull(option.getIdFilters());
            assertEquals("6f22ab49-7b09-4586-9cdb-f74ac29d952d",
                         ListOptionsEncoder.encodeSingleNotEqualFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID,
                                                                       String.class, option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("491c1acc-33fc-4598-b3d5-e3e818227d04", "9d828f75-28b4-40f3-b15e-4a9b54304b66",
                                       "57a66082-8fe1-4a99-b7b6-c45778915007", "586003bd-371b-4688-b0e9-aa92bd003711",
                                       "08602132-6dc3-4a7b-b435-7fde8a746dcd", "906af254-2b5f-47f2-9296-d577d38b9e07"),
                         ListOptionsEncoder.encodeSingleInFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, List.class,
                                                                 option));
            assertTrue(option.hasFilters(FirmwareImageListOptions.TAG_FILTER_BY_ID));
            assertTrue(option.hasFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID, FilterOperator.NOT_IN));
            assertNotNull(option.getIdFilters());
            assertEquals(Arrays.asList("578153ff-59d7-4dc5-9e06-c45ae37f1c97", "8c74583f-686e-44c6-b0f6-409b2f97e26d",
                                       "2afe2563-cd7b-4cc3-85d5-073c46cc520b", "25fdd4d3-f4f0-425a-9d02-69eca66f2265",
                                       "a7d2e48f-c12f-4f56-a888-bf626b87dc69"),
                         ListOptionsEncoder.encodeSingleNotInFilter(FirmwareImageListOptions.TAG_FILTER_BY_ID,
                                                                    List.class, option));
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            FirmwareImageListOptions firmwareimagelistoptions1 = new FirmwareImageListOptions(Integer.valueOf(13),
                                                                                              Long.valueOf(-21),
                                                                                              Order.getDefault(),
                                                                                              "737a35e6-f93b-497e-a677-6ac2107b5430",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions2 = new FirmwareImageListOptions(Integer.valueOf(13),
                                                                                              Long.valueOf(-21),
                                                                                              Order.getDefault(),
                                                                                              "737a35e6-f93b-497e-a677-6ac2107b5430",
                                                                                              null, null);
            assertNotNull(firmwareimagelistoptions1);
            assertNotNull(firmwareimagelistoptions2);
            assertNotSame(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2.hashCode(), firmwareimagelistoptions1.hashCode());
            int hashCode = firmwareimagelistoptions1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, firmwareimagelistoptions1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            FirmwareImageListOptions firmwareimagelistoptions1 = new FirmwareImageListOptions(Integer.valueOf(-45),
                                                                                              Long.valueOf(61),
                                                                                              Order.getDefault(),
                                                                                              "5298df99-6a36-456a-bf9e-ad409d3e427c",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions2 = new FirmwareImageListOptions(Integer.valueOf(-45),
                                                                                              Long.valueOf(61),
                                                                                              Order.getDefault(),
                                                                                              "5298df99-6a36-456a-bf9e-ad409d3e427c",
                                                                                              null, null);
            FirmwareImageListOptions firmwareimagelistoptions3 = new FirmwareImageListOptions(Integer.valueOf(-63),
                                                                                              Long.valueOf(83),
                                                                                              Order.getDefault(),
                                                                                              "6dd1a595-ccb4-41a7-8c14-c11fda7e53ce",
                                                                                              null, null);
            assertNotNull(firmwareimagelistoptions1);
            assertNotNull(firmwareimagelistoptions2);
            assertNotNull(firmwareimagelistoptions3);
            assertNotSame(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertNotSame(firmwareimagelistoptions3, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions2, firmwareimagelistoptions1);
            assertEquals(firmwareimagelistoptions1, firmwareimagelistoptions2);
            assertEquals(firmwareimagelistoptions1, firmwareimagelistoptions1);
            assertFalse(firmwareimagelistoptions1.equals(null));
            assertNotEquals(firmwareimagelistoptions3, firmwareimagelistoptions1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
