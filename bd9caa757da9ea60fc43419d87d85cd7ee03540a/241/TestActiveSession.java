// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model ActiveSession.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestActiveSession {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ActiveSession activesession1 = new ActiveSession("e5bbd029672c41116bdebdc8edf9007e",
                                                             "6414346b-1e42-4107-9e2e-753361a15f5f",
                                                             new Date(1557959071956L),
                                                             "a370d824-8d4d-47ae-b510-fe8256a433c1",
                                                             "ba6dca34-4a5f-4fc8-b42e-e7ffe854213f");
            ActiveSession activesession2 = activesession1.clone();
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotSame(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ActiveSession activesession1 = new ActiveSession("e5bbd029672c41116bdebdc8edf9007e",
                                                             "1135ec2b-ccfd-4b56-8140-629a313f2b89",
                                                             new Date(1557959070305L),
                                                             "913d1fac-48ce-4e3c-a83c-e2addf1f961a",
                                                             "44e9ecba-2832-43bc-bcef-622dfe915180");
            ActiveSession activesession2 = new ActiveSession("e5bbd029672c41116bdebdc8edf9007e",
                                                             "1135ec2b-ccfd-4b56-8140-629a313f2b89",
                                                             new Date(1557959070305L),
                                                             "913d1fac-48ce-4e3c-a83c-e2addf1f961a",
                                                             "44e9ecba-2832-43bc-bcef-622dfe915180");
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotSame(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession2.hashCode(), activesession1.hashCode());
            int hashCode = activesession1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, activesession1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ActiveSession activesession = new ActiveSession("e5bbd029672c41116bdebdc8edf9007e",
                                                        "d6704f28-c3f9-483b-b4de-f77786b8d8bf",
                                                        new Date(1557959069727L),
                                                        "d80461f0-5f94-4451-b47e-2025460ab87a",
                                                        "daa04d62-a05b-42b9-8a62-e7e189944462");
        assertTrue(activesession.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ActiveSession activesession1 = new ActiveSession("e5bbd029672c41116bdebdc8edf9007e",
                                                             "37ff764d-0add-43b3-b3f9-a1ef0a0170e2",
                                                             new Date(1557959073098L),
                                                             "0c3e0dd9-4ab9-4670-8f16-27cde5d0d77d",
                                                             "524c7a0c-0485-40a7-af15-382365277981");
            ActiveSession activesession2 = new ActiveSession("e5bbd029672c41116bdebdc8edf9007e",
                                                             "37ff764d-0add-43b3-b3f9-a1ef0a0170e2",
                                                             new Date(1557959073098L),
                                                             "0c3e0dd9-4ab9-4670-8f16-27cde5d0d77d",
                                                             "524c7a0c-0485-40a7-af15-382365277981");
            ActiveSession activesession3 = new ActiveSession("e5bbd029672c41116bdebdc8edf9007e",
                                                             "62a00dea-8f16-45b0-bc03-bd405541f9bf",
                                                             new Date(1557959069584L),
                                                             "7d73869d-555b-440c-83a5-5f747122aab4",
                                                             "bb9b41ac-2220-4bf3-9576-3ad7f730a03e");
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotNull(activesession3);
            assertNotSame(activesession2, activesession1);
            assertNotSame(activesession3, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession1, activesession2);
            assertEquals(activesession1, activesession1);
            assertFalse(activesession1.equals(null));
            assertNotEquals(activesession3, activesession1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
