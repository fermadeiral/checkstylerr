// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.security.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeveloperCertificate.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeveloperCertificate {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("8dfdacc9-5805-4e69-9828-6e008e6b034b",
                                                                                  "9fac90c7-4f72-4775-8c71-a490b90a22f4",
                                                                                  new Date(1553013212567L),
                                                                                  "e2860006-1205-4b40-9293-3f038b7b1b0c",
                                                                                  "81ad4e6a-9c9e-45dc-9dec-ace95807d269",
                                                                                  "c9ce8619-b8f3-475b-acf3-ff094d2ab435",
                                                                                  "6c4963b0-1ae4-490b-a7dd-efa39974f08f");
            DeveloperCertificate developercertificate2 = developercertificate1.clone();
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("7fd1fb14-5fb3-47f9-ac80-704dcc189203",
                                                                                  "0c1461a0-b807-4ff4-be4b-fadb497494e6",
                                                                                  new Date(1553013214720L),
                                                                                  "4b750ccb-6264-4afc-8624-c226b0cba71a",
                                                                                  "85493881-fe47-4325-a5a3-d2bbc85bb4c3",
                                                                                  "dd696b2a-7f90-43fa-8b37-1be0a0816de9",
                                                                                  "905fc3c0-1d5a-410c-b7d2-6116b970f030");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("7fd1fb14-5fb3-47f9-ac80-704dcc189203",
                                                                                  "0c1461a0-b807-4ff4-be4b-fadb497494e6",
                                                                                  new Date(1553013214720L),
                                                                                  "4b750ccb-6264-4afc-8624-c226b0cba71a",
                                                                                  "85493881-fe47-4325-a5a3-d2bbc85bb4c3",
                                                                                  "dd696b2a-7f90-43fa-8b37-1be0a0816de9",
                                                                                  "905fc3c0-1d5a-410c-b7d2-6116b970f030");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2.hashCode(), developercertificate1.hashCode());
            int hashCode = developercertificate1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, developercertificate1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeveloperCertificate developercertificate = new DeveloperCertificate("61d5aea8-a7d7-482c-b767-e0920259b899",
                                                                             "a194b66d-a762-4f1c-b8d6-12995e550bf0",
                                                                             new Date(1553013212687L),
                                                                             "960cd94f-3b02-4f30-9374-f026d40a4b6d",
                                                                             "f9f8b282-7783-4b8e-96a8-1fc5e9d3e2c5",
                                                                             "8f46b987-be57-47c6-b739-b7035ba6023f",
                                                                             "9a4faa2d-03e3-4486-9f5f-e3f3ac29f2f4");
        assertTrue(developercertificate.isValid());
        DeveloperCertificate developercertificateInvalid = new DeveloperCertificate("740fe374-b65f-4759-b62b-1fd35ad0ce61",
                                                                                    "7811245b-fe88-4a00-b9ec-5396d822e25d",
                                                                                    new Date(1553013206283L),
                                                                                    "d5a4313b-5a0e-4f0f-951b-f95549f413a4",
                                                                                    "bd802c0d-58d7-4437-82d6-a5313cfc523a",
                                                                                    null,
                                                                                    "04d43f2b-6a90-47aa-bf85-775060b4ac9b");
        assertFalse(developercertificateInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("72620786-0a48-44f7-b25b-60b759b9de1b",
                                                                                  "47251403-3148-451f-9be3-07f07a3e3640",
                                                                                  new Date(1553013212300L),
                                                                                  "603dc56c-4614-4c9e-af05-779fa1505f80",
                                                                                  "6e24012c-7e21-4a20-914b-cd70148489de",
                                                                                  "ec41d6ef-aa81-4d57-b1af-4a9c3e86bd0e",
                                                                                  "fcf66ec4-3570-491b-b49a-d9ffd72a087f");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("72620786-0a48-44f7-b25b-60b759b9de1b",
                                                                                  "47251403-3148-451f-9be3-07f07a3e3640",
                                                                                  new Date(1553013212300L),
                                                                                  "603dc56c-4614-4c9e-af05-779fa1505f80",
                                                                                  "6e24012c-7e21-4a20-914b-cd70148489de",
                                                                                  "ec41d6ef-aa81-4d57-b1af-4a9c3e86bd0e",
                                                                                  "fcf66ec4-3570-491b-b49a-d9ffd72a087f");
            DeveloperCertificate developercertificate3 = new DeveloperCertificate("e8fd0f89-9843-4223-94a7-0b234c9ffe46",
                                                                                  "f46dfcd9-fac5-40ee-b65d-0d644be116d4",
                                                                                  new Date(1553013207697L),
                                                                                  "8c4acb24-81ef-43ef-97d0-2bf0e4d4d25c",
                                                                                  "0a23e938-30af-4104-b2ec-aac72fbf91e0",
                                                                                  "43d86048-1edf-4552-bfe7-2d5a3dc36838",
                                                                                  "ca6434d6-594e-42d0-8dcc-b74d6ffdcee5");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotNull(developercertificate3);
            assertNotSame(developercertificate2, developercertificate1);
            assertNotSame(developercertificate3, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate1, developercertificate2);
            assertEquals(developercertificate1, developercertificate1);
            assertFalse(developercertificate1.equals(null));
            assertNotEquals(developercertificate3, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
