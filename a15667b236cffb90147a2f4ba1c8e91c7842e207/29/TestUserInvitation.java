// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model UserInvitation.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestUserInvitation {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("8fafc426-8af0-485f-b824-db601921a5a8",
                                                                new Date(1553013212334L),
                                                                "13f72967-664d-4866-bcf5-6df765fafd6b",
                                                                new Date(1553013212560L),
                                                                "60b8a37e-0cd0-45a7-871b-295ab8bd18ad", null,
                                                                new Date(1553013208312L),
                                                                "7b337d16-c4f5-4b75-9782-a4970ff8f032");
            UserInvitation userinvitation2 = userinvitation1.clone();
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotSame(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("ca5ef2e8-1b5d-4c75-a78c-451c9a8f21ef",
                                                                new Date(1553013213787L),
                                                                "941c3c5f-31e1-4e0e-b0d3-61252e7d4509",
                                                                new Date(1553013211664L),
                                                                "b79c230c-6887-442d-be5c-6b805aee9d1f", null,
                                                                new Date(1553013211205L),
                                                                "1883aea1-c3ff-44ab-82da-4cbbedc629d0");
            UserInvitation userinvitation2 = new UserInvitation("ca5ef2e8-1b5d-4c75-a78c-451c9a8f21ef",
                                                                new Date(1553013213787L),
                                                                "941c3c5f-31e1-4e0e-b0d3-61252e7d4509",
                                                                new Date(1553013211664L),
                                                                "b79c230c-6887-442d-be5c-6b805aee9d1f", null,
                                                                new Date(1553013211205L),
                                                                "1883aea1-c3ff-44ab-82da-4cbbedc629d0");
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotSame(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation2.hashCode(), userinvitation1.hashCode());
            int hashCode = userinvitation1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, userinvitation1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        UserInvitation userinvitation = new UserInvitation("08ed1a18-f3c3-4bce-9095-a10bc149c1cb",
                                                           new Date(1553013206203L),
                                                           "76cebadf-631b-41f3-ae9d-2bc74fff9d88",
                                                           new Date(1553013206324L),
                                                           "1ab7c437-ff3a-4dd4-b095-28b8855f2479", null,
                                                           new Date(1553013213994L),
                                                           "a3fb0794-a7c2-4178-aa34-7be43eac7437");
        assertTrue(userinvitation.isValid());
        UserInvitation userinvitationInvalid = new UserInvitation("2e87399f-6d4f-45fc-b2b5-a14cb57e676e",
                                                                  new Date(1553013212979L), null,
                                                                  new Date(1553013212032L),
                                                                  "58426364-4b9a-4f6d-bc80-eecaa7be5e7e", null,
                                                                  new Date(1553013213896L),
                                                                  "cb9813ac-2bd2-4303-a5d9-1c1b33d695ff");
        assertFalse(userinvitationInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            UserInvitation userinvitation1 = new UserInvitation("1f596378-fff0-473c-9438-6bfe8e77685d",
                                                                new Date(1553013215073L),
                                                                "5f3f0e2a-c33e-4a56-8727-f588ebdf48b6",
                                                                new Date(1553013214629L),
                                                                "129a41a9-a64e-44ee-aa21-be6be5eab26c", null,
                                                                new Date(1553013212979L),
                                                                "dd79a75b-c698-45a1-a0b1-7e3ac78edf63");
            UserInvitation userinvitation2 = new UserInvitation("1f596378-fff0-473c-9438-6bfe8e77685d",
                                                                new Date(1553013215073L),
                                                                "5f3f0e2a-c33e-4a56-8727-f588ebdf48b6",
                                                                new Date(1553013214629L),
                                                                "129a41a9-a64e-44ee-aa21-be6be5eab26c", null,
                                                                new Date(1553013212979L),
                                                                "dd79a75b-c698-45a1-a0b1-7e3ac78edf63");
            UserInvitation userinvitation3 = new UserInvitation("aefec0b4-e7f0-4a49-8dd9-a670b0803746",
                                                                new Date(1553013209468L),
                                                                "f6dce8fa-107d-46d3-a28e-26d4ee43a796",
                                                                new Date(1553013212496L),
                                                                "4c769b11-905c-40d9-9e90-45ef4c7f8e0a", null,
                                                                new Date(1553013215510L),
                                                                "7b091493-274c-4e85-abf5-caccf49d912d");
            assertNotNull(userinvitation1);
            assertNotNull(userinvitation2);
            assertNotNull(userinvitation3);
            assertNotSame(userinvitation2, userinvitation1);
            assertNotSame(userinvitation3, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation2, userinvitation1);
            assertEquals(userinvitation1, userinvitation2);
            assertEquals(userinvitation1, userinvitation1);
            assertFalse(userinvitation1.equals(null));
            assertNotEquals(userinvitation3, userinvitation1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
