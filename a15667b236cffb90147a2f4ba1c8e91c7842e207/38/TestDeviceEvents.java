// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEvents.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEvents {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1553013210953L), null,
                                                          new Date(1553013205739L),
                                                          "40999c74-084c-412a-a909-1a70dbb5e479",
                                                          "bae1516a-2ab9-4510-ae88-1d68d9938b37",
                                                          "34de39f4-77d2-4c3c-94d9-bb0b145ddee9",
                                                          "b431743f-0e87-489d-b72b-a31a0a1f95f2",
                                                          "fd16c79f-d9d8-4418-860e-5266409ce7b3",
                                                          "4c703f90-cb1d-434b-b0f5-c4c3c3087a6a", true);
            DeviceEvents deviceevents2 = deviceevents1.clone();
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1553013209004L), null,
                                                          new Date(1553013208698L),
                                                          "22c928dd-df4b-405b-b142-6e3bce5f5196",
                                                          "256aa544-9aab-427f-a918-02a59923ca93",
                                                          "8dca950d-6beb-4767-b412-94f1aa0faf7f",
                                                          "4b90e5e4-bae2-4b8b-acbe-3b23eb57fe2b",
                                                          "31f966c3-4a72-4975-8049-a4527fafe648",
                                                          "4621b250-5e86-46a6-bd72-fbe4812878d2", false);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1553013209004L), null,
                                                          new Date(1553013208698L),
                                                          "22c928dd-df4b-405b-b142-6e3bce5f5196",
                                                          "256aa544-9aab-427f-a918-02a59923ca93",
                                                          "8dca950d-6beb-4767-b412-94f1aa0faf7f",
                                                          "4b90e5e4-bae2-4b8b-acbe-3b23eb57fe2b",
                                                          "31f966c3-4a72-4975-8049-a4527fafe648",
                                                          "4621b250-5e86-46a6-bd72-fbe4812878d2", false);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2.hashCode(), deviceevents1.hashCode());
            int hashCode = deviceevents1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceevents1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEvents deviceevents = new DeviceEvents(null, new Date(1553013212693L), null, new Date(1553013210141L),
                                                     "e38f4040-f416-43ed-b63c-53f1c3d69ec6",
                                                     "0cd06f0e-027e-47a4-a0e9-7755b60b7d7a",
                                                     "af0543c0-ab8a-4729-a86f-cc23f234e09c",
                                                     "5e749e7a-d02d-40e7-aa4c-cba0e057c5af",
                                                     "2dad922e-246f-4575-94cc-e4dba8bc0fdf",
                                                     "9afea2d3-bf30-494a-926f-2f256ed7a0fc", false);
        assertTrue(deviceevents.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1553013206968L), null,
                                                          new Date(1553013211330L),
                                                          "d3c256ea-f8dc-4fc9-908c-eb052989b091",
                                                          "524afe4d-4c15-4bca-9dfc-2549ad6bd9be",
                                                          "087da074-c034-48bd-abf0-f362bbd6757a",
                                                          "a1097bab-69aa-4c98-8e56-d53b8fb95196",
                                                          "6beb4673-3f1f-4d9e-9d9c-b3919c3c071c",
                                                          "082b9945-7d02-45df-8a06-191b2ec4f858", false);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1553013206968L), null,
                                                          new Date(1553013211330L),
                                                          "d3c256ea-f8dc-4fc9-908c-eb052989b091",
                                                          "524afe4d-4c15-4bca-9dfc-2549ad6bd9be",
                                                          "087da074-c034-48bd-abf0-f362bbd6757a",
                                                          "a1097bab-69aa-4c98-8e56-d53b8fb95196",
                                                          "6beb4673-3f1f-4d9e-9d9c-b3919c3c071c",
                                                          "082b9945-7d02-45df-8a06-191b2ec4f858", false);
            DeviceEvents deviceevents3 = new DeviceEvents(null, new Date(1553013213450L), null,
                                                          new Date(1553013210810L),
                                                          "83c787b3-9acf-4fca-82a5-06683e56f90e",
                                                          "cb72c887-9f61-4124-b048-87fa59fc9f02",
                                                          "fa2e351e-01cb-4040-a684-f7074a2b7cec",
                                                          "6a51f4fe-c179-4bcd-a75d-80ad81c202fd",
                                                          "0beb1891-873e-45d7-a892-e6d2d73842ab",
                                                          "12b3fb98-52d4-4703-b069-1e5df1d2141a", false);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotNull(deviceevents3);
            assertNotSame(deviceevents2, deviceevents1);
            assertNotSame(deviceevents3, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents1, deviceevents2);
            assertEquals(deviceevents1, deviceevents1);
            assertFalse(deviceevents1.equals(null));
            assertNotEquals(deviceevents3, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
