// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model User.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestUser {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            User user1 = new User("54deb6cc-78db-4855-b7db-5e1452a94be0", null, "9f61fa8c-06f6-43ac-b3a6-c8a263e642d7",
                                  new Date(1553013208930L), 60, null, "237c020e-6777-484d-ac8a-9f7487d59f9a", false,
                                  "fdf4cdeb-e31c-4099-a492-01ba81c37b81", "8e69dbda-fc27-4de7-97ef-0bcac07216b4", -104,
                                  null, null, false, "91cbeab1-36e0-4dea-ab51-904748de23b5", 31,
                                  "693a342e-e1e3-4918-9528-af655e062014", UserStatus.getDefault(), true, null, false,
                                  new Date(1553013212479L), "2b751d47-8d2c-4cf1-afe2-64c86149a6df");
            User user2 = user1.clone();
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotSame(user2, user1);
            assertEquals(user2, user1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            User user1 = new User("e508f0ca-36c8-416f-9b01-2be7146de39f", null, "1da557c2-2654-49cb-93a9-1d50dd1ed6b5",
                                  new Date(1553013209564L), 1, null, "6345b437-9a18-4d08-ab5e-5fd028580bd7", true,
                                  "25252432-097b-4cc9-a696-90487bda8e64", "af997bc4-a197-4028-ae22-1d62d389e4f2", -69,
                                  null, null, false, "044a2344-a5fd-4020-9c2c-d6e9297dda3d", -119,
                                  "ddf5e0f7-0ad4-4e04-a515-31c4606fc32e", UserStatus.getDefault(), true, null, false,
                                  new Date(1553013208424L), "47fb20cb-7eaa-478f-9b04-472cea5dca10");
            User user2 = new User("e508f0ca-36c8-416f-9b01-2be7146de39f", null, "1da557c2-2654-49cb-93a9-1d50dd1ed6b5",
                                  new Date(1553013209564L), 1, null, "6345b437-9a18-4d08-ab5e-5fd028580bd7", true,
                                  "25252432-097b-4cc9-a696-90487bda8e64", "af997bc4-a197-4028-ae22-1d62d389e4f2", -69,
                                  null, null, false, "044a2344-a5fd-4020-9c2c-d6e9297dda3d", -119,
                                  "ddf5e0f7-0ad4-4e04-a515-31c4606fc32e", UserStatus.getDefault(), true, null, false,
                                  new Date(1553013208424L), "47fb20cb-7eaa-478f-9b04-472cea5dca10");
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotSame(user2, user1);
            assertEquals(user2, user1);
            assertEquals(user2.hashCode(), user1.hashCode());
            int hashCode = user1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, user1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        User user = new User("bc8ede9d-1258-4f49-a8a8-9049eba028c4", null, "f9256484-9c1a-4ab8-adc5-e6d23fd8852a",
                             new Date(1553013214510L), -10, null, "0bb07ae2-1671-4b4d-9209-656d942dff04", false,
                             "f03ff6bd-e08f-4aa5-a8de-088451fbdabe", "dc7f0644-2038-4be6-a553-d5468f4225fb", -37, null,
                             null, false, "9bdb42da-a87a-470a-85cd-94c94ecdfd8d", 115,
                             "4e00f640-469c-4e5a-ae19-bdcbcda3ab12", UserStatus.getDefault(), true, null, true,
                             new Date(1553013211175L), "4dd9c5f8-e85b-4748-b160-91375899b299");
        assertTrue(user.isValid());
        User userInvalid = new User("2d815a53-fd58-421f-b9f0-f827a1f14c44", null,
                                    "9c75e5ac-295e-4e5c-a6ce-dc907df63925", new Date(1553013212090L), -27, null, null,
                                    true, "9f68a908-f18b-40fc-b3ad-1f6e672f0111",
                                    "1ecb03b1-699d-4f12-b12a-63e17c7acc41", 51, null, null, false,
                                    "2a99507d-4100-4116-81ff-d093b646e32d", 1, "e83fe2da-4d18-46a9-acc5-24cad238eb87",
                                    UserStatus.getDefault(), false, null, false, new Date(1553013210113L),
                                    "a2a82c6b-a4a5-4150-8df1-c95a6a2524ad");
        assertFalse(userInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            User user1 = new User("60e9a466-957e-40cc-a0b8-ea06c25e3b9e", null, "26a3e3ac-a81a-4dfe-bd10-46279488c6d1",
                                  new Date(1553013213488L), -101, null, "bc4971fd-fe03-48ae-8558-0b25e6b83b2c", true,
                                  "dfdd1af6-d4c5-4f7c-85e5-853b535406f1", "74838e57-2161-42db-a151-e7d0bfa9b555", -20,
                                  null, null, true, "483845ae-ec7c-4899-9261-a14523c99185", 30,
                                  "9b0b447a-5d00-41d1-a63e-c155c69997cc", UserStatus.getDefault(), true, null, true,
                                  new Date(1553013214961L), "6e96a069-0e84-48a8-8662-43bbf3591636");
            User user2 = new User("60e9a466-957e-40cc-a0b8-ea06c25e3b9e", null, "26a3e3ac-a81a-4dfe-bd10-46279488c6d1",
                                  new Date(1553013213488L), -101, null, "bc4971fd-fe03-48ae-8558-0b25e6b83b2c", true,
                                  "dfdd1af6-d4c5-4f7c-85e5-853b535406f1", "74838e57-2161-42db-a151-e7d0bfa9b555", -20,
                                  null, null, true, "483845ae-ec7c-4899-9261-a14523c99185", 30,
                                  "9b0b447a-5d00-41d1-a63e-c155c69997cc", UserStatus.getDefault(), true, null, true,
                                  new Date(1553013214961L), "6e96a069-0e84-48a8-8662-43bbf3591636");
            User user3 = new User("0ecc72a8-6408-488a-b019-028cddc5d837", null, "1f87936b-591c-48a2-a41e-2ad46ee38a61",
                                  new Date(1553013208642L), 73, null, "6690a15e-311a-445c-8737-e24d8864bcf6", true,
                                  "92e24ad4-155d-42d7-9824-8c247a1ab1e5", "aff7bb6f-1366-4e0e-84fa-c24b95139c41", 5,
                                  null, null, true, "f5a35313-a730-4fd5-9e73-2c052609a580", 15,
                                  "a80ece3f-cbc9-4665-b4bc-85cf1696e480", UserStatus.getDefault(), true, null, true,
                                  new Date(1553013207742L), "d8e7509a-6be7-4286-a686-bf0344bd356e");
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotNull(user3);
            assertNotSame(user2, user1);
            assertNotSame(user3, user1);
            assertEquals(user2, user1);
            assertEquals(user2, user1);
            assertEquals(user1, user2);
            assertEquals(user1, user1);
            assertFalse(user1.equals(null));
            assertNotEquals(user3, user1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
