// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model Device.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDevice {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            Device device1 = new Device("427952c3-6f3d-4759-8f4d-9f4afd9faca3", true, new Date(1553013211655L),
                                        new Date(1553013209195L), "f788d8dc-2e42-4e94-ac6b-4295f0b59d89",
                                        new Date(1553013207602L), new Date(1553013210953L), null,
                                        DeviceDeployedState.getDefault(), "dcd39e74-03ea-41da-a3d0-c4658bffb936",
                                        "0371d05b-94a3-47af-8eb4-2f7d8bd219e9", "cbde9405-40c0-49fa-88be-6a7371f7fe49",
                                        -29, "10752690-7fc0-4636-897d-ba8f37eff47e",
                                        "f4168c0a-bca7-4464-8bb6-6ba8ba6b36f6", "a5616ea3-3627-4356-8b29-94b453da54ec",
                                        new Date(1553013208032L), "41a4affc-b532-4bce-8303-b946263e83a5",
                                        "5712576a-8362-458d-9a68-de6d3c1d5297", "ed2a53f2-b82e-45cf-9aa4-b1dc1320c64e",
                                        "c59f33a9-1808-429d-82c9-89183c86ed26", new Date(1553013215193L),
                                        DeviceMechanism.getDefault(), "e7cf1b46-f229-4829-9d95-c4a8adbdd019",
                                        "1d0b22a9-8cfa-4bbe-b152-aa51a0dcf17e", "08909a5c-11c0-487b-a3c7-a5d0c1297777",
                                        DeviceState.getDefault(), new Date(1553013205288L),
                                        "54fabd44-9491-4c4e-8a8d-b6f0f20d84f8");
            Device device2 = device1.clone();
            assertNotNull(device1);
            assertNotNull(device2);
            assertNotSame(device2, device1);
            assertEquals(device2, device1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            Device device1 = new Device("5238322a-0194-4391-b00e-a9b1323def1e", true, new Date(1553013214562L),
                                        new Date(1553013212351L), "0a5589e8-8894-4c43-af56-e3907f43eb57",
                                        new Date(1553013214748L), new Date(1553013205247L), null,
                                        DeviceDeployedState.getDefault(), "cb3eddbd-5d7e-4766-85ea-1a1c552aa6c1",
                                        "87122d29-135a-4fa1-b13c-8240436cfb17", "0003aded-ca38-4c1b-b466-4f319a725b03",
                                        58, "5854af42-93b6-4e91-a6c9-deb99e37ba8a",
                                        "995fa1aa-ec8c-4e5a-85a2-cdcbaea61914", "1bc13e0a-073f-465b-b423-431ea4bfc627",
                                        new Date(1553013206876L), "bfc27026-1865-44f0-99f0-27773501e498",
                                        "c86fe118-08db-4bd3-a38c-bcbe230f9fa6", "54f8de47-6884-492c-91db-d51f5e9e15f0",
                                        "8fabaa16-66e4-4557-a39a-9bcbcf6e81ee", new Date(1553013207829L),
                                        DeviceMechanism.getDefault(), "953a79b4-2dd6-46b4-a6aa-a080b3036cc8",
                                        "d87f2ce0-47cf-4334-804e-62fdca17e959", "c115e19b-9954-4af7-b654-08d0ca50deaa",
                                        DeviceState.getDefault(), new Date(1553013210169L),
                                        "274bfdc3-daeb-4b26-8525-3fcb28f6d810");
            Device device2 = new Device("5238322a-0194-4391-b00e-a9b1323def1e", true, new Date(1553013214562L),
                                        new Date(1553013212351L), "0a5589e8-8894-4c43-af56-e3907f43eb57",
                                        new Date(1553013214748L), new Date(1553013205247L), null,
                                        DeviceDeployedState.getDefault(), "cb3eddbd-5d7e-4766-85ea-1a1c552aa6c1",
                                        "87122d29-135a-4fa1-b13c-8240436cfb17", "0003aded-ca38-4c1b-b466-4f319a725b03",
                                        58, "5854af42-93b6-4e91-a6c9-deb99e37ba8a",
                                        "995fa1aa-ec8c-4e5a-85a2-cdcbaea61914", "1bc13e0a-073f-465b-b423-431ea4bfc627",
                                        new Date(1553013206876L), "bfc27026-1865-44f0-99f0-27773501e498",
                                        "c86fe118-08db-4bd3-a38c-bcbe230f9fa6", "54f8de47-6884-492c-91db-d51f5e9e15f0",
                                        "8fabaa16-66e4-4557-a39a-9bcbcf6e81ee", new Date(1553013207829L),
                                        DeviceMechanism.getDefault(), "953a79b4-2dd6-46b4-a6aa-a080b3036cc8",
                                        "d87f2ce0-47cf-4334-804e-62fdca17e959", "c115e19b-9954-4af7-b654-08d0ca50deaa",
                                        DeviceState.getDefault(), new Date(1553013210169L),
                                        "274bfdc3-daeb-4b26-8525-3fcb28f6d810");
            assertNotNull(device1);
            assertNotNull(device2);
            assertNotSame(device2, device1);
            assertEquals(device2, device1);
            assertEquals(device2.hashCode(), device1.hashCode());
            int hashCode = device1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, device1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        Device device = new Device("5d41ca33-8c93-4777-928c-9a848afe4bb0", false, new Date(1553013213981L),
                                   new Date(1553013208450L), "f421e331-45aa-4012-bbf1-28ecdc81debb",
                                   new Date(1553013211039L), new Date(1553013209538L), null,
                                   DeviceDeployedState.getDefault(), "e8abd9ac-eae4-40c1-9893-95478444734a",
                                   "98b4e478-64c9-407d-8cca-19bc8fb55228", "5506f7de-875c-4f83-96e5-b818878f2a1a", -97,
                                   "9f20355e-b320-4a5e-a866-d50206771072", "b9423695-a6be-4a59-bce5-7adf45a26882",
                                   "3733da88-e36f-41bc-b355-9668fe027904", new Date(1553013210481L),
                                   "885603a4-aea8-4f12-bfa9-d5fc43b56ff4", "ac4eae8e-9e55-4930-937e-d025e194c7af",
                                   "13be41ac-0d01-49de-9322-528d3f8877ef", "47ccc0c1-852b-4df1-9d91-9627bba299ee",
                                   new Date(1553013207597L), DeviceMechanism.getDefault(),
                                   "cfe95b2d-bd9f-425d-9050-08107211473b", "b64cebad-0455-4792-8d5a-9e005cefac51",
                                   "9c4ce68b-bc04-4d66-8715-fb0853683f31", DeviceState.getDefault(),
                                   new Date(1553013209770L), "22053204-55ab-4aee-8a60-e83555c37118");
        assertTrue(device.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            Device device1 = new Device("b4fecad4-9de8-4c81-9874-3a5a1d5264ca", false, new Date(1553013211962L),
                                        new Date(1553013205899L), "748beb93-4d0f-46e3-828a-af6e5ab25f8c",
                                        new Date(1553013207528L), new Date(1553013214353L), null,
                                        DeviceDeployedState.getDefault(), "9b2fcf99-f226-47e2-96dd-244b59895b92",
                                        "b6d97d14-0d55-4a32-be45-3244d99f73b5", "2d1bbd60-9240-49eb-b1b5-4acbe31176ce",
                                        66, "afa99bc9-2039-45ab-b5ff-dd84108a9af4",
                                        "92aaa477-a3f1-4d00-928b-029214ca50ee", "fd8aae42-2840-4214-b973-0f4b1052a274",
                                        new Date(1553013214437L), "60a15eaf-8c6f-45fc-9df0-6824ff47cf05",
                                        "9f992afb-8b29-4116-ae78-eba171758fcb", "991cd472-c72e-4c34-85d0-029ec848045f",
                                        "75b0801c-7476-45b3-823a-37664ca9c78c", new Date(1553013206032L),
                                        DeviceMechanism.getDefault(), "4380a3d2-c619-456c-97b3-f60120ec6fb5",
                                        "65068042-ccf6-4406-b9a1-5df2593fcf14", "6048983c-a81c-46b8-9460-39722487ceb9",
                                        DeviceState.getDefault(), new Date(1553013207495L),
                                        "dcc3f44c-98fb-4187-a113-1bf77e5b8b19");
            Device device2 = new Device("b4fecad4-9de8-4c81-9874-3a5a1d5264ca", false, new Date(1553013211962L),
                                        new Date(1553013205899L), "748beb93-4d0f-46e3-828a-af6e5ab25f8c",
                                        new Date(1553013207528L), new Date(1553013214353L), null,
                                        DeviceDeployedState.getDefault(), "9b2fcf99-f226-47e2-96dd-244b59895b92",
                                        "b6d97d14-0d55-4a32-be45-3244d99f73b5", "2d1bbd60-9240-49eb-b1b5-4acbe31176ce",
                                        66, "afa99bc9-2039-45ab-b5ff-dd84108a9af4",
                                        "92aaa477-a3f1-4d00-928b-029214ca50ee", "fd8aae42-2840-4214-b973-0f4b1052a274",
                                        new Date(1553013214437L), "60a15eaf-8c6f-45fc-9df0-6824ff47cf05",
                                        "9f992afb-8b29-4116-ae78-eba171758fcb", "991cd472-c72e-4c34-85d0-029ec848045f",
                                        "75b0801c-7476-45b3-823a-37664ca9c78c", new Date(1553013206032L),
                                        DeviceMechanism.getDefault(), "4380a3d2-c619-456c-97b3-f60120ec6fb5",
                                        "65068042-ccf6-4406-b9a1-5df2593fcf14", "6048983c-a81c-46b8-9460-39722487ceb9",
                                        DeviceState.getDefault(), new Date(1553013207495L),
                                        "dcc3f44c-98fb-4187-a113-1bf77e5b8b19");
            Device device3 = new Device("6e362d3f-77f8-4c6d-9de0-9aa2b7b792cc", false, new Date(1553013212864L),
                                        new Date(1553013213003L), "5918a565-2aff-4dfa-881d-d76be50e9563",
                                        new Date(1553013213193L), new Date(1553013213290L), null,
                                        DeviceDeployedState.getDefault(), "4d7b9500-7f92-40ca-a15a-a223826be1bb",
                                        "b67e3956-14a0-4b34-9add-09a8d4b3da65", "199f6db2-139c-4495-b20b-926f85a30524",
                                        -45, "2448bd75-0ebf-4aeb-af38-a9c5995dc9a5",
                                        "80b3a682-f9b9-45ae-9034-d518b5e871e8", "d7ea680a-c55e-4871-af88-408ba63c8c83",
                                        new Date(1553013207878L), "c7b3d490-6a6a-476e-a7fd-4e78e0594ae7",
                                        "f58e2b8d-580d-4f9c-b481-5536a3bea379", "5ee9b774-cf64-4659-a904-973b888441a8",
                                        "793bb7d1-9833-4916-8e56-e65a64ba78c4", new Date(1553013206880L),
                                        DeviceMechanism.getDefault(), "efd17ff6-bf36-4288-b14e-28825748b4cd",
                                        "2682f01c-1341-45b4-9817-305da78492c1", "1e8a7a55-8fe9-4849-9b25-f8e4bd20c364",
                                        DeviceState.getDefault(), new Date(1553013213341L),
                                        "6ea98453-4a7f-4f99-8cd2-578ff5060797");
            assertNotNull(device1);
            assertNotNull(device2);
            assertNotNull(device3);
            assertNotSame(device2, device1);
            assertNotSame(device3, device1);
            assertEquals(device2, device1);
            assertEquals(device2, device1);
            assertEquals(device1, device2);
            assertEquals(device1, device1);
            assertFalse(device1.equals(null));
            assertNotEquals(device3, device1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
