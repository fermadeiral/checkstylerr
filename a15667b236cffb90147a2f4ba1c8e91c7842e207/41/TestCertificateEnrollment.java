// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.security.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model CertificateEnrollment.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestCertificateEnrollment {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            CertificateEnrollment certificateenrollment1 = new CertificateEnrollment("_-]]].F-é¿ƒ]]]",
                                                                                     new Date(1553013211044L),
                                                                                     "016d9de5-cc3c-4f7d-81ad-d90809b200e9",
                                                                                     CertificateEnrollmentEnrollResult.getDefault(),
                                                                                     CertificateEnrollmentEnrollStatus.getDefault(),
                                                                                     "d2971486-9eaa-42b5-9a42-7b48127cc0aa",
                                                                                     new Date(1553013209278L));
            CertificateEnrollment certificateenrollment2 = certificateenrollment1.clone();
            assertNotNull(certificateenrollment1);
            assertNotNull(certificateenrollment2);
            assertNotSame(certificateenrollment2, certificateenrollment1);
            assertEquals(certificateenrollment2, certificateenrollment1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            CertificateEnrollment certificateenrollment1 = new CertificateEnrollment("8-]]]].e-ç—?]]]",
                                                                                     new Date(1553013207116L),
                                                                                     "c8772d2e-12fd-4405-a5b9-77810a6484b5",
                                                                                     CertificateEnrollmentEnrollResult.getDefault(),
                                                                                     CertificateEnrollmentEnrollStatus.getDefault(),
                                                                                     "16a0f03f-b042-4cab-8b93-7b96fadb30f8",
                                                                                     new Date(1553013208066L));
            CertificateEnrollment certificateenrollment2 = new CertificateEnrollment("8-]]]].e-ç—?]]]",
                                                                                     new Date(1553013207116L),
                                                                                     "c8772d2e-12fd-4405-a5b9-77810a6484b5",
                                                                                     CertificateEnrollmentEnrollResult.getDefault(),
                                                                                     CertificateEnrollmentEnrollStatus.getDefault(),
                                                                                     "16a0f03f-b042-4cab-8b93-7b96fadb30f8",
                                                                                     new Date(1553013208066L));
            assertNotNull(certificateenrollment1);
            assertNotNull(certificateenrollment2);
            assertNotSame(certificateenrollment2, certificateenrollment1);
            assertEquals(certificateenrollment2, certificateenrollment1);
            assertEquals(certificateenrollment2.hashCode(), certificateenrollment1.hashCode());
            int hashCode = certificateenrollment1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, certificateenrollment1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        CertificateEnrollment certificateenrollment = new CertificateEnrollment("v-].n-î‚«]]]]]]]",
                                                                                new Date(1553013211040L),
                                                                                "28049f5e-f25c-4e5e-8079-bb023fdca624",
                                                                                CertificateEnrollmentEnrollResult.getDefault(),
                                                                                CertificateEnrollmentEnrollStatus.getDefault(),
                                                                                "0c2baf74-5d54-4763-b1be-8a3f699adcf9",
                                                                                new Date(1553013213593L));
        assertTrue(certificateenrollment.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            CertificateEnrollment certificateenrollment1 = new CertificateEnrollment("2-]].h-ï¥?]]",
                                                                                     new Date(1553013206857L),
                                                                                     "0bb43663-13f9-433d-a106-86399899efea",
                                                                                     CertificateEnrollmentEnrollResult.getDefault(),
                                                                                     CertificateEnrollmentEnrollStatus.getDefault(),
                                                                                     "25c1ac9f-eb00-46de-999f-53b5f5efdd1b",
                                                                                     new Date(1553013207273L));
            CertificateEnrollment certificateenrollment2 = new CertificateEnrollment("2-]].h-ï¥?]]",
                                                                                     new Date(1553013206857L),
                                                                                     "0bb43663-13f9-433d-a106-86399899efea",
                                                                                     CertificateEnrollmentEnrollResult.getDefault(),
                                                                                     CertificateEnrollmentEnrollStatus.getDefault(),
                                                                                     "25c1ac9f-eb00-46de-999f-53b5f5efdd1b",
                                                                                     new Date(1553013207273L));
            CertificateEnrollment certificateenrollment3 = new CertificateEnrollment("n-].X-?]",
                                                                                     new Date(1553013205696L),
                                                                                     "a143ddaa-e4e7-4c63-8936-d6ff1f177663",
                                                                                     CertificateEnrollmentEnrollResult.getDefault(),
                                                                                     CertificateEnrollmentEnrollStatus.getDefault(),
                                                                                     "5d51a816-565f-4189-84c8-a2d3106c57ac",
                                                                                     new Date(1553013212607L));
            assertNotNull(certificateenrollment1);
            assertNotNull(certificateenrollment2);
            assertNotNull(certificateenrollment3);
            assertNotSame(certificateenrollment2, certificateenrollment1);
            assertNotSame(certificateenrollment3, certificateenrollment1);
            assertEquals(certificateenrollment2, certificateenrollment1);
            assertEquals(certificateenrollment2, certificateenrollment1);
            assertEquals(certificateenrollment1, certificateenrollment2);
            assertEquals(certificateenrollment1, certificateenrollment1);
            assertFalse(certificateenrollment1.equals(null));
            assertNotEquals(certificateenrollment3, certificateenrollment1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
