// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model ParentAccount.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestParentAccount {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("a3d5a531-5f59-4c2b-9366-9acf6419e20e",
                                                             "afea2d32-357d-419b-9e86-56251d60686d",
                                                             "7b538c7a-8054-451c-8248-3912e8216f46");
            ParentAccount parentaccount2 = parentaccount1.clone();
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotSame(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("89ba5fee-04b8-4b06-be2a-ee5646336b49",
                                                             "c6c5c9bc-3749-4f47-8cfe-3336db5a0b5b",
                                                             "691e9654-8ddc-45e3-a93c-88275c025212");
            ParentAccount parentaccount2 = new ParentAccount("89ba5fee-04b8-4b06-be2a-ee5646336b49",
                                                             "c6c5c9bc-3749-4f47-8cfe-3336db5a0b5b",
                                                             "691e9654-8ddc-45e3-a93c-88275c025212");
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotSame(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount2.hashCode(), parentaccount1.hashCode());
            int hashCode = parentaccount1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, parentaccount1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ParentAccount parentaccount = new ParentAccount("d365cf55-32ea-4701-b999-20ace37aa225",
                                                        "c0181de5-8ac0-4d55-b9b5-ccbefabdaa8d",
                                                        "972c3871-64d1-40fb-a621-f834a2d8bf1f");
        assertTrue(parentaccount.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ParentAccount parentaccount1 = new ParentAccount("ceb85975-9663-4694-b062-722c64830ebc",
                                                             "e2029e20-c8f1-4dcc-8238-9bcc22be27d8",
                                                             "c6a2b7f1-ba58-4532-a0cd-0298b648d352");
            ParentAccount parentaccount2 = new ParentAccount("ceb85975-9663-4694-b062-722c64830ebc",
                                                             "e2029e20-c8f1-4dcc-8238-9bcc22be27d8",
                                                             "c6a2b7f1-ba58-4532-a0cd-0298b648d352");
            ParentAccount parentaccount3 = new ParentAccount("633e8c0a-377a-4a7a-acdd-b9a55e4fecc7",
                                                             "f24f5fe3-b8d3-4c35-a03d-6ed55a2fd179",
                                                             "b447277b-548f-48d6-9969-d1b36a5636a0");
            assertNotNull(parentaccount1);
            assertNotNull(parentaccount2);
            assertNotNull(parentaccount3);
            assertNotSame(parentaccount2, parentaccount1);
            assertNotSame(parentaccount3, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount2, parentaccount1);
            assertEquals(parentaccount1, parentaccount2);
            assertEquals(parentaccount1, parentaccount1);
            assertFalse(parentaccount1.equals(null));
            assertNotEquals(parentaccount3, parentaccount1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
