// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.security.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeveloperCertificate.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeveloperCertificate {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("80e8073a-f285-446d-bf21-6d8c14af70a1",
                                                                                  "8f20c533-c769-45a6-9f80-ab04aa8d9965",
                                                                                  new Date(1553592029141L),
                                                                                  "32af9399-7ced-464a-b8ee-06842f793dff",
                                                                                  "b240233a-cf71-4fa5-aa89-69f106c73b95",
                                                                                  "2c681912-7ded-4c6a-9b53-93d524d6baa2",
                                                                                  "336ce91e-e2fc-4e2f-a4a4-7e756d7f66ee");
            DeveloperCertificate developercertificate2 = developercertificate1.clone();
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("14a5cc34-1eee-42a5-9bee-8320c35f850b",
                                                                                  "dbcdcf75-7b7d-49af-ac1d-f4dda02a06d0",
                                                                                  new Date(1553592030682L),
                                                                                  "166865a9-a5ac-47aa-b4ea-3401a8823040",
                                                                                  "679fb812-ba28-4218-a2c7-85c24cecd7ea",
                                                                                  "8acbca91-836a-4fd4-a68a-b3bf13d4a8f3",
                                                                                  "b1161a7b-a2c6-4cb4-ae58-a6c449d1cdcc");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("14a5cc34-1eee-42a5-9bee-8320c35f850b",
                                                                                  "dbcdcf75-7b7d-49af-ac1d-f4dda02a06d0",
                                                                                  new Date(1553592030682L),
                                                                                  "166865a9-a5ac-47aa-b4ea-3401a8823040",
                                                                                  "679fb812-ba28-4218-a2c7-85c24cecd7ea",
                                                                                  "8acbca91-836a-4fd4-a68a-b3bf13d4a8f3",
                                                                                  "b1161a7b-a2c6-4cb4-ae58-a6c449d1cdcc");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotSame(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2.hashCode(), developercertificate1.hashCode());
            int hashCode = developercertificate1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, developercertificate1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeveloperCertificate developercertificate = new DeveloperCertificate("bde93939-24ab-4187-982a-10c3acc676e2",
                                                                             "7570bc54-c7d3-417d-b485-96a14a5770e2",
                                                                             new Date(1553592030017L),
                                                                             "a0f6260a-c02d-44ad-be1d-88635ca7b172",
                                                                             "17482dc8-dd83-4fe0-9f0f-93c2b2f3812e",
                                                                             "591a435c-d8d7-4265-8e86-22453778c88f",
                                                                             "d6e73e14-155d-4cdd-aa4d-1931f506c283");
        assertTrue(developercertificate.isValid());
        DeveloperCertificate developercertificateInvalid = new DeveloperCertificate("abd70ab1-e408-4312-8815-6386499061b6",
                                                                                    "25f01a03-4177-4a5a-a47f-a92510afd2a4",
                                                                                    new Date(1553592026767L),
                                                                                    "d9ef26dc-5ea5-487d-90de-15e26e5c0f83",
                                                                                    "25439035-0d78-47b6-85a8-70b31c23316b",
                                                                                    null,
                                                                                    "a47eb6db-9c25-456e-9fcf-dda9489c93a8");
        assertFalse(developercertificateInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeveloperCertificate developercertificate1 = new DeveloperCertificate("23a24f53-9c78-4ad5-8e20-50143b3327e8",
                                                                                  "ea3df2c9-df93-4130-8a49-f653e1394813",
                                                                                  new Date(1553592030463L),
                                                                                  "2cd73514-c400-49e8-8661-a6dd3a6b05e2",
                                                                                  "bb3813bb-0c16-4b7e-bbdc-a9f36797b5a1",
                                                                                  "1603a5c3-5f29-48f3-a7ac-aa03d398dcb1",
                                                                                  "6242f9d6-f4a8-4dd8-a251-6339affab641");
            DeveloperCertificate developercertificate2 = new DeveloperCertificate("23a24f53-9c78-4ad5-8e20-50143b3327e8",
                                                                                  "ea3df2c9-df93-4130-8a49-f653e1394813",
                                                                                  new Date(1553592030463L),
                                                                                  "2cd73514-c400-49e8-8661-a6dd3a6b05e2",
                                                                                  "bb3813bb-0c16-4b7e-bbdc-a9f36797b5a1",
                                                                                  "1603a5c3-5f29-48f3-a7ac-aa03d398dcb1",
                                                                                  "6242f9d6-f4a8-4dd8-a251-6339affab641");
            DeveloperCertificate developercertificate3 = new DeveloperCertificate("40b72060-9d91-47af-b6ee-6e0311b2f935",
                                                                                  "41dc6378-a6c9-4fdf-aa65-90e887efd929",
                                                                                  new Date(1553592027395L),
                                                                                  "2b2c9fc3-719c-496c-a8c7-b25a3a5ded67",
                                                                                  "997e8f16-9313-4479-bf53-cef705b796b9",
                                                                                  "b70f0595-f248-47cb-8e85-0f0d6ab88c17",
                                                                                  "a26df1ce-6a4c-4d0a-b60d-d7ef6b4023d0");
            assertNotNull(developercertificate1);
            assertNotNull(developercertificate2);
            assertNotNull(developercertificate3);
            assertNotSame(developercertificate2, developercertificate1);
            assertNotSame(developercertificate3, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate2, developercertificate1);
            assertEquals(developercertificate1, developercertificate2);
            assertEquals(developercertificate1, developercertificate1);
            assertFalse(developercertificate1.equals(null));
            assertNotEquals(developercertificate3, developercertificate1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
