// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.devices.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model DeviceEvents.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestDeviceEvents {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1553592027402L), null,
                                                          new Date(1553592024518L),
                                                          "62ff1594-2fb7-4093-8ff1-b9e4ba5a5543",
                                                          "697119d6-41f5-465d-91f4-0ad2d438d9bc",
                                                          "8070b22a-b790-4027-9095-c4bdab419190",
                                                          "20d353f7-3528-484d-b9ca-21970e0e923b",
                                                          "c9c6348f-bdca-40d3-8078-1999b0cd2270",
                                                          "3437e02c-68aa-4db4-8bd2-b280dce76ced", Boolean.TRUE);
            DeviceEvents deviceevents2 = deviceevents1.clone();
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1553592026295L), null,
                                                          new Date(1553592023865L),
                                                          "aa313e20-0680-4b55-952c-64e508655d77",
                                                          "9f080bbd-fe83-4c65-8cdf-393b7a9134c1",
                                                          "6eb97293-8968-4d4a-84ae-f99d4d8734ae",
                                                          "c2929841-4722-4da7-9363-ee2d7d0d7199",
                                                          "e832e24f-abba-48f0-b116-c69c7cbe2a25",
                                                          "a701e642-2361-4675-b62b-29aa2984cd35", Boolean.FALSE);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1553592026295L), null,
                                                          new Date(1553592023865L),
                                                          "aa313e20-0680-4b55-952c-64e508655d77",
                                                          "9f080bbd-fe83-4c65-8cdf-393b7a9134c1",
                                                          "6eb97293-8968-4d4a-84ae-f99d4d8734ae",
                                                          "c2929841-4722-4da7-9363-ee2d7d0d7199",
                                                          "e832e24f-abba-48f0-b116-c69c7cbe2a25",
                                                          "a701e642-2361-4675-b62b-29aa2984cd35", Boolean.FALSE);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotSame(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2.hashCode(), deviceevents1.hashCode());
            int hashCode = deviceevents1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, deviceevents1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        DeviceEvents deviceevents = new DeviceEvents(null, new Date(1553592028072L), null, new Date(1553592031590L),
                                                     "500d55d7-80bc-4c29-8067-d0ad8ed08913",
                                                     "49326fb6-05bb-4131-a0d3-e5ae455b0c1a",
                                                     "d1ce8b99-cc68-4954-a577-d9f9c9c1a75e",
                                                     "d87bc694-2fe7-4875-ab6c-67c16ca73d70",
                                                     "3f79bf94-8cc6-4b2f-98fa-e6b7dc76d5ec",
                                                     "06c28071-123d-4005-a358-a8bab3532690", Boolean.FALSE);
        assertTrue(deviceevents.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            DeviceEvents deviceevents1 = new DeviceEvents(null, new Date(1553592024285L), null,
                                                          new Date(1553592028546L),
                                                          "32842893-8a61-49ec-932f-098c4660caf4",
                                                          "9f6f7052-85b9-43a3-bdc6-2195868175f1",
                                                          "17363c5b-a1b0-4930-a225-04f176eac4b5",
                                                          "7893f635-8258-4d1c-9920-0a50be383bbf",
                                                          "72a30b28-cf9b-4faf-a111-f1cb58e22f47",
                                                          "c69ef8dd-158a-4d67-8f84-49030f289ef3", Boolean.FALSE);
            DeviceEvents deviceevents2 = new DeviceEvents(null, new Date(1553592024285L), null,
                                                          new Date(1553592028546L),
                                                          "32842893-8a61-49ec-932f-098c4660caf4",
                                                          "9f6f7052-85b9-43a3-bdc6-2195868175f1",
                                                          "17363c5b-a1b0-4930-a225-04f176eac4b5",
                                                          "7893f635-8258-4d1c-9920-0a50be383bbf",
                                                          "72a30b28-cf9b-4faf-a111-f1cb58e22f47",
                                                          "c69ef8dd-158a-4d67-8f84-49030f289ef3", Boolean.FALSE);
            DeviceEvents deviceevents3 = new DeviceEvents(null, new Date(1553592022620L), null,
                                                          new Date(1553592029892L),
                                                          "3d7578b1-a029-4b3f-aec6-d98e2a9f6735",
                                                          "bacd7de1-e56a-4dc2-ae99-9b44bb145d01",
                                                          "a9ee2b0a-d0ce-42f8-a95b-95e9cada288d",
                                                          "93fb8566-47e6-4f05-aea4-40d42e3ca429",
                                                          "8b6d6067-8ac5-4418-beee-5d0931ef6349",
                                                          "a088cd07-fdc4-4de0-9e57-a5dde0bd89b3", Boolean.FALSE);
            assertNotNull(deviceevents1);
            assertNotNull(deviceevents2);
            assertNotNull(deviceevents3);
            assertNotSame(deviceevents2, deviceevents1);
            assertNotSame(deviceevents3, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents2, deviceevents1);
            assertEquals(deviceevents1, deviceevents2);
            assertEquals(deviceevents1, deviceevents1);
            assertFalse(deviceevents1.equals(null));
            assertNotEquals(deviceevents3, deviceevents1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
