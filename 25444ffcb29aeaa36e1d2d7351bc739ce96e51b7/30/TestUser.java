// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model User.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestUser {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            User user1 = new User("d1c45fe1-7fc9-497f-a5b7-caf800d73f74", null, "f45a4dac-6156-4c10-9600-0fdd445bf009",
                                  new Date(1553592025974L), 66, null, "0198c308-a899-4d40-a65c-1ae5321471fe", true,
                                  "de925cd2-44e0-4381-b912-5d23f9078e3b", "ace32769-65bc-41b6-88d9-c6375941c99c", 111,
                                  null, null, true, "2be05235-bdc9-4888-9e20-7deb3f8319fd", -4,
                                  "553feb5f-7294-4abb-936f-d72b06eab9f6", UserStatus.getDefault(), true, null, false,
                                  new Date(1553592030882L), "3ebc8cad-8e3f-4ce7-a2ae-54392149d492");
            User user2 = user1.clone();
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotSame(user2, user1);
            assertEquals(user2, user1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            User user1 = new User("cf90ecfa-6e65-4b63-b2e9-81dcb71461f3", null, "d486924b-e987-4213-b1c6-c43303742e9d",
                                  new Date(1553592023952L), -37, null, "9644d1e3-0243-4f50-b9b6-58d955460e5b", true,
                                  "d87a24f9-840f-427a-aa9c-5da0be03e23f", "742c36a2-d25d-49e2-bf3a-0ae367f24dcd", 40,
                                  null, null, false, "3f795a94-b567-4d48-b84d-3144f25bd2b0", 21,
                                  "95859af9-84cf-4de4-868f-885c8049c124", UserStatus.getDefault(), false, null, true,
                                  new Date(1553592030219L), "15a63b0b-a7d1-459b-8df7-e6bbbd9afb47");
            User user2 = new User("cf90ecfa-6e65-4b63-b2e9-81dcb71461f3", null, "d486924b-e987-4213-b1c6-c43303742e9d",
                                  new Date(1553592023952L), -37, null, "9644d1e3-0243-4f50-b9b6-58d955460e5b", true,
                                  "d87a24f9-840f-427a-aa9c-5da0be03e23f", "742c36a2-d25d-49e2-bf3a-0ae367f24dcd", 40,
                                  null, null, false, "3f795a94-b567-4d48-b84d-3144f25bd2b0", 21,
                                  "95859af9-84cf-4de4-868f-885c8049c124", UserStatus.getDefault(), false, null, true,
                                  new Date(1553592030219L), "15a63b0b-a7d1-459b-8df7-e6bbbd9afb47");
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotSame(user2, user1);
            assertEquals(user2, user1);
            assertEquals(user2.hashCode(), user1.hashCode());
            int hashCode = user1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, user1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        User user = new User("c728fda1-add5-40b9-9240-39b199b9242c", null, "3d567ab5-d6ec-44bd-9990-e863f6e61998",
                             new Date(1553592023072L), -32, null, "1fb9b92d-936c-4ef7-9982-16e5a16d0f09", true,
                             "33e4b3fd-dc56-4690-bab6-d5bc9af3475d", "7646809d-74c0-4503-be85-5e505230f2f7", -116, null,
                             null, true, "4770760d-57e4-41ea-9c03-4fb19f3f13d2", 98,
                             "5abc6ee5-7cdf-49e7-92af-94f224b9fe79", UserStatus.getDefault(), true, null, false,
                             new Date(1553592025468L), "112ee8b1-e3c5-445e-b141-7c112ef429ba");
        assertTrue(user.isValid());
        User userInvalid = new User("26456555-16e4-44d1-a701-772b758cf2d1", null,
                                    "326f9f4d-c7e6-42ce-9afa-b2962eb35f5d", new Date(1553592024693L), -78, null, null,
                                    true, "ad20cb2c-b747-4227-802f-e1835a83b0ec",
                                    "11da652e-8e1f-4bde-823e-1a4f92e8eb55", 2, null, null, false,
                                    "266ca53f-dbd8-4086-83dc-845a7901d892", 42, "3fc0af23-9bb6-4382-8ade-88b5aac5567d",
                                    UserStatus.getDefault(), false, null, false, new Date(1553592025034L),
                                    "8c57a2ec-744c-4df6-81e8-d499087d886b");
        assertFalse(userInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            User user1 = new User("b06562a6-d9c3-4446-bb4a-b7bbace927c0", null, "2cd0f18c-e8e2-4905-8b38-ea97a4303789",
                                  new Date(1553592027000L), 13, null, "de371e1b-090c-4d1f-887b-7e7a0ca89bcc", true,
                                  "a382ea11-a605-45e1-968f-82714fd9b752", "4a309b20-c478-47dc-bd0c-83cfe70721b2", 41,
                                  null, null, false, "00286351-6552-4a85-bb80-a87b2a5b85e5", 75,
                                  "65d1aa76-39a0-47ed-a4c2-b5f3c7a93120", UserStatus.getDefault(), true, null, false,
                                  new Date(1553592029715L), "33adf0ff-8734-4ab1-b015-b9147c395657");
            User user2 = new User("b06562a6-d9c3-4446-bb4a-b7bbace927c0", null, "2cd0f18c-e8e2-4905-8b38-ea97a4303789",
                                  new Date(1553592027000L), 13, null, "de371e1b-090c-4d1f-887b-7e7a0ca89bcc", true,
                                  "a382ea11-a605-45e1-968f-82714fd9b752", "4a309b20-c478-47dc-bd0c-83cfe70721b2", 41,
                                  null, null, false, "00286351-6552-4a85-bb80-a87b2a5b85e5", 75,
                                  "65d1aa76-39a0-47ed-a4c2-b5f3c7a93120", UserStatus.getDefault(), true, null, false,
                                  new Date(1553592029715L), "33adf0ff-8734-4ab1-b015-b9147c395657");
            User user3 = new User("9921e933-b7a2-470a-844a-1a36759fd149", null, "44586b15-df8a-4625-8261-55d5be63fb30",
                                  new Date(1553592024995L), -57, null, "04fa3dc4-5966-4572-98c5-a90e78e01fc9", true,
                                  "bf20060c-acc0-493e-b416-b1a2966c8b66", "94574f82-e669-48dd-b8f7-b920266a2de4", -41,
                                  null, null, false, "2a9714e3-259a-4f4f-b701-005864e6ebbb", -53,
                                  "3852706b-2438-43c8-9478-a4a212632bfa", UserStatus.getDefault(), true, null, false,
                                  new Date(1553592025092L), "dbc2799f-ee58-4463-a241-fdb93e52a913");
            assertNotNull(user1);
            assertNotNull(user2);
            assertNotNull(user3);
            assertNotSame(user2, user1);
            assertNotSame(user3, user1);
            assertEquals(user2, user1);
            assertEquals(user2, user1);
            assertEquals(user1, user2);
            assertEquals(user1, user1);
            assertFalse(user1.equals(null));
            assertNotEquals(user3, user1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
