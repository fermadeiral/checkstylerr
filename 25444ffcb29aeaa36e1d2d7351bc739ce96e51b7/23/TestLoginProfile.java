// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import org.junit.Test;

/**
 * Unit tests for Model LoginProfile.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestLoginProfile {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            LoginProfile loginprofile1 = new LoginProfile("1631133c-8137-4905-a667-57522b3870d7",
                                                          "0900202e-0095-46df-888d-4e779e9c74ca");
            LoginProfile loginprofile2 = loginprofile1.clone();
            assertNotNull(loginprofile1);
            assertNotNull(loginprofile2);
            assertNotSame(loginprofile2, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            LoginProfile loginprofile1 = new LoginProfile("48fdd64b-9b89-4abb-9a8d-278c4504e5d4",
                                                          "118df0b2-f3e9-47ae-864f-3a4a2f151450");
            LoginProfile loginprofile2 = new LoginProfile("48fdd64b-9b89-4abb-9a8d-278c4504e5d4",
                                                          "118df0b2-f3e9-47ae-864f-3a4a2f151450");
            assertNotNull(loginprofile1);
            assertNotNull(loginprofile2);
            assertNotSame(loginprofile2, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
            assertEquals(loginprofile2.hashCode(), loginprofile1.hashCode());
            int hashCode = loginprofile1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, loginprofile1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        LoginProfile loginprofile = new LoginProfile("7ada8955-4649-4471-963d-f3f61ca55462",
                                                     "6835282e-b7a6-42af-861b-6bd480a2e986");
        assertTrue(loginprofile.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            LoginProfile loginprofile1 = new LoginProfile("723a279c-0cf6-47bd-be14-798d49a4987c",
                                                          "4359bc3e-3c90-4ab1-86b7-67ac8fe94df8");
            LoginProfile loginprofile2 = new LoginProfile("723a279c-0cf6-47bd-be14-798d49a4987c",
                                                          "4359bc3e-3c90-4ab1-86b7-67ac8fe94df8");
            LoginProfile loginprofile3 = new LoginProfile("2a0e4da9-d453-4387-a67c-395daa25a6b6",
                                                          "f9533c12-b4c7-423c-9d9b-a8dc80956e1b");
            assertNotNull(loginprofile1);
            assertNotNull(loginprofile2);
            assertNotNull(loginprofile3);
            assertNotSame(loginprofile2, loginprofile1);
            assertNotSame(loginprofile3, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
            assertEquals(loginprofile2, loginprofile1);
            assertEquals(loginprofile1, loginprofile2);
            assertEquals(loginprofile1, loginprofile1);
            assertFalse(loginprofile1.equals(null));
            assertNotEquals(loginprofile3, loginprofile1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
