// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model SubtenantUser.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestSubtenantUser {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("d7c58bd5-1021-436c-bc90-a63604f386b7", null,
                                                             "acc853c9-b6fa-44da-9ce6-a2ab63886812",
                                                             new Date(1553592031360L), 3, null,
                                                             "77cbd126-7b4c-4a86-906a-d31663cedfd5", true,
                                                             "e8f98f74-7805-4558-b3f6-a91533e7b9b1",
                                                             "7d0cb83a-8a8e-46b8-857b-5593256a3a8a", -1, null, null,
                                                             false, "73159602-178d-47ba-ad65-c6e3beb4fd6d", 15,
                                                             "674bcf82-940f-43f1-a1fc-885bd201c82e",
                                                             SubtenantUserStatus.getDefault(), true, null, true,
                                                             new Date(1553592028841L),
                                                             "0cae3d8d-d454-479f-a16a-7d8518f98e43");
            SubtenantUser subtenantuser2 = subtenantuser1.clone();
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("2072e44c-b507-4487-a3f7-70a4e2ce345d", null,
                                                             "da71801e-3ca1-4ba5-9820-364d385d2619",
                                                             new Date(1553592031117L), 3, null,
                                                             "b6260b30-0cff-414b-906b-0d577f2c414e", false,
                                                             "bcb94b2c-5378-4d17-83b9-fd5229ca3cbe",
                                                             "c71653f9-e92e-40c8-925d-2579b991b680", -108, null, null,
                                                             false, "351874c4-ca91-4b64-a985-2a4f5294c05d", -67,
                                                             "1a7f3d8b-3738-4f9e-a065-719a601ce49a",
                                                             SubtenantUserStatus.getDefault(), false, null, true,
                                                             new Date(1553592024764L),
                                                             "16723aa8-81bd-4c84-8554-964b1808799c");
            SubtenantUser subtenantuser2 = new SubtenantUser("2072e44c-b507-4487-a3f7-70a4e2ce345d", null,
                                                             "da71801e-3ca1-4ba5-9820-364d385d2619",
                                                             new Date(1553592031117L), 3, null,
                                                             "b6260b30-0cff-414b-906b-0d577f2c414e", false,
                                                             "bcb94b2c-5378-4d17-83b9-fd5229ca3cbe",
                                                             "c71653f9-e92e-40c8-925d-2579b991b680", -108, null, null,
                                                             false, "351874c4-ca91-4b64-a985-2a4f5294c05d", -67,
                                                             "1a7f3d8b-3738-4f9e-a065-719a601ce49a",
                                                             SubtenantUserStatus.getDefault(), false, null, true,
                                                             new Date(1553592024764L),
                                                             "16723aa8-81bd-4c84-8554-964b1808799c");
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2.hashCode(), subtenantuser1.hashCode());
            int hashCode = subtenantuser1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, subtenantuser1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        SubtenantUser subtenantuser = new SubtenantUser("d39ac3bb-4e3f-41f9-ab5d-0bb1a74a483b", null,
                                                        "4e2691a2-cb6e-4842-aa81-3f68087286ab",
                                                        new Date(1553592030349L), -65, null,
                                                        "2f6061d6-9f4b-4036-9ad8-3c2ea37fd1ab", true,
                                                        "3478b85f-d60c-4728-bbd5-fe658f4ec891",
                                                        "c1f981da-8518-4519-9616-e7daf5f255e6", 39, null, null, true,
                                                        "b92a0b8d-ad1a-441b-a1c6-109581f6f174", -83,
                                                        "01a9a09a-0719-4193-acdf-56e0a35c92a4",
                                                        SubtenantUserStatus.getDefault(), true, null, false,
                                                        new Date(1553592032477L),
                                                        "551005bd-9d2a-4486-a481-68b1b156204e");
        assertTrue(subtenantuser.isValid());
        SubtenantUser subtenantuserInvalid = new SubtenantUser(null, null, "4b868281-9956-4374-bb1d-9393dbbe364d",
                                                               new Date(1553592023416L), -2, null, null, true,
                                                               "fdbcd852-d6a2-429d-9701-f4f80a1919ed",
                                                               "3f4796bd-7bea-40b7-b722-19782dc41879", -96, null, null,
                                                               false, "f11cdf89-0420-45be-9009-25118f661d0f", -39,
                                                               "e19fdf12-f372-43f0-b7bf-84a26924714f",
                                                               SubtenantUserStatus.getDefault(), true, null, true,
                                                               new Date(1553592029448L),
                                                               "7a798425-e2c3-41bb-bf1a-3ace745e8d8d");
        assertFalse(subtenantuserInvalid.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            SubtenantUser subtenantuser1 = new SubtenantUser("766b0cff-d5cf-42e2-a2a0-31bfabbb5d69", null,
                                                             "13767b69-7dec-41e0-af37-c518c45c7176",
                                                             new Date(1553592030953L), 59, null,
                                                             "5729c164-66e5-4fd6-beba-ad7f0cfeee69", false,
                                                             "80f15b71-77ac-4fb3-a2be-1bb834e384c4",
                                                             "97465823-7900-487d-b808-072e6fcc52e7", -46, null, null,
                                                             true, "253df601-93cd-4dcc-ac81-f63d3c17ad0d", 73,
                                                             "c8ed6468-4531-46a3-b3d3-d3aea8e304b0",
                                                             SubtenantUserStatus.getDefault(), false, null, false,
                                                             new Date(1553592023522L),
                                                             "8e53674a-5245-4807-b6df-2d1e99fe829e");
            SubtenantUser subtenantuser2 = new SubtenantUser("766b0cff-d5cf-42e2-a2a0-31bfabbb5d69", null,
                                                             "13767b69-7dec-41e0-af37-c518c45c7176",
                                                             new Date(1553592030953L), 59, null,
                                                             "5729c164-66e5-4fd6-beba-ad7f0cfeee69", false,
                                                             "80f15b71-77ac-4fb3-a2be-1bb834e384c4",
                                                             "97465823-7900-487d-b808-072e6fcc52e7", -46, null, null,
                                                             true, "253df601-93cd-4dcc-ac81-f63d3c17ad0d", 73,
                                                             "c8ed6468-4531-46a3-b3d3-d3aea8e304b0",
                                                             SubtenantUserStatus.getDefault(), false, null, false,
                                                             new Date(1553592023522L),
                                                             "8e53674a-5245-4807-b6df-2d1e99fe829e");
            SubtenantUser subtenantuser3 = new SubtenantUser("2968af92-ba16-4ad2-b40c-127bd75013f6", null,
                                                             "c208a46b-785a-4ee2-84f2-f153cd811e03",
                                                             new Date(1553592023847L), 114, null,
                                                             "f7c08ffd-fa6a-49ce-a987-6331f4a57950", false,
                                                             "661e0db1-678d-497b-b681-5323b6e10092",
                                                             "b73f6c17-f2ae-4432-ad25-ebadd93bf1aa", -13, null, null,
                                                             true, "5e385508-d0de-4dd4-9736-7619125f53f0", -3,
                                                             "93436ba2-2faf-482b-a501-77e64c352199",
                                                             SubtenantUserStatus.getDefault(), false, null, false,
                                                             new Date(1553592031313L),
                                                             "4059e410-6796-4af9-a54d-d6990e63cfbc");
            assertNotNull(subtenantuser1);
            assertNotNull(subtenantuser2);
            assertNotNull(subtenantuser3);
            assertNotSame(subtenantuser2, subtenantuser1);
            assertNotSame(subtenantuser3, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser2, subtenantuser1);
            assertEquals(subtenantuser1, subtenantuser2);
            assertEquals(subtenantuser1, subtenantuser1);
            assertFalse(subtenantuser1.equals(null));
            assertNotEquals(subtenantuser3, subtenantuser1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
