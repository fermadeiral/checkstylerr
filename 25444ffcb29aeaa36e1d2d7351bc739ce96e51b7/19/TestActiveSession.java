// This file was generated by the Pelion SDK foundation code generator.
// This is an autogenerated unit test class. Do not modify its content as modifications will be lost at next code generation.
package com.arm.mbed.cloud.sdk.accounts.model;

import static org.junit.Assert.*;

import java.util.Date;
import org.junit.Test;

/**
 * Unit tests for Model ActiveSession.
 */
@SuppressWarnings("PMD.AvoidDuplicateLiterals")
public class TestActiveSession {
    /**
     * Tests the clone method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testClone() {
        try {
            ActiveSession activesession1 = new ActiveSession("3f7ac520-3e0b-4a06-8c71-25558363484b",
                                                             "8e58747e-6f50-49c9-bfc9-106b2d7f96c4",
                                                             new Date(1553592024622L),
                                                             "63feb102-6167-4834-bbc0-fcd2ba9cc0e9",
                                                             "e3b7f767-db04-4365-a846-2c8e85de191e");
            ActiveSession activesession2 = activesession1.clone();
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotSame(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the hashCode method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testHashCode() {
        try {
            ActiveSession activesession1 = new ActiveSession("7c0c51a6-6a03-4d1d-91a8-be1d20b14f9b",
                                                             "e2b0d476-86f0-434a-9738-bf4720a572a1",
                                                             new Date(1553592027834L),
                                                             "5a3261b8-0c9a-4aa7-8224-a96e8819861b",
                                                             "3772c090-6fe6-446b-8609-d81c9a3fd2ac");
            ActiveSession activesession2 = new ActiveSession("7c0c51a6-6a03-4d1d-91a8-be1d20b14f9b",
                                                             "e2b0d476-86f0-434a-9738-bf4720a572a1",
                                                             new Date(1553592027834L),
                                                             "5a3261b8-0c9a-4aa7-8224-a96e8819861b",
                                                             "3772c090-6fe6-446b-8609-d81c9a3fd2ac");
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotSame(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession2.hashCode(), activesession1.hashCode());
            int hashCode = activesession1.hashCode();
            for (int i = 0; i < 5; i++) {
                assertEquals(hashCode, activesession1.hashCode());
            }
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }

    /**
     * Tests the isValid method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testIsValid() {
        ActiveSession activesession = new ActiveSession("893dfe55-6d45-4995-84e6-d9a54c0a0e33",
                                                        "4b9da270-c14b-4e08-a5ab-87a1eeb3b5ce",
                                                        new Date(1553592025433L),
                                                        "6d1291f2-dcc2-430d-b731-1196f19c9f14",
                                                        "a2fad3fd-1500-4c2d-b5a2-d316e8a1a7a5");
        assertTrue(activesession.isValid());
    }

    /**
     * Tests the equals method.
     */
    @SuppressWarnings("resource")
    @Test
    public void testEquals() {
        try {
            ActiveSession activesession1 = new ActiveSession("4916b416-42e7-4e6f-8269-4d56a07582d3",
                                                             "ef30f1d5-ea95-4027-8af9-61d57a7ee161",
                                                             new Date(1553592025622L),
                                                             "04f083f1-afb1-41c0-9ad5-50689167b42a",
                                                             "3d4f25bb-2a03-4a89-8e96-2fe876b0792c");
            ActiveSession activesession2 = new ActiveSession("4916b416-42e7-4e6f-8269-4d56a07582d3",
                                                             "ef30f1d5-ea95-4027-8af9-61d57a7ee161",
                                                             new Date(1553592025622L),
                                                             "04f083f1-afb1-41c0-9ad5-50689167b42a",
                                                             "3d4f25bb-2a03-4a89-8e96-2fe876b0792c");
            ActiveSession activesession3 = new ActiveSession("c43ee9c7-f077-4790-aebe-d3dc46dc75e6",
                                                             "979a9198-0132-4f69-a527-bd8d6ae0247c",
                                                             new Date(1553592029742L),
                                                             "491ddcd4-4698-49d9-9d30-318a2b2843f5",
                                                             "78a91076-4c76-4469-b389-4a10017db1e2");
            assertNotNull(activesession1);
            assertNotNull(activesession2);
            assertNotNull(activesession3);
            assertNotSame(activesession2, activesession1);
            assertNotSame(activesession3, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession2, activesession1);
            assertEquals(activesession1, activesession2);
            assertEquals(activesession1, activesession1);
            assertFalse(activesession1.equals(null));
            assertNotEquals(activesession3, activesession1);
        } catch (Exception exception) {
            fail(exception.getMessage());
        }
    }
}
